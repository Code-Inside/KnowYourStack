{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework August 2020 Security and Quality Rollup Updates","PublishedOn":"2020-08-11T18:58:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the August 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-1476– .NET Framework Elevation of Privilege Vulnerability\nAn elevation of privilege...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-august-2020-security-and-quality-rollup-updates/","RawContent":null},{"Title":".NET Core August 2020 Updates – 2.1.21 and 3.1.7","PublishedOn":"2020-08-11T17:46:17+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core August 2020 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated...","Href":"https://devblogs.microsoft.com/dotnet/net-core-august-2020/","RawContent":null},{"Title":".NET Framework July 2020 Cumulative Update Preview for Windows 10, version 2004","PublishedOn":"2020-07-31T17:42:59+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the July 2020 Cumulative Update Preview for .NET Framework 3.5 and 4.8 on Windows 10, version 2004.\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/","RawContent":null},{"Title":"Learn about the latest .NET Productivity features","PublishedOn":"2020-07-29T17:15:56+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"The .NET Productivity team (a.k.a. Roslyn) is constantly thinking of new ways to make .NET developers more productive. We’ve been working hard to take the feedback you’ve sent us and turn it into...","Href":"https://devblogs.microsoft.com/dotnet/learn-about-the-latest-net-productivity-features/","RawContent":null},{"Title":".NET Framework July 2020 Cumulative Update Preview","PublishedOn":"2020-07-21T21:10:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2020 Cumulative Update Preview Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/","RawContent":null},{"Title":"Announcing Entity Framework Core EF Core 5.0 Preview 7","PublishedOn":"2020-07-21T16:54:05+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, the Entity Framework Core team announces the seventh preview release of EF Core 5.0.\nThis release includes a factory to create DbContext instances, the ability to reset DbContext state, Cosmos...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-ef-core-5-0-preview-7/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 7","PublishedOn":"2020-07-21T16:19:39+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 7. It&#8217;s the second to last of the preview releases (before moving to RC). Most features should be very close to done at this point. Single file and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-7/","RawContent":null},{"Title":".NET Framework July 2020 Security and Quality Rollup Updates","PublishedOn":"2020-07-14T17:19:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On July 23, 2020, updates KB4565616 v2, KB4565623 v2, KB4565636 v2, KB4565583 v2, KB4565586 v2 and KB4565589 v2 were released to replace v1 of those updates for .NET Framework 4.5.2, 4.6, 4.6.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/","RawContent":null},{"Title":".NET Core July 2020 Updates – 2.1.20 and 3.1.6","PublishedOn":"2020-07-14T17:16:17+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2020 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nSecurity\nCVE-2020-1147:...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2020/","RawContent":null},{"Title":"Performance Improvements in .NET 5","PublishedOn":"2020-07-13T10:54:25+00:00","CommentsCount":59,"FacebookCount":0,"Summary":"In previous releases of .NET Core, I&#8217;ve blogged about the significant performance improvements that found their way into the release. For each post, from .NET Core 2.0 to .NET Core 2.1 to .NET...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"13172338767","Type":"IssuesEvent","CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Opened issue \"August 2020 .NET Updates\" (#163) at dotnet/announcements","RelatedBody":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"13171712576","Type":"IssuesEvent","CreatedAt":"2020-08-11T17:08:45","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnet/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n"},{"Id":"12929048885","Type":"IssuesEvent","CreatedAt":"2020-07-16T21:51:59","Actor":"clairernovotny","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Opened issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161) at dotnet/announcements","RelatedBody":"Early next week, we are planning to move this repository to dotnet/msbuild as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523"},{"Id":"12902892833","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Opened issue \"July 2020 .NET Updates\" (#160) at dotnet/announcements","RelatedBody":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n\r\n\r\n* .NET Core 3.1.6 and .NET Core SDK 3.1.106 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.20 and .NET Core SDK 2.1.808 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n"},{"Id":"12902701233","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:06:54","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Denial of Service Vulnerability\" (#159) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.4 or SDK 3.1.104 (for Visual Studio 2019 v16.4) or 3.1.202 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n"},{"Id":"12582563527","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Opened issue \"June 2020 .NET Updates\" (#158) at dotnet/announcements","RelatedBody":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n"},{"Id":"12582414995","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:22:17","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.18 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.4 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"13186247229","Type":"PullRequestEvent","CreatedAt":"2020-08-12T23:32:15","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28081","RelatedDescription":"Opened pull request \"Update BuildTools, CoreFx to rc1-05428-07, servicing-29130-02, respectively (release/uwp6.2)\" (#28081) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13185361098","Type":"PullRequestEvent","CreatedAt":"2020-08-12T21:14:43","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28078","RelatedDescription":"Merged pull request \"Merge v3.1.7\" (#28078) at dotnet/coreclr","RelatedBody":"Merge v3.1.7 to release/3.1-crossdac branch.\r\n\r\nThis corresponds to `git merge v3.1.7` and fixing the merge conflicts in `eng\\pipelines\\internal.yml` by ignoring irrelevant release/3.1 changes.\r\n\r\nDo not squash into this branch to make merge commits easier.\r\n\r\nHold off on merging until #28077 is merged/built.\r\n"},{"Id":"13184188361","Type":"PullRequestEvent","CreatedAt":"2020-08-12T18:55:31","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28080","RelatedDescription":"Merged pull request \"Always define bitness in configurecompiler.cmake\" (#28080) at dotnet/coreclr","RelatedBody":"/cc @hoyosjs "},{"Id":"13184184881","Type":"PullRequestEvent","CreatedAt":"2020-08-12T18:55:08","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28080","RelatedDescription":"Opened pull request \"Always define bitness in configurecompiler.cmake\" (#28080) at dotnet/coreclr","RelatedBody":"/cc @hoyosjs "},{"Id":"13175325856","Type":"PullRequestEvent","CreatedAt":"2020-08-12T01:15:38","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28079","RelatedDescription":"Merged pull request \"Fix mirroring of release/3.1 crossdac\" (#28079) at dotnet/coreclr","RelatedBody":""},{"Id":"13175305689","Type":"PullRequestEvent","CreatedAt":"2020-08-12T01:11:49","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28079","RelatedDescription":"Opened pull request \"Release/3.1 crossdac\" (#28079) at dotnet/coreclr","RelatedBody":""},{"Id":"13175116022","Type":"PullRequestEvent","CreatedAt":"2020-08-12T00:33:30","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28077","RelatedDescription":"Merged pull request \"3.1.5/3.1.6 crossdac fixes\" (#28077) at dotnet/coreclr","RelatedBody":"Fix native stack unwind.\r\nMerges v3.1.8 DataTargetReader::AlignBase() fix early\r\n"},{"Id":"13175063923","Type":"PullRequestEvent","CreatedAt":"2020-08-12T00:23:05","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28078","RelatedDescription":"Opened pull request \"Merge v3.1.7\" (#28078) at dotnet/coreclr","RelatedBody":"Merge v3.1.7 to release/3.1-crossdac branch.\r\n\r\nThis corresponds to `git merge v3.1.7` and fixing the merge conflicts in `eng\\pipelines\\internal.yml` by ignoring irrelevant release/3.1 changes.\r\n\r\nDo not squash into this branch to make merge commits easier.\r\n\r\nHold off on merging until #28077 is merged/built.\r\n"},{"Id":"13175007360","Type":"PullRequestEvent","CreatedAt":"2020-08-12T00:12:21","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28077","RelatedDescription":"Opened pull request \"3.1.5/3.1.6 crossdac fixes\" (#28077) at dotnet/coreclr","RelatedBody":"Fix native stack unwind.\r\nMerges v3.1.8 DataTargetReader::AlignBase() fix early\r\n"},{"Id":"13174906257","Type":"PullRequestEvent","CreatedAt":"2020-08-11T23:52:56","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28074","RelatedDescription":"Merged pull request \"[.NET Core 3.1] Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate\" (#28074) at dotnet/coreclr","RelatedBody":"## Summary\r\n\r\nMemory is leaked every time [`Marshal.GetFunctionPointerForDelegate`](https://docs.microsoft.com/dotnet/api/system.runtime.interopservices.marshal.getfunctionpointerfordelegate) is called.\r\n\r\n## Customer impact\r\n\r\nSee https://github.com/dotnet/runtime/issues/353 for user reported issue and impact.\r\n\r\nThere is no workaround.\r\n\r\nUser request for port to .NET Core 3.1 - https://github.com/dotnet/runtime/issues/353#issuecomment-670270129.\r\n\r\n.NET 5 PR: https://github.com/dotnet/runtime/pull/692.\r\n\r\n## Regression\r\n\r\nThis issue is not present in .NET Framework.\r\n\r\n## Testing\r\n\r\nExact code change was ported from .NET Core 5.0 branch. Minimal validation was done for .NET Core 3.x - build and running validation that delegate creation works.\r\n\r\n## Risk\r\n\r\nLow. The code has been in .NET Core pre-Previews and has had lots of time in use. Additionally, since this fix was introduced so early in .NET 5 the runtime code was nearly identical to .NET Core 3.1."},{"Id":"13174720719","Type":"PullRequestEvent","CreatedAt":"2020-08-11T23:17:39","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28068","RelatedDescription":"Merged pull request \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#28068) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13174713466","Type":"PullRequestEvent","CreatedAt":"2020-08-11T23:16:19","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28073","RelatedDescription":"Merged pull request \"[.NET Core 3.1] Don't rely on the built-in interface marshaller during COM activation.\" (#28073) at dotnet/coreclr","RelatedBody":"## Summary\r\n\r\nRelying on the built-in marshaller leverages the Class interface approach which doesn't work for some interface types (e.g. interfaces inheriting from `IDispatch`).\r\n\r\nThis approach is wrong regardless of why given that COM dictates the returned value must be properly cast the specific interface vtable.\r\n\r\nUpdated tests so they would have found this issue.\r\n\r\n## Customer impact\r\n\r\nThis issue manifests most commonly when activating a managed COM server for an interface that inherits from `IDispatch`. This is particularly profound in Office extensions since most inherit from `IDispatch`. The fact that this hasn't been reported seems to imply few customers are authoring Office extensions using .NET Core at present. As .NET 5 releases and adoption increases the assumption would be this issue will become more common.\r\n\r\nThere is no workaround.\r\n\r\nSee https://github.com/dotnet/runtime/issues/38950 for user reported issue.\r\n\r\n.NET 5 PR: https://github.com/dotnet/runtime/pull/40228.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework and has been present since COM support was added to .NET Core.\r\n\r\n## Testing\r\n\r\nValidation of the above user scenario and updated tests in .NET 5 to verify the scenario. The test updates did not get ported to this PR but can be if those changes are desired. The minimum updates to tests were applied here to enable build and run of existing tests.\r\n\r\n## Risk\r\n\r\nThe risk of this change has two facets. It is possible .NET Core COM server authors have come to rely on this unusual behavior so it is possible we break someone. How that manifests would near impossible to determine given the fact that this is a bug in our following COM rules.\r\n\r\nThe change itself is isolated to COM scenarios only and has no impact on any scenario other than COM servers authored in .NET Core. This seems to be an acceptable risk given that the primary motivation for COM support was for Office and since few (read one) reports of the failure and it does impact the Office scenario the fix to follow the COM rules appears warranted."},{"Id":"13174711185","Type":"PullRequestEvent","CreatedAt":"2020-08-11T23:15:56","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28072","RelatedDescription":"Merged pull request \"Fix DataTargetReader::AlignBase()\" (#28072) at dotnet/coreclr","RelatedBody":"## Summary\r\n\r\n#28033 added `DAC_ALIGNAS` macro to force MSVC and clang/gcc compilers layouts to match.  Unfortunately `DataTargetReader::AlignBase()` hard coded the difference in layouts.  This PR updates `DataTargetReader::AlignBase()` to remove the obsolete assumption.\r\n\r\n## Customer impact\r\n\r\nCustomer reported being unable to examine stack traces using the out of process stack unwinder.  This breaks their diagnostic tools.\r\n\r\n## Regression\r\n\r\nYes:  Introduced by #28033 \r\nThe regression was missed because the regression was only for Linux targets and `FEATURE_METADATA_VERIFY_LAYOUTS` is disabled on Linux.\r\n\r\n## Testing\r\n\r\nEnabled `FEATURE_METADATA_VERIFY_LAYOUTS` in draft PR #28063 to verify layout assumptions on Linux too.  Not in this PR simply to reduce size of PR to more easily meet servicing BAR.\r\n\r\nAlso tested with a custom built version of .NET Core 3.1.5 with this patch and the originals customers reported issue.\r\n\r\n## Risk\r\n\r\nLow code is only used in DBI for debugging. "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"13198769525","Type":"PullRequestEvent","CreatedAt":"2020-08-14T03:36:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13467","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13467) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.1 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n"},{"Id":"13198737862","Type":"PullRequestEvent","CreatedAt":"2020-08-14T03:30:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13465","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13465) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200813.11\r\n- **Date Produced**: 8/14/2020 12:46 AM\r\n- **Commit**: 229e4969662193afe17ad418b175e0a798041a78\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.9 to 3.1.8-servicing.20413.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n"},{"Id":"13198737431","Type":"PullRequestEvent","CreatedAt":"2020-08-14T03:30:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13464","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13464) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200813.11\r\n- **Date Produced**: 8/14/2020 12:46 AM\r\n- **Commit**: 229e4969662193afe17ad418b175e0a798041a78\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.9 to 3.1.8-servicing.20413.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"13198426425","Type":"PullRequestEvent","CreatedAt":"2020-08-14T02:26:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13466","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13466) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.2 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"13198275936","Type":"PullRequestEvent","CreatedAt":"2020-08-14T01:55:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13467","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13467) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.1 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n"},{"Id":"13198275784","Type":"PullRequestEvent","CreatedAt":"2020-08-14T01:55:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13466","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13466) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.2 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"13198171402","Type":"PullRequestEvent","CreatedAt":"2020-08-14T01:34:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13465","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13465) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200813.11\r\n- **Date Produced**: 8/14/2020 12:46 AM\r\n- **Commit**: 229e4969662193afe17ad418b175e0a798041a78\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.9 to 3.1.8-servicing.20413.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n"},{"Id":"13198165987","Type":"PullRequestEvent","CreatedAt":"2020-08-14T01:33:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13462","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13462) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200813.9\r\n- **Date Produced**: 8/13/2020 10:24 PM\r\n- **Commit**: a740737aae065a3135be06f37ec2a55320c460ba\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20412.5 to 3.1.8-servicing.20413.9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n"},{"Id":"13198150324","Type":"PullRequestEvent","CreatedAt":"2020-08-14T01:29:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13460","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13460) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/13/2020 6:44 PM\r\n- **Commit**: 82e2b68c9ef7f28307114c4ab4d43c11e6f7cd52\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.107-servicing.20372.6 to 3.1.108-servicing.20413.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"13171170023","Type":"IssuesEvent","CreatedAt":"2020-08-11T16:13:40","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772) at dotnet/standard","RelatedBody":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?"},{"Id":"13165081615","Type":"IssuesEvent","CreatedAt":"2020-08-11T05:42:07","Actor":"snakorse","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Opened issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772) at dotnet/standard","RelatedBody":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"13197671391","Type":"PullRequestEvent","CreatedAt":"2020-08-13T23:50:15","Actor":"pgovind","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42967","RelatedDescription":"Opened pull request \"Disable parallel xunit tests and enable logs\" (#42967) at dotnet/corefx","RelatedBody":"Hopefully this gives us more info on the failing legs in CI for RegEx. "},{"Id":"13196786073","Type":"PullRequestEvent","CreatedAt":"2020-08-13T21:23:37","Actor":"silvioguiso","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42964","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42964) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200811.5\r\n- **Date Produced**: 8/12/2020 7:37 AM\r\n- **Commit**: f897710bc4efe6a046068fde0acf641667a8fff5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n"},{"Id":"13195082217","Type":"PullRequestEvent","CreatedAt":"2020-08-13T17:59:45","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42965","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05428-07, servicing-29130-01, servicing-29130-02, stable, respectively (release/2.1)\" (#42965) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13186240165","Type":"PullRequestEvent","CreatedAt":"2020-08-12T23:30:58","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42966","RelatedDescription":"Opened pull request \"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-05428-07, servicing-29130-02, rel-28605-00, rel-28605-00, respectively (release/uwp6.2)\" (#42966) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13186237722","Type":"PullRequestEvent","CreatedAt":"2020-08-12T23:30:30","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42965","RelatedDescription":"Opened pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05428-07, servicing-29130-01, servicing-29130-02, stable, respectively (release/2.1)\" (#42965) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13181977352","Type":"PullRequestEvent","CreatedAt":"2020-08-12T15:05:08","Actor":"mmitche","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42959","RelatedDescription":"Closed pull request \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#42959) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13175265923","Type":"PullRequestEvent","CreatedAt":"2020-08-12T01:03:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42964","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42964) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200811.1\r\n- **Date Produced**: 8/12/2020 12:23 AM\r\n- **Commit**: 8291bb847b20de064339b2eb119e56ba1fc30ec0\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.1\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"13199142488","Type":"PullRequestEvent","CreatedAt":"2020-08-14T04:56:31","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/46812","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#46812) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"13195909722","Type":"PullRequestEvent","CreatedAt":"2020-08-13T19:35:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8255","RelatedDescription":"Merged pull request \"Wasm: Align classes and arrays with 64 bit types at 8 byte\" (#8255) at dotnet/corert","RelatedBody":"Closes #8250 \r\n\r\nThis PR enables the `FEATURE_64BIT_ALIGNMENT` feature for Wasm and implements some of the `RhpNew...` functions to align arrays and classes at 8 bytes.  This will move Wasm closer to enabling threads (although may have to wait for Wasm Exceptions for this as the current emscripten exception handling is not thread safe - this Wasm feature is currently behind a flag in v8).\r\n\r\nMay also improve ARM32 support, but not tried that."},{"Id":"13195909688","Type":"IssuesEvent","CreatedAt":"2020-08-13T19:35:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8250","RelatedDescription":"Closed issue \"Wasm: Alignment required for atomics\" (#8250) at dotnet/corert","RelatedBody":"Wasm does not currently align memory access which is a problem when we want to introduce threads and atomics.   The WebAssembly specification says that unaligned atomic operations will trap, https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md:\r\n\r\n\"Alignment\r\nUnlike normal memory accesses, misaligned atomic accesses trap\"\r\n\r\nAnd indeed attempting this at the moment, results in (on Edge)\r\n```\r\nRuntimeError: operation does not support unaligned accesses\r\n    at RhpLockCmpXchg64 (http://localhost:8000/HelloWasm.wasm:wasm-function[20682]:0xd04530)\r\n    at S_P_CoreLib_System_Threading_Interlocked__CompareExchange_0 (http://localhost:8000/HelloWasm.wasm:wasm-function[1427]:0xb2194)\r\n    at S_P_CoreLib_System_Threading_Interlocked__Read (http://localhost:8000/HelloWasm.wasm:wasm-function[10329]:0x5eab12)\r\n    at S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_Length (http://localhost:8000/HelloWasm.wasm:wasm-function[12667]:0x7c570a)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__CreateResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5590]:0x2e9ff6)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__GrovelForResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5581]:0x2e731c)\r\n    at dynCall_viiii (http://localhost:8000/HelloWasm.wasm:wasm-function[22680]:0xe150f5)\r\n    at http://localhost:8000/HelloWasm.js:1822:22\r\n    at invoke_viiii (http://localhost:8000/HelloWasm.js:7504:5)\r\n    at S_P_CoreLib_System_Resources_ResourceManager__InternalGetResourceSet\r\n```\r\n"},{"Id":"13189507376","Type":"IssuesEvent","CreatedAt":"2020-08-13T08:34:29","Actor":"RalfKornmannEnvision","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8261","RelatedDescription":"Opened issue \"Type manager indirection EEType vs. native layout signature\" (#8261) at dotnet/corert","RelatedBody":"Both the EEType node and the native layout signature node need to store a pointer to find the type manager at runtime. \r\n\r\nFor the EEType the compiler checks if the target support relative pointers and uses an absolute or relative symbol reloc:\r\n\r\n```\r\n           if (factory.Target.SupportsRelativePointers)\r\n                objData.EmitReloc(factory.TypeManagerIndirection, RelocType.IMAGE_REL_BASED_RELPTR32);\r\n            else\r\n                objData.EmitPointerReloc(factory.TypeManagerIndirection);\r\n\r\n```\r\nBut for the layout signature node it's always an absolute reloc\r\n\r\n`objData.EmitPointerReloc(factory.TypeManagerIndirection);`\r\n\r\nBeside of this the EEType node data is only placed on windows in the read only section while the native layout signature node does this always.\r\n\r\nThis results in a little bit of trouble for me on my ARM64/Switch combination. It might be a general ARM64 issue but I am not sure about this.\r\n\r\nAnyway I end up with a static lib that contains absolute relocation's from the read-only section to the data section. When this lib is linked to the final executable the linker tells me that this relocation's can not be resolved without a dynamic relocation and that this is an error.\r\n\r\nTo get thinks running for now I am placing the native layout signature like the ee types just in the data section. I did a quick check with the linker by using a relative reloc for the native signature layouts. This works from a linker point of view but naturally fails at runtime.\r\nAs just changing the section is the easier fix for me I'd like to ask if there was a reason why the EE types do this (on non windows systems) but the native layout signatures not.\r\n"},{"Id":"13163763290","Type":"IssuesEvent","CreatedAt":"2020-08-11T01:30:33","Actor":"VS-ux","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8260","RelatedDescription":"Opened issue \"Attempt at winforms\" (#8260) at dotnet/corert","RelatedBody":"I have attempted to try to get basic winforms to work.\r\n\r\nSo I downloaded #8143 and built CoreRT (I skipped the tests because they took too long). I then downloaded https://github.com/kant2002/CoreRTWinFormsTestBed/tree/master/WinFormsComInterop, and ran it as is. It worked. Then, I edited the csprojs to use the custom built #8143 CoreRt. I built the project using Cmd and Publish, however I got an error saying could not open \"kernal32.lib\". I fixed it by using x64 native command prompt. It then built OK. But then, when running the native binary, I got this error:\r\n\r\n```\r\nntdll.dll!00007ffab3935854() Unknown\r\nKernelBase.dll!00007ffab1452f07() Unknown\r\nWindowsFormsApp1.exe!S_P_CoreLib_Interop_mincore__RaiseFailFastException_0�() Unknown\r\n\r\n    WindowsFormsApp1.exe!S_P_CoreLib_Interop_mincore__RaiseFailFastException() Line 49 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast_1() Line 263 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast() Line 216 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_CalliIntrinsics__Call_5�() Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_CalliIntrinsics__CallVoid_3() Line 17 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__UnhandledExceptionFailFastViaClasslib() Line 251 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__DispatchEx() Line 711 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__RhThrowEx() Line 617 Unknown\r\n    WindowsFormsApp1.exe!RhpThrowEx() Line 191 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_ThrowHelpers__ThrowTypeLoadException() Line 64 Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1_WindowsFormsApp1_Program__Main�() Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1__Module___MainMethodWrapper() Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1__Module___StartupCodeMain() Unknown\r\n    WindowsFormsApp1.exe!wmain(int argc, wchar_t * * argv) Line 447 C++\r\n    [Inline Frame] WindowsFormsApp1.exe!invoke_main() Line 90 C++\r\n    WindowsFormsApp1.exe!__scrt_common_main_seh() Line 288 C++\r\n    kernel32.dll!00007ffab25730f4() Unknown\r\n    ntdll.dll!00007ffab38ca33b() Unknown\r\n```\r\n\r\nDoes anybody know a fix to this?\r\nThanks"},{"Id":"13163474629","Type":"PullRequestEvent","CreatedAt":"2020-08-11T00:32:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8257","RelatedDescription":"Merged pull request \"Wasm: add support for ovf op with char type\" (#8257) at dotnet/corert","RelatedBody":"This PR fixes a compiler assert when compiling https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/shared/System/Environment.Unix.cs#L111 as the char type was not included in the int32 path.  Types short and byte seem ok before this change so no code added for those."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"13198974227","Type":"IssuesEvent","CreatedAt":"2020-08-14T04:20:43","Actor":"PokeArsenalist","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12917","RelatedDescription":"Opened issue \"Error NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App.WPF' was not recognized (NETSDK1073)\" (#12917) at dotnet/sdk","RelatedBody":"Hello all,\r\n\r\nI'm getting \"Error NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App.WPF' was not recognized (NETSDK1073)\" while trying to run my test project. Mine is a Xamarin.Forms app which builds and deploys successfully in devices. But the issue I am facing is with the .Net Core app 3.1 unit test project.\r\nOne suggestion that I came across is regarding Rg.Plugins.Popup. My solution structure is:\r\nNaySayApp\r\nNaySayApp.Android\r\nNaySayApp.iOS\r\nNaySayApp.Test\r\nExcept the test project, others has reference to the above mentioned plugin package. Tried to workaround the issue with PrivateAssets/ExcludeAssets but no luck so far.\r\n\r\nThe same project works fine in my windows Visual Studio, but fails in MAC.\r\n\r\nVS Details are as follows:\r\n```\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.7.1 (build 15)\r\nInstallation UUID: 151a6da6-b82d-4da3-ad54-29cf873ddcb4\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 6.18.0.23 (d16-6 / 088c73638)\r\n\r\n\tPackage version: 612000090\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.12.0.90 (2020-02/d3daacdaa80) (64-bit)\r\n\tPackage version: 612000090\r\n\r\n=== Roslyn (Language Service) ===\r\n\r\n3.7.0-6.20371.12+917b9dfae12e3b6cb266a3c062fb20a1e9d5fb06\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.7.0.6702\r\n\r\n=== .NET Core SDK ===\r\n\r\nSDK: /usr/local/share/dotnet/sdk/3.1.302/Sdks\r\nSDK Version: 3.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== .NET Core Runtime ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.1.6\r\n\t2.1.20\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.15.68\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 11.6 (16141)\r\nBuild 11E708\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 13.20.2.2 (Visual Studio Community)\r\nHash: 817b6f72a\r\nBranch: d16-7\r\nBuild date: 2020-07-18 18:45:00-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.7.0.492\r\nHash: f5afe667d\r\nBranch: remotes/origin/d16-7-vsmac\r\nBuild date: 2020-07-10 18:42:54 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 11.0.0.3 (Visual Studio Community)\r\nCommit: xamarin-android/d16-7/aca845b\r\nAndroid SDK: /Users/user/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 30.0.4\r\nSDK Build Tools Version: 29.0.2\r\n\r\nBuild Information: \r\nMono: 83105ba\r\nJava.Interop: xamarin/java.interop/d16-7@1f3388a\r\nProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\nSQLite: xamarin/sqlite/3.32.1@1a3276b\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-7@017078f\r\n\r\n=== Microsoft OpenJDK for Mobile ===\r\n\r\nJava SDK: /Users/user/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android SDK Manager ===\r\n\r\nVersion: 16.7.0.13\r\nHash: 8380518\r\nBranch: remotes/origin/dev/jmt/d16-7readconfig~2\r\nBuild date: 2020-07-23 22:38:02 UTC\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 16.7.0.18\r\nHash: 4b44bc1\r\nBranch: remotes/origin/d16-7\r\nBuild date: 2020-07-23 22:38:26 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 807010015\r\nGit revision: b2b8f289ffca8f28c585e9137d193c92462cbf14\r\nBuild date: 2020-08-07 10:38:31-04\r\nBuild branch: release-8.7\r\nXamarin extensions: b2b8f289ffca8f28c585e9137d193c92462cbf14\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.15.6\r\nDarwin 19.6.0 Darwin Kernel Version 19.6.0\r\n    Thu Jun 18 20:49:00 PDT 2020\r\n    root:xnu-6153.141.1~1/RELEASE_X86_64 x86_64\r\n```"},{"Id":"13197657995","Type":"IssuesEvent","CreatedAt":"2020-08-13T23:47:23","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12916","RelatedDescription":"Opened issue \"Cannot C++/CLI 5.0 app \" (#12916) at dotnet/sdk","RelatedBody":"https://github.com/nguerrera/NETCoreCppCliTest app and change TFM to net5.0 build will have error \r\n\r\nerror MSB4184: The expression \"[Microsoft.Build.Utilities.ToolLocationHelper]::GetPlatformSDKLocation('', 10.0.18362.0)\" cannot be evaluated. Parameter \"targetPlatformIdentifier\" cannot have zero length. [C:\\Users\\Administrator\\Documen\r\nts\\NETCoreCppCliTestWithNative\\NETCoreCppCliTest\\NETCoreCppCliTest.vcxproj]"},{"Id":"13197619078","Type":"IssuesEvent","CreatedAt":"2020-08-13T23:39:35","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12911","RelatedDescription":"Reopened issue \"Cannot build netcore 3.1 C++/CLI due to cannot resolve 3.1 IJW host\" (#12911) at dotnet/sdk","RelatedBody":"@Ninds commented on [Sun Aug 09 2020](https://github.com/dotnet/msbuild/issues/5637)\n\nHI\r\n\r\n### Issue Description\r\nWhen building C++/CLI dll targeting .NET Core 3.1 with msbuild of VS 16.7 we have the following error \\:\r\n```\r\n\"C:\\WorkSpace\\Project1\\Project1\\Project1.vcxproj\" (default target) (1) ->\r\n(_GetIjwHostPaths target) ->\r\n  C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(585,5)\r\n: error NETSDK1114: Unable to find a .NET Core IJW host. The .NET Core IJW host is only available on .NET Core 3.1 or h\r\nigher when targeting Windows. [C:\\WorkSpace\\Project1\\Project1\\Project1.vcxproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\nThis error did not occur in the last 16.7 preview.\r\n\r\n\r\n### Steps to Reproduce\r\n#### Environment\r\n```\r\n$ dotnet --list-runtimes\r\nMicrosoft.AspNetCore.All 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.0-preview.7.20365.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.0-preview.7.20364.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.0-preview.7.20366.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n```\r\n$ dotnet --list-sdks\r\n3.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.100-preview.7.20366.6 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n```\r\nC:\\WorkSpace\\Project1\\Project1>msbuild -version\r\nMicrosoft (R) Build Engine version 16.7.0+b89cb5fde for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.7.0.37604\r\n```\r\n[Reproducing Project File](https://gist.github.com/Ninds/7db8f055d8127bf0ebf50631d3b1dda8)\r\n\r\nTargeting .NET 4.7.2 is ok \r\nTargeting .NET 5      is ok\r\nTargeting .NET Core 3.1  is **NOT** ok\r\n\r\n\r\n\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-671571790)\n\nEven switching off __use of previews of the .NET Core SDK__  doesn't fix the problem.\r\n\r\n![preview](https://user-images.githubusercontent.com/5892035/89827470-8cd6ad00-db4f-11ea-9e7b-93d2f5ac835e.jpg)\r\n\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(585,5): error NETSDK1114: Unable to find a .NET Core IJW host. The .NET Core IJW host is only available on .NET Core 3.1 or higher when targeting Windows.\r\n```\r\n\r\n\n\n---\n\n@stic commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-672992631)\n\nSame here, unable to target netcoreapp3.1 with .net core 5.0 preview installed.\r\nI've tried to do some investigation (i.e. figure out how .net core targets are resolved during build), but even verbose build log doesn't explain much - suggestion, whilst providing fix it might be worth to improve build logging too. Cleaned everything cached internally under .vs, build outputs etc. By the way it's with VS16.7.1 (haven't tried 16.8 behaviour yet)\r\n\r\nWorkaround for now - remove preview 🤕 \n\n---\n\n@Forgind commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673138334)\n\nAt face value, this sounds like a \"we expected .NET Core __ but got .NET __\" type problem, fixed by teaching it that it should work with .NET 5, too. I had some difficulty with reproducing the problem, though. Here's what I tried:\r\nI created a new vcxproj and replaced its content with the project you provided.\r\nI used MSBuild 16.7.0.37604 (full framework) to build the project, but that worked (not too surprising)\r\nI used Core MSBuild 16.7.0.36003 to try to build the project and reset VCTargetsPath to point to the relevant folder, but it still failed for an unrelated reason—failing to find Platform.props. What did I do wrong?\r\n\r\nAlso, given that the error message is NETSDK1114, I have a feeling this is a dotnet/sdk problem. Is that correct, @wli3/@dsplaisted?\n\n---\n\n@dsplaisted commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673150741)\n\nIt's probably an issue with dotnet/sdk, though it's hard to say.  A [binlog](https://aka.ms/binlog) would be helpful to investigate this.\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673279028)\n\nI suspected MSBuild only because all other things being equal under the last VS 16.7 preview everything worked.\r\nSpecifically, building for target .NET Core 3.1 with .NET 5 preview 7 installed.  If .NET 5 preview 7 is not installed there is no issue observed.  \r\nWhen VS 16.7 Preview was being used and .NET Core 3.1 & .NET 5 preview were installed and everything was working, the only change that was then made was to upgrade VS to 16.7 Release for msbuild to exhibit the error.\r\n\r\nThe binlog file is attached.\r\n\r\n[msbuild.binlog.zip](https://github.com/dotnet/msbuild/files/5067344/msbuild.binlog.zip)\r\n\r\nThanks\r\n\r\n\r\n\r\n\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673285860)\n\nHaving uninstalled .NET 5 Preview 7 I attach also the msbuild binlog of a successful build  :\r\n[msbuild.binlog.zip](https://github.com/dotnet/msbuild/files/5067400/msbuild.binlog.zip)\r\n\r\nIs it still possible to download the last VS 16.7 preview ?\r\n\n\n---\n\n@wli3 commented on [Thu Aug 13 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673611771)\n\nAssign it to me. I'll look into it.\n\n"},{"Id":"13197495753","Type":"PullRequestEvent","CreatedAt":"2020-08-13T23:15:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12915","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview8] Update dependencies from nuget/nuget.client\" (#12915) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0410360-866d-4c30-bfba-08d828bd793b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: c0410360-866d-4c30-bfba-08d828bd793b\r\n- **Build**: 5.8.0.6776\r\n- **Date Produced**: 8/12/2020 12:22 AM\r\n- **Commit**: 62e098bfb22998fa638ce1a6dff5f91276770500\r\n- **Branch**: dev\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.8.0-preview.1.6753 to 5.8.0-preview.2.6776\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0410360-866d-4c30-bfba-08d828bd793b)\r\n\r\n"},{"Id":"13197164948","Type":"IssuesEvent","CreatedAt":"2020-08-13T22:18:29","Actor":"PtkFerraro","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12914","RelatedDescription":"Opened issue \"Shared Resource case insensitive\" (#12914) at dotnet/sdk","RelatedBody":"I have a resource with entries:\r\n\r\n<data name=\"Total\">\r\n    <value>Total</value>\r\n  </data>\r\n\r\n  <data name=\"TOTAL\">\r\n    <value>TOTAL</value>\r\n  </data>\r\n\r\nThey are different (in case sensetive way).\r\n\r\nBut it warms me that my resource have duplicate key and them will be ignored\r\n\r\nLocalization/SharedResource.es.resx : warning MSB3568: Duplicate resource name \"TOTAL\" is not allowed, ignored.\r\n\r\nI dont if is because of this, but the designer file stopped to be generated, so my resource file has more entries then the designer file.\r\n\r\nThis occurs in my Visual Code on my MacOSX and on my Visual Studio in WIn 10.\r\n\r\nWhy it checks the entries as case insensitve? how should I work around?\r\n\r\nWhy does the disigner file stopped to be generated?\r\n"},{"Id":"13196978395","Type":"IssuesEvent","CreatedAt":"2020-08-13T21:50:42","Actor":"npuc85","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12913","RelatedDescription":"Opened issue \"Version number is missing from dotnet publish output in alpine\" (#12913) at dotnet/sdk","RelatedBody":"In my CI pipeline I am using an alpine image to build, test, and publish my project as a single file. This is the command I am using to publish:\r\n`dotnet publish -c Release -r win-x64 /p:PublishReadyToRun=false /p:PublishSingleFile=true /p:PublishTrimmed=true`\r\nHowever, this is creating an exe that has no version number. I do have a Version specified inside of my .csproj file, and I have tried both with and without using the `/p:Version=1.2.3` argument on the `dotnet publish` command. Both ways result in an exe file that has no version number.\r\n\r\nRunning the same command locally on my Windows machine does produce an exe that has a version number.\r\nAlso, `dotnet build` (both in Windows and alpine) produces an exe that has a version number. It seems to only be an issue with the `publish` command and only in the alpine image."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"678040097","IsPullRequest":true,"CreatedAt":"2020-08-12T23:32:15","Actor":"dotnet-maestro-bot","Number":"28081","RawContent":null,"Title":"Update BuildTools, CoreFx to rc1-05428-07, servicing-29130-02, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28081","RelatedDescription":"Open PR \"Update BuildTools, CoreFx to rc1-05428-07, servicing-29130-02, respectively (release/uwp6.2)\" (#28081)"},{"Id":"677284525","IsPullRequest":true,"CreatedAt":"2020-08-12T21:14:42","Actor":"sdmaclea","Number":"28078","RawContent":null,"Title":"Merge v3.1.7","State":"closed","Body":"Merge v3.1.7 to release/3.1-crossdac branch.\r\n\r\nThis corresponds to `git merge v3.1.7` and fixing the merge conflicts in `eng\\pipelines\\internal.yml` by ignoring irrelevant release/3.1 changes.\r\n\r\nDo not squash into this branch to make merge commits easier.\r\n\r\nHold off on merging until #28077 is merged/built.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28078","RelatedDescription":"Closed or merged PR \"Merge v3.1.7\" (#28078)"},{"Id":"677906037","IsPullRequest":true,"CreatedAt":"2020-08-12T18:55:31","Actor":"sdmaclea","Number":"28080","RawContent":null,"Title":"Always define bitness in configurecompiler.cmake","State":"closed","Body":"/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/28080","RelatedDescription":"Closed or merged PR \"Always define bitness in configurecompiler.cmake\" (#28080)"},{"Id":"677301560","IsPullRequest":true,"CreatedAt":"2020-08-12T01:15:37","Actor":"sdmaclea","Number":"28079","RawContent":null,"Title":"Fix mirroring of release/3.1 crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28079","RelatedDescription":"Closed or merged PR \"Fix mirroring of release/3.1 crossdac\" (#28079)"},{"Id":"677280401","IsPullRequest":true,"CreatedAt":"2020-08-12T00:33:29","Actor":"sdmaclea","Number":"28077","RawContent":null,"Title":"3.1.5/3.1.6 crossdac fixes","State":"closed","Body":"Fix native stack unwind.\r\nMerges v3.1.8 DataTargetReader::AlignBase() fix early\r\n","Url":"https://github.com/dotnet/coreclr/pull/28077","RelatedDescription":"Closed or merged PR \"3.1.5/3.1.6 crossdac fixes\" (#28077)"},{"Id":"675132321","IsPullRequest":true,"CreatedAt":"2020-08-11T23:52:55","Actor":"AaronRobinsonMSFT","Number":"28074","RawContent":null,"Title":"[.NET Core 3.1] Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate","State":"closed","Body":"## Summary\r\n\r\nMemory is leaked every time [`Marshal.GetFunctionPointerForDelegate`](https://docs.microsoft.com/dotnet/api/system.runtime.interopservices.marshal.getfunctionpointerfordelegate) is called.\r\n\r\n## Customer impact\r\n\r\nSee https://github.com/dotnet/runtime/issues/353 for user reported issue and impact.\r\n\r\nThere is no workaround.\r\n\r\nUser request for port to .NET Core 3.1 - https://github.com/dotnet/runtime/issues/353#issuecomment-670270129.\r\n\r\n.NET 5 PR: https://github.com/dotnet/runtime/pull/692.\r\n\r\n## Regression\r\n\r\nThis issue is not present in .NET Framework.\r\n\r\n## Testing\r\n\r\nExact code change was ported from .NET Core 5.0 branch. Minimal validation was done for .NET Core 3.x - build and running validation that delegate creation works.\r\n\r\n## Risk\r\n\r\nLow. The code has been in .NET Core pre-Previews and has had lots of time in use. Additionally, since this fix was introduced so early in .NET 5 the runtime code was nearly identical to .NET Core 3.1.","Url":"https://github.com/dotnet/coreclr/pull/28074","RelatedDescription":"Closed or merged PR \"[.NET Core 3.1] Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate\" (#28074)"},{"Id":"667346270","IsPullRequest":true,"CreatedAt":"2020-08-11T23:17:38","Actor":"dotnet-maestro-bot","Number":"28068","RawContent":null,"Title":"Update BuildTools to rc1-05428-07 (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28068","RelatedDescription":"Closed or merged PR \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#28068)"},{"Id":"671652892","IsPullRequest":true,"CreatedAt":"2020-08-11T23:16:18","Actor":"AaronRobinsonMSFT","Number":"28073","RawContent":null,"Title":"[.NET Core 3.1] Don't rely on the built-in interface marshaller during COM activation.","State":"closed","Body":"## Summary\r\n\r\nRelying on the built-in marshaller leverages the Class interface approach which doesn't work for some interface types (e.g. interfaces inheriting from `IDispatch`).\r\n\r\nThis approach is wrong regardless of why given that COM dictates the returned value must be properly cast the specific interface vtable.\r\n\r\nUpdated tests so they would have found this issue.\r\n\r\n## Customer impact\r\n\r\nThis issue manifests most commonly when activating a managed COM server for an interface that inherits from `IDispatch`. This is particularly profound in Office extensions since most inherit from `IDispatch`. The fact that this hasn't been reported seems to imply few customers are authoring Office extensions using .NET Core at present. As .NET 5 releases and adoption increases the assumption would be this issue will become more common.\r\n\r\nThere is no workaround.\r\n\r\nSee https://github.com/dotnet/runtime/issues/38950 for user reported issue.\r\n\r\n.NET 5 PR: https://github.com/dotnet/runtime/pull/40228.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework and has been present since COM support was added to .NET Core.\r\n\r\n## Testing\r\n\r\nValidation of the above user scenario and updated tests in .NET 5 to verify the scenario. The test updates did not get ported to this PR but can be if those changes are desired. The minimum updates to tests were applied here to enable build and run of existing tests.\r\n\r\n## Risk\r\n\r\nThe risk of this change has two facets. It is possible .NET Core COM server authors have come to rely on this unusual behavior so it is possible we break someone. How that manifests would near impossible to determine given the fact that this is a bug in our following COM rules.\r\n\r\nThe change itself is isolated to COM scenarios only and has no impact on any scenario other than COM servers authored in .NET Core. This seems to be an acceptable risk given that the primary motivation for COM support was for Office and since few (read one) reports of the failure and it does impact the Office scenario the fix to follow the COM rules appears warranted.","Url":"https://github.com/dotnet/coreclr/pull/28073","RelatedDescription":"Closed or merged PR \"[.NET Core 3.1] Don't rely on the built-in interface marshaller during COM activation.\" (#28073)"},{"Id":"670175635","IsPullRequest":true,"CreatedAt":"2020-08-11T23:15:55","Actor":"sdmaclea","Number":"28072","RawContent":null,"Title":"Fix DataTargetReader::AlignBase()","State":"closed","Body":"## Summary\r\n\r\n#28033 added `DAC_ALIGNAS` macro to force MSVC and clang/gcc compilers layouts to match.  Unfortunately `DataTargetReader::AlignBase()` hard coded the difference in layouts.  This PR updates `DataTargetReader::AlignBase()` to remove the obsolete assumption.\r\n\r\n## Customer impact\r\n\r\nCustomer reported being unable to examine stack traces using the out of process stack unwinder.  This breaks their diagnostic tools.\r\n\r\n## Regression\r\n\r\nYes:  Introduced by #28033 \r\nThe regression was missed because the regression was only for Linux targets and `FEATURE_METADATA_VERIFY_LAYOUTS` is disabled on Linux.\r\n\r\n## Testing\r\n\r\nEnabled `FEATURE_METADATA_VERIFY_LAYOUTS` in draft PR #28063 to verify layout assumptions on Linux too.  Not in this PR simply to reduce size of PR to more easily meet servicing BAR.\r\n\r\nAlso tested with a custom built version of .NET Core 3.1.5 with this patch and the originals customers reported issue.\r\n\r\n## Risk\r\n\r\nLow code is only used in DBI for debugging. ","Url":"https://github.com/dotnet/coreclr/pull/28072","RelatedDescription":"Closed or merged PR \"Fix DataTargetReader::AlignBase()\" (#28072)"},{"Id":"668982471","IsPullRequest":true,"CreatedAt":"2020-08-11T23:13:51","Actor":"dotnet-maestro-bot","Number":"28070","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @ViktorHofer\n* @stephentoub\n* @Anipik\n* @dotnet-maestro-bot\n* @omajid\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28070","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28070)"},{"Id":"677215555","IsPullRequest":true,"CreatedAt":"2020-08-11T23:02:45","Actor":"Anipik","Number":"28075","RawContent":null,"Title":"update branding to 3.1.8 and also branding for transport packages","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28075","RelatedDescription":"Closed or merged PR \"update branding to 3.1.8 and also branding for transport packages\" (#28075)"},{"Id":"677233352","IsPullRequest":true,"CreatedAt":"2020-08-11T22:58:14","Actor":"Anipik","Number":"28076","RawContent":null,"Title":"update branding to 2.1.22","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28076","RelatedDescription":"Closed or merged PR \"update branding to 2.1.22\" (#28076)"},{"Id":"669925126","IsPullRequest":true,"CreatedAt":"2020-07-31T15:19:40","Actor":"kouvel","Number":"28071","RawContent":null,"Title":"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap","State":"open","Body":"- Port of https://github.com/dotnet/runtime/pull/40205 to 3.1\r\n- Snap's default strict confinement doesn't allow setting the affinity of a different thread, and currently doesn't allow `sched_setaffinity(<nonzeroPid>, ...)` even with the calling thread's pid, which pthread implementation uses\r\n- Switched to use `sched_setaffinity(0, ...)` where appropriate\r\n\r\nFixes https://github.com/dotnet/runtime/issues/1634\r\n\r\n### Customer impact\r\n\r\n- .NET Core doesn't work under Snap's default strict confinement. When a thread is created coreclr requests for the processor affinity of the new thread to be changed to the process' affinity, which is not allowed under Snap's strict confinement.\r\n- There are a couple of workarounds, but both involve manual/non-default steps (inconvenient) and give the process more control than desired:\r\n  - Specify the process-control plug and manually connect it before running the app\r\n  - Require the classic confinement instead and specify it when installing the app\r\n- The workarounds may also cause some difficulty, especially longer-term, for .NET Core apps to be added to the public snap store due to the extra control the process would require.\r\n  - It is possible to specify to auto-connect the process-control plug using store processes, but it requires review and justification, and the purpose of working around this issue may be difficult to justify longer-term\r\n  - Apps that use the classic confinement run without any sandboxing, and may not be allowed in the public snap store for the purpose of working around this issue\r\n  - See https://github.com/dotnet/runtime/issues/1634#issuecomment-667332468 for more information\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- Tested a small app under Snap's strict confinement\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- Instead of the creating thread changing the affinity of the created thread, the created thread changes its own affinity after starting, the difference is mostly invisible\r\n- Where appropriate, used a fallback to use the pthread implementation for setting the affinity when sched_setaffinity is not available, so in the theoretical possibility of a different pthread implementation for setting the affinity, there would be no change from before","Url":"https://github.com/dotnet/coreclr/pull/28071","RelatedDescription":"Open PR \"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap\" (#28071)"},{"Id":"668934448","IsPullRequest":true,"CreatedAt":"2020-07-30T17:04:31","Actor":"silvioguiso","Number":"28069","RawContent":null,"Title":"Decodes bitstream to string","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28069","RelatedDescription":"Closed or merged PR \"Decodes bitstream to string\" (#28069)"},{"Id":"656700055","IsPullRequest":true,"CreatedAt":"2020-07-28T23:51:17","Actor":"dotnet-maestro-bot","Number":"28057","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @omajid\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28057","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28057)"},{"Id":"651823123","IsPullRequest":true,"CreatedAt":"2020-07-28T23:44:51","Actor":"garath","Number":"28055","RawContent":null,"Title":"Use Azure Artifacts feed instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/coreclr/pull/28055","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts feed instead of MyGet\" (#28055)"},{"Id":"665279560","IsPullRequest":true,"CreatedAt":"2020-07-28T18:29:19","Actor":"ViktorHofer","Number":"28066","RawContent":null,"Title":"Hardcode path to ICU on macOS","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/05f17e3170d014efe63202c4e7e7b641e8f8fef6.","Url":"https://github.com/dotnet/coreclr/pull/28066","RelatedDescription":"Closed or merged PR \"Hardcode path to ICU on macOS\" (#28066)"},{"Id":"665280682","IsPullRequest":true,"CreatedAt":"2020-07-24T17:09:08","Actor":"ViktorHofer","Number":"28067","RawContent":null,"Title":"Hardcode path to ICU on macOS","State":"closed","Body":"Port of dotnet/runtime@05f17e3","Url":"https://github.com/dotnet/coreclr/pull/28067","RelatedDescription":"Closed or merged PR \"Hardcode path to ICU on macOS\" (#28067)"},{"Id":"664937647","IsPullRequest":true,"CreatedAt":"2020-07-24T06:02:10","Actor":"theaoqi","Number":"28065","RawContent":null,"Title":"[3.1] build.sh skipcrossgen failed","State":"open","Body":"dotnet/runtime has a new build system and I cannot reproduce this issue with dotnet/runtime. I have no idea whether coreclr 3.1 accept new fixes. If not, please free feel to close the PR. Thanks!\r\n\r\n```\r\n$ ./build.sh skipcrossgen\r\n...\r\nCommand successfully completed.\r\nRunning init-dotnet.sh\r\nInstalling dotnet using Arcade...\r\nRunning: /disk/aoqi/disk/dotnet/coreclr/.dotnet/dotnet msbuild /nologo /verbosity:minimal /clp:Summary /p:PortableBuild=true /maxcpucount /p:ArcadeBuild=true /home/aoqi/work/dotnet/dotnet/coreclr/src/build.proj /flp:Verbosity=normal;LogFile=/home/aoqi/work/dotnet/dotnet/coreclr/bin/Logs/System.Private.CoreLib_Debug.log /p:__IntermediatesDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin/obj/Linux.x64.Debug /p:__RootBinDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /nodeReuse:false /p:RestoreDuringBuild=true /p:OptimizationDataDir=\"/home/aoqi/work/dotnet/dotnet/coreclr/.packages/optimization.Linux-x64.IBC.CoreCLR/99.99.99-master-20190912.1/data\" /p:EnableProfileGuidedOptimization=true /p:BuildManagedTools=true\r\n  runincontext -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/runincontext.dll\r\n  R2RDump -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/R2RDump.dll\r\n  System.Private.CoreLib -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:06.72\r\nCommand successfully completed.\r\nSkipping generating native image\r\nGenerating nuget packages for Linux\r\nDistroRid is linux-x64\r\nROOTFS_DIR is \r\n/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/MSBuild.dll /nologo -bl:/home/aoqi/work/dotnet/dotnet/coreclr/bin/Logs/Nuget_Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/dotnet.dll -maxcpucount /m -verbosity:m /v:minimal /clp:Summary /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:Configuration=Debug /p:RepoRoot=/disk/aoqi/disk/dotnet/coreclr /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:PortableBuild=true /p:ArcadeBuild=true /p:__IntermediatesDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin/obj/Linux.x64.Debug /p:__RootBinDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin /p:__DoCrossArchBuild=0 /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /p:RestoreDuringBuild=true /p:Projects=/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/packages.builds /warnaserror /disk/aoqi/disk/dotnet/coreclr/.packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.20113.5/tools/Build.proj\r\n  Restore completed in 17.97 ms for /disk/aoqi/disk/dotnet/coreclr/.packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.20113.5/tools/Tools.proj.\r\n  Restore completed in 4.95 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Jit/Microsoft.NETCore.Jit.builds.\r\n  Restore completed in 4.96 ms for /home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/packages.builds.\r\n  Restore completed in 4.97 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.builds.\r\n  Restore completed in 4.96 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.TestHost/Microsoft.NETCore.TestHost.builds.\r\n  Restore completed in 4.96 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.ILAsm/Microsoft.NETCore.ILAsm.builds.\r\n  Restore completed in 4.92 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Native/Microsoft.NETCore.Native.builds.\r\n  Restore completed in 4.97 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.ILDAsm/Microsoft.NETCore.ILDAsm.builds.\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget lib package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget packed package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget packed package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n  Microsoft.NETCore.Native -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Native.nuspec\r\n  Microsoft.NETCore.TestHost -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.TestHost.nuspec\r\n  Microsoft.NETCore.ILDAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.ILDAsm.nuspec\r\n  Microsoft.NETCore.Native -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Native.nuspec\r\n  Microsoft.NETCore.ILAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.ILAsm.nuspec\r\n  Microsoft.NETCore.ILDAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.ILDAsm.nuspec\r\n  Microsoft.NETCore.Runtime.CoreCLR -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Runtime.CoreCLR.nuspec\r\n  Microsoft.NETCore.TestHost -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.TestHost.nuspec\r\n  Microsoft.NETCore.ILAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.ILAsm.nuspec\r\n  Microsoft.NETCore.Jit -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Jit.nuspec\r\n  Microsoft.NETCore.Jit -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Jit.nuspec\r\n\r\nBuild FAILED.\r\n```","Url":"https://github.com/dotnet/coreclr/pull/28065","RelatedDescription":"Open PR \"[3.1] build.sh skipcrossgen failed\" (#28065)"},{"Id":"662127321","IsPullRequest":true,"CreatedAt":"2020-07-21T16:32:06","Actor":"silvioguiso","Number":"28064","RawContent":null,"Title":"Adds tls12 to init-tools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28064","RelatedDescription":"Closed or merged PR \"Adds tls12 to init-tools\" (#28064)"},{"Id":"658424684","IsPullRequest":true,"CreatedAt":"2020-07-16T17:58:25","Actor":"sdmaclea","Number":"28063","RawContent":null,"Title":"Enable FEATURE_METADATA_VERIFY_LAYOUTS and fix debugging regression","State":"open","Body":"#28035 Changed the layout of several types used in the DBI. The code to verify these layouts was only enabled on Windows. Therefore these layout changes were not detected and the TargetTypes/DataTargetReader code responsible for binary translation was not updated\r\n\r\nThis is a draft patch to document the process used to find and verify the layout changes.  I suspect this is too big a patch to take in 3.1 servicing.  The https://github.com/dotnet/coreclr/commit/7c68ef0ca51618797043174fe547064cb872e013 patch will likely be the ultimate servicing patch\r\n\r\n/cc @hoyosjs @noahfalk @jeffschwMSFT @jkotas @chuckries ","Url":"https://github.com/dotnet/coreclr/pull/28063","RelatedDescription":"Open PR \"Enable FEATURE_METADATA_VERIFY_LAYOUTS and fix debugging regression\" (#28063)"},{"Id":"657022467","IsPullRequest":true,"CreatedAt":"2020-07-16T17:18:08","Actor":"AaronRobinsonMSFT","Number":"28061","RawContent":null,"Title":"Don't prune the IManagedActivationFactory type","State":"closed","Body":"Fixes a user reported issue for consuming XAML Islands in .NET 3.1. The result is a random failure typically during XAML load. The managed definition of [`IManagedActivationFactory`](https://github.com/dotnet/coreclr/blob/68ec8a211852cc9cf662d19bac251f364719702f/src/System.Private.CoreLib/src/System/Runtime/InteropServices/WindowsRuntime/ManagedActivationFactory.cs#L10-L16) has been pruned of its function and thus when a call is made to a class implementing that interface, random memory is executed since there is no entry in the vtable.\r\n\r\nThe scenario involving this code was [removed in .NET 5.0](https://github.com/dotnet/runtime/issues/37672) so there is no need to bring the work forward.\r\n\r\n## Customer Impact\r\n\r\nUsers will be unable to use XAML Islands or WinUI with bindings in .NET 3.1.\r\n\r\n### Workaround\r\n\r\nThere is no work around. The Linker removed the function definition and single implementation in question - they no longer exist in the assembly to call.\r\n\r\n## Regression?\r\n\r\nThis is probably a regression, but I have not identified the exact location where the break was introduced.\r\n\r\nConfirmed the method is missing and broken in [3.0.1](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.exe), but the method is present in 2.2.7.\r\n\r\n## Testing\r\n\r\nValidated a patched version of `System.Private.CoreLib` against a XAML Island scenario from https://github.com/microsoft/Xaml-Islands-Samples.\r\n\r\n## Risk\r\nLow. \r\n\r\n/cc @jeffschwMSFT @jkotas @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/28061","RelatedDescription":"Closed or merged PR \"Don't prune the IManagedActivationFactory type\" (#28061)"},{"Id":"657491939","IsPullRequest":true,"CreatedAt":"2020-07-15T16:49:23","Actor":"silvioguiso","Number":"28062","RawContent":null,"Title":"Updates build pipelines","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28062","RelatedDescription":"Closed or merged PR \"Updates build pipelines\" (#28062)"},{"Id":"648602879","IsPullRequest":true,"CreatedAt":"2020-07-14T22:59:44","Actor":"stephentoub","Number":"28053","RawContent":null,"Title":"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/21417 from 2.2 to 2.1\r\n\r\n#### Description\r\n\r\nCTR.Token should never throw, but it's currently throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed.\r\n\r\nDetails: We added the CancellationTokenRegistration.Token property in .NET Core 2.1.  Since the CTR already knows with what token it's associated, allowing you to get the token from the CTR saves you from also needing to separately store the token, which lets you improve memory utilization by not carrying it around effectively twice.  We took advantage of that, for example, in FileStream's Read/WriteAsync operations, to decrease the size of the object allocated for those operations.  However, the CTR.Token property is incorrectly throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed, which introduces an ODE where there wasn't previously one (just accessing a CancellationToken you already had stored).  This is causing regressions in code that created a token source, registered with its token, and then disposed the source.\r\n\r\n#### Customer Impact\r\n\r\ne.g.\r\nExceptions on background threads that crash the process when performing operations like:\r\n```C#\r\nvar cts = new CancellationTokenSource();\r\nTask<int> t = fileStream.ReadAsync(..., cts.Token);\r\ncts.Dispose();\r\nint result = await t;\r\n```\r\n\r\nWe fixed this in 2.2 but so far held off on backporting to 2.1 pending more customer data since it's an LTS release. Since then we've had 2 more reports (see https://github.com/dotnet/runtime/issues/37641) most recently a customer that says:\r\n\r\n> It may take the rest of the year to reach 3.1. In the meantime our servers are crashing and clients are getting mad! I can only apologize to them, mitigate the issues as best as possible and then blame you for not updating an LTS version!\r\n\r\nSince the change is very low risk -- it's been in the product since 2.2 -- we are proposing we now backport to 2.1\r\n\r\n#### Regression?\r\n\r\nYes.  It's not a regression in CancellationTokenRegistration.Token, which was only introduced in 2.1, but rather a regression in that it's behavior isn't matching code it was used to replace, so it's for example a regression in FileStream.Read/WriteAsync.\r\n\r\n#### Packaging reviewed? \r\n\r\nChange affects System.Private.CoreLib only.\r\n\r\n#### Risk\r\n\r\nMinimal.  The new code is effectively the same as the old, except avoiding a ThrowIfDisposed call.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28053","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#28053)"},{"Id":"656897714","IsPullRequest":true,"CreatedAt":"2020-07-14T22:58:24","Actor":"Anipik","Number":"28059","RawContent":null,"Title":"update branding for 2.1.21","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28059","RelatedDescription":"Closed or merged PR \"update branding for 2.1.21\" (#28059)"},{"Id":"656917337","IsPullRequest":true,"CreatedAt":"2020-07-14T22:58:06","Actor":"dotnet-maestro-bot","Number":"28060","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-29017-01, servicing-29018-12, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28060","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-29017-01, servicing-29018-12, respectively (release/2.1)\" (#28060)"},{"Id":"656806164","IsPullRequest":true,"CreatedAt":"2020-07-14T22:54:22","Actor":"Anipik","Number":"28058","RawContent":null,"Title":"update branding to 3.1.7","State":"closed","Body":"No internal changes","Url":"https://github.com/dotnet/coreclr/pull/28058","RelatedDescription":"Closed or merged PR \"update branding to 3.1.7\" (#28058)"},{"Id":"656177065","IsPullRequest":true,"CreatedAt":"2020-07-14T15:21:22","Actor":"silvioguiso","Number":"28056","RawContent":null,"Title":"Updates build pools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28056","RelatedDescription":"Closed or merged PR \"Updates build pools\" (#28056)"},{"Id":"650173216","IsPullRequest":true,"CreatedAt":"2020-07-02T20:32:09","Actor":"sdmaclea","Number":"28054","RawContent":null,"Title":"More release/3.1 crossdac incremental changes","State":"closed","Body":"+ allow the branch to continue after 5.0 releases\r\n+ Fixup `CrossDacCoreClrVersion` variable routing\r\n+ Add `SymStoreCrossDacIndex` to add libcoreclr.so to packages and enable SymStore indexing","Url":"https://github.com/dotnet/coreclr/pull/28054","RelatedDescription":"Closed or merged PR \"More release/3.1 crossdac incremental changes\" (#28054)"},{"Id":"646561680","IsPullRequest":true,"CreatedAt":"2020-07-02T01:55:05","Actor":"sdmaclea","Number":"28052","RawContent":null,"Title":"Modify internal pipeline to simplify 3.1-crossdac mirroring","State":"closed","Body":"My idea is that the 3.1-crossdac will disable the normal runtime build and test (as it would be wasteful and redundant), then add its own tests.  \r\n\r\nTo simplify auto merging I wanted to keep the 3.1 servicing branch aligned with the 3.1-crossdac branch.\r\n\r\nSo this basically \r\n+ Adding comments.\r\n+ A condition on `variables['Build.SourceBranch']`\r\n+ Changing indent.\r\n\r\nMy hope is that this is the only CI change to the release/3.1 branch.","Url":"https://github.com/dotnet/coreclr/pull/28052","RelatedDescription":"Closed or merged PR \"Modify internal pipeline to simplify 3.1-crossdac mirroring\" (#28052)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"678841190","IsPullRequest":true,"CreatedAt":"2020-08-14T03:36:45","Actor":"dotnet-maestro[bot]","Number":"13467","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.1 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13467","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13467)"},{"Id":"678835164","IsPullRequest":true,"CreatedAt":"2020-08-14T03:30:07","Actor":"dotnet-maestro[bot]","Number":"13465","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200813.11\r\n- **Date Produced**: 8/14/2020 12:46 AM\r\n- **Commit**: 229e4969662193afe17ad418b175e0a798041a78\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.9 to 3.1.8-servicing.20413.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13465","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13465)"},{"Id":"678830995","IsPullRequest":true,"CreatedAt":"2020-08-14T03:30:03","Actor":"dotnet-maestro[bot]","Number":"13464","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200813.11\r\n- **Date Produced**: 8/14/2020 12:46 AM\r\n- **Commit**: 229e4969662193afe17ad418b175e0a798041a78\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.9 to 3.1.8-servicing.20413.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13464","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13464)"},{"Id":"678841177","IsPullRequest":true,"CreatedAt":"2020-08-14T02:26:09","Actor":"dotnet-maestro[bot]","Number":"13466","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/14/2020 1:16 AM\r\n- **Commit**: d0bc85c7c6047fcf43a99ea5f02da5136c118cce\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.2 to 3.1.8-servicing.20413.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13466","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13466)"},{"Id":"678686407","IsPullRequest":true,"CreatedAt":"2020-08-14T01:32:59","Actor":"dotnet-maestro[bot]","Number":"13462","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200813.9\r\n- **Date Produced**: 8/13/2020 10:24 PM\r\n- **Commit**: a740737aae065a3135be06f37ec2a55320c460ba\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20412.5 to 3.1.8-servicing.20413.9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13462","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13462)"},{"Id":"678668442","IsPullRequest":true,"CreatedAt":"2020-08-14T01:29:47","Actor":"dotnet-maestro[bot]","Number":"13460","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/13/2020 6:44 PM\r\n- **Commit**: 82e2b68c9ef7f28307114c4ab4d43c11e6f7cd52\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.107-servicing.20372.6 to 3.1.108-servicing.20413.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13460","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13460)"},{"Id":"678779704","IsPullRequest":true,"CreatedAt":"2020-08-13T23:33:56","Actor":"dotnet-maestro[bot]","Number":"13463","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200813.9\r\n- **Date Produced**: 8/13/2020 10:24 PM\r\n- **Commit**: a740737aae065a3135be06f37ec2a55320c460ba\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20413.4 to 3.1.8-servicing.20413.9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13463","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13463)"},{"Id":"678686348","IsPullRequest":true,"CreatedAt":"2020-08-13T20:25:06","Actor":"dotnet-maestro[bot]","Number":"13461","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200813.4\r\n- **Date Produced**: 8/13/2020 7:07 PM\r\n- **Commit**: ad4f0a0cb658d17b6aa74e3a6733637c03cfb2c3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.8-servicing.20412.5 to 3.1.8-servicing.20413.4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13461","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13461)"},{"Id":"678548707","IsPullRequest":true,"CreatedAt":"2020-08-13T19:47:50","Actor":"joeloff","Number":"13457","RawContent":null,"Title":"Dev/merge internal 08132020/release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13457","RelatedDescription":"Closed or merged PR \"Dev/merge internal 08132020/release/3.1.4xx\" (#13457)"},{"Id":"677816339","IsPullRequest":true,"CreatedAt":"2020-08-13T18:54:44","Actor":"joeloff","Number":"13448","RawContent":null,"Title":"Dev/merge internal 08112020/release/3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13448","RelatedDescription":"Closed or merged PR \"Dev/merge internal 08112020/release/3.1.1xx\" (#13448)"},{"Id":"678575888","IsPullRequest":true,"CreatedAt":"2020-08-13T17:57:53","Actor":"sfoslund","Number":"13459","RawContent":null,"Title":"[2.1.8xx] Update branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13459","RelatedDescription":"Closed or merged PR \"[2.1.8xx] Update branding\" (#13459)"},{"Id":"678575578","IsPullRequest":true,"CreatedAt":"2020-08-13T17:57:45","Actor":"sfoslund","Number":"13458","RawContent":null,"Title":"[2.1.5xx] Update branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13458","RelatedDescription":"Closed or merged PR \"[2.1.5xx] Update branding\" (#13458)"},{"Id":"678121639","IsPullRequest":true,"CreatedAt":"2020-08-13T06:55:49","Actor":"dotnet-maestro[bot]","Number":"13454","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/13/2020 2:36 AM\r\n- **Commit**: 8e36081d65f8ef860cb4b5c78048535e20898f52\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.6-servicing.20316.4 to 3.1.8-servicing.20412.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.6 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.6 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13454","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13454)"},{"Id":"677913952","IsPullRequest":true,"CreatedAt":"2020-08-13T06:50:07","Actor":"dotnet-maestro[bot]","Number":"13450","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20200812.5\r\n- **Date Produced**: 8/12/2020 6:36 PM\r\n- **Commit**: a8e8fe2ab3f68b9cfaf9a9826cb379525382efb9\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.6-servicing.20317.14 to 3.1.8-servicing.20412.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13450","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13450)"},{"Id":"677621641","IsPullRequest":true,"CreatedAt":"2020-08-13T06:47:42","Actor":"dotnet-maestro[bot]","Number":"13447","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/12/2020 11:34 AM\r\n- **Commit**: 10dad0fa67c3cd3db542c29d591de026ed45147b\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: from 3.1.6-servicing.20311.2 to 3.1.8-servicing.20412.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13447","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13447)"},{"Id":"678164222","IsPullRequest":true,"CreatedAt":"2020-08-13T06:02:58","Actor":"dotnet-maestro[bot]","Number":"13456","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200812.2\r\n- **Date Produced**: 8/13/2020 4:56 AM\r\n- **Commit**: 9a599ffefec5df0619e5154a8e5c14eba09dc5e6\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20412.1 to 3.1.8-servicing.20412.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13456","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13456)"},{"Id":"678121640","IsPullRequest":true,"CreatedAt":"2020-08-13T03:54:21","Actor":"dotnet-maestro[bot]","Number":"13455","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/13/2020 2:36 AM\r\n- **Commit**: 8e36081d65f8ef860cb4b5c78048535e20898f52\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.8-servicing.20411.3 to 3.1.8-servicing.20412.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.8 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.8 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13455","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13455)"},{"Id":"678037313","IsPullRequest":true,"CreatedAt":"2020-08-12T23:24:35","Actor":"dotnet-maestro-bot","Number":"13453","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13453","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13453)"},{"Id":"678037295","IsPullRequest":true,"CreatedAt":"2020-08-12T23:24:32","Actor":"dotnet-maestro-bot","Number":"13452","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13452","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13452)"},{"Id":"678037290","IsPullRequest":true,"CreatedAt":"2020-08-12T23:24:30","Actor":"dotnet-maestro-bot","Number":"13451","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13451","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13451)"},{"Id":"677913694","IsPullRequest":true,"CreatedAt":"2020-08-12T20:34:47","Actor":"dotnet-maestro[bot]","Number":"13449","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200812.5\r\n- **Date Produced**: 8/12/2020 6:36 PM\r\n- **Commit**: a8e8fe2ab3f68b9cfaf9a9826cb379525382efb9\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 3.1.6-servicing.20317.14 to 3.1.8-servicing.20412.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13449","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13449)"},{"Id":"677553334","IsPullRequest":true,"CreatedAt":"2020-08-12T09:46:26","Actor":"dotnet-maestro-bot","Number":"13446","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* wtgodbe\n* dsplaisted\n* wli3\n* dotnet-bot\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13446","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13446)"},{"Id":"677397666","IsPullRequest":true,"CreatedAt":"2020-08-12T09:43:56","Actor":"dotnet-maestro[bot]","Number":"13445","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200811.3\r\n- **Date Produced**: 8/12/2020 4:27 AM\r\n- **Commit**: 76619ef8bf97b21c40b32872f0e440e44c6760cf\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.6-servicing.20316.4 to 3.1.8-servicing.20411.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.6 to 3.1.8\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.6 to 3.1.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13445","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13445)"},{"Id":"677215556","IsPullRequest":true,"CreatedAt":"2020-08-12T06:04:22","Actor":"dotnet-maestro[bot]","Number":"13443","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200811.9\r\n- **Date Produced**: 8/11/2020 8:21 PM\r\n- **Commit**: 2e804f8d57972faf64a19a7295728dc7bfcb5fce\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20405.7 to 1.0.0-beta.20411.9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13443","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13443)"},{"Id":"677269606","IsPullRequest":true,"CreatedAt":"2020-08-12T04:24:29","Actor":"wli3","Number":"13444","RawContent":null,"Title":"update branding to 2.1.615","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13444","RelatedDescription":"Closed or merged PR \"update branding to 2.1.615\" (#13444)"},{"Id":"673972725","IsPullRequest":true,"CreatedAt":"2020-08-06T06:14:45","Actor":"dotnet-maestro[bot]","Number":"13442","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13442","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13442)"},{"Id":"658389526","IsPullRequest":true,"CreatedAt":"2020-07-22T23:00:25","Actor":"dotnet-maestro-bot","Number":"13438","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wtgodbe\n* dsplaisted\n* wli3\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13438","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13438)"},{"Id":"663986992","IsPullRequest":true,"CreatedAt":"2020-07-22T22:56:25","Actor":"dotnet-maestro[bot]","Number":"13441","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200722.8\r\n- **Date Produced**: 7/22/2020 9:53 PM\r\n- **Commit**: 4b0c1aca9239a592552a63e84d09767d9b187adb\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20365.20 to 3.1.400-servicing.20372.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13441","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13441)"},{"Id":"663936181","IsPullRequest":true,"CreatedAt":"2020-07-22T18:12:33","Actor":"wtgodbe","Number":"13440","RawContent":null,"Title":"Update version of Guardian package","State":"closed","Body":"Unblocks SDL validation","Url":"https://github.com/dotnet/cli/pull/13440","RelatedDescription":"Closed or merged PR \"Update version of Guardian package\" (#13440)"},{"Id":"663323745","IsPullRequest":true,"CreatedAt":"2020-07-22T00:38:45","Actor":"joeloff","Number":"13439","RawContent":null,"Title":"Stabilize branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13439","RelatedDescription":"Closed or merged PR \"Stabilize branding\" (#13439)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"},{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"wrkettlitz","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"wrkettlitz","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200811.8\r\n- **Date Produced**: 8/11/2020 7:07 PM\r\n- **Commit**: ecec08a0eebbd92bb9538e351d475582551d9092\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20411.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"678805526","IsPullRequest":true,"CreatedAt":"2020-08-13T23:50:15","Actor":"pgovind","Number":"42967","RawContent":null,"Title":"Disable parallel xunit tests and enable logs","State":"open","Body":"Hopefully this gives us more info on the failing legs in CI for RegEx. ","Url":"https://github.com/dotnet/corefx/pull/42967","RelatedDescription":"Open PR \"Disable parallel xunit tests and enable logs\" (#42967)"},{"Id":"677298755","IsPullRequest":true,"CreatedAt":"2020-08-13T21:23:37","Actor":"dotnet-maestro[bot]","Number":"42964","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200811.5\r\n- **Date Produced**: 8/12/2020 7:37 AM\r\n- **Commit**: f897710bc4efe6a046068fde0acf641667a8fff5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.4-servicing.20366.2 to 3.1.8-servicing.20411.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42964","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42964)"},{"Id":"678039468","IsPullRequest":true,"CreatedAt":"2020-08-13T17:59:45","Actor":"dotnet-maestro-bot","Number":"42965","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05428-07, servicing-29130-01, servicing-29130-02, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42965","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05428-07, servicing-29130-01, servicing-29130-02, stable, respectively (release/2.1)\" (#42965)"},{"Id":"678039635","IsPullRequest":true,"CreatedAt":"2020-08-12T23:30:57","Actor":"dotnet-maestro-bot","Number":"42966","RawContent":null,"Title":"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-05428-07, servicing-29130-02, rel-28605-00, rel-28605-00, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42966","RelatedDescription":"Open PR \"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-05428-07, servicing-29130-02, rel-28605-00, rel-28605-00, respectively (release/uwp6.2)\" (#42966)"},{"Id":"667345442","IsPullRequest":true,"CreatedAt":"2020-08-12T15:05:07","Actor":"dotnet-maestro-bot","Number":"42959","RawContent":null,"Title":"Update BuildTools to rc1-05428-07 (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42959","RelatedDescription":"Closed or merged PR \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#42959)"},{"Id":"677211493","IsPullRequest":true,"CreatedAt":"2020-08-12T00:42:45","Actor":"Anipik","Number":"42962","RawContent":null,"Title":"Update Branding to 3.1.8","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42962","RelatedDescription":"Closed or merged PR \"Update Branding to 3.1.8\" (#42962)"},{"Id":"677234113","IsPullRequest":true,"CreatedAt":"2020-08-11T22:59:00","Actor":"Anipik","Number":"42963","RawContent":null,"Title":"Update branding for 2.1.22","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42963","RelatedDescription":"Closed or merged PR \"Update branding for 2.1.22\" (#42963)"},{"Id":"668184871","IsPullRequest":true,"CreatedAt":"2020-08-10T18:16:52","Actor":"dotnet-maestro-bot","Number":"42961","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42961","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42961)"},{"Id":"668136180","IsPullRequest":true,"CreatedAt":"2020-07-29T21:38:38","Actor":"silvioguiso","Number":"42960","RawContent":null,"Title":"Unlocks esrp version","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42960","RelatedDescription":"Closed or merged PR \"Unlocks esrp version\" (#42960)"},{"Id":"667260042","IsPullRequest":true,"CreatedAt":"2020-07-28T17:57:05","Actor":"dotnet-maestro-bot","Number":"42958","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @garath\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42958","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42958)"},{"Id":"651727270","IsPullRequest":true,"CreatedAt":"2020-07-28T17:48:24","Actor":"garath","Number":"42944","RawContent":null,"Title":"Use Azure Artifacts feeds instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/corefx/pull/42944","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts feeds instead of MyGet\" (#42944)"},{"Id":"666540534","IsPullRequest":true,"CreatedAt":"2020-07-27T21:21:20","Actor":"dotnet-maestro-bot","Number":"42957","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42957","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42957)"},{"Id":"666533975","IsPullRequest":true,"CreatedAt":"2020-07-27T19:41:25","Actor":"silvioguiso","Number":"42956","RawContent":null,"Title":"Locks esrp version","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42956","RelatedDescription":"Closed or merged PR \"Locks esrp version\" (#42956)"},{"Id":"656955515","IsPullRequest":true,"CreatedAt":"2020-07-16T17:34:53","Actor":"Anipik","Number":"42952","RawContent":null,"Title":"add packaging for system.data.sqlclient","State":"closed","Body":"@ericstj do we need to build pkg\\Microsoft.Windows.Compatibility\\Microsoft.Windows.Compatibility.pkgproj this package as well in order to ship system.data.sqlclient ?\r\nLast time we incremented the serviceModelVersion but didnt build Microsoft.Windows.Compatibility.pkgproj t","Url":"https://github.com/dotnet/corefx/pull/42952","RelatedDescription":"Closed or merged PR \"add packaging for system.data.sqlclient\" (#42952)"},{"Id":"657519998","IsPullRequest":true,"CreatedAt":"2020-07-15T17:28:46","Actor":"dotnet-maestro-bot","Number":"42955","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42955","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42955)"},{"Id":"657496222","IsPullRequest":true,"CreatedAt":"2020-07-15T16:49:46","Actor":"silvioguiso","Number":"42954","RawContent":null,"Title":"Updates pipelines queues","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42954","RelatedDescription":"Closed or merged PR \"Updates pipelines queues\" (#42954)"},{"Id":"656958126","IsPullRequest":true,"CreatedAt":"2020-07-14T23:35:57","Actor":"dotnet-maestro-bot","Number":"42953","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @silvioguiso\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42953","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42953)"},{"Id":"656916463","IsPullRequest":true,"CreatedAt":"2020-07-14T23:12:33","Actor":"dotnet-maestro-bot","Number":"42951","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-29017-01, servicing-29018-12, servicing-29019-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42951","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-29017-01, servicing-29018-12, servicing-29019-01, respectively (release/2.1)\" (#42951)"},{"Id":"656902486","IsPullRequest":true,"CreatedAt":"2020-07-14T23:12:10","Actor":"Anipik","Number":"42949","RawContent":null,"Title":"update branding for 2.1.21","State":"closed","Body":"no packages were published in this iteration","Url":"https://github.com/dotnet/corefx/pull/42949","RelatedDescription":"Closed or merged PR \"update branding for 2.1.21\" (#42949)"},{"Id":"651714174","IsPullRequest":true,"CreatedAt":"2020-07-14T23:11:18","Actor":"vcsjones","Number":"42942","RawContent":null,"Title":"[release/3.1] Ignore 0-byte responses from AIA fetch.","State":"closed","Body":"Ports dotnet/runtime#38787 to release/3.1 to address dotnet/runtime#38704.\r\n\r\n## Summary\r\n\r\nWhen performing AIA fetching on Linux-based operating systems, we attempt to download the missing issuer certificate to aid in building a complete X509 chain. If the server (incorrectly) responds with a successful status code, but an empty response, we attempt to re-build the chain with an X509 certificate that is in an invalid state. This invalid state results in a null pointer being dereferenced in native code, which causes a crash of the runtime.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#38704. On Linux-based environments, customers that explicitly or implicitly use `X509Chain` to build a certificate that cause an AIA fetch and the server improperly responds successfully but with empty content will cause a null pointer dereference in native code, which will result in an unrecoverable hard crash of the runtime.\r\n\r\n## Regression?\r\n\r\nYes. Prior to .NET Core 3.0, a managed exception was thrown instead of an access violation.\r\n\r\n## Testing\r\n\r\nThe original fix against dotnet/runtime contains a unit test to prevent further regressions. The test is not ported here due to missing testing faculties for AIA fetching.\r\n\r\n## Risk\r\n\r\n**Low**. The fix is to treat empty responses or any other response that results in a certificate with an invalid handle as an invalid response.","Url":"https://github.com/dotnet/corefx/pull/42942","RelatedDescription":"Closed or merged PR \"[release/3.1] Ignore 0-byte responses from AIA fetch.\" (#42942)"},{"Id":"644136441","IsPullRequest":true,"CreatedAt":"2020-07-14T23:08:54","Actor":"cheenamalhotra","Number":"42938","RawContent":null,"Title":"[Release/3.1] Fix infinite loop when end of stream is reached","State":"closed","Body":"Ports https://github.com/dotnet/SqlClient/pull/577 to fix issue https://github.com/dotnet/SqlClient/issues/165 in System.Data.SqlClient\r\n\r\n### Summary\r\nThe issue has been occurring for many customer applications where Client and Server cannot find a common security protocol to continue SSL handshake as the server does not send any further information while the client continues to loop. This started happening recently when client OS and docker containers disabled TLS v1.0 and v1.1, while target servers were not upgraded to TLS v1.2. \r\n\r\n### Customer Impact\r\n**Medium:** The issue impacts Linux and Mac applications where servers are not ready to transition to TLS v1.2.\r\n\r\n### Regression?\r\nNo, this issue is reproducible with all previous versions of .NET Core SqlClient drivers (impacts Managed SNI use-cases).\r\n\r\n### Testing\r\nIn order to test this issue, a special setup is required on server side, to disable TLS v1.2 while the client only supports with TLSv1.2+. Local testing has been done to confirm the fix is applicable and the driver can now come out of infinite loop and throw exception.\r\n\r\n### Risk\r\n**Low:** The fix is not a major functional change, and it applies only to Linux/Mac customers if their servers are not updated to support TLS 1.2. This has also been released in Microsoft.Data.SqlClient v1.1.3 and v2.0.0.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42938","RelatedDescription":"Closed or merged PR \"[Release/3.1] Fix infinite loop when end of stream is reached\" (#42938)"},{"Id":"647535840","IsPullRequest":true,"CreatedAt":"2020-07-14T23:08:14","Actor":"danmosemsft","Number":"42941","RawContent":null,"Title":"[release/3.1] Port SafeProcessHandle.Unix: fix missing DangerousRelease","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/37412\r\n\r\n###  Description\r\n\r\nPorts #37412. Original issue https://github.com/dotnet/runtime/issues/36661\r\nFixes regression introduced in [this PR](https://github.com/dotnet/corefx/pull/36199) between 2.2 and 3.0 \r\n\r\n###  Description from original PR \r\n\r\nBecause the SafeProcessHandle was not owned, ReleaseHandle was not called, causing the wrapped SafeWaitHandle to never release its resources.\r\n\r\n###  Customer Impact\r\n\r\nFrom customer:\r\n> This is very impactful for our embedded clients. If left out would mean skipping .Net core 3. The clients cycle a process exactly once per second which amounts to ~ 10-20 mb leak every 24 hrs. I should imagine any long running processes like asp.net core servers that spawn any child processes are also affected.\r\n\r\nWe are asked to port this to enable the customer to migrate to 3.1.\r\n\r\n###  Risk\r\n\r\nLow. \r\n* We already shipped this in Preview 6 and the customer (@myrup) validated the change there\r\n* The change is limited to Unix\r\n* The change is very localized and relatively straightforward to understand. \r\n","Url":"https://github.com/dotnet/corefx/pull/42941","RelatedDescription":"Closed or merged PR \"[release/3.1] Port SafeProcessHandle.Unix: fix missing DangerousRelease\" (#42941)"},{"Id":"656700272","IsPullRequest":true,"CreatedAt":"2020-07-14T23:07:42","Actor":"dotnet-maestro-bot","Number":"42947","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @Anipik\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42947","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42947)"},{"Id":"656802977","IsPullRequest":true,"CreatedAt":"2020-07-14T22:56:01","Actor":"Anipik","Number":"42948","RawContent":null,"Title":"Update Branding to 3.1.7","State":"closed","Body":"Packages.builds file is not cleared bcoz we didnt ship those packages. they will get shipped in this change\r\n\r\ncc @aik-jahoda ","Url":"https://github.com/dotnet/corefx/pull/42948","RelatedDescription":"Closed or merged PR \"Update Branding to 3.1.7\" (#42948)"},{"Id":"656910214","IsPullRequest":true,"CreatedAt":"2020-07-14T21:28:40","Actor":"stephentoub","Number":"42950","RawContent":null,"Title":"[release/3.1] Fix ManagedWebSocket ordering of releasing send buffer and semaphore","State":"open","Body":"Port https://github.com/dotnet/runtime/pull/39199 to release/3.1.\r\n\r\n## Summary\r\n\r\nManagedWebSocket is the WebSocket implementation returned from WebSocket.CreateFromStream and used by both ClientWebSocket and ASP.NET Core.  Sends on a WebSocket can't run concurrently, and there's a lock that protects access to shared resources, including a pooled buffer.  The code that ends a send operation returns the buffer to the pool and releases the lock, but it does so in the opposite (wrong) order.  As such, a second concurrent send could end up trying to use the buffer concurrently with the first send operation releasing it.\r\n\r\n## Customer Impact\r\n\r\nInitially reported as a sporadic ArgumentException that escapes from within the WebSocket implementation (from valid usage).  But in theory it could result in data corruption throughout the process, with a buffer being returned to the pool while it's still in use.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nUnit tests.\r\n\r\n## Risk\r\n\r\nLow.  The fix just swaps two instructions (in three places) to return the buffer before releasing the lock.\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42950","RelatedDescription":"Open PR \"[release/3.1] Fix ManagedWebSocket ordering of releasing send buffer and semaphore\" (#42950)"},{"Id":"656178037","IsPullRequest":true,"CreatedAt":"2020-07-14T15:21:38","Actor":"silvioguiso","Number":"42946","RawContent":null,"Title":"Updated build pools","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42946","RelatedDescription":"Closed or merged PR \"Updated build pools\" (#42946)"},{"Id":"652538867","IsPullRequest":true,"CreatedAt":"2020-07-07T21:54:22","Actor":"Anipik","Number":"42945","RawContent":null,"Title":"note that the crypto article moved","State":"closed","Body":"This is a temproray branch. After merging this change i will update the master and master-archive tags to point to the new commit","Url":"https://github.com/dotnet/corefx/pull/42945","RelatedDescription":"Closed or merged PR \"note that the crypto article moved\" (#42945)"},{"Id":"651722065","IsPullRequest":true,"CreatedAt":"2020-07-06T18:43:20","Actor":"vcsjones","Number":"42943","RawContent":null,"Title":"[release/2.1] Ignore 0-byte responses from AIA fetch.","State":"closed","Body":"Ports dotnet/runtime#38787 to release/2.1 to address dotnet/runtime#38704.\r\n\r\n## Summary\r\n\r\nWhen performing AIA (Authority Information Access) fetching on Linux-based operating systems, we attempt to download the missing issuer certificate to aid in building a complete X509 chain. If the server (incorrectly) responds with a successful status code, but an empty response, we attempt to re-build the chain with an X509 certificate that is in an invalid state. This invalid state results in an exception during chain building, which is not expected.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#38704. On Linux-based environments, customers that explicitly or implicitly use `X509Chain` to build a certificate that cause an AIA fetch and the server improperly responds successfully but with empty content will cause an exception in chain building, which is not expected.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nThe original fix against dotnet/runtime contains a unit test to prevent further regressions. The test is not ported here due to missing testing faculties for AIA fetching.\r\n\r\n## Risk\r\n\r\n**Low**. The fix is to treat empty responses or any other response that results in a certificate with an invalid handle as an invalid response.","Url":"https://github.com/dotnet/corefx/pull/42943","RelatedDescription":"Closed or merged PR \"[release/2.1] Ignore 0-byte responses from AIA fetch.\" (#42943)"},{"Id":"645642851","IsPullRequest":true,"CreatedAt":"2020-06-25T18:03:30","Actor":"Anipik","Number":"42940","RawContent":null,"Title":"Build the platforms package for shipping","State":"closed","Body":"This https://github.com/dotnet/corefx/pull/42928 change was mistakenly merged preemptively before the branch  was open.\r\nIt lacked the packaging stuff, so just adding that","Url":"https://github.com/dotnet/corefx/pull/42940","RelatedDescription":"Closed or merged PR \"Build the platforms package for shipping\" (#42940)"},{"Id":"644373851","IsPullRequest":true,"CreatedAt":"2020-06-25T02:37:55","Actor":"carlossanlop","Number":"42939","RawContent":null,"Title":"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37538\r\n\r\n### Summary\r\n\r\n[This 3.1 code fix](https://github.com/dotnet/corefx/pull/42501/files), which addressed a .NET Standard issue in System.IO.FileSystem.AccessControl introduced a recursive call in Path.cs that affects the `Microsoft.IO` version of `Path`.\r\n\r\n### Customer Impact\r\n\r\nCurrently impacts Visual Studio who is consuming Microsoft.IO (see issue).\r\nSystem.IO is not affected by this recursive call because the `Path` code consumed by that namespace lives in the mirrored file in coreclr.\r\n\r\n### Regression?\r\n\r\nYes.\r\n\r\n### Testing\r\n\r\nI built corefx in both netcoreapp3.1 and netfx.\r\nI ran the tests in System.Runtime.Extensions, which is where the Path unit tests live, for both frameworks.\r\nThere are no Microsoft.IO unit tests, so I copied the dll into a NetFX console app, made a call to `TrimEndingDirectorySeparator(ReadOnlySpan<char> path)` and confirmed that the issue is resolved for Microsft.IO.\r\n\r\n### Risk\r\n\r\nLow: Accepting this change will get rid of the recursive call affecting Microsoft.IO.\r\n\r\ncc @danmosemsft @ericstj","Url":"https://github.com/dotnet/corefx/pull/42939","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call\" (#42939)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"678897092","IsPullRequest":true,"CreatedAt":"2020-08-14T04:56:29","Actor":"dotnet-bot","Number":"46812","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯","Url":"https://github.com/dotnet/roslyn/pull/46812","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#46812)"},{"Id":"678883348","IsPullRequest":true,"CreatedAt":"2020-08-14T04:16:20","Actor":"sharwell","Number":"46811","RawContent":null,"Title":"Terminate the integration test process if cleanup fails","State":"open","Body":"* Terminate the test process if state cleanup times out (it would never complete from this state, so better to fail quickly with logs)\r\n* Collect additional diagnostics about `CommitOnSave` failures","Url":"https://github.com/dotnet/roslyn/pull/46811","RelatedDescription":"Open PR \"Terminate the integration test process if cleanup fails\" (#46811)"},{"Id":"678879767","IsPullRequest":true,"CreatedAt":"2020-08-14T04:04:22","Actor":"sharwell","Number":"46810","RawContent":null,"Title":"Move DateAndTime embedded language to the features layer","State":"open","Body":"This matches the layering used by the Regex feature.","Url":"https://github.com/dotnet/roslyn/pull/46810","RelatedDescription":"Open PR \"Move DateAndTime embedded language to the features layer\" (#46810)"},{"Id":"678775267","IsPullRequest":true,"CreatedAt":"2020-08-14T04:02:24","Actor":"jasonmalinowski","Number":"46801","RawContent":null,"Title":"Ensure the Compilation's options are changed on .editorconfig changes","State":"closed","Body":"We were correctly producing a new CompilationOptions but failed to update an existing Compilation if one had been computed first.\r\n\r\n<details>\r\n<summary>Ask Mode</summary>\r\n\r\n**Who is impacted by this bug?**\r\nAnybody who tries to edit an .editorconfig's diagnostic severity and expects the change to be reflected.\r\n\r\n**Bugs Fixed**\r\nFixes https://github.com/dotnet/roslyn/issues/46784\r\n\r\n**What is the customer scenario and impact of the bug?**\r\nMake any change to an .editorconfig that has diagnostic severity changes, and the change won't be reflected in the error list or anywhere else.\r\n\r\n**What is the workaround?**\r\nRestart Visual Studio.\r\n\r\n**How was the bug found?**\r\nDogfooding and ad-hoc testing.\r\n\r\n**If this fix is for a regression - what had regressed, when was the regression introduced, and why was the regression originally missed?**\r\nInsufficient testing of https://github.com/dotnet/roslyn/pull/44331. We were testing enough other impacts of the change we missed this case to start with. The original changed updated a unit test which correctly checked that the Workspace was producing a new set of options when an .editorconfig changed, but it missed a check that the options were passed to a new Compilation, which was not actually happening.\r\n\r\n**Testing**\r\nManually verified, and a unit test catching the underlying mistake is updated. An integration test is also on it's way into the branch as well for an end-to-end with a code fix.\r\n\r\n</details>","Url":"https://github.com/dotnet/roslyn/pull/46801","RelatedDescription":"Closed or merged PR \"Ensure the Compilation's options are changed on .editorconfig changes\" (#46801)"},{"Id":"678861561","IsPullRequest":true,"CreatedAt":"2020-08-14T03:03:11","Actor":"dotnet-bot","Number":"46809","RawContent":null,"Title":"Merge release/dev16.8 to release/dev16.8-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.8 into release/dev16.8-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-to-release/dev16.8-vs-deps\ngit reset --hard upstream/release/dev16.8-vs-deps\ngit merge upstream/release/dev16.8\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-to-release/dev16.8-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯","Url":"https://github.com/dotnet/roslyn/pull/46809","RelatedDescription":"Open PR \"Merge release/dev16.8 to release/dev16.8-vs-deps\" (#46809)"},{"Id":"678826559","IsPullRequest":false,"CreatedAt":"2020-08-14T01:03:35","Actor":"jasonmalinowski","Number":"46808","RawContent":null,"Title":"Exception while loading projects","State":"open","Body":"**Version Used**: 16.8 Preview 1 (public preview build)\r\n\r\n```\r\nSystem.InvalidOperationException: Sequence contains no matching element\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioProject.<>c__DisplayClass89_0.<OnBatchScopeDisposed>b__0(Solution solution)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyBatchChangeToWorkspace(Func`2 mutation)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioProject.OnBatchScopeDisposed()\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioProject.BatchScope.Dispose()\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.CPS.CPSProject.EndBatch()\r\n   at Microsoft.VisualStudio.ProjectSystem.LanguageServices.WorkspaceProjectContextHost.WorkspaceProjectContextHostInstance.<ApplyProjectChangesUnderLockAsync>d__19.MoveNext()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/46808","RelatedDescription":"Open issue \"Exception while loading projects\" (#46808)"},{"Id":"678824970","IsPullRequest":true,"CreatedAt":"2020-08-14T00:58:00","Actor":"tmat","Number":"46807","RawContent":null,"Title":"Improvements to LCS buffer pooling","State":"open","Body":"Share pool across all generic instantiations of `LongestCommonSubsequence<T>`.\r\nRemove buffer segments bigger than 1MB from buffers returned to the pool.\r\nClear the pool at debugging session end.\r\n","Url":"https://github.com/dotnet/roslyn/pull/46807","RelatedDescription":"Open PR \"Improvements to LCS buffer pooling\" (#46807)"},{"Id":"678805344","IsPullRequest":true,"CreatedAt":"2020-08-13T23:49:32","Actor":"KirillOsenkov","Number":"46806","RawContent":null,"Title":"Check if $insertionDir exists before getting children.","State":"open","Body":"There's a combination of flags to build.ps1 that doesn't do the VSSetup related stuff, so the insertion dir doesn't exist. This is used in CI that indexes Roslyn source code. Otherwise it fails the build.","Url":"https://github.com/dotnet/roslyn/pull/46806","RelatedDescription":"Open PR \"Check if $insertionDir exists before getting children.\" (#46806)"},{"Id":"678788800","IsPullRequest":false,"CreatedAt":"2020-08-13T23:20:01","Actor":"RikkiGibson","Number":"46805","RawContent":null,"Title":"Nullable state of constants should be determined from their ConstantValue","State":"open","Body":"It feels very weird that the first scenario would give a warning, but the second scenario does not:\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    const string? s1 = \"a\";\r\n\r\n    public Program()\r\n    {\r\n        var x = s1.ToString(); // 1\r\n    }\r\n}\r\n```\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    public string? Prop { get; set; } = \"a\";\r\n    public Program()\r\n    {\r\n        Prop.ToString();\r\n    }\r\n}\r\n```\r\n\r\n_Originally posted by @333fred in https://github.com/dotnet/roslyn/pull/46441_\r\n\r\n(addendum by @RikkiGibson: it feels like whether the usage of the constant is in a constructor or not should not matter. We always know what the constant value is--it never changes--so let's use it to give the right answer.)\r\n","Url":"https://github.com/dotnet/roslyn/issues/46805","RelatedDescription":"Open issue \"Nullable state of constants should be determined from their ConstantValue\" (#46805)"},{"Id":"678719991","IsPullRequest":true,"CreatedAt":"2020-08-13T23:14:48","Actor":"CyrusNajmabadi","Number":"46796","RawContent":null,"Title":"Use C# 'not' pattern when available.","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/46698","Url":"https://github.com/dotnet/roslyn/pull/46796","RelatedDescription":"Closed or merged PR \"Use C# 'not' pattern when available.\" (#46796)"},{"Id":"678784345","IsPullRequest":true,"CreatedAt":"2020-08-13T23:06:46","Actor":"chsienki","Number":"46804","RawContent":null,"Title":"Add extra exception info to generator warnings.","State":"open","Body":"Add exception info to generator warnings, and add a description that includes the entire stack trace.","Url":"https://github.com/dotnet/roslyn/pull/46804","RelatedDescription":"Open PR \"Add extra exception info to generator warnings.\" (#46804)"},{"Id":"678781146","IsPullRequest":false,"CreatedAt":"2020-08-13T22:57:50","Actor":"kzu","Number":"46803","RawContent":null,"Title":"CompletionProvider.GetChangeAsync is not called for NuGet-based completion provider ","State":"open","Body":"**Version Used**: \r\n```\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.8.0 Preview 1.0\r\nVisualStudio.16.Preview/16.8.0-pre.1.0+30404.54\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\nC# Tools   3.8.0-1.20378.6+226c0c3f392232b3dd7ecd527f1fd00f0f86d7e4\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a custom `CompletionProvider` and log calls to `GetChangeAsync` somewhere (i.e. a temp file)\r\n2. Expose the provider as a VS extension via a VSIX project, run it in the VS experimental to consume it in a project\r\n3. Notice how the `GetChangesAsync` is called to allow the provider to determine what changes are needed\r\n4. Build a nuget package for the provider instead, and install it via nuget\r\n5. Consume it from the regular VS hive (so that the experimental one from 2. isn't used), notice how `GetChangeAsync` is never called.\r\n\r\n**Expected Behavior**:\r\nSame behavior is preserved for both NuGet-provided as well as VSIX-provided completion providers.\r\n\r\nTagging @sharwell since he enabled completion providers via NuGet some time ago 👍 ","Url":"https://github.com/dotnet/roslyn/issues/46803","RelatedDescription":"Open issue \"CompletionProvider.GetChangeAsync is not called for NuGet-based completion provider \" (#46803)"},{"Id":"678779621","IsPullRequest":false,"CreatedAt":"2020-08-13T22:53:22","Actor":"davkean","Number":"46802","RawContent":null,"Title":"CSharpDeclareAsNullableCodeFixProvider threw \"ArgumentException\" on foreach declaration","State":"open","Body":"**Version Used**: \r\nVersion 16.8.0 Preview 2.0 [30404.163.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\nCTRL+. below where indicated by the $\r\n\r\n``` C#\r\n#nullable enable\r\n\r\n        [Fact]\r\n        public void AllRulesMustBeExported()\r\n        {\r\n            foreach ($var rule in GetRules(suffix: null, recursive: true))\r\n            {\r\n\r\n            }\r\n        }\r\n\r\n        protected static IEnumerable<string> GetRules(string suffix, bool recursive = false)\r\n        {\r\n        }\r\n```\r\n\r\n```\r\nSystem.ArgumentException : The node is not part of the tree.\r\nParameter name: node\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.CheckNodeInOriginalTreeOrTracked(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceNode(SyntaxNode node,SyntaxNode newNode)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeFixes.DeclareAsNullable.CSharpDeclareAsNullableCodeFixProvider.MakeDeclarationNullable(SyntaxEditor editor,SemanticModel model,SyntaxNode node,HashSet`1 alreadyHandled)\r\n   at async Microsoft.CodeAnalysis.CSharp.CodeFixes.DeclareAsNullable.CSharpDeclareAsNullableCodeFixProvider.FixAllAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/46802","RelatedDescription":"Open issue \"CSharpDeclareAsNullableCodeFixProvider threw \"ArgumentException\" on foreach declaration\" (#46802)"},{"Id":"678760374","IsPullRequest":true,"CreatedAt":"2020-08-13T22:03:15","Actor":"CyrusNajmabadi","Number":"46800","RawContent":null,"Title":"Add a simple feature to recommend people use the new C# 9 'not' pattern.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/46699\r\nFixes https://github.com/dotnet/roslyn/issues/46798\r\nFixes https://github.com/dotnet/roslyn/issues/46706\r\n\r\nLooks like:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/90191833-7a8a8800-dd76-11ea-9bf4-81da0bc8b4ab.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/46800","RelatedDescription":"Open PR \"Add a simple feature to recommend people use the new C# 9 'not' pattern.\" (#46800)"},{"Id":"678753695","IsPullRequest":false,"CreatedAt":"2020-08-13T21:48:08","Actor":"333fred","Number":"46799","RawContent":null,"Title":"QuickInfo showing the wrong info","State":"open","Body":"![image](https://user-images.githubusercontent.com/2371880/90190352-b2440080-dd73-11ea-9567-bf572cbb503e.png)\r\n\r\nI've seen a number of pictures like this, where some type (always a primitive type as far as I remember) shows the documentation comments for Win32.Registry instead of the actual docs for that type. I've never seen it happen personally and have absolutely no idea what scenario could cause it, but I've seen pictures of it in enough contexts (mainly as users in the discord server post images of it) that we should be tracking it.","Url":"https://github.com/dotnet/roslyn/issues/46799","RelatedDescription":"Open issue \"QuickInfo showing the wrong info\" (#46799)"},{"Id":"678731993","IsPullRequest":false,"CreatedAt":"2020-08-13T21:01:56","Actor":"CyrusNajmabadi","Number":"46798","RawContent":null,"Title":"Offer to upgrade `!(x is Y y)` to `x is not Y y` in C#9","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/46798","RelatedDescription":"Open issue \"Offer to upgrade `!(x is Y y)` to `x is not Y y` in C#9\" (#46798)"},{"Id":"678726482","IsPullRequest":false,"CreatedAt":"2020-08-13T20:51:19","Actor":"akhera99","Number":"46797","RawContent":null,"Title":"Add inline parameter name hint support for the narrator","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/roslyn/issues/46797","RelatedDescription":"Open issue \"Add inline parameter name hint support for the narrator\" (#46797)"},{"Id":"678702482","IsPullRequest":false,"CreatedAt":"2020-08-13T20:05:14","Actor":"svick","Number":"46795","RawContent":null,"Title":"Misleading error for await in the watch window","State":"open","Body":"**Version Used**: VS 16.7.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nAttempt to use the `await` operator (e.g. `await Task.Delay(0)`) in the watch window while debugging a method.\r\n\r\n**Expected Behavior**:\r\n\r\nAn error message explaining that the debugger doesn't support `await`, possibly suggesting to use `.Result`/`.Wait()` instead. Or even better, `await` works in the debugger.\r\n\r\n**Actual Behavior**:\r\n\r\nIn the case of an async method, the error shown in the watch window is:\r\n\r\n> error CS4032: The 'await' operator can only be used within an async method. Consider marking this method with the 'async' modifier and changing its return type to 'Task\\<Task>'.\r\n\r\nFor a non-async method, the error is almost the same:\r\n\r\n> error CS4033: The 'await' operator can only be used within an async method. Consider marking this method with the 'async' modifier and changing its return type to 'Task'.\r\n\r\nIn both cases, the error is misleading: For the async method, it's already async and returns a Task, so the suggestion doesn't make sense. For the non-async method, adding `async` wouldn't fix the issue, so it's also wrong.","Url":"https://github.com/dotnet/roslyn/issues/46795","RelatedDescription":"Open issue \"Misleading error for await in the watch window\" (#46795)"},{"Id":"678688508","IsPullRequest":true,"CreatedAt":"2020-08-13T19:38:53","Actor":"mavasani","Number":"46794","RawContent":null,"Title":"Add skipped integration test for bug","State":"open","Body":"Skipped integration test for https://github.com/dotnet/roslyn/issues/46784\r\n\r\nI verified that the added test fails on master + passed on https://github.com/dotnet/roslyn/commit/2105efade82b33112f35156f3982319ea9261ed1, which is a parent commit of https://github.com/dotnet/roslyn/commit/45f2aedcfe54c9b0cc6d9255e3b8945942359f1b.\r\n\r\nNOTE: This PR is based upon https://github.com/dotnet/roslyn/pull/46789. I will rebase once that PR is merged.","Url":"https://github.com/dotnet/roslyn/pull/46794","RelatedDescription":"Open PR \"Add skipped integration test for bug\" (#46794)"},{"Id":"678683067","IsPullRequest":true,"CreatedAt":"2020-08-13T19:28:09","Actor":"tmat","Number":"46793","RawContent":null,"Title":"Improve handling of OOM during EnC analysis","State":"open","Body":"Currently we may crash VS due to combination of two factors:\r\n\r\n1) Tree diffing algorithm is O(N^2) in memory and may allocate huge arrays when the user edits methods that have 1000s of statements.\r\n2) EnC wraps all logic in NFW and recovers from unexpected exceptions. For OOM NFW reporting however triggered fail fast crashing VS, even when VS was actually not running out of memory.\r\n\r\nThis change recovers from exceptions (including OOM) in the analyzer on method level in addition to top-level. If we fail to analyze a method for any reason we report a rude edit and continue analyzing other code. This allows us to report better targeted messages, such as \"method 'foo' is too big\". \r\n\r\n[2] is addressed by removing fail fast on OOM, unless OOM is thrown during reporting NFW, in which case the process is truly out of memory.","Url":"https://github.com/dotnet/roslyn/pull/46793","RelatedDescription":"Open PR \"Improve handling of OOM during EnC analysis\" (#46793)"},{"Id":"678680819","IsPullRequest":false,"CreatedAt":"2020-08-13T19:24:11","Actor":"akhera99","Number":"46792","RawContent":null,"Title":"Add Codespaces support to Inline Parameter Name Hints","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/46792","RelatedDescription":"Open issue \"Add Codespaces support to Inline Parameter Name Hints\" (#46792)"},{"Id":"678674669","IsPullRequest":false,"CreatedAt":"2020-08-13T19:12:58","Actor":"akhera99","Number":"46791","RawContent":null,"Title":"Test inline parameter name hints with right to left languages","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/46791","RelatedDescription":"Open issue \"Test inline parameter name hints with right to left languages\" (#46791)"},{"Id":"678670866","IsPullRequest":false,"CreatedAt":"2020-08-13T19:06:20","Actor":"akhera99","Number":"46790","RawContent":null,"Title":"Interactive window does not show inline parameter name hints","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/46790","RelatedDescription":"Open issue \"Interactive window does not show inline parameter name hints\" (#46790)"},{"Id":"678667029","IsPullRequest":true,"CreatedAt":"2020-08-13T18:59:26","Actor":"mavasani","Number":"46789","RawContent":null,"Title":"AreStringValuesEqual for real","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/46789","RelatedDescription":"Open PR \"AreStringValuesEqual for real\" (#46789)"},{"Id":"678597900","IsPullRequest":true,"CreatedAt":"2020-08-13T16:58:51","Actor":"tmat","Number":"46787","RawContent":null,"Title":"Skip test CustomizableTagsForUnnecessaryCode","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/46787","RelatedDescription":"Open PR \"Skip test CustomizableTagsForUnnecessaryCode\" (#46787)"},{"Id":"678593566","IsPullRequest":false,"CreatedAt":"2020-08-13T16:52:57","Actor":"tmat","Number":"46786","RawContent":null,"Title":"VB test CustomizableTagsForUnnecessaryCode intermittently failing in CI","State":"open","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=768040&view=results\r\n\r\n```\r\nAssert.Equal() Failure\\r\\nExpected: 2\\r\\nActual:   1\r\n```\r\n\r\nStack trace\r\n```\r\n   at Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.Squiggles.ErrorSquiggleProducerTests.VB$StateMachine_6_CustomizableTagsForUnnecessaryCode.MoveNext() in /_/src/EditorFeatures/VisualBasicTest/Squiggles/ErrorSquiggleProducerTests.vb:line 127\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/46786","RelatedDescription":"Open issue \"VB test CustomizableTagsForUnnecessaryCode intermittently failing in CI\" (#46786)"},{"Id":"678647717","IsPullRequest":false,"CreatedAt":"2020-08-13T16:48:14","Actor":"sidney-pauly","Number":"46788","RawContent":null,"Title":"\"error CS0535: x does not implement interface member y\" only thrown if using Nullable reference types","State":"open","Body":"### Description\r\nWhile working with generic interfaces and default implementing the I encountered a very strange bug. Consider the following combination of interfaces and classes:\r\n```\r\nnamespace A\r\n{\r\n\r\n    public interface CustomKeyType\r\n    {\r\n\r\n    }\r\n\r\n    public interface MyReadonlyInterface<T>\r\n    {\r\n        IReadOnlyDictionary<CustomKeyType, T> Nested { get; }\r\n    }\r\n\r\n    public interface MyDefaultImplementingInterface<T> : MyReadonlyInterface<T>\r\n    {\r\n        IReadOnlyDictionary<CustomKeyType, T> MyReadonlyInterface<T>.Nested => _Nested;\r\n\r\n        protected Dictionary<CustomKeyType, T> _Nested { get; set; }\r\n    }\r\n}\r\n```\r\n\r\nAnd   \r\n\r\nImportant for reproducing the error: Implement this in another package:\r\n\r\n```\r\nnamespace B\r\n{\r\n\r\n    public class SpecificClass : MyDefaultImplementingInterface<string>\r\n    {\r\n        Dictionary<CustomKeyType, string> MyDefaultImplementingInterface<string>._Nested { get; set; } = new Dictionary<CustomKeyType, string>();\r\n    }\r\n\r\n}\r\n```\r\n\r\nQuick explanation: A read-only interface with a dictionary is introduced. The read and write interface is built on top and default implements the read-only property. A class is built which implements the full interface but narrows down the generic type to string.   \r\n\r\n#### Now the wired part:   \r\nIf you compile this code with .net standard 2.1 with a standard .csproj configuration it works fine. If you enable nullable reference types (`<Nullable>enable</Nullable>`) a compiler error appears:   \r\n`SpecificClass.cs(8,34,8,72): error CS0535: 'SpecificClass' does not implement interface member 'MyGenericInterface<string>.Nested'`\r\n\r\nOn its own, it seems like an issue with the nullable system and how it is used here, but the wired thing is that you can get it to compile by changing one of the following: \r\n- Put `SpecificClass` in the same package\r\n- Use a value type as the Dictionary key (e. g. string)\r\n- Implement a property directly (e.g. `T Nested {get; set;}` instead of `Dictionary<key, T> Nested {get; set}`\r\n- Change nullable enable to false only in package A   \r\n\r\n#### Note:   \r\n- Not narrowing down the generic in the implementing class does not change the behaviour\r\n- Changing the access modifier of the Nested property to `public `does not change the behaviour\r\n- The error is only produced when actually compiling, the Language Server withing VS2019 does not complain about the error.\r\n\r\n### Configuration\r\n\r\n- .net standard 2.1\r\n- Win 10\r\n- Debug | Any CPU\r\n- Nullable>enable</Nullable>\r\n\r\nThe .csproj of project A should look like this:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>netstandard2.1</TargetFramework>\r\n\t\t<Nullable>enable</Nullable>\r\n\t</PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Workaround\r\nYou can reimplement the Nested property in the inherited class, but this does defeat the purpose of default implemented properties.","Url":"https://github.com/dotnet/roslyn/issues/46788","RelatedDescription":"Open issue \"\"error CS0535: x does not implement interface member y\" only thrown if using Nullable reference types\" (#46788)"},{"Id":"678584028","IsPullRequest":false,"CreatedAt":"2020-08-13T16:43:38","Actor":"Youssef1313","Number":"46785","RawContent":null,"Title":"Make field readonly \"IDE0044\" false positive when used with ref locals","State":"open","Body":"The failing test is added in https://github.com/dotnet/roslyn/pull/45288/","Url":"https://github.com/dotnet/roslyn/issues/46785","RelatedDescription":"Open issue \"Make field readonly \"IDE0044\" false positive when used with ref locals\" (#46785)"},{"Id":"678554927","IsPullRequest":false,"CreatedAt":"2020-08-13T16:06:37","Actor":"mavasani","Number":"46784","RawContent":null,"Title":"Editorconfig severity changes not respected","State":"open","Body":"**Version Used**: Latest 16.8 P2 dogfood build\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new C# class library project with below source code and verify `IDE0051` reported for `M`:\r\n```csharp\r\nclass C\r\n{\r\n    void M() { }\r\n}\r\n```\r\n\r\n2. Add an .editorconfig manually file at root of the project with following contents:\r\n```ini\r\n[*.cs]\r\n\r\ndotnet_diagnostic.IDE0051.severity = warning\r\n```\r\n\r\n3. Switch back to the source file and see the diagnostics/squiggles on `M`\r\n\r\n**Expected Behavior**:\r\nIDE0051 warning in error list and a squiggle for the same in the editor\r\n\r\n**Actual Behavior**:\r\nIDE0051 is still a message and there is no squiggle.\r\n\r\n4. Keep editing the source file, say renaming `M` to `M2`, renaming the containing type, adding more code, etc.\r\n\r\n**Expected Behavior**:\r\n.editorconfig `dotnet_diagnostic` should take effect at least after doing some source code edits.\r\n\r\n**Actual Behavior**:\r\nIDE0051 is still a message and there is no squiggle. The diagnostic correctly gets updated to say `M2` instead of `M`, so diagnostics are not stale - just the fact that new editorconfig settings are not being applied at all. Only way to get these applied are to close and re-open/reload the project.\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/46784","RelatedDescription":"Open issue \"Editorconfig severity changes not respected\" (#46784)"},{"Id":"678450114","IsPullRequest":true,"CreatedAt":"2020-08-13T13:45:53","Actor":"sharwell","Number":"46783","RawContent":null,"Title":"Avoid heavy contention in OOP reading from temporary storage","State":"open","Body":"This path showed up as 30% (122 seconds) of the OOP CPU usage for a performance trace where the IDE was sluggish.","Url":"https://github.com/dotnet/roslyn/pull/46783","RelatedDescription":"Open PR \"Avoid heavy contention in OOP reading from temporary storage\" (#46783)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"673685686","IsPullRequest":true,"CreatedAt":"2020-08-13T19:35:21","Actor":"yowl","Number":"8255","RawContent":null,"Title":"Wasm: Align classes and arrays with 64 bit types at 8 byte","State":"closed","Body":"Closes #8250 \r\n\r\nThis PR enables the `FEATURE_64BIT_ALIGNMENT` feature for Wasm and implements some of the `RhpNew...` functions to align arrays and classes at 8 bytes.  This will move Wasm closer to enabling threads (although may have to wait for Wasm Exceptions for this as the current emscripten exception handling is not thread safe - this Wasm feature is currently behind a flag in v8).\r\n\r\nMay also improve ARM32 support, but not tried that.","Url":"https://github.com/dotnet/corert/pull/8255","RelatedDescription":"Closed or merged PR \"Wasm: Align classes and arrays with 64 bit types at 8 byte\" (#8255)"},{"Id":"668729616","IsPullRequest":false,"CreatedAt":"2020-08-13T19:35:21","Actor":"yowl","Number":"8250","RawContent":null,"Title":"Wasm: Alignment required for atomics","State":"closed","Body":"Wasm does not currently align memory access which is a problem when we want to introduce threads and atomics.   The WebAssembly specification says that unaligned atomic operations will trap, https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md:\r\n\r\n\"Alignment\r\nUnlike normal memory accesses, misaligned atomic accesses trap\"\r\n\r\nAnd indeed attempting this at the moment, results in (on Edge)\r\n```\r\nRuntimeError: operation does not support unaligned accesses\r\n    at RhpLockCmpXchg64 (http://localhost:8000/HelloWasm.wasm:wasm-function[20682]:0xd04530)\r\n    at S_P_CoreLib_System_Threading_Interlocked__CompareExchange_0 (http://localhost:8000/HelloWasm.wasm:wasm-function[1427]:0xb2194)\r\n    at S_P_CoreLib_System_Threading_Interlocked__Read (http://localhost:8000/HelloWasm.wasm:wasm-function[10329]:0x5eab12)\r\n    at S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_Length (http://localhost:8000/HelloWasm.wasm:wasm-function[12667]:0x7c570a)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__CreateResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5590]:0x2e9ff6)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__GrovelForResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5581]:0x2e731c)\r\n    at dynCall_viiii (http://localhost:8000/HelloWasm.wasm:wasm-function[22680]:0xe150f5)\r\n    at http://localhost:8000/HelloWasm.js:1822:22\r\n    at invoke_viiii (http://localhost:8000/HelloWasm.js:7504:5)\r\n    at S_P_CoreLib_System_Resources_ResourceManager__InternalGetResourceSet\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/8250","RelatedDescription":"Closed issue \"Wasm: Alignment required for atomics\" (#8250)"},{"Id":"678257929","IsPullRequest":false,"CreatedAt":"2020-08-13T08:34:28","Actor":"RalfKornmannEnvision","Number":"8261","RawContent":null,"Title":"Type manager indirection EEType vs. native layout signature","State":"open","Body":"Both the EEType node and the native layout signature node need to store a pointer to find the type manager at runtime. \r\n\r\nFor the EEType the compiler checks if the target support relative pointers and uses an absolute or relative symbol reloc:\r\n\r\n```\r\n           if (factory.Target.SupportsRelativePointers)\r\n                objData.EmitReloc(factory.TypeManagerIndirection, RelocType.IMAGE_REL_BASED_RELPTR32);\r\n            else\r\n                objData.EmitPointerReloc(factory.TypeManagerIndirection);\r\n\r\n```\r\nBut for the layout signature node it's always an absolute reloc\r\n\r\n`objData.EmitPointerReloc(factory.TypeManagerIndirection);`\r\n\r\nBeside of this the EEType node data is only placed on windows in the read only section while the native layout signature node does this always.\r\n\r\nThis results in a little bit of trouble for me on my ARM64/Switch combination. It might be a general ARM64 issue but I am not sure about this.\r\n\r\nAnyway I end up with a static lib that contains absolute relocation's from the read-only section to the data section. When this lib is linked to the final executable the linker tells me that this relocation's can not be resolved without a dynamic relocation and that this is an error.\r\n\r\nTo get thinks running for now I am placing the native layout signature like the ee types just in the data section. I did a quick check with the linker by using a relative reloc for the native signature layouts. This works from a linker point of view but naturally fails at runtime.\r\nAs just changing the section is the easier fix for me I'd like to ask if there was a reason why the EE types do this (on non windows systems) but the native layout signatures not.\r\n","Url":"https://github.com/dotnet/corert/issues/8261","RelatedDescription":"Open issue \"Type manager indirection EEType vs. native layout signature\" (#8261)"},{"Id":"676513440","IsPullRequest":false,"CreatedAt":"2020-08-11T01:30:33","Actor":"VS-ux","Number":"8260","RawContent":null,"Title":"Attempt at winforms","State":"open","Body":"I have attempted to try to get basic winforms to work.\r\n\r\nSo I downloaded #8143 and built CoreRT (I skipped the tests because they took too long). I then downloaded https://github.com/kant2002/CoreRTWinFormsTestBed/tree/master/WinFormsComInterop, and ran it as is. It worked. Then, I edited the csprojs to use the custom built #8143 CoreRt. I built the project using Cmd and Publish, however I got an error saying could not open \"kernal32.lib\". I fixed it by using x64 native command prompt. It then built OK. But then, when running the native binary, I got this error:\r\n\r\n```\r\nntdll.dll!00007ffab3935854() Unknown\r\nKernelBase.dll!00007ffab1452f07() Unknown\r\nWindowsFormsApp1.exe!S_P_CoreLib_Interop_mincore__RaiseFailFastException_0�() Unknown\r\n\r\n    WindowsFormsApp1.exe!S_P_CoreLib_Interop_mincore__RaiseFailFastException() Line 49 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast_1() Line 263 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast() Line 216 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_CalliIntrinsics__Call_5�() Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_CalliIntrinsics__CallVoid_3() Line 17 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__UnhandledExceptionFailFastViaClasslib() Line 251 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__DispatchEx() Line 711 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_System_Runtime_EH__RhThrowEx() Line 617 Unknown\r\n    WindowsFormsApp1.exe!RhpThrowEx() Line 191 Unknown\r\n    WindowsFormsApp1.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_ThrowHelpers__ThrowTypeLoadException() Line 64 Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1_WindowsFormsApp1_Program__Main�() Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1__Module___MainMethodWrapper() Unknown\r\n    WindowsFormsApp1.exe!WindowsFormsApp1__Module___StartupCodeMain() Unknown\r\n    WindowsFormsApp1.exe!wmain(int argc, wchar_t * * argv) Line 447 C++\r\n    [Inline Frame] WindowsFormsApp1.exe!invoke_main() Line 90 C++\r\n    WindowsFormsApp1.exe!__scrt_common_main_seh() Line 288 C++\r\n    kernel32.dll!00007ffab25730f4() Unknown\r\n    ntdll.dll!00007ffab38ca33b() Unknown\r\n```\r\n\r\nDoes anybody know a fix to this?\r\nThanks","Url":"https://github.com/dotnet/corert/issues/8260","RelatedDescription":"Open issue \"Attempt at winforms\" (#8260)"},{"Id":"675164947","IsPullRequest":true,"CreatedAt":"2020-08-11T00:32:42","Actor":"yowl","Number":"8257","RawContent":null,"Title":"Wasm: add support for ovf op with char type","State":"closed","Body":"This PR fixes a compiler assert when compiling https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/shared/System/Environment.Unix.cs#L111 as the char type was not included in the int32 path.  Types short and byte seem ok before this change so no code added for those.","Url":"https://github.com/dotnet/corert/pull/8257","RelatedDescription":"Closed or merged PR \"Wasm: add support for ovf op with char type\" (#8257)"},{"Id":"675591803","IsPullRequest":true,"CreatedAt":"2020-08-08T21:35:56","Actor":"yowl","Number":"8259","RawContent":null,"Title":"Wasm: add support for overflow checks on signed and unsigned ints multiply","State":"open","Body":"This PR add supports and a couple of tests for overflow checks on signed and unsigned int32s and int64s.  Uses the check maxint / op1 > op2 to detect overflow.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/8259","RelatedDescription":"Open PR \"Wasm: add support for overflow checks on signed and unsigned ints multiply\" (#8259)"},{"Id":"675275998","IsPullRequest":false,"CreatedAt":"2020-08-07T20:51:22","Actor":"dellams","Number":"8258","RawContent":null,"Title":"Errors whilst trying to build Web Assembly","State":"open","Body":"Hi Guys,\r\n\r\nI followed these instructions here:\r\n\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/how-to-build-WebAssembly.md\r\n\r\nI finally got to the end part for building the web assembly using build.cmd wasm but I got these errors:\r\n\r\n\"\r\nJIT - TOTAL: 15 PASSED: 15\r\nCPP - TOTAL: 6 PASSED: 6\r\nWASM - TOTAL: 0 PASSED: 0\r\n\r\nC:\\corert>build.cmd wasm\r\nChecking pre-requisites...\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.6.4\r\n** Copyright (c) 2020 Microsoft Corporation\r\n**********************************************************************\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for WebAssembly.wasm.Debug\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.6.4\r\n** Copyright (c) 2020 Microsoft Corporation\r\n**********************************************************************\r\n[vcvarsall.bat] Environment initialized for: 'x86_x64'\r\nconfigure: C:\\Program Files\\CMake\\bin\\cmake.exe -DCMAKE_TOOLCHAIN_FILE=C:/Users/david/source/repos/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DCLR_CMAKE_TARGET_ARCH=wasm -DCMAKE_BUILD_TYPE=Debug -G NMake Makefiles C:\\corert\\buildscripts\\..\\src\\Native -DCMAKE_CROSSCOMPILING_EMULATOR=\"C:/Users/david/source/repos/emsdk/node/12.18.1_64bit/bin/node.exe\"\r\n-- The ASM compiler identification is unknown\r\n-- Found assembler: C:/Users/david/source/repos/emsdk/upstream/emscripten/emcc.bat\r\n-- Warning: Did not find file Compiler/-ASM\r\nCMake Error at gc/unix/configure.cmake:97 (check_library_exists):\r\n  check_library_exists Macro invoked with incorrect arguments for macro\r\n  named: CHECK_LIBRARY_EXISTS\r\nCall Stack (most recent call first):\r\n  Runtime/CMakeLists.txt:150 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/corert/bin/obj/Native/WebAssembly.wasm.Debug/CMakeFiles/CMakeOutput.log\".\r\nSee also \"C:/corert/bin/obj/Native/WebAssembly.wasm.Debug/CMakeFiles/CMakeError.log\".\r\nFailed to generate native component build project\r\nNative component build failed. Refer C:\\corert\\buildscripts\\..\\bin\\Logs\\Native_WebAssembly__wasm__Debug.log for details.\r\n\r\nC:\\corert>\"\r\n\r\n\r\nThe full log from CMakeError.log is below:\r\n\r\n\"Checking whether the ASM compiler is GNU using \"--version\" did not match \"(GNU assembler)|(GCC)|(Free Software Foundation)\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is Clang using \"--version\" did not match \"(clang version)\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is AppleClang using \"--version\" did not match \"(Apple LLVM version)\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is ARMClang using \"--version\" did not match \"armclang\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is HP using \"-V\" did not match \"HP C\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is Intel using \"--version\" did not match \"(ICC)\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is SunPro using \"-V\" did not match \"Sun C\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is XL using \"-qversion\" did not match \"XL C\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is MSVC using \"-?\" did not match \"Microsoft\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is TI using \"-h\" did not match \"Texas Instruments\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is IAR using \"\" did not match \"IAR Assembler\":\r\nemcc:WARNING: no input files\r\nChecking whether the ASM compiler is ARMCC using \"\" did not match \"(ARM Compiler)|(ARM Assembler)\":\r\nemcc:WARNING: no input files\r\nChecking whether the ASM compiler is NASM using \"-v\" did not match \"(NASM version)\":\r\nclang version 11.0.0 (C:swircachegitchromium.googlesource.com-external-github.com-llvm-llvm--project 7bf299c8d8d59304fb821f8811618cdeb1d1f1fd)\r\nTarget: x86_64-pc-windows-msvc\r\nThread model: posix\r\nInstalledDir: C:/Users/david/source/repos/emsdk/upstream/bin\r\nemcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 1.39.19\r\nshared:INFO: (Emscripten: Running sanity checks)\r\nChecking whether the ASM compiler is YASM using \"--version\" did not match \"(yasm)\":\r\nemcc (Emscripten gcc/clang-like replacement) 1.39.19 (f45bea21f3a8f74a68ed4e3e3d7e290807ee2aff)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n  \r\nChecking whether the ASM compiler is ADSP using \"-version\" did not match \"Analog Devices\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nChecking whether the ASM compiler is QCC using \"-V\" did not match \"gcc_nto\":\r\nemcc: error: no input files\r\nnote that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.C', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', 'nul', '.S', '.bc', '.o', '.obj', '.lo', '.dylib', '.so', '.a', '.ll', '.s', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')\r\nDetermining if files sys/time.h exist failed with the following output:\r\nChange Dir: C:/corert/bin/obj/Native/WebAssembly.wasm.Debug/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command(s):nmake /nologo cmTC_2b95d\\fast && \tC:\\Program Files (x86)\\GnuWin32\\bin  -f CMakeFiles\\cmTC_2b95d.dir\\build.make /nologo -L                  CMakeFiles\\cmTC_2b95d.dir\\build\r\n\r\n'C:\\Program' is not recognized as an internal or external command,\r\n\r\noperable program or batch file.\r\n\r\nNMAKE : fatal error U1077: 'C:\\Program' : return code '0x1'\r\n\r\nStop.\r\n\r\n\r\n\r\nSource:\r\n/* */\r\n#include <sys/time.h>\r\n\r\n\r\nint main(void){return 0;}\r\n\r\nDetermining if files sys/mman.h exist failed with the following output:\r\nChange Dir: C:/corert/bin/obj/Native/WebAssembly.wasm.Debug/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command(s):nmake /nologo cmTC_6e999\\fast && \tC:\\Program Files (x86)\\GnuWin32\\bin  -f CMakeFiles\\cmTC_6e999.dir\\build.make /nologo -L                  CMakeFiles\\cmTC_6e999.dir\\build\r\n\r\n'C:\\Program' is not recognized as an internal or external command,\r\n\r\noperable program or batch file.\r\n\r\nNMAKE : fatal error U1077: 'C:\\Program' : return code '0x1'\r\n\r\nStop.\r\n\r\n\r\n\r\nSource:\r\n/* */\r\n#include <sys/mman.h>\"\r\n\r\nThere is more of the log but I do not have enough space to post here...\r\n\r\nSo looks like a version conflict somewhere? Is this to do with Emscripten?\r\n\r\n\r\n\r\nAny help would be greatly appreciated thank you! :)\r\n\r\nCheers\r\nD.\r\n","Url":"https://github.com/dotnet/corert/issues/8258","RelatedDescription":"Open issue \"Errors whilst trying to build Web Assembly\" (#8258)"},{"Id":"673910246","IsPullRequest":false,"CreatedAt":"2020-08-05T23:26:52","Actor":"jkotas","Number":"8256","RawContent":null,"Title":"Survey: Native AOT","State":"open","Body":"Performance has been a key .NET feature. The existing options for optimizing published applications work well for most scenarios that .NET targets today.\r\n\r\nSome of you asked us to consider adding native AOT compilation option with distinctly different characteristics. The distinctly different characteristics of native AOT come with tradeoffs such as lower compatibility that are explained in detail in [.NET Runtime Form Factors](https://github.com/dotnet/designs/blob/master/accepted/2020/form-factors.md#native-aot-form-factors). We’ve created a survey to help us better understand the native AOT use cases.\r\n\r\nWe would appreciate your feedback so we can work on creating the right plans for future. If you don’t supply contact details, then responses will be anonymous.\r\n\r\nSurvey: https://www.surveymonkey.com/r/SQCYB2C\r\n\r\nThank you for your time!","Url":"https://github.com/dotnet/corert/issues/8256","RelatedDescription":"Open issue \"Survey: Native AOT\" (#8256)"},{"Id":"673310727","IsPullRequest":false,"CreatedAt":"2020-08-05T07:12:15","Actor":"RalfKornmannEnvision","Number":"8254","RawContent":null,"Title":"Windows DLL import leftovers in Unix assemblies?","State":"open","Body":"To get an idea of how many and which native calls I need to implement on different game consoles I have written a small tool that scans assemblies for DLLImports. To my surprise I found some calls to Windows dlls in the SDK and framework folder that were build for an ARM64 Unix system. \r\n\r\nI assume it's not a big issue as these functions might not be called at all and as CoreRT would use dynamic loading they will not cause any unresolved externals. But maybe someone is interested and like to clean it up at some point\r\n\r\nIn System.Private.CoreLib.dll I found\r\n        kernel32.dll\r\n                LCIDToLocaleName\r\n                LocaleNameToLCID\r\n                LCMapStringEx\r\n                FindNLSStringEx\r\n                CompareStringEx\r\n                CompareStringOrdinal\r\n                FindStringOrdinal\r\n                IsNLSDefinedString\r\n                GetUserPreferredUILanguages\r\n                GetLocaleInfoEx\r\n                EnumSystemLocalesEx\r\n                EnumTimeFormatsEx\r\n                GetCalendarInfoEx\r\n                GetUserGeoID\r\n                GetGeoInfo\r\n                EnumCalendarInfoExEx\r\n                GetNLSVersionEx\r\n                ResolveLocaleName\r\n        Normaliz.dll\r\n                IdnToAscii\r\n                IdnToUnicode\r\n                IsNormalizedString\r\n                NormalizeString\r\n\r\nand another one in\r\nSystem.Reflection.Metadata.dll\r\n        kernel32.dll\r\n                ReadFile","Url":"https://github.com/dotnet/corert/issues/8254","RelatedDescription":"Open issue \"Windows DLL import leftovers in Unix assemblies?\" (#8254)"},{"Id":"673181645","IsPullRequest":true,"CreatedAt":"2020-08-05T04:51:14","Actor":"yowl","Number":"8253","RawContent":null,"Title":"Wasm: split llvm->wasm from wasm link","State":"closed","Body":"This PR separates the compilation from LLVM bitcode to final `.wasm`.  There are now 2 steps in the build \r\n\r\n- LLVM bitcode to wasm object file\r\n- Wasm object and archives to final .wasm\r\n\r\nThe advantages are:\r\n\r\n- Faster build time for debug builds.  When going straight from bitcode to .wasm, the link time optimizer runs in `wasm-ld` and can't be turned off.  Now it can be turned off resulting in faster linking.\r\n- Building with pthreads enabled was failing and the emscripten suggestion was to first build to a `.o`.  Threads are not enabled yet but this is a step towards that. https://github.com/emscripten-core/emscripten/issues/10370\r\n\r\nAnother possible advantage is if the LLVM bitcode was to be used to build another target, then maybe this separation will help.","Url":"https://github.com/dotnet/corert/pull/8253","RelatedDescription":"Closed or merged PR \"Wasm: split llvm->wasm from wasm link\" (#8253)"},{"Id":"672416973","IsPullRequest":true,"CreatedAt":"2020-08-04T14:09:40","Actor":"jkotas","Number":"8252","RawContent":null,"Title":"Ignore slow tail calls instead failing the compilation for them","State":"closed","Body":"Fixes #8251","Url":"https://github.com/dotnet/corert/pull/8252","RelatedDescription":"Closed or merged PR \"Ignore slow tail calls instead failing the compilation for them\" (#8252)"},{"Id":"672148644","IsPullRequest":false,"CreatedAt":"2020-08-04T14:09:39","Actor":"FoggyFinder","Number":"8251","RawContent":null,"Title":"Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures' after updating","State":"closed","Body":"I've used CoreRt and it works perfectly for some of my F# + Avalonia applications.\r\nBut now when I've tried to update one of them I receive the next exception:\r\n\r\n```\r\nEXEC : error : Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures+Invoke@2712<System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>,int32,System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>>.Invoke(KeyValuePair`2<int32,__Canon>)' [SomeProjects.fsproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures+Invoke@2712<System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>,int32,System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>>.Invoke(KeyValuePair`2<int32,__Canon>)' ---> System.NotImplementedException: getTailCallHelpers\r\n     at Internal.JitInterface.CorInfoImpl.getTailCallHelpers(CORINFO_RESOLVED_TOKEN& callToken, CORINFO_SIG_INFO* sig, CORINFO_GET_TAILCALL_HELPERS_FLAGS flags, CORINFO_TAILCALL_HELPERS& pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getTailCallHelpers(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& callToken, CORINFO_SIG_INFO* sig, CORINFO_GET_TAILCALL_HELPERS_FLAGS flags, CORINFO_TAILCALL_HELPERS& pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleThreaded(List`1 methodsToCompile)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n```\r\n\r\nLast time I've build this app near 3 months ago so I don't remember the exact version of CoreRt.\r\n\r\nAs a workaround: Is there is a way to get the full list of versions with its dates? Just to specify it instead of `1.0.0-alpha-*` inside of `fsproj` \r\n","Url":"https://github.com/dotnet/corert/issues/8251","RelatedDescription":"Closed issue \"Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures' after updating\" (#8251)"},{"Id":"665684844","IsPullRequest":true,"CreatedAt":"2020-08-04T00:24:48","Actor":"yowl","Number":"8247","RawContent":null,"Title":"Wasm: Support for calling emscripten_set_main_loop","State":"closed","Body":"This PR allows code to use `emscripten_set_main_loop` (https://emscripten.org/docs/api_reference/emscripten.h.html#browser-execution-environment).\r\nThis is possible with the .net 5 compiler and the use of e.g.\r\n```\r\n        [DllImport(\"*\")]\r\n        internal static extern unsafe void emscripten_set_main_loop(delegate*<void> f,  int fps, int simulate_infinite_loop);\r\n\r\n        [UnmanagedCallersOnly(EntryPoint = \"MainLoop\", CallingConvention = CallingConvention.Cdecl)]\r\n        static void MainLoop()\r\n        {\r\n            Console.WriteLine(\"Main loop\");\r\n        }\r\n```\r\nand\r\n```\r\n        emscripten_set_main_loop(&MainLoop, 0, 0);\r\n```\r\n\r\nIt adds handling for `TypeFlags.FunctionPointer` and adds a call to `RhpReversePInvokeReturn2` when the main function exits as emscripten will subsequently make calls into the main loop function and the thread state needs to go back to preemptive.","Url":"https://github.com/dotnet/corert/pull/8247","RelatedDescription":"Closed or merged PR \"Wasm: Support for calling emscripten_set_main_loop\" (#8247)"},{"Id":"665852159","IsPullRequest":false,"CreatedAt":"2020-07-26T20:15:15","Actor":"josephmoresena","Number":"8249","RawContent":null,"Title":"Array problems disabling reflection","State":"open","Body":"CoreRT in Reflection-free mode not work:\r\n\r\n1. Type.GetArrayRank()\r\n2. Array.CreateInstance(Type, dimensionArray), where dimensionArray.Length > 0 and Type is Integer (8,16,32 or 64 bits, signed or unsigned but not IntPtr, UIntPtr, Boolean or Enum);\r\n2. Array.CreateInstance(Type, dimensionArray), where Type isn't Integer (8,16,32 or 64 bits, signed or unsigned)","Url":"https://github.com/dotnet/corert/issues/8249","RelatedDescription":"Open issue \"Array problems disabling reflection\" (#8249)"},{"Id":"665721972","IsPullRequest":false,"CreatedAt":"2020-07-26T06:51:08","Actor":"VS-ux","Number":"8248","RawContent":null,"Title":"COM Support","State":"open","Body":"HI!\r\nSo I've seen this repo for a couple of months and it's pretty cool. However, I was wondering when or how COM will be supported.\r\nKeep in mind this type of stuff is not my area of expertise so I apologize for any mistakes.\r\n\r\nI use Winforms alot and that includes using things such as `OpenFileDialog`. However, since COM isn't supported, these things don't work. Issue #4219 showed some examples and this [sample](https://github.com/kant2002/CoreRTWinFormsTestBed/tree/master/WinFormsComInterop) helped alot. However, when CoreRT'ing and starting the binary it failed. I think it's because I didn't follow step 6 as listed [here](https://github.com/dotnet/corert/issues/4219#issuecomment-623159691). I'm unsure what to do on that step. Can somebody guide me through what to do? (I really just need support for MenuStrip, ContextMenuStrip, ToolStrip, and possibly StatusStrip.\r\nThanks\r\n","Url":"https://github.com/dotnet/corert/issues/8248","RelatedDescription":"Open issue \"COM Support\" (#8248)"},{"Id":"665667881","IsPullRequest":false,"CreatedAt":"2020-07-25T22:02:50","Actor":"Suchiman","Number":"8246","RawContent":null,"Title":"CoreRT quits when Foreground threads are running","State":"open","Body":"This code will print Hello World until all eternity on CoreCLR but exit immediately and print nothing on CoreRT.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Threading;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var t = new Thread(Meh);\r\n        t.IsBackground = false;\r\n        t.Start();\r\n    }\r\n\r\n    private static void Meh(object obj)\r\n    {\r\n        while (true)\r\n        {\r\n            Thread.Sleep(10);\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI suppose it would need to check before this line https://github.com/dotnet/corert/blob/9d8bd29a71f68941aaa2c00e9c9a0eed86cafa10/src/Native/Bootstrap/main.cpp#L450 if there are any Foreground threads still running, how does this work on CoreCLR?","Url":"https://github.com/dotnet/corert/issues/8246","RelatedDescription":"Open issue \"CoreRT quits when Foreground threads are running\" (#8246)"},{"Id":"665288924","IsPullRequest":true,"CreatedAt":"2020-07-24T18:28:51","Actor":"yowl","Number":"8245","RawContent":null,"Title":"Wasm: Change boolean logic for gc.cpp find_object","State":"closed","Body":"This PR implements the suggestion in #8205.  I'm submitting the PR as with this change and #8171 its possible to run 100 iterations of the Generics test without a memory access failure.\r\n\r\nFixes #8210 \r\nCloses #8205\r\n\r\nDraft as depends on #8171","Url":"https://github.com/dotnet/corert/pull/8245","RelatedDescription":"Closed or merged PR \"Wasm: Change boolean logic for gc.cpp find_object\" (#8245)"},{"Id":"664401363","IsPullRequest":true,"CreatedAt":"2020-07-23T15:52:36","Actor":"christianscheuer","Number":"8244","RawContent":null,"Title":"Temporary workaround for https://github.com/dotnet/corert/issues/8241","State":"closed","Body":"Temp fix until dotnet/runtime#39717 can be consumed when CoreRT moves to runtimelab.\r\n\r\nConfirmed working with Big Sur.\r\n\r\nCC @jkotas ","Url":"https://github.com/dotnet/corert/pull/8244","RelatedDescription":"Closed or merged PR \"Temporary workaround for https://github.com/dotnet/corert/issues/8241\" (#8244)"},{"Id":"657282440","IsPullRequest":false,"CreatedAt":"2020-07-23T12:20:17","Actor":"akashdarshan99","Number":"8232","RawContent":null,"Title":"Binary generation doesn't finish when including rd.xml","State":"closed","Body":"Hey, the issue im having is with the output generation, where the cmd is stuck at\r\n\r\n`  Generating native code\r\nEXEC : warning : RD.XML processing will change before release `\r\n\r\nThe ram usage goes very high for ilc.exe process (reaches almost 9gb, out of available 12gb), and is stuck there. (Waited for 8hours)\r\n\r\nHowever, when i do not include rd.xml, I get an output binary file, which obviously gives me an error as follows.\r\n\r\n`System.Reflection.MissingMetadataException: 'MongoDB.Bson.Serialization.BsonClassMap<Db.UserDocument>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x13e\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed2.GetOrAdd(K) + 0x87\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x44\r\n   at MongoDB.Bson.Serialization.BsonClassMap.LookupClassMap(Type) + 0x147\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializationProvider.GetSerializer(Type, IBsonSerializerRegistry) + 0xd5\r\n   at MongoDB.Bson.Serialization.BsonSerializerRegistry.CreateSerializer(Type) + 0x8b\r\n   at System.Collections.Concurrent.ConcurrentDictionary2.GetOrAdd(TKey, Func2) + 0x73\r\n   at MongoDB.Bson.Serialization.BsonSerializerRegistry.GetSerializer[T]() + 0x25\r\n   at MongoDB.Driver.MongoCollectionImpl1..ctor(IMongoDatabase, CollectionNamespace, MongoCollectionSettings, ICluster, IOperationExecutor) + 0x79\r\n   at MongoDB.Driver.MongoDatabaseImpl.GetCollection[TDocument](String, MongoCollectionSettings) + 0xa5\r\n   at Console.Db.MongoDatabase1..ctor(String) + 0x183`\r\n\r\nThis is how my rd.xml looks like:\r\n\r\n`<Directives>\r\n\t<Application>\r\n\t\t<Assembly Name=\"MongoDB.Bson\" Dynamic=\"Required All\" />\r\n\t\t<Assembly Name=\"MongoDB.Driver.Core\" Dynamic=\"Required All\" />\r\n\t\t<Assembly Name=\"MongoDB.Driver\" Dynamic=\"Required All\" />\r\n\t</Application>\r\n</Directives>`\r\n\r\nmy csproj for console looks like this:\r\n\r\n`\r\n        <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n\t<RdXmlFile Include=\"rd.xml\" />\r\n`\r\n\r\nA point to note that the project referencing mongodb, is a library project, which is referenced by the main console application.\r\nPlease do guide me if theres anything wrong from my side, or if this is a bug. Thank you","Url":"https://github.com/dotnet/corert/issues/8232","RelatedDescription":"Closed issue \"Binary generation doesn't finish when including rd.xml\" (#8232)"},{"Id":"664200929","IsPullRequest":true,"CreatedAt":"2020-07-23T10:09:05","Actor":"jkotas","Number":"8243","RawContent":null,"Title":"Fix uninitialized variable in JIT/EE interface","State":"closed","Body":"Fixes #8235","Url":"https://github.com/dotnet/corert/pull/8243","RelatedDescription":"Closed or merged PR \"Fix uninitialized variable in JIT/EE interface\" (#8243)"},{"Id":"658574740","IsPullRequest":false,"CreatedAt":"2020-07-23T10:09:05","Actor":"ogxd","Number":"8235","RawContent":null,"Title":"Error LNK2001: unresolved external symbol NYI_LDVIRTFTN when creating shared library","State":"closed","Body":"I have a C# NET Standard 2.0 library with no external dependencies.\r\nWhen I replicate the NativeLibrary sample to create a shared library, it works.\r\nHowever, as soon as I add a single line of code in one of the exposed functions, I get this error :\r\n\r\n```\r\nMyLib.obj : error LNK2001: unresolved external symbol NYI_LDVIRTFTN [...MyLib.csproj]\r\nbin\\Release\\netstandard2.0\\win-x64\\native\\MyLib.dll : fatal error LNK1120: 1 unresolved externals [...\\MyLib.csproj]\r\n...\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-29116-01\\build\\Microsoft.NETCore.Native.targets(310,5): error MSB3073: The command \"\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\Release\\netstandard2.0\\win-x64\\native\\link.rsp\"\" exited with code 1120. [...\\MyLib.csproj]\r\n```\r\n\r\nMyLib targets x64, and I have unsafe code and optimize code enabled.","Url":"https://github.com/dotnet/corert/issues/8235","RelatedDescription":"Closed issue \"Error LNK2001: unresolved external symbol NYI_LDVIRTFTN when creating shared library\" (#8235)"},{"Id":"663619968","IsPullRequest":true,"CreatedAt":"2020-07-22T11:39:50","Actor":"MichalStrehovsky","Number":"8242","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8242","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#8242)"},{"Id":"663130038","IsPullRequest":false,"CreatedAt":"2020-07-21T16:00:41","Actor":"christianscheuer","Number":"8241","RawContent":null,"Title":"Cannot load 'System.Security.Cryptography.Native.Apple' after recent CoreRT upgrade","State":"open","Body":"Hi all,\r\n\r\nHas something been changed to the build system recently that means there's a chance the native parts of `System.Security.Cryptography.Native.Apple` don't get properly statically linked with the binary anymore?\r\n\r\nSince our recent update to latest CoreRT, I get this when using any crypto functions:\r\n`System.DllNotFoundException: Unable to load DLL 'System.Security.Cryptography.Native.Apple': The specified module could not be found.`\r\n","Url":"https://github.com/dotnet/corert/issues/8241","RelatedDescription":"Open issue \"Cannot load 'System.Security.Cryptography.Native.Apple' after recent CoreRT upgrade\" (#8241)"},{"Id":"662429254","IsPullRequest":false,"CreatedAt":"2020-07-21T04:30:36","Actor":"christianscheuer","Number":"8240","RawContent":null,"Title":"FailFastException since upgrading CoreRT","State":"closed","Body":"While working on getting our product to work with Big Sur, I upgraded our build to newest CoreRT (which we, admittingly, hadn't done in a pretty long while).\r\n\r\nWith the current tip of CoreRT we're getting a failfast with this stacktrace:\r\n\r\n```\r\nthread #6, stop reason = signal SIGABRT\r\n  * frame #0: 0x00007fff5da972c6 libsystem_kernel.dylib`__pthread_kill + 10\r\n    frame #1: 0x00007fff5db52bf1 libsystem_pthread.dylib`pthread_kill + 284\r\n    frame #2: 0x00007fff5da016a6 libsystem_c.dylib`abort + 127\r\n    frame #3: 0x0000000100d6f9e9 sfbackend`::RaiseFailFastException(arg1=<unavailable>, arg2=<unavailable>, arg3=<unavailable>) at PalRedhawkUnix.cpp:149:5 [opt]\r\n    frame #4: 0x0000000100d248ce sfbackend`StackFrameIterator::CalculateCurrentMethodState() [inlined] PalRaiseFailFastException(arg1=<unavailable>, arg3=1) at PalRedhawkFunctions.h:184:5 [opt]\r\n    frame #5: 0x0000000100d248c0 sfbackend`StackFrameIterator::CalculateCurrentMethodState(this=0x000070000a2caef0) at StackFrameIterator.cpp:1712 [opt]\r\n    frame #6: 0x0000000100d26a38 sfbackend`Thread::GcScanRootsWorker(this=0x000000010fd017e0, pfnEnumCallback=0x0000000100d4c990, pvCallbackData=0x000070000a2cb140, frameIterator=0x000070000a2caef0) at thread.cpp:515:27 [opt]\r\n    frame #7: 0x0000000100d26895 sfbackend`Thread::GcScanRoots(this=0x000000010fd017e0, pfnEnumCallback=<unavailable>, pvCallbackData=<unavailable>) at thread.cpp:422:5 [opt]\r\n    frame #8: 0x0000000100d1e845 sfbackend`GCToEEInterface::GcScanRoots(fn=(sfbackend`WKS::GCHeap::Promote(Object**, ScanContext*, unsigned int) at gc.cpp:35709), condemned=<unavailable>, max_gen=<unavailable>, sc=0x000070000a2cb140)(Object**, ScanContext*, unsigned int), int, int, ScanContext*) at gcrhscan.cpp:79:22 [opt]\r\n    frame #9: 0x0000000100d401b6 sfbackend`WKS::gc_heap::mark_phase(condemned_gen_number=2, mark_only_p=NO) at gc.cpp:20220:9 [opt]\r\n    frame #10: 0x0000000100d3d171 sfbackend`WKS::gc_heap::gc1() at gc.cpp:16159:13 [opt]\r\n    frame #11: 0x0000000100d47d4d sfbackend`WKS::gc_heap::garbage_collect(n=0) at gc.cpp:0:21 [opt]\r\n    frame #12: 0x0000000100d382a7 sfbackend`WKS::GCHeap::GarbageCollectGeneration(this=<unavailable>, gen=0, reason=reason_alloc_loh) at gc.cpp:37156:9 [opt]\r\n    frame #13: 0x0000000100d397ab sfbackend`WKS::gc_heap::trigger_gc_for_alloc(gen_number=<unavailable>, gr=<unavailable>, msl=0x0000000105478a84, loh_p=<unavailable>, take_state=<unavailable>) at gc.cpp:13394:14 [opt]\r\n    frame #14: 0x0000000100d3a7df sfbackend`WKS::gc_heap::try_allocate_more_space(acontext=0x000070000a2cb360, size=1701864, flags=32, gen_number=<unavailable>) at gc.cpp:13517:17 [opt]\r\n    frame #15: 0x0000000100d5d3e1 sfbackend`WKS::gc_heap::allocate_uoh_object(unsigned long, unsigned int, int, long long&) [inlined] WKS::gc_heap::allocate_more_space(acontext=0x0000000000000000, size=1701864, flags=32, alloc_generation_number=3) at gc.cpp:13953:18 [opt]\r\n    frame #16: 0x0000000100d5d3c3 sfbackend`WKS::gc_heap::allocate_uoh_object(jsize=<unavailable>, flags=32, gen_number=3, alloc_bytes=0x0000000114a00018) at gc.cpp:32530 [opt]\r\n    frame #17: 0x0000000100d6164b sfbackend`WKS::GCHeap::Alloc(this=<unavailable>, context=<unavailable>, size=1701832, flags=32) at gc.cpp:36138:30 [opt]\r\n    frame #18: 0x0000000100d1daff sfbackend`::RhpGcAlloc(pEEType=<unavailable>, uFlags=<unavailable>, cbSize=<unavailable>, pTransitionFrame=<unavailable>) at gcrhenv.cpp:288:54 [opt]\r\n    frame #19: 0x0000000100d804d3 sfbackend`RhpNewArrayRare at AllocFast.S:307\r\n    frame #20: 0x0000000101e55002 sfbackend`S_P_Reflection_Execution_System_Collections_Generic_LowLevelList_1<S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation_FunctionPointerOffsetPair>__ToArray + 34\r\n    frame #21: 0x0000000101a2a390 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__ComputeLdftnReverseLookup_InvokeMap + 704\r\n    frame #22: 0x0000000101a29a61 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__GetLdFtnReverseLookups_Helper + 625\r\n    frame #23: 0x0000000101a29f7e sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__TryGetMethodForStartAddress + 302\r\n    frame #24: 0x0000000101a2ba88 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ReflectionExecutionDomainCallbacksImplementation__GetMethodBaseFromStartAddressIfAvailable + 56\r\n    frame #25: 0x00000001014a82de sfbackend`S_P_CoreLib_Internal_DeveloperExperience_DeveloperExperience__TryGetMethodBase + 46\r\n    frame #26: 0x00000001014485f8 sfbackend`S_P_CoreLib_System_Diagnostics_StackFrame__InitializeForIpAddress + 136\r\n    frame #27: 0x0000000101448b23 sfbackend`S_P_CoreLib_System_Diagnostics_StackTrace__InitializeForIpAddressArray + 275\r\n    frame #28: 0x00000001014a965a sfbackend`S_P_CoreLib_Internal_Diagnostics_StackTraceHelper__FormatStackTrace_0 + 58\r\n    frame #29: 0x00000001013c50b9 sfbackend`S_P_CoreLib_System_Exception__ToString + 121\r\n    frame #30: 0x0000000101846bda sfbackend`sfbackend_SoundFlow_Shortcuts_StatsController__PushLoop_d__34__MoveNext + 1850\r\n    frame #31: 0x0000000100d80708 sfbackend`RhpCallCatchFunclet at ExceptionHandling.S:335\r\n    frame #32: 0x000000010149c822 sfbackend`S_P_CoreLib_System_Runtime_EH__DispatchEx + 578\r\n    frame #33: 0x000000010149c580 sfbackend`S_P_CoreLib_System_Runtime_EH__RhThrowEx + 80\r\n    frame #34: 0x0000000100d80630 sfbackend`RhpThrowEx at ExceptionHandling.S:152\r\n    frame #35: 0x00000001014a2a3c sfbackend`S_P_CoreLib_System_Runtime_ExceptionServices_ExceptionDispatchInfo__Throw + 28\r\n    frame #36: 0x00000001014a47ab sfbackend`S_P_CoreLib_System_Runtime_CompilerServices_TaskAwaiter__ThrowForNonSuccess + 187\r\n    frame #37: 0x00000001014a46e6 sfbackend`S_P_CoreLib_System_Runtime_CompilerServices_TaskAwaiter__HandleNonSuccessAndDebuggerNotification + 70\r\n    frame #38: 0x0000000101846590 sfbackend`sfbackend_SoundFlow_Shortcuts_StatsController__PushLoop_d__34__MoveNext + 240\r\n```\r\n\r\nThe method in question is an async method with several nested try/catch blocks and while + for loops.\r\n\r\nAny input as to how to debug / figure out why this issue occurs would be very much appreciated :)\r\n","Url":"https://github.com/dotnet/corert/issues/8240","RelatedDescription":"Closed issue \"FailFastException since upgrading CoreRT\" (#8240)"},{"Id":"662323175","IsPullRequest":false,"CreatedAt":"2020-07-20T22:19:52","Actor":"christianscheuer","Number":"8239","RawContent":null,"Title":"\"Failed to change helper page protection to read / write\" assert on macOS Big Sur (Rosetta 2)","State":"open","Body":"Hi all,\r\n\r\nIn the process of preparing our product for the Apple ARM switch, running a CoreRT compiled binary, we're hitting this assert:\r\nhttps://github.com/dotnet/corert/blob/bb212a9d2083046724f48e206f47b7dfb78d9979/src/Native/Runtime/unix/PalRedhawkUnix.cpp#L1207\r\n\r\nI suspect this may be related to how Rosetta 2 translates/recompiles instructions on the fly which could mean they might disallow read/write access to code pages - but I can't find any documentation on whether or not that's the case.\r\n\r\nIs there another way to flush the process write buffers rather than using the mprotect call, that we could utilize for Big Sur / Rosetta 2?","Url":"https://github.com/dotnet/corert/issues/8239","RelatedDescription":"Open issue \"\"Failed to change helper page protection to read / write\" assert on macOS Big Sur (Rosetta 2)\" (#8239)"},{"Id":"659524860","IsPullRequest":true,"CreatedAt":"2020-07-17T19:55:10","Actor":"yowl","Number":"8238","RawContent":null,"Title":"Wasm: Upgrade emscripten for thread destructor support on thread termination","State":"closed","Body":"Updates emscripten to the latest which should allow thread support to be enabled in Wasm as previous versions do not always call thread destructors. https://github.com/emscripten-core/emscripten/issues/10809","Url":"https://github.com/dotnet/corert/pull/8238","RelatedDescription":"Closed or merged PR \"Wasm: Upgrade emscripten for thread destructor support on thread termination\" (#8238)"},{"Id":"659114862","IsPullRequest":true,"CreatedAt":"2020-07-17T18:32:15","Actor":"MichalStrehovsky","Number":"8237","RawContent":null,"Title":"Sync GC with dotnet/runtime","State":"closed","Body":"The GCInterface we have in CoreRT is not compatible with the live GCInterface in the runtimelabs repo. This brings current GC sources over.","Url":"https://github.com/dotnet/corert/pull/8237","RelatedDescription":"Closed or merged PR \"Sync GC with dotnet/runtime\" (#8237)"},{"Id":"658953721","IsPullRequest":false,"CreatedAt":"2020-07-17T07:18:05","Actor":"RalfKornmannEnvision","Number":"8236","RawContent":null,"Title":"ARM64 and cross compile support","State":"open","Body":"About a year a year ago I was working on an evaluation to use CoreRT to port the C# part of PC/Windows based game to they major game consoles (XBox One; PlayStation 4 and Switch). The Team had it already running with Mono but was not satisfied with the overall performances. Therefore I was tasked with checking if the performances can be improved or finding an alternative to using Mono. \r\n\r\nAs getting CoreRT working on the XBox was an very easy task I was able to get the core module of our C# code run in a few hours. As it runs more than twice as fast compared to Mono it was decided to go ahead. PlayStation was a little bit more work but it worked after a few days and showed the same performances improvements. Unfortunately while goingon to the Switch I noticed that the ARM64 support was incomplete and using ARM was not an option because of some limitations on the target system. As the team still wanted the performances improvements I started to implement the missing parts. It took some time but I was able to get our test case running and again it was more than twice as fast as the Mono version. It does not use all .Net features therefore there are still parts missing. But as our test test case (around 5MB of C# code) was able to run for hours with the precise GC I assume it is at least a big part.\r\n\r\nUnfortunately priorities changed and this project was put on hold. After things have changed again it was decided to give a switch from Mono to CoreRT a second try. This time I although got the permission to submit anything that does not touch the various NDAs. As you might assume I needed to add code on different places including the jit itself. As anything was done on a now nearly one year old version I need to reintegrate all these changes again. But I'd like to make sure they can easily go back in the main code branch. \r\n\r\nTherefore the question on which of these changes you are interested in and what's your recommended work flow?\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8236","RelatedDescription":"Open issue \"ARM64 and cross compile support\" (#8236)"},{"Id":"658291999","IsPullRequest":false,"CreatedAt":"2020-07-16T15:29:50","Actor":"ogxd","Number":"8234","RawContent":null,"Title":"Link error 1181 when building the NativeLibrary sample as a shared library","State":"closed","Body":"I just cloned the repository.\r\n\r\nThe C# dll builds fine, but then when I try to compile it as a shared library using : \r\n`dotnet publish /p:NativeLib=Shared -r win-x64 -c Release`\r\n\r\nIt throws the following exception : \r\n`LINK : fatal error LNK1181: cannot open input file 'kernel32.lib' [...\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]\r\n...\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-29116-02\\build\\Microsoft.NETCore.Native.targets(310,5): error MSB3073: The command \"link  @\"obj\\Release\\netstandard2.0\\win-x64\\native\\link.rsp\"\" exited with code 1181. [...\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]`\r\n\r\nCreating a static library works fine however","Url":"https://github.com/dotnet/corert/issues/8234","RelatedDescription":"Closed issue \"Link error 1181 when building the NativeLibrary sample as a shared library\" (#8234)"},{"Id":"658229197","IsPullRequest":false,"CreatedAt":"2020-07-16T14:37:11","Actor":"jnkarate","Number":"8233","RawContent":null,"Title":"Question about When this will be Ready for Industry","State":"closed","Body":"When will this be ready for industry use, specifically the ability to build a .NET Core library as a .so (linux) and a .dylib (mac)?","Url":"https://github.com/dotnet/corert/issues/8233","RelatedDescription":"Closed issue \"Question about When this will be Ready for Industry\" (#8233)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"678884759","IsPullRequest":false,"CreatedAt":"2020-08-14T04:20:42","Actor":"PokeArsenalist","Number":"12917","RawContent":null,"Title":"Error NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App.WPF' was not recognized (NETSDK1073)","State":"open","Body":"Hello all,\r\n\r\nI'm getting \"Error NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App.WPF' was not recognized (NETSDK1073)\" while trying to run my test project. Mine is a Xamarin.Forms app which builds and deploys successfully in devices. But the issue I am facing is with the .Net Core app 3.1 unit test project.\r\nOne suggestion that I came across is regarding Rg.Plugins.Popup. My solution structure is:\r\nNaySayApp\r\nNaySayApp.Android\r\nNaySayApp.iOS\r\nNaySayApp.Test\r\nExcept the test project, others has reference to the above mentioned plugin package. Tried to workaround the issue with PrivateAssets/ExcludeAssets but no luck so far.\r\n\r\nThe same project works fine in my windows Visual Studio, but fails in MAC.\r\n\r\nVS Details are as follows:\r\n```\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.7.1 (build 15)\r\nInstallation UUID: 151a6da6-b82d-4da3-ad54-29cf873ddcb4\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 6.18.0.23 (d16-6 / 088c73638)\r\n\r\n\tPackage version: 612000090\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.12.0.90 (2020-02/d3daacdaa80) (64-bit)\r\n\tPackage version: 612000090\r\n\r\n=== Roslyn (Language Service) ===\r\n\r\n3.7.0-6.20371.12+917b9dfae12e3b6cb266a3c062fb20a1e9d5fb06\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.7.0.6702\r\n\r\n=== .NET Core SDK ===\r\n\r\nSDK: /usr/local/share/dotnet/sdk/3.1.302/Sdks\r\nSDK Version: 3.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== .NET Core Runtime ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.1.6\r\n\t2.1.20\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.15.68\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 11.6 (16141)\r\nBuild 11E708\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 13.20.2.2 (Visual Studio Community)\r\nHash: 817b6f72a\r\nBranch: d16-7\r\nBuild date: 2020-07-18 18:45:00-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.7.0.492\r\nHash: f5afe667d\r\nBranch: remotes/origin/d16-7-vsmac\r\nBuild date: 2020-07-10 18:42:54 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 11.0.0.3 (Visual Studio Community)\r\nCommit: xamarin-android/d16-7/aca845b\r\nAndroid SDK: /Users/user/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 30.0.4\r\nSDK Build Tools Version: 29.0.2\r\n\r\nBuild Information: \r\nMono: 83105ba\r\nJava.Interop: xamarin/java.interop/d16-7@1f3388a\r\nProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\nSQLite: xamarin/sqlite/3.32.1@1a3276b\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-7@017078f\r\n\r\n=== Microsoft OpenJDK for Mobile ===\r\n\r\nJava SDK: /Users/user/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android SDK Manager ===\r\n\r\nVersion: 16.7.0.13\r\nHash: 8380518\r\nBranch: remotes/origin/dev/jmt/d16-7readconfig~2\r\nBuild date: 2020-07-23 22:38:02 UTC\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 16.7.0.18\r\nHash: 4b44bc1\r\nBranch: remotes/origin/d16-7\r\nBuild date: 2020-07-23 22:38:26 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 807010015\r\nGit revision: b2b8f289ffca8f28c585e9137d193c92462cbf14\r\nBuild date: 2020-08-07 10:38:31-04\r\nBuild branch: release-8.7\r\nXamarin extensions: b2b8f289ffca8f28c585e9137d193c92462cbf14\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.15.6\r\nDarwin 19.6.0 Darwin Kernel Version 19.6.0\r\n    Thu Jun 18 20:49:00 PDT 2020\r\n    root:xnu-6153.141.1~1/RELEASE_X86_64 x86_64\r\n```","Url":"https://github.com/dotnet/sdk/issues/12917","RelatedDescription":"Open issue \"Error NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App.WPF' was not recognized (NETSDK1073)\" (#12917)"},{"Id":"678803286","IsPullRequest":false,"CreatedAt":"2020-08-13T23:47:22","Actor":"wli3","Number":"12916","RawContent":null,"Title":"Cannot C++/CLI 5.0 app ","State":"open","Body":"https://github.com/nguerrera/NETCoreCppCliTest app and change TFM to net5.0 build will have error \r\n\r\nerror MSB4184: The expression \"[Microsoft.Build.Utilities.ToolLocationHelper]::GetPlatformSDKLocation('', 10.0.18362.0)\" cannot be evaluated. Parameter \"targetPlatformIdentifier\" cannot have zero length. [C:\\Users\\Administrator\\Documen\r\nts\\NETCoreCppCliTestWithNative\\NETCoreCppCliTest\\NETCoreCppCliTest.vcxproj]","Url":"https://github.com/dotnet/sdk/issues/12916","RelatedDescription":"Open issue \"Cannot C++/CLI 5.0 app \" (#12916)"},{"Id":"678787339","IsPullRequest":true,"CreatedAt":"2020-08-13T23:15:49","Actor":"dotnet-maestro[bot]","Number":"12915","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0410360-866d-4c30-bfba-08d828bd793b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: c0410360-866d-4c30-bfba-08d828bd793b\r\n- **Build**: 5.8.0.6776\r\n- **Date Produced**: 8/12/2020 12:22 AM\r\n- **Commit**: 62e098bfb22998fa638ce1a6dff5f91276770500\r\n- **Branch**: dev\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.8.0-preview.1.6753 to 5.8.0-preview.2.6776\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0410360-866d-4c30-bfba-08d828bd793b)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12915","RelatedDescription":"Open PR \"[release/5.0.1xx-preview8] Update dependencies from nuget/nuget.client\" (#12915)"},{"Id":"678766670","IsPullRequest":false,"CreatedAt":"2020-08-13T22:18:29","Actor":"PtkFerraro","Number":"12914","RawContent":null,"Title":"Shared Resource case insensitive","State":"open","Body":"I have a resource with entries:\r\n\r\n```\r\n<data name=\"Total\">\r\n    <value>Total</value>\r\n  </data>\r\n\r\n  <data name=\"TOTAL\">\r\n    <value>TOTAL</value>\r\n  </data>\r\n\r\n```\r\nThey are different (in case sensetive way).\r\n\r\nBut it warms me that my resource have duplicate key and them will be ignored\r\n\r\nLocalization/SharedResource.es.resx : warning MSB3568: Duplicate resource name \"TOTAL\" is not allowed, ignored.\r\n\r\nI dont know if is because of this, but the designer file stopped to be generated, so my resource file has more entries then the designer file.\r\n\r\nThis occurs in my Visual Code on my MacOSX and on my Visual Studio in WIn 10. (.net Core 2.2)\r\n\r\nWhy does it check the entries as case insensitve? how should I work around this?\r\n\r\nWhy does the designer file stopped to be generated?\r\n","Url":"https://github.com/dotnet/sdk/issues/12914","RelatedDescription":"Open issue \"Shared Resource case insensitive\" (#12914)"},{"Id":"678754798","IsPullRequest":false,"CreatedAt":"2020-08-13T21:50:42","Actor":"npuc85","Number":"12913","RawContent":null,"Title":"Version number is missing from dotnet publish output in linux docker images","State":"open","Body":"In my CI pipeline I am using an alpine image (also tried [official .net core 2.1/3.1 sdk images](https://hub.docker.com/_/microsoft-dotnet-core-sdk/) and got the same results) to build, test, and publish my project as a single file. This is the command I am using to publish:\r\n`dotnet publish -c Release -r win-x64 /p:PublishReadyToRun=false /p:PublishSingleFile=true /p:PublishTrimmed=true`\r\nHowever, this is creating an exe that has no version number. I do have a Version specified inside of my .csproj file, and I have tried both with and without using the `/p:Version=1.2.3` argument on the `dotnet publish` command. Both ways result in an exe file that has no version number.\r\n\r\nRunning the same command locally on my Windows machine does produce an exe that has a version number.\r\nAlso, `dotnet build` (both in Windows and alpine) produces an exe that has a version number. It seems to only be an issue with the `publish` command and only in the alpine image.","Url":"https://github.com/dotnet/sdk/issues/12913","RelatedDescription":"Open issue \"Version number is missing from dotnet publish output in linux docker images\" (#12913)"},{"Id":"678647791","IsPullRequest":true,"CreatedAt":"2020-08-13T18:26:07","Actor":"dotnet-maestro-bot","Number":"12912","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* joeloff\n* dotnet-bot\n* wtgodbe\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/12912","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#12912)"},{"Id":"678548675","IsPullRequest":true,"CreatedAt":"2020-08-13T18:23:06","Actor":"joeloff","Number":"12910","RawContent":null,"Title":"Dev/merge internal 08132020/release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/12910","RelatedDescription":"Closed or merged PR \"Dev/merge internal 08132020/release/3.1.4xx\" (#12910)"},{"Id":"677815417","IsPullRequest":true,"CreatedAt":"2020-08-13T18:22:25","Actor":"joeloff","Number":"12895","RawContent":null,"Title":"Dev/merge internal 08112020/release/3.1.1xx","State":"closed","Body":"Merge internal to public repo","Url":"https://github.com/dotnet/sdk/pull/12895","RelatedDescription":"Closed or merged PR \"Dev/merge internal 08112020/release/3.1.1xx\" (#12895)"},{"Id":"678620173","IsPullRequest":false,"CreatedAt":"2020-08-13T17:36:53","Actor":"wli3","Number":"12911","RawContent":null,"Title":"Cannot build netcore 3.1 C++/CLI due to cannot resolve 3.1 IJW host","State":"open","Body":"@Ninds commented on [Sun Aug 09 2020](https://github.com/dotnet/msbuild/issues/5637)\n\nHI\r\n\r\n### Issue Description\r\nWhen building C++/CLI dll targeting .NET Core 3.1 with msbuild of VS 16.7 we have the following error \\:\r\n```\r\n\"C:\\WorkSpace\\Project1\\Project1\\Project1.vcxproj\" (default target) (1) ->\r\n(_GetIjwHostPaths target) ->\r\n  C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(585,5)\r\n: error NETSDK1114: Unable to find a .NET Core IJW host. The .NET Core IJW host is only available on .NET Core 3.1 or h\r\nigher when targeting Windows. [C:\\WorkSpace\\Project1\\Project1\\Project1.vcxproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\nThis error did not occur in the last 16.7 preview.\r\n\r\n\r\n### Steps to Reproduce\r\n#### Environment\r\n```\r\n$ dotnet --list-runtimes\r\nMicrosoft.AspNetCore.All 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.0-preview.7.20365.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.0-preview.7.20364.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.0-preview.7.20366.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n```\r\n$ dotnet --list-sdks\r\n3.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.100-preview.7.20366.6 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n```\r\nC:\\WorkSpace\\Project1\\Project1>msbuild -version\r\nMicrosoft (R) Build Engine version 16.7.0+b89cb5fde for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.7.0.37604\r\n```\r\n[Reproducing Project File](https://gist.github.com/Ninds/7db8f055d8127bf0ebf50631d3b1dda8)\r\n\r\nTargeting .NET 4.7.2 is ok \r\nTargeting .NET 5      is ok\r\nTargeting .NET Core 3.1  is **NOT** ok\r\n\r\n\r\n\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-671571790)\n\nEven switching off __use of previews of the .NET Core SDK__  doesn't fix the problem.\r\n\r\n![preview](https://user-images.githubusercontent.com/5892035/89827470-8cd6ad00-db4f-11ea-9e7b-93d2f5ac835e.jpg)\r\n\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(585,5): error NETSDK1114: Unable to find a .NET Core IJW host. The .NET Core IJW host is only available on .NET Core 3.1 or higher when targeting Windows.\r\n```\r\n\r\n\n\n---\n\n@stic commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-672992631)\n\nSame here, unable to target netcoreapp3.1 with .net core 5.0 preview installed.\r\nI've tried to do some investigation (i.e. figure out how .net core targets are resolved during build), but even verbose build log doesn't explain much - suggestion, whilst providing fix it might be worth to improve build logging too. Cleaned everything cached internally under .vs, build outputs etc. By the way it's with VS16.7.1 (haven't tried 16.8 behaviour yet)\r\n\r\nWorkaround for now - remove preview 🤕 \n\n---\n\n@Forgind commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673138334)\n\nAt face value, this sounds like a \"we expected .NET Core __ but got .NET __\" type problem, fixed by teaching it that it should work with .NET 5, too. I had some difficulty with reproducing the problem, though. Here's what I tried:\r\nI created a new vcxproj and replaced its content with the project you provided.\r\nI used MSBuild 16.7.0.37604 (full framework) to build the project, but that worked (not too surprising)\r\nI used Core MSBuild 16.7.0.36003 to try to build the project and reset VCTargetsPath to point to the relevant folder, but it still failed for an unrelated reason—failing to find Platform.props. What did I do wrong?\r\n\r\nAlso, given that the error message is NETSDK1114, I have a feeling this is a dotnet/sdk problem. Is that correct, @wli3/@dsplaisted?\n\n---\n\n@dsplaisted commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673150741)\n\nIt's probably an issue with dotnet/sdk, though it's hard to say.  A [binlog](https://aka.ms/binlog) would be helpful to investigate this.\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673279028)\n\nI suspected MSBuild only because all other things being equal under the last VS 16.7 preview everything worked.\r\nSpecifically, building for target .NET Core 3.1 with .NET 5 preview 7 installed.  If .NET 5 preview 7 is not installed there is no issue observed.  \r\nWhen VS 16.7 Preview was being used and .NET Core 3.1 & .NET 5 preview were installed and everything was working, the only change that was then made was to upgrade VS to 16.7 Release for msbuild to exhibit the error.\r\n\r\nThe binlog file is attached.\r\n\r\n[msbuild.binlog.zip](https://github.com/dotnet/msbuild/files/5067344/msbuild.binlog.zip)\r\n\r\nThanks\r\n\r\n\r\n\r\n\n\n---\n\n@Ninds commented on [Wed Aug 12 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673285860)\n\nHaving uninstalled .NET 5 Preview 7 I attach also the msbuild binlog of a successful build  :\r\n[msbuild.binlog.zip](https://github.com/dotnet/msbuild/files/5067400/msbuild.binlog.zip)\r\n\r\nIs it still possible to download the last VS 16.7 preview ?\r\n\n\n---\n\n@wli3 commented on [Thu Aug 13 2020](https://github.com/dotnet/msbuild/issues/5637#issuecomment-673611771)\n\nAssign it to me. I'll look into it.\n\n","Url":"https://github.com/dotnet/sdk/issues/12911","RelatedDescription":"Open issue \"Cannot build netcore 3.1 C++/CLI due to cannot resolve 3.1 IJW host\" (#12911)"},{"Id":"678487180","IsPullRequest":true,"CreatedAt":"2020-08-13T14:34:05","Actor":"dotnet-maestro[bot]","Number":"12909","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/12/2020 11:33 PM\r\n- **Commit**: 9156636e387cd54394b057e74097c106c75d159b\r\n- **Branch**: refs/heads/release/dev16.8\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20409.2 to 11.0.0-beta.20412.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12909","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/fsharp\" (#12909)"},{"Id":"678469522","IsPullRequest":true,"CreatedAt":"2020-08-13T14:11:48","Actor":"dotnet-maestro[bot]","Number":"12908","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200811.8\r\n- **Date Produced**: 8/11/2020 7:07 PM\r\n- **Commit**: ecec08a0eebbd92bb9538e351d475582551d9092\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.SignTool**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12908","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#12908)"},{"Id":"678353804","IsPullRequest":false,"CreatedAt":"2020-08-13T11:10:10","Actor":"vitek-karas","Number":"12907","RawContent":null,"Title":"Make it easy to run trimming for diagnostic purposes on libraries","State":"open","Body":"Currently trimming and the ILLink task are designed to run on applications - and that is very easy (one or two MSBuild properties).\r\nIn .NET 5 we're introducing analysis in the linker where it can report potential issues in the app after trimming - can be enabled by setting `SuppressTrimAnalysisWarnings=false`.\r\n\r\nBeing able to run this analysis on just libraries would be really beneficial as library author could use it to make the libraries trim-ready. The general idea is to have some MSBuild way (properties and/or items) to:\r\n* Run ILLink just for analysis purposes - this could be completely without any output, just produce warnings\r\n* Configure which warnings to see (warning level, disable warnings, warnings as errors, ...)\r\n* Be able to focus on the library alone - so somehow disable warnings from references\r\n* Run ILLink on a library project (classlib) - this would mean root all public APIs in the assembly and run analysis from there\r\n* Run ILLink on a library project with produced output - not necessarily for shipping (although one day maybe even that), but to inspect the output for diagnostic reasons (for example find dead code in the library)\r\n* Going forward be able to control which types of analysis to run (trim-ready, single-file-ready, AOT-ready, ...)\r\n\r\nFiled in SDK as this is mostly SDK experience feature, but I do expect work for this to also happen in the mono/linker repo and potentially also in the dotnet/runtime repo if necessary.","Url":"https://github.com/dotnet/sdk/issues/12907","RelatedDescription":"Open issue \"Make it easy to run trimming for diagnostic purposes on libraries\" (#12907)"},{"Id":"678156210","IsPullRequest":true,"CreatedAt":"2020-08-13T07:49:06","Actor":"dotnet-maestro[bot]","Number":"12906","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: e251dd77-ab9f-49fc-4299-08d828bd4fbd\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/13/2020 4:39 AM\r\n- **Commit**: 71ffb7009993396ac20f9da007a79a62f2da43ec\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20412.5 to 3.8.0-2.20413.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12906","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn\" (#12906)"},{"Id":"678043760","IsPullRequest":true,"CreatedAt":"2020-08-13T02:44:34","Actor":"dotnet-maestro[bot]","Number":"12905","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c1d54ad-9525-4c7d-cd1e-08d828bd54b7)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 3c1d54ad-9525-4c7d-cd1e-08d828bd54b7\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/12/2020 11:33 PM\r\n- **Commit**: 9156636e387cd54394b057e74097c106c75d159b\r\n- **Branch**: refs/heads/release/dev16.8\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20409.2 to 11.0.0-beta.20412.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3c1d54ad-9525-4c7d-cd1e-08d828bd54b7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12905","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/fsharp\" (#12905)"},{"Id":"677935507","IsPullRequest":false,"CreatedAt":"2020-08-12T19:49:39","Actor":"AM-27","Number":"12903","RawContent":null,"Title":"Blazor, page render issue (components render clumsy at first and then get fixed)","State":"open","Body":"when I am login to my Blazor wen assembly app is miss render for sometime like this \r\n\r\n![image](https://user-images.githubusercontent.com/69601994/90060884-39bd4100-dc9a-11ea-9a1d-1c956479837d.png)\r\n\r\n\r\n\r\nand then get fixed as below\r\n![image](https://user-images.githubusercontent.com/69601994/90060770-11cddd80-dc9a-11ea-874d-6093e4f9754d.png)\r\n\r\nis this something related to my local network speed or some issue with code?\r\nplease suggest if anyone face same and how to avoid it. ","Url":"https://github.com/dotnet/sdk/issues/12903","RelatedDescription":"Open issue \"Blazor, page render issue (components render clumsy at first and then get fixed)\" (#12903)"},{"Id":"677919581","IsPullRequest":false,"CreatedAt":"2020-08-12T19:20:13","Actor":"vijayrkn","Number":"12902","RawContent":null,"Title":"Add support for 'DisableIIS' flag that will suppress the generation/merging/copying of the web.config file and the ancm dll","State":"open","Body":"Support the new DisableIIS msbuild property. \r\n\r\nWhen the property is set, suppress the generation/merging/copying of the web.config file and the ancm dll\r\n\r\n`dotnet publish /p:DisableIIS:true`","Url":"https://github.com/dotnet/sdk/issues/12902","RelatedDescription":"Open issue \"Add support for 'DisableIIS' flag that will suppress the generation/merging/copying of the web.config file and the ancm dll\" (#12902)"},{"Id":"677917929","IsPullRequest":false,"CreatedAt":"2020-08-12T19:17:05","Actor":"marcpopMSFT","Number":"12901","RawContent":null,"Title":"Finish optional SDK workload composition","State":"open","Body":"[Workloads overview spec](https://github.com/dotnet/designs/pull/100)\n\nThis Epic tracks the work needed for workload \"composition\", ie hooking up the right assets from a workload once they are installed.\n\nThis spec covers a lot of the details for how this will be implemented: [Workload resolution in MSBuild](https://github.com/dotnet/designs/pull/104)\n\n#### .NET 6\n- [ ] Project system - [Trigger in-product acquisition based on MissingWorkloadPack items](https://github.com/dotnet/project-system/issues/6080)\n- [ ] Create validator for workloads to make sure that they follow the right format and guidance\n- [ ] [Workload commandline resolver](https://github.com/dotnet/sdk/issues/11495)","Url":"https://github.com/dotnet/sdk/issues/12901","RelatedDescription":"Open issue \"Finish optional SDK workload composition\" (#12901)"},{"Id":"677916871","IsPullRequest":false,"CreatedAt":"2020-08-12T19:14:57","Actor":"marcpopMSFT","Number":"12900","RawContent":null,"Title":"Miscellaneous .NET 6 work","State":"open","Body":"This epic covers work not included in other .net 6 epics.  This is a carryover of the work not completed in #11225\n- [ ] Get latest runtime patch information without requiring users to update the SDK: #11226 \n- [ ] Include PDBs and XML files from packages in project output: #1458\n- [ ] Support setting a common root output path via a single property: #867\n- [Avoid downloading MSBuild SDKs from NuGet on the VS UI thread](https://github.com/dotnet/project-system/issues/6069)\n- Self-contained apps can use the Mono VM (and AOT) on desktop operating systems: #11227\n- [ ] Remaining cswinrt work #12387","Url":"https://github.com/dotnet/sdk/issues/12900","RelatedDescription":"Open issue \"Miscellaneous .NET 6 work\" (#12900)"},{"Id":"677915789","IsPullRequest":false,"CreatedAt":"2020-08-12T19:12:57","Actor":"marcpopMSFT","Number":"12899","RawContent":null,"Title":".NET 6 Support targeting iOS and Android with the .NET SDK","State":"open","Body":"This epic tracks the work to support targeting iOS and Android in the .NET SDK.  This was generated from the work that was cut from #11165 as not in scope for .net 5\n\nThis includes work in the .NET SDK, MSBuild, and NuGet to support new TargetFrameworks, or other related work.  \n\n- Normalize TargetPlatformIdentifier casing\n  - [x] Windows\n  - [ ] Android (.NET 6)\n  - [ ] iOS and other Apple platforms (macOS, tvOS, watchOS) (.NET 6)\n- [ ] Set default TargetPlatformVersion based on TFI, TFV, and TPI\n  - [x] For Windows: #11233\n  - [ ] For iOS and Android (in the corresponding workloads) .NET 6\n- Support platform-specific OS minimum version attributes, translating them to OSMinimumVersion if current target matches\n  - [ ] WindowsMinimumVersion -- .NET 6\n  - [ ] IOSMinimumVersion -- .NET 6\n  - [ ] AndroidMinimumVersion -- .NET 6\nOpen design issues: #11275\n- [ ] iOS / Android workloads: Support sdk-style projects for iOS / Android\n  - Default item globs\n  - Other defaults, and integration into Microsoft.NET.Sdk\n- [ ] dotnet tools X net5.0 #12055","Url":"https://github.com/dotnet/sdk/issues/12899","RelatedDescription":"Open issue \".NET 6 Support targeting iOS and Android with the .NET SDK\" (#12899)"},{"Id":"677726225","IsPullRequest":true,"CreatedAt":"2020-08-12T18:34:30","Actor":"dotnet-maestro[bot]","Number":"12893","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: e251dd77-ab9f-49fc-4299-08d828bd4fbd\r\n- **Build**: 20200812.5\r\n- **Date Produced**: 8/12/2020 1:32 PM\r\n- **Commit**: 0cf3c978755f67779c847f0432d8696bbd54a43b\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20412.1 to 3.8.0-2.20412.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12893","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn\" (#12893)"},{"Id":"677878594","IsPullRequest":true,"CreatedAt":"2020-08-12T18:04:44","Actor":"jmarolf","Number":"12898","RawContent":null,"Title":"allow user to specify 'latest', 'preview', or 'none'","State":"open","Body":"Closes https://github.com/dotnet/roslyn-analyzers/issues/3996","Url":"https://github.com/dotnet/sdk/pull/12898","RelatedDescription":"Open PR \"allow user to specify 'latest', 'preview', or 'none'\" (#12898)"},{"Id":"677875751","IsPullRequest":true,"CreatedAt":"2020-08-12T17:59:43","Actor":"dotnet-maestro[bot]","Number":"12897","RawContent":null,"Title":"[master] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: a3c26c65-d5fb-4ade-e67f-08d808024d62\r\n- **Build**: 5.8.0.6776\r\n- **Date Produced**: 8/12/2020 12:22 AM\r\n- **Commit**: 62e098bfb22998fa638ce1a6dff5f91276770500\r\n- **Branch**: dev\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.8.0-preview.1.6753 to 5.8.0-preview.2.6776\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12897","RelatedDescription":"Open PR \"[master] Update dependencies from nuget/nuget.client\" (#12897)"},{"Id":"677872140","IsPullRequest":true,"CreatedAt":"2020-08-12T17:53:18","Actor":"dotnet-maestro[bot]","Number":"12896","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200813.13\r\n- **Date Produced**: 8/14/2020 2:38 AM\r\n- **Commit**: ffc0bf914aa3904f75ef3e2d22aefb899794b9b9\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-rc.1.20411.10 to 5.0.0-rc.1.20413.13\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12896","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12896)"},{"Id":"677730204","IsPullRequest":true,"CreatedAt":"2020-08-12T14:17:49","Actor":"dotnet-maestro[bot]","Number":"12894","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20200813.2\r\n- **Date Produced**: 8/13/2020 4:15 PM\r\n- **Commit**: fbddaa1e334e2c39f3ea798f413a8c7f0efb9946\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: from 5.0.0-rc.1.20407.2 to 5.0.0-rc.1.20413.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12894","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#12894)"},{"Id":"677726218","IsPullRequest":true,"CreatedAt":"2020-08-12T14:12:23","Actor":"dotnet-maestro[bot]","Number":"12892","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20200813.3\r\n- **Date Produced**: 8/13/2020 4:39 AM\r\n- **Commit**: 71ffb7009993396ac20f9da007a79a62f2da43ec\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20412.1 to 3.8.0-2.20413.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12892","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/roslyn\" (#12892)"},{"Id":"677716961","IsPullRequest":false,"CreatedAt":"2020-08-12T13:59:22","Actor":"saturley-hall","Number":"12891","RawContent":null,"Title":"dotnet CLI should support search of NuGet packages on one or all configured sources","State":"open","Body":"**Issue**\r\nI would find it useful for the dotnet CLI to enumerate packages (and versions of packages) on a NuGet feed and enable searching of one or more NuGet feeds for keywords, tags, and names of a package.\r\nThe desired functionality is similar to the [list command of nuget.exe](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-list), though hopefully\r\n\r\n**Proposed Solution**\r\nAdd a ```dotnet nuget``` subcommand ``ls`` that has a structure somewhere between ```grep``` and and ```nuget list```.\r\nThis provides the combined functionality of listing all packages or listing packages that match a user-defined search term which are available on one or more NuGet feeds\r\n\r\n```nuget ls [OPTION]... [-s PATTERN]... [SOURCE]...```: \r\n\r\nWhen passed with no SOURCEs all enabled sources are used and only the most recent Release version are returned.\r\n\r\n- ```-a```, ```--all-versions``` flag specifies all versions available on the feed are returned sorted in descending order.\r\n- ```-i```, ```--include-disabled``` flag specifies use of both enabled and disabled sources.\r\n- ```-s```, ```--search-term``` option specifies one or more search terms which will be used to filter packages\r\n\r\nWhen passed with one or more [SOURCE] parameters with the name of an established feed or a URL defining a feed those are the feeds from which packages are listed.\r\n\r\n**Method of Implementation**\r\nWhile this could be added as a dotnet core tool, and it is fairly similar to [dotnet-search](https://github.com/billpratt/dotnet-search) (and perhaps should be added there first), it feels like core functionality that should be supported by the CLI without adding a tool.","Url":"https://github.com/dotnet/sdk/issues/12891","RelatedDescription":"Open issue \"dotnet CLI should support search of NuGet packages on one or all configured sources\" (#12891)"},{"Id":"677642942","IsPullRequest":true,"CreatedAt":"2020-08-12T12:13:00","Actor":"dotnet-maestro[bot]","Number":"12890","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn-analyzers","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: e7c40fb8-9651-4ba2-dbe8-08d81c92f408\r\n- **Build**: 20200813.1\r\n- **Date Produced**: 8/13/2020 12:23 PM\r\n- **Commit**: ef186219de905936df46c5af7b929b13db2b07b4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: from 3.3.1-beta1.20410.6 to 5.0.0-rc1.20413.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12890","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/roslyn-analyzers\" (#12890)"},{"Id":"677641119","IsPullRequest":true,"CreatedAt":"2020-08-12T12:10:58","Actor":"dotnet-maestro[bot]","Number":"12889","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 769e6472-e796-4bcb-a0ac-08d7dbf4acc5\r\n- **Build**: 20200813.1\r\n- **Date Produced**: 8/13/2020 10:40 AM\r\n- **Commit**: 2b04c065c84aa8f30600e3b1989c537fc77de95b\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: from 5.0.0-preview.3.20410.2 to 5.0.0-preview.3.20413.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12889","RelatedDescription":"Open PR \"[master] Update dependencies from mono/linker\" (#12889)"},{"Id":"677639229","IsPullRequest":true,"CreatedAt":"2020-08-12T12:08:51","Actor":"dotnet-maestro[bot]","Number":"12888","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20410.1 to 5.0.0-rc.1.20412.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200812.1\r\n- **Date Produced**: 8/12/2020 3:04 PM\r\n- **Commit**: d187b70904460ff7a2405e34836fb3e65f24f55c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-rc.1.20410.2 to 5.0.0-rc.1.20412.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20410.1 to 5.0.0-rc.1.20412.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12888","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#12888)"},{"Id":"678023542","IsPullRequest":false,"CreatedAt":"2020-03-21T06:48:49","Actor":"jkotas","Number":"12904","RawContent":null,"Title":"Self-contained apps are not marked as Windows 10 compatible in the manifest ","State":"open","Body":"The manifest of self-contained apps does not contain [Windows 10 supportedOS element](https://docs.microsoft.com/en-us/windows/win32/sbscs/application-manifests#supportedos). It means that self-contained applications run with compatibility shims by default.\r\n\r\nThe proposal based on the offline discussion:\r\n- Stop embedding the manifest in Roslyn for .NET 5 by passing the right command line option to the C# compiler (`-nowin32manifest`). There is a MS build property that drives this that we should set by default for .NET 5+, unless the app has explicitly provided manifest.\r\n    -  This is going to make apps on Linux a bit smaller. The Windows manifest in app.dll is a dead weight on  Linux.\r\n- Attach Win10 compatible manifest to apphost by default if there is not one in app.dll.\r\n\r\nRelated: \r\n- https://github.com/dotnet/runtime/pull/33651\r\n- https://github.com/dotnet/core-setup/pull/4700 \r\n- https://github.com/dotnet/runtime/issues/3028","Url":"https://github.com/dotnet/sdk/issues/12904","RelatedDescription":"Open issue \"Self-contained apps are not marked as Windows 10 compatible in the manifest \" (#12904)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"677090197","IsPullRequest":false,"CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Number":"163","RawContent":null,"Title":"August 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Framework\r\n* [August 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-august-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Open issue \"August 2020 .NET Updates\" (#163)"},{"Id":"677046311","IsPullRequest":false,"CreatedAt":"2020-08-11T17:08:44","Actor":"rbhanda","Number":"162","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/24796\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162)"},{"Id":"658602325","IsPullRequest":false,"CreatedAt":"2020-07-16T21:51:58","Actor":"clairernovotny","Number":"161","RawContent":null,"Title":"Moving microsoft/MSBuild to dotnet/MSBuild","State":"open","Body":"Early next week, we are planning to move `microsoft/msbuild` to `dotnet/msbuild` as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523","Url":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Open issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161)"},{"Id":"656777247","IsPullRequest":false,"CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Number":"160","RawContent":null,"Title":"July 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n  * .NET Core 3.1.6 and .NET Core SDK 3.1.106 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.20 and .NET Core SDK 2.1.808 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* [.NET Core support for Ubuntu 19.10 -- EOL](https://github.com/dotnet/core/issues/4925)\r\n\r\n## .NET Framework\r\n* [July 2020 Security and Quality Rollup Updates]( https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/)\r\n\r\n* [July 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/)\r\n\r\n* [July 2020 Cumulative Update Preview for Windows 10, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/)\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Open issue \"July 2020 .NET Updates\" (#160)"},{"Id":"656765637","IsPullRequest":false,"CreatedAt":"2020-07-14T17:06:53","Actor":"rbhanda","Number":"159","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability ","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/39296\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.6 or SDK 3.1.106 (for Visual Studio 2019 v16.4) or 3.1.302 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n","Url":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \" (#159)"},{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n   * .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n   * .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n* [Alpine 3.12 ](https://github.com/dotnet/core/issues/4750) is now  supported.","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1294020657857077250","CreatedAt":"2020-08-13T21:19:01+00:00","UserScreenname":"dotnet","Text":"...time to get some more good skills under our belts. In this super-helpful .NET 301 tutorial, we walkthrough how t… https://t.co/Mi312iBiYp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":17,"RawContent":null},{"Id":"1293958016774082562","CreatedAt":"2020-08-13T17:10:06+00:00","UserScreenname":"dotnet","Text":"Let's go in depth.\n\nDrop in on the community stand-up as members from the #dotNET teams tackle Entity Framework Cor… https://t.co/NC11MlMuV2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"1293953536619814913","CreatedAt":"2020-08-13T16:52:18+00:00","UserScreenname":"dotnet","Text":"Join @KathleenDollard @runfaster2000 @_cartermp and @terrajobst for the .NET Runtime &amp; Language community standup:… https://t.co/prAA1KaVMU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":7,"RawContent":null},{"Id":"1293919744383483904","CreatedAt":"2020-08-13T14:38:01+00:00","UserScreenname":"dotnet","Text":"The Intersection of Microservices, Domain-Driven Design (DDD) and Entity Framework Core\nhttps://t.co/3CtgPV8JLh\n\nIn… https://t.co/SA81PKuRLO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":39,"RawContent":null},{"Id":"1293695014023966720","CreatedAt":"2020-08-12T23:45:01+00:00","UserScreenname":"dotnet","Text":"On today's #dotNETConf session replay, we see how to take advantage of @VisualStudio tools to build, debug and depl… https://t.co/MNoDQjMWss","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":29,"RawContent":null},{"Id":"1293613222285774851","CreatedAt":"2020-08-12T18:20:01+00:00","UserScreenname":"dotnet","Text":"Here's everything you need to know about cross-platform cryptography in .NET Core and .NET 5. Prep yourself with to… https://t.co/h4clPyXegA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":116,"FavoriteCount":40,"RawContent":null},{"Id":"1293560373992456192","CreatedAt":"2020-08-12T14:50:01+00:00","UserScreenname":"dotnet","Text":"Announcing the latest release of #XamarinForms 4.8 which introduces gradients, brushes, drag &amp; drop, and so much mo… https://t.co/5JeOyoJYp7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":24,"FavoriteCount":5,"RawContent":null},{"Id":"1293297643792334851","CreatedAt":"2020-08-11T21:26:01+00:00","UserScreenname":"dotnet","Text":".NET 💜 Azure!\n\nGet great samples, tutorials, and education all for #dotNET on Azure: https://t.co/hQLOAXeCSm https://t.co/TwJvGzWiJN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":262,"FavoriteCount":98,"RawContent":null},{"Id":"1293240520291098624","CreatedAt":"2020-08-11T17:39:01+00:00","UserScreenname":"dotnet","Text":"Looking to secure your applications? \n\n#dotNETRocks talks to @ChristosMatskas and @AzureAndChill about Azure Active… https://t.co/zEO2s9Cbw2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"1293232191313387520","CreatedAt":"2020-08-11T17:05:56+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":23,"FavoriteCount":4,"RawContent":null},{"Id":"1293194213518118912","CreatedAt":"2020-08-11T14:35:01+00:00","UserScreenname":"dotnet","Text":"In today's #dotNETConf session replay, we hear from the co-founder of #K8s about why microservices are important an… https://t.co/Bm0ayAmxuQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1292984078887682048","CreatedAt":"2020-08-11T00:40:01+00:00","UserScreenname":"dotnet","Text":"Join members from the @ASPNET teams for the #ASPNET Community Standup as they discuss the latest Project Tye Update… https://t.co/eo8MFYAtGJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":6,"RawContent":null},{"Id":"1292964626171334656","CreatedAt":"2020-08-10T23:22:43+00:00","UserScreenname":"dotnet","Text":"Take those beginner steps with C# in this new live video series from our @csharpfritz  -- It's CSharp with CSharpFr… https://t.co/vbso6GyEAb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"1292931230472650752","CreatedAt":"2020-08-10T21:10:01+00:00","UserScreenname":"dotnet","Text":"Take your #dotNET &amp; #Xamarin development skills to the next level in #August through this list of the amazing onlin… https://t.co/LRhyHyYx8u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":7,"RawContent":null},{"Id":"1292877878330298369","CreatedAt":"2020-08-10T17:38:01+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @runfaster2000 and @ToddHGardner to talk about his team’s experience with building a… https://t.co/sP2eZIRYoJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"1292834085442859008","CreatedAt":"2020-08-10T14:44:00+00:00","UserScreenname":"dotnet","Text":"In case you missed the fantastic #dotNETConf live sessions, They're now all available to watch on demand. Let's kic… https://t.co/m34nqBUnKn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2020-08-14T05:30:35.4848376Z","RunDurationInMilliseconds":13977}