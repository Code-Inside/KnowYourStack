{"Data":{"Blog":{"FeedItems":[{"Title":"GitHub Copilot Analysis, Customized Rules, and more come to the Azure Migrate application and code assessment","PublishedOn":"2024-03-01T18:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about the latest features in Azure Migrate Application and Code Assessment to help you move your .NET applications from on-premises to Azure.\nThe post GitHub Copilot Analysis, Customized Rules,...","Href":"https://devblogs.microsoft.com/dotnet/azure-migrate-application-and-code-assessment-march-2024-update/","RawContent":null},{"Title":".NET MAUI Community Toolkit 2023 Highlights","PublishedOn":"2024-02-29T18:06:00+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Let's take a look back at all the happeneings from 2023 for the the .NET MAUI Community Toolkit's Journey of Growth, Rich Features, and Expanding Community Collaboration and a sneak peak at what is...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-maui-community-toolkit-2023-highlights/","RawContent":null},{"Title":"The FAST and the Fluent: A Blazor story","PublishedOn":"2024-02-26T19:51:00+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Learn about the origin of the building blocks of the Fluent UI Blazor library. We'll talk about FAST, Web Components, Fluent Design, and more.\nThe post The FAST and the Fluent: A Blazor story appeared...","Href":"https://devblogs.microsoft.com/dotnet/the-fast-and-the-fluent-a-blazor-story/","RawContent":null},{"Title":"WinForms in a 64-Bit world – our strategy going forward","PublishedOn":"2024-02-22T18:00:00+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"32-bit components can impose challenges for WinForms developers in a 64-bit Visual Studio environment, but there are options to solve this. Component modernization, migrating to .NET 6+ and a new...","Href":"https://devblogs.microsoft.com/dotnet/winforms-designer-64-bit-path-forward/","RawContent":null},{"Title":"Developing Optimized GitHub Actions with .NET and Native AOT","PublishedOn":"2024-02-19T16:30:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Explore a fun example app targeting GitHub Actions written entirely in .NET, optimized with Native AOT, and published to the GitHub Container Registry.\nThe post Developing Optimized GitHub Actions...","Href":"https://devblogs.microsoft.com/dotnet/developing-optimized-github-actions-with-net-and-native-aot/","RawContent":null},{"Title":"Introducing ASP.NET Core metrics and Grafana dashboards in .NET 8","PublishedOn":"2024-02-14T21:35:00+00:00","CommentsCount":13,"FacebookCount":0,"Summary":".NET 8 introduces metrics to ASP.NET Core. Check out what is new and discover how easy it is to use metrics and ASP.NET Core to monitor the health and activity of apps.\nThe post Introducing ASP.NET...","Href":"https://devblogs.microsoft.com/dotnet/introducing-aspnetcore-metrics-and-grafana-dashboards-in-dotnet-8/","RawContent":null},{"Title":".NET Framework February 2024 Security and Quality Rollup Updates","PublishedOn":"2024-02-14T21:25:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"February 2024 Security and Quality Rollup Updates for .NET Framework\nThe post .NET Framework February 2024 Security and Quality Rollup Updates appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/dotnet-framework-february-2024-security-and-quality-rollup-updates/","RawContent":null},{"Title":"Our Vision for .NET 9","PublishedOn":"2024-02-13T18:06:00+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"Welcome to .NET 9! Learn about how we're improving .NET for all kinds of apps, with a special focus on cloud native, AI, and performance.\nThe post Our Vision for .NET 9 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/our-vision-for-dotnet-9/","RawContent":null},{"Title":".NET February 2024 Updates – .NET 8.0.2, 7.0.16, .NET 6.0.27","PublishedOn":"2024-02-13T18:05:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Check out latest February 2024 updates for .NET 8.0, .NET 7.0, and .NET 6.0.\nThe post .NET February 2024 Updates – .NET 8.0.2, 7.0.16, .NET 6.0.27 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/february-2024-updates/","RawContent":null},{"Title":"Resilience and chaos engineering","PublishedOn":"2024-02-09T18:05:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Chaos engineering with HTTP clients and Polly library\nThe post Resilience and chaos engineering appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/resilience-and-chaos-engineering/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"35677737968","Type":"IssuesEvent","CreatedAt":"2024-02-14T16:50:58","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/297","RelatedDescription":"Opened issue \".NET 9 Preview 1\" (#297) at dotnet/announcements","RelatedBody":"Welcome to .NET 9! We're happy to deliver the first preview of .NET 9 and share in-depth release notes that provide varied and impressive improvements for the first preview out of the gate. We also published [Our Vision for .NET 9](https://aka.ms/dotnet/9/vision), which describes some of the broad areas we intend to deliver on by the final November 2024 release.\r\n\r\nYou can find [detailed release notes about the new features in .NET 9 Preview 1](https://github.com/dotnet/core/tree/main/release-notes/9.0/preview/preview1) and up-to-date [What's new in .NET 9](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-9/overview) in [.NET docs](https://learn.microsoft.com/dotnet/core/introduction).\r\n\r\nThe latest .NET 9 release is always available at [dotnet.microsoft.com](https://dotnet.microsoft.com/download/dotnet/9.0) and [.NET 9 Releases](https://github.com/dotnet/core/blob/main/release-notes/9.0/README.md).\r\n\r\nYou may be surprised to be reading about our release on GitHub Discussions. Check out [Welcome to .NET Release News on GitHub Discussions!](https://github.com/dotnet/core/discussions/9131) to learn more about how we're approaching documenting and sharing preview releases.\r\n\r\n## Team Announcements\r\n\r\nCheck out the team announcements.\r\n\r\n* .NET 9: [Announcement](https://github.com/dotnet/core/discussions/9167)\r\n* .NET Data and EF Core: [Announcement](https://github.com/dotnet/efcore/issues/33030)\r\n* .NET MAUI: [Announcement](https://github.com/dotnet/maui/discussions/20558)\r\n* ASP.NET Core: [Announcement](https://github.com/dotnet/aspnetcore/discussions/54007)\r\n* Libraries [Announcement](https://github.com/dotnet/runtime/discussions/98372)\r\n* Runtime: [Announcement](https://github.com/dotnet/runtime/discussions/98372)\r\n* Containers: [Announcement](https://github.com/dotnet/dotnet-docker/discussions/5198)\r\n\r\nPlease tell us what you think about the new release. There is lots more to come!"},{"Id":"35645932722","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:09:42","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/296","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-21404 | .NET Denial of Service Vulnerability\" (#296) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-21404 | .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists in .NET with OpenSSL support when parsing X509 certificates. \r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThis vulnerability does not affect .NET-based web servers running on Windows.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.26 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.15 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0.1 or earlier.\r\n\r\n## <a name=\"affected-packages\"></a>Affected Packages\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\r\n\r\n### <a name=\"ASP.NET 6\"></a>ASP.NET 6.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 6.0.26 | 6.0.27\r\n\r\n\r\n\r\n### <a name=\"ASP.NET 7\"></a>ASP.NET 7.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 7.0.16 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 7.0.16 | 7.0.16\r\n\r\n### <a name=\"ASP.NET 7\"></a>ASP.NET 8.0\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 8.0.2 | 8.0.2\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.2  Runtime  or .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.16 or SDK 7.0.116 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.27 or SDK 6.0.419 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-21404]( https://www.cve.org/CVERecord?id=CVE-2024-21404)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"},{"Id":"35645889227","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:08:03","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/295","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability\" (#295) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET 6.0, ASP.NET 7.0 and, ASP.NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA vulnerability exists in ASP.NET applications using SignalR where a malicious client can result in a denial-of-service.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/**TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.26 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.15 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0.1 or earlier.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.2  Runtime or .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.16 or SDK 7.0.116 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.27 or SDK 6.0.419 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-21386]( https://www.cve.org/CVERecord?id=CVE-2024-21386)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_"},{"Id":"35645859711","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:06:54","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/294","RelatedDescription":"Opened issue \".NET February 2024 Updates\" (#294) at dotnet/announcements","RelatedBody":"Microsoft released the following [.NET Updates in January 2024](https://devblogs.microsoft.com/dotnet/january-2024-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET February 2024 Updates </h3>\r\n\r\nToday, we are releasing .NET 8.0.2, .NET 7.0.16, .NET 6.0.27 updates\r\n\r\n* [.NET 8.0.2 and .NET SDK 8.0.200](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.2/8.0.2.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\r\n* [.NET 7.0.16 and .NET SDK 7.0.406](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.16/7.0.16.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.27 and .NET SDK 6.0.418](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.27/6.0.27.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"36243291166","Type":"PullRequestEvent","CreatedAt":"2024-03-05T01:44:14","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/72384","RelatedDescription":"Merged pull request \"Remove the 'Compilation Available' tagger event source\" (#72384) at dotnet/roslyn","RelatedBody":"This system doesn't work in the current 'frozen snapshot' model that the workspace has moved to.  THe workspace's current model is that when you ask for a frozen partial (FP) snapshot off of hte 'current' snapshot, that that FP snapshot is computed and cached so that you get the same one in the future for all further callers (until the workspace's CurrentSolution is actually updated).\r\n\r\nWe also updated FP snapshots so that they will always benefit from any parsed files in the projects (previously, the projects had to parse *all* files until you would see any of them). These changes made things much simpler, and meant we both weren't recomputing work *and* we were benefiting from work that had been done (including for future FP snapshots).\r\n\r\nHowever, this changes things in that some features basically hardcoded in an idea that they would just 'try again' at a later point, with the belief that they would then go 'better' results since things would have changed underneath them *with the same original snapshot*.  But that does not hold, meaning there was just extra complexity (esp. on a cpu level) for no actual benefit.\r\n\r\nPractically, this is not likely to matter much in practice.  That's because:\r\n\r\n1. we already cache full classification from the prior session which we persist to disk.\r\n2. we parse documents in parallel, and preserve information about *any* documents we parsed when getting the frozen snapshots.\r\n\r\nSo the time period to observe incorrect results is now narrower.  Given that this wasn't working anyways, and that the case where this matters is far narrowed, the code has now been removed for simplicity.\r\n"},{"Id":"36241531233","Type":"PullRequestEvent","CreatedAt":"2024-03-05T00:04:25","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/72387","RelatedDescription":"Opened pull request \"Mark two additional features as completed\" (#72387) at dotnet/roslyn","RelatedBody":""},{"Id":"36240730125","Type":"PullRequestEvent","CreatedAt":"2024-03-04T23:19:25","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/72386","RelatedDescription":"Opened pull request \"Bind `allows` constraint clause\" (#72386) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"36244861258","Type":"PullRequestEvent","CreatedAt":"2024-03-05T03:13:44","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/39167","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/templating\" (#39167) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdbeb850-6d82-4277-c391-08d8e9750d9d)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: bdbeb850-6d82-4277-c391-08d8e9750d9d\r\n- **Build**: 20240303.2\r\n- **Date Produced**: March 4, 2024 6:38:03 AM UTC\r\n- **Commit**: 63d5946581efcbca6a781d1a5d717f9c60c04add\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.templating**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n  - **Microsoft.TemplateEngine.Mocks**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/40f5bc0b55...63d5946581\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:bdbeb850-6d82-4277-c391-08d8e9750d9d)\r\n\r\n"},{"Id":"36244820695","Type":"PullRequestEvent","CreatedAt":"2024-03-05T03:11:22","Actor":"v-wuzhai","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/39191","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/roslyn-analyzers\" (#39191) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7373e65e-2472-4105-649a-08d8e9757c68)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: 7373e65e-2472-4105-649a-08d8e9757c68\r\n- **Build**: 20240304.1\r\n- **Date Produced**: March 5, 2024 1:21:22 AM UTC\r\n- **Commit**: 3e60082c94c17f12b5fa28a972be99bac0cae8e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.roslyn-analyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: [from 9.0.0-preview.24151.1 to 9.0.0-preview.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.PublicApiAnalyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn-analyzers/compare/59b2d9dc38...3e60082c94\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7373e65e-2472-4105-649a-08d8e9757c68)\r\n\r\n"},{"Id":"36244480894","Type":"PullRequestEvent","CreatedAt":"2024-03-05T02:52:08","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/39190","RelatedDescription":"Merged pull request \"[release/9.0.1xx-preview2] Disable package aliasing tests\" (#39190) at dotnet/sdk","RelatedBody":"Backport of #39144 to release/9.0.1xx-preview2\n\n/cc @dsplaisted"},{"Id":"36244374402","Type":"PullRequestEvent","CreatedAt":"2024-03-05T02:45:15","Actor":"v-wuzhai","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/39186","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/runtime\" (#39186) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Workload.Emscripten.Current.Manifest-9.0.100.Transport**: from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.SourceBuild.Intermediate.emsdk**: from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: aa69f164-2492-460a-3914-08d8e9750bf8\r\n- **Build**: 20240304.7\r\n- **Date Produced**: March 5, 2024 12:21:12 AM UTC\r\n- **Commit**: 119ec5a4d17dcb738aef2ebe5d04e5acf1a59fdb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.DependencyModel**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.HostModel**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.CodeDom**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **VS.Redist.Common.NetCore.TargetingPack.x64.9.0**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.SourceBuild.Intermediate.runtime.linux-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.Workload.Emscripten.Current.Manifest-9.0.100.Transport**: [from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1][4]\r\n  - **Microsoft.SourceBuild.Intermediate.emsdk**: [from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1][4]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/0d74d1d515...119ec5a4d1\r\n[4]: https://github.com/dotnet/emsdk/compare/0f3e462442...e926eb7d96\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n\r\n\r\n\r\n\r\n"},{"Id":"36243519434","Type":"IssuesEvent","CreatedAt":"2024-03-05T01:55:25","Actor":"richlander","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/39192","RelatedDescription":"Opened issue \"Container inferencing for AOT can move to stable repo\" (#39192) at dotnet/sdk","RelatedBody":"For `PublishAot` (for a .NET 8 app), I see:\r\n\r\n```bash\r\n$ dotnet publish /t:PublishContainer\r\nMSBuild version 17.9.4+90725d08d for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  hello-dotnet -> /home/rich/hello-dotnet/bin/Release/net8.0/linux-x64/hello-dotnet.dll\r\n  Generating native code\r\n  hello-dotnet -> /home/rich/hello-dotnet/bin/Release/net8.0/linux-x64/publish/\r\n  Building image 'hello-chiseled-aot' with tags 'latest' on top of base image 'mcr.microsoft.com/dotnet/nightly/runtime-deps:8.0-jammy-chiseled-extra'.\r\n  Pushed image 'hello-chiseled-aot:latest' to local registry via 'docker'.\r\n```\r\n\r\nThe following non-nightly images can be used: \r\n\r\n- `mcr.microsoft.com/dotnet/runtime-deps:8.0-jammy-chiseled`\r\n- `mcr.microsoft.com/dotnet/runtime-deps:8.0-jammy-chiseled-extra`\r\n\r\nThis change can go into servicing. If it breaks anyone, we have other problems."},{"Id":"36243172513","Type":"PullRequestEvent","CreatedAt":"2024-03-05T01:37:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/39191","RelatedDescription":"Opened pull request \"[main] Update dependencies from dotnet/roslyn-analyzers\" (#39191) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7373e65e-2472-4105-649a-08d8e9757c68)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: 7373e65e-2472-4105-649a-08d8e9757c68\r\n- **Build**: 20240304.1\r\n- **Date Produced**: March 5, 2024 1:21:22 AM UTC\r\n- **Commit**: 3e60082c94c17f12b5fa28a972be99bac0cae8e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.roslyn-analyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: [from 9.0.0-preview.24151.1 to 9.0.0-preview.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.PublicApiAnalyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn-analyzers/compare/59b2d9dc38...3e60082c94\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7373e65e-2472-4105-649a-08d8e9757c68)\r\n\r\n"},{"Id":"36243157502","Type":"PullRequestEvent","CreatedAt":"2024-03-05T01:36:29","Actor":"github-actions[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/39190","RelatedDescription":"Opened pull request \"[release/9.0.1xx-preview2] Disable package aliasing tests\" (#39190) at dotnet/sdk","RelatedBody":"Backport of #39144 to release/9.0.1xx-preview2\n\n/cc @dsplaisted"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"nxtn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"nxtn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"nxtn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"nxtn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"nxtn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"nxtn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"nxtn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"1527986834","IsPullRequest":true,"CreatedAt":"2023-01-21T00:23:55","Actor":"vseanreesermsft","Number":"28284","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28284","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28284)"},{"Id":"1527873107","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:09","Actor":"vseanreesermsft","Number":"28283","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28283","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28283)"},{"Id":"1514220089","IsPullRequest":true,"CreatedAt":"2022-12-30T22:28:28","Actor":"hoyosjs","Number":"28282","RawContent":null,"Title":" Update 3.1-crossdac to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28282","RelatedDescription":"Closed or merged PR \" Update 3.1-crossdac to 3.1.32\" (#28282)"},{"Id":"1468534279","IsPullRequest":true,"CreatedAt":"2022-11-29T18:58:08","Actor":"vseanreesermsft","Number":"28281","RawContent":null,"Title":"Update branding to 3.1.33","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28281","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.33\" (#28281)"},{"Id":"1440723893","IsPullRequest":true,"CreatedAt":"2022-11-09T18:50:23","Actor":"vseanreesermsft","Number":"28279","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28279","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28279)"},{"Id":"1440752065","IsPullRequest":true,"CreatedAt":"2022-11-08T19:53:36","Actor":"hoyosjs","Number":"28280","RawContent":null,"Title":"v3.1.31 crossdac merge","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28280","RelatedDescription":"Closed or merged PR \"v3.1.31 crossdac merge\" (#28280)"},{"Id":"1432112337","IsPullRequest":true,"CreatedAt":"2022-11-02T20:45:51","Actor":"vseanreesermsft","Number":"28278","RawContent":null,"Title":"Update branding to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28278","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.32\" (#28278)"},{"Id":"1410006325","IsPullRequest":true,"CreatedAt":"2022-10-15T01:57:19","Actor":"hoyosjs","Number":"28277","RawContent":null,"Title":"Remove all other signing off crossdac leg","State":"closed","Body":"The crossdac legs sign diagnostic binaries separately. Remove all other signing steps as unnecessary.﻿\n","Url":"https://github.com/dotnet/coreclr/pull/28277","RelatedDescription":"Closed or merged PR \"Remove all other signing off crossdac leg\" (#28277)"},{"Id":"1408565963","IsPullRequest":true,"CreatedAt":"2022-10-14T00:16:54","Actor":"hoyosjs","Number":"28276","RawContent":null,"Title":"Merge 3.1.30 into crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28276","RelatedDescription":"Closed or merged PR \"Merge 3.1.30 into crossdac\" (#28276)"},{"Id":"1404970163","IsPullRequest":true,"CreatedAt":"2022-10-11T23:19:19","Actor":"vseanreesermsft","Number":"28275","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28275","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28275)"},{"Id":"1386781587","IsPullRequest":true,"CreatedAt":"2022-10-05T02:14:01","Actor":"hoyosjs","Number":"28273","RawContent":null,"Title":"[release/3.1] Use new windows pools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28273","RelatedDescription":"Closed or merged PR \"[release/3.1] Use new windows pools\" (#28273)"},{"Id":"1396561217","IsPullRequest":true,"CreatedAt":"2022-10-05T01:31:27","Actor":"vseanreesermsft","Number":"28274","RawContent":null,"Title":"Update branding to 3.1.31","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28274","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.31\" (#28274)"},{"Id":"1373834388","IsPullRequest":true,"CreatedAt":"2022-09-15T19:23:54","Actor":"hoyosjs","Number":"28272","RawContent":null,"Title":"[release/3.1-crossdac] Merge 3.1.29 changes into crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28272","RelatedDescription":"Closed or merged PR \"[release/3.1-crossdac] Merge 3.1.29 changes into crossdac\" (#28272)"},{"Id":"1346022555","IsPullRequest":true,"CreatedAt":"2022-09-15T05:42:22","Actor":"hoyosjs","Number":"28267","RawContent":null,"Title":"[release/3.1] Add signing infrastructure for diagnostic binaries","State":"closed","Body":"Use a signing infrastructure orthogonal to microbuild to use other certs for diagnostic binaries.","Url":"https://github.com/dotnet/coreclr/pull/28267","RelatedDescription":"Closed or merged PR \"[release/3.1] Add signing infrastructure for diagnostic binaries\" (#28267)"},{"Id":"1371751677","IsPullRequest":true,"CreatedAt":"2022-09-14T00:33:23","Actor":"vseanreesermsft","Number":"28270","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28270","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28270)"},{"Id":"1371995170","IsPullRequest":true,"CreatedAt":"2022-09-13T20:58:26","Actor":"alexperovich","Number":"28271","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28271","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#28271)"},{"Id":"1363612389","IsPullRequest":true,"CreatedAt":"2022-09-06T18:50:56","Actor":"vseanreesermsft","Number":"28269","RawContent":null,"Title":"Update branding to 3.1.30","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28269","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.30\" (#28269)"},{"Id":"1358085481","IsPullRequest":true,"CreatedAt":"2022-09-01T18:29:24","Actor":"MattGal","Number":"28268","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required to continue building PRs in the dotnet public repo.  The agents and images used in the new project / organization are identical and build regressions are not expected.\r\n\r\nFor questions / concerns, please stop by the .NET Core Engineering Services [First Responders Teams Channel](https://teams.microsoft.com/l/channel/19%3aafba3d1545dd45d7b79f34c1821f6055%40thread.skype/First%2520Responders?groupId=4d73664c-9f2f-450d-82a5-c2f02756606d&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47).\r\n","Url":"https://github.com/dotnet/coreclr/pull/28268","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#28268)"},{"Id":"1336375306","IsPullRequest":true,"CreatedAt":"2022-08-15T19:50:41","Actor":"cshung","Number":"28265","RawContent":null,"Title":"[release/3.1] Reset current_no_gc_region_info after leaving no gc region implicitly","State":"closed","Body":"Backport https://github.com/dotnet/runtime/pull/73602.\r\n\r\n## Customer Impact\r\nCustomers reported occasional `System.InvalidOperationException` with message `The NoGCRegion mode was already in progress` when calling `GC.TryStartNoGCRegion`. This is preventing them from using this optimization and impacting their cold start latencies.\r\n\r\n## Testing\r\nCustomers have tried the fix on .NET 6 overnight and reported the exception never appears again. Meanwhile, there is an unpatched machine and observed 72 exceptions of the same type in the same time interval, proving this does fix the bug.\r\n\r\n## Risk\r\nLow. This only impact customer using `TryStartNoGCRegion`, and this is the right thing to do.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28265","RelatedDescription":"Closed or merged PR \"[release/3.1] Reset current_no_gc_region_info after leaving no gc region implicitly\" (#28265)"},{"Id":"1337020793","IsPullRequest":true,"CreatedAt":"2022-08-12T18:11:08","Actor":"hoyosjs","Number":"28266","RawContent":null,"Title":"Make crossdac build more resilient","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28266","RelatedDescription":"Closed or merged PR \"Make crossdac build more resilient\" (#28266)"},{"Id":"1335383831","IsPullRequest":true,"CreatedAt":"2022-08-11T17:22:32","Actor":"hoyosjs","Number":"28264","RawContent":null,"Title":"Remove unnecessary steps failing publishing","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28264","RelatedDescription":"Closed or merged PR \"Remove unnecessary steps failing publishing\" (#28264)"},{"Id":"1333874561","IsPullRequest":true,"CreatedAt":"2022-08-09T23:23:02","Actor":"hoyosjs","Number":"28263","RawContent":null,"Title":"Release/3.1 crossdac v3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28263","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac v3.1.28\" (#28263)"},{"Id":"1333621360","IsPullRequest":true,"CreatedAt":"2022-08-09T22:21:44","Actor":"vseanreesermsft","Number":"28262","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28262","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28262)"},{"Id":"1326087034","IsPullRequest":true,"CreatedAt":"2022-08-05T08:38:48","Actor":"vseanreesermsft","Number":"28260","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28260","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#28260)"},{"Id":"1326278896","IsPullRequest":true,"CreatedAt":"2022-08-02T19:08:59","Actor":"vseanreesermsft","Number":"28261","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28261","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#28261)"},{"Id":"1305271889","IsPullRequest":true,"CreatedAt":"2022-07-14T20:47:22","Actor":"hoyosjs","Number":"28259","RawContent":null,"Title":"Merge release/3.1 into crossdac for v3.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28259","RelatedDescription":"Closed or merged PR \"Merge release/3.1 into crossdac for v3.1.27\" (#28259)"},{"Id":"1287880240","IsPullRequest":true,"CreatedAt":"2022-07-14T06:56:48","Actor":"msftbot[bot]","Number":"28256","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/coreclr) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/coreclr) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/coreclr/pull/28256","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#28256)"},{"Id":"1302443364","IsPullRequest":true,"CreatedAt":"2022-07-12T21:05:21","Actor":"wtgodbe","Number":"28258","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28258","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28258)"},{"Id":"1294684428","IsPullRequest":true,"CreatedAt":"2022-07-06T23:51:58","Actor":"mmitche","Number":"28257","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28257","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#28257)"},{"Id":"1274189528","IsPullRequest":true,"CreatedAt":"2022-06-17T17:39:35","Actor":"hoyosjs","Number":"28255","RawContent":null,"Title":"Crossdac v3.1.26","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28255","RelatedDescription":"Closed or merged PR \"Crossdac v3.1.26\" (#28255)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"1586431329","IsPullRequest":true,"CreatedAt":"2023-03-06T20:45:43","Actor":"marcpopMSFT","Number":"13858","RawContent":null,"Title":"Link to tags and announce read only","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13858","RelatedDescription":"Closed or merged PR \"Link to tags and announce read only\" (#13858)"},{"Id":"1598785795","IsPullRequest":true,"CreatedAt":"2023-02-24T14:58:37","Actor":"mrizwan-az","Number":"13860","RawContent":null,"Title":"Merge-Base 'fabricbot. json'","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13860","RelatedDescription":"Closed or merged PR \"Merge-Base 'fabricbot. json'\" (#13860)"},{"Id":"1597762086","IsPullRequest":true,"CreatedAt":"2023-02-24T14:58:32","Actor":"mrizwan-az","Number":"13859","RawContent":null,"Title":"Add `.github/fabricbot.json`","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13859","RelatedDescription":"Closed or merged PR \"Add `.github/fabricbot.json`\" (#13859)"},{"Id":"1527986152","IsPullRequest":true,"CreatedAt":"2023-01-17T22:46:51","Actor":"vseanreesermsft","Number":"13857","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13857","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13857)"},{"Id":"1527872294","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:28","Actor":"vseanreesermsft","Number":"13856","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13856","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13856)"},{"Id":"1442568945","IsPullRequest":true,"CreatedAt":"2023-01-03T23:50:31","Actor":"dotnet-maestro[bot]","Number":"13853","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221108.6\r\n- **Date Produced**: November 8, 2022 11:26:32 PM UTC\r\n- **Commit**: 7120a7d1b74dcbce97e34dded2c9e9011639b175\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22513.5 to 1.0.0-beta.22558.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a244208...7120a7d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.425\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13853","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13853)"},{"Id":"1446124563","IsPullRequest":true,"CreatedAt":"2022-11-29T21:58:55","Actor":"marcpopMSFT","Number":"13854","RawContent":null,"Title":"Migrate the nuget state from earlier SDKs","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13854","RelatedDescription":"Closed or merged PR \"Migrate the nuget state from earlier SDKs\" (#13854)"},{"Id":"1468533103","IsPullRequest":true,"CreatedAt":"2022-11-29T18:54:03","Actor":"vseanreesermsft","Number":"13855","RawContent":null,"Title":"Update branding to 3.1.427","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13855","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.427\" (#13855)"},{"Id":"1440722468","IsPullRequest":true,"CreatedAt":"2022-11-14T16:34:07","Actor":"vseanreesermsft","Number":"13852","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13852","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13852)"},{"Id":"1440670789","IsPullRequest":true,"CreatedAt":"2022-11-08T22:20:49","Actor":"marcpopMSFT","Number":"13851","RawContent":null,"Title":"Clear the feeds before adding the local location.","State":"closed","Body":"They were flagging these additional nuget.config files as they didn't clear the feeds. I didn't find anything beyond these two so just updating these two for now.","Url":"https://github.com/dotnet/cli/pull/13851","RelatedDescription":"Closed or merged PR \"Clear the feeds before adding the local location.\" (#13851)"},{"Id":"1435077781","IsPullRequest":true,"CreatedAt":"2022-11-04T22:17:39","Actor":"marcpopMSFT","Number":"13850","RawContent":null,"Title":"Enable Codeql","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13850","RelatedDescription":"Closed or merged PR \"Enable Codeql\" (#13850)"},{"Id":"1432111919","IsPullRequest":true,"CreatedAt":"2022-11-01T22:33:22","Actor":"vseanreesermsft","Number":"13849","RawContent":null,"Title":"Update branding to 3.1.426","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13849","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.426\" (#13849)"},{"Id":"1415339232","IsPullRequest":true,"CreatedAt":"2022-10-31T10:14:58","Actor":"dotnet-maestro[bot]","Number":"13848","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221013.5\r\n- **Date Produced**: October 13, 2022 9:51:19 PM UTC\r\n- **Commit**: a244208da0e2d8be67497826fd0881e3218b5e03\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22513.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0de02c6...a244208\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13848","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13848)"},{"Id":"1406878446","IsPullRequest":true,"CreatedAt":"2022-10-14T09:33:47","Actor":"dotnet-maestro[bot]","Number":"13847","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221012.2\r\n- **Date Produced**: October 12, 2022 5:09:37 PM UTC\r\n- **Commit**: 869528d3af327eb6de19b414631280734dfe76e6\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22512.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0de02c6...869528d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13847","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13847)"},{"Id":"1399778162","IsPullRequest":true,"CreatedAt":"2022-10-12T22:29:13","Actor":"dotnet-maestro[bot]","Number":"13845","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221012.2\r\n- **Date Produced**: October 12, 2022 5:09:37 PM UTC\r\n- **Commit**: 869528d3af327eb6de19b414631280734dfe76e6\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22512.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/0de02c6...869528d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13845","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13845)"},{"Id":"1404969579","IsPullRequest":true,"CreatedAt":"2022-10-12T22:28:29","Actor":"vseanreesermsft","Number":"13846","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13846","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13846)"},{"Id":"1386756171","IsPullRequest":true,"CreatedAt":"2022-10-05T18:31:14","Actor":"marcpopMSFT","Number":"13843","RawContent":null,"Title":"Update windows images","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13843","RelatedDescription":"Closed or merged PR \"Update windows images\" (#13843)"},{"Id":"1396559862","IsPullRequest":true,"CreatedAt":"2022-10-05T18:29:27","Actor":"vseanreesermsft","Number":"13844","RawContent":null,"Title":"Update branding to 3.1.425","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13844","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.425\" (#13844)"},{"Id":"1371751135","IsPullRequest":true,"CreatedAt":"2022-09-15T22:48:13","Actor":"vseanreesermsft","Number":"13842","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13842","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13842)"},{"Id":"1363606777","IsPullRequest":true,"CreatedAt":"2022-09-06T20:16:47","Actor":"vseanreesermsft","Number":"13841","RawContent":null,"Title":"Update branding to 3.1.424","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13841","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.424\" (#13841)"},{"Id":"1363566236","IsPullRequest":true,"CreatedAt":"2022-09-06T17:39:32","Actor":"mmitche","Number":"13839","RawContent":null,"Title":"[release/3.1.4xx] Remediate CFS errors","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13839","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Remediate CFS errors\" (#13839)"},{"Id":"1363604115","IsPullRequest":true,"CreatedAt":"2022-09-06T17:29:56","Actor":"vseanreesermsft","Number":"13840","RawContent":null,"Title":"Update branding to 3.1.424","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13840","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.424\" (#13840)"},{"Id":"1358096179","IsPullRequest":true,"CreatedAt":"2022-09-02T22:07:25","Actor":"alexperovich","Number":"13838","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required for builds to continue working in the new org, dev.azure.com/dnceng-public.","Url":"https://github.com/dotnet/cli/pull/13838","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#13838)"},{"Id":"1333620200","IsPullRequest":true,"CreatedAt":"2022-08-09T21:16:32","Actor":"vseanreesermsft","Number":"13837","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13837","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13837)"},{"Id":"1326282837","IsPullRequest":true,"CreatedAt":"2022-08-02T23:16:34","Actor":"vseanreesermsft","Number":"13836","RawContent":null,"Title":"Update branding to 3.1.423","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13836","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.423\" (#13836)"},{"Id":"1287878126","IsPullRequest":true,"CreatedAt":"2022-07-29T15:06:29","Actor":"msftbot[bot]","Number":"13832","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/cli) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/cli) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/cli/pull/13832","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#13832)"},{"Id":"1302442444","IsPullRequest":true,"CreatedAt":"2022-07-12T20:19:23","Actor":"wtgodbe","Number":"13835","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13835","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13835)"},{"Id":"1286362242","IsPullRequest":true,"CreatedAt":"2022-07-08T19:03:34","Actor":"marcpopMSFT","Number":"13831","RawContent":null,"Title":"upgrade our newtonsoft version","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13831","RelatedDescription":"Closed or merged PR \"upgrade our newtonsoft version\" (#13831)"},{"Id":"1294682386","IsPullRequest":true,"CreatedAt":"2022-07-05T21:37:38","Actor":"mmitche","Number":"13834","RawContent":null,"Title":"Update branding to 3.1.422","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13834","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.422\" (#13834)"},{"Id":"1294678849","IsPullRequest":true,"CreatedAt":"2022-07-05T19:29:43","Actor":"mmitche","Number":"13833","RawContent":null,"Title":"Update branding to 3.1.422","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13833","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.422\" (#13833)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2022-09-13T01:39:00","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"closed","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Closed issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"751999481","IsPullRequest":false,"CreatedAt":"2022-09-12T20:32:30","Actor":"Meenakshise","Number":"1783","RawContent":null,"Title":"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, ","State":"closed","Body":"[tuple-not-loading-log.txt](https://github.com/dotnet/standard/files/5606091/tuple-not-loading-log.txt)\r\n\r\nI have  web project which is targeted to 4.6.2 .net framework. This project is calling a framework library which is targeted to the same .net framework 4.6.2. But in the framework library project it is referencing the system.valuetuple of 4.3.0 via the nuget package. \r\n  <package id=\"System.ValueTuple\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n\r\nThis valuetuple 4.3.0 targets .net standard 1.0 and .net framework 4.5. But our UI project is targeting 4.6.2. And we are getting this valuetuple not able to load. Could you please tell me why so ? \r\n\r\nSo if i am referencing a library that targets .net standard and .net framework of which the referencing project doesnt target to . How does the dll assemblies work here ? Really confused. Please help us\r\n\r\nBasically I am getting this error. The detailed log is attached in tuple-not-loading file. \r\n_message: \"ReflectionTypeLoadException: Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\n VS 2017 IDE is used to build the project ","Url":"https://github.com/dotnet/standard/issues/1783","RelatedDescription":"Closed issue \"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, \" (#1783)"},{"Id":"950167090","IsPullRequest":false,"CreatedAt":"2022-09-12T20:17:23","Actor":"ericstj","Number":"1791","RawContent":null,"Title":"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy","State":"closed","Body":"Create a new `netstandard2.1` library.\r\nAdd a reference to `<PackageReference Include=\"System.Reflection.DispatchProxy\" Version=\"4.7.1\" />`\r\nTry to use `DispatchProxy`\r\n\r\nExpected: \r\n`DispatchProxy` is resolved from `netstandard.dll`\r\n\r\nActual:\r\n```\r\nerror CS0433: The type 'DispatchProxy' exists in both 'System.Reflection.DispatchProxy, Version=4.0.6.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n```\r\n\r\n\r\nBuild contains conflict message:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' and 'Runtime:C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\System.Reflection.DispatchProxy.dll'. Choosing 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' because AssemblyVersion '4.0.6.0' is greater than '4.0.5.0'.\r\n```\r\n\r\nOther shims avoid this by setting the AssemblyVersion higher than that which was previously shipped.","Url":"https://github.com/dotnet/standard/issues/1791","RelatedDescription":"Closed issue \"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy\" (#1791)"},{"Id":"743421464","IsPullRequest":false,"CreatedAt":"2022-08-18T23:19:22","Actor":"ishepherd","Number":"1781","RawContent":null,"Title":"Update docs to reflect the status of .NET Standard in 2020","State":"closed","Body":"My understanding is, .NET Standard isn't the plan for standard .NET anymore. [The plan is now .NET 5.](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/)\r\n\r\nThat isn't at all clear from the docs here which seem to be frozen in time. Suggest you make some slight edits to [faq.md](https://github.com/dotnet/standard/blob/master/docs/faq.md) and [README.md](https://github.com/dotnet/standard/blob/master/README.md) to reflect the new status of .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1781","RelatedDescription":"Closed issue \"Update docs to reflect the status of .NET Standard in 2020\" (#1781)"},{"Id":"1157458269","IsPullRequest":true,"CreatedAt":"2022-08-18T23:18:36","Actor":"calledtoconstruct","Number":"1804","RawContent":null,"Title":"Fix url to LICENSE.TXT","State":"closed","Body":"It appears as though the license file was moved to a new location to accommodate additional versions.  Updated the URL to the location of the file as it is today.","Url":"https://github.com/dotnet/standard/pull/1804","RelatedDescription":"Closed or merged PR \"Fix url to LICENSE.TXT\" (#1804)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2022-08-18T22:53:57","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"closed","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Closed issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2022-08-18T22:52:32","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"closed","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Closed issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2022-08-18T22:51:38","Actor":"Korporal","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"closed","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Closed issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"727588709","IsPullRequest":false,"CreatedAt":"2022-08-18T22:49:34","Actor":"Joe-Sewell-PreEmptive","Number":"1777","RawContent":null,"Title":"Questions about tagging within this repository / future versions","State":"closed","Body":"I was looking through this repository to determine if .NET Standard 2.1 libraries support default interface methods - it looks like they do, given the presence of `System.Runtime.CompilerServices.RuntimeFeature.DefaultImplementationsOfInterfaces`, as well as my own experimenting in VS 2019. It seems I was mistaken when thinking that this was not the case, so I'm glad this repository is easily accessible to determine this.\r\n\r\nBut while doing this, I found it difficult to determine what commits were included in this particular .NET Standard version. I see that there's a tag `v2.1.0-prerelease.19126.1`, as well as branches `release/2.0.0`, `release/3.0`, and `release/3.0-preview9`. One of the machines I tested VS 2019 on had a `netstandard.dll` assembly, itself targeting .NETStandard v2.1.0, with AssemblyInformationalVersion `1.1.0+a5b5f2e1e369972c8ff1e2183979fab6099f52ef`; this commit is part of the `release/3.0` branch. However, another machine had a same-named assembly, targeting .NETCoreApp v3.0 and AssemblyInformationalVersion `3.0.0+4ac4c0367003fe3973a3648eb0715ddb0e3bbcea`, and I don't see that commit hash in this repository.\r\n\r\nAdditionally, [this blog post](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/) states that 2.1 will be the last version, but there is another prerelease tag `v2.2.0-prerelease.19564.1` and [on GitHub](https://github.com/dotnet/standard/releases/tag/v2.2.0-prerelease.19564.1) it's labelled .NET 5.0 Preview 2.\r\n\r\nSo I have a few questions for understanding this repository:\r\n\r\n1. Since .NET Standard 2.1 is released, are there plans to continue development in this repository for e.g. the shared BCL going forward with .NET 5+?\r\n2. Are there multiple kinds of `netstandard.dll` for a single .NET Standard version? E.g. are there separate versions for .NET Framework to reference and for .NET Core / .NET 5+ to reference?\r\n3. Do the tags / branch names in this repository correspond to a .NET Standard version or something else?\r\n4. It looks like there are patch releases; are there patch versions of a single .NET Standard version?\r\n5. Are there other repositories which are being used to create `netstandard.dll`?\r\n6. Is there a way to determine, from the repository, which commit is the one used for a given release?\r\n\r\nThank you for your consideration.","Url":"https://github.com/dotnet/standard/issues/1777","RelatedDescription":"Closed issue \"Questions about tagging within this repository / future versions\" (#1777)"},{"Id":"741314211","IsPullRequest":false,"CreatedAt":"2022-08-18T22:43:51","Actor":"amitagrawalhyd","Number":"1779","RawContent":null,"Title":"Support with Universal Windows Platform","State":"closed","Body":".Net Standard 2.1 is not supporting Universal Windows Platform and when we see the following doc \"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\" it is showing TBD, need your help on finalizing few things for our project, by when we can see support with UWP and which version of UWP will be supported. Early response will be helpful.","Url":"https://github.com/dotnet/standard/issues/1779","RelatedDescription":"Closed issue \"Support with Universal Windows Platform\" (#1779)"},{"Id":"841566004","IsPullRequest":false,"CreatedAt":"2022-08-18T22:36:31","Actor":"rexcfnghk","Number":"1787","RawContent":null,"Title":"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1","State":"closed","Body":"# Summary\r\n\r\n.NET Standard version is not resolved correctly when a transitive dependency targets multiple .NET Standard versions.\r\n\r\n# Environment\r\n\r\n- Windows 10 (19042.746)\r\n- .NET 5 SDK 5.0.201\r\n\r\n# Minimal reproducible example\r\n[bug.zip](https://github.com/dotnet/standard/files/6209239/bug.zip)\r\n\r\nThis is a three-project solution:\r\n- `TestProject1` targeting `netcoreapp3.1`\r\n- `ClassProject1` targeting `netstandard2.0`\r\n- `ClassProject2` targeting *both* `netstandard2.0` and `netstandard2.1`\r\n\r\nThe project dependency chain is: `TestProject1 -> ClassProject1 -> ClassProject2`\r\n\r\nA method (`ClassProject2Test1`) on `ClassProject2` is hidden behind a `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n# The issue\r\n\r\nThe unit test failed with a `MissingMethodException`\r\n\r\n```\r\n[xUnit.net 00:00:00.38]     TestProject1.UnitTest1.Test1 [FAIL]\r\n  Failed TestProject1.UnitTest1.Test1 [2 ms]\r\n  Error Message:\r\n   System.MissingMethodException : Method not found: 'Void ClassLibrary2.Class2.Class2Test1()'.\r\n  Stack Trace:\r\n     at ClassLibrary1.Class1.Class1Test1()\r\n   at TestProject1.UnitTest1.Test1() in C:\\Users\\rex\\source\\netstandard-bug-repro\\TestProject1\\UnitTest1.cs:line 12\r\n```\r\n\r\n# Expected result\r\n\r\nThe compiler should have resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.0)*` \r\n\r\n# Actual result\r\n\r\nThe compiler resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.1)*` \r\n\r\nWhich causes the exception because the offending method, `ClassProject2Test1`, was hidden by the `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1787","RelatedDescription":"Closed issue \"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1\" (#1787)"},{"Id":"987085034","IsPullRequest":false,"CreatedAt":"2022-08-18T22:29:04","Actor":"Coder3333","Number":"1793","RawContent":null,"Title":"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken","State":"closed","Body":"I also reported this issue at https://github.com/dotnet/runtime/issues/58583, in case that is a more appropriate place.\r\n\r\n\r\nI am witnessing this behavior in packages\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\netstandard.dll when running from a .Net Core 3.1 application.  \r\n\r\nWhen I call DbCommand.ExecuteReaderAsync with a CancellationToken and cancel it before it finishes, an exception is thrown that contains a TaskCanceledException buried down in the InnerExceptions.  I expect that behavior, but the issue is that the TaskCanceledException.CancellationToken is not the CancellationToken that I provided to ExecuteReaderAsync.  I do not know where this other CancellationToken is coming from, but I thought we were only supposed to suppress TaskCanceledException in our applications if it is for the provided CancellationToken, so I end up with a lot more unhandled exceptions than I want.  \r\n\r\nIs it safe to suppress any TaskCanceledException, no matter what CancellationToken it contains?  Where does this mystery CancellationToken come from, and could ExecuteReaderAsync just return the CancellationToken given to it?\r\n\r\n```c#\r\n                using (var cts = new CancellationTokenSource())\r\n                {\r\n                    using (var cmd = db.GetSqlStringCommand(queryString))\r\n                    {\r\n                        cts.Cancel();\r\n                        try\r\n                        {\r\n                            using (var rdr = cmd.ExecuteReaderAsync(cts.Token).Result)\r\n                            {\r\n                            }\r\n                        }\r\n                        catch (Exception ex3)\r\n                        {\r\n//  if you inspect ex3, you will find a TaskCanceledException buried in InnerExceptions, but its CancellationToken is not cts.Token\r\n                            throw;\r\n                        }\r\n                    }\r\n                }\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1793","RelatedDescription":"Closed issue \"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken\" (#1793)"},{"Id":"748223490","IsPullRequest":false,"CreatedAt":"2022-08-18T22:27:17","Actor":"kyurkchyan","Number":"1782","RawContent":null,"Title":"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP","State":"closed","Body":"# Summary\r\nI was trying to access Embedded resources on UWP. Something like this\r\n\r\n```C#\r\nmanifestResourceInfo = typeof(App).Assembly.GetManifestResourceInfo(\"UwpEmbeddedResourceBug.appsettings.json\");\r\n```\r\nHowever, this doesn't work on UWP, even though it works like a charm on iOS for instance. \r\nFurther, when you try to use this in UWP debug mode, it will return non-null `manifestResourceInfo`, however internally the `FileName` property will be null. But if you try to use the same on Release build, instead you will get an exception\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Func`1.BeginInvoke(AsyncCallback, Object) + 0x1f\r\n   at SharedLibrary!<BaseAddress>+0x9f17d7\r\n   at UwpEmbeddedResourceBug.MainPage..ctor() + 0x3e\r\n```\r\n## Sample project\r\n[UwpEmbeddedResourceBug.zip](https://github.com/dotnet/standard/files/5579379/UwpEmbeddedResourceBug.zip)\r\n\r\n## Version info\r\n``` \r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.1\r\nVisualStudio.16.Release/16.8.1+30711.63\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA497\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.550.19892\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.550.19892\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.550.19892\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.550.19892\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJetBrains ReSharper 2020.2.4   Build 202.0.20200925.65451\r\nJetBrains ReSharper package for Microsoft Visual Studio. For more information about ReSharper, visit http://www.jetbrains.com/resharper. Copyright © 2020 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Foo   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.8.000.255 (d16-8@d002176)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.4.1.3 (e30c41de3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```","Url":"https://github.com/dotnet/standard/issues/1782","RelatedDescription":"Closed issue \"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP\" (#1782)"},{"Id":"773128444","IsPullRequest":false,"CreatedAt":"2022-07-31T21:04:00","Actor":"rathnagiri","Number":"1786","RawContent":null,"Title":"Security Vulnerability due to System.Text.RegularExpressions","State":"closed","Body":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n","Url":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Closed issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786)"},{"Id":"1099686661","IsPullRequest":true,"CreatedAt":"2022-01-12T00:54:39","Actor":"ericstj","Number":"1803","RawContent":null,"Title":"[release/3.0] Update feeds","State":"closed","Body":"Updating feeds in latest release branch to be consistent with https://github.com/dotnet/corefx/blob/release/3.1/NuGet.config.","Url":"https://github.com/dotnet/standard/pull/1803","RelatedDescription":"Closed or merged PR \"[release/3.0] Update feeds\" (#1803)"},{"Id":"1050222761","IsPullRequest":false,"CreatedAt":"2022-01-11T21:42:58","Actor":"Xyncgas","Number":"1796","RawContent":null,"Title":"[Feature Request] Allow Static Method In Interface","State":"closed","Body":"Because in serialization workflow you usually call obj.export() or something, but when you are importing the object with custom business logic you don't do obj.import() --but usually--> typeof(object).import() which is a static method that returns an object.\r\n\r\nFailure in defining static method in interface makes it hard to implement a contract for me.","Url":"https://github.com/dotnet/standard/issues/1796","RelatedDescription":"Closed issue \"[Feature Request] Allow Static Method In Interface\" (#1796)"},{"Id":"1059250174","IsPullRequest":false,"CreatedAt":"2022-01-11T21:41:44","Actor":"one-harsh","Number":"1799","RawContent":null,"Title":"[Feature Request] Support for MultiSet & MultiMap in System.Collections.Generic","State":"closed","Body":"While we have Dictionary and HashSet support, there are many times where we need a [MultiSet](https://en.wikipedia.org/wiki/Multiset) or a [MultiMap](https://en.wikipedia.org/wiki/Multimap). Could this be added to the core library or is there already a plan to add one? Various other languages, including C++, supports this container iterator.","Url":"https://github.com/dotnet/standard/issues/1799","RelatedDescription":"Closed issue \"[Feature Request] Support for MultiSet & MultiMap in System.Collections.Generic\" (#1799)"},{"Id":"1090825946","IsPullRequest":false,"CreatedAt":"2022-01-11T21:39:54","Actor":"Equijano24","Number":"1801","RawContent":null,"Title":"Support of 'IAsyncComparer' for Linq operations.","State":"closed","Body":"Some Linq operations such as OrderBy or ThenBy might require asynchronous comparers for custom objects. Consider the following case:\r\n```\r\npublic class ExoticObject {...}\r\n\r\npublic class ExoticComparer : IAsyncComparer<ExoticObject>\r\n{\r\n    public async ValueTask<int> Compare(ExoticObject e1, ExoticObject e2)\r\n    {\r\n        return await ..... // Some asynchronous code\r\n    }\r\n}\r\n```\r\nThe following expression would make use of an asynchronous comparer:\r\n```\r\nIOrderedAsyncEnumerable<ExoticObject> orderedOnes =\r\n    listOfExotics().OrderByAwait(SomeAsyncKeySelector, new ExoticComparer());\r\n```\r\nPlease provide an IAsyncComparer interface and support for Linq operations.","Url":"https://github.com/dotnet/standard/issues/1801","RelatedDescription":"Closed issue \"Support of 'IAsyncComparer' for Linq operations.\" (#1801)"},{"Id":"1062524841","IsPullRequest":true,"CreatedAt":"2021-11-26T19:34:10","Actor":"lpatalas","Number":"1800","RawContent":null,"Title":"Migrate to 1ES hosted pools","State":"closed","Body":"We are moving to 1ES hosted pools. This PR update pipeline yaml to use new pools.\r\n\r\nTracking issue: https://github.com/dotnet/core-eng/issues/14276\r\n","Url":"https://github.com/dotnet/standard/pull/1800","RelatedDescription":"Closed or merged PR \"Migrate to 1ES hosted pools\" (#1800)"},{"Id":"1056603180","IsPullRequest":true,"CreatedAt":"2021-11-26T19:33:44","Actor":"joshongithub","Number":"1798","RawContent":null,"Title":"Update netstandard2.1 platform support info","State":"closed","Body":"Since there was .NET 3.0 and 3.1, I changed it to .NET Core 3.x. I also added .NET 5 and .NET 6 since both are supported.","Url":"https://github.com/dotnet/standard/pull/1798","RelatedDescription":"Closed or merged PR \"Update netstandard2.1 platform support info\" (#1798)"},{"Id":"1050457478","IsPullRequest":false,"CreatedAt":"2021-11-11T16:40:32","Actor":"Xyncgas","Number":"1797","RawContent":null,"Title":"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?","State":"closed","Body":"In the example :\r\n```\r\nPublic class ClassA{\r\n    string a = \"A2\";\r\n}\r\npublic class ClassB : ClassA{//ClassB derive from Class A\r\n    string b = \"2B\";\r\n}\r\nPublic ClassA TestSample()\r\n{\r\n    classB I_Have_A_Pen = new ClassB();\r\n    Return I_Have_A_Pen;\r\n}\r\nvoid Main()\r\n{\r\n    var I_Have_A_Pineapple = TestSample(); //Ref:{7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}\r\n}\r\n```\r\nSo, at {7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}, I have two questions :\r\nI_Have_A_Pineapple is now ClassA but does the standard say it's actually still ClassB or I_Have_A_Pineapple.GetType()==typeof(ClassB) ?\r\n\r\nI_Have_A_Pineapple now doesn't have access to string b which value is \"2B\", because it's casted to ClassA and 2B only existed as Class B member, so a while later would gc be collecting this reference and 2B is gone forever while it might only exist at this moment?","Url":"https://github.com/dotnet/standard/issues/1797","RelatedDescription":"Closed issue \"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?\" (#1797)"},{"Id":"980465227","IsPullRequest":false,"CreatedAt":"2021-08-26T17:45:34","Actor":"petrosmm","Number":"1792","RawContent":null,"Title":"linq using GetValueOrDefault  in Where clause problem","State":"closed","Body":"Hello,\r\n\r\nI am currently using .NET core 2.2.x and EF Core. 2.2.6. I have a function that returns a List<Animal> from the database with no issue. It returns 11 results. However, when I try to use `.Where(p => p.DeletedAt.GetValueOrDefault(DateTime.Now) => DateTime.Now).ToList()`, it still should return 11 results, however it returns 0. I also eliminated the possibility that there is something wrong with my where clause (logic) because it works perfectly on 4.6.1 EF Core 2.2.6. Furthermore, I confirmed that it is only where I am comparing a nullable type using that function and I am guessing that I missed a thread someone opened on this issue. I am aware .NET core 2.2 is not LTS. I also thought this goes here because it's not AFAIK, an EF core issue but rather an Ienumerable/Linq issue.\r\n\r\nUpdate: As it turns out your notion of `DateTime.Now` getting evaluated twice is true. To rectify that, I will now be using `DateTime.Now.Date`. This is odd because this exact code works on 4.6.1. You're probably right. SMH. Thank you @GrabYourPitchforks! You may now close.","Url":"https://github.com/dotnet/standard/issues/1792","RelatedDescription":"Closed issue \"linq using GetValueOrDefault  in Where clause problem\" (#1792)"},{"Id":"894396747","IsPullRequest":false,"CreatedAt":"2021-07-28T22:25:27","Actor":"SiberaIndustries","Number":"1789","RawContent":null,"Title":"Strong name signature not valid","State":"closed","Body":"Since I've ported a ClickOnce application from .NET Framework 4.6.1 to .NET Standard 2.0, the message _\"Strong assembly name signature not valid for **Microsoft.SqlServer.Assessment.Types.dll**\"_ appears when trying to install or update the application. So the next step was to verify the assembly strong name by using the [Strong Name Tool](https://docs.microsoft.com/dotnet/framework/tools/sn-exe-strong-name-tool) to make sure, that everything is fine, but:\r\n\r\n```sh\r\n> sn.exe -v Microsoft.SqlServer.Assessment.Types.dll\r\n\r\nMicrosoft (R) .NET Framework Strong Name Utility Version 4.0.30319.0\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nMicrosoft.SqlServer.Assessment.Types.dll is a delay-signed or test-signed assembly\r\n```\r\n\r\nAdditional information:\r\n\r\n- The assembly versions `161.46041.41` and `161.46367.54` ended up in the same result\r\n- This issue looks very similar to [this](https://www.damirscorner.com/blog/posts/20140502-StrongNameValidationFailedSecurityException.html)\r\n- @markingmyname / @olprod: The root package, which is required for [Server Management Objects (SMOs)](https://docs.microsoft.com/sql/relational-databases/server-management-objects-smo/overview-smo?view=sql-server-ver15), is:\r\n  - [Microsoft.SqlServer.SqlManagementObjects](https://www.nuget.org/packages/Microsoft.SqlServer.SqlManagementObjects)\r\n    - Microsoft.SqlServer.Assessment\r\n      - Microsoft.SqlServer.Assessment.Authoring\r\n        - **Microsoft.SqlServer.Assessment.Types.dll**\r\n- This issue appears on windows server machines but the software runs on different machines and I would like to avoid temporary workarounds such as editing the registry and activate the strong name bypass feature because of the forced validation on windows server machines","Url":"https://github.com/dotnet/standard/issues/1789","RelatedDescription":"Closed issue \"Strong name signature not valid\" (#1789)"},{"Id":"852541719","IsPullRequest":false,"CreatedAt":"2021-04-07T15:50:35","Actor":"vsfeedback","Number":"1788","RawContent":null,"Title":"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Closed issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788)"},{"Id":"761600986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:17:30","Actor":"tmds","Number":"1785","RawContent":null,"Title":"mono and .NET5+","State":"closed","Body":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?","Url":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785)"},{"Id":"741918893","IsPullRequest":false,"CreatedAt":"2020-11-16T21:03:55","Actor":"viralmodi","Number":"1780","RawContent":null,"Title":"How to build .NET Standard based library for ARM architecture","State":"closed","Body":"We currently own a .NET Standard based library. We would like to make it work on ARM platform as well. Is there some documentation which can help understand how to go about achieving that?\r\nI searched up on MSFT docs and found a few pages but it is not clear to me all the steps needed to achieve the above based on those docs. Any help is appreciated. I would like to know ways to compile cross platform, using IDEs like Visual Studio/Rider, code/metadata modifications required to project (.csproj) files and anywhere else to achieve this?","Url":"https://github.com/dotnet/standard/issues/1780","RelatedDescription":"Closed issue \"How to build .NET Standard based library for ARM architecture\" (#1780)"},{"Id":"736344890","IsPullRequest":false,"CreatedAt":"2020-11-04T18:49:53","Actor":"vsfeedback","Number":"1778","RawContent":null,"Title":"System.Drawing.Printing.PrinterSettings slow","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemDrawingPrintingPrinterSettings-/890524)._\n\n---\nHello\n\nI'm debugging a problem with the printer settings. Some calls are significant slower if the default printer is a network printer, even if I explicit set a local printer name.\n\nAfter studying referencesource I think I found the culprit.\n\nI call:\n\nvar printerSettings = new System.Drawing.Printing.PrinterSettings();\n\nprinterSettings.PrinterName = &quot;LOCALPRINTER&quot;;\n\n// the next call is slow if the OS default printer is a network printer\nvar res = printerSettings.DefaultPageSettings.PrinterResolution\n\nInternally FastDeviceCapabilities is called.\n\nFastDeviceCapabilities calls GetOutputPort. But GetOutput port return the port of the default printer and not the port of the given printer!\n\nIn addition, DeviceCapabilities is then called with a wrong combination of printer name and port, don't know if this could lead to additional problems.\n\nResolution: GetOutputPort should return the port of the given printer and not accessing the default printer at all.\n\nBest Regards,\nRaphael\n\n---\n### Original Comments\n\n#### Raphael Affolter on 1/20/2020, 04:03 AM: \n\n<p>I forgot to mention: .Net Framework 4.6.1</p>\n\n#### Feedback Bot on 1/20/2020, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Raphael Affolter on 2/7/2020, 08:39 AM: \n\n<p>Because we print a lot, we really suffer from this performance penalty.</p><p>Also reading PaperSizes and PaperSources from the printer settings is slow caused by the same problem.</p><p>Could you please inform me about a possible fix?</p><p>Best Regards,</p><p>Raphael</p>\n\n#### Raphael Affolter on 2/7/2020, 10:33 AM: \n\n<p>In my opinion the fix is easy: replace GetOutputPort by OutputPort in the call to </p><p>FastDeviceCapabilities.</p><p>Done.</p>\n\n#### Feedback Bot on 2/27/2020, 05:40 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Dada Huo [MSFT] on 10/20/2020, 01:57 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Raphael Affolter on 10/20/2020, 02:28 AM: \n\n<p>Thanks for answering.</p><p>The issue is not about Visual Studio, the problem is in the .Net Framework (at least 4.6.1).</p><p>By studying the source code on referencesource.microsoft.com I spotted calls to the default printer, even if I print on another printer. If the default printer is a network printer, this slows down the printing process significantly.</p><p>Please have a look if you can fix this in the .Net Framework(s).</p><p>PrinterResolution, PaperSizes and PaperSources of System.Drawing.Printing.PrinterSettings are affected.</p><p>I also mentioned a fix: replace GetOutputPort by OutputPort in the call to FastDeviceCapabilities...done.</p><p>I you need a repro project, I can provide one.</p>\n\n\n---\n### Original Solutions\n\n#### Raphael Affolter solved on 3/19/2020, 07:18 AM, 0 votes: \n\n<p>I would be helpful if at least somebody reacts on this issue. I even told you how to fix the problem...</p>\n","Url":"https://github.com/dotnet/standard/issues/1778","RelatedDescription":"Closed issue \"System.Drawing.Printing.PrinterSettings slow\" (#1778)"},{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-16T08:15:08","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"closed","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Closed issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"billvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"1527984595","IsPullRequest":true,"CreatedAt":"2023-01-20T23:48:58","Actor":"vseanreesermsft","Number":"43169","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43169","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43169)"},{"Id":"1527872763","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:17","Actor":"vseanreesermsft","Number":"43168","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43168","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43168)"},{"Id":"1468527506","IsPullRequest":true,"CreatedAt":"2022-11-29T18:59:51","Actor":"vseanreesermsft","Number":"43167","RawContent":null,"Title":"Update branding to 3.1.33","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43167","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.33\" (#43167)"},{"Id":"1440723374","IsPullRequest":true,"CreatedAt":"2022-11-09T20:13:35","Actor":"vseanreesermsft","Number":"43166","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43166","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43166)"},{"Id":"1432112515","IsPullRequest":true,"CreatedAt":"2022-11-02T20:52:15","Actor":"vseanreesermsft","Number":"43165","RawContent":null,"Title":"Update branding to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43165","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.32\" (#43165)"},{"Id":"1415605434","IsPullRequest":true,"CreatedAt":"2022-10-24T17:21:55","Actor":"carlossanlop","Number":"43164","RawContent":null,"Title":"[release/3.1] Disable failing 3.1 tests","State":"closed","Body":"Disables tests mentioned in:\r\n\r\n- https://github.com/dotnet/runtime/issues/77233\r\n- https://github.com/dotnet/runtime/issues/77234","Url":"https://github.com/dotnet/corefx/pull/43164","RelatedDescription":"Closed or merged PR \"[release/3.1] Disable failing 3.1 tests\" (#43164)"},{"Id":"1404969957","IsPullRequest":true,"CreatedAt":"2022-10-12T18:50:13","Actor":"vseanreesermsft","Number":"43163","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43163","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43163)"},{"Id":"1397189190","IsPullRequest":true,"CreatedAt":"2022-10-07T20:14:20","Actor":"carlossanlop","Number":"43162","RawContent":null,"Title":"Disable failing unit tests","State":"closed","Body":"- https://github.com/dotnet/runtime/issues/76651 System.Globalization.Tests.IdnMappingIdnaConformanceTests.GetUnicode_Invalid\n- https://github.com/dotnet/runtime/issues/76653 System.Security.Cryptography.X509Certificates.Tests.CertificateCreation.CertificateRequestUsageTests.AlwaysVersion3\n- https://github.com/dotnet/runtime/issues/76654 System.Net.Http.Functional.Tests.PlatformHandler_HttpProtocolTests*","Url":"https://github.com/dotnet/corefx/pull/43162","RelatedDescription":"Closed or merged PR \"Disable failing unit tests\" (#43162)"},{"Id":"1396559607","IsPullRequest":true,"CreatedAt":"2022-10-05T02:03:54","Actor":"vseanreesermsft","Number":"43161","RawContent":null,"Title":"Update branding to 3.1.31","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43161","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.31\" (#43161)"},{"Id":"1371751481","IsPullRequest":true,"CreatedAt":"2022-09-14T18:45:29","Actor":"vseanreesermsft","Number":"43160","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43160","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43160)"},{"Id":"1363608964","IsPullRequest":true,"CreatedAt":"2022-09-07T00:58:35","Actor":"vseanreesermsft","Number":"43159","RawContent":null,"Title":"Update branding to 3.1.30","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43159","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.30\" (#43159)"},{"Id":"1358084578","IsPullRequest":true,"CreatedAt":"2022-09-01T00:36:50","Actor":"MattGal","Number":"43158","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required to continue building PRs in the dotnet public repo.  The agents and images used in the new project / organization are identical and build regressions are not expected.\r\n\r\nFor questions / concerns, please stop by the .NET Core Engineering Services [First Responders Teams Channel](https://teams.microsoft.com/l/channel/19%3aafba3d1545dd45d7b79f34c1821f6055%40thread.skype/First%2520Responders?groupId=4d73664c-9f2f-450d-82a5-c2f02756606d&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47).\r\n","Url":"https://github.com/dotnet/corefx/pull/43158","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#43158)"},{"Id":"1339589839","IsPullRequest":true,"CreatedAt":"2022-08-17T18:05:48","Actor":"ericstj","Number":"43157","RawContent":null,"Title":"Update Newtonsoft.Json to 13.0.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43157","RelatedDescription":"Closed or merged PR \"Update Newtonsoft.Json to 13.0.1\" (#43157)"},{"Id":"1333620861","IsPullRequest":true,"CreatedAt":"2022-08-09T22:21:25","Actor":"vseanreesermsft","Number":"43156","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43156","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43156)"},{"Id":"1326279220","IsPullRequest":true,"CreatedAt":"2022-08-05T08:39:20","Actor":"vseanreesermsft","Number":"43155","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43155","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#43155)"},{"Id":"1287954484","IsPullRequest":true,"CreatedAt":"2022-07-13T23:37:42","Actor":"msftbot[bot]","Number":"43150","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/corefx) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/corefx) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/corefx/pull/43150","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#43150)"},{"Id":"1302443193","IsPullRequest":true,"CreatedAt":"2022-07-12T19:16:43","Actor":"wtgodbe","Number":"43154","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43154","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43154)"},{"Id":"1294792186","IsPullRequest":true,"CreatedAt":"2022-07-12T18:19:48","Actor":"vcsjones","Number":"43153","RawContent":null,"Title":"Fix RSA OAEP decryption in OpenSSL with non-power-of-two keys lengths","State":"closed","Body":"## Customer Impact\r\n\r\nA customer reported in dotnet/runtime#71607 that decrypting RSA OAEP with SHA2 and a 3072-bit key on Linux resulted in a OAEP de-padding error, while other platforms were able to perform these operations successfully.\r\n\r\nInvestigation in to the issue led to uncover that RSA OAEP decryption that uses the managed implementation does not work with non-power-of-two keys because we do not slice a rented buffer accordingly. The current implementation only works because `CryptoPool.Rent` happens to give back power-of-two arrays which are exactly the same size as the key.\r\n\r\nThe fix is to slice the data to the correct size.\r\n\r\nThis does not affect dotnet/runtime because the managed implementation of RSA OAEP is no longer used for OpenSSL RSA decryption. This change was introduced in dotnet/runtime#50063.\r\n\r\n## Testing\r\n\r\nUnit tests were introduced to test RSA OAEP encryption with a 3072-bit RSA key. These tests will be forward-ported to dotnet/runtime.\r\n\r\n## Risk\r\n\r\nMinimal. The change is localized and understood that a `Slice` was missing.","Url":"https://github.com/dotnet/corefx/pull/43153","RelatedDescription":"Closed or merged PR \"Fix RSA OAEP decryption in OpenSSL with non-power-of-two keys lengths\" (#43153)"},{"Id":"1294682979","IsPullRequest":true,"CreatedAt":"2022-07-06T23:50:10","Actor":"mmitche","Number":"43152","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43152","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#43152)"},{"Id":"1294679544","IsPullRequest":true,"CreatedAt":"2022-07-05T19:29:57","Actor":"mmitche","Number":"43151","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43151","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#43151)"},{"Id":"1272811676","IsPullRequest":true,"CreatedAt":"2022-06-25T04:15:13","Actor":"NegativeMjark","Number":"43149","RawContent":null,"Title":"[release/3.1] Fix writing large arrays to anonymous pipes on linux","State":"closed","Body":"Increment the `bufPtr` when we can't write the array in a single syscall. Should fix https://github.com/dotnet/runtime/issues/70798","Url":"https://github.com/dotnet/corefx/pull/43149","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix writing large arrays to anonymous pipes on linux\" (#43149)"},{"Id":"1271134644","IsPullRequest":true,"CreatedAt":"2022-06-15T17:12:36","Actor":"vseanreesermsft","Number":"43147","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43147","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43147)"},{"Id":"1271361620","IsPullRequest":true,"CreatedAt":"2022-06-15T17:07:42","Actor":"wfurt","Number":"43148","RawContent":null,"Title":"[release/3.1] add missing RID for Fedora 37 and Ubuntu 22.04","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43148","RelatedDescription":"Closed or merged PR \"[release/3.1] add missing RID for Fedora 37 and Ubuntu 22.04\" (#43148)"},{"Id":"1263608318","IsPullRequest":true,"CreatedAt":"2022-06-08T20:09:26","Actor":"vseanreesermsft","Number":"43146","RawContent":null,"Title":"Update branding to 3.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43146","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.27\" (#43146)"},{"Id":"1238924423","IsPullRequest":true,"CreatedAt":"2022-05-17T18:01:41","Actor":"carlossanlop","Number":"43145","RawContent":null,"Title":"[release/3.1] Add RID for Alpine 3.16","State":"closed","Body":"@rbhanda @mmitche @ericstj @wfurt \r\n\r\nPlease let me know if everything looks in order.\r\n\r\nThis was based on the 3.15 PR: https://github.com/dotnet/corefx/pull/43129/files","Url":"https://github.com/dotnet/corefx/pull/43145","RelatedDescription":"Closed or merged PR \"[release/3.1] Add RID for Alpine 3.16\" (#43145)"},{"Id":"1231585802","IsPullRequest":true,"CreatedAt":"2022-05-10T22:26:01","Actor":"vseanreesermsft","Number":"43144","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43144","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43144)"},{"Id":"1194176879","IsPullRequest":true,"CreatedAt":"2022-05-04T16:10:21","Actor":"teo-tsirpanis","Number":"43141","RawContent":null,"Title":"[release/2.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager","State":"closed","Body":"Fixes issue dotnet/runtime#57472\r\n\r\nMain pr dotnet/runtime#57479\r\n\r\nAlso backported to 5.0 in dotnet/runtime#57562 and 3.1 in #43102. This PR will pave the way for backporting it to the `System.Memory` OOB package for .NET Framework.\r\n\r\n# Customer Impact\r\n\r\nA customer has encountered dotnet/runtime#57472 while on .NET Framework and reported it in dotnet/runtime#67295, necessiating backporting it once again. As an example provided in that issue, this memory manager:\r\n\r\n``` csharp\r\nprivate sealed class BasicMemoryManager : MemoryManager<byte>\r\n{\r\n    private readonly byte[] _buffer;\r\n    public BasicMemoryManager(int size = 1024) => _buffer = new byte[size];\r\n\r\n    protected override bool TryGetArray(out ArraySegment<byte> segment)\r\n    {\r\n        segment = new ArraySegment<byte>(_buffer);\r\n        return true;\r\n    }\r\n    public override Span<byte> GetSpan() => _buffer;\r\n\r\n    public override MemoryHandle Pin(int elementIndex = 0) => throw new NotSupportedException();\r\n    public override void Unpin() => throw new NotSupportedException();\r\n    protected override void Dispose(bool disposing) { }\r\n}\r\n```\r\n\r\nwill fail two of the following tests:\r\n\r\n``` csharp\r\n[Theory]\r\n[InlineData(0, 32)]\r\n[InlineData(0, 29)]\r\n[InlineData(32, 32)] // fail: length 0\r\n[InlineData(32, 29)] // fail: length -3\r\npublic void OffsetTest(int offset, int length)\r\n{\r\n    var mgr = new BasicMemoryManager(1024);\r\n    var slice = mgr.Memory.Slice(offset, length);\r\n    Assert.Equal(length, slice.Length);\r\n\r\n    var ros = new ReadOnlySequence<byte>(slice);\r\n    Assert.True(ros.IsSingleSegment);\r\n    Assert.Equal(length, ros.Length);\r\n}\r\n```\r\n\r\n# Testing\r\n\r\nFailing test has been added in this PR.\r\n\r\n# Risk\r\n\r\nLow, as the change is very simple and obvious when you look at `ReadOnlySequence<T>` ctor that accepts `ReadOnlyMemory<T>` (notice line 133 versus lines 140 and 148):\r\n\r\nhttps://github.com/dotnet/corefx/blob/0d40b482e6b6c232131dc808182d6b32d9d37394/src/System.Memory/src/System/Buffers/ReadOnlySequence.cs#L130-L149\r\n\r\nMoreover, the changed code gets triggered only when creating a `ReadOnlySequence` from a `ReadOnlyMemory` backed by a `MemoryManager`. All other use cases (including creating from an array or from a `ReadOnlyMemory` backed by an array or a string) are unaffected. And the changes are identical to those in the other backports.\r\n\r\n# Regression\r\n\r\nThis is not a regression.","Url":"https://github.com/dotnet/corefx/pull/43141","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager\" (#43141)"},{"Id":"1224389900","IsPullRequest":true,"CreatedAt":"2022-05-03T19:24:35","Actor":"vseanreesermsft","Number":"43143","RawContent":null,"Title":"Update branding to 3.1.26","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43143","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.26\" (#43143)"},{"Id":"1202264239","IsPullRequest":true,"CreatedAt":"2022-04-13T04:53:34","Actor":"vseanreesermsft","Number":"43142","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43142","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43142)"},{"Id":"1193653850","IsPullRequest":true,"CreatedAt":"2022-04-05T21:51:59","Actor":"vseanreesermsft","Number":"43140","RawContent":null,"Title":"Update branding to 3.1.25","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43140","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.25\" (#43140)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"2167460941","IsPullRequest":true,"CreatedAt":"2024-03-05T01:44:13","Actor":"CyrusNajmabadi","Number":"72384","RawContent":null,"Title":"Remove the 'Compilation Available' tagger event source","State":"closed","Body":"This system doesn't work in the current 'frozen snapshot' model that the workspace has moved to.  THe workspace's current model is that when you ask for a frozen partial (FP) snapshot off of hte 'current' snapshot, that that FP snapshot is computed and cached so that you get the same one in the future for all further callers (until the workspace's CurrentSolution is actually updated).\r\n\r\nWe also updated FP snapshots so that they will always benefit from any parsed files in the projects (previously, the projects had to parse *all* files until you would see any of them). These changes made things much simpler, and meant we both weren't recomputing work *and* we were benefiting from work that had been done (including for future FP snapshots).\r\n\r\nHowever, this changes things in that some features basically hardcoded in an idea that they would just 'try again' at a later point, with the belief that they would then go 'better' results since things would have changed underneath them *with the same original snapshot*.  But that does not hold, meaning there was just extra complexity (esp. on a cpu level) for no actual benefit.\r\n\r\nPractically, this is not likely to matter much in practice.  That's because:\r\n\r\n1. we already cache full classification from the prior session which we persist to disk.\r\n2. we parse documents in parallel, and preserve information about *any* documents we parsed when getting the frozen snapshots.\r\n\r\nSo the time period to observe incorrect results is now narrower.  Given that this wasn't working anyways, and that the case where this matters is far narrowed, the code has now been removed for simplicity.\r\n","Url":"https://github.com/dotnet/roslyn/pull/72384","RelatedDescription":"Closed or merged PR \"Remove the 'Compilation Available' tagger event source\" (#72384)"},{"Id":"2168019573","IsPullRequest":true,"CreatedAt":"2024-03-05T00:04:24","Actor":"jcouv","Number":"72387","RawContent":null,"Title":"Mark two additional features as completed","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/72387","RelatedDescription":"Open PR \"Mark two additional features as completed\" (#72387)"},{"Id":"2167966566","IsPullRequest":true,"CreatedAt":"2024-03-04T23:19:24","Actor":"AlekseyTs","Number":"72386","RawContent":null,"Title":"Bind `allows` constraint clause","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/72386","RelatedDescription":"Open PR \"Bind `allows` constraint clause\" (#72386)"},{"Id":"2167461012","IsPullRequest":true,"CreatedAt":"2024-03-04T18:21:46","Actor":"jcouv","Number":"72385","RawContent":null,"Title":"Rename a few incorrect IDS_ entries","State":"open","Body":"FYI @CyrusNajmabadi @jjonescz ","Url":"https://github.com/dotnet/roslyn/pull/72385","RelatedDescription":"Open PR \"Rename a few incorrect IDS_ entries\" (#72385)"},{"Id":"2167343661","IsPullRequest":true,"CreatedAt":"2024-03-04T17:14:50","Actor":"jaredpar","Number":"72383","RawContent":null,"Title":"Better BlobBuilder pooling","State":"open","Body":"Looking at profiles building Compilers.slnf locally found a number of places that we weren't using `PooledBlobBuilder` that were impacting allocations. This change removes 250MB of `byte[]` allocations and saves 50MB on LOH. \r\n\r\n<img width=\"665\" alt=\"image\" src=\"https://github.com/dotnet/roslyn/assets/146967/41a12f9b-5b2b-4a7d-b15f-4bd0f075026d\">\r\n\r\nThis reduces time spent in GC during build by ~1 second.\r\n\r\nNote: profiling the compiler server is imprecise as due to the parallel nature of the server and msbuild profiles can be quite noisy. For these measurements I did several measurements and picked the most average for the comparisons. ","Url":"https://github.com/dotnet/roslyn/pull/72383","RelatedDescription":"Open PR \"Better BlobBuilder pooling\" (#72383)"},{"Id":"2167181009","IsPullRequest":false,"CreatedAt":"2024-03-04T15:56:45","Actor":"ltlombardi","Number":"72382","RawContent":null,"Title":"Freshly created editorconfig gets duplicated rules added when file is open in VS","State":"open","Body":"**Version Used**: \r\nVisual studio community Version 17.9.0\r\n**Steps to Reproduce**:\r\n\r\n1. Add editorconfig to VS. It gets added with default rules. Or use the one I provide\r\n2. Click on editorconfig file to edit it, and VS opens the GUI form editor, and immediately edits the file, adding duplicated rules\r\n\r\n\r\n![image](https://github.com/dotnet/roslyn/assets/898124/6ccd2d4b-aff2-4b12-9cef-fd7118073e6e)\r\n![image](https://github.com/dotnet/roslyn/assets/898124/b27ecf00-8282-451b-af2d-04ab73a4dcb7)\r\n[editorconfig.zip](https://github.com/dotnet/roslyn/files/14483984/editorconfig.zip)\r\n**Expected Behavior**:\r\nVS is adding duplicated rules to the file\r\n**Actual Behavior**:\r\nNo duplicated rules is added. Nothing should be added or changed without user input\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/72382","RelatedDescription":"Open issue \"Freshly created editorconfig gets duplicated rules added when file is open in VS\" (#72382)"},{"Id":"2167088539","IsPullRequest":true,"CreatedAt":"2024-03-04T15:13:53","Actor":"AlekseyTs","Number":"72381","RawContent":null,"Title":"Enable `lock` in async method","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/72381","RelatedDescription":"Open PR \"Enable `lock` in async method\" (#72381)"},{"Id":"2167027643","IsPullRequest":false,"CreatedAt":"2024-03-04T14:48:33","Actor":"Rekkonnect","Number":"72380","RawContent":null,"Title":"Implement interfaces code fix does not implement protected interface members non-explicitly","State":"open","Body":"## Version Used\r\nVS 2022 Version 17.9.2\r\nRoslyn 4.9.0 (a98c90d5645537)\r\n\r\nProject info\r\nC# 12.0\r\n.NET 8.0\r\n\r\n## Steps to Reproduce\r\n\r\n1. Create an interface with at least one protected member without a body\r\n2. Create a class implementing the above interface without implementing its members\r\n3. Hover over the diagnostic for missing member implementations\r\n4. Open the code fix suggestions\r\n5. Preview or trigger the \"Implement interface\" code fix, which should add all the missing members without explicit implementations\r\n\r\nTest code:\r\n\r\n```csharp\r\npublic interface I\r\n{\r\n    public abstract void Another();\r\n    protected abstract void Method();\r\n}\r\n\r\npublic class CI : I\r\n{\r\n}\r\n```\r\n\r\n## Expected Behavior\r\n\r\nBased on the above example, both `Another` and `Method` are implemented non-explicitly. Adding `public void Method() { }` in CI properly implements `void I.Method()`, despite having the `protected` modifier.\r\n\r\n## Actual Behavior\r\n\r\nThe \"Implement interface\" code fix does not include `Method` in the resulting code fix. Only the \"Implement all members explicitly\" code fix includes the member by implementing it explicitly.\r\n\r\n## Screenshot\r\n\r\n![image](https://github.com/dotnet/roslyn/assets/8298332/4556905e-0b70-4bcc-a58e-851164ef0b51)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/72380","RelatedDescription":"Open issue \"Implement interfaces code fix does not implement protected interface members non-explicitly\" (#72380)"},{"Id":"2166736250","IsPullRequest":false,"CreatedAt":"2024-03-04T12:29:18","Actor":"DarkDaskin","Number":"72379","RawContent":null,"Title":"INamedTypeSymbol.StaticConstructors is empty for metadata types","State":"open","Body":"### Version Used: \r\nMicrosoft.CodeAnalysis.CSharp 4.9.2\r\n\r\n### Steps to Reproduce:\r\n\r\n1. Clone [this repo](https://github.com/DarkDaskin/HarmonyTools/tree/static-constructors)\r\n2. Run the `WhenValidSimplePatches_DoNothing` test.\r\n\r\n### Expected Behavior:\r\n`StaticConstructors` at [this line](https://github.com/DarkDaskin/HarmonyTools/blob/1f8e3a2260baa17e2aa116812cea72faf7eeaf69/HarmonyTools.Analyzers/HarmonyToolsAnalyzer.cs#L93) is not empty for the `HarmonyTools.Test.PatchBase.SimpleClass` type and the test passes.\r\n\r\n### Actual Behavior:\r\n`StaticConstructors` is empty for the `HarmonyTools.Test.PatchBase.SimpleClass` type despite it having an implicit static constructor (adding an explicit one does not help either) and the test fails.","Url":"https://github.com/dotnet/roslyn/issues/72379","RelatedDescription":"Open issue \"INamedTypeSymbol.StaticConstructors is empty for metadata types\" (#72379)"},{"Id":"2166379903","IsPullRequest":false,"CreatedAt":"2024-03-04T09:31:10","Actor":"aoltean16","Number":"72378","RawContent":null,"Title":"VisitObjectInitializerExpression throws InvalidCastException on invalid VisualBasic expression","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft.CodeAnalysis.VisualBasic 4.8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a vb project\r\n2. write the following class:\r\n```\r\nImports System.Linq.Expressions\r\nModule Test\r\n    Public Function CreateExpression() As Expression(Of Func(Of Object))\r\n        Return Function() (New UndeclaredClass() With {.Name = \"testName\"})\r\n    End Function\r\nEnd Module\r\n```\r\n\r\n4. Observe the exception being thrown\r\n```\r\nStreamJsonRpc.RemoteInvocationException: Unable to cast object of type 'Microsoft.CodeAnalysis.VisualBasic.BoundBadExpression' to type 'Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator'.\r\n   at StreamJsonRpc.JsonRpc.<InvokeCoreAsync>d__151`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.BrokeredServiceConnection`1.<TryInvokeAsync>d__18`1.MoveNext()\r\nRPC server exception:\r\nSystem.InvalidCastException: Unable to cast object of type 'Microsoft.CodeAnalysis.VisualBasic.BoundBadExpression' to type 'Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator'.\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.VisitObjectInitializerExpression(BoundObjectInitializerExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBadExpression(BoundBadExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitParenthesized(BoundParenthesized node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitConversion(BoundConversion node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.VisitConversion(BoundConversion node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitReturnStatement(BoundReturnStatement node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(BoundBlock node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.VisitLambda(BoundLambda node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.VisitLambdaConversion(BoundExpression operand, BoundLambda relaxationLambda)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.VisitConversion(BoundConversion node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitReturnStatement(BoundReturnStatement node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(BoundBlock node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.Visit(BoundNode node)\r\n      at Microsoft.CodeAnalysis.VisualBasic.DiagnosticsPass.IssueDiagnostics(BoundNode node, DiagnosticBag diagnostics, MethodSymbol containingSymbol)\r\n      at Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.BindAndAnalyzeMethodBody(MethodSymbol method, TypeCompilationState compilationState, BindingDiagnosticBag diagnostics, Binder containingTypeBinder, MethodSymbol& referencedConstructor, Boolean& injectDefaultConstructorCall, Binder& methodBodyBinder)\r\n      at Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileMethod(MethodSymbol method, Int32 methodOrdinal, Int32& withEventPropertyIdDispenser, Int32& delegateRelaxationIdDispenser, Predicate`1 filter, TypeCompilationState compilationState, ProcessedFieldOrPropertyInitializers processedInitializers, Binder containingTypeBinder, SynthesizedSubmissionFields previousSubmissionFields, MethodSymbol& referencedConstructor)\r\n      at Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType, Predicate`1 filter)\r\n      at Microsoft.CodeAnalysis.VisualBasic.MethodCompiler._Closure$__33-0._Lambda$__0()\r\n      at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   --- End of stack trace from previous location ---\r\n      at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n      at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n   --- End of stack trace from previous location ---\r\n      at Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.WaitForWorkers()\r\n      at Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetDiagnosticsForMethodBodiesInTree(SyntaxTree tree, Nullable`1 filterSpanWithinTree, Boolean hasDeclarationErrors, BindingDiagnosticBag diagnostics, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetDiagnosticsForSyntaxTree(CompilationStage stage, SyntaxTree tree, Nullable`1 filterSpanWithinTree, Boolean includeEarlierStages, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.VisualBasic.SyntaxTreeSemanticModel.GetDiagnostics(Nullable`1 span, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.<GetCompilationEventsForSingleFileAnalysis>g__generateCompilationEvents|64_0(Compilation compilation, AnalysisScope analysisScope, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetCompilationEventsForSingleFileAnalysis(Compilation compilation, AnalysisScope analysisScope, ImmutableArray`1 additionalFiles, Boolean hasAnyActionsRequiringCompilationEvents, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.ComputeAnalyzerDiagnosticsAsync(AnalysisScope analysisScope, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultCoreAsync(SemanticModel model, Nullable`1 filterSpan, ImmutableArray`1 analyzers, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.Extensions.GetAnalysisResultAsync(CompilationWithAnalyzers compilationWithAnalyzers, DocumentAnalysisScope documentAnalysisScope, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Diagnostics.Extensions.GetAnalysisResultAsync(CompilationWithAnalyzers compilationWithAnalyzers, DocumentAnalysisScope documentAnalysisScope, Project project, DiagnosticAnalyzerInfoCache analyzerInfoCache, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.Diagnostics.DiagnosticComputer.AnalyzeAsync(CompilationWithAnalyzers compilationWithAnalyzers, BidirectionalMap`2 analyzerToIdMap, ImmutableArray`1 analyzers, SkippedHostAnalyzersInfo skippedAnalyzersInfo, Boolean reportSuppressedDiagnostics, Boolean logPerformanceInfo, Boolean getTelemetryInfo, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.Diagnostics.DiagnosticComputer.GetDiagnosticsAsync(IEnumerable`1 analyzerIds, Boolean reportSuppressedDiagnostics, Boolean logPerformanceInfo, Boolean getTelemetryInfo, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.Diagnostics.DiagnosticComputer.GetNormalPriorityDiagnosticsAsync(IEnumerable`1 analyzerIds, Boolean reportSuppressedDiagnostics, Boolean logPerformanceInfo, Boolean getTelemetryInfo, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.RemoteDiagnosticAnalyzerService.<>c__DisplayClass4_0.<<CalculateDiagnosticsAsync>b__0>d.MoveNext()\r\n   --- End of stack trace from previous location ---\r\n      at Microsoft.CodeAnalysis.Remote.RemoteWorkspace.<>c__DisplayClass9_0`1.<<RunWithSolutionAsync>g__ProcessSolutionAsync|1>d.MoveNext()\r\n   --- End of stack trace from previous location ---\r\n      at Microsoft.CodeAnalysis.Remote.RemoteWorkspace.RunWithSolutionAsync[T](AssetProvider assetProvider, Checksum solutionChecksum, Int32 workspaceVersion, Boolean updatePrimaryBranch, Func`2 implementation, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.RemoteWorkspace.RunWithSolutionAsync[T](AssetProvider assetProvider, Checksum solutionChecksum, Int32 workspaceVersion, Boolean updatePrimaryBranch, Func`2 implementation, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.BrokeredServiceBase.RunWithSolutionAsync[T](Checksum solutionChecksum, Func`2 implementation, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.Remote.RemoteDiagnosticAnalyzerService.CalculateDiagnosticsAsync(Checksum solutionChecksum, DiagnosticArguments arguments, CancellationToken cancellationToken)\r\n```\r\n\r\n\r\n**Expected Behavior**:\r\nShould show the actual problem with class not being found.\r\n\r\n**Actual Behavior**:\r\nThe roslyn analyzer breaks.","Url":"https://github.com/dotnet/roslyn/issues/72378","RelatedDescription":"Open issue \"VisitObjectInitializerExpression throws InvalidCastException on invalid VisualBasic expression\" (#72378)"},{"Id":"2165605457","IsPullRequest":true,"CreatedAt":"2024-03-03T22:47:37","Actor":"ToddGrun","Number":"72377","RawContent":null,"Title":"WIP: Attempt at reducing the file I/O under the AnalyzerAssemblyLoader folder.","State":"open","Body":"Assemblies and their corresponding resource dlls are copied/deleted under this folder on solution open. When opening Rosly, I see about 700 dlls copied/deleted under this folder. Over 90% of these dlls are resource dlls, not something in use for my setup.\r\n\r\nThis change is very rough, but attempts to separate the code that ensures the assembly is shadow-copied properly, from the code that ensures that it's supporting resource assemblies are shadow-copied properly.\r\n\r\nThere are probably great reasons why this isn't possible, but I wanted to create a commit to continue an earlier convesation I had with Jard about this. With this change locally, I see over 90% reduction in the number of these file I/O operations.","Url":"https://github.com/dotnet/roslyn/pull/72377","RelatedDescription":"Open PR \"WIP: Attempt at reducing the file I/O under the AnalyzerAssemblyLoader folder.\" (#72377)"},{"Id":"2165526768","IsPullRequest":false,"CreatedAt":"2024-03-03T19:45:03","Actor":"ltlombardi","Number":"72376","RawContent":null,"Title":"Run code clean up with \"Fix all warnings and errors set in EditorConfig\" ignores sort_system_directives_first = false","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a C# project\r\n2. Disable ImplicitUsings in project file\r\n3. Create some code so that you have some using directives to be sorted\r\n4. Sort using directives in a way not alphabetical\r\n5. Add EditorConfig with default rules\r\n6. sort_system_directives_first = false\r\n7. Add \"Fix all warnings and errors set in EditorConfig\" to Run code clean up profile. \r\n8. Doesn't matter if you add Sort Import or usings\r\n9. Execute Code clean up\r\n\r\nAttached source code example.\r\n[ConsoleAppEditorConfigBug.zip](https://github.com/dotnet/roslyn/files/14474337/ConsoleAppEditorConfigBug.zip)\r\n\r\nCode clean up selection. I used profile 2\r\n![image](https://github.com/dotnet/roslyn/assets/898124/c1e3dbe9-7638-4cd1-8fed-969f8eb8b781)\r\n\r\n**Expected Behavior**:\r\nUsing directives is not touched\r\n**Actual Behavior**:\r\nUsing directives get sorted\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/72376","RelatedDescription":"Open issue \"Run code clean up with \"Fix all warnings and errors set in EditorConfig\" ignores sort_system_directives_first = false\" (#72376)"},{"Id":"2165489618","IsPullRequest":true,"CreatedAt":"2024-03-03T18:40:43","Actor":"ToddGrun","Number":"72375","RawContent":null,"Title":"Reduce allocations required to create a TransformNode","State":"open","Body":"Instead of wrapping the user function and passing that into the TransformNode ctor, we instead give the option of passing in a flag to indicate whether the TransformNode should do the try/catch itself.\r\n\r\nThis looks to save about 0.5% in allocations in the RichCopyTest.CopyPlain speedometer via [results here](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms-vseng.pit-vsengPerf.pit-hub?targetBuild=34703.55.dn-bot.240304.222618.533385&targetBranch=main&targetPerfBuildId=9182221&runGroup=Speedometer&since=2024-03-04&baselineBuild=34703.55&baselineBranch=main) from [this test insertion](https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/533385).","Url":"https://github.com/dotnet/roslyn/pull/72375","RelatedDescription":"Open PR \"Reduce allocations required to create a TransformNode\" (#72375)"},{"Id":"2165097847","IsPullRequest":false,"CreatedAt":"2024-03-03T02:49:22","Actor":"tats-u","Number":"72373","RawContent":null,"Title":"Refactor suggestion: Remove unnecessary (value As String) in VB.NET property setters","State":"open","Body":"<!-- This issue template is **only** for analyzers related to code style. -->\r\n<!-- To propose a semantic/code quality analyzer, please follow the guidelines at https://github.com/dotnet/roslyn-analyzers/blob/main/GuidelinesForNewRules.md. -->\r\n\r\n**Brief description:**\r\n\r\nIn VB.NET, the setter definition in a property declaration often specifies `(value As String)` unnecessarily, even though `value` is the default name for the setter parameter. While some coding rules may enforce this specification, it can lead to confusion among new developers and clutter the code unnecessarily.\r\n\r\n**Languages applicable:**\r\n\r\nVB Only\r\n\r\n**Code example that the analyzer should report:**\r\n\r\n```vbnet\r\nPrivate _name As String\r\n\r\nPublic Property Name() As String\r\n    Get\r\n        Return _name\r\n    End Get\r\n    Set (value As String) ' Variable name specification as `value` is redundant.\n      ' ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ (lighten the colors)\r\n        _name = value\r\n        NotifyOnSomewhereElse()\r\n    End Set\r\nEnd Property\r\n```\r\n\r\n**Additional information:**\r\n\r\n**Documentation requirements:**\r\n","Url":"https://github.com/dotnet/roslyn/issues/72373","RelatedDescription":"Open issue \"Refactor suggestion: Remove unnecessary (value As String) in VB.NET property setters\" (#72373)"},{"Id":"2165063910","IsPullRequest":false,"CreatedAt":"2024-03-03T01:28:34","Actor":"Rekkonnect","Number":"72372","RawContent":null,"Title":"IntelliSense suggests the `readonly` modifier even when it's already present in the incomplete declaration","State":"open","Body":"**Version Used**:\r\nVS 2022 Version 17.9.2\r\nRoslyn 4.9.0 (a98c90d5645537)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Begin declaring any member, optionally including an accessibility modifier (`public`)\r\n2. Type `readonly`\r\n3. Begin typing `readonly` again, without completing the word\r\n\r\n**Expected Behavior**:\r\n\r\n`readonly` does not appear again, as it's illegal to include the same modifier more than once.\r\n\r\n**Actual Behavior**:\r\n\r\nThe `readonly` modifier is suggested again.\r\n\r\nNote: `static`, `partial` and other modifiers are not suggested more than once.\r\n","Url":"https://github.com/dotnet/roslyn/issues/72372","RelatedDescription":"Open issue \"IntelliSense suggests the `readonly` modifier even when it's already present in the incomplete declaration\" (#72372)"},{"Id":"2165021400","IsPullRequest":true,"CreatedAt":"2024-03-02T23:10:59","Actor":"ToddGrun","Number":"72371","RawContent":null,"Title":"Reduce closure and Lazy allocations inside CSharpCompilation.ctor","State":"open","Body":"Additionally, lazily create a couple members that don't appear to be used on most instances. Together, these account for about 0.8% of all allocations in the CopyPlainText speedometer test.\r\n\r\n*** Previous allocations from test profile\r\n![image](https://github.com/dotnet/roslyn/assets/6785178/db764b82-7402-451a-8830-280c7f5e31a2)","Url":"https://github.com/dotnet/roslyn/pull/72371","RelatedDescription":"Open PR \"Reduce closure and Lazy allocations inside CSharpCompilation.ctor\" (#72371)"},{"Id":"2165011222","IsPullRequest":false,"CreatedAt":"2024-03-02T22:49:33","Actor":"Joy-less","Number":"72370","RawContent":null,"Title":"Use Pattern Matching suggestion gives faulty code","State":"open","Body":"**Version Used**: C# 12\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Paste the following code into Visual Studio:\r\n```cs\r\npublic class Program {\r\n    public class Cat {\r\n    }\r\n    public static void Main() {\r\n        Cat Cat = new();\r\n        object Object = Cat;\r\n        \r\n        // Suggestion: IDE0083: Use Pattern Matching\r\n        if (!(Object is Cat)) {\r\n            \r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2. If you accept the suggestion, it corrects your code to:\r\n```cs\r\nif (Object is not Cat) {\r\n    \r\n}\r\n```\r\nwhich gives you a compilation error: `(line 14, col 21): A constant value is expected`\r\n\r\n**Diagnostic Id**: IDE0083\r\n\r\n**Expected Behavior**:\r\nNo suggestion given.\r\n\r\n**Actual Behavior**:\r\nFaulty suggestion given.\r\n\r\n**Related discussion:**\r\nhttps://github.com/dotnet/csharplang/discussions/7980","Url":"https://github.com/dotnet/roslyn/issues/72370","RelatedDescription":"Open issue \"Use Pattern Matching suggestion gives faulty code\" (#72370)"},{"Id":"2164995928","IsPullRequest":false,"CreatedAt":"2024-03-02T22:06:02","Actor":"dennis-yemelyanov","Number":"72369","RawContent":null,"Title":"MetadataImportOptions.All doesn't work in source generators?","State":"open","Body":"I'm trying to get private members from `INamedTypeSymbol` using `MetadataImportOptions.All`. When looking at the generated code in Visual Studio it looks as expected (the generator finds a private field), but when running the app, the private field is not found.\r\n\r\nAm I using this option incorrectly? Or what can explain the difference in behavior between the code shown in VS and the actual code that gets executed?\r\n\r\nThe generator code looks like this:\r\n\r\n```cs\r\nusing System.Linq;\r\nusing Microsoft.CodeAnalysis;\r\n\r\nnamespace MyGenerator\r\n{\r\n    [Generator]\r\n    public class Generator : IIncrementalGenerator\r\n    {\r\n        public void Initialize(IncrementalGeneratorInitializationContext context)\r\n        {\r\n            var memberNamesProvider = context.CompilationProvider\r\n                .Select(static (c, _) =>\r\n                {\r\n                    return c\r\n                        .WithOptions(c.Options.WithMetadataImportOptions(MetadataImportOptions.All))\r\n                        .GetTypeByMetadataName(\"MyLibrary.MyLibraryClass\")!.GetMembers().Select(x => x.Name);\r\n                });\r\n\r\n            context.RegisterSourceOutput(memberNamesProvider, (productionContext, memberNames) =>\r\n            {\r\n                var text = \r\n$@\"public class GeneratedResult\r\n{{\r\n    public static void Print()\r\n    {{\r\n        System.Console.WriteLine(\"\"{string.Join(\" \", memberNames)}\"\");\r\n    }}\r\n}}\";\r\n\r\n                productionContext.AddSource(\"GeneratedResult.g.cs\", text);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n \r\n**Version Used**:  Visual Studio 17.9.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open `GeneratorTest.sln` from https://github.com/dennis-yemelyanov/MetadataImportOptions/tree/main in Visual Studio.\r\n2. Check the generated code under the `GenertorTest` project analyzers. It contains PrivateField (as expected):\r\n![image](https://github.com/dotnet/roslyn/assets/10681271/968bd0fb-fcad-4f22-a737-a80140812e45)\r\n3. Run the `GeneratorTest` project. The output does not contain PrivateField, and just prints this:\r\n> PublicField .ctor\r\n\r\n**Expected Behavior**:\r\n\r\nThe app output includes PrivateField.\r\n\r\n**Actual Behavior**:\r\n\r\nThe app output does not include PrivateField.\r\n","Url":"https://github.com/dotnet/roslyn/issues/72369","RelatedDescription":"Open issue \"MetadataImportOptions.All doesn't work in source generators?\" (#72369)"},{"Id":"2164930920","IsPullRequest":true,"CreatedAt":"2024-03-02T19:02:27","Actor":"CyrusNajmabadi","Number":"72368","RawContent":null,"Title":"WIP: Lazy work","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/72368","RelatedDescription":"Open PR \"WIP: Lazy work\" (#72368)"},{"Id":"2164825767","IsPullRequest":true,"CreatedAt":"2024-03-02T14:08:21","Actor":"ToddGrun","Number":"72367","RawContent":null,"Title":"Remove a field from MultiDictionary.ValueSet","State":"open","Body":"Instead of keeping this field once per key in a MultiDictionary, we instead utilize the existing MultiDictionary's reference to a value comparer. This required plumbing through the value comparer to a couple methods on the ValueSet, but will slightly reduce the size and allocation footprint of MultiDictionary objects.","Url":"https://github.com/dotnet/roslyn/pull/72367","RelatedDescription":"Open PR \"Remove a field from MultiDictionary.ValueSet\" (#72367)"},{"Id":"2164733202","IsPullRequest":false,"CreatedAt":"2024-03-02T09:41:17","Actor":"MoreDone","Number":"72366","RawContent":null,"Title":"CSharpScript.RunAsync fail with exception System.NotSupportedException: A non-collectible assembly may not reference a collectible assembly","State":"open","Body":"**Version Used**: \r\n\r\nroslyn 4.8.0\r\nruntime net8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create tow project, main project run as console exe and another as hotfix plugin which can dynamic load and reload later.\r\n2. Main project use CSharpScript.RunAsync implement a repl console, which can handle input as command or repl.\r\n3. Hotfix project create a class which can be a parameter of CSharpScript.RunAsync of globals, then can invoke directly in console.\r\n4. In main project use AssemblyLoadContext load hotfix assembly by stream and the isCollectible paramater set true.\r\n5. Run the main exe, input any valid expression like 1+1 or Test() and so on, then exception is thrown.\r\n\r\npart of code of load hotfix plugin :\r\n<sub>\r\n\r\n        private void LoadPlugin()\r\n        {\r\n            this.UnloadPlugin();\r\n\r\n            this.m_AssemblyLoadContext = new AssemblyLoadContext(\"Hotfix\", IsPluginCollectible);\r\n\r\n            // load plugin assembly from stream.\r\n            var dllByte = File.ReadAllBytes(PluginFile);\r\n            var pdbBytes = File.ReadAllBytes(Path.ChangeExtension(PluginFile, \".pdb\"));\r\n            this.m_Plugin = this.m_AssemblyLoadContext.LoadFromStream(new MemoryStream(dllByte), new MemoryStream(pdbBytes));\r\n\r\n            var type = this.m_Plugin.GetType(\"ReplHotfix.Hotfix\");\r\n            this.Interactor.Initialize(Activator.CreateInstance(type));\r\n        }\r\n\r\n        private void UnloadPlugin()\r\n        {\r\n            if (IsPluginCollectible)\r\n            {\r\n                this.m_AssemblyLoadContext?.Unload();\r\n            }\r\n\r\n            this.m_Plugin = null;\r\n            this.m_AssemblyLoadContext = null;\r\n\r\n            GC.Collect();\r\n        }\r\n\r\n </sub>\r\n\r\npart of code of initialize interactive:\r\n<sub>\r\n\r\n        public void Initialize(object globals)\r\n        {\r\n            this.m_ResetScriptState = true;\r\n\r\n            this.m_Loader?.Dispose();\r\n            this.m_Loader = new InteractiveAssemblyLoader();\r\n            this.m_Loader.RegisterDependency(globals.GetType().Assembly);\r\n\r\n            this.m_Global = globals;\r\n            this.m_Options = ScriptOptions.Default\r\n                .WithMetadataResolver(ScriptMetadataResolver.Default.WithBaseDirectory(Directory.GetCurrentDirectory()))\r\n                .AddReferences(typeof(Interactor).Assembly)\r\n                // plugin assembly is load from stream, not contains location info.\r\n                .AddReferences(MetadataReference.CreateFromFile(App.PluginFile))\r\n                .AddImports(\"System\", \"System.IO\", \"System.Linq\", \"System.Collections.Generic\", \"Repl\", \"ReplHotfix\");\r\n        }\r\n\r\n        private async Task Execute(string input)\r\n        {\r\n            input = input.Trim();\r\n            if (string.IsNullOrWhiteSpace(input))\r\n            {\r\n                return;\r\n            }\r\n\r\n            // execute repl if input not a command\r\n            if (!ExecuteCommand(input))\r\n            {\r\n                try\r\n                {\r\n                    if (this.m_ScriptState == null)\r\n                    {\r\n                        this.m_ScriptState = await CSharpScript.Create(input, this.m_Options, this.m_Global.GetType(), this.m_Loader)\r\n                            .RunAsync(this.m_Global);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.m_ScriptState = await this.m_ScriptState.ContinueWithAsync(input, this.m_Options);\r\n                    }\r\n\r\n                    if (this.m_ScriptState != null)\r\n                    {\r\n                        Console.WriteLine(this.m_ScriptState.ReturnValue);\r\n                    }\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex);\r\n                }\r\n            }\r\n\r\n            // state will be reset of operation reload\r\n            if (this.m_ResetScriptState)\r\n            {\r\n                this.m_ResetScriptState = false;\r\n                this.m_ScriptState = null;\r\n            }\r\n        }\r\n</sub>\r\n\r\nThere is the whole project\r\n[Demo.zip](https://github.com/dotnet/roslyn/files/14468588/Demo.zip)\r\n\r\n**Expected Behavior**:\r\nWhat I want to do is, invoke same methods of assemblies which is dynamic load and later unload or reload if I modify some code, directly just like coding script. I use AssemblyLoadContext to create collectible assemblies, so that the old assemblies can unload to avoid memory leak. \r\nThere are some command, quit or Quit() will stop app, reload or Reload() will reload plugin assemblies, and in hotfix project can add any custom function or class for invoking in console directory.\r\n\r\n\r\n**Actual Behavior**:\r\n1. It work successful in net6.0, but from net7.0 there is an exception thrown.\r\n2. Maybe this chage cause this exception https://learn.microsoft.com/en-us/dotnet/core/compatibility/core-libraries/7.0/collectible-assemblies\r\n3. When I view the source code, found class CoreAssemblyLoaderImpl.LoadContext which inherit AssemblyLoadContext is not collectiable and CoreAssemblyLoaderImpl.Dispose do nothing, these may result the problem?\r\n4. ScriptState depend my plugin assemblies,  but it not unload,  that will keep some reference, it may lead to assemblies can't unload actually.\r\n\r\n**My Demand**:\r\n1. Can ScriptState support unload. There may exist multi ScriptStates simultaneously, when there exist multi sessions, and if the session is close the ScriptState should be clear.\r\n2. Can CoreAssemblyLoaderImpl support collectible or InteractiveAssemblyLoader support a parameter for custom AssemblyLoadContext\r\n","Url":"https://github.com/dotnet/roslyn/issues/72366","RelatedDescription":"Open issue \"CSharpScript.RunAsync fail with exception System.NotSupportedException: A non-collectible assembly may not reference a collectible assembly\" (#72366)"},{"Id":"2164559605","IsPullRequest":true,"CreatedAt":"2024-03-02T03:42:18","Actor":"ToddGrun","Number":"72365","RawContent":null,"Title":"Delay create the SkeletonReferenceCache","State":"open","Body":"The only method which populates the object with a version and skeleton reference set is TryGetOrCreateReferenceSetAsync. The only way to get to that method is through GetOrBuildReferenceAsync.\r\n\r\nThe change in this PR is to make the caller to GetOrBuildReferenceAsync ensure that the SkeletonReferenceCache is created, all other code paths instead access the SkeletonReferenceCache via TryGetSkeletonReferenceCache and gracefully handle null.\r\n\r\nWhen opening Roslyn, I was seeing around 600K of these objects are created before my change, and 0 after my change. This was noticed in inspecting a profile from the RichCopyTest speedometer test, where SkeletonReferenceCache.Clone was accounting for about 0.5% of allocations.\r\n\r\n*** Previous allocations from RichCopyTest speedometer\r\n![image](https://github.com/dotnet/roslyn/assets/6785178/053d8176-3681-499d-a908-567e98dcc535)","Url":"https://github.com/dotnet/roslyn/pull/72365","RelatedDescription":"Open PR \"Delay create the SkeletonReferenceCache\" (#72365)"},{"Id":"2164447396","IsPullRequest":true,"CreatedAt":"2024-03-02T01:07:14","Actor":"ToddGrun","Number":"72364","RawContent":null,"Title":"Small allocation optimization in StateTable.Builder.ToImmutable","State":"open","Body":" Usse an ArrayBuilder as a scratch buffer instead of allocating an array every time. Small allocation that barely showed up in the RichCopyTest speedometer test. \r\n\r\n*** Previous allocations\r\n![image](https://github.com/dotnet/roslyn/assets/6785178/88fb8f48-8eeb-4dfc-ba5e-e8550634ba84)","Url":"https://github.com/dotnet/roslyn/pull/72364","RelatedDescription":"Open PR \"Small allocation optimization in StateTable.Builder.ToImmutable\" (#72364)"},{"Id":"2164380133","IsPullRequest":false,"CreatedAt":"2024-03-01T23:54:38","Actor":"miloush","Number":"72363","RawContent":null,"Title":"Allow inserting FQN instead of importing namespace on completion","State":"open","Body":"## Summary\r\n\r\nWhen \"Show items from unimported namespaces\" is enabled, committing a completion list of a type from unimported namespace imports the namespace. In some scenarios, inserting FQN instead can be more desirable.\r\n\r\n## Background and Motivation\r\n\r\nThe scenarios include:\r\n* Not wanting to introduce conflicts (for example when same type name is already present in an imported namespace)\r\n* Not wanting to import a namespace for a single occurrence in a document (like e.g. IEnumerable)\r\n* FQN already being used in the document in similar cases\r\n* Just trying to see members on a type, or perform F12 etc. - not intending to use it in the final code\r\n* Avoiding invalidating the document, and so for example terminating snippet editing\r\n\r\n## Proposed Feature\r\n\r\nI either suggest\r\n* a setting is added to Text Editor > C# > IntelliSense, e.g. \"Automatically import namespaces on completion\" under the \"Show items from unimported namespaces\" setting (it is easy for user to trigger the simplification refactoring afterwards if disabled and needed),\r\nor;\r\n* an ad-hoc way to choose how the completion behaves, for example using Shift+Enter or particular completion key or sequence to insert FQN.\r\n\r\n## Alternative Designs\r\n\r\nAlternatively the tooltip appearing when selecting the completion item could contain <ins>Import namespace</ins> and <ins>Fully qualify</ins> links similar to the scope links on refactoring preview.\r\n","Url":"https://github.com/dotnet/roslyn/issues/72363","RelatedDescription":"Open issue \"Allow inserting FQN instead of importing namespace on completion\" (#72363)"},{"Id":"2164266676","IsPullRequest":true,"CreatedAt":"2024-03-01T22:10:20","Actor":"sdelarosbil","Number":"72361","RawContent":null,"Title":"Merge the finally block during data flow analysis","State":"open","Body":"Closes #64044 \r\n\r\nThis one was complex so I'll break down what happened:\r\n\r\n- We get to the first block analysis in the try block and get it done\r\n- We jump to analyze the finally block on its own in case of an exception, but crucially, the actual analysis result is not persisted in the block map. The only reference left of it is the current results\r\n- We come back to the try block, second block, but this overwrites the current results so now, no one knows that the write inside the finally is reachable from blocks below the try finally\r\n- We eventually get to the block below the try finally and see the read, but the write is no longer part of the current results so it thinks the write is unreachable when it is.\r\n\r\nIn other words, if a write happens in a finally block of a try finally which had a try block containing more than one block, the information of the writes of the finally is lost when analyzing the second block of the try. If the try only has one block, this accidentally works because the current results end up being used for the blocks below. This is why commenting either lines would workaround the issue: there must be 2 or more control flow blocks inside the try.\r\n\r\nThis pr does 2 changes to address this:\r\n- When we are done with a finally and it's set to continue with the exception dispatch, we persist the results to block map\r\n- When we are about to exit the try block and out of the try finally, we merge the results we had in try with the ones in the finally so blocks below are aware the finally block is reachable","Url":"https://github.com/dotnet/roslyn/pull/72361","RelatedDescription":"Open PR \"Merge the finally block during data flow analysis\" (#72361)"},{"Id":"2163942829","IsPullRequest":true,"CreatedAt":"2024-03-01T18:15:40","Actor":"mmitche","Number":"72360","RawContent":null,"Title":"Roslyn non-source-only build fixes","State":"open","Body":"These changes make it possible to build roslyn in non-source-only modes in the VMR:\r\n- Remove some vertical build (non-source-only) exclusions that were added during the PoC phase of the VMR\r\n- When packing the language server nuget package, Pack only the rid that the current vertical is building.\r\n- Mark a couple benchmark projects as IsTestProject. Tests are excluded by default when building the VMR\r\n- Mark a couple of test utility projects as test utility projects. When not building tests, these projects are excluded from the build.","Url":"https://github.com/dotnet/roslyn/pull/72360","RelatedDescription":"Open PR \"Roslyn non-source-only build fixes\" (#72360)"},{"Id":"2163928711","IsPullRequest":true,"CreatedAt":"2024-03-01T18:07:23","Actor":"tmat","Number":"72359","RawContent":null,"Title":"Update VS SDK to 17.10.22-preview-1","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/71377","Url":"https://github.com/dotnet/roslyn/pull/72359","RelatedDescription":"Open PR \"Update VS SDK to 17.10.22-preview-1\" (#72359)"},{"Id":"2163900917","IsPullRequest":true,"CreatedAt":"2024-03-01T17:50:04","Actor":"ToddGrun","Number":"72358","RawContent":null,"Title":"Reduce allocations in InputNodes by specifying initial capacity","State":"open","Body":"Resizes from adds inside InputNode after not specifying an initial capactity look to account for roughly1% of allocations in the RichCopyTest speedometer test. Additionally, we can use a pooled hashset inside UpdateStateTable when using the default comparer (which is the standard case I see hit in manual testing).\r\n\r\n*** old allocations from RichCopyTest.CopyPlain speedometer run\r\n![image](https://github.com/dotnet/roslyn/assets/6785178/3a9215a1-6a23-485f-950e-c3330c37269f)","Url":"https://github.com/dotnet/roslyn/pull/72358","RelatedDescription":"Open PR \"Reduce allocations in InputNodes by specifying initial capacity\" (#72358)"},{"Id":"2163804918","IsPullRequest":false,"CreatedAt":"2024-03-01T16:55:34","Actor":"Watno","Number":"72357","RawContent":null,"Title":"Cloning a .NET 8 record deriving from a .NET 7 record leads to loss of members","State":"open","Body":"**Version Used**: \r\nCompiler  \"4.8.0-7.24067.24 (26357112)\"\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a project targeting .NET 7 and define a record class\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n        <Nullable>enable</Nullable>\r\n    </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```\r\npublic record BaseRecord\r\n{\r\n    public required object Object1 { get; init; }\r\n    public required object Object2 { get; init; }\r\n}\r\n```\r\n2. Create a project targeting .NET 8 and define a derived record class there\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>net8.0</TargetFramework>\r\n        <OutputType>Exe</OutputType>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n      <ProjectReference Include=\"..\\DemoBase\\DemoBase.csproj\" />\r\n    </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```\r\npublic record DerivedRecord : BaseRecord\r\n{\r\n}\r\n```\r\n\r\n3. Instantiate the derived record and clone it using `with`\r\n\r\n```\r\nusing System.Diagnostics;\r\n\r\nvar sut = new DerivedRecord\r\n{\r\n    Object1 = new object(),\r\n    Object2 = new object()\r\n};\r\n\r\nvar broken = sut with { Object2 = new object()}; \r\n\r\nDebug.Assert(broken.Object1 != null);\r\n```\r\n\r\n[Demo.zip](https://github.com/dotnet/roslyn/files/14463754/Demo.zip)\r\nhttps://gist.github.com/Watno/f6d78b49a15530e69a2a1cc1ce8d1e40\r\n\r\n\r\n**Expected Behavior**: Members of the base record get cloned to the copy\r\n\r\n**Actual Behavior**: Members of the base record disappear\r\n\r\n**Additional information**: The IL code of the constructor of `DerivedRecord` seems to be broken:\r\n```\r\n  .method family hidebysig specialname rtspecialname instance void\r\n    .ctor(\r\n      class DerivedRecord original\r\n    ) cil managed\r\n  {\r\n    .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()\r\n      = (01 00 00 00 )\r\n    .custom instance void [System.Runtime]System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute::.ctor()\r\n      = (01 00 00 00 )\r\n    .maxstack 8\r\n\r\n    // [1 15 - 1 28]\r\n    IL_0000: nop\r\n    IL_0001: ret\r\n\r\n  } // end of method DerivedRecord::.ctor\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/72357","RelatedDescription":"Open issue \"Cloning a .NET 8 record deriving from a .NET 7 record leads to loss of members\" (#72357)"},{"Id":"2163766137","IsPullRequest":false,"CreatedAt":"2024-03-01T16:38:04","Actor":"Drake53","Number":"72356","RawContent":null,"Title":"[Question] How to use functionality from nuget packages in project referenced source generator","State":"open","Body":"I'm trying to write a source generator which parses a .json file. Since source generators must be .net standard 2.0 there's no built-in json parsing library and I need to add a reference to either newtonsoft.json or system.text.json. The documentation for this:\r\nhttps://github.com/dotnet/roslyn/blob/main/docs/features/incremental-generators.cookbook.md#use-functionality-from-nuget-packages\r\n\r\nHowever, this only seems to work when consuming the generator as a nuget package. When the generator is added through a project reference this solution doesn't seem to work.\r\n\r\nFound a question on stackoverflow with the same issue but no answer, linking it here for reference:\r\nhttps://stackoverflow.com/questions/77895226/add-system-text-json-to-incremental-source-generator","Url":"https://github.com/dotnet/roslyn/issues/72356","RelatedDescription":"Open issue \"[Question] How to use functionality from nuget packages in project referenced source generator\" (#72356)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"2166083531","IsPullRequest":true,"CreatedAt":"2024-03-05T03:13:43","Actor":"dotnet-maestro[bot]","Number":"39167","RawContent":null,"Title":"[main] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdbeb850-6d82-4277-c391-08d8e9750d9d)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: bdbeb850-6d82-4277-c391-08d8e9750d9d\r\n- **Build**: 20240303.2\r\n- **Date Produced**: March 4, 2024 6:38:03 AM UTC\r\n- **Commit**: 63d5946581efcbca6a781d1a5d717f9c60c04add\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.templating**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n  - **Microsoft.TemplateEngine.Mocks**: [from 9.0.100-preview.3.24151.1 to 9.0.100-preview.3.24153.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/40f5bc0b55...63d5946581\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:bdbeb850-6d82-4277-c391-08d8e9750d9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39167","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/templating\" (#39167)"},{"Id":"2168100294","IsPullRequest":true,"CreatedAt":"2024-03-05T03:11:21","Actor":"dotnet-maestro[bot]","Number":"39191","RawContent":null,"Title":"[main] Update dependencies from dotnet/roslyn-analyzers","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7373e65e-2472-4105-649a-08d8e9757c68)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: 7373e65e-2472-4105-649a-08d8e9757c68\r\n- **Build**: 20240304.1\r\n- **Date Produced**: March 5, 2024 1:21:22 AM UTC\r\n- **Commit**: 3e60082c94c17f12b5fa28a972be99bac0cae8e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.roslyn-analyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: [from 9.0.0-preview.24151.1 to 9.0.0-preview.24154.1][1]\r\n  - **Microsoft.CodeAnalysis.PublicApiAnalyzers**: [from 3.11.0-beta1.24151.1 to 3.11.0-beta1.24154.1][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn-analyzers/compare/59b2d9dc38...3e60082c94\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7373e65e-2472-4105-649a-08d8e9757c68)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39191","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/roslyn-analyzers\" (#39191)"},{"Id":"2168099596","IsPullRequest":true,"CreatedAt":"2024-03-05T02:52:07","Actor":"github-actions[bot]","Number":"39190","RawContent":null,"Title":"[release/9.0.1xx-preview2] Disable package aliasing tests","State":"closed","Body":"Backport of #39144 to release/9.0.1xx-preview2\n\n/cc @dsplaisted","Url":"https://github.com/dotnet/sdk/pull/39190","RelatedDescription":"Closed or merged PR \"[release/9.0.1xx-preview2] Disable package aliasing tests\" (#39190)"},{"Id":"2167851875","IsPullRequest":true,"CreatedAt":"2024-03-05T02:45:14","Actor":"dotnet-maestro[bot]","Number":"39186","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Workload.Emscripten.Current.Manifest-9.0.100.Transport**: from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.SourceBuild.Intermediate.emsdk**: from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: aa69f164-2492-460a-3914-08d8e9750bf8\r\n- **Build**: 20240304.7\r\n- **Date Produced**: March 5, 2024 12:21:12 AM UTC\r\n- **Commit**: 119ec5a4d17dcb738aef2ebe5d04e5acf1a59fdb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.DependencyModel**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.HostModel**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.CodeDom**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **VS.Redist.Common.NetCore.TargetingPack.x64.9.0**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.SourceBuild.Intermediate.runtime.linux-x64**: [from 9.0.0-preview.3.24154.5 to 9.0.0-preview.3.24154.7][3]\r\n  - **Microsoft.NET.Workload.Emscripten.Current.Manifest-9.0.100.Transport**: [from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1][4]\r\n  - **Microsoft.SourceBuild.Intermediate.emsdk**: [from 9.0.0-preview.3.24126.1 to 9.0.0-preview.3.24128.1][4]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/0d74d1d515...119ec5a4d1\r\n[4]: https://github.com/dotnet/emsdk/compare/0f3e462442...e926eb7d96\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39186","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#39186)"},{"Id":"2168119542","IsPullRequest":false,"CreatedAt":"2024-03-05T01:55:23","Actor":"richlander","Number":"39192","RawContent":null,"Title":"Container inferencing for AOT can move to stable repo","State":"open","Body":"For container publishing with `PublishAot` (for a .NET 8 app), I see:\r\n\r\n```bash\r\n$ dotnet publish /t:PublishContainer\r\nMSBuild version 17.9.4+90725d08d for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  hello-dotnet -> /home/rich/hello-dotnet/bin/Release/net8.0/linux-x64/hello-dotnet.dll\r\n  Generating native code\r\n  hello-dotnet -> /home/rich/hello-dotnet/bin/Release/net8.0/linux-x64/publish/\r\n  Building image 'hello-chiseled-aot' with tags 'latest' on top of base image 'mcr.microsoft.com/dotnet/nightly/runtime-deps:8.0-jammy-chiseled-extra'.\r\n  Pushed image 'hello-chiseled-aot:latest' to local registry via 'docker'.\r\n```\r\n\r\nIn the \"use ICU\" case, the following image can be used: `mcr.microsoft.com/dotnet/runtime-deps:8.0-jammy-chiseled-extra`\r\n\r\nIn the invariant case, then the nightly AOT image remains correct.\r\n\r\nThis change can go into servicing. If it breaks anyone, we have other problems.\r\n\r\nThe non-nightly images and 8.0.200 arrived at around the same time, hence the timing. This is fine to patch after-the-fact.","Url":"https://github.com/dotnet/sdk/issues/39192","RelatedDescription":"Open issue \"Container inferencing for AOT can move to stable repo\" (#39192)"},{"Id":"2167980619","IsPullRequest":true,"CreatedAt":"2024-03-04T23:28:30","Actor":"dotnet-maestro[bot]","Number":"39188","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20240304.12\r\n- **Date Produced**: March 5, 2024 1:27:37 AM UTC\r\n- **Commit**: 32b772a470e3c7dc147d3d124c32199bb3e7b6bc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **dotnet-user-jwts**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **dotnet-user-secrets**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Components.SdkAnalyzers**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.JSInterop**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n  - **Microsoft.SourceBuild.Intermediate.aspnetcore**: [from 9.0.0-preview.3.24154.8 to 9.0.0-preview.3.24154.12][4]\r\n\r\n[4]: https://github.com/dotnet/aspnetcore/compare/2c0ee4c870...32b772a470\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39188","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/aspnetcore\" (#39188)"},{"Id":"2167174089","IsPullRequest":true,"CreatedAt":"2024-03-04T23:23:13","Actor":"dotnet-maestro[bot]","Number":"39180","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20240304.8\r\n- **Date Produced**: March 4, 2024 9:12:30 PM UTC\r\n- **Commit**: 2c0ee4c870556d823ea5a0b35a8ba1b8ae81142c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **dotnet-user-jwts**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **dotnet-user-secrets**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Components.SdkAnalyzers**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.JSInterop**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n  - **Microsoft.SourceBuild.Intermediate.aspnetcore**: [from 9.0.0-preview.3.24153.1 to 9.0.0-preview.3.24154.8][6]\r\n\r\n[6]: https://github.com/dotnet/aspnetcore/compare/b2dd5b427b...2c0ee4c870\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39180","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#39180)"},{"Id":"2167894633","IsPullRequest":false,"CreatedAt":"2024-03-04T22:24:13","Actor":"richlander","Number":"39187","RawContent":null,"Title":"Reconsider including BOM in templates","State":"open","Body":"It is unclear to me that there is any value in including these 3 bytes.\r\n\r\nI wrote a quick program to demonstrate this:\r\n\r\n```csharp\r\nFileStream file = File.Open(args[0], FileMode.Open,FileAccess.Read);\r\n\r\nfor (int i = 0; i < 10; i++)\r\n{\r\n    int b = file.ReadByte();\r\n    Console.WriteLine($\"{b}; {(char)b}\");\r\n}\r\n```\r\n\r\nWhat it produces:\r\n\r\n```bash\r\ndotnet run .\\testbom.csproj\r\n239; ï\r\n187; »\r\n191; ¿\r\n60; <\r\n80; P\r\n114; r\r\n111; o\r\n106; j\r\n101; e\r\n99; c\r\n```\r\n\r\nWhat I see with `cat`:\r\n\r\n![image](https://github.com/dotnet/sdk/assets/2608468/9b36b1db-53f6-4f65-9e80-688892b3f451)\r\n\r\nSee the leading space?\r\n\r\nIt would be great to define guidance if we should include BOMs in any UTF8 files (C#, csproj, ...) by default.","Url":"https://github.com/dotnet/sdk/issues/39187","RelatedDescription":"Open issue \"Reconsider including BOM in templates\" (#39187)"},{"Id":"2167759689","IsPullRequest":true,"CreatedAt":"2024-03-04T21:09:18","Actor":"Forgind","Number":"39185","RawContent":null,"Title":"Hide workload update message Fixes #37520","State":"open","Body":"Fixes #37520\r\n\r\nThis is based on https://github.com/dotnet/sdk/pull/38956, though the only important part from that PR is a list of the \"flags that trigger a silent restore.\" If any of those flags are specified, we shouldn't be sending a workload update message, so I disable it if any of them are specified.\r\n\r\nI was able to reproduce this issue pretty easily using the provided repro. I then introduced ad81a6674793b469bf71cb93833d51388392e7d0 and tried again, and it no longer reproduced.","Url":"https://github.com/dotnet/sdk/pull/39185","RelatedDescription":"Open PR \"Hide workload update message Fixes #37520\" (#39185)"},{"Id":"2167165673","IsPullRequest":true,"CreatedAt":"2024-03-04T21:08:25","Actor":"dotnet-maestro[bot]","Number":"39179","RawContent":null,"Title":"[main] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83dbe464-74c7-4fee-9f62-08db78870241)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 83dbe464-74c7-4fee-9f62-08db78870241\r\n- **Build**: 20240304.4\r\n- **Date Produced**: March 4, 2024 6:21:43 PM UTC\r\n- **Commit**: ca66024e6da7cced9921216763386bd43f400fbf\r\n- **Branch**: refs/heads/release/dev17.10\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.fsharp**: [from 8.0.300-beta.24152.1 to 8.0.300-beta.24154.4][2]\r\n  - **Microsoft.FSharp.Compiler**: [from 12.8.300-beta.24152.1 to 12.8.300-beta.24154.4][2]\r\n\r\n[2]: https://github.com/dotnet/fsharp/compare/ea8ef6edee...ca66024e6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:83dbe464-74c7-4fee-9f62-08db78870241)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39179","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/fsharp\" (#39179)"},{"Id":"2166655025","IsPullRequest":true,"CreatedAt":"2024-03-04T21:08:06","Actor":"dotnet-maestro[bot]","Number":"39171","RawContent":null,"Title":"[main] Update dependencies from dotnet/format","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n## From https://github.com/dotnet/format\r\n- **Subscription**: 2a60b6fb-ac35-4f56-2b1d-08d99e508e9d\r\n- **Build**: 20240304.1\r\n- **Date Produced**: March 4, 2024 11:29:54 AM UTC\r\n- **Commit**: a8002e38ae10922926adf567d4dad7321063fad4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.format**: [from 9.0.515201 to 9.0.515401][1]\r\n  - **dotnet-format**: [from 9.0.515201 to 9.0.515401][1]\r\n\r\n[1]: https://github.com/dotnet/format/compare/8b80c640d3...a8002e38ae\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39171","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/format\" (#39171)"},{"Id":"2167430729","IsPullRequest":true,"CreatedAt":"2024-03-04T21:04:47","Actor":"dotnet-maestro[bot]","Number":"39181","RawContent":null,"Title":"[main] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 9.0.0-preview.3.24127.2 to 9.0.0-preview.3.24152.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 43b77b68-0b3c-49dd-3915-08d8e9750bf8\r\n- **Build**: 20240304.1\r\n- **Date Produced**: March 4, 2024 6:00:28 PM UTC\r\n- **Commit**: 4051a04932f90bf80999fc7eb90b62a864cea325\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 9.0.0-preview.3.24129.1 to 9.0.0-preview.3.24154.1][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 9.0.0-preview.3.24129.1 to 9.0.0-preview.3.24154.1][1]\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24129.1 to 9.0.0-preview.3.24154.1][1]\r\n  - **VS.Redist.Common.WindowsDesktop.TargetingPack.x64.9.0**: [from 9.0.0-preview.3.24129.1 to 9.0.0-preview.3.24154.1][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 9.0.0-preview.3.24127.2 to 9.0.0-preview.3.24152.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/1628f7c406...4051a04932\r\n[2]: https://github.com/dotnet/wpf/compare/d4d3ab8a86...089e48a18e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39181","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/windowsdesktop\" (#39181)"},{"Id":"2167555451","IsPullRequest":true,"CreatedAt":"2024-03-04T21:04:24","Actor":"dotnet-maestro[bot]","Number":"39182","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: aa69f164-2492-460a-3914-08d8e9750bf8\r\n- **Build**: 20240304.5\r\n- **Date Produced**: March 4, 2024 6:46:46 PM UTC\r\n- **Commit**: 0d74d1d515926055ca4b4871e8002210755a7369\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.DependencyModel**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.Extensions.Logging**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NET.HostModel**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **VS.Redist.Common.NetCore.TargetingPack.x64.9.0**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n  - **Microsoft.SourceBuild.Intermediate.runtime.linux-x64**: [from 9.0.0-preview.3.24154.2 to 9.0.0-preview.3.24154.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/23b4030b75...0d74d1d515\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:aa69f164-2492-460a-3914-08d8e9750bf8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39182","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#39182)"},{"Id":"2167751169","IsPullRequest":true,"CreatedAt":"2024-03-04T21:04:02","Actor":"dotnet-maestro-bot","Number":"39184","RawContent":null,"Title":"[automated] Merge branch 'release/8.0.3xx' => 'main'","State":"open","Body":"I detected changes in the release/8.0.3xx branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/8.0.3xx by the following committers:\n\n* github-actions[bot]\n* v-wuzhai\n* dotnet-maestro[bot]\n* JL03-Yue\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/8.0.3xx\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/8.0.3xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/8.0.3xx-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/8.0.3xx-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/8.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/8.0.3xx-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/8.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/39184","RelatedDescription":"Open PR \"[automated] Merge branch 'release/8.0.3xx' => 'main'\" (#39184)"},{"Id":"2167573384","IsPullRequest":true,"CreatedAt":"2024-03-04T21:01:06","Actor":"github-actions[bot]","Number":"39183","RawContent":null,"Title":"[release/8.0.3xx] Disable package aliasing tests","State":"closed","Body":"Backport of #39144 to release/8.0.3xx\n\n/cc @dsplaisted","Url":"https://github.com/dotnet/sdk/pull/39183","RelatedDescription":"Closed or merged PR \"[release/8.0.3xx] Disable package aliasing tests\" (#39183)"},{"Id":"2167007725","IsPullRequest":true,"CreatedAt":"2024-03-04T19:07:28","Actor":"javiercn","Number":"39177","RawContent":null,"Title":"[Blazor] Move Service worker to static web assets in preparation for compressing and fingerprinting everything","State":"closed","Body":"* Copied the task and targets to static web assets.\r\n* Changed namespace\r\n* Left original task in BlazorWasm SDK for 5.0\r\n* Fixed tests","Url":"https://github.com/dotnet/sdk/pull/39177","RelatedDescription":"Closed or merged PR \"[Blazor] Move Service worker to static web assets in preparation for compressing and fingerprinting everything\" (#39177)"},{"Id":"2166919649","IsPullRequest":true,"CreatedAt":"2024-03-04T18:35:18","Actor":"dotnet-maestro[bot]","Number":"39176","RawContent":null,"Title":"[main] Update dependencies from dotnet/xdt","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9807c903-be4b-42bb-6746-08dbf65391dd)\r\n## From https://github.com/dotnet/xdt\r\n- **Subscription**: 9807c903-be4b-42bb-6746-08dbf65391dd\r\n- **Build**: 20240304.2\r\n- **Date Produced**: March 4, 2024 2:49:29 PM UTC\r\n- **Commit**: a86209be9faeafe337633ab1746df7bc19a83538\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.xdt**: [from 9.0.0-preview.24126.1 to 9.0.0-preview.24154.2][2]\r\n  - **Microsoft.Web.Xdt**: [from 9.0.0-preview.24126.1 to 9.0.0-preview.24154.2][2]\r\n\r\n[2]: https://github.com/dotnet/xdt/compare/9f7ab07fc4...a86209be9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9807c903-be4b-42bb-6746-08dbf65391dd)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39176","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/xdt\" (#39176)"},{"Id":"2167165446","IsPullRequest":true,"CreatedAt":"2024-03-04T15:49:22","Actor":"dotnet-maestro[bot]","Number":"39178","RawContent":null,"Title":"[release/9.0.1xx-preview2] Update dependencies from dotnet/fsharp","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:abbfafc2-3b1a-4044-8bec-08dc34c10904)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: abbfafc2-3b1a-4044-8bec-08dc34c10904\r\n- **Build**: 20240304.4\r\n- **Date Produced**: March 4, 2024 6:21:43 PM UTC\r\n- **Commit**: ca66024e6da7cced9921216763386bd43f400fbf\r\n- **Branch**: refs/heads/release/dev17.10\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.fsharp**: [from 8.0.300-beta.24152.1 to 8.0.300-beta.24154.4][2]\r\n  - **Microsoft.FSharp.Compiler**: [from 12.8.300-beta.24152.1 to 12.8.300-beta.24154.4][2]\r\n\r\n[2]: https://github.com/dotnet/fsharp/compare/ea8ef6edee...ca66024e6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:abbfafc2-3b1a-4044-8bec-08dc34c10904)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39178","RelatedDescription":"Open PR \"[release/9.0.1xx-preview2] Update dependencies from dotnet/fsharp\" (#39178)"},{"Id":"2166888689","IsPullRequest":true,"CreatedAt":"2024-03-04T13:46:07","Actor":"dotnet-maestro[bot]","Number":"39175","RawContent":null,"Title":"[release/8.0.3xx] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a201eece-b86b-4a05-941d-08dc11e2fbb8)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: a201eece-b86b-4a05-941d-08dc11e2fbb8\r\n- **Build**: 20240303.1\r\n- **Date Produced**: March 4, 2024 6:28:08 AM UTC\r\n- **Commit**: a63f333eb83176754b5023bfa20b2edda8f74798\r\n- **Branch**: refs/heads/release/8.0.3xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 8.0.300-preview.24127.3 to 8.0.300-preview.24153.1][1]\r\n  - **Microsoft.TemplateEngine.Mocks**: [from 8.0.300-preview.24127.3 to 8.0.300-preview.24153.1][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/99a0910a07...a63f333eb8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a201eece-b86b-4a05-941d-08dc11e2fbb8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39175","RelatedDescription":"Open PR \"[release/8.0.3xx] Update dependencies from dotnet/templating\" (#39175)"},{"Id":"2166887390","IsPullRequest":true,"CreatedAt":"2024-03-04T13:45:29","Actor":"dotnet-maestro[bot]","Number":"39174","RawContent":null,"Title":"[release/8.0.3xx] Update dependencies from dotnet/razor","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:113b2065-88fb-4a3d-be71-08dc11e0db9c)\r\n## From https://github.com/dotnet/razor\r\n- **Subscription**: 113b2065-88fb-4a3d-be71-08dc11e0db9c\r\n- **Build**: 20240304.2\r\n- **Date Produced**: March 4, 2024 11:34:16 AM UTC\r\n- **Commit**: 6256b82c2cacd2a46cf9fdc8e3de6fa4fabe64f4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.2][1]\r\n  - **Microsoft.CodeAnalysis.Razor.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.2][1]\r\n  - **Microsoft.NET.Sdk.Razor.SourceGenerators.Transport**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.2][1]\r\n\r\n[1]: https://github.com/dotnet/razor/compare/d4c396a9c9...6256b82c2c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:113b2065-88fb-4a3d-be71-08dc11e0db9c)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39174","RelatedDescription":"Open PR \"[release/8.0.3xx] Update dependencies from dotnet/razor\" (#39174)"},{"Id":"2166862840","IsPullRequest":true,"CreatedAt":"2024-03-04T13:33:24","Actor":"dotnet-maestro[bot]","Number":"39173","RawContent":null,"Title":"[main] Update dependencies from dotnet/sourcelink","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9827e13-0308-49ec-8132-08db410fc9e5)\r\n## From https://github.com/dotnet/sourcelink\r\n- **Subscription**: d9827e13-0308-49ec-8132-08db410fc9e5\r\n- **Build**: 20240303.1\r\n- **Date Produced**: March 4, 2024 12:24:01 AM UTC\r\n- **Commit**: aef6b239ba3c11823cf150d9f042d9965e04bf9f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.sourcelink**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.Build.Tasks.Git**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.SourceLink.AzureRepos.Git**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.SourceLink.Bitbucket.Git**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.SourceLink.Common**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.SourceLink.GitHub**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n  - **Microsoft.SourceLink.GitLab**: [from 9.0.0-beta.24152.1 to 9.0.0-beta.24153.1][1]\r\n\r\n[1]: https://github.com/dotnet/sourcelink/compare/aef6b239ba...aef6b239ba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9827e13-0308-49ec-8132-08db410fc9e5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39173","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/sourcelink\" (#39173)"},{"Id":"2166829539","IsPullRequest":false,"CreatedAt":"2024-03-04T13:17:05","Actor":"dsplaisted","Number":"39172","RawContent":null,"Title":"Package reference alias tests are disabled","State":"open","Body":"The tests in `GivenThatWeHaveAPackageReferenceWithAliases` have started failing somewhat consistently in CI.  I haven't been able to reproduce the issue locally.  The failures look something like this:\r\n\r\n```\r\n/private/tmp/helix/working/B27409DB/w/A434093A/e/testExecutionDirectory/CanBuildProje---B79B2BCA/Project/Project.cs(9,13): error CS0118: 'First.A' is a namespace but is used like a type [/private/tmp/helix/working/B27409DB/w/A434093A/e/testExecutionDirectory/CanBuildProje---B79B2BCA/Project/Project.csproj]\r\n/private/tmp/helix/working/B27409DB/w/A434093A/e/testExecutionDirectory/CanBuildProje---B79B2BCA/Project/Project.cs(10,20): error CS0234: The type or namespace name 'B' does not exist in the namespace '<global namespace>' (are you missing an assembly reference?) [/private/tmp/helix/working/B27409DB/w/A434093A/e/testExecutionDirectory/CanBuildProje---B79B2BCA/Project/Project.csproj]\r\n```\r\n\r\nThis seems like it's probably a test issue, perhaps related to the fact that these tests create and then consume NuGet packages within the test.  Because of this, I am going to disable these tests for now.  To further investigate, we probably need to figure out how to get a binlog of the failures in Helix.","Url":"https://github.com/dotnet/sdk/issues/39172","RelatedDescription":"Open issue \"Package reference alias tests are disabled\" (#39172)"},{"Id":"2166527679","IsPullRequest":true,"CreatedAt":"2024-03-04T10:44:15","Actor":"dotnet-maestro[bot]","Number":"39170","RawContent":null,"Title":"[main] Update dependencies from dotnet/razor","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5ba65a57-3ed4-48c1-1d9c-08dac299ead7)\r\n## From https://github.com/dotnet/razor\r\n- **Subscription**: 5ba65a57-3ed4-48c1-1d9c-08dac299ead7\r\n- **Build**: 20240304.7\r\n- **Date Produced**: March 5, 2024 1:45:00 AM UTC\r\n- **Commit**: abea4931e349c8b0fb296e0a8efd2767bfb79be3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.razor**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.CodeAnalysis.Razor.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.NET.Sdk.Razor.SourceGenerators.Transport**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n\r\n[5]: https://github.com/dotnet/razor/compare/d4c396a9c9...abea4931e3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5ba65a57-3ed4-48c1-1d9c-08dac299ead7)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39170","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/razor\" (#39170)"},{"Id":"2166527613","IsPullRequest":true,"CreatedAt":"2024-03-04T10:44:13","Actor":"dotnet-maestro[bot]","Number":"39169","RawContent":null,"Title":"[release/9.0.1xx-preview2] Update dependencies from dotnet/razor","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:da454cf3-4f40-42e9-345c-08dc36ecb67e)\r\n## From https://github.com/dotnet/razor\r\n- **Subscription**: da454cf3-4f40-42e9-345c-08dc36ecb67e\r\n- **Build**: 20240304.7\r\n- **Date Produced**: March 5, 2024 1:45:00 AM UTC\r\n- **Commit**: abea4931e349c8b0fb296e0a8efd2767bfb79be3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.razor**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.CodeAnalysis.Razor.Tooling.Internal**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n  - **Microsoft.NET.Sdk.Razor.SourceGenerators.Transport**: [from 7.0.0-preview.24151.1 to 7.0.0-preview.24154.7][5]\r\n\r\n[5]: https://github.com/dotnet/razor/compare/d4c396a9c9...abea4931e3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:da454cf3-4f40-42e9-345c-08dc36ecb67e)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39169","RelatedDescription":"Open PR \"[release/9.0.1xx-preview2] Update dependencies from dotnet/razor\" (#39169)"},{"Id":"2166000887","IsPullRequest":true,"CreatedAt":"2024-03-04T09:57:27","Actor":"dotnet-maestro-bot","Number":"39166","RawContent":null,"Title":"[automated] Merge branch 'release/8.0.3xx' => 'main'","State":"closed","Body":"I detected changes in the release/8.0.3xx branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/8.0.3xx by the following committers:\n\n* v-wuzhai\n* dotnet-maestro[bot]\n* JL03-Yue\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/8.0.3xx\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/8.0.3xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/8.0.3xx-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/8.0.3xx-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/8.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/8.0.3xx-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/8.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/8.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/39166","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/8.0.3xx' => 'main'\" (#39166)"},{"Id":"2166246539","IsPullRequest":false,"CreatedAt":"2024-03-04T08:27:13","Actor":"v-xiaofchen","Number":"39168","RawContent":null,"Title":"[NETSDKE2E] Fail to load mstest project with NET 9 preview.2 SDK installed.","State":"open","Body":"### Describe the bug\r\nFail to load mstest project(.NET9 preview.2).\r\n\r\n### To Reproduce\r\n1. Install C# extension v2.19.13 (latest pre-release from the marketplace)\r\n2. Install C# DevKit extension v1.4.2  (latest pre-release from the marketplace)\r\n3. Install Intellicode for C# DevKit extension v0.1.26  (latest release from the marketplace)\r\n4. Install the .NET9.0 SDK 9.0.100-preview.2.24129.7(runtime-9.0.0-preview.2.24128.5) from https://dev.azure.com/dnceng/internal/_build/results?buildId=2390934&view=artifacts&pathAsName=false&type=publishedArtifacts\r\n5. Create a mstest project and open it on VS Code.\r\n6. Build the mstest project and observer the Test Explorer\r\n\r\n**Expected:**\r\nMstest can load successfully.\r\n\r\n### Exceptions (if any)\r\nFail to load mstest project(.NET9 preview2).\r\n![test debug mymstest11](https://github.com/dotnet/sdk/assets/99376012/f9ecf8d5-3206-45b0-9a1b-e0adf3bc98c5)\r\n\r\n### Note\r\n1.It's not repro on xunit/nunit test\r\n2.It's not repro on .NET9 preview1\r\n3.I tracked through the bug https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1974677 before, but it closed today so I open a new bug to track this issue.\r\n\r\n### dotnet --info\r\n.NET SDK:\r\n Version:           9.0.100-preview.2.24129.7\r\n Commit:            d0f8457eb7\r\n Workload version:  9.0.100-manifests.04914b26\r\n MSBuild version:   17.10.0-preview-24127-03+6f44380e4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.25398\r\n OS Platform: Windows\r\n RID:         win-arm64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100-preview.2.24129.7\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      9.0.0-preview.2.24128.5\r\n  Architecture: arm64\r\n  Commit:       8e5e748c5c\r\n\r\n.NET SDKs installed:\r\n  9.0.100-preview.2.24129.7 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0-preview.2.24128.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.2.24128.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.2.24128.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download","Url":"https://github.com/dotnet/sdk/issues/39168","RelatedDescription":"Open issue \"[NETSDKE2E] Fail to load mstest project with NET 9 preview.2 SDK installed.\" (#39168)"},{"Id":"2165861296","IsPullRequest":true,"CreatedAt":"2024-03-04T06:02:29","Actor":"dotnet-maestro[bot]","Number":"39165","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20240303.1\r\n- **Date Produced**: March 4, 2024 3:41:25 AM UTC\r\n- **Commit**: b2dd5b427ba5c21cdc5572d0d9bf94598721c2f7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **dotnet-user-jwts**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **dotnet-user-secrets**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Components.SdkAnalyzers**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.JSInterop**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n  - **Microsoft.SourceBuild.Intermediate.aspnetcore**: [from 9.0.0-preview.3.24151.7 to 9.0.0-preview.3.24153.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/c7c76d7d3b...b2dd5b427b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/39165","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#39165)"},{"Id":"2165613040","IsPullRequest":false,"CreatedAt":"2024-03-03T23:06:59","Actor":"corngood","Number":"39164","RawContent":null,"Title":"Missing tag for v8.0.201","State":"open","Body":"Apologies if I'm misunderstanding something, but shouldn't there be a tag here for `v8.0.201`?  I'm trying to track down the corresponding source.  There seem to be tags for all other recent releases.","Url":"https://github.com/dotnet/sdk/issues/39164","RelatedDescription":"Open issue \"Missing tag for v8.0.201\" (#39164)"},{"Id":"2165473498","IsPullRequest":false,"CreatedAt":"2024-03-03T18:01:28","Actor":"AsianWizard99","Number":"39163","RawContent":null,"Title":"NETSDK1064: Package Microsoft.EntityFrameworkCore.Analyzers, version 7.0.2 was not found","State":"open","Body":"I getting this error while building project through gitlab.\r\n\r\n\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267, 5): error NETSDK1064: Package Microsoft.EntityFrameworkCore.Analyzers, version 7.0.2 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.\r\n\r\n\r\nAny suggestions or solutions !","Url":"https://github.com/dotnet/sdk/issues/39163","RelatedDescription":"Open issue \"NETSDK1064: Package Microsoft.EntityFrameworkCore.Analyzers, version 7.0.2 was not found\" (#39163)"},{"Id":"2165264515","IsPullRequest":false,"CreatedAt":"2024-03-03T09:12:04","Actor":"livan3li","Number":"39162","RawContent":null,"Title":"Getting the error CS0103 The name 'paramName' does not exist in the current context in terminal but not in IDE","State":"open","Body":"### Describe the bug\r\nIf I try to build project that have the following code in the project I get\r\n> error CS0103: The name 'paramName' does not exist in the current context\r\n\r\nin the terminal.   \r\n\r\n`[Route($\"{nameof(paramName)}\")] \r\npublic async Task<IActionResult<bool>> GetValue(string paramName) \r\n{ \r\n      // some code... \r\n}`\r\n\r\nBut if I try to build same code/project through solution explorer in vs code like in the following picture I do not get any error. \r\n![image](https://github.com/dotnet/sdk/assets/46044710/bc77993b-5bfc-4b54-8a3e-187876a36c08)\r\n\r\nAnd also I do not get any error from VS Code telling the above error. I get only if I run dotnet build command in the terminal.\r\n\r\nI don't know if this error is caused by C# Extension or dotnet SDK. I wanted to post bug here. \r\n\r\n### To Reproduce\r\n1. Try to build above sample code two different ways.\r\n   a. By Solution Explorer like in the image\r\n   b. By dotnet build command in terminal  \r\n\r\n### Further technical details\r\n- DOTNET VERSION: 6.0.418\r\n- C# Extension Version: 2.19.13\r\n- C# Dev Kit Version: 1.3.10\r\n- VSCode Version: 1.87.0 \r\n- OS: Linux Debian.12-x64","Url":"https://github.com/dotnet/sdk/issues/39162","RelatedDescription":"Open issue \"Getting the error CS0103 The name 'paramName' does not exist in the current context in terminal but not in IDE\" (#39162)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"2134768080","IsPullRequest":false,"CreatedAt":"2024-02-14T16:50:56","Actor":"richlander","Number":"297","RawContent":null,"Title":".NET 9 Preview 1","State":"open","Body":"Welcome to .NET 9! We're happy to deliver the first preview of .NET 9 and share in-depth release notes that provide varied and impressive improvements for the first preview out of the gate. We also published [Our Vision for .NET 9](https://aka.ms/dotnet/9/vision), which describes some of the broad areas we intend to deliver on by the final November 2024 release.\r\n\r\nYou can find [detailed release notes about the new features in .NET 9 Preview 1](https://github.com/dotnet/core/tree/main/release-notes/9.0/preview/preview1) and up-to-date [What's new in .NET 9](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-9/overview) in [.NET docs](https://learn.microsoft.com/dotnet/core/introduction).\r\n\r\nThe latest .NET 9 release is always available at [dotnet.microsoft.com](https://dotnet.microsoft.com/download/dotnet/9.0) and [.NET 9 Releases](https://github.com/dotnet/core/blob/main/release-notes/9.0/README.md).\r\n\r\nYou may be surprised to be reading about our release on GitHub Discussions. Check out [Welcome to .NET Release News on GitHub Discussions!](https://github.com/dotnet/core/discussions/9131) to learn more about how we're approaching documenting and sharing preview releases.\r\n\r\n## Team Announcements\r\n\r\nCheck out the team announcements.\r\n\r\n* .NET 9: [Announcement](https://github.com/dotnet/core/discussions/9167)\r\n* .NET Data and EF Core: [Announcement](https://github.com/dotnet/efcore/issues/33030)\r\n* .NET MAUI: [Announcement](https://github.com/dotnet/maui/discussions/20558)\r\n* ASP.NET Core: [Announcement](https://github.com/dotnet/aspnetcore/discussions/54007)\r\n* Libraries [Announcement](https://github.com/dotnet/runtime/discussions/98372)\r\n* Runtime: [Announcement](https://github.com/dotnet/runtime/discussions/98372)\r\n* Containers: [Announcement](https://github.com/dotnet/dotnet-docker/discussions/5198)\r\n\r\nPlease tell us what you think about the new release. There is lots more to come!","Url":"https://github.com/dotnet/announcements/issues/297","RelatedDescription":"Open issue \".NET 9 Preview 1\" (#297)"},{"Id":"2132888993","IsPullRequest":false,"CreatedAt":"2024-02-13T18:09:40","Actor":"rbhanda","Number":"296","RawContent":null,"Title":"Microsoft Security Advisory CVE-2024-21404 | .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-21404 | .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists in .NET with OpenSSL support when parsing X509 certificates. \r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/98373\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThis vulnerability does not affect .NET-based web servers running on Windows.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.26 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.15 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0.1 or earlier.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.2  Runtime  or .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.16 or SDK 7.0.116 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.27 or SDK 6.0.419 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-21404]( https://www.cve.org/CVERecord?id=CVE-2024-21404)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n","Url":"https://github.com/dotnet/announcements/issues/296","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2024-21404 | .NET Denial of Service Vulnerability\" (#296)"},{"Id":"2132885449","IsPullRequest":false,"CreatedAt":"2024-02-13T18:08:01","Actor":"rbhanda","Number":"295","RawContent":null,"Title":"Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET 6.0, ASP.NET 7.0 and, ASP.NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA vulnerability exists in ASP.NET applications using SignalR where a malicious client can result in a denial-of-service.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/54008\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.26 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.15 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0.1 or earlier.\r\n\r\n## <a name=\"affected-packages\"></a>Affected Packages\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\r\n\r\n### <a name=\"ASP.NET 6\"></a>ASP.NET 6.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                    |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                    |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                    |  <= 6.0.26 | 6.0.27\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                    |  <= 6.0.26 | 6.0.27\r\n\r\n\r\n\r\n### <a name=\"ASP.NET 7\"></a>ASP.NET 7.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)         |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)    |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)    |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)              |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)              |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 7.0.15 | 7.0.16\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 7.0.15 | 7.0.16\r\n\r\n### <a name=\"ASP.NET 7\"></a>ASP.NET 8.0\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)          |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)    |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)|  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 8.0.2 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)              |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)              |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)             |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 8.0.1 | 8.0.2\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 8.0.1 | 8.0.2\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software) or [affected packages](#affected-packages) , you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.2  Runtime or .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.16 or SDK 7.0.116 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.27 or SDK 6.0.419 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-21386]( https://www.cve.org/CVERecord?id=CVE-2024-21386)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_","Url":"https://github.com/dotnet/announcements/issues/295","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability\" (#295)"},{"Id":"2132883374","IsPullRequest":false,"CreatedAt":"2024-02-13T18:06:52","Actor":"rbhanda","Number":"294","RawContent":null,"Title":".NET February 2024 Updates","State":"open","Body":"Microsoft released the following [.NET Updates in January 2024](https://devblogs.microsoft.com/dotnet/january-2024-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET February 2024 Updates </h3>\r\n\r\nToday, we are releasing .NET 8.0.2, .NET 7.0.16, .NET 6.0.27 updates\r\n\r\n* [.NET 8.0.2 and .NET SDK 8.0.200](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.2/8.0.2.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\r\n* [.NET 7.0.16 and .NET SDK 7.0.406](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.16/7.0.16.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.27 and .NET SDK 6.0.418](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.27/6.0.27.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n ","Url":"https://github.com/dotnet/announcements/issues/294","RelatedDescription":"Open issue \".NET February 2024 Updates\" (#294)"},{"Id":"2127995114","IsPullRequest":false,"CreatedAt":"2024-02-10T00:04:59","Actor":"blowdart","Number":"293","RawContent":null,"Title":"BinaryFormatter is being removed in .NET 9","State":"open","Body":"Ever since .NET Core 1.0, we in .NET Security have been trying to lay ``BinaryFormatter`` to rest. It’s long been known by security practitioners that any deserializer, binary or text, which allows its input to carry information about the objects to be created is a security problem waiting to happen. There is even a Common Weakness Enumeration (CWE) that describes the issue, [CWE-502 “Deserialization of Untrusted Data”](https://cwe.mitre.org/data/definitions/502.html) and examples of this type of vulnerability run from security issues in Exchange through security issues in Apache. Within Microsoft the use of ``BinaryFormatter`` with untrusted input has caused many instances of heartache, late nights, and weekend work trying to produce a solution.\r\n\r\nIn .NET Core 1.0 we removed ``BinaryFormatter`` entirely due to its known risks, but without a clear path to using something safer customer demand brought it back to .NET Core 1.1. Since then, we have been on the path to removal, slowly turning it off by default in multiple project types but letting you opt-in via flags if you still needed it for backward compatibility. .NET 9 sees the culmination of this effort with the removal of ``BinaryFormatter``. In .NET 9 these flags will no longer exist and the in-box implementation of ``BinaryFormatter`` will throw exceptions in any project type when you try to use it. However, if you are committed to using a class that cannot be made secure you will still be able to.\r\n\r\n## It's not that it’s binary\r\n\r\nWe pick on ``BinaryFormatter`` because of its ubiquitous use, but the problem is not that the payload is binary, the problem is that the payload tells .NET what objects to create. That capability is what makes ``BinaryFormatter`` so popular, you can throw pretty much any class at it, and it will serialize and deserialize it correctly without developers having to do any work. However, it is also what makes it so dangerous.\r\n\r\nThere are classes within .NET which, by design, can run arbitrary code, and if you try to deserialize those through any deserialization code that creates objects based on the payload you end up with “Remote Code Execution” (RCE), a class of security vulnerability that allows the attacker to run their own code within your application, under the privileges your application has.\r\n\r\nThis has been a known problem as far back as 2012, when the Black Hat security conference featured the canonical presentation on .NET’s version of the problem, [Are you my type? Breaking .NET through Serialization, James Forshaw](https://paper.bobylive.com/Meeting_Papers/BlackHat/USA-2012/BH_US_12_Forshaw_Are_You_My_Type_WP.pdf). There’s even a GitHub repository dedicated to hunting and showing these types of attacks in .NET, [https://github.com/pwntester/ysoserial.net](https://github.com/pwntester/ysoserial.net).\r\n\r\nImagine your code has a class DeleteAllMyData. If you accept a payload from untrusted input, for example a web page, an attacker can create a payload that contains an instance of DeleteAllMyData and when you deserialize that payload you will get a chance to discover if your database backups actually restore.\r\n\r\nOther .NET serialization formats (and serialization formats in other languages and frameworks) allow for class information to be passed in a payload, to pick on our own framework ``SoapFormatter``, ``LosFormatter``, ``NetDataContractSerializer`` and ``ObjectStateFormatter`` all exhibit the same dangerous characteristics.\r\n\r\nEven JSON.NET has an opt-in option to allow the creation of a payload that specifies class names, and that is a text format, not a binary one. Other JSON deserializers (both .NET and Java) suffered from the same problem, as demonstrated at Black Hat 2017, [Friday the 13th JSON Attacks, Alvaro Muñoz & Oleksandr Mirosh](https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-JSON-Attacks-wp.pdf).\r\n\r\nYour takeaway should be that there’s nothing inherently wrong with a binary payload, it’s the fact that the ``BinaryFormatter`` payload contains instructions on the classes to be created, and what should go into that class’s properties that make it so dangerous. Other serializers, including some JSON serializers, also have the same ability, making them equally dangerous to use.\r\n\r\n## Real Word Examples of BinaryFormatter security bugs\r\n\r\nWithin Microsoft, ``BinaryFormatter`` has been the cause of a quite a few security problems, including:\r\n\r\n* In Exchange, [CVE-2021-42321](https://packetstormsecurity.com/files/166153/Microsoft-Exchange-Server-Remote-Code-Execution.html), where a binder had a spelling mistake that led to RCE.\r\n* In Azure DevOps, [CVE-2019-1306](https://www.zerodayinitiative.com/blog/2019/10/23/cve-2019-1306-are-you-my-index), where invalid MarkDown used ``BinaryFormatter`` and granted RCE.\r\n* In SharePoint, [CVE-2022-22005](https://blog.viettelcybersecurity.com/cve-2022-22005-microsoft-sharepoint-rce-2/), where loading images for charts used ``BinaryFormatter`` and once again lead to RCE.\r\n\r\nThere has been an outright ban on using ``BinaryFormatter`` for new projects at Microsoft for years, and an ongoing effort to remove it from older code for almost as long as the usage ban in new code. We have added code analyzers, warnings, and public documentation, and yet still we see people using it and ending up with RCE bugs. It feels like we need to do more.\r\n\r\n## BinaryFormatter is not fixable\r\n\r\n``BinaryFormatter`` has other problems around algorithmic complexity, unbounded cache growth, and unintended object graph edge manipulation. If we take out one insecure piece, replace it with a secure piece, and keep going until all the insecure pieces are replaced there is not much of the original ``BinaryFormatter`` left. A secure version would have a vastly different API shape and it could not be a drop-in replacement. It would require massive refactoring of application code to use, so, really, would it even be ``BinaryFormatter`` anymore?\r\n\r\nSerialization binders, a type of class used to inspect types during deserialization, are often proposed as a control mechanism to stop ``BinaryFormatter`` doing bad things, but there are code paths in ``BinaryFormatter`` that bypass binders by design, and writing a correct binder that isn’t vulnerable to a Denial of Service (DoS) attack is extremely hard.\r\n\r\n## The plan for .NET 9\r\n\r\nFor the last few .NET releases newly introduced project types such as Blazor or MAUI projects have been unable to use ``BinaryFormatter`` at all. ASP.NET projects are particularly vulnerable as their entire purpose is to take untrusted input and were also part of the ban. For some, older, project types you have been able to opt into using ``BinaryFormatter`` by setting a flag.\r\n\r\nOur current intentions are:\r\n\r\n1. The in-box implementation of ``BinaryFormatter`` will throw exceptions when you try to use it, even if you set any of the settings that previously enabled its use. We are also removing these settings.\r\n2. A new NuGet package will be provided, (with a suitable name like Microsoft.Unsupported.BinaryFormatter) which you could add to your projects. With a small config change in your app, ``BinaryFormatter`` will appear again, which is useful if you judge the risk of ``BinaryFormatter`` acceptable for your use cases. This NuGet package will be permanently marked as vulnerable so that dependency and code scanners can detect ``BinaryFormatter`` usage easily.\r\n3. We will also provide a safe reader in its own NuGet package. This reader will allow you to read a ``BinaryFormatter`` payload and it will return an object graph describing the payload. Each node in the graph will represent an object in the payload and each edge represents a reference between objects.\r\n\r\nThe safe reader will allow you to evaluate the classes within a ``BinaryFormatter`` payload, providing a representation of the object graph with each node containing information on the object type, and a list of its fields and their values. The node structure we are considering looks as follows:\r\n\r\n```csharp\r\npublic class Node\r\n{\r\n    public SomeTypeDescriptor ObjectType;\r\n    public Dictionary<string, object> Fields;\r\n}\r\n```\r\n\r\nWe will use a new class for the object type descriptor (whose name is yet to be decided) to impede naïve developers calling ``Type.GetType(theNodeType)`` and reintroducing the same fundamentally insecure behavior that we are trying to stop.\r\n\r\nSay you had had a class ``Customer`` and a class ``Address``, and your customer had a ``ShippingAddress`` and ``BillingAddress``, both of which are properties in the customer class, with a type of ``Address``. The fields within the ``Customer`` object node would be something like ``{ \"ShippingAddress\", node_for_ship_addr }`` and ``{ \"BillingAddress\", node_for_bill_addr }``.\r\n\r\nThis graph will allow you to both validate the types in the payload against types you are expecting and provide data you can use to rehydrate your objects.\r\n\r\n## Preparing for migration\r\n\r\nTo migrate away from ``BinaryFormatter`` is going to take work. There is no drop-in replacement, nor is there a single path that fits everyone because everyone’s classes are different and there are too many varied use cases.\r\n\r\nThe first step to migrating away from ``BinaryFormatter`` should be selecting a new serialization format. Remember that binary representation is safe if the produced payload does not instruct the deserialization process to create types. The same restriction applies to text-based formats.\r\n\r\nAt Microsoft, a lot of teams have moved from ``BinaryFormatter`` to ``[ProtoBuf](https://protobuf.dev/getting-started/csharptutorial/)`` (you will even see some familiar names in the commit history for the C# version). Other teams, whose data is text and where textual representation have advantages like easy searching have moved to JSON.\r\n\r\nThere are a lot of choices out there, but we cannot pick a winner for you. Each potential serializer has pluses and minuses, and how you weigh these is a decision only you can make for your application. Factors can include speed, memory consumption, storage costs, whether it is human readable, whether it is standards based and so on.\r\n\r\nThe ideal safe use of the proposed SafeReader class is to perform conversions of existing data into your chosen new serialization format and run this conversion in as much isolation as possible, for example a virtual machine or a container, again analyzing the types in each payload, rehydrating objects, and then reserializing them in your chosen serialization format.\r\n\r\nIf your class properties are primitive types, for example int, bool, or strings then the proposed safe reader could work as part of a replacement deserialization mechanism at runtime, leaving you to do the object rehydration once you have validated the types are those you expect.\r\n\r\nOr, if you accept the risk of Remote Code Execution, or, if you are sure that no-one can tamper with your messages or data (such a promise is extremely hard to make for online systems or for desktop or mobile apps) then you might consider using the proposed NuGet package. If you choose to take this route, please remember that this package is unsupported. We will not fix security issues in ``BinaryFormatter``.\r\n\r\n## Summary\r\n\r\nIf you are using ``BinaryFormatter`` now you should start looking at alternative serialization formats and decide what works for you in your specific circumstance, be it saved object graphs, network transports, temporary round tripped data, or any other type of data.\r\nYou should look at all your saved data and plan to convert any data serialized by ``BinaryFormatter`` into the new serialization format you have chosen.\r\n\r\nYou should evaluate how much backwards compatibility you need, and how long you need it for.\r\n\r\nFinally, you need to get off ``BinaryFormatter``, it is too dangerous to use any more and that is why it is leaving the .NET runtime.\r\n\r\n[Discussion Issue](https://github.com/dotnet/runtime/issues/98245)","Url":"https://github.com/dotnet/announcements/issues/293","RelatedDescription":"Open issue \"BinaryFormatter is being removed in .NET 9\" (#293)"},{"Id":"2072888869","IsPullRequest":false,"CreatedAt":"2024-01-09T18:00:52","Actor":"rbhanda","Number":"292","RawContent":null,"Title":" Microsoft Security Advisory CVE-2024-0056: Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data provider Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-0056: Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data provider Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET's System.Data.SqlClient and Microsoft.Data.SqlClient NuGet Packages. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA vulnerability exists in the Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data provider where an attackercan perform an AiTM (adversary-in-the-middle) attack between the SQL client and the SQL server. This may allow the attacker to steal authentication credentials intended for the database server, even if the connection is established over an encrypted channel like TLS.\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf you are not using the System.Data.SqlClient or Microsoft.Data.SqlClient package libraries within your application, you are not affected by this vulnerability.\r\n\r\n## <a name=\"affected-packages\"></a>Affected packages\r\n\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\n[System.Data.SqlClient](https://www.nuget.org/packages/System.Data.SqlClient/) | <4.8.6 | 4.8.6\r\n[Microsoft.Data.SqlClient](https://www.nuget.org/packages/Microsoft.Data.SqlClient/) | <2.1.7, < 3.1.5, <4.0.5, <5.1.3 | 2.1.7, 3.1.5, 4.0.5, >=5.1.3\r\n\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny application that has a direct or transitive dependency on the  [affected packages](#affected-packages) listed above are vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* If you are using System.Data.SqlClient on .NET 6.0, .NET 7.0 or, .NET 8.0 you must update the nuget package to an updated version as listed in the [affected packages](#affected-packages).\r\n* If you are using Microsoft.Data.SqlClient, anywhere (any version of .NET Framework or .NET) and you are using a version that is vulnerable you must update as listed in the [affected packages](#affected-packages).\r\nIf you are using the System.Data.SqlClient package from a .NET Framework (any version) application, you must install the January 2024 .NET Framework updates made available via Windows Update or Microsoft Update. You should also consider updating the System.Data.SqlClient package as keeping dependencies up to date is good general hygiene, but updating this package is neither necessary nor sufficient to fix the issue in a .NET Framework-based application.\r\n\r\nIf you don't know the difference between Microsoft.Data.SqlClient and System.Data.SqlClient please read the [Microsoft.Data.SqlClient initial announcement](https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/)  for an explanation,\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0 or .NET 8.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-0056]( https://www.cve.org/CVERecord?id=CVE-2024-0056)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 09, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-01-09_","Url":"https://github.com/dotnet/announcements/issues/292","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2024-0056: Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data provider Information Disclosure Vulnerability\" (#292)"},{"Id":"2072888736","IsPullRequest":false,"CreatedAt":"2024-01-09T18:00:47","Actor":"rbhanda","Number":"291","RawContent":null,"Title":"Microsoft Security Advisory CVE-2024-0057: .NET Security Feature bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-0057: .NET Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/96700\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.24 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.13 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0.0.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.1  Runtime  or .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.15 or SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.26 or SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Why does this vulnerability have such a high CVSS score?\r\n\r\nThe CVSS scoring guide recommends using a reasonable worst-case implementation scenario when scoring vulnerabilities in software libraries. Vulnerabilities in .NET and similar products are scored with this advice in mind. The score for your implementation this product may not be as severe, however we recommend installing the update as soon as possible in an abundance of caution.\r\n\r\nAt the time this vulnerability report was published, the assessed CVSS score was 9.1. The full list of metrics can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057 (Opens in new window or tab).\r\n\r\nIn our assessment of this vulnerability, while .NET-based applications are not by default subject to this attack, we recognize that some applications may reasonably make authentication decisions based on the return values of the impacted API. We consider the ease of exploit and likely consequences to applications written in this manner.\r\n\r\nWe will at a future date share more detailed information about how we assess vulnerabilities against a reasonable worst-case scenario.\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2024-0057]( https://www.cve.org/CVERecord?id=CVE-2024-0057)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 09, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-01-09_","Url":"https://github.com/dotnet/announcements/issues/291","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2024-0057: .NET Security Feature bypass Vulnerability\" (#291)"},{"Id":"2072888440","IsPullRequest":false,"CreatedAt":"2024-01-09T18:00:36","Actor":"rbhanda","Number":"290","RawContent":null,"Title":" Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the ASP.NET Core project templates. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA Denial of Service vulnerability exists in ASP.NET Core project templates which utilize JWT-based authentication tokens. This vulnerability allows an unauthenticated client to consume arbitrarily large amounts of server memory, potentially triggering an out-of-memory condition on the server and making the server no longer able to respond to legitimate requests. \r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/aspnetcore/issues/53246\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThis impacts only .NET Core-based projects that were created using any version of project templates listed in [affected software](#affected-software). \r\nOther project templates e.g., console applications, MAUI applications, Windows Forms or WPF applications, are not affected.\r\n\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis impacts only .NET Core-based projects that were created using any version of the below project templates.\r\n\r\n-\tASP.NET Core Web App (Model-View-Controller)\r\n-\tASP.NET Core Web API\r\n-\tASP.NET Core Web App (Razor Pages)\r\n-\tBlazor Server App\r\n-\tBlazor WebAssembly App\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you are you using project templates listed in [affected software](#affected-software), you may be exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### For existing projects:\r\nIf you ever created any of these projects via the dotnet new command or via Visual Studio's File -> New Project gesture, and if you enabled federated authentication at project creation time, your project may be vulnerable. To remediate the vulnerability, use your package manager to update any references you may have to the Microsoft.AspNetCore.Authentication.JwtBearer, Microsoft.AspNetCore.Authentication.OpenIdConnect, and Microsoft.IdentityModel.JsonWebTokens packages to their respective latest versions. \r\n- [Microsoft.AspNetCore.Authentication.JwtBearer](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/) \r\n- [Microsoft.AspNetCore.Authentication.OpenIdConnect](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.OpenIdConnect/) \r\n\r\nIf your project does not reference any of those three packages, you are not exposed to this vulnerability.\r\n\r\n#### For new projects:\r\nTo remediate this issue please update to the latest SDK listed below. Simply installing the SDK update is not sufficient to remediate projects already-created / already-deployed projects which existed prior to this update being released.\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 76.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install .NET SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install .NET SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0, .NET 7.0, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgement\r\n\r\nMorgan Brown, Microsoft Corp.\r\n\r\n### External Links\r\n\r\n[CVE-2024-21319]( https://www.cve.org/CVERecord?id=CVE-2024-21319)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 09, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-01-09_","Url":"https://github.com/dotnet/announcements/issues/290","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\" (#290)"},{"Id":"2072831220","IsPullRequest":false,"CreatedAt":"2024-01-09T17:25:53","Actor":"rbhanda","Number":"289","RawContent":null,"Title":".NET January 2024 Updates","State":"open","Body":"Microsoft released the following [.NET Updates in January 2024](https://devblogs.microsoft.com/dotnet/january-2024-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET January 2024 Updates </h3>\r\n\r\nToday, we are releasing .NET 8.0.1, .NET 7.0.15, .NET 6.0.26 updates\r\n\r\n* [.NET 8.0.1 and .NET SDK 8.0.101](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.1/8.0.1.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\r\n* [.NET 7.0.15 and .NET SDK 7.0.405](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.15/7.0.15.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.26 and .NET SDK 6.0.417](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.26/6.0.26.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n<h4> Docker Annoucements </h4>\r\n\r\n * [Ubuntu Chiseled runtime and aspnet images are now available in the extra variant](https://github.com/dotnet/dotnet-docker/discussions/5092)\r\n * [Alpine 3.19 images now available](https://github.com/dotnet/dotnet-docker/discussions/5091)\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n ","Url":"https://github.com/dotnet/announcements/issues/289","RelatedDescription":"Open issue \".NET January 2024 Updates\" (#289)"},{"Id":"1993272398","IsPullRequest":false,"CreatedAt":"2023-11-14T18:01:55","Actor":"rbhanda","Number":"288","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36558: .NET Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36558: .NET Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 6.0, ASP.NET Core 7.0 and, ASP.NET Core 8.0 RC2. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in ASP.NET where an unauthenticated user is able to bypass validation on Blazor server forms which could trigger unintended actions.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/94726\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThis vulnerability only affects ASP.NET Core Blazor apps. Other application types, including ASP.NET Core apps which do not utilize Blazor, are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any ASP.NET Core Blazor 6.0 application running on .NET 6.0.24 or earlier.\r\n* Any ASP.NET Core Blazor 7.0 application running on .NET 7.0.13 or earlier.\r\n* Any ASP.NET Core Blazor 8.0 application running on .NET 8.0 RC2.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 8.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components/8.0.0-rc.2.23480.2)      | 8.0.0-rc.2.23480.2 | 8.0.0\r\n\r\n### <a name=\".NET 7\"></a>.NET 7.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components)      | >= 7.0.0, < 7.0.13> | 7.0.14\r\n\r\n### <a name=\".NET 7\"></a>.NET 6.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components)      | >= 6.0.0, < 6.0.24 | 6.0.25\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 76.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.0  Runtime  or .NET 8.0.100 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.14 or SDK 7.0.114 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.25 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36558]( https://www.cve.org/CVERecord?id=CVE-2023-36558)\r\n\r\n### Revisions\r\n\r\nV1.0 (November 14, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-11-14_","Url":"https://github.com/dotnet/announcements/issues/288","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36558: .NET Security Feature Bypass Vulnerability\" (#288)"},{"Id":"1993272345","IsPullRequest":false,"CreatedAt":"2023-11-14T18:01:53","Actor":"rbhanda","Number":"287","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36049: .NET Elevation of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36049: .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 RC2. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nAn elevation of privilege vulnerability exists in .NET where untrusted URIs provided to System.Net.WebRequest.Create can be used to inject arbitrary commands to backend FTP servers.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/94725\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 6.0 application running on .NET 6.0.24 or earlier.\r\n* Any .NET 7.0 application running on .NET 7.0.13 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0 RC2.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.0  Runtime  or .NET 8.0.100 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.14 or SDK 7.0.114 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.25 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36049]( https://www.cve.org/CVERecord?id=CVE-2023-36049)\r\n\r\n### Revisions\r\n\r\nV1.0 (November 14, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-11-14_","Url":"https://github.com/dotnet/announcements/issues/287","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36049: .NET Elevation of Privilege Vulnerability\" (#287)"},{"Id":"1993272280","IsPullRequest":false,"CreatedAt":"2023-11-14T18:01:50","Actor":"rbhanda","Number":"286","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36038: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36038: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 8.0 RC2. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA vulnerability exists in ASP.NET IIS where a remote  unauthenticated user can issue specially crafted requests to a .NET application which may result in denial of service.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/aspnetcore/issues/52043\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThis vulnerability only affects ASP.NET Core applications hosted in IIS. ASP.NET Core applications hosted by Kestrel are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any ASP.NET Core 8.0 application running on .NET 8.0 RC2 or earlier.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of  .NET 8.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   8.0.100\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 8.0.0\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  8.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0.0  Runtime  or .NET 8.0.100 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n\r\nIf you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36038]( https://www.cve.org/CVERecord?id=CVE-2023-36038)\r\n\r\n### Revisions\r\n\r\nV1.0 (November 14, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-11-14_","Url":"https://github.com/dotnet/announcements/issues/286","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36038: .NET Denial of Service Vulnerability\" (#286)"},{"Id":"1993254499","IsPullRequest":false,"CreatedAt":"2023-11-14T17:50:48","Actor":"rbhanda","Number":"285","RawContent":null,"Title":".NET November 2023 Updates","State":"open","Body":"Microsoft released the following [.NET Updates in November 2023](https://devblogs.microsoft.com/dotnet/november-2023-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET November 2023 Updates </h3>\r\n\r\nToday, we are releasing .NET 8.0.0, .NET 7.0.14, .NET 6.0.25 updates\r\n\r\n* [.NET 8.0.0 and .NET SDK 8.0.100](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.0/8.0.0.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\r\n* [.NET 7.0.13 and .NET SDK 7.0.403](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.13/7.0.13.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.24 and .NET SDK 6.0.416](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.24/6.0.24.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n ","Url":"https://github.com/dotnet/announcements/issues/285","RelatedDescription":"Open issue \".NET November 2023 Updates\" (#285)"},{"Id":"1982297534","IsPullRequest":false,"CreatedAt":"2023-11-07T21:55:09","Actor":"terrajobst","Number":"284","RawContent":null,"Title":".NET 8 reaches next step in deprecation of `BinaryFormatter`","State":"open","Body":"Starting with .NET 8, [`BinaryFormatter` throws `NotSupportedException`][net80-change] across nearly all project types, including console applications (except Windows Forms and WPF). This run-time change is the next stage of the [`BinaryFormatter` obsoletion plan][bf-deprecation], in which `BinaryFormatter` will eventually be removed from .NET.\r\n\r\n> [!NOTE]\r\n> Should you need to continue using `BinaryFormatter`, you can set a compatibility switch in your project file to re-enable `BinaryFormatter` functionality. See the [.NET 8 breaking change notification][net80-change] for more details.\r\n\r\n> [!NOTE]\r\n> Please note that there is no change [planned][bf-deprecation] for .NET Framework.\r\n\r\nThe reason is that `BinaryFormatter` has many [security considerations][bf-security], which makes the API inherently prone to security issues.\r\n\r\n[net80-change]: https://learn.microsoft.com/en-us/dotnet/core/compatibility/serialization/8.0/binaryformatter-disabled\r\n[bf-deprecation]: https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md\r\n[bf-security]: https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide","Url":"https://github.com/dotnet/announcements/issues/284","RelatedDescription":"Open issue \".NET 8 reaches next step in deprecation of `BinaryFormatter`\" (#284)"},{"Id":"1982097618","IsPullRequest":false,"CreatedAt":"2023-11-07T19:43:59","Actor":"MackinnonBuck","Number":"283","RawContent":null,"Title":"Static Web Assets Compression Flag Breaking Change","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/aspnetcore/issues/51922. See that issue for discussion.\r\n\r\n# Static Web Assets Compression Flag Breaking change\r\n\r\nThe `<BlazorEnableCompression>` flag was renamed to `<CompressionEnabled>` starting in the .NET 8 Preview 4 SDK.\r\n\r\nStatic web asset compression is still enabled by default when using the StaticWebAssets SDK. It can be disabled in the app's project file or from the .NET CLI:\r\n\r\n**MSBuild**\r\n```xml\r\n<PropertyGroup>\r\n  <CompressionEnabled>false</CompressionEnabled>\r\n</PropertyGroup>\r\n```\r\n\r\n**.NET CLI**\r\n```text\r\ndotnet publish -p:CompressionEnabled=false\r\n```\r\n\r\nNote that this change is associated with the version of the .NET SDK used to build the project and is independent of the project's TFM. For example, a project with a `TargetFramework` of `net7.0` will need to react to this breaking change if it gets built with the .NET 8 SDK.\r\n\r\n### Context\r\n\r\nThe Static Web Assets feature was moved from the Blazor WebAssembly SDK into its own SDK in .NET 8. As part of this work, MSBuild properties with the name `Blazor` in them were renamed to indicate that they are not limited to Blazor scenarios.","Url":"https://github.com/dotnet/announcements/issues/283","RelatedDescription":"Open issue \"Static Web Assets Compression Flag Breaking Change\" (#283)"},{"Id":"1935860595","IsPullRequest":false,"CreatedAt":"2023-10-24T17:20:29","Actor":"rbhanda","Number":"277","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability","State":"closed","Body":"# Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\n Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 RC1, .NET 7.0 ,and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. A patch for this vulnerability (nicknamed \"Rapid Reset\") is being released in coordination with other industry partners.\r\n\r\nA vulnerability exists in the ASP.NET Core Kestrel web server where a malicious client may flood the server with specially crafted HTTP/2 requests, causing denial of service.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at   https://github.com/dotnet/aspnetcore/issues/51264\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nServers without HTTP/2 enabled are not affected.\r\nTo limit your application to HTTP1.1 via config, edit your appsettings.json to include a protocols setting for each endpoint: \r\n\r\n```\r\n  \"Kestrel\": { \r\n    \"Endpoints\": { \r\n      \"http\": { \r\n        // your existing config \r\n        \"Protocols\": \"Http1\" \r\n      }, \r\n      \"https\": { \r\n         // your existing config \r\n        \"Protocols\": \"Http1\" \r\n      } \r\n    } \r\n  } \r\n```\r\nVisit [Configure options for the ASP.NET Core Kestrel web server](https://learn.microsoft.com/aspnet/core/fundamentals/servers/kestrel/options?view=aspnetcore-7.0) to learn more about creating config files.\r\n\r\n\r\nYou can also limit kestrel via code, in your program.cs / Main() function by added the highlighted code to the listen options for each of your endpoints: \r\n\r\n```\r\nvar builder = WebApplication.CreateBuilder(args); \r\nbuilder.WebHost.UseKestrel(options => \r\n{ \r\n    options.Listen(IPAddress.Any, 5000, listenOptions => \r\n    { \r\n        listenOptions.Protocols = HttpProtocols.Http1; \r\n    }); \r\n}); \r\n```\r\n\r\n\r\n\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any ASP.NET Core 6.0 application running on .NET 6.0.22 or earlier.\r\n* Any ASP.NET Core 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any ASP.NET Core 8.0 application running on .NET 8.0 RC1 or earlier.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0 or .NET 8.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.12 or SDK 7.0.112 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.23 or SDK 6.0.318 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### **Fine tuning the patch**\r\nThe patch introduces two new AppContext properties: \r\n\r\n`Microsoft.AspNetCore.Server.Kestrel.Http2.MaxEnhanceYourCalmCount `\r\n`Microsoft.AspNetCore.Server.Kestrel.Http2.MaxConnectionFlowControlQueueSize `\r\n\r\nThe properties can be set in a [variety](https://learn.microsoft.com/dotnet/core/runtime-config/) of ways, including AppContext.SetData or AppDomain.CurrentDomain.SetData in code (the former is not available in 6.0), RuntimeHostConfigurationOption in a project file, or environment variables. \r\n\r\nMaxEnhanceYourCalmCount is a cap on how many ENHANCE_YOUR_CALM (EYC) messages (generally triggered by excessive client stream resets) the server can send per second on a particular connection without dropping it.  The value is averaged over 5 seconds to accommodate bursty clients.  For example, a value of 20 means that if 100 EYCs are recorded in 5 seconds, the connection will be dropped.  If legitimate clients are being disconnected, you should increase this value.  Alternatively, setting it to 0 (or a negative value) will disable the check entirely. \r\n\r\nMaxConnectionFlowControlQueueSize is a cap on how large an internal data structure can grow.  Intuitively, it corresponds to the number of outbound messages that are waiting to be sent (because of flow-control limits negotiated between the client and server).  It never makes sense for this value to be less than the number of active streams – it’s fine to have a message waiting on each stream.  Since the default number of active streams is 100 (this is configurable), it’s expected that most servers will use a value of 200 or more.  If legitimate clients are disconnected, you should increase this value.  Alternatively, setting it to 0 (or a negative value) will disable the check entirely. \r\n\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0, .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-44487]( https://www.cve.org/CVERecord?id=CVE-2023-44487)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-10_","Url":"https://github.com/dotnet/announcements/issues/277","RelatedDescription":"Closed issue \"Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability\" (#277)"},{"Id":"1959723976","IsPullRequest":false,"CreatedAt":"2023-10-24T17:20:14","Actor":"rbhanda","Number":"282","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\n Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 RC1, .NET 7.0 ,and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. A patch for this vulnerability (nicknamed \"Rapid Reset\") is being released in coordination with other industry partners.\r\n\r\nA vulnerability exists in the ASP.NET Core Kestrel web server where a malicious client may flood the server with specially crafted HTTP/2 requests, causing denial of service.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at   https://github.com/dotnet/aspnetcore/issues/51264\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nServers without HTTP/2 enabled are not affected.\r\nTo limit your application to HTTP1.1 via config, edit your appsettings.json to include a protocols setting for each endpoint: \r\n\r\n```\r\n  \"Kestrel\": { \r\n    \"Endpoints\": { \r\n      \"http\": { \r\n        // your existing config \r\n        \"Protocols\": \"Http1\" \r\n      }, \r\n      \"https\": { \r\n         // your existing config \r\n        \"Protocols\": \"Http1\" \r\n      } \r\n    } \r\n  } \r\n```\r\nVisit [Configure options for the ASP.NET Core Kestrel web server](https://learn.microsoft.com/aspnet/core/fundamentals/servers/kestrel/options?view=aspnetcore-7.0) to learn more about creating config files.\r\n\r\n\r\nYou can also limit kestrel via code, in your program.cs / Main() function by added the highlighted code to the listen options for each of your endpoints: \r\n\r\n```\r\nvar builder = WebApplication.CreateBuilder(args); \r\nbuilder.WebHost.UseKestrel(options => \r\n{ \r\n    options.Listen(IPAddress.Any, 5000, listenOptions => \r\n    { \r\n        listenOptions.Protocols = HttpProtocols.Http1; \r\n    }); \r\n}); \r\n```\r\n\r\n\r\n\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any ASP.NET Core 6.0 application running on .NET 6.0.22 or earlier.\r\n* Any ASP.NET Core 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any ASP.NET Core 8.0 application running on .NET 8.0 RC1 or earlier.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0 or .NET 8.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.13 or SDK 7.0.113 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.24 or SDK 6.0.319 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### **Fine tuning the patch**\r\nThe patch introduces two new AppContext properties: \r\n\r\n`Microsoft.AspNetCore.Server.Kestrel.Http2.MaxEnhanceYourCalmCount `\r\n`Microsoft.AspNetCore.Server.Kestrel.Http2.MaxConnectionFlowControlQueueSize `\r\n\r\nThe properties can be set in a [variety](https://learn.microsoft.com/dotnet/core/runtime-config/) of ways, including AppContext.SetData or AppDomain.CurrentDomain.SetData in code (the former is not available in 6.0), RuntimeHostConfigurationOption in a project file, or environment variables. \r\n\r\nMaxEnhanceYourCalmCount is a cap on how many ENHANCE_YOUR_CALM (EYC) messages (generally triggered by excessive client stream resets) the server can send per second on a particular connection without dropping it.  The value is averaged over 5 seconds to accommodate bursty clients.  For example, a value of 20 means that if 100 EYCs are recorded in 5 seconds, the connection will be dropped.  If legitimate clients are being disconnected, you should increase this value.  Alternatively, setting it to 0 (or a negative value) will disable the check entirely. \r\n\r\nMaxConnectionFlowControlQueueSize is a cap on how large an internal data structure can grow.  Intuitively, it corresponds to the number of outbound messages that are waiting to be sent (because of flow-control limits negotiated between the client and server).  It never makes sense for this value to be less than the number of active streams – it’s fine to have a message waiting on each stream.  Since the default number of active streams is 100 (this is configurable), it’s expected that most servers will use a value of 200 or more.  If legitimate clients are disconnected, you should increase this value.  Alternatively, setting it to 0 (or a negative value) will disable the check entirely. \r\n\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0, .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-44487]( https://www.cve.org/CVERecord?id=CVE-2023-44487)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 24, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-24_","Url":"https://github.com/dotnet/announcements/issues/282","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-44487: .NET Denial of Service Vulnerability\" (#282)"},{"Id":"1935862398","IsPullRequest":false,"CreatedAt":"2023-10-24T17:17:13","Actor":"rbhanda","Number":"278","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability","State":"closed","Body":"# Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 8.0 RC1. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA memory leak vulnerability exists in MsQuic.dll which may lead to Denial of Service. This issue only affects Windows systems.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/93304\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0 RC1.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 7.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.12 or SDK 7.0.112 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36435]( https://www.cve.org/CVERecord?id=CVE-2023-36435)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-10_","Url":"https://github.com/dotnet/announcements/issues/278","RelatedDescription":"Closed issue \"Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability\" (#278)"},{"Id":"1959719613","IsPullRequest":false,"CreatedAt":"2023-10-24T17:16:59","Actor":"rbhanda","Number":"281","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 8.0 RC1. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA memory leak vulnerability exists in MsQuic.dll which may lead to Denial of Service. This issue only affects Windows systems.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/93304\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0 RC1.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 7.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.13 or SDK 7.0.113 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36435]( https://www.cve.org/CVERecord?id=CVE-2023-36435)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 24, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-24_","Url":"https://github.com/dotnet/announcements/issues/281","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36435: .NET Denial of Service Vulnerability\" (#281)"},{"Id":"1935866745","IsPullRequest":false,"CreatedAt":"2023-10-24T17:15:46","Actor":"rbhanda","Number":"279","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability","State":"closed","Body":"# Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 8.0 RC1. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA null pointer vulnerability exists in MsQuic.dll which may lead to Denial of Service. This issue only affects Windows systems.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/93305\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0 RC1.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of  .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 7.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.12 or SDK 7.0.112 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-38171]( https://www.cve.org/CVERecord?id=CVE-2023-38171)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-10_","Url":"https://github.com/dotnet/announcements/issues/279","RelatedDescription":"Closed issue \"Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability\" (#279)"},{"Id":"1959717324","IsPullRequest":false,"CreatedAt":"2023-10-24T17:15:18","Actor":"rbhanda","Number":"280","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 8.0 RC1. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA null pointer vulnerability exists in MsQuic.dll which may lead to Denial of Service. This issue only affects Windows systems.\r\n\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/93305\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.11 or earlier.\r\n* Any .NET 8.0 application running on .NET 8.0 RC1.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of  .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 7.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.200\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 8.0, you should download and install .NET 8.0 RC2 Runtime  or .NET 8.0 RC2 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.13 or SDK 7.0.113 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-38171]( https://www.cve.org/CVERecord?id=CVE-2023-38171)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 24, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-10-24_","Url":"https://github.com/dotnet/announcements/issues/280","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-38171: .NET Denial of Service Vulnerability\" (#280)"},{"Id":"1935794828","IsPullRequest":false,"CreatedAt":"2023-10-10T16:49:07","Actor":"rbhanda","Number":"276","RawContent":null,"Title":".NET October 2023 Updates","State":"open","Body":"Microsoft released the following [.NET Updates in October 2023](https://devblogs.microsoft.com/dotnet/october-2023-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET October 24 2023 Updates </h3>\r\n\r\nToday, we are releasing an update to our October 12 security releases. The .NET 7.0.13 and .NET 6.0.24 releases contain the security fixes from our previous September release that were missing in the October release..\r\n\r\n* [.NET 7.0.13 and .NET SDK 7.0.403](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.13/7.0.13.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.24 and .NET SDK 6.0.416](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.24/6.0.24.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n---\r\n<h3> .NET October Updates </h3>\r\n\r\n* [.NET 7.0.12 and .NET SDK 7.0.402](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.12/7.0.12.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.23 and .NET SDK 6.0.415](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.23/6.0.23.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n ","Url":"https://github.com/dotnet/announcements/issues/276","RelatedDescription":"Open issue \".NET October 2023 Updates\" (#276)"},{"Id":"1892949870","IsPullRequest":false,"CreatedAt":"2023-09-12T17:22:59","Actor":"rbhanda","Number":"275","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36799: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36799: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET where reading a maliciously crafted X.509 certificate may result in Denial of Service. This issue only affects Linux systems.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/91950\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm64) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm64) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-x64) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-x64) | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm64) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm64) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-x64) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-x64) | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36799]( https://www.cve.org/CVERecord?id=CVE-2023-36799)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-09-12_","Url":"https://github.com/dotnet/announcements/issues/275","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36799: .NET Denial of Service Vulnerability\" (#275)"},{"Id":"1892936560","IsPullRequest":false,"CreatedAt":"2023-09-12T17:13:15","Actor":"rbhanda","Number":"274","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36796: .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36796: .NET Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in Microsoft.DiaSymReader.Native.amd64.dll when reading a corrupted PDB file which may lead to remote code execution. This issue only affects Windows systems.\r\n\r\n**Note:** The vulnerabilities [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36792), [CVE-2023-36793]( https://www.cve.org/CVERecord?id=CVE-2023-36793), [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36794), [CVE-2023-36796]( https://www.cve.org/CVERecord?id=CVE-2023-36796) are all resolved by a single patch. Get [affected software](#affected-software) to resolve all of them.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/91948\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36796]( https://www.cve.org/CVERecord?id=CVE-2023-36796)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-09-12_","Url":"https://github.com/dotnet/announcements/issues/274","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36796: .NET Remote Code Execution Vulnerability\" (#274)"},{"Id":"1892933372","IsPullRequest":false,"CreatedAt":"2023-09-12T17:11:19","Actor":"rbhanda","Number":"273","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36793: .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36793: .NET Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in Microsoft.DiaSymReader.Native.amd64.dll when reading a corrupted PDB file which may lead to remote code execution. This issue only affects Windows systems.\r\n\r\n**Note:** The vulnerabilities [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36792), [CVE-2023-36793]( https://www.cve.org/CVERecord?id=CVE-2023-36793), [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36794), [CVE-2023-36796]( https://www.cve.org/CVERecord?id=CVE-2023-36796) are all resolved by a single patch. Get [affected software](#affected-software) to resolve all of them.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/91947\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36793]( https://www.cve.org/CVERecord?id=CVE-2023-36793)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-09-12_","Url":"https://github.com/dotnet/announcements/issues/273","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36793: .NET Remote Code Execution Vulnerability\" (#273)"},{"Id":"1892930450","IsPullRequest":false,"CreatedAt":"2023-09-12T17:09:04","Actor":"rbhanda","Number":"272","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36794: .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36794: .NET Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in Microsoft.DiaSymReader.Native.amd64.dll when reading a corrupted PDB file which may lead to remote code execution. This issue only affects Windows systems.\r\n\r\n**Note:** The vulnerabilities [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36792), [CVE-2023-36793]( https://www.cve.org/CVERecord?id=CVE-2023-36793), [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36794), [CVE-2023-36796]( https://www.cve.org/CVERecord?id=CVE-2023-36796) are all resolved by a single patch. Get [affected software](#affected-software) to resolve all of them.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/91946\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36794]( https://www.cve.org/CVERecord?id=CVE-2023-36794)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-09-12_","Url":"https://github.com/dotnet/announcements/issues/272","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36794: .NET Remote Code Execution Vulnerability\" (#272)"},{"Id":"1892926861","IsPullRequest":false,"CreatedAt":"2023-09-12T17:06:30","Actor":"rbhanda","Number":"271","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-36792: .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-36792: .NET Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in Microsoft.DiaSymReader.Native.amd64.dll when reading a corrupted PDB file which may lead to remote code execution. This issue only affects Windows systems.\r\n\r\n**Note:** The vulnerabilities [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36792), [CVE-2023-36793]( https://www.cve.org/CVERecord?id=CVE-2023-36793), [CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36794), [CVE-2023-36796]( https://www.cve.org/CVERecord?id=CVE-2023-36796) are all resolved by a single patch. Get [affected software](#affected-software) to resolve all of them.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/91944\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.10 | 7.0.11\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.NETCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-arm64)      | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n[Microsoft.NETCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x86)          | >= 6.0.0, <= 6.0.21 | 6.0.22\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-36792]( https://www.cve.org/CVERecord?id=CVE-2023-36792)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-09-12_","Url":"https://github.com/dotnet/announcements/issues/271","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-36792: .NET Remote Code Execution Vulnerability\" (#271)"},{"Id":"1892910855","IsPullRequest":false,"CreatedAt":"2023-09-12T16:54:47","Actor":"rbhanda","Number":"270","RawContent":null,"Title":".NET September 2023 Updates","State":"open","Body":"Microsoft released the following [.NET Updates in September 2023](https://devblogs.microsoft.com/dotnet/september-2023-updates/).\r\n\r\n<h2>.NET Releases </h2>\r\n\r\n<h3> .NET August Updates </h3>\r\n\r\n* [.NET 7.0.11 and .NET SDK 7.0.401](https://github.com/dotnet/core/blob/main/release-notes/7.0/7.0.11/7.0.11.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/7.0))\r\n* [.NET 6.0.22 and .NET SDK 6.0.414](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.22/6.0.22.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\r\n\r\n\r\nThis issue will be updated if there are any additional releases during the month.\r\n ","Url":"https://github.com/dotnet/announcements/issues/270","RelatedDescription":"Open issue \".NET September 2023 Updates\" (#270)"},{"Id":"1841710892","IsPullRequest":false,"CreatedAt":"2023-08-08T17:19:58","Actor":"rbhanda","Number":"269","RawContent":null,"Title":"Microsoft Security Advisory CVE-2023-38180: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-38180: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1, .NET 6.0, and .NET 7.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in Kestrel where, on detecting a potentially malicious client, Kestrel will sometimes fail to disconnect it, resulting in denial of service.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/90170\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application is running behind a reverse proxy, or Web Application Firewall, which has its own mitigations against HTTP-based attacks this issue may be mitigated by the proxy or WAF\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.8 or earlier.\r\n* Any .NET 6.0 application running on .NET 6.0.19 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET. and the appropriate version of the affected packages. In the case of ASP.NET Core 2.1, update to the listed package version.\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv](https://www.nuget.org/packages/Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv)      | >= 6.0.0, <= 6.0.20 | 6.0.21\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)      | >= 6.0.0, <= 6.0.20 | 6.0.21\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)          | >= 6.0.0, <= 6.0.20 | 6.0.21\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)          | >= 6.0.0, <= 6.0.20 | 6.0.21\r\n\r\n### <a name=\"ASP.NET Core 2.1\"></a>ASP.NET Core 2.1\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv](https://www.nuget.org/packages/Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv/2.1.40)      | <= 2.1.39 | 2.1.40\r\n[Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets](https://www.nuget.org/packages/Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets/2.1.40) | <= 2.1.39 | 2.1.40\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.10 or SDK 7.0.110 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you're using .NET 6.0, you should download and install Runtime 6.0.21 or SDK 6.0.316 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-38180]( https://www.cve.org/CVERecord?id=CVE-2023-38180)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 08, 2023): Advisory published.\r\n\r\nV1.1 (August 15, 2023): Update ASP.NET Core package links\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2023-08-15_","Url":"https://github.com/dotnet/announcements/issues/269","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2023-38180: .NET Denial of Service Vulnerability\" (#269)"},{"Id":"1841708907","IsPullRequest":false,"CreatedAt":"2023-08-08T17:18:21","Actor":"rbhanda","Number":"268","RawContent":null,"Title":" Microsoft Security Advisory CVE-2023-38178: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2023-38178: .NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET Kestrel where a malicious client can bypass QUIC stream limit in HTTP/3 in both ASP.NET and .NET runtimes resulting in denial of service.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at  https://github.com/dotnet/runtime/issues/90169\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 7.0 application running on .NET 7.0.9 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n\r\n### <a name=\".NET 7\"></a>.NET 7\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)      | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/ Microsoft.NetCore.App.Runtime.win-arm)      | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)          | >= 7.0.0, <= 7.0.9 | 7.0.10\r\n\r\n### <a name=\".NET 6\"></a>.NET 6\r\n.NET 6 included HTTP/3 support as a [preview feature](https://learn.microsoft.com/dotnet/core/extensions/httpclient-http3#http3-support-in-net-6) , which requires specific opt-in code. If you are using HTTP/3 in .NET 6 you must update your application to .NET 7, where the feature is supported, to fix the vulnerability. Future versions of .NET will disable the preview feature entirely.\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* To fix this issue on Linux, please update `libmsquic` to 2.2+\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   7.0.400\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 7.0.10\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  7.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you're using .NET 7.0, you should download and install Runtime 7.0.10 or SDK 7.0.700 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-38178]( https://www.cve.org/CVERecord?id=CVE-2023-38178)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 08, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-08-08_","Url":"https://github.com/dotnet/announcements/issues/268","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2023-38178: .NET Denial of Service Vulnerability\" (#268)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-05T03:30:13.8243023Z","RunDurationInMilliseconds":6027}