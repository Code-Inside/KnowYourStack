{"Data":{"Blog":{"FeedItems":[{"Title":"Show dotnet: Animating 40 LEDs with charlieplexing","PublishedOn":"2021-04-10T01:17:56+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For Pi day 2021, I published a fun post on how to Blink LEDs with Raspberry Pi. As part of that writeup, I wanted to include a 40 LED charlieplexing example, but couldn&#8217;t get it working. It is...","Href":"https://devblogs.microsoft.com/dotnet/show-dotnet-animating-40-leds-with-charlieplexing/","RawContent":null},{"Title":"Announcing .NET Multi-platform App UI Preview 3","PublishedOn":"2021-04-09T19:18:31+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"With .NET 6 Preview 3 we are shipping the latest progress for mobile and desktop development with .NET Multi-platform App UI. This release adds the Windows platform with WinUI 3, improves the base...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-multi-platform-app-ui-preview-3/","RawContent":null},{"Title":"Announcing .NET 6 Preview 3","PublishedOn":"2021-04-08T20:32:58+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are delighted to release .NET 6 Preview 3. This release is dedicated almost entirely to low-level performance features. These are the types of improvements that many folks don&#8217;t...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-6-preview-3/","RawContent":null},{"Title":"ML.NET Survey: Machine Learning in .NET","PublishedOn":"2021-04-08T17:14:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every year we conduct a survey to gather feedback on pain points and feature requests that help shape the direction of Machine Learning in .NET.\nThis past year we have made major improvements to...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-survey-machine-learning-in-net/","RawContent":null},{"Title":".NET April 2021 Updates – 5.0.5","PublishedOn":"2021-04-06T16:45:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET April 2021 Updates. These updates contains reliability and other non-security improvements. See the individual release notes for details on updated packages.\nYou can...","Href":"https://devblogs.microsoft.com/dotnet/net-april-2021-updates/","RawContent":null},{"Title":"Announcing Open Source C# standardization","PublishedOn":"2021-04-05T19:02:34+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"The C# compilers have been open source since 2014, now in the dotnet/roslyn repository. The dotnet/csharplang split off to provide a dedicate public space for the innovation and evolution of the C#...","Href":"https://devblogs.microsoft.com/dotnet/announcing-open-source-c-standardization-standards/","RawContent":null},{"Title":"Loop alignment in .NET 6","PublishedOn":"2021-03-25T19:58:16+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"When writing a software, developers try their best to maximize the performance they can get from the code they have baked into the product. Often, there are various tools available to the developers...","Href":"https://devblogs.microsoft.com/dotnet/loop-alignment-in-net-6/","RawContent":null},{"Title":"Cloud-Native learning resources for .NET developers","PublishedOn":"2021-03-22T17:43:53+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, users are demanding responsiveness, the latest and greatest features, and zero downtime from their applications. Businesses are rapidly adopting the cloud&#8217;s power to meet user demand,...","Href":"https://devblogs.microsoft.com/dotnet/cloud-native-learning-resources-for-net-developers/","RawContent":null},{"Title":"OpenTelemetry .NET reaches v1.0","PublishedOn":"2021-03-18T21:32:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As modern application environments are polyglot, distributed, and increasingly complex, observing your application to identify and react to failures has become challenging. In early 2019, two popular...","Href":"https://devblogs.microsoft.com/dotnet/opentelemetry-net-reaches-v1-0/","RawContent":null},{"Title":"The path to .NET 5 and Blazor WebAssembly with some fun sprinkled in","PublishedOn":"2021-03-17T16:00:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"With the recent release of .NET 5 at .NET Conf 2020, users saw first-hand how to take advantage of the latest web technology using .NET. One extremely interesting announcement was the new release of...","Href":"https://devblogs.microsoft.com/dotnet/the-path-to-net-5-and-blazor-webassembly-with-some-fun-sprinkled-in/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15834623314","Type":"IssuesEvent","CreatedAt":"2021-04-06T17:01:00","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/181","RelatedDescription":"Opened issue \"April 2021 .NET Updates\" (#181) at dotnet/announcements","RelatedBody":"The following .NET updates were released in April 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET April 2021 Updates – 5.0.5](https://devblogs.microsoft.com/dotnet/net-april-2021/)\r\n  * .NET 5.0.5 and .NET SDK 5.0.202 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.5/5.0.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"15820737111","Type":"IssuesEvent","CreatedAt":"2021-04-05T19:26:23","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/180","RelatedDescription":"Opened issue \"NuGet package restore broken on .NET 5+ with Removal of Trust of Verisign CA\" (#180) at dotnet/announcements","RelatedBody":"# NuGet package restore broken on .NET 5+ with Removal of Trust of Verisign CA\r\n\r\n[NuGet package signing verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference) relies on the `VeriSign Universal Root Certification Authority` as part of establishing a chain-of-trust for NuGet packages. `VeriSign Universal Root Certification Authority` was recently removed from [NSS](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) and `ca-certificates` packages. This removal effectively breaks NuGet package signing verification, which has the result of breaking the ability to restore NuGet packages.\r\n\r\nThis break in behavior is only observed with .NET 5 and .NET 6, which have NuGet package verification enabled (and it cannot be disabled). [NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) has been observed on some distros already and we expect it to become pervasive quickly as more distros are updated to include more recent version of `NSS` and `ca-certificates` (with the VeriSign CA removed). We are in the process of releasing updated builds of .NET 5 and .NET 6 that have NuGet package verification disabled on Linux and macOS.\r\n\r\nWe need developers, companies, and commercial providers to install (or otherwise use) updated builds of .NET 5 and .NET 6 if you rely on those .NET versions on Linux. If you adopt the updated .NET versions soon, you should not observe a break in functional behavior, and will be able to confidently update to newer versions of `NSS` and `ca-certificates` packages.\r\n\r\n## Discussion\r\n\r\nPlease share your feedback on this topic and see what others are saying at:\r\n\r\nhttps://github.com/NuGet/Home/issues/10712\r\n\r\n## Updated .NET builds\r\n\r\nNew .NET builds will be provided with NuGet package verification disabled on Linux and macOS. The following are the expected release dates:\r\n\r\n- .NET SDK 5.0.202 -- April 6, 2021.\r\n- .NET 6 Preview 3 -- April 8, 2021.\r\n\r\nNew [container images](https://hub.docker.com/_/microsoft-dotnet) will be published for Alpine, Debian, and Ubuntu on both of these dates, for the respective releases.\r\n\r\nThese builds include significant additional functionality beyond disabling NuGet package verification. We originally planned to release these builds as regular releases for all supported operating systems and architectures, targeting April 13th. We made two changes from our original release plan: earlier release dates and include the change in NuGet functionality for Linux and macOS.\r\n\r\n## Who is affected\r\n\r\n.NET 5+ users will be affected on any operating system that has removed the `VeriSign Universal Root Certification Authority`. We are maintaining a list of [Linux distros that are known to be affected](https://github.com/NuGet/Announcements/issues/56).\r\n\r\n`nuget.exe` is sometimes used on Linux with Mono. This scenario is not affected.\r\n\r\nThere has been an [industry-wide movement to distrust the VeriSign root CA](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/), including companies like Apple, Google, Microsoft, and Mozilla. This may mean that at anytime in the future, [Apple](https://support.apple.com/en-us/HT212140) and [Microsoft](https://ccadb-public.secure.force.com/microsoft/IncludedCACertificateReportForMSFT) can remove `VeriSign Universal Root Certification Authority` from their trusted root CA list.\r\n\r\n## Solution\r\n\r\nThe NuGet team has [disabled the package verification feature](https://github.com/NuGet/NuGet.Client/pull/3979) for macOS and Linux. If needed, we will disable the feature for Windows at a later time. This change will be available in the updated .NET builds covered earlier.\r\n\r\nWe are also [talking to some Linux distro package maintainers](https://gitlab.alpinelinux.org/alpine/ca-certificates/-/issues/1) to ask them to delay the removal of the `VeriSign Universal Root Certification Authority` (for code signing only). Even a month of grace would help a lot, to enable .NET users on Linux to adopt the newer .NET 5 and .NET 6 builds.\r\n\r\nTo clarify, this change does not affect .NET Core 3.1 and earlier versions. It does not affect .NET Framework. It does not affect any .NET functionality on Windows, at least not at this time.\r\n\r\n## More Context\r\n\r\nWe observed [NuGet Restore Issues on Debian Family Linux Distros](https://github.com/NuGet/Announcements/issues/49) in January, 2021. This led us to discover that there has been an industry-wide movement to remove the `VeriSign Universal Root Certification Authority`.\r\n\r\nNuGet has historically relied on two key certificates:\r\n\r\n- NuGet Microsoft Author Signing Certificate Update - Expired January 27th, 2021\r\n- NuGet.org Repository Signing Certificate Update - Expires April 14th, 2021\r\n\r\nAfter those certificates expire, the NuGet client falls back to [timestamp verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference), which enables package verification to still function. The timestamp verification relies on VeriSign root certificate authority. The absence of this root certificate authority being available on a machine means that timestamp verification is no longer functional, which causes package signature verification to fail.\r\n\r\nSecurity is very important to us. We are putting together a plan to use a new system that will allow us to re-enable package signing verification on all supported operating systems. We will have more to share on our future plans once we are sure that all systems are once again functional.\r\n\r\n[.NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) provides more details on error messages, affected environments, and solutions."},{"Id":"15752631045","Type":"IssuesEvent","CreatedAt":"2021-03-30T21:15:03","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/179","RelatedDescription":"Closed issue \"Preserve git refspec to local patches and branches after renamed origin's master\" (#179) at dotnet/announcements","RelatedBody":"For all those who can't pull `master`, it should have renamed to `main`.\r\n\r\nTo preserve refspec to patches and branches, just changing the `heads/master` to `heads/main` should work.\r\n\r\n```diff\r\n[remote \"origin\"]\r\n\turl = https://github.com/dotnet/your-repo\r\n-\tfetch = +refs/heads/master:refs/remotes/origin/master\r\n+\tfetch = +refs/heads/main:refs/remotes/origin/master\r\n\ttagopt = --no-tags\r\n[branch \"master\"]\r\n\tremote = origin\r\n-\tmerge = refs/heads/master\r\n+\tmerge = refs/heads/main\r\n```\r\n\r\n> Putting this out there, if anyone else facing similar issue with git."},{"Id":"15626592773","Type":"IssuesEvent","CreatedAt":"2021-03-21T13:01:45","Actor":"Nirmal4G","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/179","RelatedDescription":"Opened issue \"Preserve git refspec to local patches and branches after renamed origin's master\" (#179) at dotnet/announcements","RelatedBody":"For all those who can't pull `master`, it should have renamed to `main`.\r\n\r\nTo preserve refspec to patches and branches, just changing the `heads/master` to `heads/main` should work.\r\n\r\n```diff\r\n[remote \"origin\"]\r\n\turl = https://github.com/dotnet/your-repo\r\n-\tfetch = +refs/heads/master:refs/remotes/origin/master\r\n+\tfetch = +refs/heads/main:refs/remotes/origin/master\r\n\ttagopt = --no-tags\r\n[branch \"master\"]\r\n\tremote = origin\r\n-\tmerge = refs/heads/master\r\n+\tmerge = refs/heads/main\r\n```\r\n\r\n> Putting this out there, if anyone else facing similar issue with git."},{"Id":"15469684782","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:01:30","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/178","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\" (#178) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerable package is [System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/) . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\r\n\r\nVulnerable package versions:\r\n\r\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web  package with a vulnerable version listed below.\r\n\r\nPackage Name| Vulnerable Versions| Secure Versions\r\n:----- | :----: | -----:\r\n[System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/)| 4.0.0 - 4.5.0 <br> 4.6.0-4.7.1 <br> 5.0.0  | 4.5.1 <br>4.7.2 <br>5.0.1\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.4 or SDK 5.0.104 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.13 or SDK 3.1.113 (for Visual Studio 2019 v16.4) or 3.1.406 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.26 or SDK 2.1.522 (for Visual Studio 2019 v15.9) or 2.1.814 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-26701](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26701)\r\n\r\n### Revisions\r\n\r\nV1.0 (March 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-03-09_\r\n"},{"Id":"15469670301","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:00:38","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/177","RelatedDescription":"Opened issue \"March 2021 .NET Updates\" (#177) at dotnet/announcements","RelatedBody":"The following .NET updates were released in March 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET March 2021 Updates – 5.0.4, 3.1.13, 2.1.26](https://devblogs.microsoft.com/dotnet/net-march-2021/)\r\n  * .NET 5.0.4 and .NET SDK 5.0.104 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.4/5.0.4.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.13 and .NET SDK 3.1.113 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.13/3.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.26 and .NET SDK 2.1.522 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.26/2.1.26.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"15877477232","Type":"PullRequestEvent","CreatedAt":"2021-04-09T09:41:36","Actor":"aik-jahoda","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28157","RelatedDescription":"Merged pull request \"Update branding to 2.1.28\" (#28157) at dotnet/coreclr","RelatedBody":""},{"Id":"15866385575","Type":"PullRequestEvent","CreatedAt":"2021-04-08T15:41:45","Actor":"aik-jahoda","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28158","RelatedDescription":"Opened pull request \"Update branding to 3.1.15\" (#28158) at dotnet/coreclr","RelatedBody":"This version update was probably missed in previous release, hence now we increase by 2"},{"Id":"15865766673","Type":"PullRequestEvent","CreatedAt":"2021-04-08T15:03:21","Actor":"aik-jahoda","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28157","RelatedDescription":"Opened pull request \"Update branding to 2.1.28\" (#28157) at dotnet/coreclr","RelatedBody":""},{"Id":"15786207401","Type":"PullRequestEvent","CreatedAt":"2021-04-01T17:24:55","Actor":"ivdiazsa","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28156","RelatedDescription":"Opened pull request \"Added test comment to trigger pipelines\" (#28156) at dotnet/coreclr","RelatedBody":"This is just a dummy PR to test something out with the pipelines. It is not intended to be merged into the product."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"15854961851","Type":"PullRequestEvent","CreatedAt":"2021-04-07T22:52:46","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13722","RelatedDescription":"Merged pull request \"Update branding for 2.1.5xx 2.1.5xx\" (#13722) at dotnet/cli","RelatedBody":""},{"Id":"15854960367","Type":"PullRequestEvent","CreatedAt":"2021-04-07T22:52:35","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13723","RelatedDescription":"Merged pull request \"Update branding for 2.1.8xx 2.1.8xx\" (#13723) at dotnet/cli","RelatedBody":""},{"Id":"15854954774","Type":"PullRequestEvent","CreatedAt":"2021-04-07T22:51:56","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13724","RelatedDescription":"Merged pull request \"Update branding for 3.1.4xx 3.1.4xx\" (#13724) at dotnet/cli","RelatedBody":""},{"Id":"15854828048","Type":"PullRequestEvent","CreatedAt":"2021-04-07T22:36:38","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13725","RelatedDescription":"Merged pull request \"Update branding for 3.1.1xx 3.1.1xx\" (#13725) at dotnet/cli","RelatedBody":""},{"Id":"15834104244","Type":"PullRequestEvent","CreatedAt":"2021-04-06T16:22:46","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13725","RelatedDescription":"Opened pull request \"Update branding for 3.1.1xx 3.1.1xx\" (#13725) at dotnet/cli","RelatedBody":""},{"Id":"15834095708","Type":"PullRequestEvent","CreatedAt":"2021-04-06T16:22:09","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13724","RelatedDescription":"Opened pull request \"Update branding for 3.1.4xx 3.1.4xx\" (#13724) at dotnet/cli","RelatedBody":""},{"Id":"15834087860","Type":"PullRequestEvent","CreatedAt":"2021-04-06T16:21:35","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13723","RelatedDescription":"Opened pull request \"Update branding for 2.1.8xx 2.1.8xx\" (#13723) at dotnet/cli","RelatedBody":""},{"Id":"15834077804","Type":"PullRequestEvent","CreatedAt":"2021-04-06T16:20:53","Actor":"marcpopMSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13722","RelatedDescription":"Opened pull request \"Update branding for 2.1.5xx 2.1.5xx\" (#13722) at dotnet/cli","RelatedBody":""},{"Id":"15631015992","Type":"PullRequestEvent","CreatedAt":"2021-03-22T03:43:22","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13721","RelatedDescription":"Merged pull request \"Loc update\" (#13721) at dotnet/cli","RelatedBody":"Loc update.\r\nSome files are flagging BOM differences."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"15849898358","Type":"IssuesEvent","CreatedAt":"2021-04-07T15:50:36","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Closed issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788) at dotnet/standard","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"15849762203","Type":"IssuesEvent","CreatedAt":"2021-04-07T15:41:49","Actor":"vsfeedback","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Opened issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788) at dotnet/standard","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"15697191096","Type":"IssuesEvent","CreatedAt":"2021-03-26T03:55:14","Actor":"rexcfnghk","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1787","RelatedDescription":"Opened issue \"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1\" (#1787) at dotnet/standard","RelatedBody":"# Summary\r\n\r\n.NET Standard version is not resolved correctly when a transitive dependency targets multiple .NET Standard versions.\r\n\r\n# Environment\r\n\r\n- Windows 10 (19042.746)\r\n- .NET 5 SDK 5.0.201\r\n\r\n# Minimal reproducible example\r\n[bug.zip](https://github.com/dotnet/standard/files/6209239/bug.zip)\r\n\r\nThis is a three-project solution:\r\n- `TestProject1` targeting `netcoreapp3.1`\r\n- `ClassProject1` targeting `netstandard2.0`\r\n- `ClassProject2` targeting *both* `netstandard2.0` and `netstandard2.1`\r\n\r\nThe project dependency chain is: `TestProject1 -> ClassProject1 -> ClassProject2`\r\n\r\nA method (`ClassProject2Test1`) on `ClassProject2` is hidden behind a `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n# The issue\r\n\r\nThe unit test failed with a `MissingMethodException`\r\n\r\n```\r\n[xUnit.net 00:00:00.38]     TestProject1.UnitTest1.Test1 [FAIL]\r\n  Failed TestProject1.UnitTest1.Test1 [2 ms]\r\n  Error Message:\r\n   System.MissingMethodException : Method not found: 'Void ClassLibrary2.Class2.Class2Test1()'.\r\n  Stack Trace:\r\n     at ClassLibrary1.Class1.Class1Test1()\r\n   at TestProject1.UnitTest1.Test1() in C:\\Users\\rex\\source\\netstandard-bug-repro\\TestProject1\\UnitTest1.cs:line 12\r\n```\r\n\r\n# Expected result\r\n\r\nThe compiler should have resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.0)*` \r\n\r\n# Actual result\r\n\r\nThe compiler resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.1)*` \r\n\r\nWhich causes the exception because the offending method, `ClassProject2Test1`, was hidden by the `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"15880971762","Type":"PullRequestEvent","CreatedAt":"2021-04-09T14:17:58","Actor":"aik-jahoda","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43064","RelatedDescription":"Merged pull request \"Update branding to 3.1.15\" (#43064) at dotnet/corefx","RelatedBody":""},{"Id":"15880963008","Type":"PullRequestEvent","CreatedAt":"2021-04-09T14:17:22","Actor":"aik-jahoda","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/43063","RelatedDescription":"Closed pull request \"Update branding to 2.1.28\" (#43063) at dotnet/corefx","RelatedBody":""},{"Id":"15866554854","Type":"PullRequestEvent","CreatedAt":"2021-04-08T15:52:35","Actor":"aik-jahoda","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/43064","RelatedDescription":"Opened pull request \"Update branding to 3.1.15\" (#43064) at dotnet/corefx","RelatedBody":""},{"Id":"15865852073","Type":"PullRequestEvent","CreatedAt":"2021-04-08T15:08:26","Actor":"aik-jahoda","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/43063","RelatedDescription":"Opened pull request \"Update branding to 2.1.28\" (#43063) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"15899467865","Type":"IssuesEvent","CreatedAt":"2021-04-12T03:59:06","Actor":"drewnoakes","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/52565","RelatedDescription":"Opened issue \"Identify and allow removing redundant braces\" (#52565) at dotnet/roslyn","RelatedBody":"**Brief description:**\r\n\r\nA feature I miss from ReSharper is the ability to quickly remove redundant braces from code.\r\n\r\nFor example, if an `if` statement is to be made unconditional, its inner block should be promoted. There's no quick gesture for this. I can quickly delete the `if (...)` line, then invoke a codefix on the remaining `{ ... }` (caret on the brace) to remove the brace and promote content.\r\n\r\n**Languages applicable:**\r\n\r\nC# only (I don't believe VB has an equivalent scoping construct).\r\n\r\n**Code example that the analyzer should report:**\r\n\r\n```c#\r\nvoid M()\r\n{\r\n    { // caret here, ctrl+dot, \"Remove redundant braces\"\r\n        Console.WriteLine(\"Hello\");\r\n    }\r\n}\r\n```\r\n\r\n...produces...\r\n\r\n```c#\r\nvoid M()\r\n{\r\n    Console.WriteLine(\"Hello\");\r\n}\r\n```\r\n\r\n**Additional information:**\r\n\r\nAn analyzer here might be helpful, however I would likely demote it to suggestion as there are legitimate (uncommon) use cases for braces around a chunk of code, to create a lexical scope alone.\r\n\r\n**Documentation requirements:**\r\n\r\nWhen this analyzer is implemented, it must be documented by following the steps at [Documentation for IDE CodeStyle analyzers](https://github.com/dotnet/roslyn/blob/main/docs/contributing/Documentation%20for%20IDE%20CodeStyle%20analyzers.md).\r\n"},{"Id":"15899299804","Type":"PullRequestEvent","CreatedAt":"2021-04-12T03:30:15","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/52564","RelatedDescription":"Opened pull request \"Suggest simplifying ToString with InvariantCulture inside FormattableString.Invariant\" (#52564) at dotnet/roslyn","RelatedBody":"The result of following https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1310 or https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1307 is often that you end up with `.ToString(CultureInfo.InvariantCulture)` in your code. Last week I found myself wanting a quick way to simplify code like this:\r\n\r\n```cs\r\nfirst.ToString(\"...\", CultureInfo.InvariantCulture) + second.ToString(\"...\", CultureInfo.InvariantCulture) + third.ToString(\"...\", CultureInfo.InvariantCulture)\r\n```\r\n\r\nSo I used the light bulb to convert concatenation to interpolation:\r\n```cs\r\n$\"{first.ToString(\"...\", CultureInfo.InvariantCulture)}{second.ToString(\"...\", CultureInfo.InvariantCulture)}{third.ToString(\"...\", CultureInfo.InvariantCulture)}\"\r\n```\r\n\r\nThen I manually added `FormattableString.Invariant(`...`)` around that, and at this point I thought it would be great if I could light-bulb fix the rest to end up with what I wanted:\r\n\r\n```cs\r\nFormattableString.Invariant($\"{first:...}{second:...}{third:...}\")\r\n```\r\n\r\nThis PR extends the existing 'Simplify interpolation' suggestion to cover this scenario."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"15899780880","Type":"PullRequestEvent","CreatedAt":"2021-04-12T04:49:23","Actor":"kartheekp-ms","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/16849","RelatedDescription":"Opened pull request \"parsing work for dotnet nuget verify command\" (#16849) at dotnet/sdk","RelatedBody":"Fixes: https://github.com/dotnet/sdk/issues/13702\r\n\r\n### Description\r\n"},{"Id":"15898796122","Type":"PullRequestEvent","CreatedAt":"2021-04-12T02:07:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/16814","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/arcade\" (#16814) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d9043af-0e17-4eb5-f3e3-08d8e97c775d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3d9043af-0e17-4eb5-f3e3-08d8e97c775d\r\n- **Build**: 20210409.17\r\n- **Date Produced**: 4/9/2021 10:54 PM\r\n- **Commit**: 28d9452d7e2ae4e98a1df735b90b03d3cac1f4e7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21207.4 to 6.0.0-beta.21209.17][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21207.4 to 6.0.0-beta.21209.17][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 6.0.0-beta.21207.4 to 6.0.0-beta.21209.17][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21207.4 to 6.0.0-beta.21209.17][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/86aee6d...28d9452\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3d9043af-0e17-4eb5-f3e3-08d8e97c775d)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"15898793980","Type":"PullRequestEvent","CreatedAt":"2021-04-12T02:06:59","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/16848","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/5.0.3xx' => 'main'\" (#16848) at dotnet/sdk","RelatedBody":"I detected changes in the release/5.0.3xx branch which have not been merged yet to main. I'm a robot and am configured to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.3xx by the following committers:\n\n* v-wuzhai\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.3xx\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.3xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.3xx-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.3xx-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.3xx-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"15898778263","Type":"PullRequestEvent","CreatedAt":"2021-04-12T02:04:23","Actor":"v-wuzhai","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/16812","RelatedDescription":"Merged pull request \"[release/5.0.3xx] Update dependencies from dotnet/fsharp\" (#16812) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8d76063a-5130-4369-8278-08d8e9754760)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 8d76063a-5130-4369-8278-08d8e9754760\r\n- **Build**: 20210410.9\r\n- **Date Produced**: 4/11/2021 3:37 AM\r\n- **Commit**: a08bfc6c5f2fe978110a9cbf05352d635d1a7983\r\n- **Branch**: refs/heads/release/dev16.10\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: [from 11.4.2-beta.21204.5 to 11.4.2-beta.21210.9][1]\r\n\r\n[1]: https://github.com/dotnet/fsharp/compare/df023d8...a08bfc6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8d76063a-5130-4369-8278-08d8e9754760)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"15898772775","Type":"PullRequestEvent","CreatedAt":"2021-04-12T02:03:30","Actor":"v-wuzhai","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/16815","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/fsharp\" (#16815) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b3ed604-a240-43c5-f3e6-08d8e97c775d)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 1b3ed604-a240-43c5-f3e6-08d8e97c775d\r\n- **Build**: 20210410.9\r\n- **Date Produced**: 4/11/2021 3:37 AM\r\n- **Commit**: a08bfc6c5f2fe978110a9cbf05352d635d1a7983\r\n- **Branch**: refs/heads/release/dev16.10\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: [from 11.4.2-beta.21204.5 to 11.4.2-beta.21210.9][1]\r\n\r\n[1]: https://github.com/dotnet/fsharp/compare/df023d8...a08bfc6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1b3ed604-a240-43c5-f3e6-08d8e97c775d)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"15897661825","Type":"PullRequestEvent","CreatedAt":"2021-04-11T22:00:57","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/16839","RelatedDescription":"Closed pull request \"Workload install nuget2\" (#16839) at dotnet/sdk","RelatedBody":""},{"Id":"15896267330","Type":"IssuesEvent","CreatedAt":"2021-04-11T16:50:24","Actor":"bombless","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/16847","RelatedDescription":"Opened issue \"MSBuild Exec task with ToolPath broken\" (#16847) at dotnet/sdk","RelatedBody":"# Repro steps\r\n\r\n\r\n-  On a non-Windows OS\r\n-   Run `dotnet msbuild` with the following project\r\n```xml\r\n<Project>\r\n    <Target Name=\"Build\">\r\n        <Exec ToolPath=\".\" Command=\"echo Hello World\" />\r\n    </Target>\r\n</Project>\r\n```\r\n# Expected\r\nBuild succeeds\r\n\r\n# Actual\r\nBuild fails with the following:\r\n```sh\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/Users/yuekexiang/t(3,9): error MSB6004: The specified task executable location \"./sh\" is invalid.\r\n```\r\n\r\n# Version\r\nI'm using installation from `https://download.visualstudio.microsoft.com/download/pr/749775e4-7b6f-4367-bb7a-9cb63a818dae/c2614b34e234fa03dc65320a8a954570/dotnet-sdk-5.0.202-osx-x64.pkg`\r\n`dotnet msbuild -ver` shows `16.9.0.11203`"},{"Id":"15896174241","Type":"PullRequestEvent","CreatedAt":"2021-04-11T16:30:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/16845","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/aspnetcore\" (#16845) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210411.1\r\n- **Date Produced**: 4/11/2021 2:42 PM\r\n- **Commit**: 1870441efdc00a6c253c2a5c54c20a313fb56ee2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/81936a7...1870441\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n"},{"Id":"15896084856","Type":"PullRequestEvent","CreatedAt":"2021-04-11T16:12:11","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/16846","RelatedDescription":"Opened pull request \"Add nuget.config, input source, preview support\" (#16846) at dotnet/sdk","RelatedBody":""},{"Id":"15895702505","Type":"PullRequestEvent","CreatedAt":"2021-04-11T14:54:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/16845","RelatedDescription":"Opened pull request \"[main] Update dependencies from dotnet/aspnetcore\" (#16845) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210411.1\r\n- **Date Produced**: 4/11/2021 2:42 PM\r\n- **Commit**: 1870441efdc00a6c253c2a5c54c20a313fb56ee2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/81936a7...1870441\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"nxtn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"nxtn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"nxtn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"nxtn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"nxtn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"nxtn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"nxtn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"853568674","IsPullRequest":true,"CreatedAt":"2021-04-09T09:41:35","Actor":"aik-jahoda","Number":"28157","RawContent":null,"Title":"Update branding to 2.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28157","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.28\" (#28157)"},{"Id":"853604820","IsPullRequest":true,"CreatedAt":"2021-04-08T15:41:44","Actor":"aik-jahoda","Number":"28158","RawContent":null,"Title":"Update branding to 3.1.15","State":"open","Body":"This version update was probably missed in previous release, hence now we increase by 2","Url":"https://github.com/dotnet/coreclr/pull/28158","RelatedDescription":"Open PR \"Update branding to 3.1.15\" (#28158)"},{"Id":"848652145","IsPullRequest":true,"CreatedAt":"2021-04-01T17:24:55","Actor":"ivdiazsa","Number":"28156","RawContent":null,"Title":"Added test comment to trigger pipelines","State":"open","Body":"This is just a dummy PR to test something out with the pipelines. It is not intended to be merged into the product.","Url":"https://github.com/dotnet/coreclr/pull/28156","RelatedDescription":"Open PR \"Added test comment to trigger pipelines\" (#28156)"},{"Id":"810673698","IsPullRequest":true,"CreatedAt":"2021-03-12T20:15:56","Actor":"echesakovMSFT","Number":"28149","RawContent":null,"Title":"[release/3.1] Enable additional CI testing","State":"closed","Body":"Enable additional CI testing using new Helix queue Windows.10.Arm64v8.Open.\r\n\r\n\r\n### Customer Impact\r\nNone\r\n\r\n### Testing\r\nValidated the change by manually triggering two pipelines [coreclr-ci#20210217.2](https://dev.azure.com/dnceng/public/_build/results?buildId=999073) and [coreclr-outerloop#20210217.1](https://dev.azure.com/dnceng/public/_build/results?buildId=999284)\r\n\r\n### Risk\r\nNone - the change affects testing infrastructure only\r\n\r\n\r\ncc @BruceForstall @JulieLeeMSFT @jeffschwMSFT ","Url":"https://github.com/dotnet/coreclr/pull/28149","RelatedDescription":"Closed or merged PR \"[release/3.1] Enable additional CI testing\" (#28149)"},{"Id":"825432093","IsPullRequest":true,"CreatedAt":"2021-03-11T22:30:18","Actor":"kouvel","Number":"28153","RawContent":null,"Title":"[3.1] Use native code slot for default interface methods (#25770)","State":"closed","Body":"- Partial port of https://github.com/dotnet/coreclr/pull/25770 to 3.1 (only the main change, excludes unrelated cleanup)\r\n- Use native code slot for default interface methods so that `MethodDesc::GetNativeCode()` can retrieve the current native code entry point (instead of returning null as before), and code versioning can find a matching code version from the code start address\r\n- Interface methods currently require having a precode, so the \"method entry point\" can't be used to directly store the native code entry point\r\n- Reenabled a couple of default interface method tests under GCStress\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/25690\r\n\r\n### Customer impact\r\n\r\nMostly only affects some GCStress tests. The change can have harmless non-test effects, for example a default interface method may be jitted redundantly fewer times after the change (as expected), since before the change the call to `GetNativeCode()` here would always return null for a default interface method and the method may be jitted again unnecessarily.\r\nhttps://github.com/dotnet/coreclr/blob/867aa5e1141c8801796a80171a3749d944c6b9af/src/vm/codeversion.cpp#L2304-L2309\r\n\r\nOtherwise, the main purpose of the port is to fix some GCStress tests to make CI runs more reliable and useful for testing other fixes made to 3.1.\r\n\r\n### Testing\r\n\r\n@echesakovMSFT has verified that all related GCStress failures are fixed after the change on Windows arm64 where the issues were seen.\r\n\r\n### Risk\r\n\r\nLow:\r\n- The change has been in all of the 5.0 releases\r\n- The change makes tracking of the native code for default interface methods similar to other methods that have a precode and don't have a stable entry point, so the behavior would be more consistent with other types of methods\r\n- The native code slot for default interface methods is a pointer-size extra memory per such method, it wouldn't be significant as the number of such methods is typically low compared to other types of methods, and most other methods already use a native code slot","Url":"https://github.com/dotnet/coreclr/pull/28153","RelatedDescription":"Closed or merged PR \"[3.1] Use native code slot for default interface methods (#25770)\" (#28153)"},{"Id":"807495713","IsPullRequest":true,"CreatedAt":"2021-03-10T12:31:00","Actor":"briansull","Number":"28146","RawContent":null,"Title":"[release/3.1] Backport the fix for dotnet/runtime issue 46529","State":"closed","Body":"5.0.x version of this change: https://github.com/dotnet/runtime/pull/47741\r\n\r\n### Incorrect behavior a 64-bit long with shift of 32 or more combined with a cast to int \r\n\r\nThe JIT generates incorrect code for this code pattern:\r\n\r\n`(int) (X << C)`\r\n\r\nwhere C >= 32 and\r\nand  X is anything with a potential side-effect and is 64-bit integer type\r\n\r\n## Customer Impact\r\n\r\nReported by customer who was migrating to .Net Core from the Desktop runtime.\r\n\r\n## Regression?\r\n\r\nThis is a regression that was introduced in the .Net 3.X timeframe by \r\nhttps://github.com/dotnet/coreclr/pull/19899\r\n\r\n\r\n## Risk\r\n\r\nLow\r\n\r\nFixes issue #47724","Url":"https://github.com/dotnet/coreclr/pull/28146","RelatedDescription":"Closed or merged PR \"[release/3.1] Backport the fix for dotnet/runtime issue 46529\" (#28146)"},{"Id":"809951727","IsPullRequest":true,"CreatedAt":"2021-03-10T12:26:40","Actor":"davmason","Number":"28148","RawContent":null,"Title":"GCStress eventing fix","State":"closed","Body":"Port #26776 to 3.1. \r\n\r\nEventPipe had an issue where it would see a reentrant stackwalk during GCStress, which triggers asserts on checked or debug builds.\r\n\r\n## Customer Impact\r\nHaving tests fail under GCStress means we are less confident when preparing fixes for 3.1. We could alternatively disable these tests under GCStress, but that would mean less testing when doing GCStress runs.\r\n\r\n## Testing\r\nThis fix was in master for effectively all of the 5.0 release, and I verified that it fixes the failing eventing tests by running the tests manually.\r\n\r\n## Risk\r\nThe risk is low, this fix shipped in 5.0.","Url":"https://github.com/dotnet/coreclr/pull/28148","RelatedDescription":"Closed or merged PR \"GCStress eventing fix\" (#28148)"},{"Id":"810807167","IsPullRequest":true,"CreatedAt":"2021-03-10T12:23:17","Actor":"hoyosjs","Number":"28150","RawContent":null,"Title":"[release/3.1] Fix lazy machine state unwinding for MSVC epilogues on x86","State":"closed","Body":"# Description\r\n\r\nMSVC introduced changes into their prologue/epilogue helpers. Particularly `_EH_prolog3_catch_GS_align`/`_EH_epilog3_GS_align` had a `mov esp, ebx` instruction the lazy unwinding didn't handle. This helper ended up getting called by 3 FCalls in all coreclr: \r\n\r\n- `DebugDebugger::Log`\r\n- `StubHelpers::ValidateObjec`\r\n- `COMDelegate::BindToMethodName`\r\n\r\n# Customer Impact\r\n\r\nCustomers will see seeing seemingly random behavior once one of these stubs is hit. This manifests as GC holes where the stack walking caused the GC to not find stack roots, effectively unrooting object with references in the stack. A customer reported this from their use of `Debug.WriteLine` .\r\n\r\n# Regression?\r\n\r\nYes, with respect to previous releases. The regression was caused by a native toolset update in the build agents.\r\n\r\n# Testing\r\n\r\nA repro app that used to crash in under a second using GC stress ran successfully for 12+hrs with no issues. \r\n\r\n# Risk\r\n\r\nVery targeted fix, both @jkotas and I have stepped through the unwinder logic and it's as minimally invasive as possible while preserving correctness. ","Url":"https://github.com/dotnet/coreclr/pull/28150","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix lazy machine state unwinding for MSVC epilogues on x86\" (#28150)"},{"Id":"826727031","IsPullRequest":true,"CreatedAt":"2021-03-09T23:05:45","Actor":"aik-jahoda","Number":"28155","RawContent":null,"Title":"merge 2.1.26 internal","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28155","RelatedDescription":"Closed or merged PR \"merge 2.1.26 internal\" (#28155)"},{"Id":"826473207","IsPullRequest":true,"CreatedAt":"2021-03-09T19:00:51","Actor":"sdmaclea","Number":"28154","RawContent":null,"Title":"Merge tag 'v3.1.13' into release/3.1-crossdac","State":"closed","Body":"FYI @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/28154","RelatedDescription":"Closed or merged PR \"Merge tag 'v3.1.13' into release/3.1-crossdac\" (#28154)"},{"Id":"816912779","IsPullRequest":true,"CreatedAt":"2021-02-26T16:57:01","Actor":"Anipik","Number":"28151","RawContent":null,"Title":"update branding to 3.1.14","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28151","RelatedDescription":"Closed or merged PR \"update branding to 3.1.14\" (#28151)"},{"Id":"816913038","IsPullRequest":true,"CreatedAt":"2021-02-26T16:56:56","Actor":"Anipik","Number":"28152","RawContent":null,"Title":"update branding to 2.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28152","RelatedDescription":"Closed or merged PR \"update branding to 2.1.27\" (#28152)"},{"Id":"804792050","IsPullRequest":true,"CreatedAt":"2021-02-12T21:37:53","Actor":"dotnet-bot","Number":"28135","RawContent":null,"Title":"[release/uwp6.2] NuGet Feed Update","State":"closed","Body":"# NuGet Feed Update\r\nThis pull request updates the usage of NuGet.org in cases where it is used in conjunction with other feeds.\r\n\r\n## Is this PR required?\r\nGenerally yes. If the target branch is no longer in use and will not need to be built in the future, please close this PR.\r\n\r\n## This PR is broken build, what do I do?\r\nIf packages are missing, please tag 'dotnet/dnceng' or 'mmitche' on this PR and note the missing packages.\r\nIf there are other unexpected failures, please contact 'dotnet/dnceng'.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28135","RelatedDescription":"Closed or merged PR \"[release/uwp6.2] NuGet Feed Update\" (#28135)"},{"Id":"807562133","IsPullRequest":true,"CreatedAt":"2021-02-12T21:35:26","Actor":"dotnet-maestro[bot]","Number":"28147","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21072.7 to 2.2.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21072.7 to 2.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/620462d...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28147","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28147)"},{"Id":"804792136","IsPullRequest":true,"CreatedAt":"2021-02-12T21:34:57","Actor":"dotnet-bot","Number":"28136","RawContent":null,"Title":"[release/uwp6.1] NuGet Feed Update","State":"closed","Body":"# NuGet Feed Update\r\nThis pull request updates the usage of NuGet.org in cases where it is used in conjunction with other feeds.\r\n\r\n## Is this PR required?\r\nGenerally yes. If the target branch is no longer in use and will not need to be built in the future, please close this PR.\r\n\r\n## This PR is broken build, what do I do?\r\nIf packages are missing, please tag 'dotnet/dnceng' or 'mmitche' on this PR and note the missing packages.\r\nIf there are other unexpected failures, please contact 'dotnet/dnceng'.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28136","RelatedDescription":"Closed or merged PR \"[release/uwp6.1] NuGet Feed Update\" (#28136)"},{"Id":"807393030","IsPullRequest":true,"CreatedAt":"2021-02-12T17:04:02","Actor":"dotnet-maestro[bot]","Number":"28145","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20210210.10\r\n- **Date Produced**: 2/10/2021 9:28 PM\r\n- **Commit**: 251249a04a9686ca2660e2acaa3094446a48f10d\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21110.10][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21072.7 to 2.2.0-beta.21110.10][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21110.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21072.7 to 2.0.0-beta.21110.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/620462d...251249a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28145","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28145)"},{"Id":"806751414","IsPullRequest":true,"CreatedAt":"2021-02-11T21:21:42","Actor":"mmitche","Number":"28144","RawContent":null,"Title":"Fixup feeds","State":"closed","Body":"Move to myget-legacy so that everything is dev.azure.com","Url":"https://github.com/dotnet/coreclr/pull/28144","RelatedDescription":"Closed or merged PR \"Fixup feeds\" (#28144)"},{"Id":"805787779","IsPullRequest":true,"CreatedAt":"2021-02-11T16:12:12","Actor":"jashook","Number":"28142","RawContent":null,"Title":"Fix build by applying patch from master","State":"closed","Body":"This applies https://github.com/dotnet/runtime/pull/41900 to release/3.1. So that unsuspecting travelers do not need to do so in the future :)","Url":"https://github.com/dotnet/coreclr/pull/28142","RelatedDescription":"Closed or merged PR \"Fix build by applying patch from master\" (#28142)"},{"Id":"806000764","IsPullRequest":true,"CreatedAt":"2021-02-11T01:02:13","Actor":"ivdiazsa","Number":"28143","RawContent":null,"Title":"Port from 5.0: Fix Position Independent Code in CMake files","State":"open","Body":"This is a direct port from PR #26323 in this same repo. This one was added during .NET Core 5.0 development but there is a customer need to also have it in the .NET Core 3.1 release.\r\n\r\nIn summary, the `-pie` linker option was missing and while the code was being compiled as Position Independent, the executables weren't, and therefore ASLR was not applied to them. This resulted in them being loaded to fixed addresses, which might potentially open vulnerabilities.\r\n\r\nThis port also automates the appliance of the `-fPIC/-fPIE` settings to all targets from a single centralized setting called `CMAKE_POSITION_INDEPENDENT_CODE`, which allows CMake to apply the appropriate compiler options without further need of manual specification.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28143","RelatedDescription":"Open PR \"Port from 5.0: Fix Position Independent Code in CMake files\" (#28143)"},{"Id":"795592111","IsPullRequest":true,"CreatedAt":"2021-02-10T22:28:46","Actor":"VSadov","Number":"28131","RawContent":null,"Title":"[release/3.1] Capture AVX context when redirecting threads for suspension","State":"closed","Body":"Re: https://github.com/dotnet/runtime/issues/38974, https://github.com/dotnet/runtime/issues/47016\r\n\r\nThese are the same changes as in https://github.com/dotnet/runtime/pull/47212\r\n\r\n## Customer Impact\r\nOnce we move to the new toolset, managed code that employs AVX register set directly or indirectly (as in `Span<byte>` helpers) may occasionally observe incorrect computation results.\r\n\r\n## Testing\r\nThe fix was tested and merged in master. This is a port of the fix.\r\n\r\n## Risk\r\nMaster branch had this fix for some time now. Based on that the risk is low.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28131","RelatedDescription":"Closed or merged PR \"[release/3.1] Capture AVX context when redirecting threads for suspension\" (#28131)"},{"Id":"804153584","IsPullRequest":true,"CreatedAt":"2021-02-10T22:20:24","Actor":"jkotas","Number":"28132","RawContent":null,"Title":"[release/3.1] Fix FC_NO_TAILCALL with newer compilers","State":"closed","Body":"Port #dotnet/runtime#45999 to release/3.1\r\n\r\n## Customer Impact\r\nOnce we move to the new MSVC toolset, we will see intermittent runtime crashes during GC without this fix.\r\n\r\nThe new MSVC  toolset performs more optimizations that violate invariants in the low-level runtime code. This change is suppressing the optimization in a specific situation.\r\n\r\n## Testing\r\nThe fix was tested and merged in master. This is a port of the fix.\r\n\r\n## Risk\r\nMaster branch had this fix for some time now. Based on that the risk is low.","Url":"https://github.com/dotnet/coreclr/pull/28132","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix FC_NO_TAILCALL with newer compilers\" (#28132)"},{"Id":"805746657","IsPullRequest":true,"CreatedAt":"2021-02-10T22:19:29","Actor":"dotnet-maestro[bot]","Number":"28141","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20210122.7\r\n- **Date Produced**: 1/22/2021 7:58 PM\r\n- **Commit**: 620462dd065490620c03a80cea8e251004f6bf21\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21063.4 to 1.0.0-beta.21072.7][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21063.4 to 2.2.0-beta.21072.7][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21063.4 to 1.0.0-beta.21072.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21063.4 to 2.0.0-beta.21072.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d01f08a...620462d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28141","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28141)"},{"Id":"804791911","IsPullRequest":true,"CreatedAt":"2021-02-10T20:24:00","Actor":"dotnet-bot","Number":"28133","RawContent":null,"Title":"[release/3.1-crossdac] NuGet Feed Update","State":"closed","Body":"# NuGet Feed Update\r\nThis pull request updates the usage of NuGet.org in cases where it is used in conjunction with other feeds.\r\n\r\n## Is this PR required?\r\nGenerally yes. If the target branch is no longer in use and will not need to be built in the future, please close this PR.\r\n\r\n## This PR is broken build, what do I do?\r\nIf packages are missing, please tag 'dotnet/dnceng' or 'mmitche' on this PR and note the missing packages.\r\nIf there are other unexpected failures, please contact 'dotnet/dnceng'.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28133","RelatedDescription":"Closed or merged PR \"[release/3.1-crossdac] NuGet Feed Update\" (#28133)"},{"Id":"804791981","IsPullRequest":true,"CreatedAt":"2021-02-10T17:57:47","Actor":"dotnet-bot","Number":"28134","RawContent":null,"Title":"[release/3.1] NuGet Feed Update","State":"closed","Body":"# NuGet Feed Update\r\nThis pull request updates the usage of NuGet.org in cases where it is used in conjunction with other feeds.\r\n\r\n## Is this PR required?\r\nGenerally yes. If the target branch is no longer in use and will not need to be built in the future, please close this PR.\r\n\r\n## This PR is broken build, what do I do?\r\nIf packages are missing, please tag 'dotnet/dnceng' or 'mmitche' on this PR and note the missing packages.\r\nIf there are other unexpected failures, please contact 'dotnet/dnceng'.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28134","RelatedDescription":"Closed or merged PR \"[release/3.1] NuGet Feed Update\" (#28134)"},{"Id":"805736028","IsPullRequest":true,"CreatedAt":"2021-02-10T17:52:21","Actor":"sdmaclea","Number":"28140","RawContent":null,"Title":"Merge v3.1.12 to release/3.1-crossdac","State":"closed","Body":"/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/28140","RelatedDescription":"Closed or merged PR \"Merge v3.1.12 to release/3.1-crossdac\" (#28140)"},{"Id":"805001220","IsPullRequest":true,"CreatedAt":"2021-02-10T05:42:31","Actor":"aik-jahoda","Number":"28138","RawContent":null,"Title":"Update branding to 3.1.13","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28138","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.13\" (#28138)"},{"Id":"805149381","IsPullRequest":true,"CreatedAt":"2021-02-10T04:19:13","Actor":"Anipik","Number":"28139","RawContent":null,"Title":"Add Merge History ","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28139","RelatedDescription":"Closed or merged PR \"Add Merge History \" (#28139)"},{"Id":"804975858","IsPullRequest":true,"CreatedAt":"2021-02-10T04:13:14","Actor":"aik-jahoda","Number":"28137","RawContent":null,"Title":"Update branding to 2.1.26","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28137","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.26\" (#28137)"},{"Id":"789394230","IsPullRequest":true,"CreatedAt":"2021-01-19T21:39:40","Actor":"omajid","Number":"28130","RawContent":null,"Title":"[release/3.1] Fix libunwind linking with gcc10, clang11 or -fno-common","State":"open","Body":"Linking coreclr with gcc 10 or clang 11 (both of which default to -fno-common) fails with this error:\r\n\r\n```\r\n[31%] Linking CXX shared library libdbgshim.so                                                                                                               \r\n/usr/bin/ld: ../../pal/src/libcoreclrpal.a(dyn-info-list.c.o):/home/omajid/devel/dotnet/coreclr/src/pal/src/libunwind/src/mi/dyn-info-list.c:28: multiple definition of `_U_dyn_info_list'; ../../pal/src/libcoreclrpal.a(Linit.c.o):/home/omajid/devel/dotnet/coreclr/src/pal/src/libunwind/src/x86_64/Ginit.c:52: first defined here\r\n```\r\n\r\nThis PR fixes that.\r\n\r\n~~This is of https://github.com/libunwind/libunwind/pull/166, with one change: there's no s390x file in coreclr's copy of libunwind, so I removed that chunk. Otherwise the change applies as-is.~~\r\n\r\n~~This was also added to runtime 5.0 with https://github.com/dotnet/runtime/commit/581dc193406082f76ae3c58511f724ab5d5c0d6d#diff-c144efc97b24537a136fc6842bad278829924e76dffa2f09ad1d8f078b8c116b, as part of the larger update to libunwind 1.5~~\r\n\r\n# Customer impact\r\nCustomers like Redhat cannot build .NET Core using clang11 without this fix.\r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nRedhat side testing.\r\n\r\n# Risk\r\nLow, the change just adds a compiler option that doesn't affect the behavior on Clang older than 11 (the ones that we use for our product builds)","Url":"https://github.com/dotnet/coreclr/pull/28130","RelatedDescription":"Open PR \"[release/3.1] Fix libunwind linking with gcc10, clang11 or -fno-common\" (#28130)"},{"Id":"789170180","IsPullRequest":true,"CreatedAt":"2021-01-19T16:29:09","Actor":"sdmaclea","Number":"28129","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade (#28121)","State":"closed","Body":"* Update dependencies from https://github.com/dotnet/arcade build 20201221.2\r\n\r\nMicrosoft.DotNet.Arcade.Sdk , Microsoft.DotNet.Build.Tasks.Feed , Microsoft.DotNet.Build.Tasks.Packaging , Microsoft.DotNet.Helix.Sdk\r\n From Version 1.0.0-beta.20113.5 -> To Version 1.0.0-beta.20621.2\r\n\r\n* Update dependencies from https://github.com/dotnet/arcade build 20210113.4\r\n\r\nMicrosoft.DotNet.Arcade.Sdk , Microsoft.DotNet.Build.Tasks.Feed , Microsoft.DotNet.Build.Tasks.Packaging , Microsoft.DotNet.Helix.Sdk\r\n From Version 1.0.0-beta.20113.5 -> To Version 1.0.0-beta.21063.4\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>","Url":"https://github.com/dotnet/coreclr/pull/28129","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade (#28121)\" (#28129)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"851588599","IsPullRequest":true,"CreatedAt":"2021-04-07T22:52:45","Actor":"marcpopMSFT","Number":"13722","RawContent":null,"Title":"Update branding for 2.1.5xx 2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13722","RelatedDescription":"Closed or merged PR \"Update branding for 2.1.5xx 2.1.5xx\" (#13722)"},{"Id":"851589292","IsPullRequest":true,"CreatedAt":"2021-04-07T22:52:35","Actor":"marcpopMSFT","Number":"13723","RawContent":null,"Title":"Update branding for 2.1.8xx 2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13723","RelatedDescription":"Closed or merged PR \"Update branding for 2.1.8xx 2.1.8xx\" (#13723)"},{"Id":"851590078","IsPullRequest":true,"CreatedAt":"2021-04-07T22:51:55","Actor":"marcpopMSFT","Number":"13724","RawContent":null,"Title":"Update branding for 3.1.4xx 3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13724","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.4xx 3.1.4xx\" (#13724)"},{"Id":"851590590","IsPullRequest":true,"CreatedAt":"2021-04-07T22:36:37","Actor":"marcpopMSFT","Number":"13725","RawContent":null,"Title":"Update branding for 3.1.1xx 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13725","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.1xx 3.1.1xx\" (#13725)"},{"Id":"833347628","IsPullRequest":true,"CreatedAt":"2021-03-22T03:43:22","Actor":"cristianosuzuki77","Number":"13721","RawContent":null,"Title":"Loc update","State":"closed","Body":"Loc update.\r\nSome files are flagging BOM differences.","Url":"https://github.com/dotnet/cli/pull/13721","RelatedDescription":"Closed or merged PR \"Loc update\" (#13721)"},{"Id":"833200255","IsPullRequest":true,"CreatedAt":"2021-03-17T02:17:07","Actor":"cristianosuzuki77","Number":"13720","RawContent":null,"Title":"Loc update","State":"closed","Body":"Updates to 2.1.5xx\r\nSeveral files are being flagged with BOM changes only.  ","Url":"https://github.com/dotnet/cli/pull/13720","RelatedDescription":"Closed or merged PR \"Loc update\" (#13720)"},{"Id":"826949194","IsPullRequest":true,"CreatedAt":"2021-03-11T17:59:09","Actor":"dotnet-maestro-bot","Number":"13711","RawContent":null,"Title":"Update coresetup to preview1-26216-03 (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13711","RelatedDescription":"Closed or merged PR \"Update coresetup to preview1-26216-03 (release/2.1.6xx)\" (#13711)"},{"Id":"826948297","IsPullRequest":true,"CreatedAt":"2021-03-11T17:58:16","Actor":"dotnet-maestro-bot","Number":"13709","RawContent":null,"Title":"Update coresetup to preview1-26216-03 (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13709","RelatedDescription":"Closed or merged PR \"Update coresetup to preview1-26216-03 (release/2.1.8xx)\" (#13709)"},{"Id":"827414231","IsPullRequest":true,"CreatedAt":"2021-03-11T17:57:11","Actor":"v-wuzhai","Number":"13715","RawContent":null,"Title":"Merge internal changes for 3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13715","RelatedDescription":"Closed or merged PR \"Merge internal changes for 3.1.4xx\" (#13715)"},{"Id":"827407323","IsPullRequest":true,"CreatedAt":"2021-03-11T17:57:05","Actor":"v-wuzhai","Number":"13714","RawContent":null,"Title":"Merge internal changes for 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13714","RelatedDescription":"Closed or merged PR \"Merge internal changes for 3.1.1xx\" (#13714)"},{"Id":"826948483","IsPullRequest":true,"CreatedAt":"2021-03-11T17:51:50","Actor":"dotnet-maestro-bot","Number":"13710","RawContent":null,"Title":"Update coresetup to preview1-26216-03 (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13710","RelatedDescription":"Closed or merged PR \"Update coresetup to preview1-26216-03 (release/2.1.5xx)\" (#13710)"},{"Id":"828445958","IsPullRequest":true,"CreatedAt":"2021-03-11T17:24:02","Actor":"marcpopMSFT","Number":"13718","RawContent":null,"Title":"Update branding for 3.1.4xx 3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13718","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.4xx 3.1.4xx\" (#13718)"},{"Id":"828454257","IsPullRequest":true,"CreatedAt":"2021-03-11T17:22:38","Actor":"marcpopMSFT","Number":"13719","RawContent":null,"Title":"Update branding for 3.1.1xx 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13719","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.1xx 3.1.1xx\" (#13719)"},{"Id":"828131264","IsPullRequest":true,"CreatedAt":"2021-03-11T03:06:36","Actor":"dotnet-maestro[bot]","Number":"13716","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/251249a...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13716","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13716)"},{"Id":"828139685","IsPullRequest":true,"CreatedAt":"2021-03-10T18:56:14","Actor":"dotnet-maestro[bot]","Number":"13717","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/251249a...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13717","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13717)"},{"Id":"827365757","IsPullRequest":true,"CreatedAt":"2021-03-10T17:52:11","Actor":"v-wuzhai","Number":"13713","RawContent":null,"Title":"Merge internal changes for 2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13713","RelatedDescription":"Closed or merged PR \"Merge internal changes for 2.1.8xx\" (#13713)"},{"Id":"827334955","IsPullRequest":true,"CreatedAt":"2021-03-10T17:52:08","Actor":"v-wuzhai","Number":"13712","RawContent":null,"Title":"Merge internal changes for 2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13712","RelatedDescription":"Closed or merged PR \"Merge internal changes for 2.1.5xx\" (#13712)"},{"Id":"806632928","IsPullRequest":true,"CreatedAt":"2021-03-05T00:05:49","Actor":"dotnet-maestro-bot","Number":"13699","RawContent":null,"Title":"Update coresetup to preview1-26216-03 (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13699","RelatedDescription":"Closed or merged PR \"Update coresetup to preview1-26216-03 (release/2.1.8xx)\" (#13699)"},{"Id":"806632793","IsPullRequest":true,"CreatedAt":"2021-03-05T00:05:30","Actor":"dotnet-maestro-bot","Number":"13698","RawContent":null,"Title":"Update coresetup to preview1-26216-03 (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13698","RelatedDescription":"Closed or merged PR \"Update coresetup to preview1-26216-03 (release/2.1.5xx)\" (#13698)"},{"Id":"816724126","IsPullRequest":true,"CreatedAt":"2021-03-01T17:30:56","Actor":"marcpopMSFT","Number":"13705","RawContent":null,"Title":"Update branding for 2.1.5xx 2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13705","RelatedDescription":"Closed or merged PR \"Update branding for 2.1.5xx 2.1.5xx\" (#13705)"},{"Id":"816724448","IsPullRequest":true,"CreatedAt":"2021-03-01T17:30:44","Actor":"marcpopMSFT","Number":"13706","RawContent":null,"Title":"Update branding for 2.1.8xx 2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13706","RelatedDescription":"Closed or merged PR \"Update branding for 2.1.8xx 2.1.8xx\" (#13706)"},{"Id":"816724805","IsPullRequest":true,"CreatedAt":"2021-03-01T17:30:28","Actor":"marcpopMSFT","Number":"13707","RawContent":null,"Title":"Update branding for 3.1.4xx 3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13707","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.4xx 3.1.4xx\" (#13707)"},{"Id":"816725223","IsPullRequest":true,"CreatedAt":"2021-03-01T17:30:20","Actor":"marcpopMSFT","Number":"13708","RawContent":null,"Title":"Update branding for 3.1.1xx 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13708","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.1xx 3.1.1xx\" (#13708)"},{"Id":"807386319","IsPullRequest":true,"CreatedAt":"2021-02-12T18:25:10","Actor":"dotnet-maestro[bot]","Number":"13703","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20210210.10\r\n- **Date Produced**: 2/10/2021 9:28 PM\r\n- **Commit**: 251249a04a9686ca2660e2acaa3094446a48f10d\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21110.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/620462d...251249a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13703","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13703)"},{"Id":"807390040","IsPullRequest":true,"CreatedAt":"2021-02-12T17:34:47","Actor":"dotnet-maestro[bot]","Number":"13704","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20210210.10\r\n- **Date Produced**: 2/10/2021 9:28 PM\r\n- **Commit**: 251249a04a9686ca2660e2acaa3094446a48f10d\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21072.7 to 1.0.0-beta.21110.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/620462d...251249a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13704","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13704)"},{"Id":"806693478","IsPullRequest":true,"CreatedAt":"2021-02-11T23:50:00","Actor":"dsplaisted","Number":"13701","RawContent":null,"Title":"Test commit for CI","State":"closed","Body":"Test if CI failures from #13691 repro with no code changes","Url":"https://github.com/dotnet/cli/pull/13701","RelatedDescription":"Closed or merged PR \"Test commit for CI\" (#13701)"},{"Id":"806722015","IsPullRequest":true,"CreatedAt":"2021-02-11T21:58:18","Actor":"wtgodbe","Number":"13702","RawContent":null,"Title":"Update SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13702","RelatedDescription":"Closed or merged PR \"Update SDK\" (#13702)"},{"Id":"806650970","IsPullRequest":true,"CreatedAt":"2021-02-11T20:21:55","Actor":"wtgodbe","Number":"13700","RawContent":null,"Title":"[relelase/3.1.1xx] Re-enable SDL validation","State":"closed","Body":"We can re-enable this now that we've gotten an arcade update","Url":"https://github.com/dotnet/cli/pull/13700","RelatedDescription":"Closed or merged PR \"[relelase/3.1.1xx] Re-enable SDL validation\" (#13700)"},{"Id":"806565537","IsPullRequest":true,"CreatedAt":"2021-02-11T19:37:22","Actor":"dsplaisted","Number":"13697","RawContent":null,"Title":"Merge internal changes for 2.1.521","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13697","RelatedDescription":"Closed or merged PR \"Merge internal changes for 2.1.521\" (#13697)"},{"Id":"806067019","IsPullRequest":true,"CreatedAt":"2021-02-11T19:21:10","Actor":"dotnet-maestro-bot","Number":"13696","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* marcpopMSFT\n* dsplaisted\n* dotnet-maestro[bot]\n* dotnet-bot\n* wtgodbe\n* mmitche\n* joeloff\n* ChadNedzlek\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13696","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13696)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"852541719","IsPullRequest":false,"CreatedAt":"2021-04-07T15:50:35","Actor":"vsfeedback","Number":"1788","RawContent":null,"Title":"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Closed issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788)"},{"Id":"841566004","IsPullRequest":false,"CreatedAt":"2021-03-26T03:55:14","Actor":"rexcfnghk","Number":"1787","RawContent":null,"Title":"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1","State":"open","Body":"# Summary\r\n\r\n.NET Standard version is not resolved correctly when a transitive dependency targets multiple .NET Standard versions.\r\n\r\n# Environment\r\n\r\n- Windows 10 (19042.746)\r\n- .NET 5 SDK 5.0.201\r\n\r\n# Minimal reproducible example\r\n[bug.zip](https://github.com/dotnet/standard/files/6209239/bug.zip)\r\n\r\nThis is a three-project solution:\r\n- `TestProject1` targeting `netcoreapp3.1`\r\n- `ClassProject1` targeting `netstandard2.0`\r\n- `ClassProject2` targeting *both* `netstandard2.0` and `netstandard2.1`\r\n\r\nThe project dependency chain is: `TestProject1 -> ClassProject1 -> ClassProject2`\r\n\r\nA method (`ClassProject2Test1`) on `ClassProject2` is hidden behind a `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n# The issue\r\n\r\nThe unit test failed with a `MissingMethodException`\r\n\r\n```\r\n[xUnit.net 00:00:00.38]     TestProject1.UnitTest1.Test1 [FAIL]\r\n  Failed TestProject1.UnitTest1.Test1 [2 ms]\r\n  Error Message:\r\n   System.MissingMethodException : Method not found: 'Void ClassLibrary2.Class2.Class2Test1()'.\r\n  Stack Trace:\r\n     at ClassLibrary1.Class1.Class1Test1()\r\n   at TestProject1.UnitTest1.Test1() in C:\\Users\\rex\\source\\netstandard-bug-repro\\TestProject1\\UnitTest1.cs:line 12\r\n```\r\n\r\n# Expected result\r\n\r\nThe compiler should have resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.0)*` \r\n\r\n# Actual result\r\n\r\nThe compiler resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.1)*` \r\n\r\nWhich causes the exception because the offending method, `ClassProject2Test1`, was hidden by the `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1787","RelatedDescription":"Open issue \"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1\" (#1787)"},{"Id":"773128444","IsPullRequest":false,"CreatedAt":"2020-12-22T17:42:11","Actor":"rathnagiri","Number":"1786","RawContent":null,"Title":"Security Vulnerability due to System.Text.RegularExpressions","State":"open","Body":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n","Url":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Open issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786)"},{"Id":"761600986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:17:30","Actor":"tmds","Number":"1785","RawContent":null,"Title":"mono and .NET5+","State":"closed","Body":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?","Url":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785)"},{"Id":"757516698","IsPullRequest":false,"CreatedAt":"2020-12-05T02:37:36","Actor":"Nilotaviano","Number":"1784","RawContent":null,"Title":"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()","State":"open","Body":"The code below works perfectly on Windows, but doesn't work when deployed on Ubuntu 16.10. The `configuration` is initially loaded, but is never reloaded afterwards when `appsettings.json` is modified on Ubuntu (it works on Windows and I get to see the `App Settings reloaded` log message).\r\n\r\n```\r\nprivate static AppSettings GetAppSettings()\r\n{\r\n    var configuration = new ConfigurationBuilder()\r\n        .AddJsonFile(Path.Combine(System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName, \"..\", \"appsettings.json\"), optional: false, reloadOnChange: true)\r\n        .Build();\r\n\r\n    ChangeToken.OnChange(() => configuration.GetReloadToken(), () =>\r\n    {\r\n        Logger.LogMessage(\"App Settings reloaded\");\r\n    });\r\n\r\n    return appSettings;\r\n}\r\n```\r\n\r\n.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;ubuntu.16.10-x64</RuntimeIdentifiers>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNet.SignalR.Client\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"RestSharp\" Version=\"106.11.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nPublish profile:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\nhttps://go.microsoft.com/fwlink/?LinkID=208121. \r\n-->\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <Configuration>Release</Configuration>\r\n    <Platform>Any CPU</Platform>\r\n    <PublishDir>bin\\Release\\netcoreapp3.1\\publish\\</PublishDir>\r\n    <PublishProtocol>FileSystem</PublishProtocol>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifier>ubuntu.16.10-x64</RuntimeIdentifier>\r\n    <SelfContained>true</SelfContained>\r\n    <PublishSingleFile>True</PublishSingleFile>\r\n    <PublishTrimmed>True</PublishTrimmed>\r\n  </PropertyGroup>\r\n</Project>\r\n```","Url":"https://github.com/dotnet/standard/issues/1784","RelatedDescription":"Open issue \"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()\" (#1784)"},{"Id":"751999481","IsPullRequest":false,"CreatedAt":"2020-11-27T05:51:08","Actor":"Meenakshise","Number":"1783","RawContent":null,"Title":"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, ","State":"open","Body":"[tuple-not-loading-log.txt](https://github.com/dotnet/standard/files/5606091/tuple-not-loading-log.txt)\r\n\r\nI have  web project which is targeted to 4.6.2 .net framework. This project is calling a framework library which is targeted to the same .net framework 4.6.2. But in the framework library project it is referencing the system.valuetuple of 4.3.0 via the nuget package. \r\n  <package id=\"System.ValueTuple\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n\r\nThis valuetuple 4.3.0 targets .net standard 1.0 and .net framework 4.5. But our UI project is targeting 4.6.2. And we are getting this valuetuple not able to load. Could you please tell me why so ? \r\n\r\nSo if i am referencing a library that targets .net standard and .net framework of which the referencing project doesnt target to . How does the dll assemblies work here ? Really confused. Please help us\r\n\r\nBasically I am getting this error. The detailed log is attached in tuple-not-loading file. \r\n_message: \"ReflectionTypeLoadException: Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\n VS 2017 IDE is used to build the project ","Url":"https://github.com/dotnet/standard/issues/1783","RelatedDescription":"Open issue \"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, \" (#1783)"},{"Id":"748223490","IsPullRequest":false,"CreatedAt":"2020-11-22T11:34:20","Actor":"kyurkchyan","Number":"1782","RawContent":null,"Title":"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP","State":"open","Body":"# Summary\r\nI was trying to access Embedded resources on UWP. Something like this\r\n\r\n```C#\r\nmanifestResourceInfo = typeof(App).Assembly.GetManifestResourceInfo(\"UwpEmbeddedResourceBug.appsettings.json\");\r\n```\r\nHowever, this doesn't work on UWP, even though it works like a charm on iOS for instance. \r\nFurther, when you try to use this in UWP debug mode, it will return non-null `manifestResourceInfo`, however internally the `FileName` property will be null. But if you try to use the same on Release build, instead you will get an exception\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Func`1.BeginInvoke(AsyncCallback, Object) + 0x1f\r\n   at SharedLibrary!<BaseAddress>+0x9f17d7\r\n   at UwpEmbeddedResourceBug.MainPage..ctor() + 0x3e\r\n```\r\n## Sample project\r\n[UwpEmbeddedResourceBug.zip](https://github.com/dotnet/standard/files/5579379/UwpEmbeddedResourceBug.zip)\r\n\r\n## Version info\r\n``` \r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.1\r\nVisualStudio.16.Release/16.8.1+30711.63\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA497\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.550.19892\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.550.19892\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.550.19892\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.550.19892\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJetBrains ReSharper 2020.2.4   Build 202.0.20200925.65451\r\nJetBrains ReSharper package for Microsoft Visual Studio. For more information about ReSharper, visit http://www.jetbrains.com/resharper. Copyright © 2020 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Foo   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.8.000.255 (d16-8@d002176)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.4.1.3 (e30c41de3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```","Url":"https://github.com/dotnet/standard/issues/1782","RelatedDescription":"Open issue \"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP\" (#1782)"},{"Id":"741918893","IsPullRequest":false,"CreatedAt":"2020-11-16T21:03:55","Actor":"viralmodi","Number":"1780","RawContent":null,"Title":"How to build .NET Standard based library for ARM architecture","State":"closed","Body":"We currently own a .NET Standard based library. We would like to make it work on ARM platform as well. Is there some documentation which can help understand how to go about achieving that?\r\nI searched up on MSFT docs and found a few pages but it is not clear to me all the steps needed to achieve the above based on those docs. Any help is appreciated. I would like to know ways to compile cross platform, using IDEs like Visual Studio/Rider, code/metadata modifications required to project (.csproj) files and anywhere else to achieve this?","Url":"https://github.com/dotnet/standard/issues/1780","RelatedDescription":"Closed issue \"How to build .NET Standard based library for ARM architecture\" (#1780)"},{"Id":"743421464","IsPullRequest":false,"CreatedAt":"2020-11-16T02:36:27","Actor":"ishepherd","Number":"1781","RawContent":null,"Title":"Update docs to reflect the status of .NET Standard in 2020","State":"open","Body":"My understanding is, .NET Standard isn't the plan for standard .NET anymore. [The plan is now .NET 5.](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/)\r\n\r\nThat isn't at all clear from the docs here which seem to be frozen in time. Suggest you make some slight edits to [faq.md](https://github.com/dotnet/standard/blob/master/docs/faq.md) and [README.md](https://github.com/dotnet/standard/blob/master/README.md) to reflect the new status of .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1781","RelatedDescription":"Open issue \"Update docs to reflect the status of .NET Standard in 2020\" (#1781)"},{"Id":"741314211","IsPullRequest":false,"CreatedAt":"2020-11-12T06:18:45","Actor":"amitagrawalhyd","Number":"1779","RawContent":null,"Title":"Support with Universal Windows Platform","State":"open","Body":".Net Standard 2.1 is not supporting Universal Windows Platform and when we see the following doc \"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\" it is showing TBD, need your help on finalizing few things for our project, by when we can see support with UWP and which version of UWP will be supported. Early response will be helpful.","Url":"https://github.com/dotnet/standard/issues/1779","RelatedDescription":"Open issue \"Support with Universal Windows Platform\" (#1779)"},{"Id":"736344890","IsPullRequest":false,"CreatedAt":"2020-11-04T18:49:53","Actor":"vsfeedback","Number":"1778","RawContent":null,"Title":"System.Drawing.Printing.PrinterSettings slow","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemDrawingPrintingPrinterSettings-/890524)._\n\n---\nHello\n\nI'm debugging a problem with the printer settings. Some calls are significant slower if the default printer is a network printer, even if I explicit set a local printer name.\n\nAfter studying referencesource I think I found the culprit.\n\nI call:\n\nvar printerSettings = new System.Drawing.Printing.PrinterSettings();\n\nprinterSettings.PrinterName = &quot;LOCALPRINTER&quot;;\n\n// the next call is slow if the OS default printer is a network printer\nvar res = printerSettings.DefaultPageSettings.PrinterResolution\n\nInternally FastDeviceCapabilities is called.\n\nFastDeviceCapabilities calls GetOutputPort. But GetOutput port return the port of the default printer and not the port of the given printer!\n\nIn addition, DeviceCapabilities is then called with a wrong combination of printer name and port, don't know if this could lead to additional problems.\n\nResolution: GetOutputPort should return the port of the given printer and not accessing the default printer at all.\n\nBest Regards,\nRaphael\n\n---\n### Original Comments\n\n#### Raphael Affolter on 1/20/2020, 04:03 AM: \n\n<p>I forgot to mention: .Net Framework 4.6.1</p>\n\n#### Feedback Bot on 1/20/2020, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Raphael Affolter on 2/7/2020, 08:39 AM: \n\n<p>Because we print a lot, we really suffer from this performance penalty.</p><p>Also reading PaperSizes and PaperSources from the printer settings is slow caused by the same problem.</p><p>Could you please inform me about a possible fix?</p><p>Best Regards,</p><p>Raphael</p>\n\n#### Raphael Affolter on 2/7/2020, 10:33 AM: \n\n<p>In my opinion the fix is easy: replace GetOutputPort by OutputPort in the call to </p><p>FastDeviceCapabilities.</p><p>Done.</p>\n\n#### Feedback Bot on 2/27/2020, 05:40 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Dada Huo [MSFT] on 10/20/2020, 01:57 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Raphael Affolter on 10/20/2020, 02:28 AM: \n\n<p>Thanks for answering.</p><p>The issue is not about Visual Studio, the problem is in the .Net Framework (at least 4.6.1).</p><p>By studying the source code on referencesource.microsoft.com I spotted calls to the default printer, even if I print on another printer. If the default printer is a network printer, this slows down the printing process significantly.</p><p>Please have a look if you can fix this in the .Net Framework(s).</p><p>PrinterResolution, PaperSizes and PaperSources of System.Drawing.Printing.PrinterSettings are affected.</p><p>I also mentioned a fix: replace GetOutputPort by OutputPort in the call to FastDeviceCapabilities...done.</p><p>I you need a repro project, I can provide one.</p>\n\n\n---\n### Original Solutions\n\n#### Raphael Affolter solved on 3/19/2020, 07:18 AM, 0 votes: \n\n<p>I would be helpful if at least somebody reacts on this issue. I even told you how to fix the problem...</p>\n","Url":"https://github.com/dotnet/standard/issues/1778","RelatedDescription":"Closed issue \"System.Drawing.Printing.PrinterSettings slow\" (#1778)"},{"Id":"727588709","IsPullRequest":false,"CreatedAt":"2020-10-22T17:34:59","Actor":"Joe-Sewell-PreEmptive","Number":"1777","RawContent":null,"Title":"Questions about tagging within this repository / future versions","State":"open","Body":"I was looking through this repository to determine if .NET Standard 2.1 libraries support default interface methods - it looks like they do, given the presence of `System.Runtime.CompilerServices.RuntimeFeature.DefaultImplementationsOfInterfaces`, as well as my own experimenting in VS 2019. It seems I was mistaken when thinking that this was not the case, so I'm glad this repository is easily accessible to determine this.\r\n\r\nBut while doing this, I found it difficult to determine what commits were included in this particular .NET Standard version. I see that there's a tag `v2.1.0-prerelease.19126.1`, as well as branches `release/2.0.0`, `release/3.0`, and `release/3.0-preview9`. One of the machines I tested VS 2019 on had a `netstandard.dll` assembly, itself targeting .NETStandard v2.1.0, with AssemblyInformationalVersion `1.1.0+a5b5f2e1e369972c8ff1e2183979fab6099f52ef`; this commit is part of the `release/3.0` branch. However, another machine had a same-named assembly, targeting .NETCoreApp v3.0 and AssemblyInformationalVersion `3.0.0+4ac4c0367003fe3973a3648eb0715ddb0e3bbcea`, and I don't see that commit hash in this repository.\r\n\r\nAdditionally, [this blog post](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/) states that 2.1 will be the last version, but there is another prerelease tag `v2.2.0-prerelease.19564.1` and [on GitHub](https://github.com/dotnet/standard/releases/tag/v2.2.0-prerelease.19564.1) it's labelled .NET 5.0 Preview 2.\r\n\r\nSo I have a few questions for understanding this repository:\r\n\r\n1. Since .NET Standard 2.1 is released, are there plans to continue development in this repository for e.g. the shared BCL going forward with .NET 5+?\r\n2. Are there multiple kinds of `netstandard.dll` for a single .NET Standard version? E.g. are there separate versions for .NET Framework to reference and for .NET Core / .NET 5+ to reference?\r\n3. Do the tags / branch names in this repository correspond to a .NET Standard version or something else?\r\n4. It looks like there are patch releases; are there patch versions of a single .NET Standard version?\r\n5. Are there other repositories which are being used to create `netstandard.dll`?\r\n6. Is there a way to determine, from the repository, which commit is the one used for a given release?\r\n\r\nThank you for your consideration.","Url":"https://github.com/dotnet/standard/issues/1777","RelatedDescription":"Open issue \"Questions about tagging within this repository / future versions\" (#1777)"},{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-16T08:15:08","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"closed","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Closed issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2020-09-20T19:05:41","Actor":"Korporal","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"open","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Open issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"bvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2020-09-02T08:39:21","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"open","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Open issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-08-23T14:50:16","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200819.21\r\n- **Date Produced**: 8/19/2020 11:31 PM\r\n- **Commit**: 56a95cc477558c1ccdf16d7abe962849ea970ba4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"},{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"Pentadome","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"Pentadome","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"853614733","IsPullRequest":true,"CreatedAt":"2021-04-09T14:17:57","Actor":"aik-jahoda","Number":"43064","RawContent":null,"Title":"Update branding to 3.1.15","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43064","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.15\" (#43064)"},{"Id":"853573709","IsPullRequest":true,"CreatedAt":"2021-04-09T14:17:21","Actor":"aik-jahoda","Number":"43063","RawContent":null,"Title":"Update branding to 2.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43063","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.28\" (#43063)"},{"Id":"842265456","IsPullRequest":true,"CreatedAt":"2021-03-26T20:51:09","Actor":"wtgodbe","Number":"43062","RawContent":null,"Title":"Add suppressions for the hashes flagged by credscan","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43062","RelatedDescription":"Closed or merged PR \"Add suppressions for the hashes flagged by credscan\" (#43062)"},{"Id":"842150155","IsPullRequest":true,"CreatedAt":"2021-03-26T18:35:36","Actor":"aik-jahoda","Number":"43060","RawContent":null,"Title":"[3.1] Add suppression for test key data","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43060","RelatedDescription":"Closed or merged PR \"[3.1] Add suppression for test key data\" (#43060)"},{"Id":"842154105","IsPullRequest":true,"CreatedAt":"2021-03-26T18:35:12","Actor":"aik-jahoda","Number":"43061","RawContent":null,"Title":"[2.1] Add suppression for test key data","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43061","RelatedDescription":"Closed or merged PR \"[2.1] Add suppression for test key data\" (#43061)"},{"Id":"841885861","IsPullRequest":true,"CreatedAt":"2021-03-26T13:32:37","Actor":"aik-jahoda","Number":"43059","RawContent":null,"Title":"Last fix for credentials effort","State":"closed","Body":"This fix is the last change to make the repo clean.","Url":"https://github.com/dotnet/corefx/pull/43059","RelatedDescription":"Closed or merged PR \"Last fix for credentials effort\" (#43059)"},{"Id":"835999758","IsPullRequest":true,"CreatedAt":"2021-03-26T12:52:26","Actor":"aik-jahoda","Number":"43055","RawContent":null,"Title":"[2.1] Credscan followup","State":"closed","Body":"Follow up for #43052","Url":"https://github.com/dotnet/corefx/pull/43055","RelatedDescription":"Closed or merged PR \"[2.1] Credscan followup\" (#43055)"},{"Id":"834889784","IsPullRequest":true,"CreatedAt":"2021-03-26T02:04:07","Actor":"aik-jahoda","Number":"43054","RawContent":null,"Title":"[3.1] Credscan followup","State":"closed","Body":"Adds suppression messages.","Url":"https://github.com/dotnet/corefx/pull/43054","RelatedDescription":"Closed or merged PR \"[3.1] Credscan followup\" (#43054)"},{"Id":"836538475","IsPullRequest":true,"CreatedAt":"2021-03-26T02:03:58","Actor":"danmoseley","Number":"43057","RawContent":null,"Title":"[3.1] Some overlooked credscan fixes","State":"closed","Body":"@aik-jahoda this is needed in 2.1, 5.0 and main as well.\r\n\r\nI'll let CI run this test..","Url":"https://github.com/dotnet/corefx/pull/43057","RelatedDescription":"Closed or merged PR \"[3.1] Some overlooked credscan fixes\" (#43057)"},{"Id":"840928239","IsPullRequest":true,"CreatedAt":"2021-03-26T02:03:28","Actor":"aik-jahoda","Number":"43058","RawContent":null,"Title":"[2.1] Some overlooked credscan fixes","State":"closed","Body":"port of #43057","Url":"https://github.com/dotnet/corefx/pull/43058","RelatedDescription":"Closed or merged PR \"[2.1] Some overlooked credscan fixes\" (#43058)"},{"Id":"830054013","IsPullRequest":true,"CreatedAt":"2021-03-19T22:15:32","Actor":"aik-jahoda","Number":"43051","RawContent":null,"Title":"[3.1] Credscan second round","State":"closed","Body":"Second round of Credscan effort\r\n\r\nFirst we need merge https://github.com/dotnet/runtime-assets/pull/124","Url":"https://github.com/dotnet/corefx/pull/43051","RelatedDescription":"Closed or merged PR \"[3.1] Credscan second round\" (#43051)"},{"Id":"830295710","IsPullRequest":true,"CreatedAt":"2021-03-19T21:46:11","Actor":"aik-jahoda","Number":"43052","RawContent":null,"Title":"[2.1] Credscan second round","State":"closed","Body":"Second round of Credscan effort\r\n\r\nFirst we need merge dotnet/runtime-assets#124","Url":"https://github.com/dotnet/corefx/pull/43052","RelatedDescription":"Closed or merged PR \"[2.1] Credscan second round\" (#43052)"},{"Id":"836160516","IsPullRequest":true,"CreatedAt":"2021-03-19T17:35:20","Actor":"filipnavara","Number":"43056","RawContent":null,"Title":"Add Xamarin placeholders for System.Memory package","State":"closed","Body":"Ref: https://github.com/dotnet/runtime/issues/49211\r\n\r\nNot really sure how to proceed with servicing OOB package from an ancient branch like this (cc @ViktorHofer).","Url":"https://github.com/dotnet/corefx/pull/43056","RelatedDescription":"Closed or merged PR \"Add Xamarin placeholders for System.Memory package\" (#43056)"},{"Id":"830536217","IsPullRequest":true,"CreatedAt":"2021-03-12T23:01:49","Actor":"safern","Number":"43053","RawContent":null,"Title":"Bring back rhel6 build without testing","State":"closed","Body":"In: https://github.com/dotnet/corefx/pull/43039 we removed rhel6 from the builds because the test pool doesn't exist anymore. However core-setup builds are failing because we dropped support from rhel6 RID by not producing the runtime package for rhel6 for the private corefx package. Bring them back until we decide if we will support the RID or not in the upcoming servicing releases.\r\n","Url":"https://github.com/dotnet/corefx/pull/43053","RelatedDescription":"Closed or merged PR \"Bring back rhel6 build without testing\" (#43053)"},{"Id":"812482640","IsPullRequest":true,"CreatedAt":"2021-03-10T23:49:09","Actor":"danmoseley","Number":"43038","RawContent":null,"Title":"Backport removing dead pwd code","State":"closed","Body":"Backport https://github.com/dotnet/runtime/pull/48241 to remove scan noise from all ship branches.\r\n\r\nTest only change.","Url":"https://github.com/dotnet/corefx/pull/43038","RelatedDescription":"Closed or merged PR \"Backport removing dead pwd code\" (#43038)"},{"Id":"812482241","IsPullRequest":true,"CreatedAt":"2021-03-10T23:26:54","Actor":"danmoseley","Number":"43037","RawContent":null,"Title":"Backport removing dead pwd code","State":"closed","Body":"Backport https://github.com/dotnet/runtime/pull/48241 to remove scan noise from all ship branches.\r\n\r\nTest only change.","Url":"https://github.com/dotnet/corefx/pull/43037","RelatedDescription":"Closed or merged PR \"Backport removing dead pwd code\" (#43037)"},{"Id":"828142927","IsPullRequest":true,"CreatedAt":"2021-03-10T22:42:42","Actor":"dotnet-maestro[bot]","Number":"43050","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21110.10 to 2.4.1-beta.21158.9][1]\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: [from 2.5.1-beta.21110.10 to 2.5.1-beta.21158.9][1]\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21110.10 to 2.2.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.CoreFxTesting**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21110.10 to 2.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/251249a...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43050","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#43050)"},{"Id":"826952682","IsPullRequest":true,"CreatedAt":"2021-03-10T19:43:13","Actor":"dotnet-maestro-bot","Number":"43049","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-29812-02, servicing-29812-01, servicing-29812-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/43049","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-29812-02, servicing-29812-01, servicing-29812-01, respectively (release/2.1)\" (#43049)"},{"Id":"826795467","IsPullRequest":true,"CreatedAt":"2021-03-10T17:17:13","Actor":"Anipik","Number":"43048","RawContent":null,"Title":"remove non-used harvesting feed","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43048","RelatedDescription":"Closed or merged PR \"remove non-used harvesting feed\" (#43048)"},{"Id":"812958252","IsPullRequest":true,"CreatedAt":"2021-03-10T17:16:47","Actor":"danmoseley","Number":"43039","RawContent":null,"Title":"Remove RedHat 6 from CI","State":"closed","Body":"As mentioned in https://github.com/dotnet/corefx/pull/43037#issuecomment-782912425\r\n\r\nI moved the RHEL7 configuration up so it runs with both values of fullmatrix so that the Release configuration is protected.\r\n\r\nIs this right?","Url":"https://github.com/dotnet/corefx/pull/43039","RelatedDescription":"Closed or merged PR \"Remove RedHat 6 from CI\" (#43039)"},{"Id":"816922343","IsPullRequest":true,"CreatedAt":"2021-03-10T14:40:10","Actor":"BrennanConroy","Number":"43042","RawContent":null,"Title":"Fix pipelines test","State":"closed","Body":"Addresses https://github.com/dotnet/runtime/issues/47941","Url":"https://github.com/dotnet/corefx/pull/43042","RelatedDescription":"Closed or merged PR \"Fix pipelines test\" (#43042)"},{"Id":"820294219","IsPullRequest":true,"CreatedAt":"2021-03-10T13:51:13","Actor":"Anipik","Number":"43043","RawContent":null,"Title":"Disable failing DNS tests on SLES","State":"closed","Body":"port of https://github.com/dotnet/runtime/pull/48759\r\n\r\nAs there's currently no infrastructure to disable just for SLES,\r\ndisabling for its parent, which is Linux.\r\n\r\nRelated to https://github.com/dotnet/runtime/issues/48751\r\n\r\ncc @dotnet/ncl @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/43043","RelatedDescription":"Closed or merged PR \"Disable failing DNS tests on SLES\" (#43043)"},{"Id":"821983607","IsPullRequest":true,"CreatedAt":"2021-03-10T09:16:43","Actor":"aik-jahoda","Number":"43045","RawContent":null,"Title":"Credentials fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43045","RelatedDescription":"Closed or merged PR \"Credentials fixes\" (#43045)"},{"Id":"821968003","IsPullRequest":true,"CreatedAt":"2021-03-10T09:14:20","Actor":"aik-jahoda","Number":"43044","RawContent":null,"Title":"Credentials fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43044","RelatedDescription":"Closed or merged PR \"Credentials fixes\" (#43044)"},{"Id":"826762826","IsPullRequest":true,"CreatedAt":"2021-03-09T23:06:51","Actor":"aik-jahoda","Number":"43047","RawContent":null,"Title":"Merge 3.1.13 internal","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43047","RelatedDescription":"Closed or merged PR \"Merge 3.1.13 internal\" (#43047)"},{"Id":"826727979","IsPullRequest":true,"CreatedAt":"2021-03-09T23:06:20","Actor":"aik-jahoda","Number":"43046","RawContent":null,"Title":"merge 2.1.26 internal","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43046","RelatedDescription":"Closed or merged PR \"merge 2.1.26 internal\" (#43046)"},{"Id":"816909565","IsPullRequest":true,"CreatedAt":"2021-02-26T16:57:28","Actor":"Anipik","Number":"43040","RawContent":null,"Title":"update branding to 3.1.14","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43040","RelatedDescription":"Closed or merged PR \"update branding to 3.1.14\" (#43040)"},{"Id":"816909834","IsPullRequest":true,"CreatedAt":"2021-02-26T16:57:07","Actor":"Anipik","Number":"43041","RawContent":null,"Title":"update branding 2.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43041","RelatedDescription":"Closed or merged PR \"update branding 2.1.27\" (#43041)"},{"Id":"809797896","IsPullRequest":true,"CreatedAt":"2021-02-17T02:24:54","Actor":"ivdiazsa","Number":"43036","RawContent":null,"Title":"Port from 5.0: Fix relro, now, and PIE for Libraries","State":"open","Body":"This is a direct port from one part of PR 685 in the runtime repo. This one was added during .NET Core 5.0 development but there is a customer need to also have it in the .NET Core 3.1 release. The other part is in the core-setup repo, PR 9125.\r\n\r\nThis change adds the missing `-z,relro` and `-z,now` compile options, as well as the position independent related code and `-pie` linker option to the Native Unix libraries. Additionally, some operating systems require other flags, which were also added:\r\n\r\n- *FreeBSD*: `-fuse-ld=lld`\r\n- *Darwin*: `-Wl`, `-bind_at_load`\r\n","Url":"https://github.com/dotnet/corefx/pull/43036","RelatedDescription":"Open PR \"Port from 5.0: Fix relro, now, and PIE for Libraries\" (#43036)"},{"Id":"807595188","IsPullRequest":true,"CreatedAt":"2021-02-12T22:58:32","Actor":"Anipik","Number":"43035","RawContent":null,"Title":"Build the platforms package ","State":"closed","Body":"We need to add the platforms package to packages.build to build the final package\r\n\r\nRest of the work is already merged https://github.com/dotnet/corefx/pull/43023","Url":"https://github.com/dotnet/corefx/pull/43035","RelatedDescription":"Closed or merged PR \"Build the platforms package \" (#43035)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"855519103","IsPullRequest":false,"CreatedAt":"2021-04-12T03:59:06","Actor":"drewnoakes","Number":"52565","RawContent":null,"Title":"Identify and allow removing redundant braces","State":"open","Body":"**Brief description:**\r\n\r\nA feature I miss from ReSharper is the ability to quickly remove redundant braces from code.\r\n\r\nFor example, if an `if` statement is to be made unconditional, its inner block should be promoted. There's no quick gesture for this. I can quickly delete the `if (...)` line, then invoke a codefix on the remaining `{ ... }` (caret on the brace) to remove the brace and promote content.\r\n\r\n**Languages applicable:**\r\n\r\nC# only (I don't believe VB has an equivalent scoping construct).\r\n\r\n**Code example that the analyzer should report:**\r\n\r\n```c#\r\nvoid M()\r\n{\r\n    { // caret here, ctrl+dot, \"Remove redundant braces\"\r\n        Console.WriteLine(\"Hello\");\r\n    }\r\n}\r\n```\r\n\r\n...produces...\r\n\r\n```c#\r\nvoid M()\r\n{\r\n    Console.WriteLine(\"Hello\");\r\n}\r\n```\r\n\r\n**Additional information:**\r\n\r\nAn analyzer here might be helpful, however I would likely demote it to suggestion as there are legitimate (uncommon) use cases for braces around a chunk of code, to create a lexical scope alone.\r\n\r\n**Documentation requirements:**\r\n\r\nWhen this analyzer is implemented, it must be documented by following the steps at [Documentation for IDE CodeStyle analyzers](https://github.com/dotnet/roslyn/blob/main/docs/contributing/Documentation%20for%20IDE%20CodeStyle%20analyzers.md).\r\n","Url":"https://github.com/dotnet/roslyn/issues/52565","RelatedDescription":"Open issue \"Identify and allow removing redundant braces\" (#52565)"},{"Id":"855509605","IsPullRequest":true,"CreatedAt":"2021-04-12T03:30:14","Actor":"jnm2","Number":"52564","RawContent":null,"Title":"Suggest simplifying ToString with InvariantCulture inside FormattableString.Invariant","State":"open","Body":"The result of following https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1310 or https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1307 is often that you end up with `.ToString(CultureInfo.InvariantCulture)` in your code. Last week I found myself wanting a quick way to simplify code like this:\r\n\r\n```cs\r\nfirst.ToString(\"0000\", CultureInfo.InvariantCulture) + second.ToString(\"0000\", CultureInfo.InvariantCulture) + third.ToString(\"0000\", CultureInfo.InvariantCulture)\r\n```\r\n\r\nSo I used the light bulb to convert concatenation to interpolation:\r\n```cs\r\n$\"{first.ToString(\"0000\", CultureInfo.InvariantCulture)}{second.ToString(\"0000\", CultureInfo.InvariantCulture)}{third.ToString(\"0000\", CultureInfo.InvariantCulture)}\"\r\n```\r\n\r\nThen I manually added `FormattableString.Invariant(`...`)` around that:\r\n```cs\r\nFormattableString.Invariant($\"{first.ToString(\"0000\", CultureInfo.InvariantCulture)}{second.ToString(\"0000\", CultureInfo.InvariantCulture)}{third.ToString(\"0000\", CultureInfo.InvariantCulture)}\")\r\n```\r\n\r\nAt this point I thought it would be great if I could light-bulb fix the rest to end up with what I wanted:\r\n\r\n```cs\r\nFormattableString.Invariant($\"{first:0000}{second:0000}{third:0000}\")\r\n```\r\n\r\nThis PR extends the existing 'Simplify interpolation' suggestion to cover this last step.\r\n\r\nNothing is added to help with the second-to-last step, inserting `FormattableString.Invariant` itself. I would like to maybe do that, but I went for a smaller PR.","Url":"https://github.com/dotnet/roslyn/pull/52564","RelatedDescription":"Open PR \"Suggest simplifying ToString with InvariantCulture inside FormattableString.Invariant\" (#52564)"},{"Id":"855377327","IsPullRequest":true,"CreatedAt":"2021-04-12T01:46:55","Actor":"CyrusNajmabadi","Number":"52561","RawContent":null,"Title":"Add a GetTextSynchronously method for features that need it.","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/52561","RelatedDescription":"Closed or merged PR \"Add a GetTextSynchronously method for features that need it.\" (#52561)"},{"Id":"855447537","IsPullRequest":false,"CreatedAt":"2021-04-12T00:25:50","Actor":"davidwengier","Number":"52563","RawContent":null,"Title":"EnC - Allow parameter renames","State":"open","Body":"An extension to #48635, it should be possible to allow renaming of parameters in more cases. The symbol matcher will need to be updated to not check parameter names, but since the PDB info is already looked up by most recent edit first, the debugger should be fine with the change.\r\n\r\nThe symbol matcher change could also mean allowing explicitly implemented records members to not need to be so strict about parameter names.\r\n\r\nThis issue is linked in code.","Url":"https://github.com/dotnet/roslyn/issues/52563","RelatedDescription":"Open issue \"EnC - Allow parameter renames\" (#52563)"},{"Id":"855376238","IsPullRequest":true,"CreatedAt":"2021-04-11T22:46:14","Actor":"CyrusNajmabadi","Number":"52560","RawContent":null,"Title":"Prefer async overload","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/52560","RelatedDescription":"Closed or merged PR \"Prefer async overload\" (#52560)"},{"Id":"855397902","IsPullRequest":true,"CreatedAt":"2021-04-11T20:16:12","Actor":"jnm2","Number":"52562","RawContent":null,"Title":"Make language feature status 'Developers' column singular","State":"open","Body":"'Reviewer' and 'LDM Champ' are not plural and they contain multiple entries in a single cell.","Url":"https://github.com/dotnet/roslyn/pull/52562","RelatedDescription":"Open PR \"Make language feature status 'Developers' column singular\" (#52562)"},{"Id":"855370734","IsPullRequest":true,"CreatedAt":"2021-04-11T18:07:31","Actor":"CyrusNajmabadi","Number":"52559","RawContent":null,"Title":"Rev codestyle version to 3.9","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/52559","RelatedDescription":"Open PR \"Rev codestyle version to 3.9\" (#52559)"},{"Id":"855351438","IsPullRequest":false,"CreatedAt":"2021-04-11T16:42:46","Actor":"ldematte","Number":"52558","RawContent":null,"Title":"Feature 'CodeLens references' is currently unavailable due to an internal error","State":"open","Body":"**Version Used**: VS 2019 16.9.2, 16.9.3 and also the latest 16.10 preview\r\n\r\n**Steps to Reproduce**:\r\n\r\nThe error in subject appears using code generators.\r\nUpon opening a file in a project that uses the generator the error appears, multiple (dozens) of times. \r\nStack trace:\r\n```\r\nStreamJsonRpc.RemoteInvocationException: Object reference not set to an instance of an object.\r\n   at StreamJsonRpc.JsonRpc.<InvokeCoreAsync>d__139`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Remote.BrokeredServiceConnection`1.<TryInvokeAsync>d__17`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\nRPC server exception:\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n      at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<TryGetMethodDescriptorAsync>d__8.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<>c__DisplayClass9_0.<<FindReferenceMethodsAsync>b__0>d.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.Remote.RemoteCodeLensReferencesService.<>c__DisplayClass5_0.<<FindReferenceMethodsAsync>b__0>d.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at System.Threading.Tasks.ValueTask`1.get_Result()\r\n      at Microsoft.CodeAnalysis.Remote.BrokeredServiceBase.<RunServiceImplAsync>d__12`1.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nThe solution that triggers the error is available at https://github.com/ldematte/TheRing\r\nJust compile, open Program.cs in TheRing.Example.Inproc, and scroll a bit inside the code.\r\n\r\n**Expected Behavior**:\r\nNo exception\r\n","Url":"https://github.com/dotnet/roslyn/issues/52558","RelatedDescription":"Open issue \"Feature 'CodeLens references' is currently unavailable due to an internal error\" (#52558)"},{"Id":"855228595","IsPullRequest":false,"CreatedAt":"2021-04-11T06:30:36","Actor":"amir4z","Number":"52555","RawContent":null,"Title":"Analyze","State":"closed","Body":"**Brief description:**\r\n\r\nDescribe your suggestion here.\r\n\r\n**Languages applicable:**\r\n\r\nIs your analyzer C# only? VB Only? Or Both?\r\n\r\n**Code example that the analyzer should report:**\r\n\r\nA small code snippet that describes a case that the analyzer should report.\r\n\r\n**Additional information:**\r\n\r\nAny more additional information you would like to add.\r\n\r\n**Documentation requirements:**\r\n\r\nWhen this analyzer is implemented, it must be documented by following the steps at [Documentation for IDE CodeStyle analyzers](https://github.com/dotnet/roslyn/blob/main/docs/contributing/Documentation%20for%20IDE%20CodeStyle%20analyzers.md).\r\n","Url":"https://github.com/dotnet/roslyn/issues/52555","RelatedDescription":"Closed issue \"Analyze\" (#52555)"},{"Id":"855227904","IsPullRequest":true,"CreatedAt":"2021-04-11T05:59:37","Actor":"jmarolf","Number":"52554","RawContent":null,"Title":"MSBuildWorkspace Add Reload Apis","State":"open","Body":"- add type to help selecting default targets\r\n- add API that lets you specify which targets to use to load the workspace\r\n- Add api that allows you to reload existing projects\r\n","Url":"https://github.com/dotnet/roslyn/pull/52554","RelatedDescription":"Open PR \"MSBuildWorkspace Add Reload Apis\" (#52554)"},{"Id":"855181660","IsPullRequest":true,"CreatedAt":"2021-04-11T01:25:07","Actor":"dotnet-bot","Number":"52552","RawContent":null,"Title":"Merge main to features/extended-property-patterns","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/extended-property-patterns.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/extended-property-patterns\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/extended-property-patterns\ngit reset --hard upstream/features/extended-property-patterns\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/extended-property-patterns --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52552","RelatedDescription":"Closed or merged PR \"Merge main to features/extended-property-patterns\" (#52552)"},{"Id":"855181532","IsPullRequest":true,"CreatedAt":"2021-04-11T01:25:04","Actor":"dotnet-bot","Number":"52549","RawContent":null,"Title":"Merge main to features/interpolated-string","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/interpolated-string.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/interpolated-string\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/interpolated-string\ngit reset --hard upstream/features/interpolated-string\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/interpolated-string --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52549","RelatedDescription":"Closed or merged PR \"Merge main to features/interpolated-string\" (#52549)"},{"Id":"855181379","IsPullRequest":true,"CreatedAt":"2021-04-11T01:25:01","Actor":"dotnet-bot","Number":"52546","RawContent":null,"Title":"Merge main to features/source-generators","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/source-generators.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/source-generators\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/source-generators\ngit reset --hard upstream/features/source-generators\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/source-generators --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52546","RelatedDescription":"Closed or merged PR \"Merge main to features/source-generators\" (#52546)"},{"Id":"855181423","IsPullRequest":true,"CreatedAt":"2021-04-11T01:24:55","Actor":"dotnet-bot","Number":"52547","RawContent":null,"Title":"Merge main to features/FileScopedNamespaces","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/FileScopedNamespaces.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/FileScopedNamespaces\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/FileScopedNamespaces\ngit reset --hard upstream/features/FileScopedNamespaces\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/FileScopedNamespaces --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52547","RelatedDescription":"Closed or merged PR \"Merge main to features/FileScopedNamespaces\" (#52547)"},{"Id":"855181579","IsPullRequest":true,"CreatedAt":"2021-04-11T01:24:52","Actor":"dotnet-bot","Number":"52550","RawContent":null,"Title":"Merge main to features/improved-definite-assignment","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/improved-definite-assignment.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/improved-definite-assignment\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/improved-definite-assignment\ngit reset --hard upstream/features/improved-definite-assignment\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/improved-definite-assignment --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52550","RelatedDescription":"Closed or merged PR \"Merge main to features/improved-definite-assignment\" (#52550)"},{"Id":"855181491","IsPullRequest":true,"CreatedAt":"2021-04-11T01:24:49","Actor":"dotnet-bot","Number":"52548","RawContent":null,"Title":"Merge main to features/list-patterns","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/list-patterns.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/list-patterns\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/list-patterns\ngit reset --hard upstream/features/list-patterns\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/list-patterns --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52548","RelatedDescription":"Closed or merged PR \"Merge main to features/list-patterns\" (#52548)"},{"Id":"855181705","IsPullRequest":true,"CreatedAt":"2021-04-11T01:24:46","Actor":"dotnet-bot","Number":"52553","RawContent":null,"Title":"Merge main to features/value_tracking","State":"closed","Body":"\nThis is an automatically generated pull request from main into features/value_tracking.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/value_tracking\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/value_tracking\ngit reset --hard upstream/features/value_tracking\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/value_tracking --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52553","RelatedDescription":"Closed or merged PR \"Merge main to features/value_tracking\" (#52553)"},{"Id":"855181628","IsPullRequest":true,"CreatedAt":"2021-04-11T00:03:32","Actor":"dotnet-bot","Number":"52551","RawContent":null,"Title":"Merge main to features/caller-argument-expression","State":"open","Body":"\nThis is an automatically generated pull request from main into features/caller-argument-expression.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/features/caller-argument-expression\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-features/caller-argument-expression\ngit reset --hard upstream/features/caller-argument-expression\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-features/caller-argument-expression --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52551","RelatedDescription":"Open PR \"Merge main to features/caller-argument-expression\" (#52551)"},{"Id":"855168874","IsPullRequest":true,"CreatedAt":"2021-04-10T22:28:38","Actor":"chsienki","Number":"52544","RawContent":null,"Title":"Correctly supress/elevate diagnostics produced by source generators","State":"open","Body":"We were not filtering the diagnostics produced by source generators, meaning there was no way for a user to suppress them.\r\n\r\nFixes #52527 ","Url":"https://github.com/dotnet/roslyn/pull/52544","RelatedDescription":"Open PR \"Correctly supress/elevate diagnostics produced by source generators\" (#52544)"},{"Id":"855122605","IsPullRequest":false,"CreatedAt":"2021-04-10T17:56:57","Actor":"HurricanKai","Number":"52543","RawContent":null,"Title":"NormalizeWhitespace on switch expressions behave weirdly","State":"open","Body":"**Version Used**: \r\n3.9.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a switch expression syntax\r\n2. call .NormalizeWhitespace()\r\n3. print the result, ie using .ToFullString()\r\n\r\n**Expected Behavior**:\r\nlike all other components, switch expressions are formatted nicely\r\n\r\nexample:\r\n```cs\r\nentryPoint switch\r\n{\r\n    \"MessageBoxA\" => MessageBoxA,\r\n    \"CreateWindowExA\" => CreateWindowExA\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\nswitch expressions are formatted oddly\r\n\r\nexample:\r\n```cs\r\nentryPoint switch\r\n{\r\n\"MessageBoxA\" => MessageBoxA, \"CreateWindowExA\" => CreateWindowExA\r\n}\r\n```\r\nnote that at the end there is two newlines too much, as a trailing semicolon is weirdly placed like\r\n```cs\r\n...\r\n}\r\n\r\n;\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/52543","RelatedDescription":"Open issue \"NormalizeWhitespace on switch expressions behave weirdly\" (#52543)"},{"Id":"855095483","IsPullRequest":true,"CreatedAt":"2021-04-10T15:45:59","Actor":"Youssef1313","Number":"52541","RawContent":null,"Title":"Fix tuple naming","State":"open","Body":"Should have been part of #52395. But I missed it.","Url":"https://github.com/dotnet/roslyn/pull/52541","RelatedDescription":"Open PR \"Fix tuple naming\" (#52541)"},{"Id":"855083605","IsPullRequest":false,"CreatedAt":"2021-04-10T14:47:57","Actor":"akramHossain49119","Number":"52540","RawContent":null,"Title":"Eroor","State":"open","Body":"\r\nWhy show this error?\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1061\t'object' does not contain a definition for 'Wait' and no accessible extension method 'Wait' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\t\r\n","Url":"https://github.com/dotnet/roslyn/issues/52540","RelatedDescription":"Open issue \"Eroor\" (#52540)"},{"Id":"855034502","IsPullRequest":true,"CreatedAt":"2021-04-10T12:06:23","Actor":"dotnet-maestro[bot]","Number":"52539","RawContent":null,"Title":"[main] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6e96386a-9c9d-4ad1-1eb8-08d8d8fef0ea)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 6e96386a-9c9d-4ad1-1eb8-08d8d8fef0ea\r\n- **Build**: 20210402.20\r\n- **Date Produced**: 4/2/2021 9:04 PM\r\n- **Commit**: 31a3e4904f5a02ee51dbe15d7a68daaac9b5c6a8\r\n- **Branch**: refs/heads/main-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.10.0-2.21178.4 to 3.10.0-3.21202.20][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/3237694...31a3e49\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6e96386a-9c9d-4ad1-1eb8-08d8d8fef0ea)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/52539","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/roslyn\" (#52539)"},{"Id":"855010805","IsPullRequest":true,"CreatedAt":"2021-04-10T08:07:33","Actor":"Youssef1313","Number":"52538","RawContent":null,"Title":"Run test on both x64 and x86","State":"open","Body":"Closes #462 (The other disabled tests are tracked by #28639)\r\nCloses #327 (please confirm this issue doesn't need any further actions).\r\n","Url":"https://github.com/dotnet/roslyn/pull/52538","RelatedDescription":"Open PR \"Run test on both x64 and x86\" (#52538)"},{"Id":"854936834","IsPullRequest":true,"CreatedAt":"2021-04-10T00:35:09","Actor":"tmat","Number":"52537","RawContent":null,"Title":"Use compile-time solution for solution crawler and EnC","State":"open","Body":"Implements https://github.com/dotnet/roslyn/issues/51265\r\n\r\nAs a side effect Razor design-time documents are no longer used for reporting diagnostics.","Url":"https://github.com/dotnet/roslyn/pull/52537","RelatedDescription":"Open PR \"Use compile-time solution for solution crawler and EnC\" (#52537)"},{"Id":"854929805","IsPullRequest":true,"CreatedAt":"2021-04-10T00:05:02","Actor":"dotnet-bot","Number":"52536","RawContent":null,"Title":"Merge main to main-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from main into main-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/main-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-main-vs-deps\ngit reset --hard upstream/main-vs-deps\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-main-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52536","RelatedDescription":"Open PR \"Merge main to main-vs-deps\" (#52536)"},{"Id":"854887164","IsPullRequest":true,"CreatedAt":"2021-04-09T23:16:44","Actor":"dotnet-bot","Number":"52533","RawContent":null,"Title":"Merge main to main-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from main into main-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main\n- https://github.com/dotnet/roslyn/find/main-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-to-main-vs-deps\ngit reset --hard upstream/main-vs-deps\ngit merge upstream/main\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-to-main-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52533","RelatedDescription":"Closed or merged PR \"Merge main to main-vs-deps\" (#52533)"},{"Id":"854908269","IsPullRequest":true,"CreatedAt":"2021-04-09T22:56:13","Actor":"AArnott","Number":"52535","RawContent":null,"Title":"Add feed source to get us the latest packages in short-term","State":"open","Body":"This will break public PR/CI builds (unless we add a NugetAuthenticate task to the YML file), but for a few days, it will make other things far more convenient.","Url":"https://github.com/dotnet/roslyn/pull/52535","RelatedDescription":"Open PR \"Add feed source to get us the latest packages in short-term\" (#52535)"},{"Id":"854893702","IsPullRequest":false,"CreatedAt":"2021-04-09T22:32:20","Actor":"sharwell","Number":"52534","RawContent":null,"Title":"Suggest names for matching parameters from overloads","State":"open","Body":"The naming suggestions for parameters should include names appearing for matching types in overloads. For example, the following parameters are all representing the same data, but appearing with three different names:\r\n\r\n`sessionName`:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/550923308902260062579a2397bec5d9dd277802/src/Compilers/Shared/BuildClient.cs#L212\r\n\r\n`sessionKey`:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/550923308902260062579a2397bec5d9dd277802/src/Compilers/Shared/BuildClient.cs#L272\r\n\r\n`pipeName`:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/550923308902260062579a2397bec5d9dd277802/src/Compilers/Shared/BuildClient.cs#L284\r\n\r\nSuggesting parameter names from overloads according to matching types (while accounting for the Async Pattern and Template Method Pattern naming conventions) would help avoid these mismatches.\r\n\r\nRelated to #52505","Url":"https://github.com/dotnet/roslyn/issues/52534","RelatedDescription":"Open issue \"Suggest names for matching parameters from overloads\" (#52534)"},{"Id":"854886978","IsPullRequest":true,"CreatedAt":"2021-04-09T22:18:10","Actor":"dotnet-bot","Number":"52532","RawContent":null,"Title":"Merge main-vs-deps to release/dev17.0-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from main-vs-deps into release/dev17.0-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/main-vs-deps\n- https://github.com/dotnet/roslyn/find/release/dev17.0-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/main-vs-deps-to-release/dev17.0-vs-deps\ngit reset --hard upstream/release/dev17.0-vs-deps\ngit merge upstream/main-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/main-vs-deps-to-release/dev17.0-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/52532","RelatedDescription":"Open PR \"Merge main-vs-deps to release/dev17.0-vs-deps\" (#52532)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"705078013","IsPullRequest":true,"CreatedAt":"2020-11-01T06:31:20","Actor":"RalfKornmannEnvision","Number":"8345","RawContent":null,"Title":"ARM64&Unix: New unwinder","State":"closed","Body":"Implements a custom unwinder for ARM64 that does not need the generic CFI based libunwind functions. This way we only need to loop just once over all used registers instead of doing the complicated CFI process.This will improve the performances for everything that needs a stack walk.\r\n\r\nAdditional unwind data are generated and stored as part of the LSDA. \r\n-4 byte for a relative offset\r\n-3 byte for the CFA\r\n-3 byte for each register that is part of the prolog save\r\n-1 byte end marker\r\n\r\nWe still keep the CFI data for the debugger. Maybe the could be removed for a build without debug information.\r\n\r\nA possible future optimization would be to introduce a compact format for the information used by the most common cases. This could be stored in the relative offset. But compared to the replacement of libunwind the wins would be rather small.\r\n\r\nThe same can be done for any  other supported architecture but each one will require a custom unwind function","Url":"https://github.com/dotnet/corert/pull/8345","RelatedDescription":"Closed or merged PR \"ARM64&Unix: New unwinder\" (#8345)"},{"Id":"727422211","IsPullRequest":true,"CreatedAt":"2020-10-30T17:18:29","Actor":"tonerdo","Number":"8370","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"Opening this here, since I don't yet have a branch in the runtimelabs repo.\r\n\r\nThis PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass DynamicClass1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n    public Random Field4 = new Random();\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    static DynamicClass1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    DynamicClass1 class1 = new DynamicClass1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n    Console.WriteLine(class1.Field4);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(DynamicClass1.StaticField1);\r\n    Console.WriteLine(string.Empty);\r\n    Console.WriteLine(DynamicClass1.StaticField2);\r\n    Console.WriteLine(DynamicClass1.StaticField3);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n\r\n_Note: Thread statics on dynamically loaded types are currently unsupported_\r\n\r\ncc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/8370","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8370)"},{"Id":"729561793","IsPullRequest":false,"CreatedAt":"2020-10-26T13:26:47","Actor":"itpleb","Number":"8371","RawContent":null,"Title":"how run it on openwrt arm v7?","State":"open","Body":"how run it on openwrt arm v7?","Url":"https://github.com/dotnet/corert/issues/8371","RelatedDescription":"Open issue \"how run it on openwrt arm v7?\" (#8371)"},{"Id":"725550980","IsPullRequest":false,"CreatedAt":"2020-10-20T12:48:05","Actor":"unlimitedcoder2","Number":"8369","RawContent":null,"Title":"Fails to dotnet publish.","State":"open","Body":"I folowwed the instructons from [Here](https://github.com/dotnet/corert/tree/master/samples/WebApi) It fails to build because it cannot find objwriter\r\nThere is a `libobjwriter.so` in `.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/` and I copied it to the same dir but with the name `objwriter.so` and it did not resolve the issue.\r\n\r\n```\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/alex/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/build/Microsoft.NETCore.Native.targets(231,5): error MSB3073: The command \"\"/home/alex/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/ilc\" @\"obj/Release/netcoreapp3.1/linux-x64/native/robloxility.ilc.rsp\"\" exited with code 1. [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/8369","RelatedDescription":"Open issue \"Fails to dotnet publish.\" (#8369)"},{"Id":"706262388","IsPullRequest":false,"CreatedAt":"2020-10-17T14:39:00","Actor":"teobugslayer","Number":"8347","RawContent":null,"Title":"Missing implementation of System.OperatingSystem.IsWindows","State":"closed","Body":"Hi all,\r\n\r\nI am trying to write cross-platform code and my attempt to use `IsWindows` and `IsWindowsVersionAtLeast` fails:\r\n\r\n```\r\n  Generating native code\r\nEXEC : warning : Method `[ZX]ZX.ConsoleDisplay.Init(int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindows() [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\nEXEC : warning : Method `[ZX]ZX.Program.ValidateCanRun()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindowsVersionAtLeast(Int32, Int32, Int32, Int32) [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\n```\r\n\r\nWhat are my options to rectify the problem?","Url":"https://github.com/dotnet/corert/issues/8347","RelatedDescription":"Closed issue \"Missing implementation of System.OperatingSystem.IsWindows\" (#8347)"},{"Id":"723206180","IsPullRequest":false,"CreatedAt":"2020-10-16T14:53:15","Actor":"atErik","Number":"8368","RawContent":null,"Title":"Great Project","State":"closed","Body":"Hi,  \r\nthis transpiler should be improved further.\r\ni have Starred this project.\r\n\r\nBTW , i have mentioned it here in SO(StackOverflow) site , would you please upvote it [here](https://stackoverflow.com/questions/64180191/) ( please upvote my Question+Answer, both ) if you find it useful or if you think it will be helpful for other users related to this type of transpiler projects.  \r\n( and please downvote user Caleb's answer, as that is incorrect answer . Correct-answer must answer my questions first , My question is about \"Transpiler\" tools & which \"transpiler\" tool can keep high-level algorithms/structures intact , Question/article is NOT about language learning, when to transpile & when-not, etc.  \r\nIn SO site, user Flimzy (and Caleb) doesn't give advice When \"C/C++\",etc to \"Go\" conversion related question is posted or when \"C/C++\" is criticized , But when \"Go\"-to-\"C/C++\",etc conversion Question is posted or when Google based products (like \"Go\"-language) are criticized , then those users, especially Flimzy \"Close\" the question & downvotes, & gives many un-asked advices, etc, Because those users are Google PUSHERS & google based product (like \"Go\") PUSHERS . Google Crimes<sup>[1](https://en.wikipedia.org/wiki/Criticism_of_Google), [2](https://en.wikipedia.org/wiki/Google_litigation), [3](https://www.bbc.com/news/business-52887340), [4](https://www.reuters.com/article/us-alphabet-google-privacy-lawsuit-idUSKBN23933H), [5](https://www.nytimes.com/2020/09/21/technology/google-antitrust-justice-department.html), [6](https://www.nationalreview.com/news/department-of-justice-state-attorneys-general-to-sue-google-for-antitrust-violations-report/)</sup>. Problems in \"Go\"<sup>[1](https://bravenewgeek.com/go-is-unapologetically-flawed-heres-why-we-use-it/)</sup>. )\r\n\r\nThanks.\r\n\r\nEDIT : added a line that i have Starred this project.","Url":"https://github.com/dotnet/corert/issues/8368","RelatedDescription":"Closed issue \"Great Project\" (#8368)"},{"Id":"723040495","IsPullRequest":false,"CreatedAt":"2020-10-16T09:07:22","Actor":"andreakarasho","Number":"8367","RawContent":null,"Title":"GitHub actions - clang fails on Ubuntu","State":"closed","Body":"I'm playing a little bit with gh actions.\r\nTo compile the application i need to setup 3 envs [windows, macOS, linux].\r\n\r\nOn Ubuntu i get this error when publishing the file:\r\n\r\n```\r\n/usr/bin/clang\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\n```","Url":"https://github.com/dotnet/corert/issues/8367","RelatedDescription":"Closed issue \"GitHub actions - clang fails on Ubuntu\" (#8367)"},{"Id":"719590628","IsPullRequest":true,"CreatedAt":"2020-10-16T02:54:11","Actor":"Rattenkrieg","Number":"8364","RawContent":null,"Title":"prevent runtime shutdown while foreground threads keep running","State":"closed","Body":"- [x] hack code\r\n- [x] make `GC_Scenarios._BinTree_thdtree_thdtree_._BinTree_thdtree_thdtree_sh`, `GC_Scenarios._BinTree_thdtreegrowingobj_thdtreegrowingobj_._BinTree_thdtreegrowingobj_thdtreegrowingobj_sh`, `GC_Scenarios._BinTree_thdtreelivingobj_thdtreelivingobj_._BinTree_thdtreelivingobj_thdtreelivingobj_sh` green\r\nI have issues with `./tests/runtest.sh release -coreclr Top200` either hanging on these three or exiting with 134 code.\r\nWhen I run it manually by `CORE_ROOT=./tests_downloaded/CoreCLR/Tests/Core_Root ./tests_downloaded/CoreCLR/GC/Scenarios/BinTree/thdtreegrowingobj/thdtreegrowingobj.sh` everithing works fine. I guess I've introduced some threading issue to xUnit runners.\r\n- [x] find some tests for foreground threads in CoreCLR or make our own \r\n\r\n\r\nSimplified logic adopted from CoreCLR with no additional states like `m_UnstartedThreadCount`, `m_PendingThreadCount` etc.\r\n","Url":"https://github.com/dotnet/corert/pull/8364","RelatedDescription":"Closed or merged PR \"prevent runtime shutdown while foreground threads keep running\" (#8364)"},{"Id":"714300525","IsPullRequest":true,"CreatedAt":"2020-10-15T00:10:17","Actor":"kant2002","Number":"8355","RawContent":null,"Title":"Display which type providing compiler helper is missing","State":"closed","Body":"I add these changes when I attempt to troubleshoot custom runtime and it failed that type was missing without indication why it want that type in first place. Have to know method which compiler want to use helps me troubleshoot what I should do.","Url":"https://github.com/dotnet/corert/pull/8355","RelatedDescription":"Closed or merged PR \"Display which type providing compiler helper is missing\" (#8355)"},{"Id":"721081874","IsPullRequest":false,"CreatedAt":"2020-10-14T02:25:12","Actor":"jkotas","Number":"8366","RawContent":null,"Title":"This repo is going to be archived on October 31, 2020","State":"open","Body":"We are centralizing all experimental projects based on dotnet/runtime in a new https://github.com/dotnet/runtimelab repo. More details about this effort are in https://github.com/dotnet/runtime/issues/35609 .\r\n\r\nRuntime optimized for AOT and RyuJIT codegen backend that were the two largest and most mature CoreRT components have been moved to their new place at https://github.com/dotnet/runtimelab/tree/feature/NativeAOT . The engineering infrastructure is setup, the packages are being published to a new NuGet feed and we are ready to start taking contributions. As with any new developer workflow, we know that there will be rough edges. Please help us smooth them out!\r\n\r\nCoreRT is dead, long live NativeAOT!\r\n\r\nWe would like to keep the experiments in dotnet/runtimelab more focused. Let’s use this issue to discuss what else would make sense to move over and in what form. I will be happy to sponsor experiments with significant interest. This includes the wasm target that @yowl has been relentlessly working on.","Url":"https://github.com/dotnet/corert/issues/8366","RelatedDescription":"Open issue \"This repo is going to be archived on October 31, 2020\" (#8366)"},{"Id":"718828491","IsPullRequest":false,"CreatedAt":"2020-10-13T13:40:40","Actor":"ryancheung","Number":"8363","RawContent":null,"Title":"Ubuntu 20.04 dotnet publish failed","State":"closed","Body":"Command: `dotnet publish -r linux-x64 -c Release`\r\nCoreRT publish failed in ubuntu 20.04 with the following build error:\r\n\r\n***\r\n  /usr/bin/clang\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  /usr/bin/ld: cannot find ***-lgssapi_krb5***\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n/home/ryan/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/build/Microsoft.NETCore.Native.targets(327,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL.o\" -o \"bin/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL\" /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libbootstrapper.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libRuntime.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.CoreLib.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.TypeLoader.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Globalization.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.IO.Compression.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Net.Security.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -Wl,--discard-all -Wl,--gc-sections\" exited with code 1. [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n***\r\n\r\nTemporary workaround I found:\r\n1. `cd /usr/lib/x86_64-linux-gnu`\r\n2. `sudo ln -s libgssapi_krb5.so.2.2 libgssapi_krb5.so`","Url":"https://github.com/dotnet/corert/issues/8363","RelatedDescription":"Closed issue \"Ubuntu 20.04 dotnet publish failed\" (#8363)"},{"Id":"720044433","IsPullRequest":false,"CreatedAt":"2020-10-13T10:03:24","Actor":"darderik","Number":"8365","RawContent":null,"Title":"Question about Marshalling of data structures across C++/C#","State":"closed","Body":"Hello, following the solution provided to the issue [#6984 ](https://github.com/dotnet/corert/issues/6984) , I tried playing around with the return of data structures from C++ to C#, as i couldn't find an issue related to this kind of operation, I thought about opening one in order to receive a few heads-up on the topic.\r\n\r\n\r\nC++ Code\r\n```\r\nstruct myStruct {\r\n    int ok;\r\n    string testStr;\r\n} ;\r\nextern \"C\" myStruct entry() {\r\n    myStruct myStu;\r\n    myStu.ok = 1;\r\n    myStu.testStr = \"hello\";\r\n    return myStu;\r\n}\r\n```\r\n\r\nC# Code\r\n```\r\nnamespace CppInterop\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic ok = entry();\r\n        }\r\n        [DllImport(\"*\")]\r\n        public extern static dynamic entry();\r\n    }\r\n}\r\n```\r\n\r\n\r\nAs expected, i get this error\r\n```\r\nUnhandled Exception: System.Exception: Method '[CppInterop]CppInterop.Program.entry()' requires marshalling that is not yet supported by this compiler.\r\n   at CppInterop.Program.entry() + 0x30\r\n   at CppInterop!<BaseAddress>+0x1e9b2d\r\nAborted\r\n```\r\n\r\nI was wondering if there was another way (as I know that dynamic isn't  aot friendly at all) to pass data structures (or objects) back from cpp , in the particular case that i know exactly how is the passed object structured.\r\nThank you for the help 👍 ","Url":"https://github.com/dotnet/corert/issues/8365","RelatedDescription":"Closed issue \"Question about Marshalling of data structures across C++/C#\" (#8365)"},{"Id":"718717259","IsPullRequest":false,"CreatedAt":"2020-10-10T22:48:19","Actor":"Rattenkrieg","Number":"8362","RawContent":null,"Title":"Error on tests/runtest.sh -coreclr All","State":"open","Body":"Tested on Fedora 32, as per `runtest.cmd` should affect Windows as well.\r\nOn \"all\" selection `-test_filter_path` parameter for `tests/CoreCLR/runtest.py` is omitted and we getting into this branch:\r\nhttps://github.com/dotnet/corert/blob/b06c72e12f24523dfe58717328a3de1b9f37a397/tests/CoreCLR/runtest.py#L1873-L1874\r\nThere is no `tests/issues.targets` file. Probably [this one](https://github.com/dotnet/runtime/blob/master/src/tests/issues.targets) meant to be used but somehow wasn't added. Git history gives no clue.\r\nI see this wasn't detected because `tests/runtest.sh -coreclr` defaults to Top200.","Url":"https://github.com/dotnet/corert/issues/8362","RelatedDescription":"Open issue \"Error on tests/runtest.sh -coreclr All\" (#8362)"},{"Id":"718107191","IsPullRequest":false,"CreatedAt":"2020-10-09T13:41:43","Actor":"maikebing","Number":"8361","RawContent":null,"Title":"What's the difference between corert  and   runtimelab‘s  NativeAOT ？","State":"closed","Body":" ","Url":"https://github.com/dotnet/corert/issues/8361","RelatedDescription":"Closed issue \"What's the difference between corert  and   runtimelab‘s  NativeAOT ？\" (#8361)"},{"Id":"715288580","IsPullRequest":true,"CreatedAt":"2020-10-09T12:23:48","Actor":"drvoss","Number":"8358","RawContent":null,"Title":"Update LoadLibrary.c","State":"closed","Body":"Support Visual C++ compiler","Url":"https://github.com/dotnet/corert/pull/8358","RelatedDescription":"Closed or merged PR \"Update LoadLibrary.c\" (#8358)"},{"Id":"717888122","IsPullRequest":false,"CreatedAt":"2020-10-09T06:24:33","Actor":"DenMpei","Number":"8360","RawContent":null,"Title":"Generating native code with Grpc.Core","State":"open","Body":"Good day!\r\n\r\nI hit the following issue:\r\ndotnet publish -r win-x64 leads to numerous compilation errors\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95550016-e56fdc80-0a10-11eb-86f1-3de6b52cbe58.png)\r\n\r\nInside the package is used Grpc.Core 2.28.1\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95549756-85793600-0a10-11eb-8411-a9149078d7ea.png)\r\n\r\nСompile with Microsoft.DotNet.ILCompiler 1.0.0-alpha-29408-02\r\n\r\nAdding code from [this issue](https://github.com/dotnet/corert/issues/6375) doesn't help\r\n\r\nI ask to give advice to solve the problem.\r\nRegards.","Url":"https://github.com/dotnet/corert/issues/8360","RelatedDescription":"Open issue \"Generating native code with Grpc.Core\" (#8360)"},{"Id":"715809353","IsPullRequest":false,"CreatedAt":"2020-10-06T15:48:07","Actor":"kant2002","Number":"8359","RawContent":null,"Title":"\"The input line is too long\" during build","State":"open","Body":"When I build CoreRT from command line in x64 dev command line there error after some time\r\n\r\n```\r\n>build.cmd\r\nDoing a clean build\r\n\r\nCould Not Find D:\\d\\kant\\GitHub\\dotnet\\corert\\bin\\Logs\\*_Windows_NT__x64__Debug.*\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\nThe input line is too long.\r\nThe syntax of the command is incorrect.\r\n```\r\n\r\nMy prior experience suggest that this is happens during call of \r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n```\r\n\r\nThis is happens IIRC due to long PATH variable.","Url":"https://github.com/dotnet/corert/issues/8359","RelatedDescription":"Open issue \"\"The input line is too long\" during build\" (#8359)"},{"Id":"713872400","IsPullRequest":true,"CreatedAt":"2020-10-05T13:52:47","Actor":"yowl","Number":"8352","RawContent":null,"Title":"Wasm: dont `RhpAssignRef` static fields","State":"closed","Body":"This PR changes the implementation of `stsfld` so that `RhpAssignRef` is not called when storing a gc  pointer in a static field.  For example, previous to this change, https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/System.Private.CoreLib/shared/System/AttributeUsageAttribute.cs#L23 resulted in a call to `RhpAssignRef` in the cctor.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/8352","RelatedDescription":"Closed or merged PR \"Wasm: dont `RhpAssignRef` static fields\" (#8352)"},{"Id":"709808614","IsPullRequest":true,"CreatedAt":"2020-10-05T03:15:02","Actor":"yowl","Number":"8350","RawContent":null,"Title":"Wasm: add support for most of the conv_ovf operations","State":"closed","Body":"This PR adds support for overflow checking for Wasm for most of the Conv_Ovf opcodes. Still to do are two of native int: `Conv_Ovf_I`, `Conv_Ovf_I_Un` . (`Conv_Ovf_U` is included here).  Was going to wait until c#9 was available to do the missing ones.","Url":"https://github.com/dotnet/corert/pull/8350","RelatedDescription":"Closed or merged PR \"Wasm: add support for most of the conv_ovf operations\" (#8350)"},{"Id":"714361340","IsPullRequest":true,"CreatedAt":"2020-10-05T02:02:26","Actor":"yowl","Number":"8357","RawContent":null,"Title":"Wasm: clean up ovf switch for floats.","State":"closed","Body":"This PR removes the TODO and switches for the add/sub/mul _ovf op codes for floats as they dont apply.","Url":"https://github.com/dotnet/corert/pull/8357","RelatedDescription":"Closed or merged PR \"Wasm: clean up ovf switch for floats.\" (#8357)"},{"Id":"714319950","IsPullRequest":false,"CreatedAt":"2020-10-04T13:58:23","Actor":"kengwang","Number":"8356","RawContent":null,"Title":"\"Segmentation fault\" on CentOS 7.8","State":"open","Body":"When I tried to start the program, it echoed `Segmentation fault`\r\nIt is alright running on Ubuntu.\r\n\r\n> Build on ubuntu-16.04\r\n> Run on CentOS Linux release 7.8.2003 (Core)\r\n\r\nHow could i deal with it","Url":"https://github.com/dotnet/corert/issues/8356","RelatedDescription":"Open issue \"\"Segmentation fault\" on CentOS 7.8\" (#8356)"},{"Id":"714296090","IsPullRequest":false,"CreatedAt":"2020-10-04T11:45:29","Actor":"kant2002","Number":"8354","RawContent":null,"Title":"CoreRT slower then regular .NET","State":"open","Body":"I thinking about checking how CoreRT works for the Wavelets and decide to use https://github.com/codeprof/TurboWavelets.Net as starting point.\r\n\r\nI migrate project to new SDK format and add Benchmarks.Net using samples provided.\r\n\r\nTo my disappointment regular .NET seems to be faster then CoreRT. \r\n\r\n```\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.12.1.1420-nightly, OS=Windows 10.0.18363.1082 (1909/November2019Update/19H2)\r\nIntel Core i7-6700HQ CPU 2.60GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET SDK=5.0.100-rc.1.20452.10\r\n  [Host]     : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  .NET 5.0   : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  CoreRt 5.0 : .NET 5.0.29330.02 @BuiltBy: dlab14-DDVSOWINAGE075 @Branch: master @Commit: 145402e00724acbc9e7636739140fb84f7d64845, X64 AOT\r\n\r\n\r\n|                Method |        Job |    Runtime |      Mean |    Error |   StdDev | Ratio | RatioSD |\r\n|---------------------- |----------- |----------- |----------:|---------:|---------:|------:|--------:|\r\n| Waveletimageupscaling |   .NET 5.0 |   .NET 5.0 | 155.72 ms | 3.267 ms | 9.426 ms |  1.00 |    0.00 |\r\n| Waveletimageupscaling | CoreRt 5.0 | CoreRt 5.0 | 167.68 ms | 3.303 ms | 9.478 ms |  1.08 |    0.09 |\r\n|                       |            |            |           |          |          |       |         |\r\n|      AdaptiveDeadzone |   .NET 5.0 |   .NET 5.0 |  30.40 ms | 0.588 ms | 0.764 ms |  1.00 |    0.00 |\r\n|      AdaptiveDeadzone | CoreRt 5.0 | CoreRt 5.0 |  33.79 ms | 0.683 ms | 1.763 ms |  1.14 |    0.08 |\r\n```\r\n\r\nSo I have generic questions.\r\n1. Does this results expected with CPU-bound workloads.\r\n2. What can I do to look more closely on this particular case.","Url":"https://github.com/dotnet/corert/issues/8354","RelatedDescription":"Open issue \"CoreRT slower then regular .NET\" (#8354)"},{"Id":"713880348","IsPullRequest":true,"CreatedAt":"2020-10-02T22:17:06","Actor":"yowl","Number":"8353","RawContent":null,"Title":"Wasm: Use the property for ShadowStackTop to ensure global exists","State":"closed","Body":"Depending on input, the first call to a RawPInvoke could occur before the shadow stack global was added.  This change requests the global via the property getter to ensure it is created before use.","Url":"https://github.com/dotnet/corert/pull/8353","RelatedDescription":"Closed or merged PR \"Wasm: Use the property for ShadowStackTop to ensure global exists\" (#8353)"},{"Id":"710664867","IsPullRequest":true,"CreatedAt":"2020-09-29T11:40:22","Actor":"tonerdo","Number":"8351","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"This PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass Class1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    [ThreadStatic]\r\n    public static int ThreadStaticField1;\r\n\r\n    static Class1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n        ThreadStaticField1 = 56;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    Class1 class1 = new Class1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(Class1.StaticField1);\r\n    Console.WriteLine(String.Empty);\r\n    Console.WriteLine(Class1.StaticField2);\r\n    Console.WriteLine(Class1.StaticField3);\r\n    Console.WriteLine(Class1.ThreadStaticField1);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n","Url":"https://github.com/dotnet/corert/pull/8351","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8351)"},{"Id":"709649946","IsPullRequest":false,"CreatedAt":"2020-09-27T02:19:00","Actor":"yowl","Number":"8349","RawContent":null,"Title":"Wasm: conv_r_un/4 should set to postive or negative infinity when too large","State":"open","Body":"","Url":"https://github.com/dotnet/corert/issues/8349","RelatedDescription":"Open issue \"Wasm: conv_r_un/4 should set to postive or negative infinity when too large\" (#8349)"},{"Id":"709582502","IsPullRequest":false,"CreatedAt":"2020-09-26T17:59:41","Actor":"yowl","Number":"8348","RawContent":null,"Title":"Question: ImportConvert unsigned parameter is always false","State":"open","Body":"`ImportConvert` in https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/Common/src/TypeSystem/IL/ILImporter.cs#L745-L766 is always passed `false` for the `unsigned` parameter (the last parameter), even on the unsigned conversions, `conv_ovf_u1`  Is there a reason for that?","Url":"https://github.com/dotnet/corert/issues/8348","RelatedDescription":"Open issue \"Question: ImportConvert unsigned parameter is always false\" (#8348)"},{"Id":"704206710","IsPullRequest":true,"CreatedAt":"2020-09-22T00:29:41","Actor":"RalfKornmannEnvision","Number":"8343","RawContent":null,"Title":"ARM64: RhpGcPoll","State":"closed","Body":"- Initial port of GCProbe.S for ARM64\r\n- Ensure RhpGcPoll & RhpGcPollRare are working","Url":"https://github.com/dotnet/corert/pull/8343","RelatedDescription":"Closed or merged PR \"ARM64: RhpGcPoll\" (#8343)"},{"Id":"705253015","IsPullRequest":false,"CreatedAt":"2020-09-21T03:12:25","Actor":"Powerlated","Number":"8346","RawContent":null,"Title":"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method ","State":"open","Body":"```\r\nUnhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nI am attempting to `dotnet publish -r win-x64 -c Release` a program and I receieve this error after the `Generating compatible native code.` message.","Url":"https://github.com/dotnet/corert/issues/8346","RelatedDescription":"Open issue \"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method \" (#8346)"},{"Id":"704803194","IsPullRequest":true,"CreatedAt":"2020-09-19T05:02:42","Actor":"toddsharpe","Number":"8344","RawContent":null,"Title":"Merge pull request #1 from dotnet/master","State":"closed","Body":"Updating CoreRT","Url":"https://github.com/dotnet/corert/pull/8344","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from dotnet/master\" (#8344)"},{"Id":"704118291","IsPullRequest":true,"CreatedAt":"2020-09-18T14:58:08","Actor":"RalfKornmannEnvision","Number":"8342","RawContent":null,"Title":"ARM64: Additional debug checks during exception handling","State":"closed","Body":"- Reenable stored register trashing as the debugger has no issues with it.\r\n- Implement missing call to RhpValidateExInfoPop","Url":"https://github.com/dotnet/corert/pull/8342","RelatedDescription":"Closed or merged PR \"ARM64: Additional debug checks during exception handling\" (#8342)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"855538558","IsPullRequest":true,"CreatedAt":"2021-04-12T04:49:22","Actor":"kartheekp-ms","Number":"16849","RawContent":null,"Title":"parsing work for dotnet nuget verify command","State":"open","Body":"Fixes: https://github.com/dotnet/sdk/issues/13702\r\n\r\n### Description\r\nI work on NuGet Client team. We added [`dotnet nuget verify`](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-verify) command to `dotnet SDK`. Added this command to the parser for tab completion. This is my first PR in this repo. If there are better ways to develop parsing logic for the said command, please let me know.","Url":"https://github.com/dotnet/sdk/pull/16849","RelatedDescription":"Open PR \"parsing work for dotnet nuget verify command\" (#16849)"},{"Id":"855480476","IsPullRequest":true,"CreatedAt":"2021-04-12T02:06:59","Actor":"dotnet-maestro-bot","Number":"16848","RawContent":null,"Title":"[automated] Merge branch 'release/5.0.3xx' => 'main'","State":"open","Body":"I detected changes in the release/5.0.3xx branch which have not been merged yet to main. I'm a robot and am configured to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.3xx by the following committers:\n\n* v-wuzhai\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.3xx\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.3xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.3xx-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.3xx-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.3xx-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.3xx-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.3xx-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/16848","RelatedDescription":"Open PR \"[automated] Merge branch 'release/5.0.3xx' => 'main'\" (#16848)"},{"Id":"855211106","IsPullRequest":true,"CreatedAt":"2021-04-11T22:00:57","Actor":"wli3","Number":"16839","RawContent":null,"Title":"Workload install nuget2","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/16839","RelatedDescription":"Closed or merged PR \"Workload install nuget2\" (#16839)"},{"Id":"855326820","IsPullRequest":true,"CreatedAt":"2021-04-11T16:30:40","Actor":"dotnet-maestro[bot]","Number":"16845","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210411.1\r\n- **Date Produced**: 4/11/2021 2:42 PM\r\n- **Commit**: 1870441efdc00a6c253c2a5c54c20a313fb56ee2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21210.2 to 6.0.0-preview.4.21211.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/81936a7...1870441\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16845","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16845)"},{"Id":"855344747","IsPullRequest":true,"CreatedAt":"2021-04-11T16:12:11","Actor":"wli3","Number":"16846","RawContent":null,"Title":"Add nuget.config, input source, preview support","State":"open","Body":"The installer should be behave just like nuget.dll\r\n\r\nA lot of loc and file shuffle. Important are\r\nsrc/Cli/dotnet/NugetPackageInstaller/NuGetPackageInstaller.cs\r\nsrc/Tests/Microsoft.DotNet.PackageInstall.Tests/NuGetPackageInstallerTests.cs","Url":"https://github.com/dotnet/sdk/pull/16846","RelatedDescription":"Open PR \"Add nuget.config, input source, preview support\" (#16846)"},{"Id":"855323114","IsPullRequest":true,"CreatedAt":"2021-04-11T14:38:49","Actor":"Nirmal4G","Number":"16844","RawContent":null,"Title":"Trim trailing white-space in all MSBuild SDKs' props/targets","State":"open","Body":"#### CHANGES\r\nTrims trailing white-space in all of the MSBuild SDKs' props and targets.\r\nThis patch makes sure that we follow the `EditorConfig` rule on `trim_trailing_whitespace`.\r\n\r\n#### NOTES\r\nThis PR targets `v5` branch instead of `main` now. I'll also create a PR targeting `main` branch too. The reason I created this separately since, there are a few patches I have that touches some of these files. So, applying white-space changes early before any other PRs should make reviewing easier.","Url":"https://github.com/dotnet/sdk/pull/16844","RelatedDescription":"Open PR \"Trim trailing white-space in all MSBuild SDKs' props/targets\" (#16844)"},{"Id":"855291976","IsPullRequest":true,"CreatedAt":"2021-04-11T13:41:33","Actor":"dotnet-maestro[bot]","Number":"16843","RawContent":null,"Title":"[main] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 6.0.0-preview.4.21208.1 to 6.0.0-preview.4.21210.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 43b77b68-0b3c-49dd-3915-08d8e9750bf8\r\n- **Build**: 20210410.2\r\n- **Date Produced**: 4/10/2021 3:25 PM\r\n- **Commit**: 3602ef91e623aa126d875f3c793e1164de46beb8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 6.0.0-preview.4.21208.1 to 6.0.0-preview.4.21210.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/ee77657...3602ef9\r\n[2]: https://github.com/dotnet/wpf/compare/a526966...6a7d667\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16843","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/windowsdesktop\" (#16843)"},{"Id":"855220880","IsPullRequest":false,"CreatedAt":"2021-04-11T05:13:15","Actor":"amir4z","Number":"16841","RawContent":null,"Title":"sdk ","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/16841","RelatedDescription":"Open issue \"sdk \" (#16841)"},{"Id":"855216143","IsPullRequest":true,"CreatedAt":"2021-04-11T04:34:55","Actor":"KirillOsenkov","Number":"16840","RawContent":null,"Title":"Embed project.assets.json in binlog","State":"open","Body":"We're thinking of adding a way to embed arbitrary files in the binlog.\r\nSee https://github.com/dotnet/msbuild/pull/6339\r\n\r\nproject.assets.json is commonly requested to be embedded. This would fix https://github.com/dotnet/msbuild/issues/3529\r\n\r\nBinlog size does increase from 3.5 MB -> 5 MB, so we'll need to think perhaps about making it off by default.","Url":"https://github.com/dotnet/sdk/pull/16840","RelatedDescription":"Open PR \"Embed project.assets.json in binlog\" (#16840)"},{"Id":"855353047","IsPullRequest":false,"CreatedAt":"2021-04-11T02:13:55","Actor":"bombless","Number":"16847","RawContent":null,"Title":"MSBuild Exec task with ToolPath broken","State":"open","Body":"# Repro steps\r\n\r\n\r\n-  On a non-Windows OS\r\n-   Run `dotnet msbuild` with the following project\r\n```xml\r\n<Project>\r\n    <Target Name=\"Build\">\r\n        <Exec ToolPath=\".\" Command=\"echo Hello World\" />\r\n    </Target>\r\n</Project>\r\n```\r\n# Expected\r\nBuild succeeds\r\n\r\n# Actual\r\nBuild fails with the following:\r\n```sh\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/Users/yuekexiang/t(3,9): error MSB6004: The specified task executable location \"./sh\" is invalid.\r\n```\r\n\r\n# Version\r\nI'm using installation from `https://download.visualstudio.microsoft.com/download/pr/749775e4-7b6f-4367-bb7a-9cb63a818dae/c2614b34e234fa03dc65320a8a954570/dotnet-sdk-5.0.202-osx-x64.pkg`\r\n`dotnet msbuild -ver` shows `16.9.0.11203`","Url":"https://github.com/dotnet/sdk/issues/16847","RelatedDescription":"Open issue \"MSBuild Exec task with ToolPath broken\" (#16847)"},{"Id":"855196237","IsPullRequest":true,"CreatedAt":"2021-04-11T01:42:45","Actor":"VSadov","Number":"16838","RawContent":null,"Title":"Enable compression in singlefile ","State":"open","Body":"\r\n- [x]  enable bundle compression by default for 6.0+\r\n- [ ]  add a command line switch","Url":"https://github.com/dotnet/sdk/pull/16838","RelatedDescription":"Open PR \"Enable compression in singlefile \" (#16838)"},{"Id":"855134323","IsPullRequest":true,"CreatedAt":"2021-04-10T19:00:07","Actor":"pranavkm","Number":"16837","RawContent":null,"Title":"Handle SourceSpan.Undefined when producing diagnostics","State":"open","Body":"* Clean up project files a bit\r\n* Change tests to be in a consistent namespace","Url":"https://github.com/dotnet/sdk/pull/16837","RelatedDescription":"Open PR \"Handle SourceSpan.Undefined when producing diagnostics\" (#16837)"},{"Id":"855118272","IsPullRequest":true,"CreatedAt":"2021-04-10T17:34:28","Actor":"pranavkm","Number":"16836","RawContent":null,"Title":"Apply deltas to Blazor WebAssembly on app start","State":"open","Body":"In Blazor WebAssembly, refreshing the browser causes the wasm app to be restarted and go out of sync with\r\nwhere dotnet-watch thinks the app is at w.r.t what deltas have been applied. This PR introduces a way for\r\nBlazor WASM to stash away these deltas and re-apply them when the app starts.\r\n\r\nThe implementation relies on the browser refresh middleware to stash and retrieve the deltas. Doing so has a few advantages\r\n- we no longer have to concern ourselves with cross-origin requests\r\n- the implementation can be much more easily shared with Visual Studio.\r\n\r\nCorresponding Blazor Wasm PR: https://github.com/dotnet/aspnetcore/pull/31670","Url":"https://github.com/dotnet/sdk/pull/16836","RelatedDescription":"Open PR \"Apply deltas to Blazor WebAssembly on app start\" (#16836)"},{"Id":"855087722","IsPullRequest":true,"CreatedAt":"2021-04-10T16:48:22","Actor":"dotnet-maestro[bot]","Number":"16834","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210410.2\r\n- **Date Produced**: 4/10/2021 2:53 PM\r\n- **Commit**: 81936a792c1ad3d063121061452e8e8f76b170d0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21210.1 to 6.0.0-preview.4.21210.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/82a190e...81936a7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16834","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16834)"},{"Id":"855091475","IsPullRequest":false,"CreatedAt":"2021-04-10T15:26:13","Actor":"martincostello","Number":"16835","RawContent":null,"Title":"Coverlet code coverage not working with MVC/Razor applications targeting ASP.NET 6 preview 3+","State":"open","Body":"In .NET 6 preview 3, the Razor compiler was changed to use a Roslyn source generator instead of compiling a separate `.Views` assembly ([announcement](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-3/#razor-compiler-no-longer-produces-a-separate-views-assembly)).\r\n\r\nThis causes [coverlet](https://github.com/coverlet-coverage/coverlet) to be unable to instrument the application's assembly due to seemingly missing source files emitted into the assembly/PDB for the views:\r\n\r\n```\r\n[coverlet] Unable to instrument module: C:\\Coding\\martincostello\\api\\tests\\API.Tests\\bin\\debug\\net6.0\\API.dll, pdb without local source files, [C:\\Coding\\martincostello\\api\\src\\API\\Microsoft.NET.Sdk.Razor.SourceGenerators\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\_Views_Docs_Index.cshtml.cs]\r\n```\r\n\r\nThis [Pull Request](https://github.com/martincostello/api/pull/615) shows the missing coverage in the GitHub Actions [build logs](https://github.com/martincostello/api/pull/615/checks?check_run_id=2313160274#step:4:164).\r\n\r\nAt first I thought this might have been caused by #16777, but having updated to a nightly build of the preview 4 SDK containing the fix for that issue to verify that (`6.0.100-preview.4.21210.1`), code coverage is still not reported.\r\n\r\nI'm not sure if this is an SDK issue (say missing `.g.cs` suffixes like fixed by #16777), a coverlet issue, or both, so I'm opening this issue here and have also opened coverlet-coverage/coverlet#1140 reporting the same problem.\r\n\r\nTo replicate the issue and generate an MSBuild binary log file with the coverlet logging present, run the following commands:\r\n\r\n```sh\r\ngit clone https://github.com/martincostello/api.git martincostello-api\r\ncd martincostello-api\r\ngit checkout 39867b25cc6faccaa85a3091c2a8dfa58dad6975\r\n./build.ps1 -SkipTests\r\ndotnet test tests/API.Tests -c debug -verbosity:diagnostic -bl:msbuild.binlog -noconsolelogger\r\n```\r\n\r\nYou can then open the `msbuild.binlog` file in [MSBuild Structured Log Viewer](https://msbuildlog.com/) and search for `[coverlet]` to find the log message.\r\n\r\n/cc @captainsafia @pranavkm\r\n","Url":"https://github.com/dotnet/sdk/issues/16835","RelatedDescription":"Open issue \"Coverlet code coverage not working with MVC/Razor applications targeting ASP.NET 6 preview 3+\" (#16835)"},{"Id":"855055174","IsPullRequest":true,"CreatedAt":"2021-04-10T13:45:20","Actor":"dotnet-maestro[bot]","Number":"16831","RawContent":null,"Title":"[main] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 43b77b68-0b3c-49dd-3915-08d8e9750bf8\r\n- **Build**: 20210409.1\r\n- **Date Produced**: 4/9/2021 2:00 PM\r\n- **Commit**: ee77657a20ff4dd1749f64c283fa451b4f9b6b03\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21208.4 to 6.0.0-preview.4.21209.1][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 6.0.0-preview.4.21208.4 to 6.0.0-preview.4.21209.1][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 6.0.0-preview.4.21208.4 to 6.0.0-preview.4.21209.1][1]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/d246311...ee77657\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16831","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/windowsdesktop\" (#16831)"},{"Id":"855059912","IsPullRequest":true,"CreatedAt":"2021-04-10T12:45:19","Actor":"adrianwright109","Number":"16833","RawContent":null,"Title":"Fix typo in comment","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/16833","RelatedDescription":"Open PR \"Fix typo in comment\" (#16833)"},{"Id":"855053586","IsPullRequest":false,"CreatedAt":"2021-04-10T12:23:42","Actor":"mustakimali","Number":"16830","RawContent":null,"Title":"Permalink to latest build?","State":"closed","Body":"I have a script that updates .NET SDK for me to use which is separate from regular `dotnet` installation. So far this following link used to redirect to the latest build\r\n```\r\n$ ht --headers https://aka.ms/dotnet/net6/dev/Sdk/dotnet-sdk-linux-x64.tar.gz\r\n\r\nHTTP/1.1 301 Moved Permanently\r\nlocation: https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.100-preview.1.21107.2/dotnet-sdk-6.0.100-preview.1.21107.2-linux-x64.tar.gz\r\n```\r\n\r\nNow that `preview.3` has already been released but this link is still pointing to `dotnet-sdk-6.0.100-preview.1`. This makes me wonder if this is the right URL at all.\r\n\r\nSo what would be the correct link that always redirects to the latest build of .NET Core SDK for `linux-x64`. Thank you.","Url":"https://github.com/dotnet/sdk/issues/16830","RelatedDescription":"Closed issue \"Permalink to latest build?\" (#16830)"},{"Id":"855055541","IsPullRequest":true,"CreatedAt":"2021-04-10T12:21:45","Actor":"dotnet-maestro[bot]","Number":"16832","RawContent":null,"Title":"[main] Update dependencies from dotnet/msbuild","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b9c2fc1-dee5-447e-827b-08d8e9754760)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 9b9c2fc1-dee5-447e-827b-08d8e9754760\r\n- **Build**: 20210408.5\r\n- **Date Produced**: 4/8/2021 6:40 PM\r\n- **Commit**: 9bcc06cbe19ae2482ab18eab90a82fd079b26897\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: [from 16.10.0-preview-21205-05 to 16.10.0-preview-21208-05][1]\r\n  - **Microsoft.Build**: [from 16.10.0-preview-21205-05 to 16.10.0-preview-21208-05][1]\r\n\r\n[1]: https://github.com/dotnet/msbuild/compare/7804350...9bcc06c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9b9c2fc1-dee5-447e-827b-08d8e9754760)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16832","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/msbuild\" (#16832)"},{"Id":"854996966","IsPullRequest":true,"CreatedAt":"2021-04-10T10:07:34","Actor":"dotnet-maestro[bot]","Number":"16828","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210410.1\r\n- **Date Produced**: 4/10/2021 8:20 AM\r\n- **Commit**: 82a190e6dfa664efa3fd6d9759c2ad5770a27f4c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21209.11 to 6.0.0-preview.4.21210.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/e5667a9...82a190e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16828","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16828)"},{"Id":"855030281","IsPullRequest":false,"CreatedAt":"2021-04-10T09:57:41","Actor":"KathleenDollard","Number":"16829","RawContent":null,"Title":"Add \"Description\" to help ","State":"open","Body":"6.0.100-preview.4.21209.4 \r\n\r\nWe've added the description to help (yeah!!!). However, it currently appears under the subcommand name. To better mirror the other headers like \"Usage\", I suggest we use \"Description:\" instead. \r\n\r\n![image](https://user-images.githubusercontent.com/5844318/114265948-774ca800-99a8-11eb-9fed-0f761d7dfe5d.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/16829","RelatedDescription":"Open issue \"Add \"Description\" to help \" (#16829)"},{"Id":"854930273","IsPullRequest":true,"CreatedAt":"2021-04-10T03:58:55","Actor":"dotnet-maestro[bot]","Number":"16825","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210409.11\r\n- **Date Produced**: 4/10/2021 2:32 AM\r\n- **Commit**: e5667a925e6d9dcc0b8efbe3891fdb8e87fd88a1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21209.5 to 6.0.0-preview.4.21209.11][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/00b551e...e5667a9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16825","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16825)"},{"Id":"854952187","IsPullRequest":true,"CreatedAt":"2021-04-10T03:06:45","Actor":"dotnet-maestro[bot]","Number":"16827","RawContent":null,"Title":"[main] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 03acf5d2-59bd-494b-c390-08d8e9750d9d\r\n- **Build**: 20210410.2\r\n- **Date Produced**: 4/10/2021 12:07 AM\r\n- **Commit**: b70ecbb38ae8da56924ae5f84b394fe79e221587\r\n- **Branch**: refs/heads/main-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.CSharp.Features**: [from 3.10.0-3.21209.12 to 3.10.0-3.21210.2][1]\r\n  - **Microsoft.CodeAnalysis.CSharp**: [from 3.10.0-3.21209.12 to 3.10.0-3.21210.2][1]\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.10.0-3.21209.12 to 3.10.0-3.21210.2][1]\r\n  - **Microsoft.CodeAnalysis.Workspaces.MSBuild**: [from 3.10.0-3.21209.12 to 3.10.0-3.21210.2][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/1f713c2...b70ecbb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16827","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/roslyn\" (#16827)"},{"Id":"854934584","IsPullRequest":true,"CreatedAt":"2021-04-10T01:30:33","Actor":"dotnet-maestro[bot]","Number":"16826","RawContent":null,"Title":"[main] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 03acf5d2-59bd-494b-c390-08d8e9750d9d\r\n- **Build**: 20210409.12\r\n- **Date Produced**: 4/9/2021 11:45 PM\r\n- **Commit**: 1f713c2d1f093436583d530079b627e29736ce6b\r\n- **Branch**: refs/heads/main-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.CSharp.Features**: [from 3.10.0-3.21208.16 to 3.10.0-3.21209.12][1]\r\n  - **Microsoft.CodeAnalysis.CSharp**: [from 3.10.0-3.21208.16 to 3.10.0-3.21209.12][1]\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.10.0-3.21208.16 to 3.10.0-3.21209.12][1]\r\n  - **Microsoft.CodeAnalysis.Workspaces.MSBuild**: [from 3.10.0-3.21208.16 to 3.10.0-3.21209.12][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/289228c...1f713c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16826","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/roslyn\" (#16826)"},{"Id":"854893901","IsPullRequest":true,"CreatedAt":"2021-04-10T00:03:36","Actor":"dotnet-maestro[bot]","Number":"16824","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210409.5\r\n- **Date Produced**: 4/9/2021 8:13 PM\r\n- **Commit**: 00b551ec3ca7b50cbfe7fc0cfc91fe9e51b37b99\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21209.4 to 6.0.0-preview.4.21209.5][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/bd61ac7...00b551e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16824","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16824)"},{"Id":"854799939","IsPullRequest":true,"CreatedAt":"2021-04-09T22:31:17","Actor":"dotnet-maestro[bot]","Number":"16821","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20210409.4\r\n- **Date Produced**: 4/9/2021 7:11 PM\r\n- **Commit**: bd61ac75ac0bee3a48d9d1e592baa98650ca2213\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-preview.4.21209.1 to 6.0.0-preview.4.21209.4][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/5b3ba86...bd61ac7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16821","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#16821)"},{"Id":"854877122","IsPullRequest":true,"CreatedAt":"2021-04-09T21:55:57","Actor":"sfoslund","Number":"16823","RawContent":null,"Title":"Refactor SDK managed workload install","State":"open","Body":"cba1d1d addresses leftover PR feedback from https://github.com/dotnet/sdk/pull/16530\r\nd5ba9e6 refactors workload installation into a separate project","Url":"https://github.com/dotnet/sdk/pull/16823","RelatedDescription":"Open PR \"Refactor SDK managed workload install\" (#16823)"},{"Id":"854792119","IsPullRequest":true,"CreatedAt":"2021-04-09T19:16:03","Actor":"dotnet-maestro[bot]","Number":"16820","RawContent":null,"Title":"[main] Update dependencies from mono/linker","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4a865c13-5e52-41f5-3916-08d8e9750bf8)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 4a865c13-5e52-41f5-3916-08d8e9750bf8\r\n- **Build**: 20210409.2\r\n- **Date Produced**: 4/9/2021 8:41 PM\r\n- **Commit**: 6944b7c146a7149c108acad19b237a29fd2eed15\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Analyzers**: [from 6.0.100-preview.2.21207.1 to 6.0.100-preview.2.21209.2][1]\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 6.0.100-preview.2.21207.1 to 6.0.100-preview.2.21209.2][1]\r\n\r\n[1]: https://github.com/mono/linker/compare/55bd0eb...6944b7c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4a865c13-5e52-41f5-3916-08d8e9750bf8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/16820","RelatedDescription":"Open PR \"[main] Update dependencies from mono/linker\" (#16820)"},{"Id":"854768194","IsPullRequest":false,"CreatedAt":"2021-04-09T18:42:25","Actor":"William-Froelich","Number":"16819","RawContent":null,"Title":"Dotnet test fails on SDK 5.0.202 when testing netcoreapp 3.1 on self-hosted agent","State":"open","Body":"After updating from SDK 5.0.201 to 5.0.202, our netcore app builds are failing on our Azure Self-Hosted agents. For the moment we reverted to SDK 5.0.201 to get our builds working again, but what can we do to address this? It's not clear to me why the build is trying to copy 'apphost' when compilation finishes.\r\n\r\nEnvironment\r\nUbuntu Server 18.04 x64\r\nDotnet SDK: 5.0.202\r\nAzure Agent Version: 2.184.2\r\n\r\nError Output:\r\n```\r\nagent_01/_work/_tool/dotnet/sdk/5.0.202/Microsoft.Common.CurrentVersion.targets(4919,5): error MSB3030: Could not copy the file \"/opt/azure/agent_01/_work/86/s/ServiceName/ProjectName/obj/Release/netcoreapp3.1/apphost\" because it was not found. [/opt/azure/agent_01/_work/86/s/ServiceName/ProjectName/ProjectName.csproj]\r\n```\r\n\r\nCsproj file:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <Version>0.3.14</Version>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <AssemblyVersion>$(Version)</AssemblyVersion>\r\n    <FileVersion>$(Version)</FileVersion>\r\n    <IncludeSymbols>true</IncludeSymbols>\r\n    <ProjectGuid>{893BB12A-0FE1-4189-8517-B1BF14DDECA6}</ProjectGuid>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <WarningsAsErrors />\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"coverlet.msbuild\" Version=\"3.0.3\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authorization\" Version=\"3.1.8\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.NetAnalyzers\" Version=\"5.0.3\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.AzureKeyVault\" Version=\"3.1.13\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Http\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Protocols\" Version=\"6.10.0\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Protocols.OpenIdConnect\" Version=\"6.10.0\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Tokens\" Version=\"6.10.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Threading.Analyzers\" Version=\"16.9.60\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/16819","RelatedDescription":"Open issue \"Dotnet test fails on SDK 5.0.202 when testing netcoreapp 3.1 on self-hosted agent\" (#16819)"},{"Id":"854747645","IsPullRequest":false,"CreatedAt":"2021-04-09T18:08:04","Actor":"mateoatr","Number":"16818","RawContent":null,"Title":"Stop adding a runtimeconfig.dev.json by default on built apps","State":"open","Body":"Probing consumes a significant ammount of time at startup in the host. With changes introduced in https://github.com/dotnet/runtime/pull/50671, we move away from expensive file-accessing calls made by the host's probing logic and make them conditional upon whether any additional probing paths were passed to hostpolicy. This improves performance of any `dotnet ...` command as well as the time to main.\r\n\r\nNote that by default the SDK generates a `<app>runtimeconfig.dev.json` when building an app, which ends up adding additional probing paths which are not necessary (all dependencies are included in the app folder which is probed first, related: #15210) -- causing the host to probe more than necessary and missing on any performance gains achieved by the above PR.\r\n\r\n/cc @vitek-karas @brianrob ","Url":"https://github.com/dotnet/sdk/issues/16818","RelatedDescription":"Open issue \"Stop adding a runtimeconfig.dev.json by default on built apps\" (#16818)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"851621247","IsPullRequest":false,"CreatedAt":"2021-04-06T17:01:00","Actor":"rbhanda","Number":"181","RawContent":null,"Title":"April 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in April 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET April 2021 Updates – 5.0.5](https://devblogs.microsoft.com/dotnet/net-april-2021/)\r\n  * .NET 5.0.5 and .NET SDK 5.0.202 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.5/5.0.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/181","RelatedDescription":"Open issue \"April 2021 .NET Updates\" (#181)"},{"Id":"850601710","IsPullRequest":false,"CreatedAt":"2021-04-05T19:26:22","Actor":"richlander","Number":"180","RawContent":null,"Title":"NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA","State":"open","Body":"# NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA\r\n\r\n[NuGet package signing verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference) relies on the `VeriSign Universal Root Certification Authority` as part of establishing a chain-of-trust for NuGet packages. `VeriSign Universal Root Certification Authority` was recently removed from [NSS](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) and `ca-certificates` packages. This removal effectively breaks NuGet package signing verification, which has the result of breaking the ability to restore NuGet packages.\r\n\r\nThis break in behavior is only observed with .NET 5 and .NET 6, which have NuGet package verification enabled (and it cannot be disabled). [NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) has been observed on some distros already and we expect it to become pervasive quickly as more distros are updated to include more recent version of `NSS` and `ca-certificates` (with the VeriSign CA removed). We are in the process of releasing updated builds of .NET 5 and .NET 6 that have NuGet package verification disabled on Linux and macOS.\r\n\r\nWe need developers, companies, and commercial providers to install (or otherwise use) updated builds of .NET 5 and .NET 6 if you rely on those .NET versions on Linux. If you adopt the updated .NET versions soon, you should not observe a break in functional behavior, and will be able to confidently update to newer versions of `NSS` and `ca-certificates` packages.\r\n\r\nUpdates: \r\n- [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/) (NuGet blog)\r\n- [.NET April 2021 Updates – 5.0.5](https://devblogs.microsoft.com/dotnet/net-april-2021-updates/) (.NET blog)\r\n- [.NET 6 Preview 3](https://devblogs.microsoft.com/dotnet/announcing-net-6-preview-3/)\r\n\r\n## Discussion\r\n\r\nPlease share your feedback on this topic and see what others are saying at:\r\n\r\nhttps://github.com/NuGet/Home/issues/10712\r\n\r\n## Updated .NET builds\r\n\r\nNew .NET builds will be provided with NuGet package verification disabled on Linux and macOS. The following are the expected release dates:\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0) -- April 6, 2021.\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0) -- April 8, 2021.\r\n\r\nNew [container images](https://hub.docker.com/_/microsoft-dotnet) will be published for Alpine, Debian, and Ubuntu on both of these dates, for the respective releases.\r\n\r\nThese builds include significant additional functionality beyond disabling NuGet package verification. We originally planned to release these builds as regular releases for all supported operating systems and architectures, targeting April 13th. We made two changes from our original release plan: earlier release dates and include the change in NuGet functionality for Linux and macOS.\r\n\r\n## Who is affected\r\n\r\n.NET 5+ users will be affected on any operating system that has removed the `VeriSign Universal Root Certification Authority`. We are maintaining a list of [Linux distros that are known to be affected](https://github.com/NuGet/Announcements/issues/56).\r\n\r\n`nuget.exe` is sometimes used on Linux with Mono. This scenario is not affected.\r\n\r\nThere has been an [industry-wide movement to distrust the VeriSign root CA](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/), including companies like Apple, Google, Microsoft, and Mozilla. This may mean that at anytime in the future, [Apple](https://support.apple.com/en-us/HT212140) and [Microsoft](https://ccadb-public.secure.force.com/microsoft/IncludedCACertificateReportForMSFT) can remove `VeriSign Universal Root Certification Authority` from their trusted root CA list.\r\n\r\n## Solution\r\n\r\nThe NuGet team has [disabled the package verification feature](https://github.com/NuGet/NuGet.Client/pull/3979) for macOS and Linux. If needed, we will disable the feature for Windows at a later time. This change will be available in the updated .NET builds covered earlier.\r\n\r\nWe are also [talking to some Linux distro package maintainers](https://gitlab.alpinelinux.org/alpine/ca-certificates/-/issues/1) to ask them to delay the removal of the `VeriSign Universal Root Certification Authority` (for code signing only). Even a month of grace would help a lot, to enable .NET users on Linux to adopt the newer .NET 5 and .NET 6 builds.\r\n\r\nTo clarify, this change does not affect .NET Core 3.1 and earlier versions. It does not affect .NET Framework. It does not affect any .NET functionality on Windows, at least not at this time.\r\n\r\n## More Context\r\n\r\nWe observed [NuGet Restore Issues on Debian Family Linux Distros](https://github.com/NuGet/Announcements/issues/49) in January, 2021. This led us to discover that there has been an industry-wide movement to remove the `VeriSign Universal Root Certification Authority`.\r\n\r\nNuGet has historically relied on two key certificates:\r\n\r\n- NuGet Microsoft Author Signing Certificate Update - Expired January 27th, 2021\r\n- NuGet.org Repository Signing Certificate Update - Expires April 14th, 2021\r\n\r\nAfter those certificates expire, the NuGet client falls back to [timestamp verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference), which enables package verification to still function. The timestamp verification relies on VeriSign root certificate authority. The absence of this root certificate authority being available on a machine means that timestamp verification is no longer functional, which causes package signature verification to fail.\r\n\r\nSecurity is very important to us. We are putting together a plan to use a new system that will allow us to re-enable package signing verification on all supported operating systems. We will have more to share on our future plans once we are sure that all systems are once again functional.\r\n\r\n[.NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) provides more details on error messages, affected environments, and solutions.","Url":"https://github.com/dotnet/announcements/issues/180","RelatedDescription":"Open issue \"NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA\" (#180)"},{"Id":"837071846","IsPullRequest":false,"CreatedAt":"2021-03-30T21:15:03","Actor":"Nirmal4G","Number":"179","RawContent":null,"Title":"Preserve git refspec to local patches and branches after renamed origin's master","State":"closed","Body":"For all those who can't pull `master`, it should have renamed to `main`.\r\n\r\nTo preserve refspec to patches and branches, just changing the `heads/master` to `heads/main` should work.\r\n\r\n```diff\r\n[remote \"origin\"]\r\n\turl = https://github.com/dotnet/your-repo\r\n-\tfetch = +refs/heads/master:refs/remotes/origin/master\r\n+\tfetch = +refs/heads/main:refs/remotes/origin/master\r\n\ttagopt = --no-tags\r\n[branch \"master\"]\r\n\tremote = origin\r\n-\tmerge = refs/heads/master\r\n+\tmerge = refs/heads/main\r\n```\r\n\r\n> Putting this out there, if anyone else facing similar issue with git.","Url":"https://github.com/dotnet/announcements/issues/179","RelatedDescription":"Closed issue \"Preserve git refspec to local patches and branches after renamed origin's master\" (#179)"},{"Id":"826383777","IsPullRequest":false,"CreatedAt":"2021-03-09T18:01:29","Actor":"rbhanda","Number":"178","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/49377\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerable package is [System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/) . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\r\n\r\nVulnerable package versions:\r\n\r\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web  package with a vulnerable version listed below.\r\n\r\nPackage Name| Vulnerable Versions| Secure Versions\r\n:----- | :----: | -----:\r\n[System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/)| 4.0.0 - 4.5.0 <br> 4.6.0-4.7.1 <br> 5.0.0  | 4.5.1 <br>4.7.2 <br>5.0.1\r\n\r\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for [supported .NET versions](https://github.com/dotnet/core/blob/main/releases.md).\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.4 or SDK 5.0.104 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.13 or SDK 3.1.113 (for Visual Studio 2019 v16.4) or 3.1.407 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.26 or SDK 2.1.522 (for Visual Studio 2019 v15.9) or 2.1.814 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-26701](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26701)\r\n\r\n### Revisions\r\n\r\nV1.0 (March 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-03-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/178","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\" (#178)"},{"Id":"826382587","IsPullRequest":false,"CreatedAt":"2021-03-09T18:00:38","Actor":"rbhanda","Number":"177","RawContent":null,"Title":"March 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in March 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET March 2021 Updates – 5.0.4, 3.1.13, 2.1.26](https://devblogs.microsoft.com/dotnet/net-march-2021/)\r\n  * .NET 5.0.4 and .NET SDK 5.0.104 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.4/5.0.4.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.13 and .NET SDK 3.1.113 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.13/3.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.26 and .NET SDK 2.1.522 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.26/2.1.26.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/177","RelatedDescription":"Open issue \"March 2021 .NET Updates\" (#177)"},{"Id":"804795571","IsPullRequest":false,"CreatedAt":"2021-02-09T18:17:29","Actor":"rbhanda","Number":"176","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA remote code execution vulnerability exists when parsing certain types of graphics files. This vulnerability only exists on systems running on MacOS or Linux.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/48066\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0, .NET Core 3.1, or .NET Core 2.1 application running on .NET 5.0.2, .NET Core 3.1.11, or .NET Core 2.1.24 or lower, respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.3 or SDK 5.0.103 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.12 or SDK 3.1.112 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.25 or SDK 2.1.521 (for Visual Studio 2019 v15.9) or 2.1.813 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-24112](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24112)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-02-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/176","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability\" (#176)"},{"Id":"804794018","IsPullRequest":false,"CreatedAt":"2021-02-09T18:15:20","Actor":"rbhanda","Number":"175","RawContent":null,"Title":" Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists when creating HTTPS web request during X509 certificate chain building.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/48067\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0, .NET Core 3.1, or .NET Core 2.1 application running on .NET 5.0.2, .NET Core 3.1.11, or .NET Core 2.1.24 or lower, respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.3 or SDK 5.0.103 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.12 or SDK 3.1.112 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.25 or SDK 2.1.521 (for Visual Studio 2019 v15.9) or 2.1.813 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-1721](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-1721)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-02-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/175","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability\" (#175)"},{"Id":"804791013","IsPullRequest":false,"CreatedAt":"2021-02-09T18:10:59","Actor":"rbhanda","Number":"174","RawContent":null,"Title":"February 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in February 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET February 2021 Updates – 5.0.3, 3.1.12, 2.1.25](https://devblogs.microsoft.com/dotnet/net-february-2021/)\r\n  * .NET 5.0.3 and .NET SDK 5.0.103 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.3/5.0.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.12 and .NET SDK 3.1.112 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.12/3.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.25 and .NET SDK 2.1.521 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.25/2.1.25.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [February 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-security-and-quality-rollup/)\r\n* [February 2021 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-february-2021-cumulative-update-preview-for-net-framework/)\r\n* [February 2021 Cumulative Update Preview for Windows 10 2004 and newer versions](https://devblogs.microsoft.com/dotnet/net-framework-february-2021-cumulative-update-preview-for-windows-10-2004-windows-server-version-2004-windows-10-version-20h2-and-windows-server-version-20h2/)\r\n\r\n</br>\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/174","RelatedDescription":"Open issue \"February 2021 .NET Updates\" (#174)"},{"Id":"746031367","IsPullRequest":false,"CreatedAt":"2021-01-28T19:44:42","Actor":"samsp-msft","Number":"168","RawContent":null,"Title":"Survey: Repo contribution experience, Fall 2020","State":"closed","Body":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/announcements)\r\n\r\nThank you for your time!\r\n\r\n## Discussion ##\r\nFor discussion, please go to dotnet/runtime#44903.\r\n","Url":"https://github.com/dotnet/announcements/issues/168","RelatedDescription":"Closed issue \"Survey: Repo contribution experience, Fall 2020\" (#168)"},{"Id":"795455899","IsPullRequest":false,"CreatedAt":"2021-01-27T21:26:00","Actor":"MichaelSimons","Number":"173","RawContent":null,"Title":"NuGet restore failing on .NET 5 for Debian-based OSes","State":"open","Body":"# NuGet restore failing on .NET 5 for Debian-based OSes\r\n \r\n.NET 5 restore is broken for Debian-based operating systems including Docker thus resulting in error messages like:\r\n \r\n```\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n```\r\n \r\nPlease follow the [NuGet Announcement](https://github.com/NuGet/Announcements/issues/49) for the latest details on the issue.\r\n","Url":"https://github.com/dotnet/announcements/issues/173","RelatedDescription":"Open issue \"NuGet restore failing on .NET 5 for Debian-based OSes\" (#173)"},{"Id":"790168090","IsPullRequest":false,"CreatedAt":"2021-01-20T17:15:34","Actor":"terrajobst","Number":"172","RawContent":null,"Title":"The dotnet org will rename all default branches to main","State":"open","Body":"We have decided to unify the naming of our default branches to `main`. All new repos will already use this naming. Over the next couple of months, we're going to rename the branches in our existing repos as well. We're using [GitHub's new tooling](https://github.blog/changelog/2021-01-19-support-for-renaming-an-existing-branch/) to make sure branch policies and PRs are automatically updated.\r\n\r\nHowever, this still requires some changes from you as well. This announcement describes the process and what you need to do on your end.\r\n\r\n## Process\r\n\r\nWe'll start with a smaller list of repos and grow from there. Theses are the planned starting repos:\r\n\r\n* [dotnet/project-system](https://github.com/dotnet/project-system) ✔ \r\n* [dotnet/llvm-project](https://github.com/dotnet/llvm-project) ✔\r\n* [dotnet/icu](https://github.com/dotnet/icu) ✔\r\n* [dotnet/xharness](https://github.com/dotnet/xharness) ✔\r\n* [mono/linker](https://github.com/mono/linker) ✔\r\n* [dotnet/docker-tools](https://github.com/dotnet/docker-tools) ✔\r\n* [dotnet/wcf](https://github.com/dotnet/wcf) ✔\r\n* [dotnet/aspnetcore](https://github.com/dotnet/aspnetcore) ✔\r\n* [dotnet/iot](https://github.com/dotnet/iot) ✔\r\n* [dotnet/winforms](https://github.com/dotnet/winforms) ✔\r\n\r\nWe're starting with a smaller list to ensure we catch all cases where we need to update corresponding configuration in our Arcade-based tooling (see [this fantastic blog post](https://devblogs.microsoft.com/dotnet/a-deep-dive-into-how-net-builds-and-ships/) on how we build .NET).\r\n\r\nOnce we have validated our checklist, each repo admin will rename the default branch at their own pace. We expect to complete all repos in the next couple of months.\r\n\r\n## What you can expect\r\n\r\n*We have a detailed guide you can find at <https://aka.ms/m2m-dotnet>. This is only the essentials.*\r\n\r\nWe'll add a sticky issue to each repo when we're about to rename the branch. We'll do this a few days before and we'll leave it there for two weeks.\r\n\r\n**You don't need to update your PRs**. If you submitted a PR against the old default branch, the GitHub tooling will automatically retarget your PR against the new default branch (main).\r\n\r\nFor sanity, **you should rename the default branch in your fork as well**. When you go to your fork, GitHub will guide you through this experience:\r\n\r\n![Rename branch in fork](https://user-images.githubusercontent.com/5169960/105210186-92bdba80-5aff-11eb-99c9-0beb708fcf3f.png)\r\n\r\n**You will need to update the repos you cloned to your hard drive**. When you go to the original repository, GitHub will guide you through this experience:\r\n\r\n![Update local repo](https://user-images.githubusercontent.com/5169960/105210184-92bdba80-5aff-11eb-93a8-2b13dbbf74c8.png)\r\n\r\nFor a discussion, please use https://github.com/dotnet/arcade/issues/6825.","Url":"https://github.com/dotnet/announcements/issues/172","RelatedDescription":"Open issue \"The dotnet org will rename all default branches to main\" (#172)"},{"Id":"784480708","IsPullRequest":false,"CreatedAt":"2021-01-12T18:30:01","Actor":"rbhanda","Number":"171","RawContent":null,"Title":"January 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in January 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET January 2021 Updates – 5.0.2, 3.1.11, 2.1.24](https://devblogs.microsoft.com/dotnet/net-january-2021/)\r\n  * .NET 5.0.2 and .NET SDK 5.0.102 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.2/5.0.2.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.11 and .NET SDK 3.1.111 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.11/3.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.24 and .NET SDK 2.1.520 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.24/2.1.24.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n</br>\r\n<h2>.NET Framework</h2>\r\n\r\n* [.NET Framework January Security and Quality Rollup Update](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup-update/)\r\n\r\n</br>\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/171","RelatedDescription":"Open issue \"January 2021 .NET Updates\" (#171)"},{"Id":"784470551","IsPullRequest":false,"CreatedAt":"2021-01-12T18:19:41","Actor":"rbhanda","Number":"170","RawContent":null,"Title":" Microsoft Security Advisory CVE-2021-1723 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-1723 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core and ASP.NET 5. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists in the way Kestrel parses HTTP/2 requests. The security update addresses the vulnerability by fixing the way the Kestrel parses HTTP/2 requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/29236\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 or .NET 5.0 application running on .NET Core 3.1.10 or .NET 5.0.1 or lower respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you are using .NET Core 3.1, you should download and install Runtime 3.1.11 or SDK 3.1.111 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n* If you are using .NET 5.0, you should download and install Runtime 5.0.2 or SDK 5.0.102 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnetcore/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-1723](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-1723)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 12, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-01-12_\r\n","Url":"https://github.com/dotnet/announcements/issues/170","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2021-1723 | ASP.NET Core Denial of Service Vulnerability\" (#170)"},{"Id":"759718417","IsPullRequest":false,"CreatedAt":"2020-12-08T19:30:20","Actor":"rbhanda","Number":"169","RawContent":null,"Title":"December 2020 .NET Updates","State":"open","Body":"The following .NET updates were released in December 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET December 2020 Updates – 5.0.1](https://devblogs.microsoft.com/dotnet/net-december-2020/)\r\n  * .NET 5.0.1 and .NET SDK 5.0.101 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.1/5.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n</br>\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/169","RelatedDescription":"Open issue \"December 2020 .NET Updates\" (#169)"},{"Id":"740056275","IsPullRequest":false,"CreatedAt":"2020-11-10T16:26:54","Actor":"rbhanda","Number":"167","RawContent":null,"Title":"November 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET November 2020 Updates – 5.0](https://devblogs.microsoft.com/dotnet/announcing-net-5-0/)\r\n  * .NET 5.0 and .NET SDK 5.0.100 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.0/5.0.0.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n</br>\r\n\r\n* [.NET Core November 2020 Updates – 3.1.10](https://devblogs.microsoft.com/dotnet/net-core-november-2020/)\r\n  * .NET Core 3.1.10 and .NET Core SDK 3.1.110 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.10/3.1.10.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Framework </h2>\r\n\r\n* [November 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-security-and-quality-rollup-updates/)\r\n\r\n* [November 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-cumulative-update-preview/)\r\n\r\n* [November 2020 Cumulative Update Preview for Windows 10 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-cumulative-update-preview-for-windows-10-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/167","RelatedDescription":"Open issue \"November 2020 .NET Updates\" (#167)"},{"Id":"720690315","IsPullRequest":false,"CreatedAt":"2020-10-13T19:01:25","Actor":"TaraOverfield","Number":"166","RawContent":null,"Title":"October 2020 .NET Updates ","State":"open","Body":"The following .NET updates were released on October 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [October 2020 Updates – 2.1.23 and 3.1.9](https://devblogs.microsoft.com/dotnet/net-core-october-2020/)\r\n  * .NET Core 3.1.9 and .NET Core SDK 3.1.109 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.9/3.1.9.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.23 and .NET Core SDK 2.1.811 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.23/2.1.23.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* .[NET Core support for Ubuntu 20.10](https://github.com/dotnet/core/issues/5017)\r\n* .[NET Core Support for Fedora 33](https://github.com/dotnet/core/issues/5018)\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [October 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/)\r\n* [Republishing of July 2020 Security Only Updates](https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/)\r\n* [October 2020 Cumulative Update Preview Update](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-cumulative-update-preview-update/)\r\n* [October 2020 Cumulative Update Preview Update for Windows 10 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-cumulative-update-preview-update-for-windows-10-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/166","RelatedDescription":"Open issue \"October 2020 .NET Updates \" (#166)"},{"Id":"696061299","IsPullRequest":false,"CreatedAt":"2020-09-08T17:44:01","Actor":"rbhanda","Number":"165","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.\r\n\r\nThe ASP.NET Core cookie parser decodes entire cookie strings which could allow a malicious attacker to set a second cookie with the name being percent encoded.\r\n\r\nThe security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/25701\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.7 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.21 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.8 or SDK 3.1.108 (for Visual Studio 2019 v16.4) or 3.1.402 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1045](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1045)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 8, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-09-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/165","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\" (#165)"},{"Id":"696046001","IsPullRequest":false,"CreatedAt":"2020-09-08T17:20:15","Actor":"TaraOverfield","Number":"164","RawContent":null,"Title":"September 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [September 2020 Updates – 2.1.22 and 3.1.8](https://devblogs.microsoft.com/dotnet/net-core-september-2020/)\r\n  * .NET Core 3.1.8 and .NET Core SDK 3.1.108 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.8/3.1.8.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.22 and .NET Core SDK 2.1.810 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.22/2.1.22.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n* [September 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-cumulative-update-preview-update/)\r\n* [October 1, 2020 Cumulative Update Preview Update for Windows 10, version 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-october-1-2020-cumulative-update-preview-update-for-windows-10-version-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Open issue \"September 2020 .NET Updates\" (#164)"},{"Id":"677090197","IsPullRequest":false,"CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Number":"163","RawContent":null,"Title":"August 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Framework\r\n* [August 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-august-2020-security-and-quality-rollup-updates/)\r\n\r\n* [August 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/august-2020-cumulative-update-preview/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Open issue \"August 2020 .NET Updates\" (#163)"},{"Id":"677046311","IsPullRequest":false,"CreatedAt":"2020-08-11T17:08:44","Actor":"rbhanda","Number":"162","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/24796\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.6 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.20 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162)"},{"Id":"658602325","IsPullRequest":false,"CreatedAt":"2020-07-16T21:51:58","Actor":"clairernovotny","Number":"161","RawContent":null,"Title":"Moving microsoft/MSBuild to dotnet/MSBuild","State":"open","Body":"Early next week, we are planning to move `microsoft/msbuild` to `dotnet/msbuild` as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523","Url":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Open issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161)"},{"Id":"656777247","IsPullRequest":false,"CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Number":"160","RawContent":null,"Title":"July 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n  * .NET Core 3.1.6 and .NET Core SDK 3.1.106 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.20 and .NET Core SDK 2.1.808 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* [.NET Core support for Ubuntu 19.10 -- EOL](https://github.com/dotnet/core/issues/4925)\r\n\r\n## .NET Framework\r\n* [July 2020 Security and Quality Rollup Updates]( https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/)\r\n\r\n* [July 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/)\r\n\r\n* [July 2020 Cumulative Update Preview for Windows 10, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/)\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Open issue \"July 2020 .NET Updates\" (#160)"},{"Id":"656765637","IsPullRequest":false,"CreatedAt":"2020-07-14T17:06:53","Actor":"rbhanda","Number":"159","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability ","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/39296\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.6 or SDK 3.1.106 (for Visual Studio 2019 v16.4) or 3.1.302 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n","Url":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \" (#159)"},{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n   * .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n   * .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n* [Alpine 3.12 ](https://github.com/dotnet/core/issues/4750) is now  supported.","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1380691734749798402","CreatedAt":"2021-04-10T01:18:56+00:00","UserScreenname":"dotnet","Text":"Show dotnet: Animating 40 LEDs with charlieplexing https://t.co/wCIZoNP4XV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":2,"RawContent":null},{"Id":"1380665835472232448","CreatedAt":"2021-04-09T23:36:01+00:00","UserScreenname":"dotnet","Text":"Any given Web API action might need to support various return types. \n\nIn today's episode in the Beginner's Series… https://t.co/ktwJH6X8UQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":78,"FavoriteCount":12,"RawContent":null},{"Id":"1380622803024625666","CreatedAt":"2021-04-09T20:45:01+00:00","UserScreenname":"dotnet","Text":"Learn to:\n👉 Create a #dotNET 5 microservice\n👉 Interact with microservice endpoints\n👉 Manage configuration and secre… https://t.co/Js5QmwN5uk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":272,"FavoriteCount":64,"RawContent":null},{"Id":"1380599296261648385","CreatedAt":"2021-04-09T19:11:37+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":28,"FavoriteCount":7,"RawContent":null},{"Id":"1380571714917171203","CreatedAt":"2021-04-09T17:22:01+00:00","UserScreenname":"dotnet","Text":".@NishAnil has a great post out there that gives us the ins and outs of monitoring and observability in cloud-nativ… https://t.co/7eYPTh9wu1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":6,"RawContent":null},{"Id":"1380522686120660994","CreatedAt":"2021-04-09T14:07:11+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @ChristosMatskas and @98codes show us how to add our Web APIs as connects to PowerApp… https://t.co/j8v6E2z8UM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":8,"RawContent":null},{"Id":"1380298661649866756","CreatedAt":"2021-04-08T23:17:00+00:00","UserScreenname":"dotnet","Text":"Here's a quick intro to using Azure App Configuration in #dotNET 5 Functions, thanks to @rickvdbosch and our pals o… https://t.co/EI6oWuczRS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":31,"FavoriteCount":7,"RawContent":null},{"Id":"1380261672271630336","CreatedAt":"2021-04-08T20:50:01+00:00","UserScreenname":"dotnet","Text":"The .NET SDK comes with many templates already installed and ready for you to use. \n\nIn this live session with… https://t.co/E7rFkNYkiM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":15,"RawContent":null},{"Id":"1380259303144099843","CreatedAt":"2021-04-08T20:40:36+00:00","UserScreenname":"dotnet","Text":"Announcing .NET 6 Preview 3 https://t.co/xxrRvDo87f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":543,"FavoriteCount":203,"RawContent":null},{"Id":"1380259096188710914","CreatedAt":"2021-04-08T20:39:47+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET 6 Preview 3 https://t.co/1NeDKBHU8q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":157,"FavoriteCount":47,"RawContent":null},{"Id":"1380250308790558722","CreatedAt":"2021-04-08T20:04:52+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":23,"FavoriteCount":5,"RawContent":null},{"Id":"1380208824859115520","CreatedAt":"2021-04-08T17:20:01+00:00","UserScreenname":"dotnet","Text":"Whether you're building native WinForms, WPF or WinUI desktop apps or enabling cross-platform solutions through Bla… https://t.co/CiyC0Kc3TN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":2,"RawContent":null},{"Id":"1380167300502990853","CreatedAt":"2021-04-08T14:35:01+00:00","UserScreenname":"dotnet","Text":"Learn to create a .NET app that can be used as a GitHub Action.\n✅ Prepare a .NET app for GitHub Actions\n✅ Define ac… https://t.co/oDW8SgFOZK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":141,"FavoriteCount":40,"RawContent":null},{"Id":"1379936776836497408","CreatedAt":"2021-04-07T23:19:00+00:00","UserScreenname":"dotnet","Text":"#7 in last week’s https://t.co/HKfo1sGnlo most read articles is a first time poster writing about Async / Await in… https://t.co/Si4NH1YlHH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1379896770512183307","CreatedAt":"2021-04-07T20:40:01+00:00","UserScreenname":"dotnet","Text":"Next up in our continuing beginner's series on Web APIs, we look at how to debug using the open source Swagger deve… https://t.co/LdrOMHuuDx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2021-04-12T05:30:32.756195Z","RunDurationInMilliseconds":9092}