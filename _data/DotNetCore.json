{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing .NET Live TV – Daily Developer Live Streams","PublishedOn":"2020-10-15T15:05:27+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are launching .NET Live TV, your one stop shop for all .NET and Visual Studio live streams across Twitch and YouTube. We are always looking for new ways to bring great content to the...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-live-tv/","RawContent":null},{"Title":".NET Framework republishing of July 2020 Security Only Updates","PublishedOn":"2020-10-13T18:51:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are republishing the July 2020 Security Only Updates for .NET Framework to resolve a known issue that affected the original release.  You should install this version (V2) of the update as...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/","RawContent":null},{"Title":".NET Framework October 2020 Security and Quality Rollup Updates","PublishedOn":"2020-10-13T18:21:45+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the October 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-16937– .NET Framework Information Disclosure Vulnerability\nAn information disclosure...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/","RawContent":null},{"Title":".NET Core October 2020 Updates – 2.1.23 and 3.1.9","PublishedOn":"2020-10-13T18:12:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core October 2020 Update. These updates contains reliability and other non-security fixes. See the individual release notes for details on updated packages.\nGetting...","Href":"https://devblogs.microsoft.com/dotnet/net-core-october-2020/","RawContent":null},{"Title":"Announcing Entity Framework Core (EF Core) 5 RC2","PublishedOn":"2020-10-13T18:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, the Entity Framework Core team announces the second release candidate (RC2) of EF Core 5.0. This is\n    a feature complete release candidate of EF Core 5.0 and ships with a &#34;go live&#34;...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-ef-core-5-rc2/","RawContent":null},{"Title":"Announcing .NET 5.0 RC 2","PublishedOn":"2020-10-13T16:23:33+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"Today, we are shipping .NET 5.0 Release Candidate 2 (RC2). It is a near-final release of .NET 5.0, and the last of two RCs before the official release in November. RC2 is a &#8220;go live&#8221;...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-rc-2/","RawContent":null},{"Title":"MLOps: DevOps for Machine Learning","PublishedOn":"2020-10-13T15:00:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Machine Learning Operations (MLOps) is like DevOps for the machine learning lifecycle. This includes things like model deployment &#38; management and data tracking, which help with productionizing...","Href":"https://devblogs.microsoft.com/dotnet/mlops-devops-for-machine-learning/","RawContent":null},{"Title":"Game Development with .NET","PublishedOn":"2020-10-06T21:00:29+00:00","CommentsCount":44,"FacebookCount":0,"Summary":"We&#8217;ve launched a new Game Development with .NET section on our site. It&#8217;s designed for current .NET developers to explore all the choices available to them when developing games....","Href":"https://devblogs.microsoft.com/dotnet/game-development-with-net/","RawContent":null},{"Title":".NET Framework October 1, 2020 Cumulative Update Preview Update for Windows 10, version 2004 and Windows Server, version 2004","PublishedOn":"2020-10-01T18:35:34+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the September 2020 Cumulative Update Preview Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-1-2020-cumulative-update-preview-update-for-windows-10-version-2004-and-windows-server-version-2004/","RawContent":null},{"Title":".NET Interactive Preview 3: VS Code Insiders and .NET Polyglot Notebooks","PublishedOn":"2020-09-30T16:01:43+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"In .NET Interactive Preview 2, we announced that in addition to Jupyter Notebook and Jupyter Lab, users could use nteract as well. In this preview, users can add VS Code Insiders to that list. With...","Href":"https://devblogs.microsoft.com/dotnet/net-interactive-preview-3-vs-code-insiders-and-polyglot-notebooks/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"13832940104","Type":"IssuesEvent","CreatedAt":"2020-10-13T19:01:25","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/166","RelatedDescription":"Opened issue \"October 2020 .NET Updates \" (#166) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [October 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/)\r\n* [Republishing of July 2020 Security Only Updates](https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"13449957366","Type":"IssuesEvent","CreatedAt":"2020-09-08T17:44:02","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/165","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\" (#165) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.\r\n\r\nThe ASP.NET Core cookie parser decodes entire cookie strings which could allow a malicious attacker to set a second cookie with the name being percent encoded.\r\n\r\nThe security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/23578\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.7 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.21 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.8 or SDK 3.1.108 (for Visual Studio 2019 v16.4) or 3.1.402 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1045](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1045)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 8, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-09-08_\r\n"},{"Id":"13449776257","Type":"IssuesEvent","CreatedAt":"2020-09-08T17:26:27","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Reopened issue \"September .NET Updates\" (#164) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"13449775345","Type":"IssuesEvent","CreatedAt":"2020-09-08T17:26:21","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Closed issue \"September .NET Updates\" (#164) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"13449712627","Type":"IssuesEvent","CreatedAt":"2020-09-08T17:20:15","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Opened issue \"September .NET Updates\" (#164) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"13172338767","Type":"IssuesEvent","CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Opened issue \"August 2020 .NET Updates\" (#163) at dotnet/announcements","RelatedBody":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"13171712576","Type":"IssuesEvent","CreatedAt":"2020-08-11T17:08:45","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnet/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n"},{"Id":"12929048885","Type":"IssuesEvent","CreatedAt":"2020-07-16T21:51:59","Actor":"clairernovotny","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Opened issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161) at dotnet/announcements","RelatedBody":"Early next week, we are planning to move this repository to dotnet/msbuild as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"13848086880","Type":"PullRequestEvent","CreatedAt":"2020-10-14T20:05:28","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28111","RelatedDescription":"Opened pull request \"fixing the osx install native dependency failure\" (#28111) at dotnet/coreclr","RelatedBody":""},{"Id":"13834842399","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:47:03","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28110","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)\" (#28110) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13834484260","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:13:03","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28071","RelatedDescription":"Merged pull request \"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap\" (#28071) at dotnet/coreclr","RelatedBody":"- Port of https://github.com/dotnet/runtime/pull/40205 to 3.1\r\n- Snap's default strict confinement doesn't allow setting the affinity of a different thread, and currently doesn't allow `sched_setaffinity(<nonzeroPid>, ...)` even with the calling thread's pid, which pthread implementation uses\r\n- Switched to use `sched_setaffinity(0, ...)` where appropriate\r\n\r\nFixes https://github.com/dotnet/runtime/issues/1634\r\n\r\n### Customer impact\r\n\r\n- .NET Core doesn't work under Snap's default strict confinement. When a thread is created coreclr requests for the processor affinity of the new thread to be changed to the process' affinity, which is not allowed under Snap's strict confinement.\r\n- There are a couple of workarounds, but both involve manual/non-default steps (inconvenient) and give the process more control than desired:\r\n  - Specify the process-control plug and manually connect it before running the app\r\n  - Require the classic confinement instead and specify it when installing the app\r\n- The workarounds may also cause some difficulty, especially longer-term, for .NET Core apps to be added to the public snap store due to the extra control the process would require.\r\n  - It is possible to specify to auto-connect the process-control plug using store processes, but it requires review and justification, and the purpose of working around this issue may be difficult to justify longer-term\r\n  - Apps that use the classic confinement run without any sandboxing, and may not be allowed in the public snap store for the purpose of working around this issue\r\n  - See https://github.com/dotnet/runtime/issues/1634#issuecomment-667332468 for more information\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- Tested a small app under Snap's strict confinement\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- Instead of the creating thread changing the affinity of the created thread, the created thread changes its own affinity after starting, the difference is mostly invisible\r\n- Where appropriate, used a fallback to use the pthread implementation for setting the affinity when sched_setaffinity is not available, so in the theoretical possibility of a different pthread implementation for setting the affinity, there would be no change from before"},{"Id":"13834478952","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:12:34","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28106","RelatedDescription":"Merged pull request \"Port to 3.1 - Fix bad configure tests\" (#28106) at dotnet/coreclr","RelatedBody":"Port of https://github.com/dotnet/runtime/pull/42756\r\n\r\nThere was an extra -c in the CMAKE_REQUIRED_FLAGS set for testing\r\nHAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC that was breaking\r\nbuild of coreclr under homebrew. The option was somehow making\r\nthese checks behave on ARM Linux, even though it is not clear to\r\nme why, as it was just causing this option to be passed to the\r\ncompiler twice at different positions of the command line of\r\nthe cmake tests.\r\nThis change fixes it by using check_symbol_exists instead of\r\ncheck_c_source_compiles, since just removing the duplicite -c\r\nwas resulting in the check failing on ARM / ARM64 Linux due\r\nto a missing symbol from libunwind during linking.\r\n\r\n# Customer impact\r\nWe've got this issue reported by a customer who was trying to add `brew` recipe for packaging\r\n.NET Core 3.1 on OSX. \r\n\r\n# Regression?\r\nYes, introduced in 2.1\r\n\r\n# Testing\r\nI've manually verified that the HAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC (and UNWIND_CONTEXT_IS_UCONTEXT_T that was not broken, but it is in the block of code influenced \r\nby the change) are generated correctly for all the support target platforms / architectures.\r\n\r\n# Risk\r\nVery low, the change influences only a compile time detection of a presence of two libunwind \r\nfunctions. "},{"Id":"13834472805","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:12:02","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28107","RelatedDescription":"Merged pull request \"update branding to 3.1.10\" (#28107) at dotnet/coreclr","RelatedBody":"adding no merge until we release 3.1.9"},{"Id":"13834263807","Type":"PullRequestEvent","CreatedAt":"2020-10-13T20:53:53","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28110","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)\" (#28110) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"13865431926","Type":"PullRequestEvent","CreatedAt":"2020-10-16T04:19:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13615","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13615) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.14\r\n- **Date Produced**: 10/16/2020 3:29 AM\r\n- **Commit**: 6a4b093615c3905cd086d3e9e78bf37f7e2025f3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.11 to 3.1.10-servicing.20515.14][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/6694eca...6a4b093\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"13865258911","Type":"PullRequestEvent","CreatedAt":"2020-10-16T03:48:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13614","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13614) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201015.14\r\n- **Date Produced**: 10/16/2020 3:29 AM\r\n- **Commit**: 6a4b093615c3905cd086d3e9e78bf37f7e2025f3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.11 to 3.1.10-servicing.20515.14][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/6694eca...6a4b093\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n"},{"Id":"13865258895","Type":"PullRequestEvent","CreatedAt":"2020-10-16T03:48:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13615","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13615) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.14\r\n- **Date Produced**: 10/16/2020 3:29 AM\r\n- **Commit**: 6a4b093615c3905cd086d3e9e78bf37f7e2025f3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.11 to 3.1.10-servicing.20515.14][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/6694eca...6a4b093\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"13864785995","Type":"PullRequestEvent","CreatedAt":"2020-10-16T02:28:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13613","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13613) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/16/2020 1:21 AM\r\n- **Commit**: 75db753694a354ffa508854ca3c9e2e49911c43e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.6 to 3.1.10-servicing.20515.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/6de1bb0...75db753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"13864665950","Type":"PullRequestEvent","CreatedAt":"2020-10-16T02:07:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13608","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13608) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:04 AM\r\n- **Commit**: 6694ecaf606189c9d28ba4bf95db948b675ada95\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20513.12 to 3.1.10-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/506a703...6694eca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"13864661456","Type":"PullRequestEvent","CreatedAt":"2020-10-16T02:07:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13611","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13611) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:04 AM\r\n- **Commit**: 6694ecaf606189c9d28ba4bf95db948b675ada95\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.3 to 3.1.10-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/84e3ff5...6694eca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n"},{"Id":"13864607243","Type":"PullRequestEvent","CreatedAt":"2020-10-16T01:57:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13613","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13613) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/16/2020 1:21 AM\r\n- **Commit**: 75db753694a354ffa508854ca3c9e2e49911c43e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.6 to 3.1.10-servicing.20515.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/6de1bb0...75db753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"13864337785","Type":"PullRequestEvent","CreatedAt":"2020-10-16T01:09:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13612","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13612) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:00 AM\r\n- **Commit**: 4f77b27cff967fd9abde1f94faae7f963c43170d\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: [from 3.1.403-servicing.20465.25 to 3.1.404-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/sdk/compare/7c8ec1e...4f77b27\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"13853961205","Type":"IssuesEvent","CreatedAt":"2020-10-15T08:52:30","Actor":"AksTheNerd","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Opened issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776) at dotnet/standard","RelatedBody":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"13862793415","Type":"PullRequestEvent","CreatedAt":"2020-10-15T21:22:31","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43000","RelatedDescription":"Merged pull request \"[Test Only] Port failing test fix from runtime repo to 3.1 Release\" (#43000) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/runtime/issues/43372"},{"Id":"13862252820","Type":"PullRequestEvent","CreatedAt":"2020-10-15T20:26:07","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/43000","RelatedDescription":"Opened pull request \"[Test Only] Port failing test fix from runtime repo to 3.1 Release\" (#43000) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/runtime/issues/43372"},{"Id":"13834854264","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:48:15","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42998","RelatedDescription":"Merged pull request \"Disable SetDateTimeMax test on Linux\" (#42998) at dotnet/corefx","RelatedBody":"The test failed on 3.1 branch https://github.com/dotnet/corefx/pull/42996\r\nRelated issue https://github.com/dotnet/runtime/issues/43166"},{"Id":"13834822743","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:45:04","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42999","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)\" (#42999) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13834819896","Type":"PullRequestEvent","CreatedAt":"2020-10-13T21:44:47","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42994","RelatedDescription":"Merged pull request \"[release/3.1] Ensure Image.Save can handle non readable / seekable Streams\" (#42994) at dotnet/corefx","RelatedBody":"Port https://github.com/dotnet/runtime/pull/36805 to release/3.1.\r\n\r\nOriginal issue: https://github.com/dotnet/runtime/issues/33522\r\n\r\n## Summary\r\n\r\nWhen calling `Image.Save` and passing in a stream to write the image to we started throwing `NotSupportedException` if the stream could not be read.  This happened accidentally as part of a performance fix in 3.x.  That fix tried to ensure a seekable stream and would copy the backing stream contents when doing so.  This was unnecessary work (and an unnecessary copy) since saving the image only requires writing and not reading nor seeking.\r\n\r\n## Customer Impact\r\n\r\nCustomer encounters `NotSupportedException` when trying to save an image when they did not before.  This is blocking service update to 3.1 for the customer as well as preventing their upstack consumers of this service from updating.\r\nWorkaround would involve saving to a `MemoryStream` then copying to the final stream, which is undesirable.  This significantly increases CPU and memory usage to a in a commonly used component low in the stack.\r\n\r\n## Regression?\r\n\r\nYes, from 2.1: https://github.com/dotnet/corefx/commit/dee434428ee392302ff2050bbee304c9fce68b2f\r\n\r\n## Testing\r\n\r\nUnit tests added to cover this scenario.  Partner has been using 5.0 fix.\r\n\r\n## Risk\r\n\r\nLow.  This is undoing a regression and fix has been in place in 5.0 for months. "},{"Id":"13834239763","Type":"PullRequestEvent","CreatedAt":"2020-10-13T20:51:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42999","RelatedDescription":"Opened pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)\" (#42999) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"13834026758","Type":"PullRequestEvent","CreatedAt":"2020-10-13T20:33:31","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42998","RelatedDescription":"Opened pull request \"Disable SetDateTimeMax test on Linux\" (#42998) at dotnet/corefx","RelatedBody":"The test failed on 3.1 branch https://github.com/dotnet/corefx/pull/42996\r\nRelated issue https://github.com/dotnet/runtime/issues/43166"},{"Id":"13833930674","Type":"PullRequestEvent","CreatedAt":"2020-10-13T20:25:19","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42996","RelatedDescription":"Merged pull request \"update branding to 3.1.10\" (#42996) at dotnet/corefx","RelatedBody":"Adding a no merge label until we ship the 3.1.9"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"13865706350","Type":"PullRequestEvent","CreatedAt":"2020-10-16T05:07:15","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/48652","RelatedDescription":"Merged pull request \"Merge release/dev16.8-vs-deps to release/dev16.9-vs-deps\" (#48652) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.8-vs-deps into release/dev16.9-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.8-vs-deps\n- https://github.com/dotnet/roslyn/find/release/dev16.9-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-vs-deps-to-release/dev16.9-vs-deps\ngit reset --hard upstream/release/dev16.9-vs-deps\ngit merge upstream/release/dev16.8-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-vs-deps-to-release/dev16.9-vs-deps --force\n```\n"},{"Id":"13865534232","Type":"PullRequestEvent","CreatedAt":"2020-10-16T04:36:57","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/48662","RelatedDescription":"Opened pull request \"Move VisualStudioTaskSchedulerProvider to the EditorFeatures layer\" (#48662) at dotnet/roslyn","RelatedBody":"Prior to this change, tests in the EditorFeatures layer were using JTF through `IThreadingContext`, but didn't pull in a JTF-aware task scheduler provider because it was up in the Visual Studio layer. Moving the JTF-aware scheduler down to the EditorFeatures layer causes UseExportProviderAttribute.After to dispatch through JTF instead of trying to dispatch through XUnit's test synchronization context, which doesn't end up running on the WPF dispatcher.\r\n\r\nFixes #48644"},{"Id":"13865503106","Type":"PullRequestEvent","CreatedAt":"2020-10-16T04:31:27","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/48606","RelatedDescription":"Merged pull request \"Remove active view infobars\" (#48606) at dotnet/roslyn","RelatedBody":"Fixes #40993\r\n\r\nPrevious code used the active tool window or document window to show exceptions, but if exceptions come from navigation then they'd appear on the find in files, or find references tool windows, and if its possible for them to come from background processes, then who knows where they'd show. \r\n\r\nThis change just makes us always use the global info bar, so its not confusing for the user."},{"Id":"13865503064","Type":"IssuesEvent","CreatedAt":"2020-10-16T04:31:27","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/40993","RelatedDescription":"Closed issue \"Analyzer crashes are often put into whatever tool window has focus\" (#40993) at dotnet/roslyn","RelatedBody":"Roslyn's logic for showing analyzer errors often puts them into whatever Window has focus, including Find All References, Solution Explorer, and few others.\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/72479157-bc3a6b00-3847-11ea-9fdb-d90c05263446.png)\r\n\r\nGiven analyzers can crash in the background without any user interaction, it would be better for Roslyn to just pick either a document window or use the global one.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"13864941987","Type":"PullRequestEvent","CreatedAt":"2020-10-16T02:54:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/8364","RelatedDescription":"Closed pull request \"prevent runtime shutdown while foreground threads keep running\" (#8364) at dotnet/corert","RelatedBody":"- [x] hack code\r\n- [x] make `GC_Scenarios._BinTree_thdtree_thdtree_._BinTree_thdtree_thdtree_sh`, `GC_Scenarios._BinTree_thdtreegrowingobj_thdtreegrowingobj_._BinTree_thdtreegrowingobj_thdtreegrowingobj_sh`, `GC_Scenarios._BinTree_thdtreelivingobj_thdtreelivingobj_._BinTree_thdtreelivingobj_thdtreelivingobj_sh` green\r\nI have issues with `./tests/runtest.sh release -coreclr Top200` either hanging on these three or exiting with 134 code.\r\nWhen I run it manually by `CORE_ROOT=./tests_downloaded/CoreCLR/Tests/Core_Root ./tests_downloaded/CoreCLR/GC/Scenarios/BinTree/thdtreegrowingobj/thdtreegrowingobj.sh` everithing works fine. I guess I've introduced some threading issue to xUnit runners.\r\n- [x] find some tests for foreground threads in CoreCLR or make our own \r\n\r\n\r\nSimplified logic adopted from CoreCLR with no additional states like `m_UnstartedThreadCount`, `m_PendingThreadCount` etc.\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"13865324470","Type":"PullRequestEvent","CreatedAt":"2020-10-16T04:00:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/14193","RelatedDescription":"Opened pull request \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14193) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201016.2\r\n- **Date Produced**: 10/16/2020 3:39 AM\r\n- **Commit**: 5fad08ef408ec0f001fa8bdd89f54b5767af1cb6\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20515.13 to 3.8.0-5.20516.2][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/6205045...5fad08e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n"},{"Id":"13865205186","Type":"PullRequestEvent","CreatedAt":"2020-10-16T03:38:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/14192","RelatedDescription":"Opened pull request \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14192) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.13\r\n- **Date Produced**: 10/16/2020 2:26 AM\r\n- **Commit**: d052b228748ff865b9c8148ac0c7218ebffaae39\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/5f2390b...d052b22\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n"},{"Id":"13865187530","Type":"PullRequestEvent","CreatedAt":"2020-10-16T03:35:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/14187","RelatedDescription":"Merged pull request \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14187) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.12\r\n- **Date Produced**: 10/16/2020 12:28 AM\r\n- **Commit**: 5f2390b990337b958fd9f96467a16111cd422e87\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/73690b2...5f2390b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n"},{"Id":"13864895093","Type":"PullRequestEvent","CreatedAt":"2020-10-16T02:46:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/14186","RelatedDescription":"Merged pull request \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14186) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201015.13\r\n- **Date Produced**: 10/15/2020 11:32 PM\r\n- **Commit**: 620504581b7797fa75aa982956715bb8ae2a8857\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20515.7 to 3.8.0-5.20515.13][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/713efb0...6205045\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n"},{"Id":"13864867865","Type":"IssuesEvent","CreatedAt":"2020-10-16T02:41:33","Actor":"0xCA","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/14191","RelatedDescription":"Opened issue \"True self-contained builds\" (#14191) at dotnet/sdk","RelatedBody":"Currently there is a Visual C++ Redistributable 2015 requirement for .Net Core 3. This way we can't have truly portable apps without the need of installing dependency first.\r\n\r\nSelf-contained option is really useful, but it's not truly self-contained for now. It's easy to imagine several situations where completely independent assembly would be great to have. Utility app that should run from USB drive on any Win7SP1+ computer, client app that should work without administrator access at limited workstations (installing vcredist requires it), etc.\r\n\r\nI'm sorry if there is a way to have it already which I couldn't find. Or if it is a wrong place or wrong way to write my suggestion. But if it's right it'd be great to have these scenarios covered.\r\nThank you for your work! I can't wait for .Net 5 and AOT."},{"Id":"13864854870","Type":"IssuesEvent","CreatedAt":"2020-10-16T02:39:30","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/14190","RelatedDescription":"Opened issue \"Update minimum-os-version.md\" (#14190) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/designs/blob/master/accepted/2020/minimum-os-version/minimum-os-version.md\r\n\r\nShould be in sync with the actual naming in implementation. https://github.com/dotnet/runtime/pull/38604\r\n\r\nAlso we should mention the property in project file `MinimumOSPlatform` will end up in `MinimumOSPlatform` attribute\r\nhttps://github.com/dotnet/sdk/issues/11239"},{"Id":"13864851502","Type":"IssuesEvent","CreatedAt":"2020-10-16T02:38:58","Actor":"mhutch","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/14189","RelatedDescription":"Opened issue \"Resolving TargetPlatformMinVersion vs OSMinimumVersion \" (#14189) at dotnet/sdk","RelatedBody":"As explained in the [minimum versions spec](https://github.com/dotnet/designs/blob/master/accepted/2020/minimum-os-version/minimum-os-version.md#os-versions), platform-specific apps can have three different settings related to the OS version: the OS API Version, the OS Minimum Version, and the OS Target Version.\r\n\r\nWindows UWP projects already have MSBuild properties, the `TargetPlatformVersion` and `TargetPlatformMinVersion`, which are equivalent to the OS API Version and OS Target Version respectively. The [.NET 5 TFM spec](https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md) proposes using this existing `TargetPlatformVersion` property to represent the OS API Version for all platforms, and assumes `TargetPlatformMinVersion`  in its examples.\r\n\r\nThese two specs currently conflict:\r\n\r\n* Using `TargetPlatformVersion` for the API version makes it easily confused with the OS Target Version. The concept of a 'target os/platform' is overloaded - in .NET it means the API set, whereas in Android it means the version of the OS that the app is targeted against. The difference is subtle, but these are fundamentally two different _kinds_ of versions, and in some cases they might not align.\r\n\r\n* Using `TargetPlatformMinVersion` for the minimum OS version implies that this is the same _kind_ of version as the `TargetPlatformVersion`, but that's an API version not an OS version.\r\n\r\nThe simplest solution that's consistent with existing .NET idioms is probably to use `TargetPlatformVersion` for the API version but to use `OSMinimumVersion` and `OSTargetVersion`  for the two other versions. This makes a distinction between the \"OS version\" as the version of the operating system and the \"platform version\" as the API version."},{"Id":"13864828154","Type":"IssuesEvent","CreatedAt":"2020-10-16T02:35:06","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/14188","RelatedDescription":"Opened issue \"how manifest should be stored\" (#14188) at dotnet/sdk","RelatedBody":"these 2 disagrees.\r\nhttps://github.com/dotnet/designs/blob/master/accepted/2020/workloads/workload-resolvers.md#sdk-behavior\r\nhttps://github.com/dotnet/designs/pull/120\r\n\r\nAnd if there is no version in the path for the manifest file. Should the manifest file include the version of itself? We need a way to track the manifest version"},{"Id":"13864589853","Type":"PullRequestEvent","CreatedAt":"2020-10-16T01:54:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/14184","RelatedDescription":"Merged pull request \"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop\" (#14184) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: from 5.0.0-rtm.20514.9 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 9a9ecb59-f847-42f2-2111-08d85e71258f\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/15/2020 10:50 PM\r\n- **Commit**: 11a9db9b3d1d86207e2e5bd89b5880cf3dd205fc\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App**: [from 5.0.0-rtm.20515.1 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1][2]\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1][2]\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.0-rtm.20514.9 to 5.0.0-rtm.20515.1][3]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/24e2e1c...11a9db9\r\n[2]: https://github.com/dotnet/wpf/compare/8c2cdd6...79755fb\r\n[3]: https://github.com/dotnet/winforms/compare/8794266...d812af0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n\r\n"},{"Id":"13864220085","Type":"PullRequestEvent","CreatedAt":"2020-10-16T00:48:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/14187","RelatedDescription":"Opened pull request \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14187) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.12\r\n- **Date Produced**: 10/16/2020 12:28 AM\r\n- **Commit**: 5f2390b990337b958fd9f96467a16111cd422e87\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/73690b2...5f2390b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n"},{"Id":"13864206333","Type":"PullRequestEvent","CreatedAt":"2020-10-16T00:46:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/13969","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13969) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7e1fb3da-4a17-48ac-7060-08d7e6f19e0b)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7e1fb3da-4a17-48ac-7060-08d7e6f19e0b\r\n- **Build**: 20201009.7\r\n- **Date Produced**: 10/9/2020 8:00 PM\r\n- **Commit**: e4584b56c5334067d30a04dd6b2d1d724ed7ccc3\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20465.6 to 1.0.0-beta.20509.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.20465.6 to 2.0.0-beta.20509.7][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 1.0.0-beta.20465.6 to 1.0.0-beta.20509.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4f384ab...e4584b5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7e1fb3da-4a17-48ac-7060-08d7e6f19e0b)\r\n\r\n\r\n\r\n"},{"Id":"13863973618","Type":"PullRequestEvent","CreatedAt":"2020-10-16T00:06:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/14182","RelatedDescription":"Merged pull request \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14182) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.7\r\n- **Date Produced**: 10/15/2020 8:22 PM\r\n- **Commit**: 73690b27aeb842a7f738782ee809af9b99f6f8fb\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/753dad3...73690b2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n"},{"Id":"13863895260","Type":"PullRequestEvent","CreatedAt":"2020-10-15T23:53:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/14186","RelatedDescription":"Opened pull request \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14186) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201015.13\r\n- **Date Produced**: 10/15/2020 11:32 PM\r\n- **Commit**: 620504581b7797fa75aa982956715bb8ae2a8857\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20515.7 to 3.8.0-5.20515.13][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/713efb0...6205045\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"721744024","IsPullRequest":true,"CreatedAt":"2020-10-14T20:05:27","Actor":"Anipik","Number":"28111","RawContent":null,"Title":"Adding --preinstall flag to brew update","State":"open","Body":"Fixes https://dev.azure.com/dnceng/internal/_build/results?buildId=851404&view=logs&j=8fda0d10-4a57-56af-7add-7281436b36e1&t=d354d20b-3af3-59c3-d621-c743753ae5da\r\n\r\nbrew update fetchs the newest version of Homebrew and all formulae from GitHub using git and perform any necessary migrations. There was problem fetching those issues.\r\npreinstall helps \r\n```\r\n--preinstall: Run on auto-updates (e.g. before brew install). Skips some slower steps.\r\n```\r\n\r\ni looked at the what we were differently in dotnet runtime to find the --preinstall flag. \r\n","Url":"https://github.com/dotnet/coreclr/pull/28111","RelatedDescription":"Open PR \"Adding --preinstall flag to brew update\" (#28111)"},{"Id":"720823337","IsPullRequest":true,"CreatedAt":"2020-10-13T21:47:02","Actor":"dotnet-maestro-bot","Number":"28110","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28110","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)\" (#28110)"},{"Id":"714801101","IsPullRequest":true,"CreatedAt":"2020-10-13T21:12:33","Actor":"janvorli","Number":"28106","RawContent":null,"Title":"Port to 3.1 - Fix bad configure tests","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/42756\r\n\r\nThere was an extra -c in the CMAKE_REQUIRED_FLAGS set for testing\r\nHAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC that was breaking\r\nbuild of coreclr under homebrew. The option was somehow making\r\nthese checks behave on ARM Linux, even though it is not clear to\r\nme why, as it was just causing this option to be passed to the\r\ncompiler twice at different positions of the command line of\r\nthe cmake tests.\r\nThis change fixes it by using check_symbol_exists instead of\r\ncheck_c_source_compiles, since just removing the duplicite -c\r\nwas resulting in the check failing on ARM / ARM64 Linux due\r\nto a missing symbol from libunwind during linking.\r\n\r\n# Customer impact\r\nWe've got this issue reported by a customer who was trying to add `brew` recipe for packaging\r\n.NET Core 3.1 on OSX. \r\n\r\n# Regression?\r\nYes, introduced in 2.1\r\n\r\n# Testing\r\nI've manually verified that the HAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC (and UNWIND_CONTEXT_IS_UCONTEXT_T that was not broken, but it is in the block of code influenced \r\nby the change) are generated correctly for all the support target platforms / architectures.\r\n\r\n# Risk\r\nVery low, the change influences only a compile time detection of a presence of two libunwind \r\nfunctions. ","Url":"https://github.com/dotnet/coreclr/pull/28106","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix bad configure tests\" (#28106)"},{"Id":"719667414","IsPullRequest":true,"CreatedAt":"2020-10-13T21:12:01","Actor":"Anipik","Number":"28107","RawContent":null,"Title":"update branding to 3.1.10","State":"closed","Body":"adding no merge until we release 3.1.9","Url":"https://github.com/dotnet/coreclr/pull/28107","RelatedDescription":"Closed or merged PR \"update branding to 3.1.10\" (#28107)"},{"Id":"719677899","IsPullRequest":true,"CreatedAt":"2020-10-13T19:34:01","Actor":"Anipik","Number":"28108","RawContent":null,"Title":"update branding to 2.1.24","State":"closed","Body":"adding no merge until we service 2.1.24","Url":"https://github.com/dotnet/coreclr/pull/28108","RelatedDescription":"Closed or merged PR \"update branding to 2.1.24\" (#28108)"},{"Id":"720697081","IsPullRequest":true,"CreatedAt":"2020-10-13T19:08:31","Actor":"sdmaclea","Number":"28109","RawContent":null,"Title":"Merge release 3.1.9","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28109","RelatedDescription":"Closed or merged PR \"Merge release 3.1.9\" (#28109)"},{"Id":"709261083","IsPullRequest":true,"CreatedAt":"2020-09-26T03:01:17","Actor":"sdmaclea","Number":"28105","RawContent":null,"Title":"Backport 5.0 dac/dbi fixes to 3.1-crossdac branch","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28105","RelatedDescription":"Closed or merged PR \"Backport 5.0 dac/dbi fixes to 3.1-crossdac branch\" (#28105)"},{"Id":"709001291","IsPullRequest":true,"CreatedAt":"2020-09-25T14:50:55","Actor":"mlindstr","Number":"28104","RawContent":null,"Title":"Fix ilasm managed resource lookup on Linux.","State":"open","Body":"ILAsm did not properly find managed resources if they were not in the\r\nworking directory of ILAsm itself. While there was a provision for\r\nWindows-based systems using backslashes as directory separators, there\r\nwas no such provision for *nix-based systems using forward slashes.\r\n\r\nThis commit enables ILAsm to lookup both types of directory separators.","Url":"https://github.com/dotnet/coreclr/pull/28104","RelatedDescription":"Open PR \"Fix ilasm managed resource lookup on Linux.\" (#28104)"},{"Id":"707624818","IsPullRequest":true,"CreatedAt":"2020-09-23T19:30:43","Actor":"MattGal","Number":"28103","RawContent":null,"Title":"[DO NOT MERGE] fix a spelling error to validate new Helix API works as expected.","State":"open","Body":"Context: https://github.com/dotnet/core-eng/issues/10854","Url":"https://github.com/dotnet/coreclr/pull/28103","RelatedDescription":"Open PR \"[DO NOT MERGE] fix a spelling error to validate new Helix API works as expected.\" (#28103)"},{"Id":"703944273","IsPullRequest":true,"CreatedAt":"2020-09-22T21:42:42","Actor":"carlossanlop","Number":"28099","RawContent":null,"Title":"[release/3.1] [coreclr] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space","State":"closed","Body":"Backporting PR https://github.com/dotnet/runtime/pull/38742\r\n\r\nThe test goes into corefx: https://github.com/dotnet/corefx/pull/42988\r\n\r\nFixes: https://github.com/dotnet/runtime/issues/42360\r\n\r\n## Customer Impact\r\n\r\nA customer hit this issue in 3.1 when trying to deploy to AzureStorage: https://github.com/dotnet/runtime/issues/42360\r\n\r\nOn Unix, when the disk runs out of space before a `FileStream` is disposed and the buffer is flushed to disk, `Dispose` silently succeeds, causing files to be corrupted and preventing the user from taking corrective action.\r\n\r\nOn Windows, we throw at the expected moment, allowing the user to react appropriately.\r\n\r\nThe suggested fix is to save any error thrown when the `SafeFileHandle.ReleaseHandle` method is called when the handle is disposed, then check that saved error in `FileStream.Dispose`, and throw an exception if there was an error.\r\n\r\nThe customer who reported this issue stated they will not be able to migrate to 5.0 soon.\r\n\r\n## Testing\r\n\r\n* Manually verified using the provided manual test introduced in the corefx change.\r\n* The customer verified the behavior in 5.0 and confirmed that their issue is gone in that version, which justifies the backport (https://github.com/dotnet/runtime/issues/42360#issuecomment-693791617)\r\n* The customer that reported the issue for 3.1 verified this code fix with a private DLL sent to them, and verified the exception is now being thrown as expected (https://github.com/dotnet/runtime/issues/42360#issuecomment-694545520)\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\nThis is a straight port of code already proven in 5.0. The code is simply doing an additional check that will ensure an exception is thrown so the user can be notified of failure.","Url":"https://github.com/dotnet/coreclr/pull/28099","RelatedDescription":"Closed or merged PR \"[release/3.1] [coreclr] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space\" (#28099)"},{"Id":"705930655","IsPullRequest":true,"CreatedAt":"2020-09-21T21:37:35","Actor":"silvioguiso","Number":"28102","RawContent":null,"Title":"Adds Python var and defaults to python","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28102","RelatedDescription":"Closed or merged PR \"Adds Python var and defaults to python\" (#28102)"},{"Id":"705705637","IsPullRequest":true,"CreatedAt":"2020-09-21T15:42:24","Actor":"silvioguiso","Number":"28101","RawContent":null,"Title":"Fixes buildtools source","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28101","RelatedDescription":"Closed or merged PR \"Fixes buildtools source\" (#28101)"},{"Id":"704071478","IsPullRequest":true,"CreatedAt":"2020-09-19T18:56:01","Actor":"Anipik","Number":"28100","RawContent":null,"Title":"[donot review]Temp3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28100","RelatedDescription":"Closed or merged PR \"[donot review]Temp3\" (#28100)"},{"Id":"701485967","IsPullRequest":true,"CreatedAt":"2020-09-19T18:46:57","Actor":"dotnet-maestro[bot]","Number":"28096","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:afd7026d-5288-4298-7366-08d72a4ce44a)\r\n## From https://github.com/dotnet/corefx\r\n- **Subscription**: afd7026d-5288-4298-7366-08d72a4ce44a\r\n- **Build**: 20200910.1\r\n- **Date Produced**: 9/10/2020 6:26 PM\r\n- **Commit**: fe18c4973e11d3302aa446039705948e95e20fe8\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.CoreFx.NETCoreApp**: [from 4.7.0-preview3.19551.4 to 4.7.0-servicing.20460.1][1]\r\n\r\n[1]: https://github.com/dotnet/corefx/compare/0467659...fe18c49\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:afd7026d-5288-4298-7366-08d72a4ce44a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28096","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/corefx\" (#28096)"},{"Id":"684798726","IsPullRequest":true,"CreatedAt":"2020-09-18T22:03:14","Actor":"omajid","Number":"28087","RawContent":null,"Title":"[release/2.1] Add support for building CoreCLR using python3","State":"closed","Body":"This is a combined fix from 3 different PRs and one additional fix for 2.1:\r\n\r\n- https://github.com/dotnet/coreclr/pull/19043\r\n- https://github.com/dotnet/coreclr/pull/19356\r\n- https://github.com/dotnet/coreclr/pull/22145\r\n\r\nThe 2.1-specific fix is that python3 is is only used as a fallback, in case all other python program names dont work.\r\n\r\nAs for the original PRs, they perform these changes:\r\n\r\nbuild.sh and build.cmd contain logic to identify a working version of python to use. System.Private.CoreLib ignores that and directly invokes'python', which may not work, or even execute a different program. Fix that.\r\n\r\nThe windows build scripts try finding python in order of python3, python2 and then python. The unix build scripts dont. They just try python2 variants and then fail. This change makes brings them closer together by letting users build using only python3.\r\n\r\nUse the same logic in CMakeLists.txt that's used in build.sh/build.cmd to lookup python.","Url":"https://github.com/dotnet/coreclr/pull/28087","RelatedDescription":"Closed or merged PR \"[release/2.1] Add support for building CoreCLR using python3\" (#28087)"},{"Id":"703735711","IsPullRequest":true,"CreatedAt":"2020-09-17T16:27:43","Actor":"Anipik","Number":"28098","RawContent":null,"Title":"[Donnot review]Temp","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28098","RelatedDescription":"Closed or merged PR \"[Donnot review]Temp\" (#28098)"},{"Id":"701997949","IsPullRequest":true,"CreatedAt":"2020-09-16T14:38:45","Actor":"dotnet-maestro[bot]","Number":"28097","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b062bd78-6e50-43e6-cd59-08d72a4d12e0)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: b062bd78-6e50-43e6-cd59-08d72a4d12e0\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: [from 3.1.0-preview3.19553.2 to 3.1.9-servicing.20459.3][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/13f35c3...1a04dd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b062bd78-6e50-43e6-cd59-08d72a4d12e0)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28097","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#28097)"},{"Id":"699291936","IsPullRequest":true,"CreatedAt":"2020-09-11T17:46:18","Actor":"ViktorHofer","Number":"28095","RawContent":null,"Title":"Remove machine modification in helix publish","State":"closed","Body":"See https://github.com/dotnet/runtime/commit/abeadc24da4a2aa14f607ea95bb6540101d53e3a","Url":"https://github.com/dotnet/coreclr/pull/28095","RelatedDescription":"Closed or merged PR \"Remove machine modification in helix publish\" (#28095)"},{"Id":"698387607","IsPullRequest":true,"CreatedAt":"2020-09-10T19:16:48","Actor":"sdmaclea","Number":"28094","RawContent":null,"Title":"Release/3.1 crossdac","State":"closed","Body":"This was a simple merge without much issue...  FYI I will merge this and build the 3.1.8 crossdac","Url":"https://github.com/dotnet/coreclr/pull/28094","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac\" (#28094)"},{"Id":"697189129","IsPullRequest":true,"CreatedAt":"2020-09-10T17:10:16","Actor":"dotnet-maestro-bot","Number":"28093","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05604-03, servicing-29220-03, servicing-29220-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28093","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx to rc1-05604-03, servicing-29220-03, servicing-29220-01, respectively (release/2.1)\" (#28093)"},{"Id":"686818271","IsPullRequest":true,"CreatedAt":"2020-09-09T22:13:10","Actor":"ChadNedzlek","Number":"28088","RawContent":null,"Title":"Adding dotnet3.1/dotnet-eng packages sources","State":"closed","Body":"In order to remove dependencies on sleet from release branches,\nit is neccessary to preemptively add these sources so that mehanisms\nwill be able to restore these packages.\n\nSleet must be removed because of it's strong dependency on spcific\nnuget.packaging versions, which are not stable between 3.0 and 3.1\ncausing method load exceptions.\n","Url":"https://github.com/dotnet/coreclr/pull/28088","RelatedDescription":"Closed or merged PR \"Adding dotnet3.1/dotnet-eng packages sources\" (#28088)"},{"Id":"689508704","IsPullRequest":true,"CreatedAt":"2020-09-08T21:32:50","Actor":"davmason","Number":"28090","RawContent":null,"Title":"[release/3.1] Port fix for InlinedCallFrame corruption to 3.1","State":"closed","Body":"**Description**\r\n\r\nThere was an issue discovered in the 5.0 timeframe where we would sometimes pop InlinedCallFrames of still active methods during a catch block. It was fixed in https://github.com/dotnet/runtime/issues/2240, this ports the fix to 3.1.\r\n\r\n**Customer Impact**\r\n\r\nExternal customers reported a crash under the debugger in https://github.com/dotnet/runtime/issues/41125, which was root caused to the same issue as dotnet/runtime#2240. The customer has verified that the fix for https://github.com/dotnet/runtime/issues/2240 fixes the crash they are seeing.\r\n\r\n**Regression?**\r\n\r\nNo\r\n\r\n**Risk (see taxonomy)**\r\n\r\nLow\r\n\r\n**Link the PR to the original issue and/or the PR to master.**\r\n\r\nhttps://github.com/dotnet/runtime/issues/2240\r\n\r\n**Packaging impact? (if a libraries change)**\r\n\r\nNone","Url":"https://github.com/dotnet/coreclr/pull/28090","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix for InlinedCallFrame corruption to 3.1\" (#28090)"},{"Id":"689498487","IsPullRequest":true,"CreatedAt":"2020-09-08T21:32:29","Actor":"sywhang","Number":"28089","RawContent":null,"Title":"Fix a deadlock in EventCounter/EventSource (backport runtime #40259)","State":"closed","Body":"This is a backport of https://github.com/dotnet/runtime/pull/40259 to 3.1\r\n\r\n## Summary\r\nThis fixes a deadlock within EventCounter/EventListener usage. \r\n\r\n## Customer Impact\r\nAny user that defines a polling variant of counter (PollingCounter, IncrementingPollingCounter) with the callback function containing a path that invokes EventSource constructor), or if a user defines an EventListener subscribed to DiagnosticCounter with its callback containing a path that invokes EventSource constructor, the app can run into a deadlock. See https://github.com/dotnet/runtime/pull/40259 for a more detailed description on how it can happen.\r\n\r\nThis was initially reported from the Application Insights SDK team where they defined an EventListener callback that invokes EventSource constructor.\r\n\r\n## Regression\r\nThis code path was introduced between 2.2 to 3.0, but it is not a regression specific to 3.1.\r\n\r\n## Testing \r\nTested locally with a repro app: https://gist.github.com/sywhang/61277e9f40c17e05eaab85676e63e4fc\r\n\r\n## Risk\r\nRelatively low. The fix has been tested in all the counter tests we have in the runtime repo and diagnostics repo's CI - I've also stress-tested the fix. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28089","RelatedDescription":"Closed or merged PR \"Fix a deadlock in EventCounter/EventSource (backport runtime #40259)\" (#28089)"},{"Id":"696124558","IsPullRequest":true,"CreatedAt":"2020-09-08T20:47:51","Actor":"Anipik","Number":"28092","RawContent":null,"Title":"update branding to 2.1.23","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28092","RelatedDescription":"Closed or merged PR \"update branding to 2.1.23\" (#28092)"},{"Id":"696060641","IsPullRequest":true,"CreatedAt":"2020-09-08T19:36:27","Actor":"Anipik","Number":"28091","RawContent":null,"Title":"update branding to 3.1.9","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28091","RelatedDescription":"Closed or merged PR \"update branding to 3.1.9\" (#28091)"},{"Id":"682267213","IsPullRequest":true,"CreatedAt":"2020-08-24T16:58:45","Actor":"garath","Number":"28086","RawContent":null,"Title":"Use legacy MyGet feed","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/coreclr/pull/28086","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feed\" (#28086)"},{"Id":"682267155","IsPullRequest":true,"CreatedAt":"2020-08-24T16:58:40","Actor":"garath","Number":"28085","RawContent":null,"Title":"Use legacy MyGet feed","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/coreclr/pull/28085","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feed\" (#28085)"},{"Id":"682267108","IsPullRequest":true,"CreatedAt":"2020-08-24T16:58:34","Actor":"garath","Number":"28084","RawContent":null,"Title":"Use legacy MyGet feed","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/coreclr/pull/28084","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feed\" (#28084)"},{"Id":"680289459","IsPullRequest":true,"CreatedAt":"2020-08-17T14:43:27","Actor":"silvioguiso","Number":"28083","RawContent":null,"Title":"Reverts buildtools version","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28083","RelatedDescription":"Closed or merged PR \"Reverts buildtools version\" (#28083)"},{"Id":"680272459","IsPullRequest":true,"CreatedAt":"2020-08-17T14:21:54","Actor":"silvioguiso","Number":"28082","RawContent":null,"Title":"Reverts FeedTasksPackageVersion","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28082","RelatedDescription":"Closed or merged PR \"Reverts FeedTasksPackageVersion\" (#28082)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"722849768","IsPullRequest":true,"CreatedAt":"2020-10-16T04:19:02","Actor":"dotnet-maestro[bot]","Number":"13615","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.14\r\n- **Date Produced**: 10/16/2020 3:29 AM\r\n- **Commit**: 6a4b093615c3905cd086d3e9e78bf37f7e2025f3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.11 to 3.1.10-servicing.20515.14][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/6694eca...6a4b093\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13615","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13615)"},{"Id":"722849763","IsPullRequest":true,"CreatedAt":"2020-10-16T03:48:34","Actor":"dotnet-maestro[bot]","Number":"13614","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201015.14\r\n- **Date Produced**: 10/16/2020 3:29 AM\r\n- **Commit**: 6a4b093615c3905cd086d3e9e78bf37f7e2025f3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.11 to 3.1.10-servicing.20515.14][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/6694eca...6a4b093\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13614","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13614)"},{"Id":"722801247","IsPullRequest":true,"CreatedAt":"2020-10-16T02:28:08","Actor":"dotnet-maestro[bot]","Number":"13613","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/16/2020 1:21 AM\r\n- **Commit**: 75db753694a354ffa508854ca3c9e2e49911c43e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.6 to 3.1.10-servicing.20515.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/6de1bb0...75db753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13613","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13613)"},{"Id":"722192602","IsPullRequest":true,"CreatedAt":"2020-10-16T02:07:54","Actor":"dotnet-maestro[bot]","Number":"13608","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:04 AM\r\n- **Commit**: 6694ecaf606189c9d28ba4bf95db948b675ada95\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20513.12 to 3.1.10-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/506a703...6694eca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13608","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13608)"},{"Id":"722690832","IsPullRequest":true,"CreatedAt":"2020-10-16T02:07:07","Actor":"dotnet-maestro[bot]","Number":"13611","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:04 AM\r\n- **Commit**: 6694ecaf606189c9d28ba4bf95db948b675ada95\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.3 to 3.1.10-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/84e3ff5...6694eca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13611","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13611)"},{"Id":"722786033","IsPullRequest":true,"CreatedAt":"2020-10-16T01:09:04","Actor":"dotnet-maestro[bot]","Number":"13612","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20201015.11\r\n- **Date Produced**: 10/16/2020 1:00 AM\r\n- **Commit**: 4f77b27cff967fd9abde1f94faae7f963c43170d\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: [from 3.1.403-servicing.20465.25 to 3.1.404-servicing.20515.11][1]\r\n\r\n[1]: https://github.com/dotnet/sdk/compare/7c8ec1e...4f77b27\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13612","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13612)"},{"Id":"722313635","IsPullRequest":true,"CreatedAt":"2020-10-15T13:39:53","Actor":"dotnet-maestro[bot]","Number":"13610","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.3\r\n- **Date Produced**: 10/15/2020 12:24 PM\r\n- **Commit**: 84e3ff5b38841e88765cde2fe6f6267f1b3cc8cd\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20515.1 to 3.1.10-servicing.20515.3][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/0bc89f5...84e3ff5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13610","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13610)"},{"Id":"722225925","IsPullRequest":true,"CreatedAt":"2020-10-15T10:56:27","Actor":"dotnet-maestro-bot","Number":"13609","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* dotnet-bot\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13609","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13609)"},{"Id":"722192513","IsPullRequest":true,"CreatedAt":"2020-10-15T10:53:55","Actor":"dotnet-maestro[bot]","Number":"13607","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201015.1\r\n- **Date Produced**: 10/15/2020 9:39 AM\r\n- **Commit**: 0bc89f591e9415df3717807dacaab5f573728947\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20513.12 to 3.1.10-servicing.20515.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/506a703...0bc89f5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13607","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13607)"},{"Id":"721465964","IsPullRequest":true,"CreatedAt":"2020-10-15T08:06:21","Actor":"dotnet-maestro-bot","Number":"13606","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* dotnet-bot\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13606","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13606)"},{"Id":"721435712","IsPullRequest":true,"CreatedAt":"2020-10-14T18:06:39","Actor":"dotnet-maestro[bot]","Number":"13604","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0b251068-fbf4-4fe5-8896-08d8446df6cf)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 0b251068-fbf4-4fe5-8896-08d8446df6cf\r\n- **Build**: 20201014.2\r\n- **Date Produced**: 10/14/2020 12:43 PM\r\n- **Commit**: 608ee2d9c93b432e9741b0f744cdc710a1e9fae9\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: [from 3.1.9-servicing.20459.2 to 3.1.10-servicing.20514.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/7ea6e50...608ee2d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:0b251068-fbf4-4fe5-8896-08d8446df6cf)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13604","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/templating\" (#13604)"},{"Id":"720814079","IsPullRequest":true,"CreatedAt":"2020-10-14T17:34:07","Actor":"dotnet-maestro-bot","Number":"13592","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13592","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13592)"},{"Id":"720813894","IsPullRequest":true,"CreatedAt":"2020-10-14T17:33:58","Actor":"dotnet-maestro-bot","Number":"13591","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13591","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13591)"},{"Id":"720813538","IsPullRequest":true,"CreatedAt":"2020-10-14T17:33:29","Actor":"dotnet-maestro-bot","Number":"13590","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13590","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13590)"},{"Id":"721435721","IsPullRequest":true,"CreatedAt":"2020-10-14T13:32:56","Actor":"dotnet-maestro[bot]","Number":"13605","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20201014.2\r\n- **Date Produced**: 10/14/2020 12:43 PM\r\n- **Commit**: 608ee2d9c93b432e9741b0f744cdc710a1e9fae9\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: [from 3.1.9-servicing.20459.2 to 3.1.10-servicing.20514.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/7ea6e50...608ee2d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13605","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13605)"},{"Id":"721025716","IsPullRequest":true,"CreatedAt":"2020-10-14T08:36:34","Actor":"dotnet-maestro[bot]","Number":"13597","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201013.12\r\n- **Date Produced**: 10/14/2020 2:44 AM\r\n- **Commit**: 506a703d5d87af4159fec93a8b84a9ec0adedb6b\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.9-servicing.20473.9 to 3.1.10-servicing.20513.12][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/d12868d...506a703\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13597","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13597)"},{"Id":"720933980","IsPullRequest":true,"CreatedAt":"2020-10-14T07:32:00","Actor":"dotnet-maestro-bot","Number":"13595","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* ChadNedzlek\n* marcpopMSFT\n* joeloff\n* dotnet-bot\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13595","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13595)"},{"Id":"721149559","IsPullRequest":true,"CreatedAt":"2020-10-14T06:56:39","Actor":"dotnet-maestro[bot]","Number":"13602","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201013.6\r\n- **Date Produced**: 10/14/2020 4:53 AM\r\n- **Commit**: 6de1bb00a45e8aa6e65a6645a9754a73fe0efda4\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.5 to 3.1.10-servicing.20513.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/a8c348e...6de1bb0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13602","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13602)"},{"Id":"721149829","IsPullRequest":true,"CreatedAt":"2020-10-14T05:31:10","Actor":"dotnet-maestro[bot]","Number":"13603","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/16/2020 1:21 AM\r\n- **Commit**: 75db753694a354ffa508854ca3c9e2e49911c43e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.5 to 3.1.10-servicing.20515.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/a8c348e...75db753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13603","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13603)"},{"Id":"721097019","IsPullRequest":true,"CreatedAt":"2020-10-14T03:48:48","Actor":"dotnet-maestro[bot]","Number":"13601","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201013.12\r\n- **Date Produced**: 10/14/2020 2:44 AM\r\n- **Commit**: 506a703d5d87af4159fec93a8b84a9ec0adedb6b\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20513.9 to 3.1.10-servicing.20513.12][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/b472944...506a703\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13601","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13601)"},{"Id":"721092164","IsPullRequest":true,"CreatedAt":"2020-10-14T03:24:52","Actor":"dotnet-maestro[bot]","Number":"13599","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20201013.5\r\n- **Date Produced**: 10/14/2020 1:56 AM\r\n- **Commit**: a8c348ef47ce56c71d29b29ff726c6ba36219189\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.3 to 3.1.10-servicing.20513.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/ec83f90...a8c348e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13599","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13599)"},{"Id":"721092192","IsPullRequest":true,"CreatedAt":"2020-10-14T03:19:51","Actor":"dotnet-maestro[bot]","Number":"13600","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201013.5\r\n- **Date Produced**: 10/14/2020 1:56 AM\r\n- **Commit**: a8c348ef47ce56c71d29b29ff726c6ba36219189\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.3 to 3.1.10-servicing.20513.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/ec83f90...a8c348e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13600","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13600)"},{"Id":"721025803","IsPullRequest":true,"CreatedAt":"2020-10-14T00:55:48","Actor":"dotnet-maestro[bot]","Number":"13598","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201013.9\r\n- **Date Produced**: 10/13/2020 11:47 PM\r\n- **Commit**: b472944a9af25a237233b18047e54b1f9bac53e3\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.9-servicing.20473.9 to 3.1.10-servicing.20513.9][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/d12868d...b472944\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13598","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13598)"},{"Id":"720866885","IsPullRequest":true,"CreatedAt":"2020-10-14T00:49:56","Actor":"dotnet-maestro[bot]","Number":"13593","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20201013.3\r\n- **Date Produced**: 10/13/2020 11:32 PM\r\n- **Commit**: ec83f90a139e8975b9b3d52ea1019014485aac38\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.9-servicing.20473.1 to 3.1.10-servicing.20513.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.9 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.9 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/774fc3d...ec83f90\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13593","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13593)"},{"Id":"721018455","IsPullRequest":true,"CreatedAt":"2020-10-14T00:37:40","Actor":"dotnet-maestro[bot]","Number":"13596","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201013.3\r\n- **Date Produced**: 10/13/2020 11:32 PM\r\n- **Commit**: ec83f90a139e8975b9b3d52ea1019014485aac38\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20513.1 to 3.1.10-servicing.20513.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/b3e18ab...ec83f90\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13596","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13596)"},{"Id":"719696108","IsPullRequest":true,"CreatedAt":"2020-10-14T00:14:31","Actor":"marcpopMSFT","Number":"13588","RawContent":null,"Title":"Update branding for 110","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13588","RelatedDescription":"Closed or merged PR \"Update branding for 110\" (#13588)"},{"Id":"719696209","IsPullRequest":true,"CreatedAt":"2020-10-13T23:40:15","Actor":"marcpopMSFT","Number":"13589","RawContent":null,"Title":"Update branding for 404","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13589","RelatedDescription":"Closed or merged PR \"Update branding for 404\" (#13589)"},{"Id":"720866953","IsPullRequest":true,"CreatedAt":"2020-10-13T22:33:04","Actor":"dotnet-maestro[bot]","Number":"13594","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201013.1\r\n- **Date Produced**: 10/13/2020 8:57 PM\r\n- **Commit**: b3e18abfa472b7af8fb1ac179625cfc583204206\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.9-servicing.20473.1 to 3.1.10-servicing.20513.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.9 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.9 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/774fc3d...b3e18ab\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13594","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13594)"},{"Id":"719682626","IsPullRequest":true,"CreatedAt":"2020-10-12T21:58:48","Actor":"marcpopMSFT","Number":"13586","RawContent":null,"Title":"Update branding for 110","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13586","RelatedDescription":"Closed or merged PR \"Update branding for 110\" (#13586)"},{"Id":"719682855","IsPullRequest":true,"CreatedAt":"2020-10-12T21:47:36","Actor":"marcpopMSFT","Number":"13587","RawContent":null,"Title":"Update branding for 404","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13587","RelatedDescription":"Closed or merged PR \"Update branding for 404\" (#13587)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-15T08:52:30","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"open","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Open issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2020-09-20T19:05:41","Actor":"Korporal","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"open","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Open issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"bvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2020-09-02T08:39:21","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"open","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Open issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-08-23T14:50:16","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200819.21\r\n- **Date Produced**: 8/19/2020 11:31 PM\r\n- **Commit**: 56a95cc477558c1ccdf16d7abe962849ea970ba4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"},{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"wrkettlitz","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"wrkettlitz","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"722653114","IsPullRequest":true,"CreatedAt":"2020-10-15T21:22:30","Actor":"tarekgh","Number":"43000","RawContent":null,"Title":"[Test Only] Port failing test fix from runtime repo to 3.1 Release","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/43372","Url":"https://github.com/dotnet/corefx/pull/43000","RelatedDescription":"Closed or merged PR \"[Test Only] Port failing test fix from runtime repo to 3.1 Release\" (#43000)"},{"Id":"720798949","IsPullRequest":true,"CreatedAt":"2020-10-13T21:48:14","Actor":"Anipik","Number":"42998","RawContent":null,"Title":"Disable SetDateTimeMax test on Linux","State":"closed","Body":"The test failed on 3.1 branch https://github.com/dotnet/corefx/pull/42996\r\nRelated issue https://github.com/dotnet/runtime/issues/43166","Url":"https://github.com/dotnet/corefx/pull/42998","RelatedDescription":"Closed or merged PR \"Disable SetDateTimeMax test on Linux\" (#42998)"},{"Id":"720820938","IsPullRequest":true,"CreatedAt":"2020-10-13T21:45:04","Actor":"dotnet-maestro-bot","Number":"42999","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42999","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)\" (#42999)"},{"Id":"707735407","IsPullRequest":true,"CreatedAt":"2020-10-13T21:44:46","Actor":"ericstj","Number":"42994","RawContent":null,"Title":"[release/3.1] Ensure Image.Save can handle non readable / seekable Streams","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/36805 to release/3.1.\r\n\r\nOriginal issue: https://github.com/dotnet/runtime/issues/33522\r\n\r\n## Summary\r\n\r\nWhen calling `Image.Save` and passing in a stream to write the image to we started throwing `NotSupportedException` if the stream could not be read.  This happened accidentally as part of a performance fix in 3.x.  That fix tried to ensure a seekable stream and would copy the backing stream contents when doing so.  This was unnecessary work (and an unnecessary copy) since saving the image only requires writing and not reading nor seeking.\r\n\r\n## Customer Impact\r\n\r\nCustomer encounters `NotSupportedException` when trying to save an image when they did not before.  This is blocking service update to 3.1 for the customer as well as preventing their upstack consumers of this service from updating.\r\nWorkaround would involve saving to a `MemoryStream` then copying to the final stream, which is undesirable.  This significantly increases CPU and memory usage to a in a commonly used component low in the stack.\r\n\r\n## Regression?\r\n\r\nYes, from 2.1: https://github.com/dotnet/corefx/commit/dee434428ee392302ff2050bbee304c9fce68b2f\r\n\r\n## Testing\r\n\r\nUnit tests added to cover this scenario.  Partner has been using 5.0 fix.\r\n\r\n## Risk\r\n\r\nLow.  This is undoing a regression and fix has been in place in 5.0 for months. ","Url":"https://github.com/dotnet/corefx/pull/42994","RelatedDescription":"Closed or merged PR \"[release/3.1] Ensure Image.Save can handle non readable / seekable Streams\" (#42994)"},{"Id":"719663177","IsPullRequest":true,"CreatedAt":"2020-10-13T20:25:18","Actor":"Anipik","Number":"42996","RawContent":null,"Title":"update branding to 3.1.10","State":"closed","Body":"Adding a no merge label until we ship the 3.1.9","Url":"https://github.com/dotnet/corefx/pull/42996","RelatedDescription":"Closed or merged PR \"update branding to 3.1.10\" (#42996)"},{"Id":"719687373","IsPullRequest":true,"CreatedAt":"2020-10-13T19:34:06","Actor":"Anipik","Number":"42997","RawContent":null,"Title":"update branding to 2.1.24","State":"closed","Body":"We shipped the same assembly version for 4.5.3 & 4.5.2, we can only have one in the  json file, i decided to keep 4.5.3","Url":"https://github.com/dotnet/corefx/pull/42997","RelatedDescription":"Closed or merged PR \"update branding to 2.1.24\" (#42997)"},{"Id":"707419747","IsPullRequest":true,"CreatedAt":"2020-10-08T20:39:16","Actor":"CarnaViire","Number":"42993","RawContent":null,"Title":"[release/2.1] Backport missing SslStream API to 2.1","State":"closed","Body":"Add missing ReadAsync and WriteAsync API to SslStream. This is a backport of #29658 to 2.1 (only SslStream part)\r\n\r\nFix dotnet/runtime#38185\r\n\r\n## Summary\r\nFor non-sealed types, not specifying an override in a ref can lead to a derived type skipping the method in the hierarchy when calling to base.Method(). This was fixed for 3.1 in #29658 but not ported to 2.1. Implementation of ReadAsync and WriteAsync exists in SslStream, only explicit API is missing.\r\n\r\n## Customer Impact\r\nSqlClient team reported Stack Overflow exception when trying to use a class derived from SslStream in a mix of dotnetcore 2.1 and 3.x dotnet/runtime#38185 The team is working on the SqlClient driver and this is a potential issue for the end-users.\r\n\r\n## Regression?\r\nNo\r\n\r\n## Testing\r\nVerified by SqlClient team, see comment below.\r\n\r\n## Risk\r\nLow. Only explicitly specifying the override in the ref, the implementation already exists.","Url":"https://github.com/dotnet/corefx/pull/42993","RelatedDescription":"Closed or merged PR \"[release/2.1] Backport missing SslStream API to 2.1\" (#42993)"},{"Id":"712097410","IsPullRequest":true,"CreatedAt":"2020-09-30T21:24:13","Actor":"CarnaViire","Number":"42995","RawContent":null,"Title":"[release/2.1] Update macOS build instructions","State":"closed","Body":"Updated instructions on how to build 2.1 on macOS.\r\n\r\n## Summary\r\nI've spent quite a lot of time trying to build 2.1 on various platforms and every one of them produced different build errors. I was finally able to build it on macOS by installing an older version on Xcode. I would like this knowledge to be available to any dev who would need to build 2.1 while it is still supported.\r\n\r\n## Customer Impact\r\nn/a\r\n\r\n## Regression?\r\nn/a\r\n\r\n## Testing\r\nn/a\r\n\r\n## Risk\r\nLow. This is docs-only change.\r\n","Url":"https://github.com/dotnet/corefx/pull/42995","RelatedDescription":"Closed or merged PR \"[release/2.1] Update macOS build instructions\" (#42995)"},{"Id":"706763461","IsPullRequest":true,"CreatedAt":"2020-09-23T02:30:05","Actor":"dotnet-maestro[bot]","Number":"42992","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200922.1\r\n- **Date Produced**: 9/22/2020 11:25 PM\r\n- **Commit**: 8775efa17eaf06dc8b6ea9dd3917871fe2d7ff8e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/3fbe134...8775efa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42992","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42992)"},{"Id":"703944212","IsPullRequest":true,"CreatedAt":"2020-09-22T21:43:51","Actor":"carlossanlop","Number":"42988","RawContent":null,"Title":"[release/3.1] [corefx] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space","State":"closed","Body":"Backporting PR https://github.com/dotnet/runtime/pull/38742\r\n\r\nThe main fix goes into coreclr: https://github.com/dotnet/coreclr/pull/28099\r\n\r\nFixes: https://github.com/dotnet/runtime/issues/42360\r\n\r\nThis fix only introduced a **manual** test, which won't be executed with the CI, and only runs if the user manually sets an environment variable. \r\n\r\n## Customer Impact\r\n\r\nA customer hit this issue in 3.1 when trying to deploy to AzureStorage: https://github.com/dotnet/runtime/issues/42360\r\n\r\nOn Unix, when the disk runs out of space before a `FileStream` is disposed and the buffer is flushed to disk, `Dispose` silently succeeds, causing files to be corrupted and preventing the user from taking corrective action.\r\n\r\nOn Windows, we throw at the expected moment, allowing the user to react appropriately.\r\n\r\nThe suggested fix is to save any error thrown when the `SafeFileHandle.ReleaseHandle` method is called when the handle is disposed, then check that saved error in `FileStream.Dispose`, and throw an exception if there was an error.\r\n\r\n## Testing\r\n\r\nManually verified using the provided manual test introduced in this change.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\nThe code is doing an additional check that will ensure an exception is thrown so the user can be notified of failure. The modified code was identical to the code in 5.0.\r\n\r\nThe customer that reported the issue for 3.1 verified this code fix with a private DLL sent to them, and verified the exception is now being thrown as expected:\r\n\r\nhttps://github.com/dotnet/runtime/issues/42360#issuecomment-694545520\r\n\r\nThe customer also verified the behavior in 5.0 and confirmed that their issue is gone in that version, which justifies the backport: https://github.com/dotnet/runtime/issues/42360#issuecomment-693791617\r\n","Url":"https://github.com/dotnet/corefx/pull/42988","RelatedDescription":"Closed or merged PR \"[release/3.1] [corefx] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space\" (#42988)"},{"Id":"704997021","IsPullRequest":true,"CreatedAt":"2020-09-22T16:45:20","Actor":"dotnet-maestro[bot]","Number":"42990","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200919.1\r\n- **Date Produced**: 9/19/2020 8:23 PM\r\n- **Commit**: 3fbe13469a10dca70e50f7cb8507e348b9095563\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/dd56afa...3fbe134\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42990","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42990)"},{"Id":"705711038","IsPullRequest":true,"CreatedAt":"2020-09-21T15:41:37","Actor":"silvioguiso","Number":"42991","RawContent":null,"Title":"Fixes build-tools","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42991","RelatedDescription":"Closed or merged PR \"Fixes build-tools\" (#42991)"},{"Id":"704005336","IsPullRequest":true,"CreatedAt":"2020-09-18T23:01:25","Actor":"carlossanlop","Number":"42989","RawContent":null,"Title":"[release/3.1] Fix Windows AccessViolationException in FileSystemWatcher when monitoring network share for changes","State":"closed","Body":"## Customer impact\r\n\r\nThis issue was reported for 3.1 twice:\r\n- https://github.com/dotnet/runtime/issues/40412 - w3wp.exe crash in FileSystemWatcher after 2.2 -> 3.1 migration (c0000005 Access Violation)\r\n- https://github.com/dotnet/runtime/issues/42108 - FileSystemWatcher crash UNALIGNED_STACK_POINTER\r\n\r\nWhen monitoring a network share with `FileSystemWatcher`, if there are network issues that could cause the data to arrive malformed, then after casting the byte array to a `FILE_NOTIFY_INFORMATION`, attempts to access the struct fields can throw an AV.\r\n\r\nThe 6.0 (master) PR: https://github.com/dotnet/runtime/pull/42419\r\nThe 5.0 backport PR: https://github.com/dotnet/runtime/pull/42420\r\n\r\n## Testing\r\n\r\nThe issue was also reported internally by one of the customers. Our CSS partner was able to reproduce it locally.\r\n\r\nI provided him a private binary of System.IO.FileSystem.Watcher.dll with the changes in this fix, and he confirmed the AV no longer happens.\r\n\r\n## Risk\r\n\r\nLow. We are introducing boundary checks after casting data data coming from a P/Invoke, with the explicit purpose of removing an unexpected AV exception.","Url":"https://github.com/dotnet/corefx/pull/42989","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Windows AccessViolationException in FileSystemWatcher when monitoring network share for changes\" (#42989)"},{"Id":"696182658","IsPullRequest":true,"CreatedAt":"2020-09-18T21:37:36","Actor":"BrennanConroy","Number":"42981","RawContent":null,"Title":"[Backport][Pipelines] Noop Writes when Reader completed","State":"closed","Body":"Backport of https://github.com/dotnet/runtime/pull/41071\r\n\r\n## Customer Impact\r\nCustomers shouldn't be able to see any differences as we want to keep existing code working without modifications.\r\nThis is fixing a Pipelines usage pattern that could result in large memory pressure or OOMs in the worst case.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nYes? Tests were written and existing tests required no changes.\r\n\r\n## Risk\r\nLow, change was purposefully tailored to not break existing code","Url":"https://github.com/dotnet/corefx/pull/42981","RelatedDescription":"Closed or merged PR \"[Backport][Pipelines] Noop Writes when Reader completed\" (#42981)"},{"Id":"696214450","IsPullRequest":true,"CreatedAt":"2020-09-18T21:37:06","Actor":"BrennanConroy","Number":"42982","RawContent":null,"Title":"[Backport][Pipelines] Noop Writes when Reader completed","State":"closed","Body":"Backport of https://github.com/dotnet/runtime/pull/41071\r\n\r\n## Customer Impact\r\nCustomers shouldn't be able to see any differences as we want to keep existing code working without modifications.\r\nThis is fixing a Pipelines usage pattern that could result in large memory pressure or OOMs in the worst case.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nYes? Tests were written and existing tests required no changes.\r\n\r\n## Risk\r\nLow, change was purposefully tailored to not break existing code","Url":"https://github.com/dotnet/corefx/pull/42982","RelatedDescription":"Closed or merged PR \"[Backport][Pipelines] Noop Writes when Reader completed\" (#42982)"},{"Id":"697305891","IsPullRequest":true,"CreatedAt":"2020-09-18T18:56:03","Actor":"wfurt","Number":"42985","RawContent":null,"Title":"[release/3.1] release `existingTrust` to avoid native memory leak in ssl handshake on macOS","State":"closed","Body":"This is port of https://github.com/dotnet/runtime/pull/41657 to fix https://github.com/dotnet/runtime/issues/34080\r\n\r\n## Summary\r\nThere is memory leak inside of AppleCryptoNative_SslIsHostnameMatch() function which is used to verify peer's name in every client TLS handshake on macOS. There is no workaround and if running long enough, .NET will consume all available memory and crash. The `SecTrustRef` is internal structure and holds additional objects - like URL of OCSP or CRL responder so leaked memory is bigger than small. \r\n\r\n## Customer  Impact \r\nWe have worked with a major customer who has been hitting this leak in an app that they intend to widely deploy within their organization (10K”s of deployments). They are encountering this leak and it is blocking their deployment. They have attempted to work around it by restarting the app when their memory consumption reaches a threshold but this workaround is not sustainable for them at scale so they are seeking a fix backported to 3.1 LTS.\r\n\r\n## Regression?\r\nno.\r\n\r\n## Testing\r\nthe fix was verified with Apple's development tools e.g. `leaks` utility\r\n\r\n## Risk\r\nlow. This releases structure we obtained via `SSLCopyPeerTrust` and it does not change any flow.\r\n\r\ncc: @danmosemsft \r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42985","RelatedDescription":"Closed or merged PR \"[release/3.1] release `existingTrust` to avoid native memory leak in ssl handshake on macOS\" (#42985)"},{"Id":"702899998","IsPullRequest":true,"CreatedAt":"2020-09-17T15:21:31","Actor":"dotnet-maestro[bot]","Number":"42987","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200916.1\r\n- **Date Produced**: 9/16/2020 3:42 PM\r\n- **Commit**: dd56afab046dc89d4c2d04512e9345cef21a9439\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/2a4152d...dd56afa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42987","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42987)"},{"Id":"695331065","IsPullRequest":true,"CreatedAt":"2020-09-17T15:12:44","Actor":"antonfirsov","Number":"42978","RawContent":null,"Title":"SocketsHttpHandler: Add a switch to allow non-ascii headers","State":"closed","Body":".NET Core's `SocketHttpHandler` does not allow sending non-ASCII characters in HTTP headers according to RFC, however in reality services accept/require other characters/encodings.\r\n\r\nIn dotnet/runtime#38711 we are introducing a generic solution for .NET 5. This is a 3.1-only workaround exposing two switches to relax header validation globally before the first usage of `HttpClient`, enabling advanced users to send Latin-1 encoded headers:\r\n- AppContext switch: `System.Net.Http.SocketsHttpHandler.AllowLatin1Headers`\r\n- Environment variable: `DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_ALLOWLATIN1HEADERS`\r\n\r\n###  Customer Impact\r\n\r\nUnblock migration to .NET Core 3.1 for customers who need to send Latin-1 headers.\r\n\r\n### Testing\r\n\r\nThe PR adds tests (and minimal necessary test infrastructure changes) based on the ones in dotnet/runtime#39468 and dotnet/runtime#39169 to make sure these scenarios do not regress.\r\n\r\nValidation: we sent private builds to the partner asking for this feature, and they confirmed that the change fixes their issue.\r\n\r\n###  Risk\r\n\r\nLow. The workaround is hidden behind a switch, our default behavior remains unchanged.\r\n","Url":"https://github.com/dotnet/corefx/pull/42978","RelatedDescription":"Closed or merged PR \"SocketsHttpHandler: Add a switch to allow non-ascii headers\" (#42978)"},{"Id":"697293502","IsPullRequest":true,"CreatedAt":"2020-09-15T20:07:19","Actor":"dotnet-maestro[bot]","Number":"42984","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200911.1\r\n- **Date Produced**: 9/11/2020 7:26 PM\r\n- **Commit**: 2a4152d784f25ee929b7c0e80c068627887fabcb\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/c2e8c9f...2a4152d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42984","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42984)"},{"Id":"701998399","IsPullRequest":true,"CreatedAt":"2020-09-15T18:16:38","Actor":"dotnet-maestro[bot]","Number":"42986","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:98d11e43-fc37-4a09-cd5a-08d72a4d12e0)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 98d11e43-fc37-4a09-cd5a-08d72a4d12e0\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: [from 3.1.0-preview3.19553.2 to 3.1.9-servicing.20459.3][1]\r\n  - **Microsoft.NETCore.DotNetHost**: [from 3.1.0-preview3.19553.2 to 3.1.9][1]\r\n  - **Microsoft.NETCore.DotNetHostPolicy**: [from 3.1.0-preview3.19553.2 to 3.1.9][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/13f35c3...1a04dd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:98d11e43-fc37-4a09-cd5a-08d72a4d12e0)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42986","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#42986)"},{"Id":"683115182","IsPullRequest":true,"CreatedAt":"2020-09-10T17:04:42","Actor":"omajid","Number":"42975","RawContent":null,"Title":"[release/3.1] Add Fedora 34 RID","State":"closed","Body":"Fedora 34 is currently in development. Building .NET Core 3.1 there (via source-build) fails because the runtime id `fedora.34` is unknown:\r\n\r\n    error NETSDK1083: The specified RuntimeIdentifier 'fedora.34-x64' is not recognized.\r\n\r\nFull log is here: https://kojipkgs.fedoraproject.org//work/tasks/7435/49647435/build.log\r\n\r\nThis is a partial backport of https://github.com/dotnet/runtime/pull/34088\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42975","RelatedDescription":"Closed or merged PR \"[release/3.1] Add Fedora 34 RID\" (#42975)"},{"Id":"693728180","IsPullRequest":true,"CreatedAt":"2020-09-09T23:26:23","Actor":"dotnet-maestro-bot","Number":"42977","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29220-03, servicing-29220-01, servicing-29221-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42977","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29220-03, servicing-29220-01, servicing-29221-01, respectively (release/2.1)\" (#42977)"},{"Id":"686817843","IsPullRequest":true,"CreatedAt":"2020-09-09T22:13:02","Actor":"ChadNedzlek","Number":"42976","RawContent":null,"Title":"Adding dotnet3.1/dotnet-eng packages sources","State":"closed","Body":"In order to remove dependencies on sleet from release branches,\nit is neccessary to preemptively add these sources so that mehanisms\nwill be able to restore these packages.\n\nSleet must be removed because of it's strong dependency on spcific\nnuget.packaging versions, which are not stable between 3.0 and 3.1\ncausing method load exceptions.\n","Url":"https://github.com/dotnet/corefx/pull/42976","RelatedDescription":"Closed or merged PR \"Adding dotnet3.1/dotnet-eng packages sources\" (#42976)"},{"Id":"696434578","IsPullRequest":true,"CreatedAt":"2020-09-09T06:33:03","Actor":"dotnet-maestro[bot]","Number":"42983","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200908.2\r\n- **Date Produced**: 9/9/2020 4:52 AM\r\n- **Commit**: c2e8c9f71737d87a95610851587e2a1eaf18c91c\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42983","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42983)"},{"Id":"696059682","IsPullRequest":true,"CreatedAt":"2020-09-09T01:26:37","Actor":"Anipik","Number":"42979","RawContent":null,"Title":"update branding to 3.1.9","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42979","RelatedDescription":"Closed or merged PR \"update branding to 3.1.9\" (#42979)"},{"Id":"696125476","IsPullRequest":true,"CreatedAt":"2020-09-08T20:47:58","Actor":"Anipik","Number":"42980","RawContent":null,"Title":"update branding to 2.1.23","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42980","RelatedDescription":"Closed or merged PR \"update branding to 2.1.23\" (#42980)"},{"Id":"682266988","IsPullRequest":true,"CreatedAt":"2020-08-24T16:58:28","Actor":"garath","Number":"42972","RawContent":null,"Title":"Use legacy MyGet feeds","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/corefx/pull/42972","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feeds\" (#42972)"},{"Id":"682267053","IsPullRequest":true,"CreatedAt":"2020-08-24T16:58:20","Actor":"garath","Number":"42973","RawContent":null,"Title":"Use legacy MyGet feed","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/corefx/pull/42973","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feed\" (#42973)"},{"Id":"682267078","IsPullRequest":true,"CreatedAt":"2020-08-24T16:57:51","Actor":"garath","Number":"42974","RawContent":null,"Title":"Use legacy MyGet feed.","State":"closed","Body":"Switch away from dotnet.myget.org feeds\r\n\r\n@hoyosjs @tommcdon FYI","Url":"https://github.com/dotnet/corefx/pull/42974","RelatedDescription":"Closed or merged PR \"Use legacy MyGet feed.\" (#42974)"},{"Id":"682175277","IsPullRequest":true,"CreatedAt":"2020-08-20T00:06:06","Actor":"wfurt","Number":"42971","RawContent":null,"Title":"release/3.1: add also osx 10.16 fo compact reasons","State":"closed","Body":"Discussed off-line. This is to mitigate competition when we report macOS 11.0 as 10.16.","Url":"https://github.com/dotnet/corefx/pull/42971","RelatedDescription":"Closed or merged PR \"release/3.1: add also osx 10.16 fo compact reasons\" (#42971)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"722763356","IsPullRequest":true,"CreatedAt":"2020-10-16T05:07:14","Actor":"dotnet-bot","Number":"48652","RawContent":null,"Title":"Merge release/dev16.8-vs-deps to release/dev16.9-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.8-vs-deps into release/dev16.9-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.8-vs-deps\n- https://github.com/dotnet/roslyn/find/release/dev16.9-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-vs-deps-to-release/dev16.9-vs-deps\ngit reset --hard upstream/release/dev16.9-vs-deps\ngit merge upstream/release/dev16.8-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-vs-deps-to-release/dev16.9-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48652","RelatedDescription":"Closed or merged PR \"Merge release/dev16.8-vs-deps to release/dev16.9-vs-deps\" (#48652)"},{"Id":"722897272","IsPullRequest":true,"CreatedAt":"2020-10-16T04:36:56","Actor":"sharwell","Number":"48662","RawContent":null,"Title":"Move VisualStudioTaskSchedulerProvider to the EditorFeatures layer","State":"open","Body":"Prior to this change, tests in the EditorFeatures layer were using JTF through `IThreadingContext`, but didn't pull in a JTF-aware task scheduler provider because it was up in the Visual Studio layer. Moving the JTF-aware scheduler down to the EditorFeatures layer causes UseExportProviderAttribute.After to dispatch through JTF instead of trying to dispatch through XUnit's test synchronization context, which doesn't end up running on the WPF dispatcher.\r\n\r\nFixes #48644","Url":"https://github.com/dotnet/roslyn/pull/48662","RelatedDescription":"Open PR \"Move VisualStudioTaskSchedulerProvider to the EditorFeatures layer\" (#48662)"},{"Id":"722829657","IsPullRequest":true,"CreatedAt":"2020-10-16T03:20:09","Actor":"CyrusNajmabadi","Number":"48661","RawContent":null,"Title":"Rename a few lsp types","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/48661","RelatedDescription":"Open PR \"Rename a few lsp types\" (#48661)"},{"Id":"722825538","IsPullRequest":true,"CreatedAt":"2020-10-16T03:08:08","Actor":"TheSench","Number":"48660","RawContent":null,"Title":"Update F1 keywords to detect `using static` combination","State":"open","Body":"This PR makes the f1 keywords for the `using` and `static` keyword detect when they are used together.  If they are part of a `using static` directive, they will route to the `using static` page, rather than their normal keyword page.\r\n\r\nFixes part of dotnet/docs#20799\r\n\r\nRelated docs PR:\r\ndotnet/docs#21125","Url":"https://github.com/dotnet/roslyn/pull/48660","RelatedDescription":"Open PR \"Update F1 keywords to detect `using static` combination\" (#48660)"},{"Id":"722824033","IsPullRequest":true,"CreatedAt":"2020-10-16T03:03:35","Actor":"dotnet-bot","Number":"48659","RawContent":null,"Title":"Merge release/dev16.9 to release/dev16.9-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.9 into release/dev16.9-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.9\n- https://github.com/dotnet/roslyn/find/release/dev16.9-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.9-to-release/dev16.9-vs-deps\ngit reset --hard upstream/release/dev16.9-vs-deps\ngit merge upstream/release/dev16.9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.9-to-release/dev16.9-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48659","RelatedDescription":"Open PR \"Merge release/dev16.9 to release/dev16.9-vs-deps\" (#48659)"},{"Id":"722823473","IsPullRequest":true,"CreatedAt":"2020-10-16T03:02:00","Actor":"dotnet-bot","Number":"48658","RawContent":null,"Title":"Merge release/dev16.9 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.9 into master.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.9\n- https://github.com/dotnet/roslyn/find/master\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.9-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.9-to-master --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48658","RelatedDescription":"Open PR \"Merge release/dev16.9 to master\" (#48658)"},{"Id":"722823401","IsPullRequest":true,"CreatedAt":"2020-10-16T03:01:49","Actor":"dotnet-bot","Number":"48657","RawContent":null,"Title":"Merge release/dev16.8 to release/dev16.9","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.8 into release/dev16.9.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.8\n- https://github.com/dotnet/roslyn/find/release/dev16.9\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-to-release/dev16.9\ngit reset --hard upstream/release/dev16.9\ngit merge upstream/release/dev16.8\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-to-release/dev16.9 --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48657","RelatedDescription":"Open PR \"Merge release/dev16.8 to release/dev16.9\" (#48657)"},{"Id":"722796638","IsPullRequest":false,"CreatedAt":"2020-10-16T02:54:04","Actor":"NichUK","Number":"48656","RawContent":null,"Title":"Generic casting problem","State":"closed","Body":"### Description\r\n\r\nI wasn't sure whether to post this here, or if it belonged elsewhere for the language or VS teams... If I'm in the wrong place, please let me know where I should post it!\r\n\r\nWhen running the code snippet below, I would expect it to compile without the necessity of the double cast on line 44. \r\nWith it, it seems to compile and run just fine.\r\n\r\nVS 16.8.0 Preview 3.2, \r\nNetStandard 2.1\r\ntried both C#7 and 8\r\n\r\n```\r\nusing NUnit.Framework;\r\n\r\nnamespace Generic.Test\r\n{\r\n    public interface IPersistable\r\n    {\r\n    }\r\n\r\n    public interface IPersistable<TDto> : IPersistable where TDto : PersistableBase\r\n    {\r\n        string Name { get; set; }\r\n        TDto ToDto();\r\n    }\r\n\r\n    public interface IDto\r\n    {\r\n        T FromDto<T>() where T : IPersistable, new();\r\n    }\r\n\r\n    public abstract class PersistableBase : IDto\r\n    {\r\n        public abstract T FromDto<T>() where T : IPersistable, new();\r\n    }\r\n\r\n    public class Thing : IPersistable<ThingDto>\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public ThingDto ToDto()\r\n        {\r\n            return new ThingDto()\r\n            {\r\n                Name = Name,\r\n            };\r\n        }\r\n    }\r\n\r\n    public class ThingDto : PersistableBase\r\n    {\r\n        public string Name { get; set; }\r\n        public override T FromDto<T>()\r\n        {\r\n            // this seems wrong - surely it should compile without going via IPersistable cast\r\n            return (T)(IPersistable)new Thing()\r\n            {\r\n                Name = Name\r\n            };\r\n        }\r\n    }\r\n\r\n    public class GenericTests\r\n    {\r\n        [Test]\r\n        public void ShouldCreateADtoFromAThing()\r\n        {\r\n            var thing = new Thing()\r\n            {\r\n                Name = \"Nich\"\r\n            };\r\n\r\n            var dto = thing.ToDto();\r\n            Assert.That(dto, Is.Not.Null);\r\n\r\n            var convertedThing = dto.FromDto<Thing>();\r\n            Assert.That(convertedThing, Is.Not.Null);\r\n            Assert.That(convertedThing, Is.TypeOf<Thing>());\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/48656","RelatedDescription":"Closed issue \"Generic casting problem\" (#48656)"},{"Id":"722763658","IsPullRequest":true,"CreatedAt":"2020-10-16T02:49:00","Actor":"dotnet-bot","Number":"48653","RawContent":null,"Title":"Merge release/dev16.8 to release/dev16.8-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.8 into release/dev16.8-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/release/dev16.8\n- https://github.com/dotnet/roslyn/find/release/dev16.8-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-to-release/dev16.8-vs-deps\ngit reset --hard upstream/release/dev16.8-vs-deps\ngit merge upstream/release/dev16.8\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-to-release/dev16.8-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48653","RelatedDescription":"Closed or merged PR \"Merge release/dev16.8 to release/dev16.8-vs-deps\" (#48653)"},{"Id":"722777431","IsPullRequest":false,"CreatedAt":"2020-10-16T00:42:21","Actor":"paul1956","Number":"48655","RawContent":null,"Title":"MethodSymbol.Parameters missing Names for AttributeSyntax","State":"open","Body":"**Version Used**: \r\nMicrosoft.CodeAnalysis 3.8.0-4.final\r\n**Steps to Reproduce**:\r\nGetSymbolInfo for an C# Attribute \r\n```VB\r\nDim possibleMethodInfo As SymbolInfo = _mSemanticModel.GetSymbolInfo(CType(node.Parent, CSS.AttributeSyntax))\r\n```\r\nGet CandidateSymbols\r\n```\r\nDim method As IMethodSymbol = CType(possibleMethodInfo.CandidateSymbols(0), IMethodSymbol)\r\n```\r\n\r\n**Expected Behavior**:\r\nParameters gets Name and Type as it is shown in Underlying\r\n![image](https://user-images.githubusercontent.com/12789369/96199781-208c7700-0f0d-11eb-8eca-a9e449cfe587.png)\r\n\r\n**Actual Behavior**:\r\nOnly Type is available from Parameters\r\n![image](https://user-images.githubusercontent.com/12789369/96199662-e28f5300-0f0c-11eb-96a9-cd0c4a7d04f8.png)\r\n\r\nInternally Roslyn uses (symbol as Symbols.PublicModel.MethodSymbol)?.UnderlyingMethodSymbol to get a symbol that can be used to get symbol.Name. but contrary to the name PublicModel.MethodSymbol is not public.\r\n","Url":"https://github.com/dotnet/roslyn/issues/48655","RelatedDescription":"Open issue \"MethodSymbol.Parameters missing Names for AttributeSyntax\" (#48655)"},{"Id":"722763768","IsPullRequest":true,"CreatedAt":"2020-10-16T00:03:48","Actor":"dotnet-bot","Number":"48654","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/master\n- https://github.com/dotnet/roslyn/find/master-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48654","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#48654)"},{"Id":"722762107","IsPullRequest":false,"CreatedAt":"2020-10-15T23:59:08","Actor":"mgoertz-msft","Number":"48651","RawContent":null,"Title":"Move UI thread dependencies out of the XamlProjectService MEF constructor","State":"open","Body":"To address the concern that @dibarbet raised during the review of #48459. Currently the ctor is run on the UI thread but we shouldn't rely on that always being the case.","Url":"https://github.com/dotnet/roslyn/issues/48651","RelatedDescription":"Open issue \"Move UI thread dependencies out of the XamlProjectService MEF constructor\" (#48651)"},{"Id":"722661989","IsPullRequest":true,"CreatedAt":"2020-10-15T23:07:18","Actor":"jaredpar","Number":"48648","RawContent":null,"Title":"Fix UnmanagedCallingConventions test reliability","State":"closed","Body":"The test needs the `CombineStrings` instane to be alive through the\r\nduration of the function pointer call. The `GC.KeepAlive` call though\r\nwas on the returned `IntPtr`. That is essentially a no-op cause it just\r\nboxes to `object`. It doesn't actaully track the underlying `delegate`\r\ninstance.\r\n\r\nChanged the code to track the `delegate` and push the `KeepAlive` after\r\nthe function pointer invocation.\r\n\r\ncloses #48641","Url":"https://github.com/dotnet/roslyn/pull/48648","RelatedDescription":"Closed or merged PR \"Fix UnmanagedCallingConventions test reliability\" (#48648)"},{"Id":"722614461","IsPullRequest":false,"CreatedAt":"2020-10-15T23:07:18","Actor":"runfoapp[bot]","Number":"48641","RawContent":null,"Title":"Roslyn UnmanagedCallingConventions failure","State":"closed","Body":"<!-- runfo report start -->\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[853806](https://dev.azure.com/dnceng/public/_build/results?buildId=853806)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|Rolling|Test Windows Desktop Debug 32|\r\n|[844705](https://dev.azure.com/dnceng/public/_build/results?buildId=844705)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48427](https://github.com/dotnet/roslyn/pull/48427)|Windows Desktop Release Test32|\r\n|[844359](https://dev.azure.com/dnceng/public/_build/results?buildId=844359)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48411](https://github.com/dotnet/roslyn/pull/48411)|Test Windows Desktop Release 64|\r\n|[841244](https://dev.azure.com/dnceng/public/_build/results?buildId=841244)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|Rolling|Windows Desktop Release Test64|\r\n|[838062](https://dev.azure.com/dnceng/public/_build/results?buildId=838062)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48168](https://github.com/dotnet/roslyn/pull/48168)|Windows Desktop Debug Test64|\r\n|[833358](https://dev.azure.com/dnceng/public/_build/results?buildId=833358)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48101](https://github.com/dotnet/roslyn/pull/48101)|Windows Desktop Release Test64|\r\n|[832818](https://dev.azure.com/dnceng/public/_build/results?buildId=832818)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|Rolling|Windows Desktop Release Test64|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|1|1|7|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48641","RelatedDescription":"Closed issue \"Roslyn UnmanagedCallingConventions failure\" (#48641)"},{"Id":"722728271","IsPullRequest":true,"CreatedAt":"2020-10-15T22:55:03","Actor":"sharwell","Number":"48650","RawContent":null,"Title":"Ensure WaitUntilFullyLoadedAsync can make progress from a background thread","State":"open","Body":"Fixes [AB#1230148](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1230148)","Url":"https://github.com/dotnet/roslyn/pull/48650","RelatedDescription":"Open PR \"Ensure WaitUntilFullyLoadedAsync can make progress from a background thread\" (#48650)"},{"Id":"722551996","IsPullRequest":true,"CreatedAt":"2020-10-15T22:17:51","Actor":"dotnet-bot","Number":"48633","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/master\n- https://github.com/dotnet/roslyn/find/master-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/48633","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#48633)"},{"Id":"722710677","IsPullRequest":false,"CreatedAt":"2020-10-15T22:15:21","Actor":"chsienki","Number":"48649","RawContent":null,"Title":"Listing compiler outputs","State":"open","Body":"# Listing compiler outputs\r\n\r\nToday, the compiler has no way of communicating its list of outputs to a caller, such as MSBuild. In the past this has been acceptable, as the outputs can be calculated deterministically from the compile inputs (such as `AssemblyName.dll` and `.xml`/`.pdb` depending on options) and the success or failure return code.\r\n\r\nWith the introduction of Source Generators, it's now possible for the compiler to output any number of arbitrarily named files. As these files are output to a user controlled location, the build process cannot simply assume that the whole directory can be removed. For example, by default we output to `$(IntermediateOutputDir)\\generated` which could be deleted wholesale, but a user could change this to output to `$(MSBuildThisProjectDir)\\src`; for obvious reasons we wouldn't be able to simply delete the contents of this directory on clean.\r\n\r\nFurther there are discussions around allowing the output of 'non-source' files from generators and possibly even analyzers; this would further increase the number of files written and possibly expand the outputs to an unbounded arbitrary set of locations.\r\n\r\n## Proposed solution\r\n\r\nThe proposed solution would be for the compiler to create a single, caller provided output, that contains the list of all outputs from the compiler, one per line. A caller would pass in a filename as an argument to the compiler, and the caller would then be free to read back the full list of created files after build. By default, no log file is created unless the option is explicitly passed to the compiler.\r\n\r\nExample:\r\n\r\nAn invocation of\r\n\r\n`dotnet exec csc.dll -createdFilesLog:filescreated.txt -out:myassembly.dll -pbd:symbols.pdb -debug:portable mysource.cs`\r\n\r\nWould result in three files being written to disk:\r\n- `myassembly.dll` \r\n- `symbols.pdb`\r\n- `filescreated.txt`\r\n\r\n`filescreated.txt` would consist of two lines:\r\n\r\n- `myassembly.dll`\r\n- `symbols.pdb`\r\n\r\nthat indicate the outputs from the compilation.\r\n\r\nThis would also have the side effect of simplifying the existing MSBuild targets, as we wouldn't have to encode any explicit knowledge of the output files as we do today. Instead the tasks would pass a log file location of its choosing, and read that back after compilation, meaning no duplicated logic or implicit contracts between compiler and tasks. By default the tasks would output the log file to the intermediate directory, and remove it on clean, but we would probably want to expose these as options in the compiler props file.\r\n\r\n## Alternative: Task outputs\r\n\r\nMSBuild has the concept of TaskOutputs, which seems like it would be a good fit for this purpose. However the architecture of the compiler means that often the process executing the compilation is in fact the compiler server. This would require architectural changes to the compiler server to pass back this information so that the task could in turn provide it.\r\n\r\nThis would only allow MSBuild to obtain the list of written files, and any other clients would still have no mechanism to read it. Both options require implementation work, but the the file write is significantly simpler architecturally and works for any caller. \r\n\r\n## Open questions / notes\r\n\r\n**Full paths**: Should we use absolute paths in the log file? We generally stay away from absolute paths, and handle things relative to the compiler invocation. In this case however, it seems that it would make sense to output the absolute path of the item created, to reduce any ambiguity for the the caller.\r\n\r\n**Output types**: The current proposal is simply to list each created file, with no semantic information about _why_ it was created. Would we want to create a richer log that includes the reason such as `OutputAssembly`, `SourceGeneratedFile`, `DebugSymbols` etc? If so would we want a richer semantic structure such as XML or JSON, rather than a flat text file?\r\n\r\n**Should we include file writes, or just creates**: The compiler already has a mechanism for tracking all file writes (rather than just file creation). Is it useful to expose this information too? If so could we simply build on the existing mechanisms in the compiler?\r\n\r\n**Don't we already return diagnostics to MSBuild**: No. The compiler server simply returns the output from the compiler, and passes it back to the task. MSBuild has special handling for the output of log lines that parses error and warnings into the MSBuild representation.","Url":"https://github.com/dotnet/roslyn/issues/48649","RelatedDescription":"Open issue \"Listing compiler outputs\" (#48649)"},{"Id":"722650666","IsPullRequest":true,"CreatedAt":"2020-10-15T20:21:52","Actor":"RikkiGibson","Number":"48647","RawContent":null,"Title":"Warn on uninitialized fields for struct constructor with `: this()` clause","State":"open","Body":"Closes #48574\r\n\r\nBasically, entering the `this` parameter caused the declared state to be written to the slots for the struct fields, so we need to `makeNotNullMembersMaybeNull()` after the `EnterParameter`, not before. I think it also makes more sense to move the call into the `!_isSpeculative` block, since in speculative analysis we should just load a snapshot that already has the \"state before we call base.Scan()\" plugged into it. (if I'm reading the code right @333fred.)\r\n\r\nI think we should revisit the way we populate state when assigning to variables of struct types eventually (to solve #47596, for example).\r\n\r\n@dotnet/roslyn-compiler for review please","Url":"https://github.com/dotnet/roslyn/pull/48647","RelatedDescription":"Open PR \"Warn on uninitialized fields for struct constructor with `: this()` clause\" (#48647)"},{"Id":"722631519","IsPullRequest":false,"CreatedAt":"2020-10-15T19:49:50","Actor":"tmat","Number":"48646","RawContent":null,"Title":"Evaluating a record with recursive reference results in termination of the program with Stack Overflow","State":"open","Body":"**Version Used**: \r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n\r\n**Steps to Reproduce**:\r\n\r\nPlace breakpoint as indicated, F5 and open Locals Window, then step (F10).\r\n\r\n```C#\r\nrecord C\r\n{\r\n    public int X { get; init; }\r\n    public int Y { get; init; }\r\n    public int Z { get; init; }\r\n\r\n    public C Inner { get; set; }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var c = new C();\r\n        c.Inner = c; // breakpoint here\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96178851-dbece580-0ee4-11eb-958f-f0adf8ee806b.png)\r\n\r\n**Expected Behavior**:\r\n\r\nSO is prevented.\r\n\r\nPerhaps the implementation should only go to certain depth and then bail.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48646","RelatedDescription":"Open issue \"Evaluating a record with recursive reference results in termination of the program with Stack Overflow\" (#48646)"},{"Id":"722625618","IsPullRequest":false,"CreatedAt":"2020-10-15T19:41:48","Actor":"tmat","Number":"48645","RawContent":null,"Title":"EE displays property EqualityContract of record types in Watch Window","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96178057-ab587c00-0ee3-11eb-8f20-b71904107739.png)\r\n\r\nI'd guess this is not useful in most scenarios. \r\n\r\nI wonder if we should special-case it in EE and show it only if the `raw` modifier is used:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96178127-c7f4b400-0ee3-11eb-94df-219b7c6be264.png)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48645","RelatedDescription":"Open issue \"EE displays property EqualityContract of record types in Watch Window\" (#48645)"},{"Id":"722617201","IsPullRequest":false,"CreatedAt":"2020-10-15T19:34:19","Actor":"runfoapp[bot]","Number":"48644","RawContent":null,"Title":"Roslyn TestCompletionInLinkedFiles","State":"open","Body":"<!-- runfo report start -->\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[853254](https://dev.azure.com/dnceng/public/_build/results?buildId=853254)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48604](https://github.com/dotnet/roslyn/pull/48604)|Test Windows Desktop Spanish Debug 32|\r\n|[850212](https://dev.azure.com/dnceng/public/_build/results?buildId=850212)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48428](https://github.com/dotnet/roslyn/pull/48428)|Test Windows Desktop Spanish Debug 32|\r\n|[849374](https://dev.azure.com/dnceng/public/_build/results?buildId=849374)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|Rolling|Test Windows Desktop Spanish Debug 32|\r\n|[848005](https://dev.azure.com/dnceng/public/_build/results?buildId=848005)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48371](https://github.com/dotnet/roslyn/pull/48371)|Test Windows Desktop Spanish Debug 32|\r\n|[847594](https://dev.azure.com/dnceng/public/_build/results?buildId=847594)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Debug 32|\r\n|[847594](https://dev.azure.com/dnceng/public/_build/results?buildId=847594)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Release 32|\r\n|[847594](https://dev.azure.com/dnceng/public/_build/results?buildId=847594)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Release 64|\r\n|[847594](https://dev.azure.com/dnceng/public/_build/results?buildId=847594)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Debug 64|\r\n|[847594](https://dev.azure.com/dnceng/public/_build/results?buildId=847594)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Spanish Debug 32|\r\n|[847263](https://dev.azure.com/dnceng/public/_build/results?buildId=847263)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Release 64|\r\n|[847263](https://dev.azure.com/dnceng/public/_build/results?buildId=847263)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Release 32|\r\n|[847263](https://dev.azure.com/dnceng/public/_build/results?buildId=847263)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Debug 32|\r\n|[847263](https://dev.azure.com/dnceng/public/_build/results?buildId=847263)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Debug 64|\r\n|[847263](https://dev.azure.com/dnceng/public/_build/results?buildId=847263)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48473](https://github.com/dotnet/roslyn/pull/48473)|Test Windows Desktop Spanish Debug 32|\r\n|[844381](https://dev.azure.com/dnceng/public/_build/results?buildId=844381)|[roslyn-CI](https://dnceng.visualstudio.com/public/_build?definitionId=15)|[PR 48367](https://github.com/dotnet/roslyn/pull/48367)|Test Windows Desktop Spanish Debug 32|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|6|7|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48644","RelatedDescription":"Open issue \"Roslyn TestCompletionInLinkedFiles\" (#48644)"},{"Id":"722617187","IsPullRequest":false,"CreatedAt":"2020-10-15T19:34:18","Actor":"tmat","Number":"48643","RawContent":null,"Title":"Records type definition identifier is not classified correctly","State":"open","Body":"**Version Used**: \r\n\r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n**Steps to Reproduce**:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96177414-b65edc80-0ee2-11eb-9adc-edfdb68f61b0.png)\r\n\r\n**Expected Behavior**:\r\n\r\nThe color of X in the class definition and C in the record definition is the same.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48643","RelatedDescription":"Open issue \"Records type definition identifier is not classified correctly\" (#48643)"},{"Id":"722615815","IsPullRequest":true,"CreatedAt":"2020-10-15T19:33:03","Actor":"cston","Number":"48642","RawContent":null,"Title":"More static local function tests","State":"open","Body":"Added several tests identified in test plan (see https://github.com/dotnet/roslyn/issues/32069).","Url":"https://github.com/dotnet/roslyn/pull/48642","RelatedDescription":"Open PR \"More static local function tests\" (#48642)"},{"Id":"722603371","IsPullRequest":false,"CreatedAt":"2020-10-15T19:32:31","Actor":"tmat","Number":"48639","RawContent":null,"Title":"EnC does not work for records","State":"closed","Body":"**Version Used**: \r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n\r\nWe should either report rude edit whenever a record type is edited in any way or implement full support for EnC.\r\n\r\nThis needs to include \r\n- symbol matching record symbols\r\n- adding new non-predefined members\r\n- adding/removing predefined members: `EqualityContract`, `Equals(R)`, `GetHashCode()`, `ToString()`, `PrintMembers()` and copy-constructor \r\n  User defined one can be added and removed, which should result in updating the compiler generated one and vice versa. EnC already implements similar logic for parameter-less constructors. Inherited members also need to be considered.\r\n\r\n  Spec:\r\n  > In addition to the members declared in the record body, a record type has additional synthesized members. Members are synthesized unless a member with a \"matching\" signature is declared in the record body or an accessible concrete non-virtual member with a \"matching\" signature is inherited. Two members are considered matching if they have the same signature or would be considered \"hiding\" in an inheritance scenario.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48639","RelatedDescription":"Closed issue \"EnC does not work for records\" (#48639)"},{"Id":"722606197","IsPullRequest":false,"CreatedAt":"2020-10-15T19:24:02","Actor":"tmat","Number":"48640","RawContent":null,"Title":"Override completion should not suggest overriding Equals in records","State":"open","Body":"**Version Used**: \r\n\r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nrecord C\r\n{\r\n    public int X { get; init; }\r\n    public int Z { get; init; }\r\n\r\n    public override $$\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nCompletion does not include `Equals(object? obj)` since it is an error to add such override.\r\n\r\n**Actual Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96176594-6cc1c200-0ee1-11eb-926e-7bb2b9d68308.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/41759/96176492-4bf96c80-0ee1-11eb-9968-9538a9a18a67.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/48640","RelatedDescription":"Open issue \"Override completion should not suggest overriding Equals in records\" (#48640)"},{"Id":"722578659","IsPullRequest":true,"CreatedAt":"2020-10-15T18:43:41","Actor":"jaredpar","Number":"48638","RawContent":null,"Title":"Clarify the GetOutputFileName contract","State":"open","Body":"The `GetOutputFileName` consumption code requires the return to be\r\nnon-null yet the implementation appeared to allow `null` returns. This\r\nchange flips the return to be `string!` as well as reworking the code a\r\nbit to make the guarantees the compilers are providing much clearer\r\n\r\ncloses #48599","Url":"https://github.com/dotnet/roslyn/pull/48638","RelatedDescription":"Open PR \"Clarify the GetOutputFileName contract\" (#48638)"},{"Id":"722577318","IsPullRequest":false,"CreatedAt":"2020-10-15T18:41:32","Actor":"tmat","Number":"48637","RawContent":null,"Title":"EnC: nint and nuint should be treated as equivalent to IntPtr and UIntPtr","State":"open","Body":"**Version Used**: \r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n\r\n**Steps to Reproduce**:\r\n\r\nWhile debugging update:\r\n\r\n```C#\r\nclass C\r\n{\r\n    public void F(nint x, nuint y) { }\r\n}\r\n```\r\n\r\nto \r\n\r\n```C#\r\nclass C\r\n{\r\n    public void F(IntPtr x, UIntPtr y) { }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe edit should be allowed since the underlying representation of the types is the same.\r\n\r\n**Actual Behavior**:\r\n\r\nRude edit is reported.\r\n\r\nAlso validate that symbol matcher considers these types the same (it should as they are the same symbols, but having tests would be good).","Url":"https://github.com/dotnet/roslyn/issues/48637","RelatedDescription":"Open issue \"EnC: nint and nuint should be treated as equivalent to IntPtr and UIntPtr\" (#48637)"},{"Id":"722571283","IsPullRequest":false,"CreatedAt":"2020-10-15T18:32:05","Actor":"tmat","Number":"48636","RawContent":null,"Title":"EnC: Adding/updating/removing attribute on local function, its return type or parameter should be rude edit","State":"open","Body":"**Version Used**: \r\nVersion 16.9.0 Preview 1.0 [30614.203.main]\r\n\r\nIt is currently rude edit to add/update/remove attributes on any member/parameter/return value, so for consistency we should report this rude edit on local function attributes as well.\r\n\r\nOnce support changing attributes we should remove the rude edit for local functions as well. Runtime support is required for such feature, so the rude edit would stay for .NET Framework apps.","Url":"https://github.com/dotnet/roslyn/issues/48636","RelatedDescription":"Open issue \"EnC: Adding/updating/removing attribute on local function, its return type or parameter should be rude edit\" (#48636)"},{"Id":"722562589","IsPullRequest":false,"CreatedAt":"2020-10-15T18:18:26","Actor":"tmat","Number":"48635","RawContent":null,"Title":"EnC: Updating lambda parameters to discards breaks EnC","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\nF5 and update:\r\n\r\n```C#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var x = new Func<int, int>(a => a + 1);\r\n        Console.Write(x(1)); // breakpoint here\r\n    }\r\n}\r\n```\r\n\r\nto\r\n\r\n```C#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var x = new Func<int, int>(_ => 10);\r\n        Console.Write(x(1));\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe lambda body is matched to the previous one and is updated to return 10. Program prints 10.\r\n\r\n**Actual Behavior**:\r\n\r\nThe lambdas are not matched, the program prints 2.\r\n\r\nSee https://github.com/dotnet/csharplang/blob/master/proposals/csharp-9.0/lambda-discard-parameters.md for all forms of discard lambda parameters.\r\n\r\nIt should also be possible to update discard to named parameter and to change parameter names.\r\n\r\nThe CLR likely does not support changing IL method parameter names - but we could just ruse the previous names since the method implementing the lambda body is generated and the parameter names do not matter (other than for reflection).","Url":"https://github.com/dotnet/roslyn/issues/48635","RelatedDescription":"Open issue \"EnC: Updating lambda parameters to discards breaks EnC\" (#48635)"},{"Id":"722555808","IsPullRequest":false,"CreatedAt":"2020-10-15T18:07:53","Actor":"chsienki","Number":"48634","RawContent":null,"Title":" Global editor config precedence","State":"open","Body":"# Global editor config precedence\r\n\r\nWe recently introduced a new feature, known as 'global editor config'. This was designed to solve two, somewhat orthogonal, problems:\r\n\r\n1. The ability to participate in the `.editorconfig` hierarchy, without the file itself being within the source hierarchy (such as from a NuGet package)\r\n2. The ability to provide diagnostic settings to diagnostics or files that do not have a source path\r\n\r\nThe design generally satisfies both problems, but runs into issue when you combine both problems together and still wish to have hierarchical config settings.\r\n\r\n## Issue\r\n\r\nThis is easiest explained by way of example. Consider the following scenarios:\r\n\r\n### Scenario 1\r\n\r\n- A NuGet package ships a global editor config that sets the severity of `<ID>` to `warning`.\r\n- The user of the package wishes to downgrade this warning to `none`.\r\n\r\n**Solution**: The user adds a regular `.editorconfig` that changes the severity of `<ID>` to `none` within their source tree.\r\n\r\n### Scenario 2\r\n\r\n- A user wants to set the severity of `<ID>` to `none` in source generated files.\r\n\r\n**Solution**: The user adds a global editor config to their source directory, which sets the severity of `<ID>` to `none`.\r\n\r\n### Scenario 3\r\n\r\n- A NuGet package ships a global editor config that sets the severity of `<ID>` to `warning`.\r\n- The user of the package wishes to set the severity of `<ID>` to `none` in source generated files.\r\n\r\n**Problem**: The user cannot create a global editor config with `<ID>` set to `none`. Because global configs are combined into a single virtual config, we unset the value and issue a warning. The user has no way to override the value from the NuGet package.\r\n\r\n## Proposed Solution\r\n\r\nThe proposed solution is to introduce an optional notion of precedence to global editor configs.\r\n\r\nA straw-man syntax looks something like\r\n\r\n``` ini\r\nis_global = true\r\nglobal_level = 1\r\n```\r\n\r\nAny colliding keys within the same level will be unset and a warning issued. When keys from a higher level collide with those of a lower level, the higher level wins, and if there is only a single winning key, no warning is issued. By default, a global editor config without an explicit level would have a default level of `0`.\r\n\r\nThus in scenario 3, a user could create a global config with a higher precedence than the one specified in the NuGet package, allowing them to override the severity of `<ID>` in generated files.\r\n\r\n### Multiple keys with the same value\r\n\r\nThe existing behavior today is to issue a warning whenever we see duplicate keys. However, it seems intuitive that if all the keys map to the same value, we should be able to treat it as unambiguous and use the value. As part of this proposal we should change the behavior seen today to allow unambiguous duplicates. This won't be a breaking change as we'll be removing a subset of warnings.\r\n\r\n### Why isn't this a problem for `.editorconfig`\r\n\r\nStandard `.editorconfig`s can resolve conflicts via their natural filesystem hierarchy. Anything 'further from the root' is higher in precedence than the closer ones. Global editor configs can exist in completely different hierarchies, so a NuGet provided config in `c:\\users\\user\\.nuget\\cache\\MyPackage\\1.0.0\\.globalconfig` could be 'further away' than `c:\\myproject\\.globalconfig` but should clearly not take precedence.\r\n\r\nFurther, because global configs are designed to provide values for files without a source path, even if we could resolve the 'logical depth' of the config, there is no correct way to determine which one should apply to the file itself. One option could be to use the project file path as a proxy, but the compiler itself doesn't currently have any notion of project file. Therefore not only would it be an only somewhat inaccurate heuristic, but we would have to do work anyway to enable it.\r\n\r\n## Notes\r\n\r\n**Should we allow negative levels?**: Ultimately the level just needs to be an opaque sortable key. Limiting it to integers makes sense as the ordering is obvious, but having negative levels wouldn't necessarily be a problem. A user could create a config with a level of `-1` which would mean 'Apply this config key, unless a NuGet package has already provided it'. This seems like kind of a niche case, but falls out for free from the above design, so seems worth including.\r\n\r\n**Could a 'malicious' NuGet package provide an ID of `Int32.Max`?**: Yes, but this is no worse a situation than exists currently.\r\n\r\n**Can it get complicated figuring out where a value is set**: Yes, with multiple hierarchical configs and levels it could be non-obvious exactly which rule is being applied and why. One option could be to issue a hidden diagnostic when we select an override, that would allow e.g. an analyzer to surface the information to the user. \r\n\r\n**Is this just a problem for NuGet**: No, for sufficiently advanced solutions (such as Roslyn itself) it seems likely that different parts of the source tree (such as a Compilers and Workspaces) might want to have differing global values. This proposal enables that too.","Url":"https://github.com/dotnet/roslyn/issues/48634","RelatedDescription":"Open issue \" Global editor config precedence\" (#48634)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"719590628","IsPullRequest":true,"CreatedAt":"2020-10-16T02:54:11","Actor":"Rattenkrieg","Number":"8364","RawContent":null,"Title":"prevent runtime shutdown while foreground threads keep running","State":"closed","Body":"- [x] hack code\r\n- [x] make `GC_Scenarios._BinTree_thdtree_thdtree_._BinTree_thdtree_thdtree_sh`, `GC_Scenarios._BinTree_thdtreegrowingobj_thdtreegrowingobj_._BinTree_thdtreegrowingobj_thdtreegrowingobj_sh`, `GC_Scenarios._BinTree_thdtreelivingobj_thdtreelivingobj_._BinTree_thdtreelivingobj_thdtreelivingobj_sh` green\r\nI have issues with `./tests/runtest.sh release -coreclr Top200` either hanging on these three or exiting with 134 code.\r\nWhen I run it manually by `CORE_ROOT=./tests_downloaded/CoreCLR/Tests/Core_Root ./tests_downloaded/CoreCLR/GC/Scenarios/BinTree/thdtreegrowingobj/thdtreegrowingobj.sh` everithing works fine. I guess I've introduced some threading issue to xUnit runners.\r\n- [x] find some tests for foreground threads in CoreCLR or make our own \r\n\r\n\r\nSimplified logic adopted from CoreCLR with no additional states like `m_UnstartedThreadCount`, `m_PendingThreadCount` etc.\r\n","Url":"https://github.com/dotnet/corert/pull/8364","RelatedDescription":"Closed or merged PR \"prevent runtime shutdown while foreground threads keep running\" (#8364)"},{"Id":"714300525","IsPullRequest":true,"CreatedAt":"2020-10-15T00:10:17","Actor":"kant2002","Number":"8355","RawContent":null,"Title":"Display which type providing compiler helper is missing","State":"closed","Body":"I add these changes when I attempt to troubleshoot custom runtime and it failed that type was missing without indication why it want that type in first place. Have to know method which compiler want to use helps me troubleshoot what I should do.","Url":"https://github.com/dotnet/corert/pull/8355","RelatedDescription":"Closed or merged PR \"Display which type providing compiler helper is missing\" (#8355)"},{"Id":"721081874","IsPullRequest":false,"CreatedAt":"2020-10-14T02:25:12","Actor":"jkotas","Number":"8366","RawContent":null,"Title":"This repo is going to be archived on October 31, 2020","State":"open","Body":"We are centralizing all experimental projects based on dotnet/runtime in a new https://github.com/dotnet/runtimelab repo. More details about this effort are in https://github.com/dotnet/runtime/issues/35609 .\r\n\r\nRuntime optimized for AOT and RyuJIT codegen backend that were the two largest and most mature CoreRT components have been moved to their new place at https://github.com/dotnet/runtimelab/tree/feature/NativeAOT . The engineering infrastructure is setup, the packages are being published to a new NuGet feed and we are ready to start taking contributions. As with any new developer workflow, we know that there will be rough edges. Please help us smooth them out!\r\n\r\nCoreRT is dead, long live NativeAOT!\r\n\r\nWe would like to keep the experiments in dotnet/runtimelab more focused. Let’s use this issue to discuss what else would make sense to move over and in what form. I will be happy to sponsor experiments with significant interest. This includes the wasm target that @yowl has been relentlessly working on.","Url":"https://github.com/dotnet/corert/issues/8366","RelatedDescription":"Open issue \"This repo is going to be archived on October 31, 2020\" (#8366)"},{"Id":"718828491","IsPullRequest":false,"CreatedAt":"2020-10-13T13:40:40","Actor":"ryancheung","Number":"8363","RawContent":null,"Title":"Ubuntu 20.04 dotnet publish failed","State":"closed","Body":"Command: `dotnet publish -r linux-x64 -c Release`\r\nCoreRT publish failed in ubuntu 20.04 with the following build error:\r\n\r\n***\r\n  /usr/bin/clang\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  /usr/bin/ld: cannot find ***-lgssapi_krb5***\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n/home/ryan/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/build/Microsoft.NETCore.Native.targets(327,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL.o\" -o \"bin/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL\" /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libbootstrapper.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libRuntime.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.CoreLib.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.TypeLoader.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Globalization.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.IO.Compression.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Net.Security.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -Wl,--discard-all -Wl,--gc-sections\" exited with code 1. [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n***\r\n\r\nTemporary workaround I found:\r\n1. `cd /usr/lib/x86_64-linux-gnu`\r\n2. `sudo ln -s libgssapi_krb5.so.2.2 libgssapi_krb5.so`","Url":"https://github.com/dotnet/corert/issues/8363","RelatedDescription":"Closed issue \"Ubuntu 20.04 dotnet publish failed\" (#8363)"},{"Id":"720044433","IsPullRequest":false,"CreatedAt":"2020-10-13T10:03:24","Actor":"darderik","Number":"8365","RawContent":null,"Title":"Question about Marshalling of data structures across C++/C#","State":"closed","Body":"Hello, following the solution provided to the issue [#6984 ](https://github.com/dotnet/corert/issues/6984) , I tried playing around with the return of data structures from C++ to C#, as i couldn't find an issue related to this kind of operation, I thought about opening one in order to receive a few heads-up on the topic.\r\n\r\n\r\nC++ Code\r\n```\r\nstruct myStruct {\r\n    int ok;\r\n    string testStr;\r\n} ;\r\nextern \"C\" myStruct entry() {\r\n    myStruct myStu;\r\n    myStu.ok = 1;\r\n    myStu.testStr = \"hello\";\r\n    return myStu;\r\n}\r\n```\r\n\r\nC# Code\r\n```\r\nnamespace CppInterop\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic ok = entry();\r\n        }\r\n        [DllImport(\"*\")]\r\n        public extern static dynamic entry();\r\n    }\r\n}\r\n```\r\n\r\n\r\nAs expected, i get this error\r\n```\r\nUnhandled Exception: System.Exception: Method '[CppInterop]CppInterop.Program.entry()' requires marshalling that is not yet supported by this compiler.\r\n   at CppInterop.Program.entry() + 0x30\r\n   at CppInterop!<BaseAddress>+0x1e9b2d\r\nAborted\r\n```\r\n\r\nI was wondering if there was another way (as I know that dynamic isn't  aot friendly at all) to pass data structures (or objects) back from cpp , in the particular case that i know exactly how is the passed object structured.\r\nThank you for the help 👍 ","Url":"https://github.com/dotnet/corert/issues/8365","RelatedDescription":"Closed issue \"Question about Marshalling of data structures across C++/C#\" (#8365)"},{"Id":"718717259","IsPullRequest":false,"CreatedAt":"2020-10-10T22:48:19","Actor":"Rattenkrieg","Number":"8362","RawContent":null,"Title":"Error on tests/runtest.sh -coreclr All","State":"open","Body":"Tested on Fedora 32, as per `runtest.cmd` should affect Windows as well.\r\nOn \"all\" selection `-test_filter_path` parameter for `tests/CoreCLR/runtest.py` is omitted and we getting into this branch:\r\nhttps://github.com/dotnet/corert/blob/b06c72e12f24523dfe58717328a3de1b9f37a397/tests/CoreCLR/runtest.py#L1873-L1874\r\nThere is no `tests/issues.targets` file. Probably [this one](https://github.com/dotnet/runtime/blob/master/src/tests/issues.targets) meant to be used but somehow wasn't added. Git history gives no clue.\r\nI see this wasn't detected because `tests/runtest.sh -coreclr` defaults to Top200.","Url":"https://github.com/dotnet/corert/issues/8362","RelatedDescription":"Open issue \"Error on tests/runtest.sh -coreclr All\" (#8362)"},{"Id":"718107191","IsPullRequest":false,"CreatedAt":"2020-10-09T13:41:43","Actor":"maikebing","Number":"8361","RawContent":null,"Title":"What's the difference between corert  and   runtimelab‘s  NativeAOT ？","State":"closed","Body":" ","Url":"https://github.com/dotnet/corert/issues/8361","RelatedDescription":"Closed issue \"What's the difference between corert  and   runtimelab‘s  NativeAOT ？\" (#8361)"},{"Id":"715288580","IsPullRequest":true,"CreatedAt":"2020-10-09T12:23:48","Actor":"drvoss","Number":"8358","RawContent":null,"Title":"Update LoadLibrary.c","State":"closed","Body":"Support Visual C++ compiler","Url":"https://github.com/dotnet/corert/pull/8358","RelatedDescription":"Closed or merged PR \"Update LoadLibrary.c\" (#8358)"},{"Id":"717888122","IsPullRequest":false,"CreatedAt":"2020-10-09T06:24:33","Actor":"DenMpei","Number":"8360","RawContent":null,"Title":"Generating native code with Grpc.Core","State":"open","Body":"Good day!\r\n\r\nI hit the following issue:\r\ndotnet publish -r win-x64 leads to numerous compilation errors\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95550016-e56fdc80-0a10-11eb-86f1-3de6b52cbe58.png)\r\n\r\nInside the package is used Grpc.Core 2.28.1\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95549756-85793600-0a10-11eb-8411-a9149078d7ea.png)\r\n\r\nСompile with Microsoft.DotNet.ILCompiler 1.0.0-alpha-29408-02\r\n\r\nAdding code from [this issue](https://github.com/dotnet/corert/issues/6375) doesn't help\r\n\r\nI ask to give advice to solve the problem.\r\nRegards.","Url":"https://github.com/dotnet/corert/issues/8360","RelatedDescription":"Open issue \"Generating native code with Grpc.Core\" (#8360)"},{"Id":"715809353","IsPullRequest":false,"CreatedAt":"2020-10-06T15:48:07","Actor":"kant2002","Number":"8359","RawContent":null,"Title":"\"The input line is too long\" during build","State":"open","Body":"When I build CoreRT from command line in x64 dev command line there error after some time\r\n\r\n```\r\n>build.cmd\r\nDoing a clean build\r\n\r\nCould Not Find D:\\d\\kant\\GitHub\\dotnet\\corert\\bin\\Logs\\*_Windows_NT__x64__Debug.*\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\nThe input line is too long.\r\nThe syntax of the command is incorrect.\r\n```\r\n\r\nMy prior experience suggest that this is happens during call of \r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n```\r\n\r\nThis is happens IIRC due to long PATH variable.","Url":"https://github.com/dotnet/corert/issues/8359","RelatedDescription":"Open issue \"\"The input line is too long\" during build\" (#8359)"},{"Id":"713872400","IsPullRequest":true,"CreatedAt":"2020-10-05T13:52:47","Actor":"yowl","Number":"8352","RawContent":null,"Title":"Wasm: dont `RhpAssignRef` static fields","State":"closed","Body":"This PR changes the implementation of `stsfld` so that `RhpAssignRef` is not called when storing a gc  pointer in a static field.  For example, previous to this change, https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/System.Private.CoreLib/shared/System/AttributeUsageAttribute.cs#L23 resulted in a call to `RhpAssignRef` in the cctor.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/8352","RelatedDescription":"Closed or merged PR \"Wasm: dont `RhpAssignRef` static fields\" (#8352)"},{"Id":"709808614","IsPullRequest":true,"CreatedAt":"2020-10-05T03:15:02","Actor":"yowl","Number":"8350","RawContent":null,"Title":"Wasm: add support for most of the conv_ovf operations","State":"closed","Body":"This PR adds support for overflow checking for Wasm for most of the Conv_Ovf opcodes. Still to do are two of native int: `Conv_Ovf_I`, `Conv_Ovf_I_Un` . (`Conv_Ovf_U` is included here).  Was going to wait until c#9 was available to do the missing ones.","Url":"https://github.com/dotnet/corert/pull/8350","RelatedDescription":"Closed or merged PR \"Wasm: add support for most of the conv_ovf operations\" (#8350)"},{"Id":"714361340","IsPullRequest":true,"CreatedAt":"2020-10-05T02:02:26","Actor":"yowl","Number":"8357","RawContent":null,"Title":"Wasm: clean up ovf switch for floats.","State":"closed","Body":"This PR removes the TODO and switches for the add/sub/mul _ovf op codes for floats as they dont apply.","Url":"https://github.com/dotnet/corert/pull/8357","RelatedDescription":"Closed or merged PR \"Wasm: clean up ovf switch for floats.\" (#8357)"},{"Id":"714319950","IsPullRequest":false,"CreatedAt":"2020-10-04T13:58:23","Actor":"kengwang","Number":"8356","RawContent":null,"Title":"\"Segmentation fault\" on CentOS 7.8","State":"open","Body":"When I tried to start the program, it echoed `Segmentation fault`\r\nIt is alright running on Ubuntu.\r\n\r\n> Build on ubuntu-16.04\r\n> Run on CentOS Linux release 7.8.2003 (Core)\r\n\r\nHow could i deal with it","Url":"https://github.com/dotnet/corert/issues/8356","RelatedDescription":"Open issue \"\"Segmentation fault\" on CentOS 7.8\" (#8356)"},{"Id":"714296090","IsPullRequest":false,"CreatedAt":"2020-10-04T11:45:29","Actor":"kant2002","Number":"8354","RawContent":null,"Title":"CoreRT slower then regular .NET","State":"open","Body":"I thinking about checking how CoreRT works for the Wavelets and decide to use https://github.com/codeprof/TurboWavelets.Net as starting point.\r\n\r\nI migrate project to new SDK format and add Benchmarks.Net using samples provided.\r\n\r\nTo my disappointment regular .NET seems to be faster then CoreRT. \r\n\r\n```\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.12.1.1420-nightly, OS=Windows 10.0.18363.1082 (1909/November2019Update/19H2)\r\nIntel Core i7-6700HQ CPU 2.60GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET SDK=5.0.100-rc.1.20452.10\r\n  [Host]     : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  .NET 5.0   : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  CoreRt 5.0 : .NET 5.0.29330.02 @BuiltBy: dlab14-DDVSOWINAGE075 @Branch: master @Commit: 145402e00724acbc9e7636739140fb84f7d64845, X64 AOT\r\n\r\n\r\n|                Method |        Job |    Runtime |      Mean |    Error |   StdDev | Ratio | RatioSD |\r\n|---------------------- |----------- |----------- |----------:|---------:|---------:|------:|--------:|\r\n| Waveletimageupscaling |   .NET 5.0 |   .NET 5.0 | 155.72 ms | 3.267 ms | 9.426 ms |  1.00 |    0.00 |\r\n| Waveletimageupscaling | CoreRt 5.0 | CoreRt 5.0 | 167.68 ms | 3.303 ms | 9.478 ms |  1.08 |    0.09 |\r\n|                       |            |            |           |          |          |       |         |\r\n|      AdaptiveDeadzone |   .NET 5.0 |   .NET 5.0 |  30.40 ms | 0.588 ms | 0.764 ms |  1.00 |    0.00 |\r\n|      AdaptiveDeadzone | CoreRt 5.0 | CoreRt 5.0 |  33.79 ms | 0.683 ms | 1.763 ms |  1.14 |    0.08 |\r\n```\r\n\r\nSo I have generic questions.\r\n1. Does this results expected with CPU-bound workloads.\r\n2. What can I do to look more closely on this particular case.","Url":"https://github.com/dotnet/corert/issues/8354","RelatedDescription":"Open issue \"CoreRT slower then regular .NET\" (#8354)"},{"Id":"713880348","IsPullRequest":true,"CreatedAt":"2020-10-02T22:17:06","Actor":"yowl","Number":"8353","RawContent":null,"Title":"Wasm: Use the property for ShadowStackTop to ensure global exists","State":"closed","Body":"Depending on input, the first call to a RawPInvoke could occur before the shadow stack global was added.  This change requests the global via the property getter to ensure it is created before use.","Url":"https://github.com/dotnet/corert/pull/8353","RelatedDescription":"Closed or merged PR \"Wasm: Use the property for ShadowStackTop to ensure global exists\" (#8353)"},{"Id":"710664867","IsPullRequest":true,"CreatedAt":"2020-09-29T11:40:22","Actor":"tonerdo","Number":"8351","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"This PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass Class1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    [ThreadStatic]\r\n    public static int ThreadStaticField1;\r\n\r\n    static Class1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n        ThreadStaticField1 = 56;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    Class1 class1 = new Class1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(Class1.StaticField1);\r\n    Console.WriteLine(String.Empty);\r\n    Console.WriteLine(Class1.StaticField2);\r\n    Console.WriteLine(Class1.StaticField3);\r\n    Console.WriteLine(Class1.ThreadStaticField1);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n","Url":"https://github.com/dotnet/corert/pull/8351","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8351)"},{"Id":"709649946","IsPullRequest":false,"CreatedAt":"2020-09-27T02:19:00","Actor":"yowl","Number":"8349","RawContent":null,"Title":"Wasm: conv_r_un/4 should set to postive or negative infinity when too large","State":"open","Body":"","Url":"https://github.com/dotnet/corert/issues/8349","RelatedDescription":"Open issue \"Wasm: conv_r_un/4 should set to postive or negative infinity when too large\" (#8349)"},{"Id":"709582502","IsPullRequest":false,"CreatedAt":"2020-09-26T17:59:41","Actor":"yowl","Number":"8348","RawContent":null,"Title":"Question: ImportConvert unsigned parameter is always false","State":"open","Body":"`ImportConvert` in https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/Common/src/TypeSystem/IL/ILImporter.cs#L745-L766 is always passed `false` for the `unsigned` parameter (the last parameter), even on the unsigned conversions, `conv_ovf_u1`  Is there a reason for that?","Url":"https://github.com/dotnet/corert/issues/8348","RelatedDescription":"Open issue \"Question: ImportConvert unsigned parameter is always false\" (#8348)"},{"Id":"706262388","IsPullRequest":false,"CreatedAt":"2020-09-22T10:33:19","Actor":"teobugslayer","Number":"8347","RawContent":null,"Title":"Missing implementation of System.OperatingSystem.IsWindows","State":"open","Body":"Hi all,\r\n\r\nI am trying to write cross-platform code and my attempt to use `IsWindows` and `IsWindowsVersionAtLeast` fails:\r\n\r\n```\r\n  Generating native code\r\nEXEC : warning : Method `[ZX]ZX.ConsoleDisplay.Init(int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindows() [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\nEXEC : warning : Method `[ZX]ZX.Program.ValidateCanRun()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindowsVersionAtLeast(Int32, Int32, Int32, Int32) [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\n```\r\n\r\nWhat are my options to rectify the problem?","Url":"https://github.com/dotnet/corert/issues/8347","RelatedDescription":"Open issue \"Missing implementation of System.OperatingSystem.IsWindows\" (#8347)"},{"Id":"704206710","IsPullRequest":true,"CreatedAt":"2020-09-22T00:29:41","Actor":"RalfKornmannEnvision","Number":"8343","RawContent":null,"Title":"ARM64: RhpGcPoll","State":"closed","Body":"- Initial port of GCProbe.S for ARM64\r\n- Ensure RhpGcPoll & RhpGcPollRare are working","Url":"https://github.com/dotnet/corert/pull/8343","RelatedDescription":"Closed or merged PR \"ARM64: RhpGcPoll\" (#8343)"},{"Id":"705253015","IsPullRequest":false,"CreatedAt":"2020-09-21T03:12:25","Actor":"Powerlated","Number":"8346","RawContent":null,"Title":"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method ","State":"open","Body":"```\r\nUnhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nI am attempting to `dotnet publish -r win-x64 -c Release` a program and I receieve this error after the `Generating compatible native code.` message.","Url":"https://github.com/dotnet/corert/issues/8346","RelatedDescription":"Open issue \"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method \" (#8346)"},{"Id":"705078013","IsPullRequest":true,"CreatedAt":"2020-09-20T09:39:03","Actor":"RalfKornmannEnvision","Number":"8345","RawContent":null,"Title":"ARM64&Unix: New unwinder","State":"open","Body":"Implements a custom unwinder for ARM64 that does not need the generic CFI based libunwind functions. This way we only need to loop just once over all used registers instead of doing the complicated CFI process.This will improve the performances for everything that needs a stack walk.\r\n\r\nAdditional unwind data are generated and stored as part of the LSDA. \r\n-4 byte for a relative offset\r\n-3 byte for the CFA\r\n-3 byte for each register that is part of the prolog save\r\n-1 byte end marker\r\n\r\nWe still keep the CFI data for the debugger. Maybe the could be removed for a build without debug information.\r\n\r\nA possible future optimization would be to introduce a compact format for the information used by the most common cases. This could be stored in the relative offset. But compared to the replacement of libunwind the wins would be rather small.\r\n\r\nThe same can be done for any  other supported architecture but each one will require a custom unwind function","Url":"https://github.com/dotnet/corert/pull/8345","RelatedDescription":"Open PR \"ARM64&Unix: New unwinder\" (#8345)"},{"Id":"704803194","IsPullRequest":true,"CreatedAt":"2020-09-19T05:02:42","Actor":"toddsharpe","Number":"8344","RawContent":null,"Title":"Merge pull request #1 from dotnet/master","State":"closed","Body":"Updating CoreRT","Url":"https://github.com/dotnet/corert/pull/8344","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from dotnet/master\" (#8344)"},{"Id":"704118291","IsPullRequest":true,"CreatedAt":"2020-09-18T14:58:08","Actor":"RalfKornmannEnvision","Number":"8342","RawContent":null,"Title":"ARM64: Additional debug checks during exception handling","State":"closed","Body":"- Reenable stored register trashing as the debugger has no issues with it.\r\n- Implement missing call to RhpValidateExInfoPop","Url":"https://github.com/dotnet/corert/pull/8342","RelatedDescription":"Closed or merged PR \"ARM64: Additional debug checks during exception handling\" (#8342)"},{"Id":"703323520","IsPullRequest":true,"CreatedAt":"2020-09-17T22:10:42","Actor":"RalfKornmannEnvision","Number":"8339","RawContent":null,"Title":"ARM64: EH helper use always RhpGetThread","State":"closed","Body":"To simplify the code the exception handling assembler helpers use now always RhpGetThread. This will add some small additional overhead when the regular TLS code could have been inlined. But as EH needs an expensive stack walk anyway it will have no significant impact overall.\r\n\r\nfunclets store all parameters and the thread object as local variable to avoid making the expensive call twice.\r\n\r\nAs the new code needs more stack space it is although increased for the asm variant to avoid having different sizes as the stack frame iterator needs to know.","Url":"https://github.com/dotnet/corert/pull/8339","RelatedDescription":"Closed or merged PR \"ARM64: EH helper use always RhpGetThread\" (#8339)"},{"Id":"703745563","IsPullRequest":true,"CreatedAt":"2020-09-17T18:32:32","Actor":"RalfKornmannEnvision","Number":"8341","RawContent":null,"Title":"ARM64:  support TRASH_SAVED_ARGUMENT_REGISTERS for UniversalTransition","State":"closed","Body":"implements the missing TRASH_SAVED_ARGUMENT_REGISTERS debug part for UniversalTransition","Url":"https://github.com/dotnet/corert/pull/8341","RelatedDescription":"Closed or merged PR \"ARM64:  support TRASH_SAVED_ARGUMENT_REGISTERS for UniversalTransition\" (#8341)"},{"Id":"703468371","IsPullRequest":true,"CreatedAt":"2020-09-17T14:16:05","Actor":"RalfKornmannEnvision","Number":"8340","RawContent":null,"Title":"ARM64: RhNewString use MAX_STRING_LENGTH","State":"closed","Body":"The code had a hardcoded (to high) maximum string length for the overflow check","Url":"https://github.com/dotnet/corert/pull/8340","RelatedDescription":"Closed or merged PR \"ARM64: RhNewString use MAX_STRING_LENGTH\" (#8340)"},{"Id":"702933577","IsPullRequest":true,"CreatedAt":"2020-09-16T21:40:20","Actor":"yowl","Number":"8337","RawContent":null,"Title":"Wasm: fix copying of generic struct return value","State":"closed","Body":"This PR fixes a silly mistake copying generic struct return values where the first element was copied to all elements.  \r\nTest extended to catch this mistake.","Url":"https://github.com/dotnet/corert/pull/8337","RelatedDescription":"Closed or merged PR \"Wasm: fix copying of generic struct return value\" (#8337)"},{"Id":"702985331","IsPullRequest":true,"CreatedAt":"2020-09-16T21:39:46","Actor":"GrabYourPitchforks","Number":"8338","RawContent":null,"Title":"Remove reference to old dumpling URL","State":"closed","Body":"The host __dumpling.azurewebsites.net__ has been decommissioned for a while. This updates the dumpling helper scripts to remove references to the old host.","Url":"https://github.com/dotnet/corert/pull/8338","RelatedDescription":"Closed or merged PR \"Remove reference to old dumpling URL\" (#8338)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"722859606","IsPullRequest":true,"CreatedAt":"2020-10-16T04:00:16","Actor":"dotnet-maestro[bot]","Number":"14193","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/roslyn","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201016.2\r\n- **Date Produced**: 10/16/2020 3:39 AM\r\n- **Commit**: 5fad08ef408ec0f001fa8bdd89f54b5767af1cb6\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20515.13 to 3.8.0-5.20516.2][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/6205045...5fad08e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14193","RelatedDescription":"Open PR \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14193)"},{"Id":"722841900","IsPullRequest":true,"CreatedAt":"2020-10-16T03:38:50","Actor":"dotnet-maestro[bot]","Number":"14192","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.13\r\n- **Date Produced**: 10/16/2020 2:26 AM\r\n- **Commit**: d052b228748ff865b9c8148ac0c7218ebffaae39\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.12 to 5.0.0-rtm.20515.13][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/5f2390b...d052b22\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14192","RelatedDescription":"Open PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14192)"},{"Id":"722779278","IsPullRequest":true,"CreatedAt":"2020-10-16T03:35:41","Actor":"dotnet-maestro[bot]","Number":"14187","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.12\r\n- **Date Produced**: 10/16/2020 12:28 AM\r\n- **Commit**: 5f2390b990337b958fd9f96467a16111cd422e87\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.7 to 5.0.0-rtm.20515.12][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/73690b2...5f2390b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14187","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14187)"},{"Id":"722760306","IsPullRequest":true,"CreatedAt":"2020-10-16T02:46:07","Actor":"dotnet-maestro[bot]","Number":"14186","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201015.13\r\n- **Date Produced**: 10/15/2020 11:32 PM\r\n- **Commit**: 620504581b7797fa75aa982956715bb8ae2a8857\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20515.7 to 3.8.0-5.20515.13][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/713efb0...6205045\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14186","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14186)"},{"Id":"722815913","IsPullRequest":false,"CreatedAt":"2020-10-16T02:39:30","Actor":"wli3","Number":"14190","RawContent":null,"Title":"Update minimum-os-version.md","State":"closed","Body":"https://github.com/dotnet/designs/blob/master/accepted/2020/minimum-os-version/minimum-os-version.md\r\n\r\nShould be in sync with the actual naming in implementation. https://github.com/dotnet/runtime/pull/38604\r\n\r\nAlso we should mention the property in project file `MinimumOSPlatform` will end up in `MinimumOSPlatform` attribute\r\nhttps://github.com/dotnet/sdk/issues/11239","Url":"https://github.com/dotnet/sdk/issues/14190","RelatedDescription":"Closed issue \"Update minimum-os-version.md\" (#14190)"},{"Id":"722815744","IsPullRequest":false,"CreatedAt":"2020-10-16T02:38:57","Actor":"mhutch","Number":"14189","RawContent":null,"Title":"Resolving TargetPlatformMinVersion vs OSMinimumVersion ","State":"closed","Body":"As explained in the [minimum versions spec](https://github.com/dotnet/designs/blob/master/accepted/2020/minimum-os-version/minimum-os-version.md#os-versions), platform-specific apps can have three different settings related to the OS version: the OS API Version, the OS Minimum Version, and the OS Target Version.\r\n\r\nWindows UWP projects already have MSBuild properties, the `TargetPlatformVersion` and `TargetPlatformMinVersion`, which are equivalent to the OS API Version and OS Target Version respectively. The [.NET 5 TFM spec](https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md) proposes using this existing `TargetPlatformVersion` property to represent the OS API Version for all platforms, and assumes `TargetPlatformMinVersion`  in its examples.\r\n\r\nThese two specs currently conflict:\r\n\r\n* Using `TargetPlatformVersion` for the API version makes it easily confused with the OS Target Version. The concept of a 'target os/platform' is overloaded - in .NET it means the API set, whereas in Android it means the version of the OS that the app is targeted against. The difference is subtle, but these are fundamentally two different _kinds_ of versions, and in some cases they might not align.\r\n\r\n* Using `TargetPlatformMinVersion` for the minimum OS version implies that this is the same _kind_ of version as the `TargetPlatformVersion`, but that's an API version not an OS version.\r\n\r\nThe simplest solution that's consistent with existing .NET idioms is probably to use `TargetPlatformVersion` for the API version but to use `OSMinimumVersion` and `OSTargetVersion`  for the two other versions. This makes a distinction between the \"OS version\" as the version of the operating system and the \"platform version\" as the API version.","Url":"https://github.com/dotnet/sdk/issues/14189","RelatedDescription":"Closed issue \"Resolving TargetPlatformMinVersion vs OSMinimumVersion \" (#14189)"},{"Id":"722733953","IsPullRequest":true,"CreatedAt":"2020-10-16T01:54:29","Actor":"dotnet-maestro[bot]","Number":"14184","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: from 5.0.0-rtm.20514.9 to 5.0.0-rtm.20515.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 9a9ecb59-f847-42f2-2111-08d85e71258f\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/15/2020 10:50 PM\r\n- **Commit**: 11a9db9b3d1d86207e2e5bd89b5880cf3dd205fc\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App**: [from 5.0.0-rtm.20515.1 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1][2]\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1][2]\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.0-rtm.20514.9 to 5.0.0-rtm.20515.1][3]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/24e2e1c...11a9db9\r\n[2]: https://github.com/dotnet/wpf/compare/8c2cdd6...79755fb\r\n[3]: https://github.com/dotnet/winforms/compare/8794266...d812af0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14184","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop\" (#14184)"},{"Id":"722691501","IsPullRequest":true,"CreatedAt":"2020-10-16T00:06:33","Actor":"dotnet-maestro[bot]","Number":"14182","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.7\r\n- **Date Produced**: 10/15/2020 8:22 PM\r\n- **Commit**: 73690b27aeb842a7f738782ee809af9b99f6f8fb\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.6 to 5.0.0-rtm.20515.7][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/753dad3...73690b2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14182","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14182)"},{"Id":"722744526","IsPullRequest":true,"CreatedAt":"2020-10-15T23:14:39","Actor":"dsplaisted","Number":"14185","RawContent":null,"Title":"Fix package downgrade errors","State":"open","Body":"Fix errors such as the following:\r\n\r\n> C:\\git\\dotnet-sdk\\src\\Resolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.csproj error NU1605: Detected package downgrade: System.Diagnostics.Debug from 4.3.0 to 4.0.11. Reference the package directly from the project to select a different version. \r\n Microsoft.DotNet.MSBuildSdkResolver -> Microsoft.DotNet.Cli.Utils -> NuGet.Packaging 5.8.0-rc.6860 -> Newtonsoft.Json 9.0.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Diagnostics.Debug (>= 4.3.0) \r\n Microsoft.DotNet.MSBuildSdkResolver -> Microsoft.DotNet.Cli.Utils -> NuGet.Packaging 5.8.0-rc.6860 -> Newtonsoft.Json 9.0.1 -> System.Diagnostics.Debug (>= 4.0.11) [C:\\git\\dotnet-sdk\\sdk.sln]\r\n\r\nThis is caused by this issue: https://github.com/dotnet/sdk/issues/3044\r\n\r\n@sfoslund thinks this may have been introduced with #14133.  I'm not sure exactly how that would trigger this issue, or why it wouldn't have been caught in CI.","Url":"https://github.com/dotnet/sdk/pull/14185","RelatedDescription":"Open PR \"Fix package downgrade errors\" (#14185)"},{"Id":"722729567","IsPullRequest":true,"CreatedAt":"2020-10-15T22:56:51","Actor":"AntonLapounov","Number":"14183","RawContent":null,"Title":"Re-enable crossgen2 tests","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/14183","RelatedDescription":"Open PR \"Re-enable crossgen2 tests\" (#14183)"},{"Id":"722598313","IsPullRequest":true,"CreatedAt":"2020-10-15T22:48:47","Actor":"dotnet-maestro[bot]","Number":"14181","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d246c53-0b7a-45da-ebd3-08d85e711a64)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d246c53-0b7a-45da-ebd3-08d85e711a64\r\n- **Build**: 20201015.3\r\n- **Date Produced**: 10/15/2020 6:45 PM\r\n- **Commit**: 25e8b0d01e5ad0154694b4b35c821e23bc09d412\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.HostModel**: [from 5.0.0-rtm.20514.6 to 5.0.0-rtm.20515.3][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20514.6 to 5.0.0-rtm.20515.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encoding.CodePages**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2d8e19f...25e8b0d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d246c53-0b7a-45da-ebd3-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14181","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/runtime\" (#14181)"},{"Id":"722570782","IsPullRequest":true,"CreatedAt":"2020-10-15T21:33:03","Actor":"dotnet-maestro[bot]","Number":"14180","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.6\r\n- **Date Produced**: 10/15/2020 6:09 PM\r\n- **Commit**: 753dad3e3fdc078a12543d52fb6b71348a4d092b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20515.2 to 5.0.0-rtm.20515.6][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/8b66c99...753dad3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14180","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14180)"},{"Id":"722386351","IsPullRequest":true,"CreatedAt":"2020-10-15T18:15:18","Actor":"dotnet-maestro[bot]","Number":"14178","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:06521866-82a6-4cf3-2f03-08d85e5f2673)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 06521866-82a6-4cf3-2f03-08d85e5f2673\r\n- **Build**: 20201012.3\r\n- **Date Produced**: 10/12/2020 8:22 PM\r\n- **Commit**: 31980633108a1bef00c798136fcd30a873c90fa3\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Common.ItemTemplates**: [from 5.0.0-rtm.20509.1 to 5.0.0][1]\r\n  - **Microsoft.TemplateEngine.Cli**: [from 5.0.0-rtm.20509.1 to 5.0.0-rtm.20512.3][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/d4d8412...3198063\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:06521866-82a6-4cf3-2f03-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14178","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/templating\" (#14178)"},{"Id":"722388466","IsPullRequest":true,"CreatedAt":"2020-10-15T17:18:05","Actor":"dotnet-maestro[bot]","Number":"14179","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d246c53-0b7a-45da-ebd3-08d85e711a64)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d246c53-0b7a-45da-ebd3-08d85e711a64\r\n- **Build**: 20201014.6\r\n- **Date Produced**: 10/14/2020 8:23 PM\r\n- **Commit**: 2d8e19f1880c655bcc0994852f41b47341e2c566\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.HostModel**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20514.6][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20514.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encoding.CodePages**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/78740be...2d8e19f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d246c53-0b7a-45da-ebd3-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14179","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/runtime\" (#14179)"},{"Id":"722197984","IsPullRequest":true,"CreatedAt":"2020-10-15T12:58:21","Actor":"dotnet-maestro[bot]","Number":"14177","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/15/2020 9:16 AM\r\n- **Commit**: 8b66c99886a05ddd2ddb1ceda0d52f452c7e2a9b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20514.8 to 5.0.0-rtm.20515.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/dd2754c...8b66c99\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14177","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14177)"},{"Id":"722133343","IsPullRequest":true,"CreatedAt":"2020-10-15T11:47:50","Actor":"dotnet-maestro[bot]","Number":"14173","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.4 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.4 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.9 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 9a9ecb59-f847-42f2-2111-08d85e71258f\r\n- **Build**: 20201015.1\r\n- **Date Produced**: 10/15/2020 8:38 AM\r\n- **Commit**: 24e2e1c096851c702055467f5e07ecc5c34452d0\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20515.1][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.4][2]\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.4][2]\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.9][3]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/7ba48d6...24e2e1c\r\n[2]: https://github.com/dotnet/wpf/compare/75ac545...8c2cdd6\r\n[3]: https://github.com/dotnet/winforms/compare/9bbe8c1...8794266\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14173","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop\" (#14173)"},{"Id":"722155687","IsPullRequest":true,"CreatedAt":"2020-10-15T11:26:33","Actor":"dotnet-maestro[bot]","Number":"14175","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: fe6e5bc9-bc04-4376-6b6a-08d85e7136ee\r\n- **Build**: 20201015.7\r\n- **Date Produced**: 10/15/2020 8:57 AM\r\n- **Commit**: 713efb0e68d34ab75faaf709e071e5c2d8d4ed0e\r\n- **Branch**: refs/heads/release/dev16.8-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.8.0-5.20514.2 to 3.8.0-5.20515.7][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/e0d0c92...713efb0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fe6e5bc9-bc04-4376-6b6a-08d85e7136ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14175","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/roslyn\" (#14175)"},{"Id":"722084479","IsPullRequest":true,"CreatedAt":"2020-10-15T10:13:35","Actor":"dotnet-maestro[bot]","Number":"14170","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201014.8\r\n- **Date Produced**: 10/15/2020 7:23 AM\r\n- **Commit**: dd2754c2c956578ec02788713a1ebf1510f1cb5a\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20514.7 to 5.0.0-rtm.20514.8][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/bf288c4...dd2754c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14170","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14170)"},{"Id":"722189493","IsPullRequest":true,"CreatedAt":"2020-10-15T10:04:22","Actor":"dotnet-maestro[bot]","Number":"14176","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20201015.2\r\n- **Date Produced**: 10/15/2020 12:06 PM\r\n- **Commit**: d667a95b7a095d0b6bcbb26a49fd1b30aefceb6f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Common.ItemTemplates**: [from 6.0.0-alpha.1.20514.1 to 6.0.0-alpha.1.20515.2][1]\r\n  - **Microsoft.TemplateEngine.Cli**: [from 6.0.0-alpha.1.20514.1 to 6.0.0-alpha.1.20515.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/b930c7c...d667a95\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14176","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#14176)"},{"Id":"722140629","IsPullRequest":false,"CreatedAt":"2020-10-15T08:59:44","Actor":"meaning1","Number":"14174","RawContent":null,"Title":"Why TryUpdateModel cannot bind data to ModelState?","State":"open","Body":"Here is my action:\r\n```\r\npublic async Task<IActionResult> Test() {\r\n\r\n            FieldValue f = new FieldValue { Id = 1, Name = \"n1\" };\r\n            var updateResult = await TryUpdateModelAsync(\r\n                f,\r\n                \"\");\r\n            if (ModelState.IsValid)\r\n            {\r\n            }\r\n            \r\n            return Ok();\r\n        }\r\n```\r\nFieldValue:\r\n```\r\n[ModelBinder(BinderType = typeof(TestModelBinder))]\r\n    public class FieldValue\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n    }\r\n    public class TestModelBinder : IModelBinder\r\n    {\r\n        public async Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            var model = new FieldValue { Id = 1, Name = \"a\" };\r\n            bindingContext.Result = ModelBindingResult.Success(model);\r\n        }\r\n    }\r\n```\r\nresult:\r\n![image](https://user-images.githubusercontent.com/55533760/96101072-a279a180-0f07-11eb-916d-2c81df4cd859.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/14174","RelatedDescription":"Open issue \"Why TryUpdateModel cannot bind data to ModelState?\" (#14174)"},{"Id":"722132403","IsPullRequest":true,"CreatedAt":"2020-10-15T08:49:09","Actor":"dotnet-maestro[bot]","Number":"14172","RawContent":null,"Title":"[master] Update dependencies from microsoft/vstest","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d8a596af-c18d-4760-2df5-08d849c580d6)\r\n## From https://github.com/microsoft/vstest\r\n- **Subscription**: d8a596af-c18d-4760-2df5-08d849c580d6\r\n- **Build**: 20201015-01\r\n- **Date Produced**: 10/15/2020 8:47 AM\r\n- **Commit**: 2f9043df695fc5fe7548d1467ba49c5a3a4461a2\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Test.Sdk**: [from 16.9.0-preview-20201013-01 to 16.9.0-preview-20201015-01][1]\r\n\r\n[1]: https://github.com/microsoft/vstest/compare/d834b9b...2f9043d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d8a596af-c18d-4760-2df5-08d849c580d6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14172","RelatedDescription":"Open PR \"[master] Update dependencies from microsoft/vstest\" (#14172)"},{"Id":"722124332","IsPullRequest":true,"CreatedAt":"2020-10-15T08:38:21","Actor":"dotnet-maestro[bot]","Number":"14171","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 9ac01057-d33d-4509-c9e1-08d846b6e5b9\r\n- **Build**: 20201015.1\r\n- **Date Produced**: 10/15/2020 8:25 AM\r\n- **Commit**: 2b7484c51c63883f2dff04212832debbb4554b30\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 6.0.0-alpha.1.20514.2 to 6.0.0-alpha.1.20515.1][1]\r\n\r\n[1]: https://github.com/mono/linker/compare/7a506b2...2b7484c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14171","RelatedDescription":"Open PR \"[master] Update dependencies from mono/linker\" (#14171)"},{"Id":"722077061","IsPullRequest":false,"CreatedAt":"2020-10-15T07:29:05","Actor":"ppittle","Number":"14169","RawContent":null,"Title":"How to install/use CrossGen to optimize .NET Core Library as part of ci/cd?","State":"open","Body":"I am attempting to pre-jit/Ahead-Of-Time (AOT) compile a .NET Core 5 _Library_ to a Native Image using the CrossGen utility as [described here](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) to improve start up time.\r\n\r\nHowever the instructions for [Getting CrossGen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) are vague:\r\n\r\n> If you install CoreCLR using a NuGet package, you can find CrossGen in the tools folder of the NuGet package.\r\n\r\n**How do I install CrossGen via NuGet?**\r\n\r\n### What I've tried so far:\r\n\r\n1. Create a build script that writes `deleteme.csproj` to disk and has a `<PackageReference Include=\"Microsoft.NETCore.App.Runtime.win-x64\" Version=\"3.1.6\" />`\r\n\r\n2. Run `dotnet restore deleteme.csproj`.  This will download the Crossgen nuget package to local cache.\r\n\r\n3. I can now run `~/.nuget/packages/microsoft.netcore.app.runtime.win-x64\\3.1.6\\tools\\crossgen.exe`\r\n\r\n**_NOTE:_** I know I can use the **ReadyToRun** feature for Self-Contained Deployment executable (as [described here](https://codetherapist.com/blog/netconf-netcore3-crossgen/)) HOWEVER I need to optimize a Class Library, so ReadyToRun doesn't work. \r\n\r\n### Problem\r\n\r\n1. The [Nuget package has a big warning](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.win-x64/3.1.6):\r\n \r\n> Internal implementation package not meant for direct consumption. Please do not reference directly. \r\n2. Installation like this seems incorrect. I'd expect CrossGen to be installed as a [dotnet tool](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools) rather than needing to create a dummy project and run `dotnet restore` in order to download a copy of a nuget package in cache.\r\n\r\n**Is there a correct way to pre-jit a .NET Core 5 _Library_ during a ci/cd build?**\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/14169","RelatedDescription":"Open issue \"How to install/use CrossGen to optimize .NET Core Library as part of ci/cd?\" (#14169)"},{"Id":"721950067","IsPullRequest":true,"CreatedAt":"2020-10-15T06:24:30","Actor":"dotnet-maestro[bot]","Number":"14167","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3 (parent: Microsoft.WindowsDesktop.App)\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 9a9ecb59-f847-42f2-2111-08d85e71258f\r\n- **Build**: 20201014.4\r\n- **Date Produced**: 10/15/2020 2:14 AM\r\n- **Commit**: 7ba48d6495a74d8ebfd53269483eacf4b2249c49\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.WindowsDesktop.App**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.4][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3][2]\r\n  - **Microsoft.DotNet.Wpf.ProjectTemplates**: [from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3][2]\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.0-rtm.20514.2 to 5.0.0-rtm.20514.3][3]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/74ee93f...7ba48d6\r\n[2]: https://github.com/dotnet/wpf/compare/6c4051a...75ac545\r\n[3]: https://github.com/dotnet/winforms/compare/d74c713...9bbe8c1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9a9ecb59-f847-42f2-2111-08d85e71258f)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14167","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/windowsdesktop\" (#14167)"},{"Id":"721930372","IsPullRequest":true,"CreatedAt":"2020-10-15T05:28:17","Actor":"dotnet-maestro[bot]","Number":"14166","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201014.7\r\n- **Date Produced**: 10/15/2020 1:27 AM\r\n- **Commit**: bf288c40b3690f8b3db03ec783dfe29f1a6ba01d\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20514.5 to 5.0.0-rtm.20514.7][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/8670567...bf288c4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14166","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14166)"},{"Id":"721961233","IsPullRequest":false,"CreatedAt":"2020-10-15T04:24:11","Actor":"acple","Number":"14168","RawContent":null,"Title":"`dotnet test` CLI command doesn't work with multi-targeting projects","State":"open","Body":"**Since rc.1**, when the test target is a multi target framework project, `dotnet test` cli command fails in a build step.\r\n\r\n## Repro\r\n\r\n[my repro repsitory](https://github.com/acple/SdkRc1Problem)\r\n\r\n1. Create test target and unittest project\r\n\r\n```csproj\r\n<!--ClassLibrary1/ClassLibrary1.csproj-->\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <!--Use Multiple Target-->\r\n    <TargetFrameworks>netstandard2.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```csharp\r\nnamespace ClassLibrary1\r\n{\r\n    public class Class1\r\n    { }\r\n}\r\n```\r\n\r\n```csproj\r\n<!--UnitTest/UnitTest.csproj-->\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.7.1\" />\r\n    <PackageReference Include=\"MSTest.TestAdapter\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"MSTest.TestFramework\" Version=\"2.1.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"../ClassLibrary1/ClassLibrary1.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```csharp\r\n[TestMethod]\r\npublic void Test1()\r\n{\r\n    _ = new Class1();\r\n}\r\n```\r\n\r\n2. Add both projects into .sln\r\n\r\n```console\r\n$ dotnet new sln\r\n$ dotnet sln add ClassLibrary1\r\n$ dotnet sln add UnitTest\r\n```\r\n\r\n3. Run `dotnet test` **for .sln**\r\n\r\n```console\r\n$ dotnet test\r\n```\r\n\r\n4. It fails while compiling\r\n\r\n> /UnitTest/UnitTest1.cs(1,7): error CS0246: The type or namespace name 'ClassLibrary1' could not be found (are you missing a using directive or an assembly reference?) [/UnitTest/UnitTest.csproj]\r\n\r\n## Workaround\r\n\r\n### 1. Use `--no-build` option to skip build step\r\n\r\n`dotnet build && dotnet test --no-build`\r\n\r\n### 2. Specify unittest target framework explicitly\r\n`dotnet test -f net5.0`\r\n\r\n### 3. Run test for .csproj instead of .sln\r\n`dotnet test UnitTest`\r\n\r\n---\r\n\r\nThis was working correctly until .NET 5 SDK preview.8.","Url":"https://github.com/dotnet/sdk/issues/14168","RelatedDescription":"Open issue \"`dotnet test` CLI command doesn't work with multi-targeting projects\" (#14168)"},{"Id":"721867139","IsPullRequest":true,"CreatedAt":"2020-10-15T02:51:52","Actor":"dotnet-maestro[bot]","Number":"14164","RawContent":null,"Title":"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: ed9a7502-c9f2-4796-ebd2-08d85e711a64\r\n- **Build**: 20201014.5\r\n- **Date Produced**: 10/14/2020 11:27 PM\r\n- **Commit**: 86705673c7e341c9a58d9a99d9d5192fb4329104\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-dev-certs**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **dotnet-user-secrets**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **dotnet-watch**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **VS.Redist.Common.AspNetCore.TargetingPack.x64.5.0**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 5.0.0-rtm.20514.3 to 5.0.0-rtm.20514.5][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/a0ab096...8670567\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ed9a7502-c9f2-4796-ebd2-08d85e711a64)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/14164","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx] Update dependencies from dotnet/aspnetcore\" (#14164)"},{"Id":"721875475","IsPullRequest":false,"CreatedAt":"2020-10-15T00:13:38","Actor":"nkolev92","Number":"14165","RawContent":null,"Title":"Should _CheckForInvalidTargetPlatformVersion look at the moniker instead of the version only?","State":"open","Body":"Take a project that's using alias to target a net5.0-windows like framework. \r\n\r\nExample: \r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>stuff</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' == 'stuff' \">\r\n    <TargetFrameworkIdentifier>.NetCoreApp</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>\r\n    <TargetFrameworkMoniker>.NETCoreApp,Version=v5.0</TargetFrameworkMoniker>\r\n    <TargetPlatformIdentifier>Windows</TargetPlatformIdentifier>\r\n    <TargetPlatformVersion>3.0</TargetPlatformVersion>\r\n    <TargetPlatformMoniker>Windows,Version=3.0</TargetPlatformMoniker>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThis would fail with an error such as: \r\n\r\n> C:\\Program Files\\dotnet\\sdk\\5.0.100-rc.2.20479.15\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(213,5): error NETSDK1140: 3.0 is not a valid TargetPlatformVersion for Windows. Valid versions include: [C:\\Users\\Roki2\\Documents\\Code\\test\\alias\\alias.csproj]\r\n\r\nThat's awesome! It's what we want. \r\n\r\nChange to:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>stuff</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' == 'stuff' \">\r\n    <TargetFrameworkIdentifier>.NetCoreApp</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>\r\n    <TargetFrameworkMoniker>.NETCoreApp,Version=v5.0</TargetFrameworkMoniker>\r\n    <TargetPlatformIdentifier>Windows</TargetPlatformIdentifier>\r\n    <TargetPlatformMoniker>Windows</TargetPlatformMoniker>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThis doesn't fail at build time, primarily because `_CheckForInvalidTargetPlatformVersion` looks at the TargetPlatformVersion, which defaults to 7.0. \r\n\r\nI think this check should consider checking the moniker, because it's the moniker that's preferred.\r\n\r\ncc @zkat @aortiz-msft ","Url":"https://github.com/dotnet/sdk/issues/14165","RelatedDescription":"Open issue \"Should _CheckForInvalidTargetPlatformVersion look at the moniker instead of the version only?\" (#14165)"},{"Id":"722814499","IsPullRequest":false,"CreatedAt":"2020-08-17T22:05:16","Actor":"wli3","Number":"14188","RawContent":null,"Title":"how manifest should be stored","State":"open","Body":"these 2 disagrees.\r\nhttps://github.com/dotnet/designs/blob/master/accepted/2020/workloads/workload-resolvers.md#sdk-behavior\r\nhttps://github.com/dotnet/designs/pull/120\r\n\r\nAnd if there is no version in the path for the manifest file. Should the manifest file include the version of itself? We need a way to track the manifest version","Url":"https://github.com/dotnet/sdk/issues/14188","RelatedDescription":"Open issue \"how manifest should be stored\" (#14188)"},{"Id":"722816580","IsPullRequest":false,"CreatedAt":"2020-04-27T22:31:55","Actor":"0xCA","Number":"14191","RawContent":null,"Title":"True self-contained builds","State":"open","Body":"Currently there is a Visual C++ Redistributable 2015 requirement for .Net Core 3. This way we can't have truly portable apps without the need of installing dependency first.\r\n\r\nSelf-contained option is really useful, but it's not truly self-contained for now. It's easy to imagine several situations where completely independent assembly would be great to have. Utility app that should run from USB drive on any Win7SP1+ computer, client app that should work without administrator access at limited workstations (installing vcredist requires it), etc.\r\n\r\nI'm sorry if there is a way to have it already which I couldn't find. Or if it is a wrong place or wrong way to write my suggestion. But if it's right it'd be great to have these scenarios covered.\r\nThank you for your work! I can't wait for .Net 5 and AOT.","Url":"https://github.com/dotnet/sdk/issues/14191","RelatedDescription":"Open issue \"True self-contained builds\" (#14191)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"720690315","IsPullRequest":false,"CreatedAt":"2020-10-13T19:01:25","Actor":"TaraOverfield","Number":"166","RawContent":null,"Title":"October 2020 .NET Updates ","State":"open","Body":"The following .NET updates were released on October 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [October 2020 Updates – 2.1.23 and 3.1.9](https://devblogs.microsoft.com/dotnet/net-core-october-2020/)\r\n  * .NET Core 3.1.9 and .NET Core SDK 3.1.109 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.9/3.1.9.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.23 and .NET Core SDK 2.1.811 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.23/2.1.23.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* .[NET Core support for Ubuntu 20.10](https://github.com/dotnet/core/issues/5017)\r\n* .[NET Core Support for Fedora 33](https://github.com/dotnet/core/issues/5018)\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [October 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/)\r\n* [Republishing of July 2020 Security Only Updates](https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/166","RelatedDescription":"Open issue \"October 2020 .NET Updates \" (#166)"},{"Id":"696061299","IsPullRequest":false,"CreatedAt":"2020-09-08T17:44:01","Actor":"rbhanda","Number":"165","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.\r\n\r\nThe ASP.NET Core cookie parser decodes entire cookie strings which could allow a malicious attacker to set a second cookie with the name being percent encoded.\r\n\r\nThe security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/25701\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.7 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.21 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.8 or SDK 3.1.108 (for Visual Studio 2019 v16.4) or 3.1.402 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1045](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1045)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 8, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-09-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/165","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\" (#165)"},{"Id":"696046001","IsPullRequest":false,"CreatedAt":"2020-09-08T17:20:15","Actor":"TaraOverfield","Number":"164","RawContent":null,"Title":"September 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [September 2020 Updates – 2.1.22 and 3.1.8](https://devblogs.microsoft.com/dotnet/net-core-september-2020/)\r\n  * .NET Core 3.1.8 and .NET Core SDK 3.1.108 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.8/3.1.8.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.22 and .NET Core SDK 2.1.810 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.22/2.1.22.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n* [September 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-cumulative-update-preview-update/)\r\n* [October 1, 2020 Cumulative Update Preview Update for Windows 10, version 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-october-1-2020-cumulative-update-preview-update-for-windows-10-version-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Open issue \"September 2020 .NET Updates\" (#164)"},{"Id":"677090197","IsPullRequest":false,"CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Number":"163","RawContent":null,"Title":"August 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Framework\r\n* [August 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-august-2020-security-and-quality-rollup-updates/)\r\n\r\n* [August 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/august-2020-cumulative-update-preview/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Open issue \"August 2020 .NET Updates\" (#163)"},{"Id":"677046311","IsPullRequest":false,"CreatedAt":"2020-08-11T17:08:44","Actor":"rbhanda","Number":"162","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/24796\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.6 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.20 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162)"},{"Id":"658602325","IsPullRequest":false,"CreatedAt":"2020-07-16T21:51:58","Actor":"clairernovotny","Number":"161","RawContent":null,"Title":"Moving microsoft/MSBuild to dotnet/MSBuild","State":"open","Body":"Early next week, we are planning to move `microsoft/msbuild` to `dotnet/msbuild` as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523","Url":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Open issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161)"},{"Id":"656777247","IsPullRequest":false,"CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Number":"160","RawContent":null,"Title":"July 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n  * .NET Core 3.1.6 and .NET Core SDK 3.1.106 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.20 and .NET Core SDK 2.1.808 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* [.NET Core support for Ubuntu 19.10 -- EOL](https://github.com/dotnet/core/issues/4925)\r\n\r\n## .NET Framework\r\n* [July 2020 Security and Quality Rollup Updates]( https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/)\r\n\r\n* [July 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/)\r\n\r\n* [July 2020 Cumulative Update Preview for Windows 10, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/)\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Open issue \"July 2020 .NET Updates\" (#160)"},{"Id":"656765637","IsPullRequest":false,"CreatedAt":"2020-07-14T17:06:53","Actor":"rbhanda","Number":"159","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability ","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/39296\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.6 or SDK 3.1.106 (for Visual Studio 2019 v16.4) or 3.1.302 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n","Url":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \" (#159)"},{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n   * .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n   * .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n* [Alpine 3.12 ](https://github.com/dotnet/core/issues/4750) is now  supported.","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1316887583205609474","CreatedAt":"2020-10-15T23:44:01+00:00","UserScreenname":"dotnet","Text":"Code for cotton or from your love for #Xamarin in this year's #Hacktoberfest! Get the guidelines, tag your pull req… https://t.co/CN9Zonr5V4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"1316843795523215362","CreatedAt":"2020-10-15T20:50:01+00:00","UserScreenname":"dotnet","Text":"Happening now #OnDotNET Live, we see @nthonyChu talk about the new Azure Static Web Apps service for developing mod… https://t.co/2Zqpi9Y5rg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"1316791957134479362","CreatedAt":"2020-10-15T17:24:02+00:00","UserScreenname":"dotnet","Text":"What is #GitHub Codespaces?\n\n#dotNETRocks talks to @anthony_vdh about unifying the online dev environment for two v… https://t.co/Jy63NpPtQN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1316757220932153344","CreatedAt":"2020-10-15T15:06:00+00:00","UserScreenname":"dotnet","Text":"Learn how Dapr (@daprdev)  makes it easy for developers to build resilient microservice applications in this episod… https://t.co/jd2XBo5gwD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":38,"FavoriteCount":12,"RawContent":null},{"Id":"1316749424559882240","CreatedAt":"2020-10-15T14:35:01+00:00","UserScreenname":"dotnet","Text":"Bringing a renewed, simplified, end-to-end experience for developers to build secured-by-default web apps or web AP… https://t.co/liu7Ugg9Oh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":10,"RawContent":null},{"Id":"1316718717095440386","CreatedAt":"2020-10-15T12:33:00+00:00","UserScreenname":"dotnet","Text":"In this week's session of #OnDotNET Live, @nthonychu comes on to talk Azure Static Web apps and what it means for .… https://t.co/JqQYAqBDqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"1316523681997299713","CreatedAt":"2020-10-14T23:38:00+00:00","UserScreenname":"dotnet","Text":"Blazor Server provides support for hosting Razor components on the server in an #ASPNET Core app. \n\nThis post shows… https://t.co/0BDinuXGrK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":18,"RawContent":null},{"Id":"1316472673724248070","CreatedAt":"2020-10-14T20:15:18+00:00","UserScreenname":"dotnet","Text":"Why was #dotNET 5 was created?\n@JamesMontemagno shares. https://t.co/2UcIRYKbOE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":135,"FavoriteCount":43,"RawContent":null},{"Id":"1316427297340219392","CreatedAt":"2020-10-14T17:15:00+00:00","UserScreenname":"dotnet","Text":"Check out this episode of #OnDotNET with @Tratcher and @samsp talking about the YARP reverse proxy project… https://t.co/Yw5knm1I9M","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"1316421010338521089","CreatedAt":"2020-10-14T16:50:01+00:00","UserScreenname":"dotnet","Text":"#Azure #CosmosDB 🌍 is a document #noSQL database designed for global scale. Connect using the Cosmos SDK, an… https://t.co/JNbAAA3uM9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":19,"RawContent":null},{"Id":"1316376217981988864","CreatedAt":"2020-10-14T13:52:02+00:00","UserScreenname":"dotnet","Text":"In today's C# with @CSharpFritz, Jeff talks increment operators, string formatting and interpolation, the continue… https://t.co/uJzHswoUQc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":14,"RawContent":null},{"Id":"1316165539576729600","CreatedAt":"2020-10-13T23:54:52+00:00","UserScreenname":"dotnet","Text":"C#/WinRT Version 0.8 and the .NET5 RC2 Release https://t.co/PtTwzhi7oj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":23,"RawContent":null},{"Id":"1316161046260875276","CreatedAt":"2020-10-13T23:37:01+00:00","UserScreenname":"dotnet","Text":"#dotNET code style analysis gives you rules to help you maintain consistent code style in your codebase for: \n✔️ na… https://t.co/rHJE1F2AgC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":85,"FavoriteCount":34,"RawContent":null},{"Id":"1316099139730636801","CreatedAt":"2020-10-13T19:31:01+00:00","UserScreenname":"dotnet","Text":"We found a pretty good wrap up of the new goodies in #dotNET 5 (and the new version of #ASPNET) on the @LtdSolace b… https://t.co/AOkn5123As","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":19,"RawContent":null},{"Id":"1316076265015668737","CreatedAt":"2020-10-13T18:00:07+00:00","UserScreenname":"dotnet","Text":"Announcing .NET 5.0 RC 2 https://t.co/Hv8Jp13VtZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":694,"FavoriteCount":345,"RawContent":null}]}},"RunOn":"2020-10-16T05:30:32.9981408Z","RunDurationInMilliseconds":12059}