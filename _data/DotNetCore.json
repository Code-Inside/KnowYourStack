{"Data":{"Blog":{"FeedItems":[{"Title":"F# 5 and F# tools update for June","PublishedOn":"2020-06-26T17:20:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to announce more updates to F# 5 today! We shipped an initial set of features with F# 5 preview 1, and they have all been stabilizing since that release including a updates from last...","Href":"https://devblogs.microsoft.com/dotnet/f-5-and-f-tools-update-for-june/","RawContent":null},{"Title":"Announcing Entity Framework Core EFCore 5.0 Preview 6","PublishedOn":"2020-06-25T16:47:30+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, the Entity Framework Core team announces the sixth preview release of EF Core 5.0. This release includes split queries for related collections, a new &#8220;index&#8221; attribute, improved...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-efcore-5-0-preview-6/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 6","PublishedOn":"2020-06-25T16:41:01+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 6. It contains a small set of new features and performance improvements. The .NET 5.0 Preview 4 post covers what we are planning to deliver with .NET 5.0....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-6/","RawContent":null},{"Title":"Introducing dotnet-monitor, an experimental tool","PublishedOn":"2020-06-23T17:13:00+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"dotnet-monitor is an experimental tool that makes it easier to get access to diagnostics information in a dotnet process.\nWhen running a dotnet application differences in diverse local and production...","Href":"https://devblogs.microsoft.com/dotnet/introducing-dotnet-monitor/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 5","PublishedOn":"2020-06-10T17:18:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today we are announcing the fifth preview release of EF Core 5.0.\nThe fifth previews of .NET 5 and ASP.NET Core 5.0 are also available now.\nPrerequisites\nThe previews of EF Core 5.0 require .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-5/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 5","PublishedOn":"2020-06-10T17:10:13+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 5. It contains a small set of new features and performance improvements. The .NET 5.0 Preview 4 post covers what we are planning to deliver with .NET 5.0....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-5/","RawContent":null},{"Title":".NET Core June 2020 Updates – 2.1.19 and 3.1.5","PublishedOn":"2020-06-09T17:30:19+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core June 2020 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nSecurity\nCVE-2020-1108:...","Href":"https://devblogs.microsoft.com/dotnet/net-core-june-2020-updates-2-1-19-and-3-1-5/","RawContent":null},{"Title":"Help us improve WPF and UWP XAML designer","PublishedOn":"2020-05-29T00:00:53+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"We would like to make your experience developing WPF and UWP applications in Visual Studio better!\nCurrently we are investigating ways of improving the XAML Designer and making you more productive...","Href":"https://devblogs.microsoft.com/dotnet/help-us-improve-wpf-and-uwp-xaml-designer/","RawContent":null},{"Title":"Continuous integration workflow template for .NET Core desktop apps with GitHub Actions","PublishedOn":"2020-05-28T14:00:15+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We know how time consuming it can be to quickly set up continuous integration and continuous deployment workflows (CI/CD) for your WPF and Windows Forms desktop applications.\nThat&#8217;s why, in...","Href":"https://devblogs.microsoft.com/dotnet/continuous-integration-workflow-template-for-net-core-desktop-apps-with-github-actions/","RawContent":null},{"Title":"Introducing YARP Preview 1","PublishedOn":"2020-05-21T20:00:40+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Introducing YARP Preview 1\nYARP is a project to create a reverse proxy server. It started when we noticed a pattern of questions from internal teams at Microsoft who were either building a reverse...","Href":"https://devblogs.microsoft.com/dotnet/introducing-yarp-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12268956493","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:22:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Closed pull request \"Adding OmniSharp to projects list\" (#182) at dotnet/foundation","RelatedBody":""},{"Id":"12268946116","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:21:09","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/192","RelatedDescription":"Closed pull request \"Update coverlet links\" (#192) at dotnet/foundation","RelatedBody":"Update repo links\r\n\r\ncc: @tonerdo"},{"Id":"12231641754","Type":"PullRequestEvent","CreatedAt":"2020-05-04T08:11:29","Actor":"MarcoRossignoli","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/192","RelatedDescription":"Opened pull request \"Update coverlet links\" (#192) at dotnet/foundation","RelatedBody":"Update repo links\r\n\r\ncc: @tonerdo"},{"Id":"12207129416","Type":"PullRequestEvent","CreatedAt":"2020-04-30T15:40:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Closed pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"12194500050","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:53:42","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Merged pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12194328779","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:39:00","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Opened pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12193219033","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:16","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Merged pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12193217084","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Merged pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12069320388","Type":"PullRequestEvent","CreatedAt":"2020-04-16T15:55:03","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Opened pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12057488269","Type":"PullRequestEvent","CreatedAt":"2020-04-15T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Opened pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582563527","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Opened issue \"June 2020 .NET Updates\" (#158) at dotnet/announcements","RelatedBody":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n"},{"Id":"12582414995","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:22:17","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.18 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.4 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"12749642017","Type":"PullRequestEvent","CreatedAt":"2020-06-26T23:39:21","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28052","RelatedDescription":"Opened pull request \"Modify internal pipeline to simplify 3.1-crossdac mirroring\" (#28052) at dotnet/coreclr","RelatedBody":"My idea is that the 3.1-crossdac will disable the normal runtime build and test (as it would be wasteful and redundant), then add its own tests.  \r\n\r\nTo simplify auto merging I wanted to keep the 3.1 servicing branch aligned with the 3.1-crossdac branch.\r\n\r\nSo this basically \r\n+ Adding comments.\r\n+ A condition on variables['Build.SourceBranch']\r\n+ Changing indent.\r\n\r\nMy hope is that this is the only change to the release/3.1 branch."},{"Id":"12708381325","Type":"PullRequestEvent","CreatedAt":"2020-06-23T10:26:36","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28051","RelatedDescription":"Opened pull request \"Port to 3.1 - Fix JIT_CheckedWriteBarrier on macOS\" (#28051) at dotnet/coreclr","RelatedBody":"Port of https://github.com/dotnet/runtime/pull/38242\r\n\r\nIn a change to enable Mojave hardened runtime support that was made last\r\nyear, a bug was introduced into the JIT_CheckedWriteBarrier. A\r\nconditional relative jump before an updated piece of code that was jumping\r\nafter that piece of code was not updated and ended up jumping into the\r\nmiddle of an instruction. Since that condition occurs only with specific\r\nmemory layout and it is very rare, that problem was not discovered until\r\nnow.\r\n\r\n# Customer impact\r\nThe bug is causing consistent crashes on some configurations of OSX machines while it works fine on others. Unity was hit by this problem.\r\n\r\n# Regression?\r\nYes, introduced in 3.1.0\r\n\r\n# Testing\r\nThe original fix was supplied and tested by Unity\r\n\r\n# Risk\r\nLow, this fix fixes an obvious bug in assembler helper code where a conditional jump jumps into the middle of an instruction and the app crashes. \r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"12765581349","Type":"PullRequestEvent","CreatedAt":"2020-06-29T17:56:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13416","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13416) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:16 PM\r\n- **Commit**: 15c823ade9700b999bda3bca8e2c7987ff265f25\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20324.14 to 3.1.400-preview.20329.2\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12764788991","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:30:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13416","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13416) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:16 PM\r\n- **Commit**: 15c823ade9700b999bda3bca8e2c7987ff265f25\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20324.14 to 3.1.400-preview.20329.2\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12764772558","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:29:20","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13415","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13415) at dotnet/cli","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* wtgodbe\n* dsplaisted\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12764736773","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:25:41","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13410","RelatedDescription":"Merged pull request \"Remove extra nuget reference\" (#13410) at dotnet/cli","RelatedBody":""},{"Id":"12764736160","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:25:38","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13411","RelatedDescription":"Merged pull request \"Remove extra nuget reference\" (#13411) at dotnet/cli","RelatedBody":""},{"Id":"12764735603","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:25:35","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13412","RelatedDescription":"Merged pull request \"Remove unnecessary reference\" (#13412) at dotnet/cli","RelatedBody":""},{"Id":"12764735063","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:25:33","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13413","RelatedDescription":"Merged pull request \"Remove unnecessary reference\" (#13413) at dotnet/cli","RelatedBody":""},{"Id":"12764734652","Type":"PullRequestEvent","CreatedAt":"2020-06-29T16:25:30","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13414","RelatedDescription":"Merged pull request \"Remove unnecessary reference\" (#13414) at dotnet/cli","RelatedBody":""},{"Id":"12759024133","Type":"PullRequestEvent","CreatedAt":"2020-06-29T04:28:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13414","RelatedDescription":"Opened pull request \"Remove unnecessary reference\" (#13414) at dotnet/cli","RelatedBody":""},{"Id":"12759023304","Type":"PullRequestEvent","CreatedAt":"2020-06-29T04:28:03","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13413","RelatedDescription":"Opened pull request \"Remove unnecessary reference\" (#13413) at dotnet/cli","RelatedBody":""},{"Id":"12759012339","Type":"PullRequestEvent","CreatedAt":"2020-06-29T04:25:35","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13412","RelatedDescription":"Opened pull request \"Remove unnecessary reference\" (#13412) at dotnet/cli","RelatedBody":""},{"Id":"12758278639","Type":"PullRequestEvent","CreatedAt":"2020-06-29T01:39:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13411","RelatedDescription":"Opened pull request \"Remove extra nuget reference\" (#13411) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"12633766646","Type":"IssuesEvent","CreatedAt":"2020-06-15T13:38:05","Actor":"wrkettlitz","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Opened issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768) at dotnet/standard","RelatedBody":""},{"Id":"12632156966","Type":"IssuesEvent","CreatedAt":"2020-06-15T10:52:00","Actor":"MRebati","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1501","RelatedDescription":"Closed issue \"adding Netstandard nuget package to another Netstandard project cause \"Unable to find metadata of Microsoft.NETCore.Targets.1.1.0\" error\" (#1501) at dotnet/standard","RelatedBody":"hello, I've been working on this for a few days.\r\nI created a net standard project. packed it as nuget package. added to a local nuget server. tried to add it as a reference to another project and got this error on adding.\r\n\r\n\"Unable to find metadata of Microsoft.NETCore.Targets.1.1.0\"\r\n\r\nchecked the nuget.org for the new version of \"Microsoft.NETCore.Targets\" and downloaded it.\r\nit did not solve any problem. tried to add the 1.1.0 version. and it did not help either.\r\n\r\ntried to add net core platform on both projects. also did not help.\r\nwhy is net standard even dependent on net core platform?"},{"Id":"12630317662","Type":"IssuesEvent","CreatedAt":"2020-06-15T07:45:30","Actor":"wrkettlitz","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Opened issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767) at dotnet/standard","RelatedBody":"See title ;)"},{"Id":"12613688141","Type":"PullRequestEvent","CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1766) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 5.0.100-preview.6.20266.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"12608476970","Type":"PullRequestEvent","CreatedAt":"2020-06-11T22:33:08","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#1759) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"12765168802","Type":"PullRequestEvent","CreatedAt":"2020-06-29T17:11:33","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42941","RelatedDescription":"Opened pull request \"Port SafeProcessHandle.Unix: fix missing DangerousRelease\" (#42941) at dotnet/corefx","RelatedBody":"Port https://github.com/dotnet/runtime/pull/37412\r\n\r\n###  Description\r\n\r\nPorts #37412. Original issue https://github.com/dotnet/runtime/issues/36661\r\nFixes regression introduced in [this PR](https://github.com/dotnet/corefx/pull/36199) between 2.2 and 3.0 \r\n\r\n###  Description from original PR \r\n\r\nBecause the SafeProcessHandle was not owned, ReleaseHandle was not called, causing the wrapped SafeWaitHandle to never release its resources.\r\n\r\n###  Customer Impact\r\n\r\nFrom customer:\r\n> This is very impactful for our embedded clients. If left out would mean skipping .Net core 3. The clients cycle a process exactly once per second which amounts to ~ 10-20 mb leak every 24 hrs. I should imagine any long running processes like asp.net core servers that spawn any child processes are also affected.\r\n\r\nWe are asked to port this to enable the customer to migrate to 3.1.\r\n\r\n###  Risk\r\n\r\nLow. \r\n* We already shipped this in Preview 6 and the customer (@myrup) validated the change there\r\n* The change is limited to Unix\r\n* The change is very localized and relatively straightforward to understand. \r\n"},{"Id":"12737065380","Type":"PullRequestEvent","CreatedAt":"2020-06-25T18:03:31","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42940","RelatedDescription":"Merged pull request \"Build the platforms package for shipping\" (#42940) at dotnet/corefx","RelatedBody":"This https://github.com/dotnet/corefx/pull/42928 change was mistakenly merged preemptively before the branch  was open.\r\nIt lacked the packaging stuff, so just adding that"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"12769890476","Type":"PullRequestEvent","CreatedAt":"2020-06-30T05:08:43","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/45554","RelatedDescription":"Merged pull request \"Reduce release/x64 baseline in DeeplyNestedGeneric\" (#45554) at dotnet/roslyn","RelatedBody":"/cc @dibarbet. This test seems to be unreliable currently."},{"Id":"12769773719","Type":"IssuesEvent","CreatedAt":"2020-06-30T04:46:04","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/45496","RelatedDescription":"Closed issue \"Entire top-level program file is always faded with IDE0051 \"Private member '$Program.$Main' is unused.\"\" (#45496) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.7-p3.1\r\n\r\nThe program runs fine. There's just an errant IDE0051 in the error list and fading the entire file:\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/85909903-289f9a00-b7ea-11ea-9489-dd2a41bdf0dd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/85909925-36edb600-b7ea-11ea-8bfc-1db561ded19e.png)\r\n\r\nIf you trigger the lightbulb or click 'Show potential fixes,' you get a gold bar saying CSharpRemoveUnusedMembersCodeFixProvider crashed:\r\n\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxGenerator.PreserveTrivia[TNode](TNode node,Func`2 nodeChanger)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGeneration.CSharpSyntaxGenerator.RemoveNode(SyntaxNode root,SyntaxNode node,SyntaxRemoveOptions options)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.RemoveChange.Apply(SyntaxNode root,SyntaxGenerator generator)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot()\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\n### Repro\r\n\r\nIt repros with `net5.0` also, and it doesn't change anything when Program.cs is complex.\r\n\r\n```cs\r\nusing System;\r\n\r\nConsole.WriteLine(\"Hi!\");\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <LangVersion>preview</LangVersion>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### `dotnet --info`\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.4.20258.7\r\n Commit:    65f0fc2cad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.4.20258.7\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.4.20251.6\r\n  Commit:  47ec733ba7\r\n\r\n.NET SDKs installed:\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.400-preview-015178 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.4.20258.7 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.4.20257.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.4.20251.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.4.20251.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n"},{"Id":"12769522376","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:53:59","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/45543","RelatedDescription":"Merged pull request \"Merge Release/dev16.8 preview1 vs deps into master-vs-deps\" (#45543) at dotnet/roslyn","RelatedBody":""},{"Id":"12769522137","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:53:56","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/45546","RelatedDescription":"Merged pull request \"Merge 16.8 preview 1 vs-deps back into master-vs-deps\" (#45546) at dotnet/roslyn","RelatedBody":""},{"Id":"12769259967","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:02:52","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/45557","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#45557) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"12769255219","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:02:00","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/45556","RelatedDescription":"Opened pull request \"Show format string completion options when the formatting component colon is typed\" (#45556) at dotnet/roslyn","RelatedBody":"Same principle as https://github.com/dotnet/roslyn/pull/45309. Requested by @CyrusNajmabadi.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"12766007743","Type":"PullRequestEvent","CreatedAt":"2020-06-29T18:45:27","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8218","RelatedDescription":"Merged pull request \"Sync compiler from dotnet/runtime\" (#8218) at dotnet/corert","RelatedBody":""},{"Id":"12762896008","Type":"PullRequestEvent","CreatedAt":"2020-06-29T13:44:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8219","RelatedDescription":"Opened pull request \"Fix reflection access to thread static fields\" (#8219) at dotnet/corert","RelatedBody":"Reflection-accessing threadstatic fields didn't work.\r\n\r\nI'm also deleting a bunch of .NET Native code that is not relevant to CoreRT.\r\nThe .NET Native approach to threadstatics (using TLS region) is Windows-specific\r\nand not portable.\r\n\r\nThe type loader support is incomplete (the compiler side is ready but runtime side is\r\nstill going to fail with a MissingTemplateException). I got tired and this diff is already\r\ntoo big.\r\n\r\nContributes to #5137."},{"Id":"12762792580","Type":"PullRequestEvent","CreatedAt":"2020-06-29T13:35:19","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8218","RelatedDescription":"Opened pull request \"Sync compiler from dotnet/runtime\" (#8218) at dotnet/corert","RelatedBody":""},{"Id":"12756940834","Type":"IssuesEvent","CreatedAt":"2020-06-28T18:31:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8217","RelatedDescription":"Closed issue \"How can I using System.Security.Cryptography\" (#8217) at dotnet/corert","RelatedBody":"my code :\r\n```cs\r\nbyte[] inBuff = Encoding.ASCII.GetBytes(_loc5_);\r\nAes dcpt = Aes.Create(\"AES\");\r\ndcpt.Key = key;\r\ndcpt.IV = iv;\r\ndcpt.Mode = CipherMode.CBC;\r\ndcpt.Padding = PaddingMode.PKCS7;\r\n\r\nICryptoTransform cTransform = dcpt.CreateEncryptor();\r\nByte[] resultArray = cTransform.TransformFinalBlock(inBuff, 0, inBuff.Length);\r\nreturn BitConverter.ToString(resultArray, 0).Replace(\"-\", string.Empty).ToUpper();\r\n```\r\n\r\nDebug works well, but `dotnet publish -r win-x64 -c Release` cause:\r\n```\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n```\r\n\r\n"},{"Id":"12756596984","Type":"IssuesEvent","CreatedAt":"2020-06-28T16:46:28","Actor":"nilaoda","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8217","RelatedDescription":"Opened issue \"How can I using System.Security.Cryptography\" (#8217) at dotnet/corert","RelatedBody":"my code :\r\n```cs\r\nbyte[] inBuff = Encoding.ASCII.GetBytes(_loc5_);\r\nAes dcpt = Aes.Create(\"AES\");\r\ndcpt.Key = key;\r\ndcpt.IV = iv;\r\ndcpt.Mode = CipherMode.CBC;\r\ndcpt.Padding = PaddingMode.PKCS7;\r\n\r\nICryptoTransform cTransform = dcpt.CreateEncryptor();\r\nByte[] resultArray = cTransform.TransformFinalBlock(inBuff, 0, inBuff.Length);\r\nreturn BitConverter.ToString(resultArray, 0).Replace(\"-\", string.Empty).ToUpper();\r\n```\r\n\r\nDebug works well, but `dotnet publish -r win-x64 -c Release` cause:\r\n```\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n```\r\n\r\n"},{"Id":"12750668698","Type":"IssuesEvent","CreatedAt":"2020-06-27T06:08:40","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8216","RelatedDescription":"Closed issue \"Enum.IsDefined does not work in reflection-free mode\" (#8216) at dotnet/corert","RelatedBody":"`Enum.IsDefined` doesn't work in reflection-mode. This means that some APIs like `Environment.GetFolderPath` don't work.\r\n\r\nA quick look in a debugger shows that the `EnumInfo` passed to `GetEnumName` has an empty `Values` array."},{"Id":"12750227162","Type":"IssuesEvent","CreatedAt":"2020-06-27T03:01:19","Actor":"Thealexbarney","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8216","RelatedDescription":"Opened issue \"Enum.IsDefined does not work in reflection-free mode\" (#8216) at dotnet/corert","RelatedBody":"`Enum.IsDefined` doesn't work in reflection-mode. This means that some APIs like `Environment.GetFolderPath` don't work.\r\n\r\nA quick look in a debugger shows that the `EnumInfo` passed to `GetEnumName` has an empty `Values` array."},{"Id":"12744636523","Type":"IssuesEvent","CreatedAt":"2020-06-26T12:53:30","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8215","RelatedDescription":"Opened issue \"CoreRT on macOS Big Sur / ARM / Apple Silicon\" (#8215) at dotnet/corert","RelatedBody":"Hi dear CoreRT community,\r\n\r\nWith Apple's announcement at WWDC this week, it's now clear that as soon as late 2020, there will be new Macs shipping to customers running on ARM / \"Apple Silicon\".\r\n\r\nI suspect the status of CoreRT being able to run on ARM / Linux is currently at a very initial stage, if I am reading this issue tracker correctly:\r\nhttps://github.com/dotnet/corert/issues/4856\r\n\r\nStarting this thread to see if there's any user traction on getting CoreRT to also work on macOS Big Sur+ on ARM. We'd also be very interested in hearing about any other .NET 5 AOT solutions that could integrate with LLVM and would target macOS on ARM.\r\n\r\nMaybe getting support for ARM on macOS would be prohibitively expensive / slow for the community and the small team of volunteer maintainers who have been so kind as to continue supporting this great tech. Or maybe you would gauge it to be achievable within say 6 months or so, in which case we could probably stay with CoreRT for our product on the Mac platform.\r\n\r\nAny insight and input would be greatly appreciated :)"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"12769961741","Type":"PullRequestEvent","CreatedAt":"2020-06-30T05:21:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12275","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12275) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200630.2\r\n- **Date Produced**: 6/30/2020 3:06 AM\r\n- **Commit**: 1eab2845bd4dbded49765c0b33641f029ed92c69\r\n- **Branch**: refs/heads/vs16.7\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n"},{"Id":"12769958078","Type":"PullRequestEvent","CreatedAt":"2020-06-30T05:20:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12273","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12273) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n"},{"Id":"12769932800","Type":"PullRequestEvent","CreatedAt":"2020-06-30T05:16:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12274","RelatedDescription":"Opened pull request \"[master] Update dependencies from microsoft/msbuild\" (#12274) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200630.2\r\n- **Date Produced**: 6/30/2020 3:06 AM\r\n- **Commit**: 1eab2845bd4dbded49765c0b33641f029ed92c69\r\n- **Branch**: refs/heads/vs16.7\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n"},{"Id":"12769916965","Type":"PullRequestEvent","CreatedAt":"2020-06-30T05:13:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12272","RelatedDescription":"Merged pull request \"[master] Update dependencies from microsoft/msbuild\" (#12272) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n"},{"Id":"12769700334","Type":"PullRequestEvent","CreatedAt":"2020-06-30T04:30:42","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/12105","RelatedDescription":"Closed pull request \"[for discussion]Support cswinrt\" (#12105) at dotnet/sdk","RelatedBody":"The project looks like that so far.\r\n\r\nDon't have the target framework change yet.\r\n\r\nAnd lib will copy runtime pack assets too. So this need to change as well.\r\n\r\n```xml\r\n<Project>\r\n\t<ItemGroup>\r\n\t\t<KnownFrameworkReference Include=\"Microsoft.Windows.Ref\"\r\n\t\t\t\t\t\t\t  TargetFramework=\"netcoreapp5.0\"\r\n\t\t\t\t\t\t\t  TargetingPackCombinedAndEmbedRuntime=\"true\"\r\n\t\t\t\t\t\t\t  DefaultRuntimeFrameworkVersion=\"5.0.0-preview1\"\r\n\t\t\t\t\t\t\t  LatestRuntimeFrameworkVersion=\"5.0.0-preview1\"\r\n\t\t\t\t\t\t\t  IsWindowsOnly=\"true\"/>\r\n\t</ItemGroup>\r\n\t<Import Project=\"Sdk.props\" Sdk=\"Microsoft.NET.Sdk\" />\r\n\r\n\t<PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>net5.0</TargetFramework>\r\n\t\t<RestorePackagesPath>packages</RestorePackagesPath>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<FrameworkReference Include=\"Microsoft.Windows.Ref\" IsImplicitlyDefined=\"true\" Pack=\"false\" PrivateAssets=\"All\" />\r\n\t</ItemGroup>\r\n\r\n\t<Import Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n\r\n</Project>\r\n```\r\n"},{"Id":"12769340381","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:18:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12273","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12273) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n"},{"Id":"12769340392","Type":"PullRequestEvent","CreatedAt":"2020-06-30T03:18:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12272","RelatedDescription":"Opened pull request \"[master] Update dependencies from microsoft/msbuild\" (#12272) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n"},{"Id":"12769222635","Type":"PullRequestEvent","CreatedAt":"2020-06-30T02:55:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12271","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/roslyn-analyzers\" (#12271) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: e7c40fb8-9651-4ba2-dbe8-08d81c92f408\r\n- **Build**: 20200629.5\r\n- **Date Produced**: 6/29/2020 11:02 PM\r\n- **Commit**: 13d6f59228ed7632ef66836a5bcaa13f0f84d6ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: from 3.3.0-beta1.20305.4 to 3.3.0-beta1.20329.5\r\n\r\n[marker]: <> (End:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"646561680","IsPullRequest":true,"CreatedAt":"2020-06-26T23:39:20","Actor":"sdmaclea","Number":"28052","RawContent":null,"Title":"Modify internal pipeline to simplify 3.1-crossdac mirroring","State":"open","Body":"My idea is that the 3.1-crossdac will disable the normal runtime build and test (as it would be wasteful and redundant), then add its own tests.  \r\n\r\nTo simplify auto merging I wanted to keep the 3.1 servicing branch aligned with the 3.1-crossdac branch.\r\n\r\nSo this basically \r\n+ Adding comments.\r\n+ A condition on `variables['Build.SourceBranch']`\r\n+ Changing indent.\r\n\r\nMy hope is that this is the only CI change to the release/3.1 branch.","Url":"https://github.com/dotnet/coreclr/pull/28052","RelatedDescription":"Open PR \"Modify internal pipeline to simplify 3.1-crossdac mirroring\" (#28052)"},{"Id":"643722922","IsPullRequest":true,"CreatedAt":"2020-06-23T10:26:35","Actor":"janvorli","Number":"28051","RawContent":null,"Title":"Port to 3.1 - Fix JIT_CheckedWriteBarrier on macOS","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/38242\r\n\r\nIn a change to enable Mojave hardened runtime support that was made last\r\nyear, a bug was introduced into the JIT_CheckedWriteBarrier. A\r\nconditional relative jump before an updated piece of code that was jumping\r\nafter that piece of code was not updated and ended up jumping into the\r\nmiddle of an instruction. Since that condition occurs only with specific\r\nmemory layout and it is very rare, that problem was not discovered until\r\nnow.\r\n\r\n# Customer impact\r\nThe bug is causing consistent crashes on some configurations of OSX machines while it works fine on others. Unity was hit by this problem.\r\n\r\n# Regression?\r\nYes, introduced in 3.1.0\r\n\r\n# Testing\r\nThe original fix was supplied and tested by Unity\r\n\r\n# Risk\r\nLow, this fix fixes an obvious bug in assembler helper code where a conditional jump jumps into the middle of an instruction and the app crashes. \r\n","Url":"https://github.com/dotnet/coreclr/pull/28051","RelatedDescription":"Open PR \"Port to 3.1 - Fix JIT_CheckedWriteBarrier on macOS\" (#28051)"},{"Id":"637211734","IsPullRequest":true,"CreatedAt":"2020-06-15T17:24:10","Actor":"dotnet-maestro-bot","Number":"28050","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28050","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)\" (#28050)"},{"Id":"637176717","IsPullRequest":true,"CreatedAt":"2020-06-11T17:32:59","Actor":"dotnet-maestro-bot","Number":"28049","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @omajid\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28049","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28049)"},{"Id":"629345338","IsPullRequest":true,"CreatedAt":"2020-06-11T16:49:15","Actor":"omajid","Number":"28045","RawContent":null,"Title":"[release/2.1] Fix build with clang 10","State":"closed","Body":"This contains a grab bag of fixes to fix the build with clang 10.\r\n\r\n- https://github.com/dotnet/coreclr/pull/23075\r\n\r\n  Fix missing includes in coreclr/src/debug/createdump/\r\n\r\n- https://github.com/dotnet/runtime/pull/33096\r\n\r\n  SList::Init: add missing constructor\r\n\r\n- A subset of https://github.com/dotnet/coreclr/pull/22129\r\n\r\n  Just the parts that introduce the THROW_DECL macro in pal.h\r\n\r\n- https://github.com/dotnet/runtime/pull/32837\r\n\r\n  This fixes THROW_DECL introduce in the previous PR to work with clang, which\r\n  is required in clang 10.\r\n\r\n- One new change:\r\n\r\n  In a significant divergance, this commits adds more THROW_DECL macros\r\n  to all the math functions to address a ton of errors pointed out when\r\n  building SOS:\r\n\r\n   ```\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/ToolBox/SOS/Strike/strike.cpp:116:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/vm/hillclimbing.h:19:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/inc/complex.h:16:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/math.h:36:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/cmath:45:\r\n    In file included from /usr/include/math.h:290:\r\n    /usr/include/bits/mathcalls.h:53:13: error: exception specification in declaration does not match previous declaration\r\n    __MATHCALL (acos,, (_Mdouble_ __x));\r\n                ^\r\n    /home/omajid/devel/dotnet/coreclr/src/pal/inc/pal.h:4395:26: note: previous declaration is here\r\n    PALIMPORT double __cdecl acos(double);\r\n                             ^\r\n   ```\r\n\r\n  Then, to make sure the declarations and implementations match, it adds\r\n  THROW_DECL to the definitions in src/pal/src/cruntime/math.cpp\r\n\r\nCo-authored-by: Mike McLaughlin <mikem@microsoft.com>\r\nCo-authored-by: Sinan Kaya <sinan.kaya@microsoft.com>\r\nCo-authored-by: Tom Deseyn <tom.deseyn@gmail.com>","Url":"https://github.com/dotnet/coreclr/pull/28045","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix build with clang 10\" (#28045)"},{"Id":"636430835","IsPullRequest":true,"CreatedAt":"2020-06-10T18:41:43","Actor":"Anipik","Number":"28048","RawContent":null,"Title":"Update branding to 2.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28048","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.20\" (#28048)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-06-09T22:25:24","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"closed","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nWe completely missed decode of all x64 simd instruction forms.\r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n  + Additionally the same code was tested for regressions in other areas.\r\n    + Trying a breakpoint on every line of code\r\n    + Stepping through every line of code \r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n  + Shipped in all .NET Core 5.0 previews to date\r\n  + Over the last 90 days, there have been \r\n     + 184K debugging sessions launched on .NET Core 5 previews\r\n     + from 3.3K unique MAC addresses\r\n  + We have no reports of issues linked to this fix\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n  + We have several confirmation that this issue observed in 3.0/3.1 has been fixed by 5.0 \r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n+ @tommcdon & @hoyosjs have each used the x64 debugger since this change for debugging various reported/discovered issues. They saw no issues suggesting a regression.\r\n\r\n## Risk\r\nLow. \r\n+ dotnet/coreclr#25958 has been in 5.0 since 9/2019\r\n+ Only affects x64 debugger operation. \r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n  + Rewrites one function `NativeWalker::DecodeInstructionForPatchSkip()`.  Used only for debugging x64 code.\r\n  + Adds 1 new machine generated instruction decode table. (10k lines)\r\n+ Adds tools to regenerate the parser tables\r\n  + Add 3 files to archive the tool used to generate the decode table.to machine generate. (Only used in development) \r\n+ Adds documentation (1 file)\r\n+ Sufficient testing coverage\r\n \r\n## Code Reviewers\r\n@hoyosjs @tannergooding @noahfalk @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Closed or merged PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"622546826","IsPullRequest":true,"CreatedAt":"2020-06-09T22:16:48","Actor":"mmitche","Number":"28044","RawContent":null,"Title":"[release/3.1] Fix triggers for 3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28044","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix triggers for 3.1\" (#28044)"},{"Id":"635670566","IsPullRequest":true,"CreatedAt":"2020-06-09T22:12:48","Actor":"Anipik","Number":"28047","RawContent":null,"Title":"update branding to 3.1.6","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28047","RelatedDescription":"Closed or merged PR \"update branding to 3.1.6\" (#28047)"},{"Id":"629617445","IsPullRequest":true,"CreatedAt":"2020-06-09T00:40:12","Actor":"AaronRobinsonMSFT","Number":"28046","RawContent":null,"Title":"Support function pointers in field marshalers","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37295\r\n\r\nThis was fixed in .NET 5 when [field marshalling was completely rewritten](https://github.com/dotnet/coreclr/pull/26340).\r\n\r\n## Customer Impact\r\n\r\nUsers will be unable to have function pointers as fields in structs that are used in interop scenarios. [Function pointers](https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md) are now supported in the C# language.\r\n\r\n### Workaround\r\n\r\nThis can naturally be worked around by using `IntPtr`, `UIntPtr`, `void*`, `nint`, or `nuint` as the field and then casting to the appropriate function pointer type at the usage site in managed code. This would severely degrade the UX for usage of function pointers though.\r\n\r\n## Regression?\r\n\r\nNo. This is supporting a new C# feature and previous .NET runtimes never tested/supported this scenario.\r\n\r\n## Testing\r\n\r\nValidated both 32 and 64 bit struct of the field marshalling scenario. This follows the same behavior as a `void*` pointer so no new functionality is added just reuse of an existing code path for a new type.\r\n\r\n## Risk\r\nLow. \r\n\r\n/cc @tannergooding @333fred @jkoritzinsky @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28046","RelatedDescription":"Closed or merged PR \"Support function pointers in field marshalers\" (#28046)"},{"Id":"622076092","IsPullRequest":true,"CreatedAt":"2020-05-20T20:55:40","Actor":"Anipik","Number":"28043","RawContent":null,"Title":"update branding to 2.2.11","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28043","RelatedDescription":"Closed or merged PR \"update branding to 2.2.11\" (#28043)"},{"Id":"622026514","IsPullRequest":true,"CreatedAt":"2020-05-20T19:37:48","Actor":"dotnet-maestro-bot","Number":"28042","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28042","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28042)"},{"Id":"622017923","IsPullRequest":true,"CreatedAt":"2020-05-20T19:15:38","Actor":"Anipik","Number":"28041","RawContent":null,"Title":"update branding for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28041","RelatedDescription":"Closed or merged PR \"update branding for 2.1\" (#28041)"},{"Id":"599126504","IsPullRequest":true,"CreatedAt":"2020-05-20T19:15:20","Actor":"dotnet-maestro-bot","Number":"28034","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28034","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28034)"},{"Id":"614197782","IsPullRequest":true,"CreatedAt":"2020-05-13T16:54:47","Actor":"sywhang","Number":"28038","RawContent":null,"Title":"Port to 3.1 - Fix a native memory leak in EventPipe","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/35924.\r\n\r\nA customer reported a seemingly unbounded memory usage growth over time when using AppInsights: https://github.com/microsoft/ApplicationInsights-dotnet/issues/1678.\r\n\r\nEventPipeBuffers were being allocated using `malloc`, and over time this may cause an internal fragmentation within glibc's internal data structure, resulting in a memory leak over time. A usage pattern that worsens this leak is to start tracing, fill up all the buffers, then stop tracing, and repeat that many times. This fix mitigates the issue by making EventPipeBuffer to use ClrVirtualAlloc instead of malloc.\r\n\r\n## Customer Impact\r\nOn Linux platforms (specifically ones that use glibc), customers may see an unexpected growth in the native heap size over a long period of time if using EventPipe for a long time (ex. using Application Insights Service Profiler), making our first-party and third-party tracing solutions potentially problematic in production scenarios when used for elongated periods of time.\r\n\r\n## Regression?\r\nNo, EventPipe buffers were always allocated using malloc.\r\n\r\n## Testing\r\nThe fix was tested against the scenario the customer provided and . Additional performance tests that use EventPipe showed minimal performance regression (<4 % in the worst case). \r\n\r\n## Risk\r\nI believe the risk is low - the fix is localized to only 3-lines change and the behavior is well-understood. I have tested the fix locally for the past three weeks for various performance measurements and the fix passed all the runtime tracing tests that I ran locally and all the tests in the CI when I merged https://github.com/dotnet/runtime/pull/35924.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28038","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix a native memory leak in EventPipe\" (#28038)"},{"Id":"607419146","IsPullRequest":true,"CreatedAt":"2020-05-13T16:54:21","Actor":"janvorli","Number":"28036","RawContent":null,"Title":"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/713\r\nThere is a race between DynamicMethodDesc::Destroy called from\r\nthe finalizer thread and the MethodDescs enumeration called from\r\nETW::MethodLog::SendEventsForJitMethods at process exit.\r\nDynamicMethodDesc::Destroy cleans up its members m_pSig and\r\nm_pszMethodName and then it calls GetLCGMethodResolver()->Destroy();\r\nThat calls EEJitManager::FreeCodeMemory, which tries to take the\r\nm_CodeHeapCritSec lock. But this lock is already held by\r\nthe ETW::MethodLog::SendEventsForJitMethods.\r\nSo the iterator can see half-destroyed DynamicMethodDesc and\r\na crash happens when trying to get the dynamic method name\r\nfrom the m_pszMethodName for the ETW event purposes.\r\n\r\nThe fix is to call the GetLCGMethodResolver()->Destroy() before\r\ndestroying the m_pSig and m_pszMethodName.\r\n\r\n# Customer impact\r\nThe bug is causing random crashes, one of our teams had to turn off AppInsights temporarily as a workaround.\r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nLocal testing and all libraries and coreclr tests in the runtime repo - this change has been in the runtime master since December.\r\n\r\n# Risk\r\nLow, the change just prolongs lifetime of two DynamicMethodDesc members beyond the point when other code can access them.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28036","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race\" (#28036)"},{"Id":"604969346","IsPullRequest":true,"CreatedAt":"2020-05-13T16:53:54","Actor":"sdmaclea","Number":"28035","RawContent":null,"Title":"Backport Cross DAC runtime layout changes","State":"closed","Body":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n","Url":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Closed or merged PR \"Backport Cross DAC runtime layout changes\" (#28035)"},{"Id":"617035823","IsPullRequest":true,"CreatedAt":"2020-05-13T16:47:30","Actor":"Anipik","Number":"28040","RawContent":null,"Title":"update branding to 3.1.5","State":"closed","Body":"- no darc feed to remove","Url":"https://github.com/dotnet/coreclr/pull/28040","RelatedDescription":"Closed or merged PR \"update branding to 3.1.5\" (#28040)"},{"Id":"616421797","IsPullRequest":true,"CreatedAt":"2020-05-12T07:18:54","Actor":"kouvel","Number":"28039","RawContent":null,"Title":"[3.1] Fix Unix named mutex crash during some race conditions","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\n\r\nBelow when I refer to \"mutex\" I'm referring to the underlying mutex object, not an instance of the `Mutex` class.\r\n- When the last reference to a mutex is closed while the lock is held by some thread and a pthread mutex is used, the mutex was attempted to be destroyed but that has undefined behavior\r\n- There doesn't seem to be a way to behave exactly like on Windows for this corner case, where the mutex is destroyed when the last reference to it is released, regardless of which process has the mutex locked and which process releases the last reference to it (they could be two different processes), including in cases of abrupt shutdown\r\n- For this corner case I settled on what seems like a decent solution and compatible with older runtimes:\r\n  - When a process releases its last reference to the mutex\r\n    - If that mutex is locked by the same thread, the lock is abandoned and the process no longer references the mutex\r\n    - If that mutex is locked by a different thread, the lifetime of the mutex is extended with an implicit ref. The implicit ref prevents this or other processes from attempting to destroy the mutex while it is locked. The implicit ref is removed in either of these cases:\r\n      - The mutex gets another reference from within the same process\r\n      - The thread that owns the lock exits and abandons the mutex, at which point that would be the last reference to the mutex and the process would not reference the mutex anymore\r\n  - The implementation based on file locks is less restricted, but for consistency that implementation also follows the same behavior\r\n- There was also a race between an exiting thread abandoning one of its locked named mutexes and another thread releasing the last reference to it, fixed by using the creation/deletion process lock to synchronize\r\n\r\nFix for https://github.com/dotnet/runtime/issues/34271 in 3.1\r\n\r\n### Customer impact\r\n\r\n- Random crashes were seen on Unixes\r\n- When a named mutex is locked and the last reference to it is released from a different thread in any process, the underlying pthread mutex object is destroyed and that has undefined behavior. Crashes were seen where some data associated with the destroyed pthread mutex continues to be used when acquiring another pthread mutex in racy situations, causing a crash because the memory containing the destroyed pthread mutex is unmapped.\r\n- There was also a race where a thread has acquired the lock of a named mutex, between that thread exiting and abandoning the mutex, and another thread attempting to destroy the mutex\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- PAL named mutex tests on Linux and OSX including in stress mode (1 hour) in debug and release\r\n- System.Threading tests including mutex tests on Linux and OSX with debug and release coreclr\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- It is a bit of a corner case, where a lock is acquired and the mutex is disposed without releasing the lock, especially necessary for this issue is that the thread that disposes the mutex is different from the one that holds the lock\r\n- Since the fix involves extending the lifetime of a mutex in such a case, the underlying shared named mutex may observably live longer than before. That is necessary for correctness, as the behavior there was incorrect before and leading to the crashes.","Url":"https://github.com/dotnet/coreclr/pull/28039","RelatedDescription":"Open PR \"[3.1] Fix Unix named mutex crash during some race conditions\" (#28039)"},{"Id":"613636507","IsPullRequest":true,"CreatedAt":"2020-05-07T17:26:33","Actor":"mikem8361","Number":"28037","RawContent":null,"Title":"Remove SOS_README.md from every app's OutDir","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/35888\r\n\r\nRuntime master repo PR: https://github.com/dotnet/runtime/pull/33878\r\n\r\n# Customer impact\r\nThe is causing customers' apps to fail with SOS_README.md not found. \r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nChange in runtime master already.\r\n\r\n# Risk\r\nLow. Don't ship SOS_README.md anymore and it doesn't get put in the deps files.","Url":"https://github.com/dotnet/coreclr/pull/28037","RelatedDescription":"Closed or merged PR \"Remove SOS_README.md from every app's OutDir\" (#28037)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-04-17T19:59:21","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"closed","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Closed or merged PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"Port Cross OS DAC to 3.1","State":"open","Body":"This represents the changes required to enable Cross OS/Arch DAC for the 3.1 product. This new feature will allow triage and debug of \r\n\r\nThis is currently a superset of #28035, which is the minimum changes to the runtime to allow us to build the Cross DAC out of band and have it work correctly.\r\n\r\n**_This patch set is still under development._**  \r\n+ It is still missing the CI changes required to sign and publish the Cross DAC binaries.\r\n+ It is not fully tested.  This is blocked by a release containing #28035.\r\n+ Depending on partner requirements this change set could grow (likely to support full stack unwind support).\r\n\r\n# Customer impact\r\n\r\nThis implements a new diagnostic feature allowing triage of Linux/Linux-Alpine dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is new 3.1 feature\r\n\r\n # Testing\r\n\r\nThis is based on a series of PR's from the 5.0 branch.\r\n\r\nWe will have Partner sign-off before we consider merging this PR.\r\n\r\nWe have initial manual test results for the new feature from our testing team.\r\n\r\n # Risk\r\n\r\nModerate\r\n\r\nThe intent is to make no functional changes to the runtime.  \r\n\r\nHowever, this change is large.  It introduces lots of changes to the build system and `#if` related to the `Target` and `Host` platform. This is not expected to change the runtime, because for the runtime `Target` == `Host`.  However due to the shear number of changes the change is difficult to exhaustively review.\r\n\r\nThe risk is mitigated in part because errors in the build systems and `#if` would typically trigger compile errors.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"Port Cross OS DAC to 3.1\" (#28027)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"647512520","IsPullRequest":true,"CreatedAt":"2020-06-29T17:56:34","Actor":"dotnet-maestro[bot]","Number":"13416","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:16 PM\r\n- **Commit**: 15c823ade9700b999bda3bca8e2c7987ff265f25\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20324.14 to 3.1.400-preview.20329.2\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13416","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13416)"},{"Id":"647511528","IsPullRequest":true,"CreatedAt":"2020-06-29T16:29:18","Actor":"dotnet-maestro-bot","Number":"13415","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* wtgodbe\n* dsplaisted\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13415","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13415)"},{"Id":"647053165","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:40","Actor":"wli3","Number":"13410","RawContent":null,"Title":"Remove extra nuget reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13410","RelatedDescription":"Closed or merged PR \"Remove extra nuget reference\" (#13410)"},{"Id":"647053688","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:38","Actor":"wli3","Number":"13411","RawContent":null,"Title":"Remove extra nuget reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13411","RelatedDescription":"Closed or merged PR \"Remove extra nuget reference\" (#13411)"},{"Id":"647102029","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:35","Actor":"wli3","Number":"13412","RawContent":null,"Title":"Remove unnecessary reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13412","RelatedDescription":"Closed or merged PR \"Remove unnecessary reference\" (#13412)"},{"Id":"647102782","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:32","Actor":"wli3","Number":"13413","RawContent":null,"Title":"Remove unnecessary reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13413","RelatedDescription":"Closed or merged PR \"Remove unnecessary reference\" (#13413)"},{"Id":"647102832","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:29","Actor":"wli3","Number":"13414","RawContent":null,"Title":"Remove unnecessary reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13414","RelatedDescription":"Closed or merged PR \"Remove unnecessary reference\" (#13414)"},{"Id":"644210854","IsPullRequest":true,"CreatedAt":"2020-06-29T01:23:27","Actor":"wli3","Number":"13408","RawContent":null,"Title":"Remove extra nuget reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13408","RelatedDescription":"Closed or merged PR \"Remove extra nuget reference\" (#13408)"},{"Id":"645046594","IsPullRequest":true,"CreatedAt":"2020-06-25T15:41:36","Actor":"dotnet-maestro[bot]","Number":"13409","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200624.14\r\n- **Date Produced**: 6/24/2020 11:30 PM\r\n- **Commit**: c1d5902fdbcba3efc935387fb3a947a763c1d7c2\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20319.4 to 3.1.400-preview.20324.14\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13409","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13409)"},{"Id":"643324427","IsPullRequest":true,"CreatedAt":"2020-06-24T02:46:15","Actor":"dotnet-maestro[bot]","Number":"13406","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6670\r\n- **Date Produced**: 6/23/2020 11:01 PM\r\n- **Commit**: 76c12e524364375549b763c78750372910cb1c19\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.3.6653 to 5.7.0-rtm.6670\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13406","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13406)"},{"Id":"643853846","IsPullRequest":true,"CreatedAt":"2020-06-23T13:43:48","Actor":"sungam3r","Number":"13407","RawContent":null,"Title":"Fix typo","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13407","RelatedDescription":"Open PR \"Fix typo\" (#13407)"},{"Id":"643202158","IsPullRequest":true,"CreatedAt":"2020-06-22T16:23:37","Actor":"silvioguiso","Number":"13404","RawContent":null,"Title":"Adds tls","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13404","RelatedDescription":"Closed or merged PR \"Adds tls\" (#13404)"},{"Id":"643202750","IsPullRequest":true,"CreatedAt":"2020-06-22T16:23:20","Actor":"silvioguiso","Number":"13405","RawContent":null,"Title":"Adds tls","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13405","RelatedDescription":"Closed or merged PR \"Adds tls\" (#13405)"},{"Id":"643201381","IsPullRequest":true,"CreatedAt":"2020-06-22T16:23:12","Actor":"silvioguiso","Number":"13403","RawContent":null,"Title":"Adds tls","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13403","RelatedDescription":"Closed or merged PR \"Adds tls\" (#13403)"},{"Id":"642164941","IsPullRequest":true,"CreatedAt":"2020-06-19T21:43:39","Actor":"dotnet-maestro[bot]","Number":"13402","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200619.4\r\n- **Date Produced**: 6/19/2020 6:46 PM\r\n- **Commit**: 04526d94b89fc587eee45ce874fa495dc2d03961\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20317.6 to 3.1.400-preview.20319.4\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13402","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13402)"},{"Id":"642025755","IsPullRequest":true,"CreatedAt":"2020-06-19T14:46:31","Actor":"Sanan07","Number":"13401","RawContent":null,"Title":"Removing skip for test to check it in CI","State":"open","Body":"Removing skip for test to check it in CI","Url":"https://github.com/dotnet/cli/pull/13401","RelatedDescription":"Open PR \"Removing skip for test to check it in CI\" (#13401)"},{"Id":"641171503","IsPullRequest":true,"CreatedAt":"2020-06-18T19:22:43","Actor":"dotnet-maestro[bot]","Number":"13400","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6653\r\n- **Date Produced**: 6/16/2020 9:59 PM\r\n- **Commit**: 728c0ad55c093fb374a1858d9cde5dc94b80c244\r\n- **Branch**: release-5.7.0-preview.3\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.3.6645 to 5.7.0-preview.3.6653\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13400","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13400)"},{"Id":"640383635","IsPullRequest":true,"CreatedAt":"2020-06-18T02:34:52","Actor":"dotnet-maestro[bot]","Number":"13399","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200617.6\r\n- **Date Produced**: 6/17/2020 11:22 PM\r\n- **Commit**: 7594743c4ebaf05b5db3d91db374ed2db5374a59\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20312.12 to 3.1.400-preview.20317.6\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13399","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13399)"},{"Id":"637211803","IsPullRequest":true,"CreatedAt":"2020-06-16T17:51:18","Actor":"dotnet-maestro-bot","Number":"13395","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13395","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13395)"},{"Id":"637211791","IsPullRequest":true,"CreatedAt":"2020-06-16T17:51:06","Actor":"dotnet-maestro-bot","Number":"13394","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13394","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13394)"},{"Id":"637166798","IsPullRequest":true,"CreatedAt":"2020-06-16T17:50:50","Actor":"dotnet-maestro-bot","Number":"13392","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wtgodbe\n* dsplaisted\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13392","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13392)"},{"Id":"637211780","IsPullRequest":true,"CreatedAt":"2020-06-16T17:49:46","Actor":"dotnet-maestro-bot","Number":"13393","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13393","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13393)"},{"Id":"637925322","IsPullRequest":true,"CreatedAt":"2020-06-14T05:56:20","Actor":"dotnet-maestro[bot]","Number":"13397","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13397","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13397)"},{"Id":"637927016","IsPullRequest":true,"CreatedAt":"2020-06-12T19:26:55","Actor":"dotnet-maestro[bot]","Number":"13398","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200612.12\r\n- **Date Produced**: 6/12/2020 5:56 PM\r\n- **Commit**: 32e8cf29db2e5b3052a70e9b1926fc740aec7ab1\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20271.7 to 3.1.400-preview.20312.12\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13398","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13398)"},{"Id":"637285184","IsPullRequest":true,"CreatedAt":"2020-06-12T17:49:53","Actor":"dsplaisted","Number":"13396","RawContent":null,"Title":"Merge internal changes and update branding to 2.1.516","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13396","RelatedDescription":"Closed or merged PR \"Merge internal changes and update branding to 2.1.516\" (#13396)"},{"Id":"636603503","IsPullRequest":true,"CreatedAt":"2020-06-11T16:35:31","Actor":"dsplaisted","Number":"13391","RawContent":null,"Title":"Merge internal changes and update branding to 3.1.106","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13391","RelatedDescription":"Closed or merged PR \"Merge internal changes and update branding to 3.1.106\" (#13391)"},{"Id":"635830790","IsPullRequest":true,"CreatedAt":"2020-06-10T22:03:54","Actor":"wli3","Number":"13390","RawContent":null,"Title":"Update branding to 2.1.613","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13390","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.613\" (#13390)"},{"Id":"635682692","IsPullRequest":true,"CreatedAt":"2020-06-10T17:02:06","Actor":"sfoslund","Number":"13389","RawContent":null,"Title":"3.1.3xx Branding Update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13389","RelatedDescription":"Closed or merged PR \"3.1.3xx Branding Update\" (#13389)"},{"Id":"635682227","IsPullRequest":true,"CreatedAt":"2020-06-09T22:00:17","Actor":"sfoslund","Number":"13388","RawContent":null,"Title":"2.1.8xx Branding Update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13388","RelatedDescription":"Closed or merged PR \"2.1.8xx Branding Update\" (#13388)"},{"Id":"631991476","IsPullRequest":true,"CreatedAt":"2020-06-06T18:35:23","Actor":"wli3","Number":"13387","RawContent":null,"Title":"Fix pool","State":"closed","Body":"Apply to all existing ubuntu pool.\r\n\r\nDue to failure\r\n\r\nhttps://github.com/dotnet/cli/pull/13382\r\nhttps://github.com/dotnet/cli/pull/13381","Url":"https://github.com/dotnet/cli/pull/13387","RelatedDescription":"Closed or merged PR \"Fix pool\" (#13387)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"wrkettlitz","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"wrkettlitz","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200616.1\r\n- **Date Produced**: 6/16/2020 3:17 PM\r\n- **Commit**: 71b580038fb704df63e03c6b7ae7d2c6a4fdd71d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20316.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"647535840","IsPullRequest":true,"CreatedAt":"2020-06-29T17:11:33","Actor":"danmosemsft","Number":"42941","RawContent":null,"Title":"Port SafeProcessHandle.Unix: fix missing DangerousRelease","State":"open","Body":"Port https://github.com/dotnet/runtime/pull/37412\r\n\r\n###  Description\r\n\r\nPorts #37412. Original issue https://github.com/dotnet/runtime/issues/36661\r\nFixes regression introduced in [this PR](https://github.com/dotnet/corefx/pull/36199) between 2.2 and 3.0 \r\n\r\n###  Description from original PR \r\n\r\nBecause the SafeProcessHandle was not owned, ReleaseHandle was not called, causing the wrapped SafeWaitHandle to never release its resources.\r\n\r\n###  Customer Impact\r\n\r\nFrom customer:\r\n> This is very impactful for our embedded clients. If left out would mean skipping .Net core 3. The clients cycle a process exactly once per second which amounts to ~ 10-20 mb leak every 24 hrs. I should imagine any long running processes like asp.net core servers that spawn any child processes are also affected.\r\n\r\nWe are asked to port this to enable the customer to migrate to 3.1.\r\n\r\n###  Risk\r\n\r\nLow. \r\n* We already shipped this in Preview 6 and the customer (@myrup) validated the change there\r\n* The change is limited to Unix\r\n* The change is very localized and relatively straightforward to understand. \r\n","Url":"https://github.com/dotnet/corefx/pull/42941","RelatedDescription":"Open PR \"Port SafeProcessHandle.Unix: fix missing DangerousRelease\" (#42941)"},{"Id":"645642851","IsPullRequest":true,"CreatedAt":"2020-06-25T18:03:30","Actor":"Anipik","Number":"42940","RawContent":null,"Title":"Build the platforms package for shipping","State":"closed","Body":"This https://github.com/dotnet/corefx/pull/42928 change was mistakenly merged preemptively before the branch  was open.\r\nIt lacked the packaging stuff, so just adding that","Url":"https://github.com/dotnet/corefx/pull/42940","RelatedDescription":"Closed or merged PR \"Build the platforms package for shipping\" (#42940)"},{"Id":"644373851","IsPullRequest":true,"CreatedAt":"2020-06-25T02:37:55","Actor":"carlossanlop","Number":"42939","RawContent":null,"Title":"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37538\r\n\r\n### Summary\r\n\r\n[This 3.1 code fix](https://github.com/dotnet/corefx/pull/42501/files), which addressed a .NET Standard issue in System.IO.FileSystem.AccessControl introduced a recursive call in Path.cs that affects the `Microsoft.IO` version of `Path`.\r\n\r\n### Customer Impact\r\n\r\nCurrently impacts Visual Studio who is consuming Microsoft.IO (see issue).\r\nSystem.IO is not affected by this recursive call because the `Path` code consumed by that namespace lives in the mirrored file in coreclr.\r\n\r\n### Regression?\r\n\r\nYes.\r\n\r\n### Testing\r\n\r\nI built corefx in both netcoreapp3.1 and netfx.\r\nI ran the tests in System.Runtime.Extensions, which is where the Path unit tests live, for both frameworks.\r\nThere are no Microsoft.IO unit tests, so I copied the dll into a NetFX console app, made a call to `TrimEndingDirectorySeparator(ReadOnlySpan<char> path)` and confirmed that the issue is resolved for Microsft.IO.\r\n\r\n### Risk\r\n\r\nLow: Accepting this change will get rid of the recursive call affecting Microsoft.IO.\r\n\r\ncc @danmosemsft @ericstj","Url":"https://github.com/dotnet/corefx/pull/42939","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call\" (#42939)"},{"Id":"644136441","IsPullRequest":true,"CreatedAt":"2020-06-23T20:48:29","Actor":"cheenamalhotra","Number":"42938","RawContent":null,"Title":"[Release/3.1] Fix infinite loop when end of stream is reached","State":"open","Body":"Ports https://github.com/dotnet/SqlClient/pull/577 to fix issue https://github.com/dotnet/SqlClient/issues/165 in System.Data.SqlClient\r\n\r\n### Summary\r\nThe issue has been occurring for many customer applications where Client and Server cannot find a common security protocol to continue SSL handshake as the server does not send any further information while the client continues to loop. This started happening recently when client OS and docker containers disabled TLS v1.0 and v1.1, while target servers were not upgraded to TLS v1.2. \r\n\r\n### Customer Impact\r\n**Medium:** The issue impacts Linux and Mac applications where servers are not ready to transition to TLS v1.2.\r\n\r\n### Regression?\r\nNo, this issue is reproducible with all previous versions of .NET Core SqlClient drivers (impacts Managed SNI use-cases).\r\n\r\n### Testing\r\nIn order to test this issue, a special setup is required on server side, to disable TLS v1.2 while the client only supports with TLSv1.2+. Local testing has been done to confirm the fix is applicable and the driver can now come out of infinite loop and throw exception.\r\n\r\n### Risk\r\n**Low:** The fix is not a major functional change, and it applies only to Linux/Mac customers if their servers are not updated to support TLS 1.2. This has also been released in Microsoft.Data.SqlClient v1.1.3 and v2.0.0.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42938","RelatedDescription":"Open PR \"[Release/3.1] Fix infinite loop when end of stream is reached\" (#42938)"},{"Id":"643406701","IsPullRequest":true,"CreatedAt":"2020-06-22T22:46:55","Actor":"cheenamalhotra","Number":"42937","RawContent":null,"Title":"[Release 3.1] Avoid enlistment of pooled connection in aborted transaction","State":"open","Body":"Ports https://github.com/dotnet/SqlClient/pull/551 and https://github.com/dotnet/SqlClient/pull/543 to System.Data.SqlClient.\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/237 that occurs due to driver enlisting pooled connection in stale transaction which is due abort from SysTx.Transactions on the server. This incorrect enlistment causes server to perform forth-coming operations in implicit mode, causing unwanted commits.\r\n\r\nThe fix ensures if a transaction gets aborted externally, the corresponding connection is not sent back to the pool.\r\n\r\n### Customer Impact\r\n**High** This bug causes the driver to perform commits outside transaction even though client is presumably working inside a transaction. It qualifies for a security issue.\r\n\r\n### Regression?\r\nNo, this issue is reproducible with all SqlClient drivers.\r\n\r\n### Testing\r\nThis issue has not yet been reproduced in .NET Core applications but the driver behavior being same to that of .NET Framework needs to be fixed. The issue happens intermittently and is more likely to happen on SQL Server machines working in heavy load. The original issue was reproduced in WPF Client application, with failures seen intermittently. But client applications on any platform are susceptible to this issue.\r\n\r\n### Risk\r\n**Low**: The fix has been verified by customers with failing use-cases, and by our teams by validating driver behavior on how it works with aborted transactions.\r\n\r\nThe scope of changes is low, and the fix has also been released in Microsoft.Data.SqlClient v1.1.1 and v2.0.0.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42937","RelatedDescription":"Open PR \"[Release 3.1] Avoid enlistment of pooled connection in aborted transaction\" (#42937)"},{"Id":"641565767","IsPullRequest":true,"CreatedAt":"2020-06-22T15:55:11","Actor":"dotnet-maestro-bot","Number":"42936","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @Anipik\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42936","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42936)"},{"Id":"641542597","IsPullRequest":true,"CreatedAt":"2020-06-18T21:35:27","Actor":"silvioguiso","Number":"42935","RawContent":null,"Title":"Updates pipelines branches","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42935","RelatedDescription":"Closed or merged PR \"Updates pipelines branches\" (#42935)"},{"Id":"639055539","IsPullRequest":true,"CreatedAt":"2020-06-15T18:34:08","Actor":"wfurt","Number":"42934","RawContent":null,"Title":"[release/2.1] add new Ubuntu & Alpine versions to RID graph","State":"open","Body":"This is port of #42928 for https://github.com/dotnet/runtime/issues/37000\r\nAdds new RID for Ubuntu & Alpine. \r\nMarking as servicing-approved per discussion in https://github.com/dotnet/corefx/pull/42928\r\n\r\nfixes  https://github.com/dotnet/runtime/issues/37000","Url":"https://github.com/dotnet/corefx/pull/42934","RelatedDescription":"Open PR \"[release/2.1] add new Ubuntu & Alpine versions to RID graph\" (#42934)"},{"Id":"637209922","IsPullRequest":true,"CreatedAt":"2020-06-15T17:23:46","Actor":"dotnet-maestro-bot","Number":"42933","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42933","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)\" (#42933)"},{"Id":"636443187","IsPullRequest":true,"CreatedAt":"2020-06-10T19:33:29","Actor":"dotnet-maestro-bot","Number":"42932","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42932","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42932)"},{"Id":"636421450","IsPullRequest":true,"CreatedAt":"2020-06-10T17:54:52","Actor":"Anipik","Number":"42931","RawContent":null,"Title":"Merging changes and no branding or packages changes required","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42931","RelatedDescription":"Closed or merged PR \"Merging changes and no branding or packages changes required\" (#42931)"},{"Id":"635667378","IsPullRequest":true,"CreatedAt":"2020-06-09T23:09:40","Actor":"Anipik","Number":"42930","RawContent":null,"Title":"Branding for 3.1.6","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42930","RelatedDescription":"Closed or merged PR \"Branding for 3.1.6\" (#42930)"},{"Id":"631808790","IsPullRequest":true,"CreatedAt":"2020-06-05T23:02:44","Actor":"joperezr","Number":"42929","RawContent":null,"Title":"Removing reference assets from Microsoft.Bcl.AsyncInterfaces and Microsoft.Bcl.HashCode packages","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37496\r\n\r\ncc: @ericstj @StephenBonikowsky @Anipik @andreyns\r\n\r\nApplications that rely on the workflow compiler task require all of the consuming packages to not expose reference assets when restored for .NET Framework. For this reason, we want to remove the reference assets from these two compat packs which are part of the closure of Microsoft.Extensions.Hosting.","Url":"https://github.com/dotnet/corefx/pull/42929","RelatedDescription":"Closed or merged PR \"Removing reference assets from Microsoft.Bcl.AsyncInterfaces and Microsoft.Bcl.HashCode packages\" (#42929)"},{"Id":"626777329","IsPullRequest":true,"CreatedAt":"2020-06-02T19:30:34","Actor":"wfurt","Number":"42928","RawContent":null,"Title":"[release/3.1]  update Ubuntu and Alpine RID","State":"closed","Body":"This is port of https://github.com/dotnet/runtime/pull/37031 to add new RID for Ubuntu and Alpine releases.\r\n\r\nfixes https://github.com/dotnet/runtime/issues/37000\r\n\r\nI'm not sure what the approval process is for this @danmosemsft. \r\nDiscussion in https://github.com/dotnet/corefx/pull/42871 sugests \"tell-mode\"  but I'm not sure if that is still correct.","Url":"https://github.com/dotnet/corefx/pull/42928","RelatedDescription":"Closed or merged PR \"[release/3.1]  update Ubuntu and Alpine RID\" (#42928)"},{"Id":"622653785","IsPullRequest":true,"CreatedAt":"2020-05-21T17:48:40","Actor":"dotnet-maestro-bot","Number":"42927","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42927","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42927)"},{"Id":"622651452","IsPullRequest":true,"CreatedAt":"2020-05-21T17:16:47","Actor":"Anipik","Number":"42926","RawContent":null,"Title":"update branding for 2.1.19","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42926","RelatedDescription":"Closed or merged PR \"update branding for 2.1.19\" (#42926)"},{"Id":"622028652","IsPullRequest":true,"CreatedAt":"2020-05-20T20:56:35","Actor":"Anipik","Number":"42925","RawContent":null,"Title":"update branding for 2.1.19","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42925","RelatedDescription":"Closed or merged PR \"update branding for 2.1.19\" (#42925)"},{"Id":"621235040","IsPullRequest":true,"CreatedAt":"2020-05-20T16:12:17","Actor":"joperezr","Number":"42924","RawContent":null,"Title":"Fixing Debuggable attribute getting set on S.R.CS.Unsafe Release builds","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/36664\r\n\r\ncc: @ericstj @Anipik @jkotas @tannergooding \r\n\r\nFull issue description is on the linked issue above, but generally we recently serviced Unsafe package and added a net461 asset in there which broke some customers since this new asset had attribute `[assembly: Debuggable(DebuggableAttribute.DebuggingModes.Default | DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints)]` set. This fix will change DebugType so that the linker SDK won't send an option to the linker causing this attribute to get set.","Url":"https://github.com/dotnet/corefx/pull/42924","RelatedDescription":"Closed or merged PR \"Fixing Debuggable attribute getting set on S.R.CS.Unsafe Release builds\" (#42924)"},{"Id":"619294250","IsPullRequest":true,"CreatedAt":"2020-05-15T23:14:26","Actor":"dotnet-maestro[bot]","Number":"42923","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200513.2\r\n- **Date Produced**: 5/14/2020 2:56 AM\r\n- **Commit**: b1745659051f73cf089fbfb2ebbe4648c2fb6c12\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42923","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42923)"},{"Id":"618429792","IsPullRequest":true,"CreatedAt":"2020-05-14T21:56:53","Actor":"joperezr","Number":"42922","RawContent":null,"Title":"Reving up version of WinHttpHandler to 4.7.2","State":"closed","Body":"cc: @ericstj @Anipik @wtgodbe @mmitche ","Url":"https://github.com/dotnet/corefx/pull/42922","RelatedDescription":"Closed or merged PR \"Reving up version of WinHttpHandler to 4.7.2\" (#42922)"},{"Id":"618396928","IsPullRequest":true,"CreatedAt":"2020-05-14T21:54:20","Actor":"joperezr","Number":"42921","RawContent":null,"Title":"Fixing System.Net.Http.Json so that it won't require facades when restored in net461","State":"closed","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nThis is a new package comming in from the blazor branch, which for it's release would have still required the netstandard shims. By re-spinning a build it will automatically get fixed so that is what this PR is doing.","Url":"https://github.com/dotnet/corefx/pull/42921","RelatedDescription":"Closed or merged PR \"Fixing System.Net.Http.Json so that it won't require facades when restored in net461\" (#42921)"},{"Id":"610893020","IsPullRequest":true,"CreatedAt":"2020-05-13T23:31:35","Actor":"joperezr","Number":"42915","RawContent":null,"Title":"Merging Blazor feature branch into release/3.1","State":"closed","Body":"cc: @ericstj @pranavkm @Jozkee @Anipik @safern \r\n\r\nThis was mostly a straight forward merge except for the following conflicts/changes I made:\r\n\r\n- **[Merge Conflict]** eng\\Versions.props: We had done some special branding for blazor feature branch, I kept source as it was on release/3.1 branch as that is what we wanted.\r\n- **[Merge Conflict]** src\\packages.builds: We had conflicts here since the packages that were being built were different. I kept source as it was on release/3.1.\r\n- **[Post-Merge manual change]** eng\\corefx-base.yml and eng\\windows.yml: We made some changes on the blazor feature branch in order to ONLY ship the http json package on these yml files. I removed those changes and kept source as it was on release/3.1\r\n- **[Post-Merge manual change]** packageIndex.json: I manually added the 3.2.0 as stable version, as it will have shipped by the time we merge this PR\r\n\r\nOther than the above details, this was just a direct merge and I didn't have to edit anything else.","Url":"https://github.com/dotnet/corefx/pull/42915","RelatedDescription":"Closed or merged PR \"Merging Blazor feature branch into release/3.1\" (#42915)"},{"Id":"608486062","IsPullRequest":true,"CreatedAt":"2020-05-13T21:41:11","Actor":"vcsjones","Number":"42914","RawContent":null,"Title":"[release/3.1] Handle additional chain statuses for X509Chain on macOS","State":"closed","Body":"Ports the following PRs from runtime in to the release/3.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/3.1 branch.\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 3.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42914","RelatedDescription":"Closed or merged PR \"[release/3.1] Handle additional chain statuses for X509Chain on macOS\" (#42914)"},{"Id":"605929794","IsPullRequest":true,"CreatedAt":"2020-05-13T21:39:00","Actor":"mconnew","Number":"42912","RawContent":null,"Title":"Fix serialization of read-only IEnumerable's for DCS","State":"closed","Body":"Servicing change for dotnet/runtime#34151\r\n\r\n## Description\r\n\r\nWhen a DataContractSerializer is created for an IEnumerable type without a default constructor, we should still be able to serialize the contents even though we can't instantiate an instance when deserializing. The silverlight implementation of DCS was originally ported which lacks this capability.  This breaks serialization of the results from many LINQ queries.  \r\nThe fix is to port the late throwing capability from .NET Framework.\r\n\r\n## Customer Impact\r\n\r\nInternal customer is unable to port an existing .NET Framework WCF based service to CoreWCF.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework. This is not a regression from earlier versions of .NET Core.\r\n\r\n## Testing\r\n\r\nThis includes a unit test which serializes a LINQ query result which returns a type without a default constructor.\r\n\r\n## Risk\r\n\r\n**Low**. This is porting the existing implementation from .NET Framework. It's not introducing any new failure code paths as it turns a throw into a potential deferred throw. Existing happy code path is unaltered. Includes tests for the specific customer scenario.","Url":"https://github.com/dotnet/corefx/pull/42912","RelatedDescription":"Closed or merged PR \"Fix serialization of read-only IEnumerable's for DCS\" (#42912)"},{"Id":"617635660","IsPullRequest":true,"CreatedAt":"2020-05-13T21:32:27","Actor":"Anipik","Number":"42920","RawContent":null,"Title":"Update branding for 3.1.5","State":"closed","Body":"The history looks distorted because we didnt merge the internal branches as it was not required.\r\ni updated the branding and packageindex.\r\nand removed the packages from packages.build","Url":"https://github.com/dotnet/corefx/pull/42920","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.5\" (#42920)"},{"Id":"617630775","IsPullRequest":true,"CreatedAt":"2020-05-13T17:38:18","Actor":"Anipik","Number":"42919","RawContent":null,"Title":"[Donnot review]Branding2","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42919","RelatedDescription":"Closed or merged PR \"[Donnot review]Branding2\" (#42919)"},{"Id":"617035111","IsPullRequest":true,"CreatedAt":"2020-05-12T23:52:49","Actor":"Anipik","Number":"42918","RawContent":null,"Title":"update branding to 3.1.5","State":"closed","Body":"- There was no darc feed to remove","Url":"https://github.com/dotnet/corefx/pull/42918","RelatedDescription":"Closed or merged PR \"update branding to 3.1.5\" (#42918)"},{"Id":"616423599","IsPullRequest":true,"CreatedAt":"2020-05-12T07:22:11","Actor":"kouvel","Number":"42917","RawContent":null,"Title":"[3.1] Test-only followup for \"Fix Unix named mutex crash during some race conditions\"","State":"open","Body":"Test-only port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\nTest-only followup for and depends on https://github.com/dotnet/coreclr/pull/28039\r\n\r\nCloses https://github.com/dotnet/runtime/issues/34271","Url":"https://github.com/dotnet/corefx/pull/42917","RelatedDescription":"Open PR \"[3.1] Test-only followup for \"Fix Unix named mutex crash during some race conditions\"\" (#42917)"},{"Id":"611046209","IsPullRequest":true,"CreatedAt":"2020-05-05T17:54:59","Actor":"vcsjones","Number":"42916","RawContent":null,"Title":"[release/2.1] Handle additional chain statuses for X509Chain on macOS","State":"closed","Body":"Ports the following PRs in to the release/2.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n* dotnet/corefx#40117\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/2.1 branch.\r\n\r\nThis omits the unit test changes from 40117 because that test does not exist in release/2.1\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 2.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42916","RelatedDescription":"Closed or merged PR \"[release/2.1] Handle additional chain statuses for X509Chain on macOS\" (#42916)"},{"Id":"607782633","IsPullRequest":true,"CreatedAt":"2020-04-27T20:10:29","Actor":"pranavkm","Number":"42913","RawContent":null,"Title":"Produce stable builds of System.Net.Http.Json","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42913","RelatedDescription":"Closed or merged PR \"Produce stable builds of System.Net.Http.Json\" (#42913)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"647805114","IsPullRequest":true,"CreatedAt":"2020-06-30T05:08:42","Actor":"RikkiGibson","Number":"45554","RawContent":null,"Title":"Reduce release/x64 baseline in DeeplyNestedGeneric","State":"closed","Body":"/cc @dibarbet. This test seems to be unreliable currently.","Url":"https://github.com/dotnet/roslyn/pull/45554","RelatedDescription":"Closed or merged PR \"Reduce release/x64 baseline in DeeplyNestedGeneric\" (#45554)"},{"Id":"647737961","IsPullRequest":true,"CreatedAt":"2020-06-30T03:53:59","Actor":"dibarbet","Number":"45543","RawContent":null,"Title":"Merge Release/dev16.8 preview1 vs deps into master-vs-deps","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/45543","RelatedDescription":"Closed or merged PR \"Merge Release/dev16.8 preview1 vs deps into master-vs-deps\" (#45543)"},{"Id":"647742248","IsPullRequest":true,"CreatedAt":"2020-06-30T03:53:56","Actor":"dibarbet","Number":"45546","RawContent":null,"Title":"Merge 16.8 preview 1 vs-deps back into master-vs-deps","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/45546","RelatedDescription":"Closed or merged PR \"Merge 16.8 preview 1 vs-deps back into master-vs-deps\" (#45546)"},{"Id":"647815938","IsPullRequest":true,"CreatedAt":"2020-06-30T03:02:51","Actor":"dotnet-bot","Number":"45557","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45557","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#45557)"},{"Id":"647815546","IsPullRequest":true,"CreatedAt":"2020-06-30T03:01:59","Actor":"jnm2","Number":"45556","RawContent":null,"Title":"Show format string completion options when the formatting component colon is typed","State":"open","Body":"Same principle as https://github.com/dotnet/roslyn/pull/45309. Requested by @CyrusNajmabadi.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/45556","RelatedDescription":"Open PR \"Show format string completion options when the formatting component colon is typed\" (#45556)"},{"Id":"647815408","IsPullRequest":true,"CreatedAt":"2020-06-30T03:01:36","Actor":"dotnet-bot","Number":"45555","RawContent":null,"Title":"Merge release/dev16.7 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.7 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.7\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45555","RelatedDescription":"Open PR \"Merge release/dev16.7 to master\" (#45555)"},{"Id":"647802816","IsPullRequest":true,"CreatedAt":"2020-06-30T02:28:53","Actor":"tmat","Number":"45553","RawContent":null,"Title":"Remove obsolete UnitTesting external access APIs","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/45553","RelatedDescription":"Open PR \"Remove obsolete UnitTesting external access APIs\" (#45553)"},{"Id":"647800321","IsPullRequest":true,"CreatedAt":"2020-06-30T02:22:43","Actor":"tmat","Number":"45552","RawContent":null,"Title":"Move Encoding serialization to the compiler layer","State":"open","Body":"Follow up on https://github.com/dotnet/roslyn/pull/45374","Url":"https://github.com/dotnet/roslyn/pull/45552","RelatedDescription":"Open PR \"Move Encoding serialization to the compiler layer\" (#45552)"},{"Id":"647740754","IsPullRequest":true,"CreatedAt":"2020-06-30T01:47:26","Actor":"dibarbet","Number":"45544","RawContent":null,"Title":"Merge 16.8 back into master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/45544","RelatedDescription":"Closed or merged PR \"Merge 16.8 back into master\" (#45544)"},{"Id":"647766735","IsPullRequest":false,"CreatedAt":"2020-06-30T00:56:36","Actor":"joshlang","Number":"45551","RawContent":null,"Title":"Rough edges when combining Records with System.Text.Json serializers","State":"open","Body":"First.  I love these two awesome things:\r\n- Records\r\n- System.Text.Json\r\n\r\nAnd they should get married.  And marriage should be a frictionless wonderful experience :D  But they're still squabbling a bit.\r\n\r\nConsider this:\r\n```\r\nrecord Test1(int Hello);\r\n...\r\nvar s = JsonSerializer.Serialize(new Test1(4)); // { \"Hello\": 4 }\r\nvar t = JsonSerializer.Deserialize<Test1>(s);\r\n```\r\n\r\nIt explodes!  The deserializer would match `hello` in the constructor, but not `Hello` (by default).  So you get a `InvalidOperationException`.\r\n\r\nPossible workarounds (other than specifying json serialization options to ignore case):  \r\n1) Allow some sort of option to disable auto-camelCasing in the auto-generated constructor\r\n2) Use `record Test1(int hello)` instead, and don't fret that the property name isn't PascalCase\r\n3) Don't use the super-awesome terse way of defining a record\r\n\r\nKudo's that you somehow made `class A { public int Hello { get; init; } }` work with JsonSerializer despite no hidden constructors!!\r\n\r\nAnother thing that'd be sweet:  `record Test1([JsonPropertyName(\"meow\")] int Hello);` or `record Test1([property: JsonPropertyName(\"meow\")] int Hello);`\r\n\r\nWhether something gets baked into the language, or we just need to know how to work around these points... It'd probably be helpful for a lot of folks if there was a blog post somewhere titled **\"Making C# Records and System.Text.Json serialization work together\"**!  Just a thought.","Url":"https://github.com/dotnet/roslyn/issues/45551","RelatedDescription":"Open issue \"Rough edges when combining Records with System.Text.Json serializers\" (#45551)"},{"Id":"647761921","IsPullRequest":true,"CreatedAt":"2020-06-30T00:42:55","Actor":"dibarbet","Number":"45550","RawContent":null,"Title":"Merge Release/dev16.8 preview1 into 16.8p1-vs-deps","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/45550","RelatedDescription":"Open PR \"Merge Release/dev16.8 preview1 into 16.8p1-vs-deps\" (#45550)"},{"Id":"647746898","IsPullRequest":true,"CreatedAt":"2020-06-30T00:03:06","Actor":"dotnet-bot","Number":"45549","RawContent":null,"Title":"Merge master to features/module-initializers","State":"open","Body":"\nThis is an automatically generated pull request from master into features/module-initializers.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/module-initializers\ngit reset --hard upstream/features/module-initializers\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/module-initializers --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45549","RelatedDescription":"Open PR \"Merge master to features/module-initializers\" (#45549)"},{"Id":"647746829","IsPullRequest":true,"CreatedAt":"2020-06-30T00:02:53","Actor":"dotnet-bot","Number":"45548","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"open","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45548","RelatedDescription":"Open PR \"Merge master to features/static-lambdas\" (#45548)"},{"Id":"647746700","IsPullRequest":true,"CreatedAt":"2020-06-30T00:02:31","Actor":"dotnet-bot","Number":"45547","RawContent":null,"Title":"Merge release/dev16.7 to release/dev16.7-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.7 into release/dev16.7-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-to-release/dev16.7-vs-deps\ngit reset --hard upstream/release/dev16.7-vs-deps\ngit merge upstream/release/dev16.7\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-to-release/dev16.7-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45547","RelatedDescription":"Open PR \"Merge release/dev16.7 to release/dev16.7-vs-deps\" (#45547)"},{"Id":"647741776","IsPullRequest":true,"CreatedAt":"2020-06-29T23:48:20","Actor":"chsienki","Number":"45545","RawContent":null,"Title":"Undo incorrect name change","State":"open","Body":"I am an idiot, and this (https://github.com/dotnet/roslyn/pull/45357#discussion_r444514499) shouldn't have been changed. \r\n\r\nThis PR fixes the name change.","Url":"https://github.com/dotnet/roslyn/pull/45545","RelatedDescription":"Open PR \"Undo incorrect name change\" (#45545)"},{"Id":"647737210","IsPullRequest":true,"CreatedAt":"2020-06-29T23:44:37","Actor":"dibarbet","Number":"45542","RawContent":null,"Title":"Merge Release/dev16.8 preview1 into master","State":"closed","Body":"Merging 16.8 branch back into master (now that it's pointing to p1","Url":"https://github.com/dotnet/roslyn/pull/45542","RelatedDescription":"Closed or merged PR \"Merge Release/dev16.8 preview1 into master\" (#45542)"},{"Id":"647737052","IsPullRequest":true,"CreatedAt":"2020-06-29T23:34:41","Actor":"RikkiGibson","Number":"45541","RawContent":null,"Title":"Demonstrate behavior of GetTypeInfo on 'var' in lambda","State":"open","Body":"Related to #45398\r\n\r\nBasically it seems like mostly we do give valid type info for a 'var' in a lambda, but we do not give nullability information when there is no valid conversion for the lambda. We may or may not wish to fix this, but it seemed worthwhile to demonstrate the current behavior in tests.","Url":"https://github.com/dotnet/roslyn/pull/45541","RelatedDescription":"Open PR \"Demonstrate behavior of GetTypeInfo on 'var' in lambda\" (#45541)"},{"Id":"647729707","IsPullRequest":true,"CreatedAt":"2020-06-29T23:15:39","Actor":"tmat","Number":"45540","RawContent":null,"Title":"Revert \"Revert \"Remove Razor IVTs (#43235)\"\"","State":"open","Body":"This reverts commit 0dc4f3da3ff013548d0f91c6927d142ac339893b and also deletes Microsoft.VisualStudio.LanguageServices.Razor.RemoteClient.csproj","Url":"https://github.com/dotnet/roslyn/pull/45540","RelatedDescription":"Open PR \"Revert \"Revert \"Remove Razor IVTs (#43235)\"\"\" (#45540)"},{"Id":"647716940","IsPullRequest":true,"CreatedAt":"2020-06-29T22:39:21","Actor":"jaredpar","Number":"45539","RawContent":null,"Title":"Standardize on net45 references","State":"open","Body":"This is an attempt to standardize all of our `net5` TF usage in our\r\ntests to a declarative single set of `net5` references.\r\n\r\nThis replaces code which combined references in an adhoc /\r\nnon-declarative manner. That style made it hard to read tests and\r\nunderstand what is being tested, in the modern sense of .NET at least,\r\nand also contributed negatively to our efforts to trim down the size of\r\nour proprietary resource DLL","Url":"https://github.com/dotnet/roslyn/pull/45539","RelatedDescription":"Open PR \"Standardize on net45 references\" (#45539)"},{"Id":"647714905","IsPullRequest":false,"CreatedAt":"2020-06-29T22:33:50","Actor":"cston","Number":"45538","RawContent":null,"Title":"Syntax error for record with type constraints and no body","State":"open","Body":"```C#\r\nrecord R<T> where T : class;\r\n```\r\n```\r\n(1,28): error CS1003: Syntax error, ',' expected\r\n(1,29): error CS1514: { expected\r\n(1,29): error CS1513: } expected\r\n```\r\nSee [sharplab.io](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDZICYgNQA+CcAxgPYLYAEASgDwAqAfFQO4AWicVDVIVAAQBMAbiA==)","Url":"https://github.com/dotnet/roslyn/issues/45538","RelatedDescription":"Open issue \"Syntax error for record with type constraints and no body\" (#45538)"},{"Id":"647714669","IsPullRequest":true,"CreatedAt":"2020-06-29T22:33:23","Actor":"mavasani","Number":"45537","RawContent":null,"Title":"AnalyzerDriver performance improvements","State":"open","Body":"1. Avoid creating and querying dictionaries from analyzers to actions. Instead maintain a tuple of (analyzer, actions) and special case IDE partial analysis (open files only and/or subset of analyzers) to skip analyzers not in analysis scope.\r\n2. Cache grouped analyzer actions for per-symbol actions registered within SymbolStart actions instead of re-computing them for every member symbol.\r\n\r\n## Performance numbers\r\n\r\nAround **10-15%** improvement in analyzer execution time on following test sets:\r\n\r\n### 1. Compiler benchmark\r\nBenchmark: https://github.com/dotnet/roslyn/blob/master/docs/wiki/Measuring-Compiler-Performance.md\r\n\r\n#### Using compiler built from current master branch\r\n1. Default benchmark:\r\n\r\n|                      Method |    Mean   |   Error |  StdDev |  Median |     Min |     Max |       Gen 0 |      Gen 1 |     Gen 2 | Allocated |\r\n|---------------------------- |----------:|--------:|--------:|--------:|--------:|--------:|------------:|-----------:|----------:|----------:|\r\n| GetDiagnosticsWithAnalyzers | **14.79 s** | 0.147 s | 0.304 s | 14.87 s | 14.17 s | 15.45 s | 218000.0000 | 64000.0000 | 3000.0000 |   1.28 GB |\r\n\r\n2. Default benchmark + one SymbolStart analyzer:\r\n\r\n|                      Method |    Mean   |   Error |  StdDev |  Median |     Min |     Max |       Gen 0 |      Gen 1 |     Gen 2 | Allocated |\r\n|---------------------------- |----------:|--------:|--------:|--------:|--------:|--------:|------------:|-----------:|----------:|----------:|\r\n| GetDiagnosticsWithAnalyzers | **16.96 s** | 0.079 s | 0.088 s | 16.95 s | 16.85 s | 17.14 s | 225000.0000 | 66000.0000 | 2000.0000 |   1.32 GB |\r\n\r\n#### Using compiler built with this PR branch\r\n1. Default benchmark:\r\n\r\n|                      Method |    Mean   |   Error |  StdDev |  Median |     Min |     Max |       Gen 0 |      Gen 1 |     Gen 2 | Allocated |\r\n|---------------------------- |----------:|--------:|--------:|--------:|--------:|--------:|------------:|-----------:|----------:|----------:|\r\n| GetDiagnosticsWithAnalyzers | **12.76 s** | 0.077 s | 0.085 s | 12.75 s | 12.62 s | 12.92 s | 218000.0000 | 60000.0000 | 2000.0000 |   1.28 GB |\r\n\r\n2. Default benchmark + one SymbolStart analyzer:\r\n\r\n|                      Method |    Mean   |   Error |  StdDev |  Median |     Min |     Max |       Gen 0 |      Gen 1 |     Gen 2 | Allocated |\r\n|---------------------------- |----------:|--------:|--------:|--------:|--------:|--------:|------------:|-----------:|----------:|----------:|\r\n| GetDiagnosticsWithAnalyzers | **14.87 s** | 0.121 s | 0.101 s | 14.90 s | 14.72 s | 15.08 s | 220000.0000 | 65000.0000 | 2000.0000 |   1.29 GB |\r\n\r\n### 2. Building real world projects\r\n\r\n1. **Microsoft.CodeAnalysis.CSharp.csproj**: `msbuild /v:m /m /t:rebuild /p:UseRoslynAnalyzers=true`: Improvement from _~60 seconds_ to _~51 seconds_\r\n2. **RoslynAnalyzers.sln**:  Improvement from _~55 seconds_ to _~48 seconds_","Url":"https://github.com/dotnet/roslyn/pull/45537","RelatedDescription":"Open PR \"AnalyzerDriver performance improvements\" (#45537)"},{"Id":"647657437","IsPullRequest":true,"CreatedAt":"2020-06-29T22:06:05","Actor":"jasonmalinowski","Number":"45529","RawContent":null,"Title":"Revert \"Move SymbolSearch down to EditorFeatures (#45505)\"","State":"closed","Body":"This reverts commit f755e8a8ed1d5200153990a099e6ad4c461eb592. That change meant our EditorFeatures code was using DllImports in the cross-platform binary, and we weren't sure what that would do in VS for Mac if that code ran. It also brought a dependency on Microsoft.VisualStudio.RemoteControl, which also seems to depend on various Windows specific APIs.\r\n\r\nWe'll finish up the decision of what to do in https://github.com/dotnet/roslyn/pull/45115","Url":"https://github.com/dotnet/roslyn/pull/45529","RelatedDescription":"Closed or merged PR \"Revert \"Move SymbolSearch down to EditorFeatures (#45505)\"\" (#45529)"},{"Id":"647700608","IsPullRequest":false,"CreatedAt":"2020-06-29T22:01:44","Actor":"genlu","Number":"45536","RawContent":null,"Title":"Add option to switch servicehub process between desktop and core CLR","State":"open","Body":"Blocked on #45535 and https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1024848","Url":"https://github.com/dotnet/roslyn/issues/45536","RelatedDescription":"Open issue \"Add option to switch servicehub process between desktop and core CLR\" (#45536)"},{"Id":"647698984","IsPullRequest":false,"CreatedAt":"2020-06-29T21:58:52","Actor":"genlu","Number":"45535","RawContent":null,"Title":"Ship .Net Core version of IDE assemblies in VS package","State":"open","Body":"Blocked on #45534 \r\nThe ultimate goal is to switch Roslyn OOP process in VS to .Net Core version of servicehub","Url":"https://github.com/dotnet/roslyn/issues/45535","RelatedDescription":"Open issue \"Ship .Net Core version of IDE assemblies in VS package\" (#45535)"},{"Id":"647696532","IsPullRequest":false,"CreatedAt":"2020-06-29T21:53:58","Actor":"genlu","Number":"45534","RawContent":null,"Title":"Targeting IDE layer projects to .Net Core","State":"open","Body":"So we can eventually switch Roslyn OOP process in VS to .Net Core version of servicehub\r\n\r\nThis also include unit tests.","Url":"https://github.com/dotnet/roslyn/issues/45534","RelatedDescription":"Open issue \"Targeting IDE layer projects to .Net Core\" (#45534)"},{"Id":"647694042","IsPullRequest":false,"CreatedAt":"2020-06-29T21:48:41","Actor":"vsfeedback","Number":"45533","RawContent":null,"Title":"Intellisense triggers ArgumentException when a variable is a different type depending on #if when nullable is enabled","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1092335/intellisense-triggers-argumentexception-when-a-var.html)._\n\n---\nSo, let's say I'm targeting both .Net Standard 2.0 and .Net Standard 2.1 in a particular project so that I can use spans in the latter. I am implementing a particular method like this:\n\n```\n#if NETSTANDARD2_1\n    ReadOnlySpan<char> value;\n#else\n    string value;\n#endif\n\n#nullable enable\n    value = whatever();\n    for (int i = 0; i < value.Length; i++)\n    {\n        ...\n    }\n```\n\nIntelliSense crashes with an ArgumentException if I move the mouse over `value` or `value.Length` when all of the conditions are true:\n\n1. It's *outside* of the `#if` block (that is, it's in a scope in which there's any ambiguity as to whether it's a `string` or a `ReadOnlySpan<char>`, \n2. the current project is set to one in which `value` is a span (or Memory, or possibly other `ref struct`s, etc), _and_\n3. nullable reference types are enabled.\n\nThis also happens with other type parameters, i.e. `byte[]`/`ReadOnlySpan<byte>` and suchlike.\n\n(Also, if I access `value. Length` when either condition 2 or 3 is *not* all true, the IntelliSense hover reports `value` as a `string` and `value. Length` as `ReadOnlySpan<char>. Length`.)\n\nTwo obvious workarounds: either 1. disable #nullable in these sorts of scopes, or 2. switch the current project to one where it's not a `ref struct`.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/28/2020, 01:08 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/45533","RelatedDescription":"Open issue \"Intellisense triggers ArgumentException when a variable is a different type depending on #if when nullable is enabled\" (#45533)"},{"Id":"647689860","IsPullRequest":false,"CreatedAt":"2020-06-29T21:40:06","Actor":"vsfeedback","Number":"45532","RawContent":null,"Title":"Rename does not change text in #region","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1090759/rename-does-not-change-text-in-region.html)._\n\n---\n[regression]\r\nI am not sure the last version in which this function worked.  I belive in an earlier 16.7 or 16.6\n\nSee the attached screen capture.\n\nI have just completed a right click rename fo the class name.  It was ScheduleTime.\nI right clicked.\nChose rename\nchecked  top 3 boxes\nTyped the new name\nHit enter.\nNotice that the ScheduleTime in the #region statements did not change.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/27/2020, 08:30 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/45532","RelatedDescription":"Open issue \"Rename does not change text in #region\" (#45532)"},{"Id":"647684476","IsPullRequest":false,"CreatedAt":"2020-06-29T21:30:23","Actor":"cston","Number":"45531","RawContent":null,"Title":"Operation with native integer constant that might overflow in unchecked context should be treated as not constant","State":"open","Body":"The value of `y` depends on whether the program is executed on 32-bit or 64-bit platform. Therefore the value should be treated as non-constant. See [LDM-2020-03-25](https://github.com/dotnet/csharplang/blob/master/meetings/2020/LDM-2020-03-25.md#behavior-of-constant-folding).\r\n```C#\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        const long x = 0xFFFFFFFFFFFFFFFL;\r\n        const nint y = unchecked((nint)x);\r\n              nint z = unchecked((nint)x);\r\n        Console.WriteLine(\"{0}, {1}\", y, z);\r\n    }\r\n}\r\n```\r\nExpected: `error CS0133: The expression being assigned to 'y' must be constant`\r\nActual: No errors","Url":"https://github.com/dotnet/roslyn/issues/45531","RelatedDescription":"Open issue \"Operation with native integer constant that might overflow in unchecked context should be treated as not constant\" (#45531)"},{"Id":"647671925","IsPullRequest":true,"CreatedAt":"2020-06-29T21:10:06","Actor":"dibarbet","Number":"45530","RawContent":null,"Title":"[LSP] Remove snippets from completion list until they are supported","State":"open","Body":"Fixes - https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1145547/\r\n\r\nLong term support for snippets is coming in late 16.8 timeframe.  Until then since committing these items does nothing, we should remove them from the LSP completion results.","Url":"https://github.com/dotnet/roslyn/pull/45530","RelatedDescription":"Open PR \"[LSP] Remove snippets from completion list until they are supported\" (#45530)"},{"Id":"647651772","IsPullRequest":true,"CreatedAt":"2020-06-29T20:38:56","Actor":"jcouv","Number":"45528","RawContent":null,"Title":"Update status for \"top-level statements\" feature","State":"open","Body":"@AlekseyTs I couldn't remember which preview this made it into. Was it 16.7p3 or in the upcoming 16.7p4?","Url":"https://github.com/dotnet/roslyn/pull/45528","RelatedDescription":"Open PR \"Update status for \"top-level statements\" feature\" (#45528)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"647382317","IsPullRequest":true,"CreatedAt":"2020-06-29T18:45:26","Actor":"MichalStrehovsky","Number":"8218","RawContent":null,"Title":"Sync compiler from dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8218","RelatedDescription":"Closed or merged PR \"Sync compiler from dotnet/runtime\" (#8218)"},{"Id":"647389425","IsPullRequest":true,"CreatedAt":"2020-06-29T13:44:12","Actor":"MichalStrehovsky","Number":"8219","RawContent":null,"Title":"Fix reflection access to thread static fields","State":"open","Body":"Reflection-accessing threadstatic fields didn't work.\r\n\r\nI'm also deleting a bunch of .NET Native code that is not relevant to CoreRT.\r\nThe .NET Native approach to threadstatics (using TLS region) is Windows-specific\r\nand not portable.\r\n\r\nThe type loader support is incomplete (the compiler side is ready but runtime side is\r\nstill going to fail with a MissingTemplateException). I got tired and this diff is already\r\ntoo big.\r\n\r\nContributes to #5137.","Url":"https://github.com/dotnet/corert/pull/8219","RelatedDescription":"Open PR \"Fix reflection access to thread static fields\" (#8219)"},{"Id":"646962531","IsPullRequest":false,"CreatedAt":"2020-06-28T18:31:15","Actor":"nilaoda","Number":"8217","RawContent":null,"Title":"How can I using System.Security.Cryptography","State":"closed","Body":"my code :\r\n```cs\r\nbyte[] inBuff = Encoding.ASCII.GetBytes(_loc5_);\r\nAes dcpt = Aes.Create(\"AES\");\r\ndcpt.Key = key;\r\ndcpt.IV = iv;\r\ndcpt.Mode = CipherMode.CBC;\r\ndcpt.Padding = PaddingMode.PKCS7;\r\n\r\nICryptoTransform cTransform = dcpt.CreateEncryptor();\r\nByte[] resultArray = cTransform.TransformFinalBlock(inBuff, 0, inBuff.Length);\r\nreturn BitConverter.ToString(resultArray, 0).Replace(\"-\", string.Empty).ToUpper();\r\n```\r\n\r\nDebug works well, but `dotnet publish -r win-x64 -c Release` cause:\r\n```\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8217","RelatedDescription":"Closed issue \"How can I using System.Security.Cryptography\" (#8217)"},{"Id":"646594984","IsPullRequest":false,"CreatedAt":"2020-06-27T06:08:39","Actor":"Thealexbarney","Number":"8216","RawContent":null,"Title":"Enum.IsDefined does not work in reflection-free mode","State":"closed","Body":"`Enum.IsDefined` doesn't work in reflection-mode. This means that some APIs like `Environment.GetFolderPath` don't work.\r\n\r\nA quick look in a debugger shows that the `EnumInfo` passed to `GetEnumName` has an empty `Values` array.","Url":"https://github.com/dotnet/corert/issues/8216","RelatedDescription":"Closed issue \"Enum.IsDefined does not work in reflection-free mode\" (#8216)"},{"Id":"646242669","IsPullRequest":false,"CreatedAt":"2020-06-26T12:53:29","Actor":"christianscheuer","Number":"8215","RawContent":null,"Title":"CoreRT on macOS Big Sur / ARM / Apple Silicon","State":"open","Body":"Hi dear CoreRT community,\r\n\r\nWith Apple's announcement at WWDC this week, it's now clear that as soon as late 2020, there will be new Macs shipping to customers running on ARM / \"Apple Silicon\".\r\n\r\nI suspect the status of CoreRT being able to run on ARM / Linux is currently at a very initial stage, if I am reading this issue tracker correctly:\r\nhttps://github.com/dotnet/corert/issues/4856\r\n\r\nStarting this thread to see if there's any user traction on getting CoreRT to also work on macOS Big Sur+ on ARM. We'd also be very interested in hearing about any other .NET 5 AOT solutions that could integrate with LLVM and would target macOS on ARM.\r\n\r\nMaybe getting support for ARM on macOS would be prohibitively expensive / slow for the community and the small team of volunteer maintainers who have been so kind as to continue supporting this great tech. Or maybe you would gauge it to be achievable within say 6 months or so, in which case we could probably stay with CoreRT for our product on the Mac platform.\r\n\r\nAny insight and input would be greatly appreciated :)","Url":"https://github.com/dotnet/corert/issues/8215","RelatedDescription":"Open issue \"CoreRT on macOS Big Sur / ARM / Apple Silicon\" (#8215)"},{"Id":"644122093","IsPullRequest":false,"CreatedAt":"2020-06-23T20:38:21","Actor":"ngducnghia","Number":"8214","RawContent":null,"Title":"OutofMemoryException thrown when build app with .NET Native Tool Chain enabled","State":"closed","Body":"![image](https://user-images.githubusercontent.com/1578583/85457372-d8f47080-b554-11ea-9b69-eaef9b913ab7.png)\r\n\r\nI use following library in my project:\r\n![image](https://user-images.githubusercontent.com/1578583/85457854-55874f00-b555-11ea-9e07-d78aab9db664.png)\r\n\r\nI already tried the workaround from https://github.com/dotnet/corert/issues/5604 and https://github.com/dotnet/corert/issues/5905 to add following properties:\r\n\r\n```\r\n <Use64BitCompiler>true</Use64BitCompiler>\r\n<ShortcutGenericAnalysis>true</ShortcutGenericAnalysis>\r\n```\r\n\r\nBut still has the error.\r\n","Url":"https://github.com/dotnet/corert/issues/8214","RelatedDescription":"Closed issue \"OutofMemoryException thrown when build app with .NET Native Tool Chain enabled\" (#8214)"},{"Id":"642341898","IsPullRequest":true,"CreatedAt":"2020-06-23T07:05:22","Actor":"kant2002","Number":"8211","RawContent":null,"Title":"Add Rd.xml documentation","State":"closed","Body":"This documentation provide examples of how rd.xml can be presented.\r\nThe only reason for this PR is https://github.com/dotnet/corert/pull/8194#issuecomment-641123667\r\n\r\n> Yes, I usually copy the RD.XML from the MonoGame sample and tweak it because I don't remember it either. A volunteer who would document it would have my eternal gratitude. At least we have docs for the SerString format we can link to: [dotnet/runtime#4416](https://github.com/dotnet/runtime/issues/4416)\r\n\r\nHopefully @MichalStrehovsky would keep his word 😉 ","Url":"https://github.com/dotnet/corert/pull/8211","RelatedDescription":"Closed or merged PR \"Add Rd.xml documentation\" (#8211)"},{"Id":"638160907","IsPullRequest":true,"CreatedAt":"2020-06-23T06:11:04","Actor":"MichalStrehovsky","Number":"8204","RawContent":null,"Title":"Allow preinitializing delegates and reading initonly statics","State":"closed","Body":"This extends the static constructor interpreter with support for preinitializing delegates and support for reading readonly static fields declared by other types.\r\n\r\nThe readonly static fields can be accessed after interpreting the static constructor of the containing type. This opens us up to recursive dependencies - the interpreter will bail if recursive dependency is hit (we already have a test).\r\n\r\nThis significantly improves the interpreter's ability to run static constructors at compile time:\r\n\r\n|          | Eligible types | Preinitialized before | Preinitialized after |\r\n| -------- | -------------- | --------------------- | -------------------- |\r\n| WinForms | 1520           | 702                   | 967                  |\r\n| WebApi   | 2005           | 746                   | 1278                 |\r\n\r\nAbout 60% of types now have their static constructor executed at compile time.","Url":"https://github.com/dotnet/corert/pull/8204","RelatedDescription":"Closed or merged PR \"Allow preinitializing delegates and reading initonly statics\" (#8204)"},{"Id":"642890923","IsPullRequest":true,"CreatedAt":"2020-06-23T06:09:59","Actor":"MichalStrehovsky","Number":"8212","RawContent":null,"Title":"Get rid of reverse p/invoke delegate stub","State":"closed","Body":"The purpose of the stub was to prevent invoking delegates pointing to `UnmanagedCallersOnly` methods. We're going to let that happen and hope that triggering the reverse p/invoke transition when we're still in managed mode is going to failfast instead. This is a mild size saving as well.","Url":"https://github.com/dotnet/corert/pull/8212","RelatedDescription":"Closed or merged PR \"Get rid of reverse p/invoke delegate stub\" (#8212)"},{"Id":"643292808","IsPullRequest":true,"CreatedAt":"2020-06-22T20:43:27","Actor":"MichalStrehovsky","Number":"8213","RawContent":null,"Title":"Fix CoreFX CI test legs","State":"closed","Body":"Seems like a VS update broke the CoreFX legs. We reinitialize the VS environment a lot.","Url":"https://github.com/dotnet/corert/pull/8213","RelatedDescription":"Closed or merged PR \"Fix CoreFX CI test legs\" (#8213)"},{"Id":"641299627","IsPullRequest":false,"CreatedAt":"2020-06-18T15:20:59","Actor":"yowl","Number":"8210","RawContent":null,"Title":"Wasm: Generics test fails if run in a loop","State":"open","Body":"Wrap the simple Generics test in a `for (var i = 0; i < 100; i++)` and it will fail.  It may not be consistent, but this stack is common.\r\n\r\n```\r\nexception thrown: RuntimeError: memory access out of bounds,RuntimeError: memory access out of bounds\r\n    at S_P_CoreLib_System_Runtime_TypeLoaderExports__LookupInCache (wasm-function[4572]:210)\r\n    at S_P_CoreLib_System_Runtime_TypeLoaderExports__CacheMiss_0 (wasm-function[4574]:248)\r\n    at S_P_CoreLib_System_Runtime_TypeLoaderExports__GVMLookupForSlot (wasm-function[4584]:507)\r\n    at Generics_Program_TestSimpleGVMScenarios__TestWithStruct (wasm-function[12618]:347)\r\n    at Generics_Program_TestSimpleGVMScenarios__Run (wasm-function[12548]:1938)\r\n    at Generics_Program__Main (wasm-function[12531]:144)\r\n    at Generics__Module___MainMethodWrapper (wasm-function[12518]:3)\r\n    at StartupCodeMain (wasm-function[12509]:108)\r\n    at __managed__Main (wasm-function[22612]:67)\r\n    at main (wasm-function[2072]:126)\r\n```\r\n\r\nThis might be solved by #8171 - it is in a test around structs.  Wanted to create a specific task for this failure so it doesn't get forgotten (by me at least).  I think this is the same error that occurs in CI sometimes.","Url":"https://github.com/dotnet/corert/issues/8210","RelatedDescription":"Open issue \"Wasm: Generics test fails if run in a loop\" (#8210)"},{"Id":"640678232","IsPullRequest":true,"CreatedAt":"2020-06-18T12:25:11","Actor":"yowl","Number":"8209","RawContent":null,"Title":"Preinit, fix ldlen to push 32 bit value when pointer size is 4","State":"closed","Body":"Fixes #8208\r\nThis PR changes the pushed value type from Int64 to Int32 for 32bit architectures.","Url":"https://github.com/dotnet/corert/pull/8209","RelatedDescription":"Closed or merged PR \"Preinit, fix ldlen to push 32 bit value when pointer size is 4\" (#8209)"},{"Id":"640606474","IsPullRequest":false,"CreatedAt":"2020-06-18T12:25:11","Actor":"yowl","Number":"8208","RawContent":null,"Title":"Wasm: InvalidProgramException in TypePreinit.cs","State":"closed","Body":"In Release configuration, Wasm throws an exception at https://github.com/dotnet/corert/blob/76804dc23743e1fab8ba171ccf04f71b36dd6678/src/ILCompiler.Compiler/src/Compiler/TypePreinit.cs#L1608.\r\n\r\nStack trace is\r\n```\r\n>\tILCompiler.Compiler.dll!ILCompiler.TypePreinit.ValueTypeValue.AsExactByteCount(int size) Line 1608\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.ValueTypeValue.AsInt32() Line 1615\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.TryScanMethod(Internal.IL.MethodIL methodIL, ILCompiler.TypePreinit.Value[] parameters, System.Collections.Generic.Stack<Internal.TypeSystem.MethodDesc> recursionProtect, out ILCompiler.TypePreinit.Value returnValue) Line 556\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.TryScanMethod(Internal.TypeSystem.MethodDesc method, ILCompiler.TypePreinit.Value[] parameters, System.Collections.Generic.Stack<Internal.TypeSystem.MethodDesc> recursionProtect, out ILCompiler.TypePreinit.Value returnValue) Line 93\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.TryScanMethod(Internal.IL.MethodIL methodIL, ILCompiler.TypePreinit.Value[] parameters, System.Collections.Generic.Stack<Internal.TypeSystem.MethodDesc> recursionProtect, out ILCompiler.TypePreinit.Value returnValue) Line 363\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.TryScanMethod(Internal.TypeSystem.MethodDesc method, ILCompiler.TypePreinit.Value[] parameters, System.Collections.Generic.Stack<Internal.TypeSystem.MethodDesc> recursionProtect, out ILCompiler.TypePreinit.Value returnValue) Line 93\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.TypePreinit.ScanType(ILCompiler.CompilationModuleGroup compilationGroup, Internal.IL.ILProvider ilProvider, Internal.TypeSystem.MetadataType type) Line 65\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.PreinitializationManager.PreinitializationInfoHashtable.CreateValueFromKey(Internal.TypeSystem.MetadataType key) Line 166\tC#\r\n \tILCompiler.TypeSystem.dll!Internal.TypeSystem.LockFreeReaderHashtable<Internal.TypeSystem.MetadataType, ILCompiler.TypePreinit.PreinitializationInfo>.CreateValueAndEnsureValueIsInTable(Internal.TypeSystem.MetadataType key) Line 569\tC#\r\n \tILCompiler.TypeSystem.dll!Internal.TypeSystem.LockFreeReaderHashtable<Internal.TypeSystem.MetadataType, ILCompiler.TypePreinit.PreinitializationInfo>.GetOrCreateValue(Internal.TypeSystem.MetadataType key) Line 588\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.PreinitializationManager.GetPreinitializationInfo(Internal.TypeSystem.MetadataType type) Line 145\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.PreinitializationManager.IsPreinitialized(Internal.TypeSystem.MetadataType type) Line 112\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.PreinitializationManager.HasLazyStaticConstructor(Internal.TypeSystem.TypeDesc type) Line 53\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ConstructedEETypeNode.ComputeNonRelocationBasedDependencies(ILCompiler.DependencyAnalysis.NodeFactory factory) Line 129\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ObjectNode.GetStaticDependencies(ILCompiler.DependencyAnalysis.NodeFactory factory) Line 60\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.GetStaticDependenciesImpl(ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory> node) Line 145\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.GetStaticDependencies(ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory> node) Line 183\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ProcessMarkStack() Line 212\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ComputeMarkedNodes() Line 259\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.WebAssemblyCodegenCompilation.CompileInternal(string outputFile, ILCompiler.ObjectDumper dumper) Line 60\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.Compilation.ILCompiler.ICompilation.Compile(string outputFile, ILCompiler.ObjectDumper dumper) Line 431\tC#\r\n \tilc.dll!ILCompiler.Program.Run(string[] args) Line 732\tC#\r\n \tilc.dll!ILCompiler.Program.Main(string[] args) Line 888\tC#\r\n```\r\nThe method is\r\n```\r\n.method valuetype System.Globalization.UmAlQuraCalendar/DateMapping[] InitDateMapping() cil managed\r\n```\r\nPointer size for wasm is 4 so for the line\r\n```\r\nInstanceBytes.Length != size\r\n```\r\n`size` is 4, and `InstanceBytes.Length` is 8.  The opcode is `conv_i4`. \r\n\r\nDoesn't seem to happen in Debug configuration and continues anyway, I guess it just doesn't pre-execute the static ctor.\r\n\r\nComplete IL for this method is\r\n\r\n```\r\n// [S.P.CoreLib]System.Globalization.UmAlQuraCalendar.InitDateMapping()\r\n.method valuetype System.Globalization.UmAlQuraCalendar/DateMapping[] InitDateMapping() cil managed\r\n{\r\n  // Code size: 87\r\n  .maxstack 8\r\n  .locals (int16[] V_0,\r\n      valuetype System.Globalization.UmAlQuraCalendar/DateMapping[] V_1,\r\n      int32 V_2)\r\n\r\n  IL_0000:  ldc.i4      736\r\n  IL_0005:  newarr      int16\r\n  IL_000A:  dup\r\n  IL_000B:  ldtoken     valuetype <PrivateImplementationDetails>/__StaticArrayInitTypeSize=1472 <PrivateImplementationDetails>::75E0C38E75E507EDE41C1C4F5F5612852B31A4EF\r\n  IL_0010:  call        void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(class System.Array, valuetype System.RuntimeFieldHandle)\r\n  IL_0015:  stloc.0\r\n  IL_0016:  ldloc.0\r\n  IL_0017:  ldlen\r\n  IL_0018:  conv.i4\r\n  IL_0019:  ldc.i4.4\r\n  IL_001A:  div\r\n  IL_001B:  newarr      System.Globalization.UmAlQuraCalendar/DateMapping\r\n  IL_0020:  stloc.1\r\n  IL_0021:  ldc.i4.0\r\n  IL_0022:  stloc.2\r\n  IL_0023:  br.s        IL_004F\r\n  IL_0025:  ldloc.1\r\n  IL_0026:  ldloc.2\r\n  IL_0027:  ldloc.0\r\n  IL_0028:  ldloc.2\r\n  IL_0029:  ldc.i4.4\r\n  IL_002A:  mul\r\n  IL_002B:  ldelem.i2\r\n  IL_002C:  ldloc.0\r\n  IL_002D:  ldloc.2\r\n  IL_002E:  ldc.i4.4\r\n  IL_002F:  mul\r\n  IL_0030:  ldc.i4.1\r\n  IL_0031:  add\r\n  IL_0032:  ldelem.i2\r\n  IL_0033:  ldloc.0\r\n  IL_0034:  ldloc.2\r\n  IL_0035:  ldc.i4.4\r\n  IL_0036:  mul\r\n  IL_0037:  ldc.i4.2\r\n  IL_0038:  add\r\n  IL_0039:  ldelem.i2\r\n  IL_003A:  ldloc.0\r\n  IL_003B:  ldloc.2\r\n  IL_003C:  ldc.i4.4\r\n  IL_003D:  mul\r\n  IL_003E:  ldc.i4.3\r\n  IL_003F:  add\r\n  IL_0040:  ldelem.i2\r\n  IL_0041:  newobj      instance void System.Globalization.UmAlQuraCalendar/DateMapping::.ctor(int32, int32, int32, int32)\r\n  IL_0046:  stelem      System.Globalization.UmAlQuraCalendar/DateMapping\r\n  IL_004B:  ldloc.2\r\n  IL_004C:  ldc.i4.1\r\n  IL_004D:  add\r\n  IL_004E:  stloc.2\r\n  IL_004F:  ldloc.2\r\n  IL_0050:  ldloc.1\r\n  IL_0051:  ldlen\r\n  IL_0052:  conv.i4\r\n  IL_0053:  blt.s       IL_0025\r\n  IL_0055:  ldloc.1\r\n  IL_0056:  ret\r\n}\r\n```\r\n`reader.Offset` is 25, or 0x19","Url":"https://github.com/dotnet/corert/issues/8208","RelatedDescription":"Closed issue \"Wasm: InvalidProgramException in TypePreinit.cs\" (#8208)"},{"Id":"640557618","IsPullRequest":true,"CreatedAt":"2020-06-17T15:57:30","Actor":"yowl","Number":"8207","RawContent":null,"Title":"Wasm: Add support for throw in catch block","State":"open","Body":"Exception support currently breaks with \r\n\r\n```\r\n       try\r\n        {\r\n            try\r\n            {\r\n                throw new Exception();\r\n            }\r\n            catch\r\n            {\r\n                throw new Exception();\r\n            }\r\n        }\r\n        catch\r\n        {\r\n        }\r\n```\r\nbecause the leave target for the second throw is in a different LLVM funclet and so can't be done with just an LLVM switch/branch as is currently implemented.  The leave target needs to be returned out of the LLVM funclet.  This PR adds support and a test for this.  Also fixes the problem in release mode where the inner try has the same offset as the outer, as here.\r\n\r\nThanks @jkotas ","Url":"https://github.com/dotnet/corert/pull/8207","RelatedDescription":"Open PR \"Wasm: Add support for throw in catch block\" (#8207)"},{"Id":"638107398","IsPullRequest":true,"CreatedAt":"2020-06-17T07:31:57","Actor":"MichalStrehovsky","Number":"8203","RawContent":null,"Title":"Sync compiler from dotnet/runtime","State":"closed","Body":"The JitInterface GUID wasn't updated again...","Url":"https://github.com/dotnet/corert/pull/8203","RelatedDescription":"Closed or merged PR \"Sync compiler from dotnet/runtime\" (#8203)"},{"Id":"639292599","IsPullRequest":true,"CreatedAt":"2020-06-16T01:01:01","Actor":"yowl","Number":"8206","RawContent":null,"Title":"wasm add rethrow support","State":"open","Body":"Exception support currently breaks with \r\n\r\n```\r\n       try\r\n        {\r\n            try\r\n            {\r\n                throw new Exception();\r\n            }\r\n            catch\r\n            {\r\n                throw new Exception();\r\n            }\r\n        }\r\n        catch\r\n        {\r\n        }\r\n```\r\nbecause the leave target for the second throw is in a different LLVM funclet and so can't be done with just an LLVM switch/branch as is currently implemented.  The leave target needs to be returned out of the funclet.  This PR adds support and a test for this.  Implementing the `rethrow` opcode, at least in the simple case tested, was then just a small refactor so included that also.","Url":"https://github.com/dotnet/corert/pull/8206","RelatedDescription":"Open PR \"wasm add rethrow support\" (#8206)"},{"Id":"638462711","IsPullRequest":false,"CreatedAt":"2020-06-15T00:22:51","Actor":"yowl","Number":"8205","RawContent":null,"Title":"Wasm: Question: conservative gc and heap_segment_allocated","State":"open","Body":"In https://raw.githubusercontent.com/dotnet/corert/master/src/Native/gc/gc.cpp at line 17681 there is (this is too big a file for github to view normally, hence no permalink)\r\n\r\n(printfs mine obviously)\r\n```\r\n        heap_segment* seg = find_segment (interior, FALSE);\r\n        if (seg\r\n#ifdef FEATURE_CONSERVATIVE_GC\r\n            && (GCConfig::GetConservativeGC() || interior <= heap_segment_allocated(seg))\r\n#endif\r\n            )\r\n        {\r\n            // If interior falls within the first free object at the beginning of a generation,\r\n            // we don't have brick entry for it, and we may incorrectly treat it as on large object heap.\r\n            int align_const = get_alignment_constant (heap_segment_read_only_p (seg)\r\n#ifdef FEATURE_CONSERVATIVE_GC\r\n                                                       || (GCConfig::GetConservativeGC() && !heap_segment_uoh_p (seg))\r\n#endif\r\n                                                      );\r\n#ifdef FEATURE_CONSERVATIVE_GC\r\n            printf(\"conservative gc\\n\");\r\n#endif\r\n            if (interior >= heap_segment_allocated(seg))\r\n            {\r\n                printf(\"interior %08x seg %d heap_segment_allocated(seg) %08x\\n\", interior, seg, heap_segment_allocated(seg));\r\n            }\r\n            assert (interior < heap_segment_allocated (seg));\r\n```\r\nThe first `if` condition has `GCConfig::GetConservativeGC() || interior <= heap_segment_allocated(seg)` so its possible to get inside with `interior > heap_segment_allocated(seg)` when `GetConservativeGC()`  is true .  A few lines later, there is the assert on `interior < heap_segment_allocated (seg)` which would fail in this scenario .  I'm hitting this assert, so if this `assert` looks correct for conservative GC then I've got something wrong somewhere else.  Can someone confirm this assert is valid for conservative GC?\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/8205","RelatedDescription":"Open issue \"Wasm: Question: conservative gc and heap_segment_allocated\" (#8205)"},{"Id":"634870701","IsPullRequest":true,"CreatedAt":"2020-06-13T14:24:39","Actor":"MichalStrehovsky","Number":"8194","RawContent":null,"Title":"Delete RD.XML related fwlinks","State":"closed","Body":"The RD.XML format CoreRT uses is different from .NET Native, so this probably causes more harm than good.","Url":"https://github.com/dotnet/corert/pull/8194","RelatedDescription":"Closed or merged PR \"Delete RD.XML related fwlinks\" (#8194)"},{"Id":"635039753","IsPullRequest":true,"CreatedAt":"2020-06-13T13:37:24","Actor":"yowl","Number":"8195","RawContent":null,"Title":"Wasm: clear shadow stack slots in case of call to RhCollect","State":"closed","Body":"As part of fixing #8171, its apparent that there is a bug in the call to `GC.Collect` which prevents some objects from being collected.   This PR fixes this.\r\n\r\nWhat happens is that in `RhCollect` and `System_Runtime_InternalCalls__RhpCollect` 3 slots are allocated on the shadow stack but are not all set before the call to `RhpCollect`.  If these slots have object references in them, from previous calls which used more of the shadow stack, then these references will still be there, and if they are the only references left to live objects, will prevent those objects from being collected.  \r\n\r\nNot a huge deal in the long term as at some point they would probably have gotten overwritten or collected, but a definitely a problem when testing.","Url":"https://github.com/dotnet/corert/pull/8195","RelatedDescription":"Closed or merged PR \"Wasm: clear shadow stack slots in case of call to RhCollect\" (#8195)"},{"Id":"637485404","IsPullRequest":false,"CreatedAt":"2020-06-12T05:01:50","Actor":"VS-ux","Number":"8202","RawContent":null,"Title":"CoreRT using too much memory","State":"open","Body":"Hi all!\r\nI tried out CoreRT on my winforms application which I've recently ported to .NET Core 3.1, from .NET Framework 4.8, using this [tutorial](https://docs.microsoft.com/en-us/dotnet/core/porting/winforms). The followed the Hello-World sample on the front page, however I got a Class Load error on System.Drawing.Design.UITypeEditor. I don't even use this class. I added the RootAllApplicationAssemblies tag, as specified [here](https://github.com/dotnet/corert/issues/6359#issuecomment-507156448), and also added a rd.xml file. (My application also didn't come with a Properties folder containing a Default.rd.xml file). However, I got a unknown method exception for `System.Drawing.Primitives`. I removed it, and it seemed to work OK. However, a couple minutes later, the memory usage skyrocketed. My system has 16GB memory, and eventually it used all of it and I had to task kill cmd. Is there any solution to this? Thanks","Url":"https://github.com/dotnet/corert/issues/8202","RelatedDescription":"Open issue \"CoreRT using too much memory\" (#8202)"},{"Id":"636612152","IsPullRequest":true,"CreatedAt":"2020-06-10T23:35:08","Actor":"yowl","Number":"8201","RawContent":null,"Title":"Wasm: add support for new StackTrace().ToString()","State":"open","Body":"This PR adds initial support for `StackTrace` and it's `ToString` via emscripten's `emscripten_get_callstack` function.  This should help in getting a `StackTrace` for `Exception` and enabling the Exceptions simple test.","Url":"https://github.com/dotnet/corert/pull/8201","RelatedDescription":"Open PR \"Wasm: add support for new StackTrace().ToString()\" (#8201)"},{"Id":"635662353","IsPullRequest":true,"CreatedAt":"2020-06-10T11:22:04","Actor":"Suchiman","Number":"8200","RawContent":null,"Title":"Fix NYI's for Function Pointers","State":"closed","Body":"The `IsReflectionBlocked` fix is rather theoretical as i didn't manage to hit it locally.\r\nFixes #8199","Url":"https://github.com/dotnet/corert/pull/8200","RelatedDescription":"Closed or merged PR \"Fix NYI's for Function Pointers\" (#8200)"},{"Id":"635545919","IsPullRequest":false,"CreatedAt":"2020-06-10T11:22:04","Actor":"john-h-k","Number":"8199","RawContent":null,"Title":"NotImplementedException thrown when trying to compile with function pointers","State":"closed","Body":"I try to build my project as the samples suggest (The project doesn't use reflection anywhere, unless 'REFLECTION' is defined which it isn't here).\r\n\r\nI get this output with absolutely nothing else\r\n\r\n```Unhandled Exception: Unhandled Exception: System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()```","Url":"https://github.com/dotnet/corert/issues/8199","RelatedDescription":"Closed issue \"NotImplementedException thrown when trying to compile with function pointers\" (#8199)"},{"Id":"635520618","IsPullRequest":true,"CreatedAt":"2020-06-10T07:22:04","Actor":"AntonLapounov","Number":"8198","RawContent":null,"Title":"Port changes related to homogeneous aggregate recognition","State":"closed","Body":"dotnet/runtime#35576\r\ndotnet/runtime#35864\r\ndotnet/runtime#36673","Url":"https://github.com/dotnet/corert/pull/8198","RelatedDescription":"Closed or merged PR \"Port changes related to homogeneous aggregate recognition\" (#8198)"},{"Id":"635483038","IsPullRequest":false,"CreatedAt":"2020-06-09T14:32:29","Actor":"yowl","Number":"8197","RawContent":null,"Title":"Wasm: Enable threads","State":"open","Body":"Enabling of threads in Wasm is currently blocked by https://github.com/emscripten-core/emscripten/issues/10809  .  Creating this to track.","Url":"https://github.com/dotnet/corert/issues/8197","RelatedDescription":"Open issue \"Wasm: Enable threads\" (#8197)"},{"Id":"635186043","IsPullRequest":false,"CreatedAt":"2020-06-09T09:29:51","Actor":"srrin","Number":"8196","RawContent":null,"Title":"RHBIND : error RHB0002: Failed to write PDB - Xamarin Forms UWP ","State":"closed","Body":"Hi team,\r\nRequesting assistance to fix the above mentioned error in Xamarin forms UWP build.\r\n\r\nI am developing an Xamarin forms application, which uses multiple nuget packages referred to the UWP project. When I try to release the application, I am getting the following error in azure pipeline\r\n\r\n_\r\n\r\n> 2020-06-05T14:13:25.2731045Z   C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : RHBIND : error RHB0002: Failed to write PDB. [E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\MyProject.UWP.csproj]\r\n> 2020-06-05T14:13:25.2734238Z   C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-arm.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\ARM\\ilc\\Tools\\rhbind.exe @\"E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\obj\\arm\\Release\\ilc\\intermediate\\rhbindargs.MyProject.UWP.rsp\"' returned exit code 2 [E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\MyProject.UWP.csproj]\r\n\r\n_\r\n\r\nI have followed all the scenarios from this URL below, but still we are not able fix the issue. \r\nhttps://developercommunity.visualstudio.com/content/problem/664053/rhbind-error-rhb0002-in-generating-xamarin-forms-u.html \r\n\r\nPlease find some finding in our investigation\r\n\r\n- If I change nuget packages to project references, build succeeds\r\n- When I refer all assemblies as nuget packages, then the build fails\r\n- When I exclude one or two nuget packages, then the build succeeds\r\n- When I comment out the “Dynamic required all” or set “Dynamic Auto” behavior, application builds, but it struck in the splash screen.\r\n- I tried to include all assemblies directly instead of <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />, but the application fails with msbuild error.\r\n- Included ShortcutGenericAnalysis  as true and\r\n- UseDotNetNativeSharedAssemblyFrameworkPackage  as false. But still the build fails\r\n\r\nThanks, looking for some solution to get through this issue, as we are blocked completely and not able to release the application for UWP.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8196","RelatedDescription":"Closed issue \"RHBIND : error RHB0002: Failed to write PDB - Xamarin Forms UWP \" (#8196)"},{"Id":"633565718","IsPullRequest":false,"CreatedAt":"2020-06-07T16:43:42","Actor":"kant2002","Number":"8193","RawContent":null,"Title":"Custom GC in CoreRT does not compile","State":"open","Body":"I was try to follow presentation of @kkokosa on YouTube about custom GC for .NET Core and thought that it would be fun exercise to make it in CoreRT. \r\n\r\nSo right now it is breaks with error\r\n```\r\nEXEC : LLVM error : invalid symbol redefinition\r\n```\r\n\r\nSo I assume this is because `GC_Initialize` already defined. Presumably in `Runtime.lib`. Can something to be done about that?","Url":"https://github.com/dotnet/corert/issues/8193","RelatedDescription":"Open issue \"Custom GC in CoreRT does not compile\" (#8193)"},{"Id":"632690523","IsPullRequest":true,"CreatedAt":"2020-06-07T09:18:25","Actor":"FabianNitsche","Number":"8190","RawContent":null,"Title":"Deleted more ProjectN leftovers","State":"closed","Body":"While trying to build on RaspberryPi 3 B+ with Ubuntu 20.04 Arm64 I found some issues.\r\n\r\nThe compiler gave me the following error:\r\n\r\n```\r\n/home/ubuntu/projects/corert/src/Native/Runtime/MiscHelpers.cpp:354:42: error: member access into incomplete type 'Module'\r\n        ASSERT(pModule == NULL || pModule->ContainsDataAddress(pIatCell));\r\n                                         ^\r\n/home/ubuntu/projects/corert/src/Native/Runtime/Portable/../forward_declarations.h:23:10: note: forward declaration of 'Module'\r\nFWD_DECL(Module)\r\n         ^\r\n1 error generated.\r\n```\r\n\r\nIt seems to be more leftovers from the ProjectN. And since Module is always null, I was so bolt to just delete the asserts, since they will always succeed.","Url":"https://github.com/dotnet/corert/pull/8190","RelatedDescription":"Closed or merged PR \"Deleted more ProjectN leftovers\" (#8190)"},{"Id":"632694769","IsPullRequest":true,"CreatedAt":"2020-06-07T09:18:03","Actor":"FabianNitsche","Number":"8191","RawContent":null,"Title":"Updated unix GC from CoreCLR","State":"closed","Body":"While trying to build on RaspberryPi 3 B+ with Ubuntu 20.04 Arm64 I found some issues.\r\n\r\nThe compiler gave me the following error:\r\n\r\n```\r\n/home/ubuntu/projects/corert/src/Native/gc/unix/gcenv.unix.cpp:797:13: error: use of undeclared identifier 'ReadMemoryValueFromFile'\r\n        if (ReadMemoryValueFromFile(\"/sys/devices/system/cpu/cpu0/cache/index0/size\", &size))\r\n```\r\n\r\nI copied over the unix/gc files from dotnet/runtime.\r\n\r\nTogether with PR #8190:\r\n`CoreRT native components successfully built.`","Url":"https://github.com/dotnet/corert/pull/8191","RelatedDescription":"Closed or merged PR \"Updated unix GC from CoreCLR\" (#8191)"},{"Id":"632730654","IsPullRequest":true,"CreatedAt":"2020-06-07T09:16:52","Actor":"jkotas","Number":"8192","RawContent":null,"Title":"Fix NativeLibrary sample readme","State":"closed","Body":"Also, add a sanity check to the build targets to make this mistake easier to diagnose.","Url":"https://github.com/dotnet/corert/pull/8192","RelatedDescription":"Closed or merged PR \"Fix NativeLibrary sample readme\" (#8192)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"647870904","IsPullRequest":true,"CreatedAt":"2020-06-30T05:21:38","Actor":"dotnet-maestro[bot]","Number":"12275","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200630.2\r\n- **Date Produced**: 6/30/2020 3:06 AM\r\n- **Commit**: 1eab2845bd4dbded49765c0b33641f029ed92c69\r\n- **Branch**: refs/heads/vs16.7\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12275","RelatedDescription":"Open PR \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12275)"},{"Id":"647822220","IsPullRequest":true,"CreatedAt":"2020-06-30T05:20:58","Actor":"dotnet-maestro[bot]","Number":"12273","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12273","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12273)"},{"Id":"647868143","IsPullRequest":true,"CreatedAt":"2020-06-30T05:16:34","Actor":"dotnet-maestro[bot]","Number":"12274","RawContent":null,"Title":"[master] Update dependencies from microsoft/msbuild","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200630.2\r\n- **Date Produced**: 6/30/2020 3:06 AM\r\n- **Commit**: 1eab2845bd4dbded49765c0b33641f029ed92c69\r\n- **Branch**: refs/heads/vs16.7\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20330-01 to 16.7.0-preview-20330-02\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12274","RelatedDescription":"Open PR \"[master] Update dependencies from microsoft/msbuild\" (#12274)"},{"Id":"647822219","IsPullRequest":true,"CreatedAt":"2020-06-30T05:13:44","Actor":"dotnet-maestro[bot]","Number":"12272","RawContent":null,"Title":"[master] Update dependencies from microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200630.1\r\n- **Date Produced**: 6/30/2020 3:04 AM\r\n- **Commit**: 32b3e5871d2cf119379286d079f623475f3597bb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20329-02 to 16.7.0-preview-20330-01\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12272","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from microsoft/msbuild\" (#12272)"},{"Id":"647774172","IsPullRequest":true,"CreatedAt":"2020-06-30T02:55:51","Actor":"dotnet-maestro[bot]","Number":"12271","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn-analyzers","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: e7c40fb8-9651-4ba2-dbe8-08d81c92f408\r\n- **Build**: 20200629.5\r\n- **Date Produced**: 6/29/2020 11:02 PM\r\n- **Commit**: 13d6f59228ed7632ef66836a5bcaa13f0f84d6ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: from 3.3.0-beta1.20305.4 to 3.3.0-beta1.20329.5\r\n\r\n[marker]: <> (End:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn-analyzers\" (#12271)"},{"Id":"647769328","IsPullRequest":true,"CreatedAt":"2020-06-30T02:38:53","Actor":"dotnet-maestro[bot]","Number":"12269","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ffb20075-6bca-4826-6401-08d812f99aea)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: ffb20075-6bca-4826-6401-08d812f99aea\r\n- **Build**: 20200629.5\r\n- **Date Produced**: 6/29/2020 11:39 PM\r\n- **Commit**: 19c9e2f1b21a66ec90fefae79988b33fc16744fc\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20329.4 to 10.10.0-beta.20329.5\r\n\r\n[marker]: <> (End:ffb20075-6bca-4826-6401-08d812f99aea)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12269","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp\" (#12269)"},{"Id":"647771668","IsPullRequest":true,"CreatedAt":"2020-06-30T01:09:10","Actor":"jmarolf","Number":"12270","RawContent":null,"Title":"update version of  Microsoft.CodeAnalysis.NetAnalyzers","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/12270","RelatedDescription":"Open PR \"update version of  Microsoft.CodeAnalysis.NetAnalyzers\" (#12270)"},{"Id":"647722944","IsPullRequest":true,"CreatedAt":"2020-06-30T01:02:18","Actor":"dotnet-maestro[bot]","Number":"12268","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ffb20075-6bca-4826-6401-08d812f99aea)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: ffb20075-6bca-4826-6401-08d812f99aea\r\n- **Build**: 20200629.4\r\n- **Date Produced**: 6/29/2020 10:36 PM\r\n- **Commit**: 19c9e2f1b21a66ec90fefae79988b33fc16744fc\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20329.1 to 10.10.0-beta.20329.4\r\n\r\n[marker]: <> (End:ffb20075-6bca-4826-6401-08d812f99aea)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12268","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp\" (#12268)"},{"Id":"647639271","IsPullRequest":true,"CreatedAt":"2020-06-29T22:11:22","Actor":"dotnet-maestro[bot]","Number":"12266","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3ff1e65-bafd-4c2e-4e0f-08d812f95845)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c3ff1e65-bafd-4c2e-4e0f-08d812f95845\r\n- **Build**: 20200629.4\r\n- **Date Produced**: 6/29/2020 8:03 PM\r\n- **Commit**: 126f14dbd22fa76ee1e8dbd84fdd6a749c337e75\r\n- **Branch**: refs/heads/release/5.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-preview.7.20326.13 to 5.0.0-preview.7.20329.4\r\n\r\n[marker]: <> (End:c3ff1e65-bafd-4c2e-4e0f-08d812f95845)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12266","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/aspnetcore\" (#12266)"},{"Id":"647646779","IsPullRequest":false,"CreatedAt":"2020-06-29T21:49:47","Actor":"Legends","Number":"12267","RawContent":null,"Title":"How to run a .net core app globally","State":"closed","Body":"My system `path` env varaible is too large, otherwise I'd put it there.\r\nHow to do that, wihtout `cd`-ing to the deployment folder?\r\n\r\nI tried:\r\n`dotnet tool install -g myConsoleTool --add-source=./nupkg`\r\n\r\ncmd.exe: `myConsoleTool `\r\n\r\n> Unhandled exception. System.IO.FileNotFoundException: The configuration file 'appsettings.json' was not found and is not optional. The physical path is 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\appsettings.json'.\r\n\r\nThe `appsettings.json` file is in the `bin `folder.\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: b80f18fa-e6d2-50f6-dc08-a2ab5ba9f89a\r\n* Version Independent ID: 5bebc66b-956a-47c7-7472-07967256be0c\r\n* Content: [Create a .NET Core console application using Visual Studio - .NET Core](https://docs.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio)\r\n* Content Source: [docs/core/tutorials/with-visual-studio.md](https://github.com/dotnet/docs/blob/master/docs/core/tutorials/with-visual-studio.md)\r\n* Product: **dotnet-core**\r\n* GitHub Login: @tdykstra\r\n* Microsoft Alias: **tdykstra**","Url":"https://github.com/dotnet/sdk/issues/12267","RelatedDescription":"Closed issue \"How to run a .net core app globally\" (#12267)"},{"Id":"647531963","IsPullRequest":true,"CreatedAt":"2020-06-29T20:05:51","Actor":"dotnet-maestro[bot]","Number":"12263","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 0d6336ce-4600-406e-8c68-08d812f956ec\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:54 PM\r\n- **Commit**: e2a33003170b038bf0c2414df166b5409d4b9581\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20326-04 to 16.7.0-preview-20329-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20326-04 to 16.7.0-preview-20329-02\r\n\r\n[marker]: <> (End:0d6336ce-4600-406e-8c68-08d812f956ec)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12263","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from microsoft/msbuild\" (#12263)"},{"Id":"647531953","IsPullRequest":true,"CreatedAt":"2020-06-29T19:50:48","Actor":"dotnet-maestro[bot]","Number":"12262","RawContent":null,"Title":"[master] Update dependencies from microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:54 PM\r\n- **Commit**: e2a33003170b038bf0c2414df166b5409d4b9581\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20326-04 to 16.7.0-preview-20329-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20326-04 to 16.7.0-preview-20329-02\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12262","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from microsoft/msbuild\" (#12262)"},{"Id":"647146803","IsPullRequest":true,"CreatedAt":"2020-06-29T18:54:09","Actor":"wli3","Number":"12254","RawContent":null,"Title":"Discover search URL via service index","State":"closed","Body":"More info in https://github.com/dotnet/sdk/issues/12038\r\nfix https://github.com/dotnet/sdk/issues/12038","Url":"https://github.com/dotnet/sdk/pull/12254","RelatedDescription":"Closed or merged PR \"Discover search URL via service index\" (#12254)"},{"Id":"647564061","IsPullRequest":true,"CreatedAt":"2020-06-29T18:02:00","Actor":"eerhardt","Number":"12264","RawContent":null,"Title":"Add ILLink extension points (#12116)","State":"open","Body":"Port #12116 to preview7.\r\n\r\n### Summary\r\nBlazor WASM applications need to be able to extend the ILLink functionality in the SDK. Without this extensibility, ILLink only performs \"assembly level\" trimming. It doesn't trim unused code from assemblies (like System.Private.CoreLib). This adds extensibility into the ILLinker to allow Blazor to specify which assemblies should be trimmed, and at what level.\r\n\r\n### Customer Impact\r\n**Medium:** Without this functionality, a Blazor application is over double from what we shipped in Blazor 3.2. Currently, it is at ~ 4 MB download size, when in Blazor 3.2 it was ~1.8 MB.\r\n\r\n### Regression?\r\nNo, this is new functionality of the ILLinker in the SDK.\r\n\r\n### Testing\r\nAutomated tests are added with this PR. I also tested manually that I can use this functionality to trim a Blazor application successfully.\r\n\r\n### Risk\r\n**Low:** This is new functionality that is already in the master branch and it doesn't change existing behavior. Getting it into preview7 and getting early feedback on it would be beneficial.\r\n\r\n* Add ILLink extension points\r\n\r\nSee https://github.com/dotnet/sdk/issues/12035\r\n\r\n- PrepareForILLink target\r\n- ManagedAssemblyToLink ItemGroup\r\n- TrimMode property and metadata\r\n- private _TrimmerCustomData (https://github.com/mono/linker/issues/1134)\r\n- Allow setting `PublishTrimmed` in a late import.targets\r\n\r\n* Add tests for extension points\r\n\r\n* Set Action in _RunILLink\r\n\r\n* Add notes about ManagedAssemblyToLink","Url":"https://github.com/dotnet/sdk/pull/12264","RelatedDescription":"Open PR \"Add ILLink extension points (#12116)\" (#12264)"},{"Id":"647105747","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:26","Actor":"wli3","Number":"12253","RawContent":null,"Title":"Remove unnecessary package reference","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/12253","RelatedDescription":"Closed or merged PR \"Remove unnecessary package reference\" (#12253)"},{"Id":"647341681","IsPullRequest":true,"CreatedAt":"2020-06-29T16:22:36","Actor":"dotnet-maestro[bot]","Number":"12258","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ffb20075-6bca-4826-6401-08d812f99aea)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: ffb20075-6bca-4826-6401-08d812f99aea\r\n- **Build**: 20200629.1\r\n- **Date Produced**: 6/29/2020 12:31 PM\r\n- **Commit**: 19c9e2f1b21a66ec90fefae79988b33fc16744fc\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20328.3 to 10.10.0-beta.20329.1\r\n\r\n[marker]: <> (End:ffb20075-6bca-4826-6401-08d812f99aea)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12258","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp\" (#12258)"},{"Id":"647498408","IsPullRequest":false,"CreatedAt":"2020-06-29T16:08:37","Actor":"MxGrv","Number":"12261","RawContent":null,"Title":"Support nethost environment undeployment","State":"open","Body":"Using the nethost library, one can deploy the .NET Core environment via nethost, using the load_assembly_and_get_function_pointer() routine, but cannot undeploy (unload or terminate) the assemblies and functions in any way, except native process termination. One may want to use the other version of .NET Core, or another [sub-]framework (like, switch from pure .NET Core to .NET Core with Windows extensions support or ASP.NET Core); moreover, correct termination with no memory leakage is desired. Neither nethost.h, nor coreclr_delegates.h do not support this, as seen [here](https://docs.microsoft.com/en-us/dotnet/core/tutorials/netcore-hosting#create-a-host-using-nethosth-and-hostfxrh). So, the question is, are there any plans to make a new C to C# library, or to refactor the nethost fundamentally to support proper .NET Core undeployment when needed? Is there any fundamental restriction which would never allow one to implement it (i.e., the whole concept of calling .NET code from native code)?\r\nP.S. Thanks in advance!","Url":"https://github.com/dotnet/sdk/issues/12261","RelatedDescription":"Open issue \"Support nethost environment undeployment\" (#12261)"},{"Id":"647318721","IsPullRequest":true,"CreatedAt":"2020-06-29T14:15:34","Actor":"dotnet-maestro[bot]","Number":"12257","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200628.3\r\n- **Date Produced**: 6/29/2020 3:59 AM\r\n- **Commit**: 2cd49dcaff95f8cade512d525cd70789a2b4588e\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20327.5 to 10.10.0-beta.20328.3\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12257","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#12257)"},{"Id":"647602614","IsPullRequest":false,"CreatedAt":"2020-06-29T13:46:45","Actor":"georgiosd","Number":"12265","RawContent":null,"Title":"Compiling 3.1 project referencing Microsoft.CodeAnalysis.CSharp fails on latest MacOS","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft.CodeAnalysis.CSharp 3.6.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nOn latest MacOS with dotnet core 3.1.5, a 3.1 project referencing `<PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"3.6.0\" />` fails\r\n\r\n**Expected Behavior**:\r\n\r\nProject compiles\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\n/Users/georgiosd/Documents/studoyo/api/xxxx.csproj : error NU1102: Unable to find package Microsoft.CodeAnalysis.CSharp with version (>= 3.3.0)\r\n/Users/georgiosd/Documents/studoyo/api/xxxx.csproj : error NU1102:   - Found 62 version(s) in nuget.org [ Nearest version: 3.0.0 ]\r\n/Users/georgiosd/Documents/studoyo/api/xxxx.csproj : error NU1102: Unable to find package Microsoft.CodeAnalysis.Common with version (>= 3.3.0)\r\n/Users/georgiosd/Documents/studoyo/api/xxx.csproj : error NU1102:   - Found 62 version(s) in nuget.org [ Nearest version: 3.0.0 ]\r\n    0 Warning(s)\r\n    2 Error(s)\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/12265","RelatedDescription":"Open issue \"Compiling 3.1 project referencing Microsoft.CodeAnalysis.CSharp fails on latest MacOS\" (#12265)"},{"Id":"647388535","IsPullRequest":false,"CreatedAt":"2020-06-29T13:43:03","Actor":"DylanMunyard","Number":"12260","RawContent":null,"Title":"error NU1100: Unable to resolve 'NUnit (>= 3.9.0)' for '.NETFramework,Version=v4.7'","State":"open","Body":"On a TeamCity Windows build agent the very first time it runs `dotnet build` it fails with NU1100. Re-running the build again will be successful. To work around this issue I create a default NuGet.Config file in `C:\\Users\\USER\\AppData\\Roaming\\NuGet\\NuGet.Config` with contents:\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n        <packageSources>\r\n            <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n        </packageSources>\r\n</configuration>\r\n\r\nBy default the Nuget.Config file exists in this location but it has no package sources. \r\nI used Chocolatey to install the SDK `cinst dotnetcore-sdk --version 3.1.300`\r\n\r\nThe project targets net47 and has a PackageReference to include NUnit:\r\n\r\n`<PackageReference Include=\"NUnit\" Version=\"3.9.0\" />`\r\n\r\nError:\r\n```\r\n.NET SDK 3.1.300 C:\\Program Files\\dotnet\\dotnet.exe build src\\MyApp.sln --configuration Release @G:\\BuildAgent3\\temp\\agentTmp\\1.rsp\r\nStarting: C:\\Program Files\\dotnet\\dotnet.exe build src\\MyApp.sln --configuration Release @G:\\BuildAgent3\\temp\\agentTmp\\1.rsp\r\nin directory: G:\\BuildAgent3\\work\\ca293bcfc483615b\r\n\r\nWelcome to .NET Core 3.1!\r\n---------------------\r\nSDK Version: 3.1.300\r\n\r\n----------------\r\nExplore documentation: https://aka.ms/dotnet-docs\r\nReport issues and find source on GitHub: https://github.com/dotnet/core\r\nFind out what's new: https://aka.ms/dotnet-whats-new\r\nLearn about the installed HTTPS developer cert: https://aka.ms/aspnet-core-https\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\nWrite your first app: https://aka.ms/first-net-core-app\r\n--------------------------------------------------------------------------------------\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\nG:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.IntegrationTests\\T1.MyApp.IntegrationTests.csproj : error NU1100: Unable to resolve 'NUnit (>= 3.9.0)' for '.NETFramework,Version=v4.7'.\r\n  Restored G:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.Web\\T1.MyApp.Web.csproj (in 1.61 sec).\r\n  Failed to restore G:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.IntegrationTests\\T1.MyApp.IntegrationTests.csproj (in 1.61 sec).\r\n  Restored G:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.Compatibility\\T1.MyApp.Compatibility.csproj (in 1.65 sec).\r\n  Restored G:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.PublicCatalogue\\T1.MyApp.PublicCatalogue.csproj (in 1.65 sec).\r\n  Restored G:\\BuildAgent3\\work\\ca293bcfc483615b\\src\\T1.MyApp.Business\\T1.MyApp.Business.csproj (in 8 ms).\r\n\r\nBuild FAILED.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:07.98\r\n```\r\n\r\n`dotnet info`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.300\r\n Commit:    b2475c1295\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.4\r\n  Commit:  0c2e69caa6\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/12260","RelatedDescription":"Open issue \"error NU1100: Unable to resolve 'NUnit (>= 3.9.0)' for '.NETFramework,Version=v4.7'\" (#12260)"},{"Id":"647363980","IsPullRequest":false,"CreatedAt":"2020-06-29T13:10:53","Actor":"xtmq","Number":"12259","RawContent":null,"Title":"Infinite restore because of implicit Microsoft.NETFramework.ReferenceAssemblies","State":"open","Body":"### Steps to reproduce\r\n\r\nEnsure there is no reference assemblies installed on the local machine: no directories `v4.8` and `v4.X` in `C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework` directory. \r\n\r\nTake Visual Studio 2019 `16.7.0 Preview 3.1` (latest for now). Open the next project\r\n\r\nProject file\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net48</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nNotice infinity blinking message `Restored C:\\...\\Test.csproj (in Y ms).`\r\n\r\n### What is going on\r\n\r\nThe root issue - recent changes in `Microsoft.NET.Sdk.FrameworkReferenceResolution.targets` target `IncludeTargetingPackReference`. \r\n\r\n1. MsBuild evaluates project for the first time. There was no restore performed so `TargetFrameworkRootPath` is empty, so target `IncludeTargetingPackReference` produces PackageReference `Microsoft.NETFramework.ReferenceAssemblies`. \r\n2. Visual Studio generates `project.assets.json` with the next content:\r\n```json\r\n...\r\n    \"frameworks\": {\r\n      \"net48\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.NETFramework.ReferenceAssemblies\": {\r\n            \"suppressParent\": \"All\",\r\n            \"target\": \"Package\",\r\n            \"version\": \"[1.0.0, )\",\r\n            \"autoReferenced\": true\r\n          }\r\n        },\r\n        \"runtimeIdentifierGraphPath\": \"C:\\\\Program Files\\\\dotnet\\\\sdk\\\\5.0.100-preview.6.20318.15\\\\RuntimeIdentifierGraph.json\"\r\n      }\r\n    },\r\n...\r\n```\r\n3. NuGet performs restore and creates the next target file which will be included in the project:\r\n```\r\n\\Users\\xtmq\\.nuget\\packages\\microsoft.netframework.referenceassemblies.net48\\1.0.0\\build\\Microsoft.NETFramework.ReferenceAssemblies.net48.targets\r\n```\r\n4. MsBuild evaluates the project for the second time. `TargetFrameworkRootPath` points to `microsoft.netframework.referenceassemblies.net48` so `IncludeTargetingPackReference` does nothing. \r\n5. Visual Studio obtains all needed references to perform code analysis. Together with that it produces the new `project.assets.json` file with the next content:\r\n```json\r\n...\r\n    \"frameworks\": {\r\n      \"net48\": {\r\n        \"runtimeIdentifierGraphPath\": \"C:\\\\Program Files\\\\dotnet\\\\sdk\\\\5.0.100-preview.6.20318.15\\\\RuntimeIdentifierGraph.json\"\r\n      }\r\n    },\r\n...\r\n```\r\nNotice there is no `Microsoft.NETFramework.ReferenceAssemblies` dependency because there is no corresponding  `PackageReference` after project evaluation anymore. \r\n6. Visual Studio somehow detects changes in `project.assets.json` and runs restore \\ evaluate again. Go to step 1. \r\n\r\n### Comments\r\n\r\nI am not aware of Visual Studio internals and how it detects changes and decides to reload \\ restore project. I am a Rider developer and we have the same issue (especially on non-windows platforms). For example this issue:\r\nhttps://youtrack.jetbrains.com/issue/RIDER-45888\r\n\r\nI have managed to implement a hack to solve this particular issue, but I prefer to see the right solution in the SDK. \r\n\r\nIn my humble opinion we have to return this implicit reference all the time. In the same way we provide other SDK references. \r\n\r\nThanks in advance. ","Url":"https://github.com/dotnet/sdk/issues/12259","RelatedDescription":"Open issue \"Infinite restore because of implicit Microsoft.NETFramework.ReferenceAssemblies\" (#12259)"},{"Id":"647256494","IsPullRequest":false,"CreatedAt":"2020-06-29T10:11:33","Actor":"sunliusi","Number":"12256","RawContent":null,"Title":"dotnet restore -s is not working","State":"open","Body":"Run dotnet restore in rancher to build docker image, dotnet restore take a long time and frequently timeout.\r\n\r\ndockerfile command:\r\n**RUN dotnet restore \"K8sSecondDemoWeb/K8sSecondDemoWeb.csproj\" -s https://nuget.cdn.azure.cn/v3/index.json**\r\n\r\n**Try using a CDN and it seems that the CDN is not working. A lot of timeouts come from api.nuget.org rather than the nuget.cdn.azure.cn**\r\n\r\nStep 7/20 : RUN dotnet restore \"K8sSecondDemoWeb/K8sSecondDemoWeb.csproj\" -s https://nuget.cdn.azure.cn/v3/index.json\r\n ---> Running in 2ebe9348bf2f\r\n  Determining projects to restore...\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/nlog/index.json'.\r\n  The HTTP request to 'GET https://api.nuget.org/v3-flatcontainer/nlog/index.json' has timed out after 100000ms.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.binder/index.json'.\r\n  The HTTP request to 'GET https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.binder/index.json' has timed out after 100000ms.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.options/index.json'.\r\n  The HTTP request to 'GET https://api.nuget.org/v3-flatcontainer/microsoft.extensions.options/index.json' has timed out after 100000ms.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.binder/index.json'.\r\n  The HTTP request to 'GET https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.binder/index.json' has timed out after 100000ms.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/12256","RelatedDescription":"Open issue \"dotnet restore -s is not working\" (#12256)"},{"Id":"647185032","IsPullRequest":true,"CreatedAt":"2020-06-29T07:31:00","Actor":"dotnet-maestro[bot]","Number":"12255","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200628.2\r\n- **Date Produced**: 6/29/2020 7:16 AM\r\n- **Commit**: b724aa62bf4f055092e951e331c22b9c14088db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-preview.8.20328.1 to 5.0.0-preview.8.20328.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12255","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12255)"},{"Id":"647097016","IsPullRequest":true,"CreatedAt":"2020-06-29T06:40:11","Actor":"dotnet-maestro[bot]","Number":"12252","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ffb20075-6bca-4826-6401-08d812f99aea)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: ffb20075-6bca-4826-6401-08d812f99aea\r\n- **Build**: 20200628.3\r\n- **Date Produced**: 6/29/2020 3:59 AM\r\n- **Commit**: 2cd49dcaff95f8cade512d525cd70789a2b4588e\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20328.2 to 10.10.0-beta.20328.3\r\n\r\n[marker]: <> (End:ffb20075-6bca-4826-6401-08d812f99aea)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12252","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp\" (#12252)"},{"Id":"647061111","IsPullRequest":true,"CreatedAt":"2020-06-29T04:25:37","Actor":"dotnet-maestro[bot]","Number":"12251","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200628.1\r\n- **Date Produced**: 6/29/2020 1:59 AM\r\n- **Commit**: fa9b3dcedd04deaf27c2a105f5ab6bb3791ad194\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-preview.8.20327.3 to 5.0.0-preview.8.20328.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12251","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12251)"},{"Id":"646905431","IsPullRequest":true,"CreatedAt":"2020-06-29T03:57:41","Actor":"dotnet-maestro[bot]","Number":"12249","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200627.5\r\n- **Date Produced**: 6/27/2020 9:43 PM\r\n- **Commit**: b74c9de731058d0258f82dac1bddc7688a5fa410\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20326.3 to 10.10.0-beta.20327.5\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12249","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#12249)"},{"Id":"647045791","IsPullRequest":true,"CreatedAt":"2020-06-29T03:33:15","Actor":"dotnet-maestro[bot]","Number":"12250","RawContent":null,"Title":"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ffb20075-6bca-4826-6401-08d812f99aea)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: ffb20075-6bca-4826-6401-08d812f99aea\r\n- **Build**: 20200628.2\r\n- **Date Produced**: 6/29/2020 12:55 AM\r\n- **Commit**: bab2902ec895cfc53b186eebac47ed0d533ad2eb\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20327.5 to 10.10.0-beta.20328.2\r\n\r\n[marker]: <> (End:ffb20075-6bca-4826-6401-08d812f99aea)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12250","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview7] Update dependencies from dotnet/fsharp\" (#12250)"},{"Id":"646904739","IsPullRequest":true,"CreatedAt":"2020-06-29T03:14:03","Actor":"dotnet-maestro[bot]","Number":"12247","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200628.1\r\n- **Date Produced**: 6/28/2020 10:11 AM\r\n- **Commit**: 0f7b3532e573b72f9d3eb9161513d8405be24d6f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.8.20326.9 to 5.0.0-preview.8.20328.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12247","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#12247)"},{"Id":"646904948","IsPullRequest":true,"CreatedAt":"2020-06-29T03:10:11","Actor":"dotnet-maestro[bot]","Number":"12248","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.8.20326.2 to 5.0.0-preview.8.20327.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200627.1\r\n- **Date Produced**: 6/27/2020 3:18 PM\r\n- **Commit**: f023ff003dfbff61494cdcb81034ab2924c9ea80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.8.20326.4 to 5.0.0-preview.8.20327.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.8.20326.2 to 5.0.0-preview.8.20327.1\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12248","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#12248)"},{"Id":"646842343","IsPullRequest":true,"CreatedAt":"2020-06-28T07:42:48","Actor":"dotnet-maestro[bot]","Number":"12246","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200627.3\r\n- **Date Produced**: 6/28/2020 4:56 AM\r\n- **Commit**: cc3d47f5501cdfae3e5b5be509ef2c0fb8cca069\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-preview.8.20327.2 to 5.0.0-preview.8.20327.3\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12246","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12246)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1277758755191623680","CreatedAt":"2020-06-30T00:20:01+00:00","UserScreenname":"dotnet","Text":"👉 🆕 - Learn to create and deploy a cloud-native @ASPNET Core microservice with this training module that explores c… https://t.co/geUyN3SKIU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":19,"RawContent":null},{"Id":"1277703133297287169","CreatedAt":"2020-06-29T20:39:00+00:00","UserScreenname":"dotnet","Text":"In today's episode in #OnDotNET's @ASPNET Core series, @danroth27 takes on MVC and Razor Pages programming mode. Wa… https://t.co/e6Qtt93vGR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1277653817052606467","CreatedAt":"2020-06-29T17:23:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @FransBouma discusses data access in #dotNET, shares his perspective on life beyond E… https://t.co/9BPef63Y8s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1277613296787611649","CreatedAt":"2020-06-29T14:42:01+00:00","UserScreenname":"dotnet","Text":"Coming July 30, #dotNET Conf focuses on Microservices. Save the date to join us: https://t.co/FliMhuO2bV https://t.co/FxmJ4HwuDq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":342,"FavoriteCount":159,"RawContent":null},{"Id":"1276671593620652034","CreatedAt":"2020-06-27T00:20:01+00:00","UserScreenname":"dotnet","Text":"How do you test your Blazor app? Today on #dotNETRocks, @egilhansen talk bUnit, an open-source testing framework de… https://t.co/Tb5cZBWnb6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1276627298050064384","CreatedAt":"2020-06-26T21:24:01+00:00","UserScreenname":"dotnet","Text":"Looking at how we can use the same application insights configuration for multiple exports, today's… https://t.co/vLYK2PgOPo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":14,"RawContent":null},{"Id":"1276580486001893377","CreatedAt":"2020-06-26T18:18:00+00:00","UserScreenname":"dotnet","Text":"in today's .NET Tutorial we learn to deploy microservices, built with #dotNET and #Docker, to Microsoft Azure.\nhttps://t.co/r6lDeq9L98","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":89,"FavoriteCount":33,"RawContent":null},{"Id":"1276560835637153792","CreatedAt":"2020-06-26T16:59:55+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":30,"FavoriteCount":4,"RawContent":null},{"Id":"1276526889306374147","CreatedAt":"2020-06-26T14:45:01+00:00","UserScreenname":"dotnet","Text":"How do you test your Blazor 🔥 app? Today on #dotNETRocks, @egilhansen talk bUnit, an open-source testing framework… https://t.co/tOlefYLyrq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":10,"RawContent":null},{"Id":"1276310464302120963","CreatedAt":"2020-06-26T00:25:02+00:00","UserScreenname":"dotnet","Text":"Drop in on a guided online Microsoft Learn workshop to learn about setting up a development environment and buildin… https://t.co/RmdDkZOskI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":120,"FavoriteCount":37,"RawContent":null},{"Id":"1276266420662407172","CreatedAt":"2020-06-25T21:30:01+00:00","UserScreenname":"dotnet","Text":"...found @DailyDotNETTips, 10 @AzureDevOps tips and tricks that #dotNET devs should know: https://t.co/ZIZli2UDCQ https://t.co/hSg49m73Il","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":12,"RawContent":null},{"Id":"1276219104786030592","CreatedAt":"2020-06-25T18:22:00+00:00","UserScreenname":"dotnet","Text":".NET Tutorial | Hello World Microservice  Step-by-step instructions for installing .NET and building your first mic… https://t.co/2CJS33Y5Hp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":165,"FavoriteCount":53,"RawContent":null},{"Id":"1276203867781267461","CreatedAt":"2020-06-25T17:21:27+00:00","UserScreenname":"dotnet","Text":"Announcing .NET 5.0 Preview 6 https://t.co/KH7KnGj2BC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":347,"FavoriteCount":169,"RawContent":null},{"Id":"1276202851828551681","CreatedAt":"2020-06-25T17:17:25+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core EFCore 5.0 Preview 6 https://t.co/jsLZDkdNie","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":105,"FavoriteCount":46,"RawContent":null},{"Id":"1276202742835408896","CreatedAt":"2020-06-25T17:16:59+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET 5 Preview 6 https://t.co/eYVG2A5D3W","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":51,"FavoriteCount":25,"RawContent":null},{"Id":"1276197338835349504","CreatedAt":"2020-06-25T16:55:30+00:00","UserScreenname":"dotnet","Text":"Starting now! Come join us and hear about New XAML Desktop Features and more on the .NET Community Standup with… https://t.co/yetE3b5YJN","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"1276196841298657280","CreatedAt":"2020-06-25T16:53:32+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"1276169535599640576","CreatedAt":"2020-06-25T15:05:02+00:00","UserScreenname":"dotnet","Text":"#dotNETRocks talks to @CoolCSH about the #dotNET Multi-Platform App UI and how we're unifying elements to make… https://t.co/GM7KW0lajn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2020-06-30T05:30:36.1602437Z","RunDurationInMilliseconds":13656}