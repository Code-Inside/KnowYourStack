{"Data":{"Blog":{"FeedItems":[{"Title":"What’s next for System.Text.Json?","PublishedOn":"2020-12-16T16:00:37+00:00","CommentsCount":15,"FacebookCount":0,"Summary":".NET 5.0 was released recently and has come with many new features and performance improvements. System.Text.Json is no exception. We have improved performance, reliability, and made it easier to...","Href":"https://devblogs.microsoft.com/dotnet/whats-next-for-system-text-json/","RawContent":null},{"Title":"Localize .NET applications with machine-translation","PublishedOn":"2020-12-15T16:00:46+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In this post, I&#8217;m going to introduce you to a GitHub Action that creates machine-translations for .NET localization. GitHub Actions allow you to build, test, and deploy your code right from...","Href":"https://devblogs.microsoft.com/dotnet/localize-net-applications-with-machine-translation/","RawContent":null},{"Title":"[Guest Post] Creating a game art asset pipeline in .NET","PublishedOn":"2020-12-14T16:00:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Sam Eddy, a programmer at Kelsam Games. Kelsam&#8217;s games are written in C# using .NET and the MonoGame framework.\nHello .NET community! I am Sam from Kelsam Games, and I...","Href":"https://devblogs.microsoft.com/dotnet/creating-a-game-art-asset-pipeline-in-net/","RawContent":null},{"Title":"What’s new in Windows Forms runtime in .NET 5.0","PublishedOn":"2020-12-10T16:00:19+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Since Windows Forms was open sourced in late 2018, and ported to .NET Core, both the team and our external contributors have been busy fixing old bugs and adding new features. In this post we are...","Href":"https://devblogs.microsoft.com/dotnet/whats-new-in-windows-forms-runtime-in-net-5-0/","RawContent":null},{"Title":"Producing Packages with Source Link","PublishedOn":"2020-12-09T16:05:44+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"In our last post, we showed you how you can debug into the framework and dependencies that was produced with Source Link. In this post, we&#8217;ll show you how to add Source Link to your projects....","Href":"https://devblogs.microsoft.com/dotnet/producing-packages-with-source-link/","RawContent":null},{"Title":".NET December 2020 Updates – 5.0.1","PublishedOn":"2020-12-08T19:16:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the .NET December 2020 Update. These updates contains reliability and other non-security improvements. See the individual release notes for details on updated packages. Also...","Href":"https://devblogs.microsoft.com/dotnet/net-december-2020/","RawContent":null},{"Title":"Infer#: Interprocedural Memory Safety Analysis For C#","PublishedOn":"2020-12-08T17:00:26+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"“The refinement of techniques for the prompt discovery of error serves as well as any other as a hallmark of what we mean by science.”\n: -J. Robert Oppenheimer\nWe are excited to announce the public...","Href":"https://devblogs.microsoft.com/dotnet/infer-interprocedural-memory-safety-analysis-for-c/","RawContent":null},{"Title":"[Guest Post] Bring lights in Unity into the real-world using Philips Hue","PublishedOn":"2020-12-07T21:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The article was written by Paul Marsh, a long time Microsoft Developer from Microsoft BASIC on an 8-bit Dragon 32 through to Azure and now Unity 3D. He has worked with a number of enterprise...","Href":"https://devblogs.microsoft.com/dotnet/guest-post-bring-lights-in-unity-into-the-real-world-using-philips-hue/","RawContent":null},{"Title":".NET Core 2.1, 3.1, and .NET 5.0 updates are coming to Microsoft Update","PublishedOn":"2020-12-03T23:25:09+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"12/09/2020: this post was updated to clarify that Client operating systems will get .NET Core updates via Automatic Updates, while Server operating systems will get .NET Core updates via WSUS and MU...","Href":"https://devblogs.microsoft.com/dotnet/net-core-updates-coming-to-microsoft-update/","RawContent":null},{"Title":"Improving Debug-time Productivity with Source Link","PublishedOn":"2020-12-02T16:00:02+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"How many times have you been in the debugger tracking down a bug, stepping through code, looking at what local variable values changed, when you hit a wall &#8212; the value isn&#8217;t what you...","Href":"https://devblogs.microsoft.com/dotnet/improving-debug-time-productivity-with-source-link/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14457649400","Type":"IssuesEvent","CreatedAt":"2020-12-08T19:30:21","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/169","RelatedDescription":"Opened issue \"December 2020 .NET Updates\" (#169) at dotnet/announcements","RelatedBody":"The following .NET updates were released on November 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET December 2020 Updates – 5.0.1](https://devblogs.microsoft.com/dotnet/net-december-2020/)\r\n  * .NET 5.0.1 and .NET SDK 5.0.101 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.1/5.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n</br>\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"14240443181","Type":"IssuesEvent","CreatedAt":"2020-11-18T21:42:53","Actor":"samsp-msft","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/168","RelatedDescription":"Opened issue \"Survey: Repo contribution experience, Fall 2020\" (#168) at dotnet/announcements","RelatedBody":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/announcements)\r\n\r\nThank you for your time!\r\n\r\n## Discussion ##\r\nFor discussion, please go to dotnet/runtime#36235.\r\n"},{"Id":"14144439870","Type":"IssuesEvent","CreatedAt":"2020-11-10T16:26:54","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/167","RelatedDescription":"Opened issue \"November 2020 .NET Updates\" (#167) at dotnet/announcements","RelatedBody":"The following .NET updates were released on November 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [November 2020 Updates – 5.0](https://devblogs.microsoft.com/dotnet/announcing-net-5-0/)\r\n  * .NET 5.0 and .NET SDK 5.0.100 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.0/5.0.0.md | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [November 2020 Updates – 3.1.10](https://devblogs.microsoft.com/dotnet/net-core-november-2020/)\r\n  * .NET Core 3.1.10 and .NET Core SDK 3.1.110 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.10/3.1.10.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"13832940104","Type":"IssuesEvent","CreatedAt":"2020-10-13T19:01:25","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/166","RelatedDescription":"Opened issue \"October 2020 .NET Updates \" (#166) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [October 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/)\r\n* [Republishing of July 2020 Security Only Updates](https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"14495463675","Type":"PullRequestEvent","CreatedAt":"2020-12-11T11:13:30","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28039","RelatedDescription":"Closed pull request \"[3.1] Fix Unix named mutex crash during some race conditions\" (#28039) at dotnet/coreclr","RelatedBody":"Port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\n\r\nBelow when I refer to \"mutex\" I'm referring to the underlying mutex object, not an instance of the `Mutex` class.\r\n- When the last reference to a mutex is closed while the lock is held by some thread and a pthread mutex is used, the mutex was attempted to be destroyed but that has undefined behavior\r\n- There doesn't seem to be a way to behave exactly like on Windows for this corner case, where the mutex is destroyed when the last reference to it is released, regardless of which process has the mutex locked and which process releases the last reference to it (they could be two different processes), including in cases of abrupt shutdown\r\n- For this corner case I settled on what seems like a decent solution and compatible with older runtimes:\r\n  - When a process releases its last reference to the mutex\r\n    - If that mutex is locked by the same thread, the lock is abandoned and the process no longer references the mutex\r\n    - If that mutex is locked by a different thread, the lifetime of the mutex is extended with an implicit ref. The implicit ref prevents this or other processes from attempting to destroy the mutex while it is locked. The implicit ref is removed in either of these cases:\r\n      - The mutex gets another reference from within the same process\r\n      - The thread that owns the lock exits and abandons the mutex, at which point that would be the last reference to the mutex and the process would not reference the mutex anymore\r\n  - The implementation based on file locks is less restricted, but for consistency that implementation also follows the same behavior\r\n- There was also a race between an exiting thread abandoning one of its locked named mutexes and another thread releasing the last reference to it, fixed by using the creation/deletion process lock to synchronize\r\n\r\nFix for https://github.com/dotnet/runtime/issues/34271 in 3.1\r\n\r\n### Customer impact\r\n\r\n- Random crashes were seen on Unixes\r\n- When a named mutex is locked and the last reference to it is released from a different thread in any process, the underlying pthread mutex object is destroyed and that has undefined behavior. Crashes were seen where some data associated with the destroyed pthread mutex continues to be used when acquiring another pthread mutex in racy situations, causing a crash because the memory containing the destroyed pthread mutex is unmapped.\r\n- There was also a race where a thread has acquired the lock of a named mutex, between that thread exiting and abandoning the mutex, and another thread attempting to destroy the mutex\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- PAL named mutex tests on Linux and OSX including in stress mode (1 hour) in debug and release\r\n- System.Threading tests including mutex tests on Linux and OSX with debug and release coreclr\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- It is a bit of a corner case, where a lock is acquired and the mutex is disposed without releasing the lock, especially necessary for this issue is that the thread that disposes the mutex is different from the one that holds the lock\r\n- Since the fix involves extending the lifetime of a mutex in such a case, the underlying shared named mutex may observably live longer than before. That is necessary for correctness, as the behavior there was incorrect before and leading to the crashes."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"14608878576","Type":"PullRequestEvent","CreatedAt":"2020-12-21T20:45:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13659","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13659) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201221.2\r\n- **Date Produced**: 12/21/2020 7:42 PM\r\n- **Commit**: ac42bf1c800b896125632aa845f961e391d1a440\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20580.3 to 1.0.0-beta.20621.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7ee8c2b...ac42bf1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"14576478503","Type":"PullRequestEvent","CreatedAt":"2020-12-17T23:34:37","Actor":"cristianosuzuki77","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13658","RelatedDescription":"Opened pull request \"[Loc] Few updates to translations\" (#13658) at dotnet/cli","RelatedBody":"I'm your MSFT Loc PM. These are few updates to these files over a period of time.\r\nIf this repo is not active for updates, please disregard this PR."},{"Id":"14369761116","Type":"PullRequestEvent","CreatedAt":"2020-12-01T10:10:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13657","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13657) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201130.3\r\n- **Date Produced**: 11/30/2020 8:28 PM\r\n- **Commit**: 7ee8c2b620e66b3762d7a5a688dee8238770c86a\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20570.10 to 1.0.0-beta.20580.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1ceac96...7ee8c2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"14363605647","Type":"PullRequestEvent","CreatedAt":"2020-11-30T21:46:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13657","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13657) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201130.3\r\n- **Date Produced**: 11/30/2020 8:28 PM\r\n- **Commit**: 7ee8c2b620e66b3762d7a5a688dee8238770c86a\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20570.10 to 1.0.0-beta.20580.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1ceac96...7ee8c2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"14282887592","Type":"PullRequestEvent","CreatedAt":"2020-11-23T10:13:36","Actor":"v-wuzhai","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/13655","RelatedDescription":"Closed pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13655) at dotnet/cli","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* marcpopMSFT\n* dotnet-bot\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"14281202194","Type":"PullRequestEvent","CreatedAt":"2020-11-23T07:38:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13656","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13656) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201120.10\r\n- **Date Produced**: 11/20/2020 9:10 PM\r\n- **Commit**: 1ceac96c54fcf33eb745649c4e7b8d7507a9b730\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20570.2 to 1.0.0-beta.20570.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6afe5f9...1ceac96\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"14619351369","Type":"IssuesEvent","CreatedAt":"2020-12-22T17:42:11","Actor":"rathnagiri","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Opened issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786) at dotnet/standard","RelatedBody":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n"},{"Id":"14539032319","Type":"IssuesEvent","CreatedAt":"2020-12-15T11:17:31","Actor":"tmds","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785) at dotnet/standard","RelatedBody":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?"},{"Id":"14487677684","Type":"IssuesEvent","CreatedAt":"2020-12-10T20:45:03","Actor":"tmds","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Opened issue \"mono and .NET5+\" (#1785) at dotnet/standard","RelatedBody":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?"},{"Id":"14422375300","Type":"IssuesEvent","CreatedAt":"2020-12-05T02:37:36","Actor":"Nilotaviano","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1784","RelatedDescription":"Opened issue \"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()\" (#1784) at dotnet/standard","RelatedBody":"The code below works perfectly on Windows, but doesn't work when deployed on Ubuntu 16.10 (`Logger.LogMessage(\"App Settings reloaded\")` is never called).\r\n\r\n```\r\nprivate static AppSettings GetAppSettings()\r\n{\r\n    var configuration = new ConfigurationBuilder()\r\n        .AddJsonFile(Path.Combine(System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName, \"..\", \"appsettings.json\"), optional: false, reloadOnChange: true)\r\n        .Build();\r\n\r\n    var appSettings = configuration.Get<AppSettings>();\r\n\r\n    ChangeToken.OnChange(() => configuration.GetReloadToken(), () =>\r\n    {\r\n        Logger.LogMessage(\"App Settings reloaded\");\r\n    });\r\n\r\n    return appSettings;\r\n}\r\n```\r\n\r\n.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;ubuntu.16.10-x64</RuntimeIdentifiers>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNet.SignalR.Client\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"RestSharp\" Version=\"106.11.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nPublish profile:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\nhttps://go.microsoft.com/fwlink/?LinkID=208121. \r\n-->\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <Configuration>Release</Configuration>\r\n    <Platform>Any CPU</Platform>\r\n    <PublishDir>bin\\Release\\netcoreapp3.1\\publish\\</PublishDir>\r\n    <PublishProtocol>FileSystem</PublishProtocol>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifier>ubuntu.16.10-x64</RuntimeIdentifier>\r\n    <SelfContained>true</SelfContained>\r\n    <PublishSingleFile>True</PublishSingleFile>\r\n    <PublishTrimmed>True</PublishTrimmed>\r\n  </PropertyGroup>\r\n</Project>\r\n```"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"14544142089","Type":"PullRequestEvent","CreatedAt":"2020-12-15T17:46:35","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/43009","RelatedDescription":"Opened pull request \"Add RHEL 9 RID\" (#43009) at dotnet/corefx","RelatedBody":"Trying to build .NET Core 3.1 (via source-build) on a recent Fedora version with /etc/os-release patched to report \"rhel.9\" results in a build failure.\r\n\r\nThis should, hopefully, fix that error.\r\n\r\nThis is a partial backport of https://github.com/dotnet/runtime/pull/34088."},{"Id":"14495469799","Type":"PullRequestEvent","CreatedAt":"2020-12-11T11:14:03","Actor":"kouvel","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42917","RelatedDescription":"Closed pull request \"[3.1] Test-only followup for \"Fix Unix named mutex crash during some race conditions\"\" (#42917) at dotnet/corefx","RelatedBody":"Test-only port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\nTest-only followup for and depends on https://github.com/dotnet/coreclr/pull/28039\r\n\r\nCloses https://github.com/dotnet/runtime/issues/34271"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"14644321388","Type":"PullRequestEvent","CreatedAt":"2020-12-25T22:36:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/15092","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/runtime\" (#15092) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201224.8\r\n- **Date Produced**: 12/25/2020 7:41 AM\r\n- **Commit**: 96c97c2cf48a4dc2bd9365c67f442b68514a007c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/adacdc0...96c97c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"14642830094","Type":"PullRequestEvent","CreatedAt":"2020-12-25T13:09:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/15092","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/runtime\" (#15092) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201224.8\r\n- **Date Produced**: 12/25/2020 7:41 AM\r\n- **Commit**: 96c97c2cf48a4dc2bd9365c67f442b68514a007c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/adacdc0...96c97c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"14641446504","Type":"PullRequestEvent","CreatedAt":"2020-12-25T07:00:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/15091","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#15091) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201224.3\r\n- **Date Produced**: 12/25/2020 6:48 AM\r\n- **Commit**: 7a2f5cc0c4a8212d2628e99e9918b4632aa4f344\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/4900ad4...7a2f5cc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"14639257301","Type":"PullRequestEvent","CreatedAt":"2020-12-24T19:06:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/15089","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/windowsdesktop\" (#15089) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20201223.2\r\n- **Date Produced**: 12/23/2020 2:41 PM\r\n- **Commit**: 7d87394075e5af4be83239ceb54ba708c3227c86\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/8d40d73...7d87394\r\n[2]: https://github.com/dotnet/wpf/compare/63da6bf...e025681\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n"},{"Id":"14639230397","Type":"PullRequestEvent","CreatedAt":"2020-12-24T18:59:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/15088","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/runtime\" (#15088) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 11:54 AM\r\n- **Commit**: adacdc0c9057f755f09b19ceaf1fde15af5278a6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a70005f...adacdc0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"14639174121","Type":"PullRequestEvent","CreatedAt":"2020-12-24T18:44:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/15087","RelatedDescription":"Merged pull request \"[master] Update dependencies from mono/linker\" (#15087) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 9ac01057-d33d-4509-c9e1-08d846b6e5b9\r\n- **Build**: 20201224.1\r\n- **Date Produced**: 12/24/2020 12:07 PM\r\n- **Commit**: 6d05762d54a56309e49e6d8b70dca272e78e3e19\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20624.1][1]\r\n\r\n[1]: https://github.com/mono/linker/compare/8ecdb90...6d05762\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n\r\n"},{"Id":"14638969155","Type":"PullRequestEvent","CreatedAt":"2020-12-24T17:52:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/15090","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#15090) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 3:56 PM\r\n- **Commit**: 4900ad44cb953a0742f6e49bb0607f7a8876cf2e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/76f1cc2...4900ad4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"14638497964","Type":"PullRequestEvent","CreatedAt":"2020-12-24T16:10:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/15090","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#15090) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 3:56 PM\r\n- **Commit**: 4900ad44cb953a0742f6e49bb0607f7a8876cf2e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/76f1cc2...4900ad4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"nxtn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"nxtn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"nxtn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"nxtn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"nxtn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"nxtn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"nxtn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"758895128","IsPullRequest":true,"CreatedAt":"2020-12-07T22:20:28","Actor":"dotnet-maestro-bot","Number":"28116","RawContent":null,"Title":"Update BuildTools to rc1-05907-02 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28116","RelatedDescription":"Open PR \"Update BuildTools to rc1-05907-02 (release/2.1)\" (#28116)"},{"Id":"726225280","IsPullRequest":true,"CreatedAt":"2020-11-16T16:16:08","Actor":"sywhang","Number":"28112","RawContent":null,"Title":"Fix a potential race in iterating counters","State":"closed","Body":"## Summary\r\n\r\nThere was a mistake that was made in backporting https://github.com/dotnet/runtime/pull/40259 to https://github.com/dotnet/coreclr/pull/28089 where `_counters` was used to iterate instead of the snapshotted value of `counters`. `_counters` is a list that needs to be lock-protected, but this access was happening outside of the lock, which is what the snapshot is for. This caused a race-condition on the read/write on this list, causing a crash. The problem does not exist in the 5.0 fix, only for the 3.1 backport. \r\n\r\n## Customer Impact\r\n\r\nMedium/High. When hit with this issue, a customer may experience a crash. A customer may run into this issue when they turn on the runtime counters (System.Runtime) or any other set of counter providers, and then modify the list of counters while a counter callback is happening by either creating or disposing instances of EventCounters. For customers that don't consume/create their own EventCounters, this shouldn't be a problem. For those who do, it's pretty easy to hit with the likelihood increasing the shorter they set the counter polling interval.\r\n\r\n## Regression \r\n\r\nYes. From 3.1.8 -> 3.1.9 servicing release. \r\n\r\n## Testing \r\n\r\nWe do not have a local repro of this failure, but we tested the fix by providing a custom build of the runtime with this fix to the  internal partner test that initially reported this problem. They ran it in production that hit this issue and reported that this addresses the issue.\r\n\r\n## Risk \r\n\r\nThe root cause/fix is well-understood and the fix was verified through partner testing - I would say it is relatively low.","Url":"https://github.com/dotnet/coreclr/pull/28112","RelatedDescription":"Closed or merged PR \"Fix a potential race in iterating counters\" (#28112)"},{"Id":"709001291","IsPullRequest":true,"CreatedAt":"2020-11-16T16:15:41","Actor":"mlindstr","Number":"28104","RawContent":null,"Title":"Fix ilasm managed resource lookup on Linux.","State":"closed","Body":"ILAsm did not properly find managed resources if they were not in the\r\nworking directory of ILAsm itself. While there was a provision for\r\nWindows-based systems using backslashes as directory separators, there\r\nwas no such provision for *nix-based systems using forward slashes.\r\n\r\nThis commit enables ILAsm to lookup both types of directory separators.","Url":"https://github.com/dotnet/coreclr/pull/28104","RelatedDescription":"Closed or merged PR \"Fix ilasm managed resource lookup on Linux.\" (#28104)"},{"Id":"741252731","IsPullRequest":true,"CreatedAt":"2020-11-12T16:55:43","Actor":"sdmaclea","Number":"28115","RawContent":null,"Title":"Fix remote-unwind for TARGET_ARM crossdac (dotnet/runtime#44553)","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28115","RelatedDescription":"Closed or merged PR \"Fix remote-unwind for TARGET_ARM crossdac (dotnet/runtime#44553)\" (#28115)"},{"Id":"740086455","IsPullRequest":true,"CreatedAt":"2020-11-10T21:31:36","Actor":"aik-jahoda","Number":"28113","RawContent":null,"Title":"update branding to 3.1.11","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28113","RelatedDescription":"Closed or merged PR \"update branding to 3.1.11\" (#28113)"},{"Id":"740175080","IsPullRequest":true,"CreatedAt":"2020-11-10T19:16:38","Actor":"sdmaclea","Number":"28114","RawContent":null,"Title":"Release/3.1 crossdac","State":"closed","Body":"This is a simple \r\n```bash\r\ngit merge v3.1.10\r\n#probably not needed\r\ngit merge origin/release/3.1-crossdac\r\n```\r\n/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/28114","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac\" (#28114)"},{"Id":"721744024","IsPullRequest":true,"CreatedAt":"2020-10-16T18:33:16","Actor":"Anipik","Number":"28111","RawContent":null,"Title":"Adding --preinstall flag to brew update","State":"closed","Body":"Fixes https://dev.azure.com/dnceng/internal/_build/results?buildId=851404&view=logs&j=8fda0d10-4a57-56af-7add-7281436b36e1&t=d354d20b-3af3-59c3-d621-c743753ae5da\r\n\r\nbrew update fetchs the newest version of Homebrew and all formulae from GitHub using git and perform any necessary migrations. There was problem fetching those issues.\r\npreinstall helps \r\n```\r\n--preinstall: Run on auto-updates (e.g. before brew install). Skips some slower steps.\r\n```\r\n\r\ni looked at the what we were differently in dotnet runtime to find the --preinstall flag. \r\n","Url":"https://github.com/dotnet/coreclr/pull/28111","RelatedDescription":"Closed or merged PR \"Adding --preinstall flag to brew update\" (#28111)"},{"Id":"720823337","IsPullRequest":true,"CreatedAt":"2020-10-13T21:47:02","Actor":"dotnet-maestro-bot","Number":"28110","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28110","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-29321-03, servicing-29321-01, respectively (release/2.1)\" (#28110)"},{"Id":"714801101","IsPullRequest":true,"CreatedAt":"2020-10-13T21:12:33","Actor":"janvorli","Number":"28106","RawContent":null,"Title":"Port to 3.1 - Fix bad configure tests","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/42756\r\n\r\nThere was an extra -c in the CMAKE_REQUIRED_FLAGS set for testing\r\nHAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC that was breaking\r\nbuild of coreclr under homebrew. The option was somehow making\r\nthese checks behave on ARM Linux, even though it is not clear to\r\nme why, as it was just causing this option to be passed to the\r\ncompiler twice at different positions of the command line of\r\nthe cmake tests.\r\nThis change fixes it by using check_symbol_exists instead of\r\ncheck_c_source_compiles, since just removing the duplicite -c\r\nwas resulting in the check failing on ARM / ARM64 Linux due\r\nto a missing symbol from libunwind during linking.\r\n\r\n# Customer impact\r\nWe've got this issue reported by a customer who was trying to add `brew` recipe for packaging\r\n.NET Core 3.1 on OSX. \r\n\r\n# Regression?\r\nYes, introduced in 2.1\r\n\r\n# Testing\r\nI've manually verified that the HAVE_UNW_GET_ACCESSORS and HAVE_UNW_GET_SAVE_LOC (and UNWIND_CONTEXT_IS_UCONTEXT_T that was not broken, but it is in the block of code influenced \r\nby the change) are generated correctly for all the support target platforms / architectures.\r\n\r\n# Risk\r\nVery low, the change influences only a compile time detection of a presence of two libunwind \r\nfunctions. ","Url":"https://github.com/dotnet/coreclr/pull/28106","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix bad configure tests\" (#28106)"},{"Id":"719667414","IsPullRequest":true,"CreatedAt":"2020-10-13T21:12:01","Actor":"Anipik","Number":"28107","RawContent":null,"Title":"update branding to 3.1.10","State":"closed","Body":"adding no merge until we release 3.1.9","Url":"https://github.com/dotnet/coreclr/pull/28107","RelatedDescription":"Closed or merged PR \"update branding to 3.1.10\" (#28107)"},{"Id":"719677899","IsPullRequest":true,"CreatedAt":"2020-10-13T19:34:01","Actor":"Anipik","Number":"28108","RawContent":null,"Title":"update branding to 2.1.24","State":"closed","Body":"adding no merge until we service 2.1.24","Url":"https://github.com/dotnet/coreclr/pull/28108","RelatedDescription":"Closed or merged PR \"update branding to 2.1.24\" (#28108)"},{"Id":"720697081","IsPullRequest":true,"CreatedAt":"2020-10-13T19:08:31","Actor":"sdmaclea","Number":"28109","RawContent":null,"Title":"Merge release 3.1.9","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28109","RelatedDescription":"Closed or merged PR \"Merge release 3.1.9\" (#28109)"},{"Id":"709261083","IsPullRequest":true,"CreatedAt":"2020-09-26T03:01:17","Actor":"sdmaclea","Number":"28105","RawContent":null,"Title":"Backport 5.0 dac/dbi fixes to 3.1-crossdac branch","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28105","RelatedDescription":"Closed or merged PR \"Backport 5.0 dac/dbi fixes to 3.1-crossdac branch\" (#28105)"},{"Id":"707624818","IsPullRequest":true,"CreatedAt":"2020-09-23T19:30:43","Actor":"MattGal","Number":"28103","RawContent":null,"Title":"[DO NOT MERGE] fix a spelling error to validate new Helix API works as expected.","State":"open","Body":"Context: https://github.com/dotnet/core-eng/issues/10854","Url":"https://github.com/dotnet/coreclr/pull/28103","RelatedDescription":"Open PR \"[DO NOT MERGE] fix a spelling error to validate new Helix API works as expected.\" (#28103)"},{"Id":"703944273","IsPullRequest":true,"CreatedAt":"2020-09-22T21:42:42","Actor":"carlossanlop","Number":"28099","RawContent":null,"Title":"[release/3.1] [coreclr] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space","State":"closed","Body":"Backporting PR https://github.com/dotnet/runtime/pull/38742\r\n\r\nThe test goes into corefx: https://github.com/dotnet/corefx/pull/42988\r\n\r\nFixes: https://github.com/dotnet/runtime/issues/42360\r\n\r\n## Customer Impact\r\n\r\nA customer hit this issue in 3.1 when trying to deploy to AzureStorage: https://github.com/dotnet/runtime/issues/42360\r\n\r\nOn Unix, when the disk runs out of space before a `FileStream` is disposed and the buffer is flushed to disk, `Dispose` silently succeeds, causing files to be corrupted and preventing the user from taking corrective action.\r\n\r\nOn Windows, we throw at the expected moment, allowing the user to react appropriately.\r\n\r\nThe suggested fix is to save any error thrown when the `SafeFileHandle.ReleaseHandle` method is called when the handle is disposed, then check that saved error in `FileStream.Dispose`, and throw an exception if there was an error.\r\n\r\nThe customer who reported this issue stated they will not be able to migrate to 5.0 soon.\r\n\r\n## Testing\r\n\r\n* Manually verified using the provided manual test introduced in the corefx change.\r\n* The customer verified the behavior in 5.0 and confirmed that their issue is gone in that version, which justifies the backport (https://github.com/dotnet/runtime/issues/42360#issuecomment-693791617)\r\n* The customer that reported the issue for 3.1 verified this code fix with a private DLL sent to them, and verified the exception is now being thrown as expected (https://github.com/dotnet/runtime/issues/42360#issuecomment-694545520)\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\nThis is a straight port of code already proven in 5.0. The code is simply doing an additional check that will ensure an exception is thrown so the user can be notified of failure.","Url":"https://github.com/dotnet/coreclr/pull/28099","RelatedDescription":"Closed or merged PR \"[release/3.1] [coreclr] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space\" (#28099)"},{"Id":"705930655","IsPullRequest":true,"CreatedAt":"2020-09-21T21:37:35","Actor":"silvioguiso","Number":"28102","RawContent":null,"Title":"Adds Python var and defaults to python","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28102","RelatedDescription":"Closed or merged PR \"Adds Python var and defaults to python\" (#28102)"},{"Id":"705705637","IsPullRequest":true,"CreatedAt":"2020-09-21T15:42:24","Actor":"silvioguiso","Number":"28101","RawContent":null,"Title":"Fixes buildtools source","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28101","RelatedDescription":"Closed or merged PR \"Fixes buildtools source\" (#28101)"},{"Id":"704071478","IsPullRequest":true,"CreatedAt":"2020-09-19T18:56:01","Actor":"Anipik","Number":"28100","RawContent":null,"Title":"[donot review]Temp3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28100","RelatedDescription":"Closed or merged PR \"[donot review]Temp3\" (#28100)"},{"Id":"701485967","IsPullRequest":true,"CreatedAt":"2020-09-19T18:46:57","Actor":"dotnet-maestro[bot]","Number":"28096","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:afd7026d-5288-4298-7366-08d72a4ce44a)\r\n## From https://github.com/dotnet/corefx\r\n- **Subscription**: afd7026d-5288-4298-7366-08d72a4ce44a\r\n- **Build**: 20200910.1\r\n- **Date Produced**: 9/10/2020 6:26 PM\r\n- **Commit**: fe18c4973e11d3302aa446039705948e95e20fe8\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.CoreFx.NETCoreApp**: [from 4.7.0-preview3.19551.4 to 4.7.0-servicing.20460.1][1]\r\n\r\n[1]: https://github.com/dotnet/corefx/compare/0467659...fe18c49\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:afd7026d-5288-4298-7366-08d72a4ce44a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28096","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/corefx\" (#28096)"},{"Id":"684798726","IsPullRequest":true,"CreatedAt":"2020-09-18T22:03:14","Actor":"omajid","Number":"28087","RawContent":null,"Title":"[release/2.1] Add support for building CoreCLR using python3","State":"closed","Body":"This is a combined fix from 3 different PRs and one additional fix for 2.1:\r\n\r\n- https://github.com/dotnet/coreclr/pull/19043\r\n- https://github.com/dotnet/coreclr/pull/19356\r\n- https://github.com/dotnet/coreclr/pull/22145\r\n\r\nThe 2.1-specific fix is that python3 is is only used as a fallback, in case all other python program names dont work.\r\n\r\nAs for the original PRs, they perform these changes:\r\n\r\nbuild.sh and build.cmd contain logic to identify a working version of python to use. System.Private.CoreLib ignores that and directly invokes'python', which may not work, or even execute a different program. Fix that.\r\n\r\nThe windows build scripts try finding python in order of python3, python2 and then python. The unix build scripts dont. They just try python2 variants and then fail. This change makes brings them closer together by letting users build using only python3.\r\n\r\nUse the same logic in CMakeLists.txt that's used in build.sh/build.cmd to lookup python.","Url":"https://github.com/dotnet/coreclr/pull/28087","RelatedDescription":"Closed or merged PR \"[release/2.1] Add support for building CoreCLR using python3\" (#28087)"},{"Id":"703735711","IsPullRequest":true,"CreatedAt":"2020-09-17T16:27:43","Actor":"Anipik","Number":"28098","RawContent":null,"Title":"[Donnot review]Temp","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28098","RelatedDescription":"Closed or merged PR \"[Donnot review]Temp\" (#28098)"},{"Id":"701997949","IsPullRequest":true,"CreatedAt":"2020-09-16T14:38:45","Actor":"dotnet-maestro[bot]","Number":"28097","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b062bd78-6e50-43e6-cd59-08d72a4d12e0)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: b062bd78-6e50-43e6-cd59-08d72a4d12e0\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: [from 3.1.0-preview3.19553.2 to 3.1.9-servicing.20459.3][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/13f35c3...1a04dd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b062bd78-6e50-43e6-cd59-08d72a4d12e0)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28097","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#28097)"},{"Id":"699291936","IsPullRequest":true,"CreatedAt":"2020-09-11T17:46:18","Actor":"ViktorHofer","Number":"28095","RawContent":null,"Title":"Remove machine modification in helix publish","State":"closed","Body":"See https://github.com/dotnet/runtime/commit/abeadc24da4a2aa14f607ea95bb6540101d53e3a","Url":"https://github.com/dotnet/coreclr/pull/28095","RelatedDescription":"Closed or merged PR \"Remove machine modification in helix publish\" (#28095)"},{"Id":"698387607","IsPullRequest":true,"CreatedAt":"2020-09-10T19:16:48","Actor":"sdmaclea","Number":"28094","RawContent":null,"Title":"Release/3.1 crossdac","State":"closed","Body":"This was a simple merge without much issue...  FYI I will merge this and build the 3.1.8 crossdac","Url":"https://github.com/dotnet/coreclr/pull/28094","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac\" (#28094)"},{"Id":"697189129","IsPullRequest":true,"CreatedAt":"2020-09-10T17:10:16","Actor":"dotnet-maestro-bot","Number":"28093","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05604-03, servicing-29220-03, servicing-29220-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28093","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx to rc1-05604-03, servicing-29220-03, servicing-29220-01, respectively (release/2.1)\" (#28093)"},{"Id":"686818271","IsPullRequest":true,"CreatedAt":"2020-09-09T22:13:10","Actor":"ChadNedzlek","Number":"28088","RawContent":null,"Title":"Adding dotnet3.1/dotnet-eng packages sources","State":"closed","Body":"In order to remove dependencies on sleet from release branches,\nit is neccessary to preemptively add these sources so that mehanisms\nwill be able to restore these packages.\n\nSleet must be removed because of it's strong dependency on spcific\nnuget.packaging versions, which are not stable between 3.0 and 3.1\ncausing method load exceptions.\n","Url":"https://github.com/dotnet/coreclr/pull/28088","RelatedDescription":"Closed or merged PR \"Adding dotnet3.1/dotnet-eng packages sources\" (#28088)"},{"Id":"689508704","IsPullRequest":true,"CreatedAt":"2020-09-08T21:32:50","Actor":"davmason","Number":"28090","RawContent":null,"Title":"[release/3.1] Port fix for InlinedCallFrame corruption to 3.1","State":"closed","Body":"**Description**\r\n\r\nThere was an issue discovered in the 5.0 timeframe where we would sometimes pop InlinedCallFrames of still active methods during a catch block. It was fixed in https://github.com/dotnet/runtime/issues/2240, this ports the fix to 3.1.\r\n\r\n**Customer Impact**\r\n\r\nExternal customers reported a crash under the debugger in https://github.com/dotnet/runtime/issues/41125, which was root caused to the same issue as dotnet/runtime#2240. The customer has verified that the fix for https://github.com/dotnet/runtime/issues/2240 fixes the crash they are seeing.\r\n\r\n**Regression?**\r\n\r\nNo\r\n\r\n**Risk (see taxonomy)**\r\n\r\nLow\r\n\r\n**Link the PR to the original issue and/or the PR to master.**\r\n\r\nhttps://github.com/dotnet/runtime/issues/2240\r\n\r\n**Packaging impact? (if a libraries change)**\r\n\r\nNone","Url":"https://github.com/dotnet/coreclr/pull/28090","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix for InlinedCallFrame corruption to 3.1\" (#28090)"},{"Id":"689498487","IsPullRequest":true,"CreatedAt":"2020-09-08T21:32:29","Actor":"sywhang","Number":"28089","RawContent":null,"Title":"Fix a deadlock in EventCounter/EventSource (backport runtime #40259)","State":"closed","Body":"This is a backport of https://github.com/dotnet/runtime/pull/40259 to 3.1\r\n\r\n## Summary\r\nThis fixes a deadlock within EventCounter/EventListener usage. \r\n\r\n## Customer Impact\r\nAny user that defines a polling variant of counter (PollingCounter, IncrementingPollingCounter) with the callback function containing a path that invokes EventSource constructor), or if a user defines an EventListener subscribed to DiagnosticCounter with its callback containing a path that invokes EventSource constructor, the app can run into a deadlock. See https://github.com/dotnet/runtime/pull/40259 for a more detailed description on how it can happen.\r\n\r\nThis was initially reported from the Application Insights SDK team where they defined an EventListener callback that invokes EventSource constructor.\r\n\r\n## Regression\r\nThis code path was introduced between 2.2 to 3.0, but it is not a regression specific to 3.1.\r\n\r\n## Testing \r\nTested locally with a repro app: https://gist.github.com/sywhang/61277e9f40c17e05eaab85676e63e4fc\r\n\r\n## Risk\r\nRelatively low. The fix has been tested in all the counter tests we have in the runtime repo and diagnostics repo's CI - I've also stress-tested the fix. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28089","RelatedDescription":"Closed or merged PR \"Fix a deadlock in EventCounter/EventSource (backport runtime #40259)\" (#28089)"},{"Id":"696124558","IsPullRequest":true,"CreatedAt":"2020-09-08T20:47:51","Actor":"Anipik","Number":"28092","RawContent":null,"Title":"update branding to 2.1.23","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28092","RelatedDescription":"Closed or merged PR \"update branding to 2.1.23\" (#28092)"},{"Id":"696060641","IsPullRequest":true,"CreatedAt":"2020-09-08T19:36:27","Actor":"Anipik","Number":"28091","RawContent":null,"Title":"update branding to 3.1.9","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28091","RelatedDescription":"Closed or merged PR \"update branding to 3.1.9\" (#28091)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"772451130","IsPullRequest":true,"CreatedAt":"2020-12-21T20:45:31","Actor":"dotnet-maestro[bot]","Number":"13659","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201221.2\r\n- **Date Produced**: 12/21/2020 7:42 PM\r\n- **Commit**: ac42bf1c800b896125632aa845f961e391d1a440\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20580.3 to 1.0.0-beta.20621.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7ee8c2b...ac42bf1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13659","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13659)"},{"Id":"770452403","IsPullRequest":true,"CreatedAt":"2020-12-17T23:34:36","Actor":"cristianosuzuki77","Number":"13658","RawContent":null,"Title":"[Loc] Few updates to translations","State":"open","Body":"I'm your MSFT Loc PM. These are few updates to these files over a period of time.\r\nIf this repo is not active for updates, please disregard this PR.","Url":"https://github.com/dotnet/cli/pull/13658","RelatedDescription":"Open PR \"[Loc] Few updates to translations\" (#13658)"},{"Id":"753826880","IsPullRequest":true,"CreatedAt":"2020-12-01T10:10:58","Actor":"dotnet-maestro[bot]","Number":"13657","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201130.3\r\n- **Date Produced**: 11/30/2020 8:28 PM\r\n- **Commit**: 7ee8c2b620e66b3762d7a5a688dee8238770c86a\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20570.10 to 1.0.0-beta.20580.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1ceac96...7ee8c2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13657","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13657)"},{"Id":"747708164","IsPullRequest":true,"CreatedAt":"2020-11-23T10:13:35","Actor":"dotnet-maestro-bot","Number":"13655","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* marcpopMSFT\n* dotnet-bot\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13655","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13655)"},{"Id":"747851463","IsPullRequest":true,"CreatedAt":"2020-11-23T07:38:35","Actor":"dotnet-maestro[bot]","Number":"13656","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201120.10\r\n- **Date Produced**: 11/20/2020 9:10 PM\r\n- **Commit**: 1ceac96c54fcf33eb745649c4e7b8d7507a9b730\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20570.2 to 1.0.0-beta.20570.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6afe5f9...1ceac96\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13656","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13656)"},{"Id":"747638892","IsPullRequest":true,"CreatedAt":"2020-11-20T18:22:00","Actor":"dotnet-maestro[bot]","Number":"13654","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20201120.2\r\n- **Date Produced**: 11/20/2020 12:24 PM\r\n- **Commit**: 6afe5f93699b6512ee07362fa451317a2ce34f7b\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20113.5 to 1.0.0-beta.20570.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/15f00ef...6afe5f9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13654","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13654)"},{"Id":"747498975","IsPullRequest":true,"CreatedAt":"2020-11-20T16:27:13","Actor":"dotnet-maestro[bot]","Number":"13653","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201120.2\r\n- **Date Produced**: 11/20/2020 12:24 PM\r\n- **Commit**: 6afe5f93699b6512ee07362fa451317a2ce34f7b\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20569.8 to 1.0.0-beta.20570.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c8e0cc1...6afe5f9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13653","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13653)"},{"Id":"746991190","IsPullRequest":true,"CreatedAt":"2020-11-20T01:16:07","Actor":"dotnet-maestro[bot]","Number":"13652","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20201119.8\r\n- **Date Produced**: 11/19/2020 9:05 PM\r\n- **Commit**: c8e0cc19e7406ab0e2b2998b9c7a9249ef801b19\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.20509.7 to 1.0.0-beta.20569.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e4584b5...c8e0cc1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13652","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13652)"},{"Id":"742003050","IsPullRequest":true,"CreatedAt":"2020-11-13T06:59:40","Actor":"dotnet-maestro-bot","Number":"13651","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* marcpopMSFT\n* dotnet-maestro[bot]\n* dotnet-bot\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13651","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13651)"},{"Id":"739473594","IsPullRequest":true,"CreatedAt":"2020-11-12T23:23:06","Actor":"marcpopMSFT","Number":"13643","RawContent":null,"Title":"Update branding for 111","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13643","RelatedDescription":"Closed or merged PR \"Update branding for 111\" (#13643)"},{"Id":"740414099","IsPullRequest":true,"CreatedAt":"2020-11-12T07:21:02","Actor":"dotnet-maestro-bot","Number":"13648","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* dotnet-bot\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13648","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13648)"},{"Id":"739473334","IsPullRequest":true,"CreatedAt":"2020-11-11T21:56:51","Actor":"marcpopMSFT","Number":"13642","RawContent":null,"Title":"Update branding for 405","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13642","RelatedDescription":"Closed or merged PR \"Update branding for 405\" (#13642)"},{"Id":"740868726","IsPullRequest":true,"CreatedAt":"2020-11-11T18:00:00","Actor":"dotnet-maestro[bot]","Number":"13649","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20201111.2\r\n- **Date Produced**: 11/11/2020 3:35 PM\r\n- **Commit**: 36ecfd7884f6798ed14d8389a932a0accd548b0d\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: [from 3.1.10-servicing.20514.2 to 3.1.10-servicing.20561.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/608ee2d...36ecfd7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13649","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13649)"},{"Id":"740305188","IsPullRequest":true,"CreatedAt":"2020-11-11T17:58:23","Actor":"dotnet-maestro[bot]","Number":"13644","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201110.13\r\n- **Date Produced**: 11/11/2020 5:32 AM\r\n- **Commit**: 2940a6b1e0d4b6a08a26fe3dcc4f89afcbbf483b\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20522.6 to 3.1.11-servicing.20560.13][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/24d335f...2940a6b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13644","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13644)"},{"Id":"740305189","IsPullRequest":true,"CreatedAt":"2020-11-11T17:58:13","Actor":"dotnet-maestro[bot]","Number":"13645","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201110.13\r\n- **Date Produced**: 11/11/2020 5:32 AM\r\n- **Commit**: 2940a6b1e0d4b6a08a26fe3dcc4f89afcbbf483b\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20522.6 to 3.1.11-servicing.20560.13][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/24d335f...2940a6b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13645","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13645)"},{"Id":"740868729","IsPullRequest":true,"CreatedAt":"2020-11-11T17:22:48","Actor":"dotnet-maestro[bot]","Number":"13650","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0b251068-fbf4-4fe5-8896-08d8446df6cf)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 0b251068-fbf4-4fe5-8896-08d8446df6cf\r\n- **Build**: 20201111.2\r\n- **Date Produced**: 11/11/2020 3:35 PM\r\n- **Commit**: 36ecfd7884f6798ed14d8389a932a0accd548b0d\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: [from 3.1.10-servicing.20514.2 to 3.1.10-servicing.20561.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/608ee2d...36ecfd7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:0b251068-fbf4-4fe5-8896-08d8446df6cf)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13650","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/templating\" (#13650)"},{"Id":"740332509","IsPullRequest":true,"CreatedAt":"2020-11-11T05:31:07","Actor":"dotnet-maestro[bot]","Number":"13647","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20201110.1\r\n- **Date Produced**: 11/10/2020 11:16 PM\r\n- **Commit**: 7fe019d819e80e7491ac97e5145c23de56e6a2f6\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20519.3 to 3.1.11-servicing.20560.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.11][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.11][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/1721e39...7fe019d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13647","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13647)"},{"Id":"740332507","IsPullRequest":true,"CreatedAt":"2020-11-11T02:49:39","Actor":"dotnet-maestro[bot]","Number":"13646","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201110.1\r\n- **Date Produced**: 11/10/2020 11:16 PM\r\n- **Commit**: 7fe019d819e80e7491ac97e5145c23de56e6a2f6\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20519.3 to 3.1.11-servicing.20560.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.11][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.11][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/1721e39...7fe019d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13646","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13646)"},{"Id":"727683291","IsPullRequest":true,"CreatedAt":"2020-10-27T17:31:45","Actor":"joeloff","Number":"13637","RawContent":null,"Title":"Backport upgrade behavior to 2.1.6xx","State":"closed","Body":"Backport upgrade behavior for SDK bundle to 2.1.6xx","Url":"https://github.com/dotnet/cli/pull/13637","RelatedDescription":"Closed or merged PR \"Backport upgrade behavior to 2.1.6xx\" (#13637)"},{"Id":"726897921","IsPullRequest":true,"CreatedAt":"2020-10-27T17:31:27","Actor":"joeloff","Number":"13636","RawContent":null,"Title":"Backport upgrade logic for 2.1.5xx","State":"closed","Body":"Backport upgrade behavior (see https://github.com/dotnet/sdk/issues/13343)\r\n\r\nThis enables support for upgrades in 2.1.5xx. Upgrades are supported for the same feature band, but architectures remain SxS. For example, if you install 2.1.521 (latest SDK is 2.1.520), it will install and then remove all 2.1.5xx SDKs","Url":"https://github.com/dotnet/cli/pull/13636","RelatedDescription":"Closed or merged PR \"Backport upgrade logic for 2.1.5xx\" (#13636)"},{"Id":"727691380","IsPullRequest":true,"CreatedAt":"2020-10-23T22:33:02","Actor":"joeloff","Number":"13638","RawContent":null,"Title":"Backport upgrade behavior to 2.1.8xx","State":"closed","Body":"Backport upgrade behavior to 2.1.8xx","Url":"https://github.com/dotnet/cli/pull/13638","RelatedDescription":"Closed or merged PR \"Backport upgrade behavior to 2.1.8xx\" (#13638)"},{"Id":"727823478","IsPullRequest":true,"CreatedAt":"2020-10-23T09:34:19","Actor":"dotnet-maestro-bot","Number":"13641","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* dotnet-bot\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13641","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13641)"},{"Id":"727811523","IsPullRequest":true,"CreatedAt":"2020-10-23T01:24:24","Actor":"dotnet-maestro[bot]","Number":"13640","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201022.6\r\n- **Date Produced**: 10/23/2020 12:29 AM\r\n- **Commit**: 24d335f5caff84eff87b58f55d1f5c11a0efb721\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20520.4 to 3.1.10-servicing.20522.6][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/e318707...24d335f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13640","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13640)"},{"Id":"727811522","IsPullRequest":true,"CreatedAt":"2020-10-23T01:24:23","Actor":"dotnet-maestro[bot]","Number":"13639","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201022.6\r\n- **Date Produced**: 10/23/2020 12:29 AM\r\n- **Commit**: 24d335f5caff84eff87b58f55d1f5c11a0efb721\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20520.4 to 3.1.10-servicing.20522.6][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/e318707...24d335f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13639","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13639)"},{"Id":"726090562","IsPullRequest":true,"CreatedAt":"2020-10-22T08:49:53","Actor":"dotnet-maestro-bot","Number":"13635","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* dotnet-bot\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13635","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13635)"},{"Id":"726073830","IsPullRequest":true,"CreatedAt":"2020-10-21T02:58:59","Actor":"dotnet-maestro[bot]","Number":"13633","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c55a2056-fc07-4dda-df7f-08d83e1bc58b\r\n- **Build**: 20201020.4\r\n- **Date Produced**: 10/21/2020 1:55 AM\r\n- **Commit**: e3187077455f953200e3c930430808a30f48b82e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20517.3 to 3.1.10-servicing.20520.4][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/ac92144...e318707\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c55a2056-fc07-4dda-df7f-08d83e1bc58b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13633","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/aspnetcore\" (#13633)"},{"Id":"726073840","IsPullRequest":true,"CreatedAt":"2020-10-21T02:58:57","Actor":"dotnet-maestro[bot]","Number":"13634","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20201020.4\r\n- **Date Produced**: 10/21/2020 1:55 AM\r\n- **Commit**: e3187077455f953200e3c930430808a30f48b82e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 3.1.10-servicing.20517.3 to 3.1.10-servicing.20520.4][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/ac92144...e318707\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13634","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13634)"},{"Id":"725060785","IsPullRequest":true,"CreatedAt":"2020-10-20T07:35:29","Actor":"dotnet-maestro-bot","Number":"13632","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.4xx. I'm a robot and am configured to help you automatically keep release/3.1.4xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* dotnet-bot\n* marcpopMSFT\n* ChadNedzlek\n* joeloff\n* wtgodbe\n* dsplaisted\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.4xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.4xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.4xx release/3.1.4xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.4xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.4xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13632","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.4xx'\" (#13632)"},{"Id":"725039962","IsPullRequest":true,"CreatedAt":"2020-10-20T00:48:33","Actor":"dotnet-maestro[bot]","Number":"13630","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: c87eb107-fb55-4c5c-35b6-08d83e1a9377\r\n- **Build**: 20201019.3\r\n- **Date Produced**: 10/19/2020 8:25 PM\r\n- **Commit**: 1721e3943939f9af7d5effa702bb7e9b99e254f1\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20516.1 to 3.1.10-servicing.20519.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/df38dc6...1721e39\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c87eb107-fb55-4c5c-35b6-08d83e1a9377)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13630","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/core-setup\" (#13630)"},{"Id":"725040088","IsPullRequest":true,"CreatedAt":"2020-10-19T23:47:54","Actor":"dotnet-maestro[bot]","Number":"13631","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20201019.3\r\n- **Date Produced**: 10/19/2020 8:25 PM\r\n- **Commit**: 1721e3943939f9af7d5effa702bb7e9b99e254f1\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.10-servicing.20516.1 to 3.1.10-servicing.20519.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.10 to 3.1.10][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 3.1.10 to 3.1.10][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/df38dc6...1721e39\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13631","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13631)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"773128444","IsPullRequest":false,"CreatedAt":"2020-12-22T17:42:11","Actor":"rathnagiri","Number":"1786","RawContent":null,"Title":"Security Vulnerability due to System.Text.RegularExpressions","State":"open","Body":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n","Url":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Open issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786)"},{"Id":"761600986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:17:30","Actor":"tmds","Number":"1785","RawContent":null,"Title":"mono and .NET5+","State":"closed","Body":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?","Url":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785)"},{"Id":"757516698","IsPullRequest":false,"CreatedAt":"2020-12-05T02:37:36","Actor":"Nilotaviano","Number":"1784","RawContent":null,"Title":"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()","State":"open","Body":"The code below works perfectly on Windows, but doesn't work when deployed on Ubuntu 16.10. The `configuration` is initially loaded, but is never reloaded afterwards when `appsettings.json` is modified on Ubuntu (it works on Windows and I get to see the `App Settings reloaded` log message).\r\n\r\n```\r\nprivate static AppSettings GetAppSettings()\r\n{\r\n    var configuration = new ConfigurationBuilder()\r\n        .AddJsonFile(Path.Combine(System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName, \"..\", \"appsettings.json\"), optional: false, reloadOnChange: true)\r\n        .Build();\r\n\r\n    ChangeToken.OnChange(() => configuration.GetReloadToken(), () =>\r\n    {\r\n        Logger.LogMessage(\"App Settings reloaded\");\r\n    });\r\n\r\n    return appSettings;\r\n}\r\n```\r\n\r\n.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;ubuntu.16.10-x64</RuntimeIdentifiers>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNet.SignalR.Client\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"RestSharp\" Version=\"106.11.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nPublish profile:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\nhttps://go.microsoft.com/fwlink/?LinkID=208121. \r\n-->\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <Configuration>Release</Configuration>\r\n    <Platform>Any CPU</Platform>\r\n    <PublishDir>bin\\Release\\netcoreapp3.1\\publish\\</PublishDir>\r\n    <PublishProtocol>FileSystem</PublishProtocol>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifier>ubuntu.16.10-x64</RuntimeIdentifier>\r\n    <SelfContained>true</SelfContained>\r\n    <PublishSingleFile>True</PublishSingleFile>\r\n    <PublishTrimmed>True</PublishTrimmed>\r\n  </PropertyGroup>\r\n</Project>\r\n```","Url":"https://github.com/dotnet/standard/issues/1784","RelatedDescription":"Open issue \"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()\" (#1784)"},{"Id":"751999481","IsPullRequest":false,"CreatedAt":"2020-11-27T05:51:08","Actor":"Meenakshise","Number":"1783","RawContent":null,"Title":"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, ","State":"open","Body":"[tuple-not-loading-log.txt](https://github.com/dotnet/standard/files/5606091/tuple-not-loading-log.txt)\r\n\r\nI have  web project which is targeted to 4.6.2 .net framework. This project is calling a framework library which is targeted to the same .net framework 4.6.2. But in the framework library project it is referencing the system.valuetuple of 4.3.0 via the nuget package. \r\n  <package id=\"System.ValueTuple\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n\r\nThis valuetuple 4.3.0 targets .net standard 1.0 and .net framework 4.5. But our UI project is targeting 4.6.2. And we are getting this valuetuple not able to load. Could you please tell me why so ? \r\n\r\nSo if i am referencing a library that targets .net standard and .net framework of which the referencing project doesnt target to . How does the dll assemblies work here ? Really confused. Please help us\r\n\r\nBasically I am getting this error. The detailed log is attached in tuple-not-loading file. \r\n_message: \"ReflectionTypeLoadException: Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\n VS 2017 IDE is used to build the project ","Url":"https://github.com/dotnet/standard/issues/1783","RelatedDescription":"Open issue \"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, \" (#1783)"},{"Id":"748223490","IsPullRequest":false,"CreatedAt":"2020-11-22T11:34:20","Actor":"kyurkchyan","Number":"1782","RawContent":null,"Title":"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP","State":"open","Body":"# Summary\r\nI was trying to access Embedded resources on UWP. Something like this\r\n\r\n```C#\r\nmanifestResourceInfo = typeof(App).Assembly.GetManifestResourceInfo(\"UwpEmbeddedResourceBug.appsettings.json\");\r\n```\r\nHowever, this doesn't work on UWP, even though it works like a charm on iOS for instance. \r\nFurther, when you try to use this in UWP debug mode, it will return non-null `manifestResourceInfo`, however internally the `FileName` property will be null. But if you try to use the same on Release build, instead you will get an exception\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Func`1.BeginInvoke(AsyncCallback, Object) + 0x1f\r\n   at SharedLibrary!<BaseAddress>+0x9f17d7\r\n   at UwpEmbeddedResourceBug.MainPage..ctor() + 0x3e\r\n```\r\n## Sample project\r\n[UwpEmbeddedResourceBug.zip](https://github.com/dotnet/standard/files/5579379/UwpEmbeddedResourceBug.zip)\r\n\r\n## Version info\r\n``` \r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.1\r\nVisualStudio.16.Release/16.8.1+30711.63\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA497\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.550.19892\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.550.19892\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.550.19892\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.550.19892\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJetBrains ReSharper 2020.2.4   Build 202.0.20200925.65451\r\nJetBrains ReSharper package for Microsoft Visual Studio. For more information about ReSharper, visit http://www.jetbrains.com/resharper. Copyright © 2020 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Foo   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.8.000.255 (d16-8@d002176)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.4.1.3 (e30c41de3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```","Url":"https://github.com/dotnet/standard/issues/1782","RelatedDescription":"Open issue \"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP\" (#1782)"},{"Id":"741918893","IsPullRequest":false,"CreatedAt":"2020-11-16T21:03:55","Actor":"viralmodi","Number":"1780","RawContent":null,"Title":"How to build .NET Standard based library for ARM architecture","State":"closed","Body":"We currently own a .NET Standard based library. We would like to make it work on ARM platform as well. Is there some documentation which can help understand how to go about achieving that?\r\nI searched up on MSFT docs and found a few pages but it is not clear to me all the steps needed to achieve the above based on those docs. Any help is appreciated. I would like to know ways to compile cross platform, using IDEs like Visual Studio/Rider, code/metadata modifications required to project (.csproj) files and anywhere else to achieve this?","Url":"https://github.com/dotnet/standard/issues/1780","RelatedDescription":"Closed issue \"How to build .NET Standard based library for ARM architecture\" (#1780)"},{"Id":"743421464","IsPullRequest":false,"CreatedAt":"2020-11-16T02:36:27","Actor":"ishepherd","Number":"1781","RawContent":null,"Title":"Update docs to reflect the status of .NET Standard in 2020","State":"open","Body":"My understanding is, .NET Standard isn't the plan for standard .NET anymore. [The plan is now .NET 5.](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/)\r\n\r\nThat isn't at all clear from the docs here which seem to be frozen in time. Suggest you make some slight edits to [faq.md](https://github.com/dotnet/standard/blob/master/docs/faq.md) and [README.md](https://github.com/dotnet/standard/blob/master/README.md) to reflect the new status of .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1781","RelatedDescription":"Open issue \"Update docs to reflect the status of .NET Standard in 2020\" (#1781)"},{"Id":"741314211","IsPullRequest":false,"CreatedAt":"2020-11-12T06:18:45","Actor":"amitagrawalhyd","Number":"1779","RawContent":null,"Title":"Support with Universal Windows Platform","State":"open","Body":".Net Standard 2.1 is not supporting Universal Windows Platform and when we see the following doc \"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\" it is showing TBD, need your help on finalizing few things for our project, by when we can see support with UWP and which version of UWP will be supported. Early response will be helpful.","Url":"https://github.com/dotnet/standard/issues/1779","RelatedDescription":"Open issue \"Support with Universal Windows Platform\" (#1779)"},{"Id":"736344890","IsPullRequest":false,"CreatedAt":"2020-11-04T18:49:53","Actor":"vsfeedback","Number":"1778","RawContent":null,"Title":"System.Drawing.Printing.PrinterSettings slow","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemDrawingPrintingPrinterSettings-/890524)._\n\n---\nHello\n\nI'm debugging a problem with the printer settings. Some calls are significant slower if the default printer is a network printer, even if I explicit set a local printer name.\n\nAfter studying referencesource I think I found the culprit.\n\nI call:\n\nvar printerSettings = new System.Drawing.Printing.PrinterSettings();\n\nprinterSettings.PrinterName = &quot;LOCALPRINTER&quot;;\n\n// the next call is slow if the OS default printer is a network printer\nvar res = printerSettings.DefaultPageSettings.PrinterResolution\n\nInternally FastDeviceCapabilities is called.\n\nFastDeviceCapabilities calls GetOutputPort. But GetOutput port return the port of the default printer and not the port of the given printer!\n\nIn addition, DeviceCapabilities is then called with a wrong combination of printer name and port, don't know if this could lead to additional problems.\n\nResolution: GetOutputPort should return the port of the given printer and not accessing the default printer at all.\n\nBest Regards,\nRaphael\n\n---\n### Original Comments\n\n#### Raphael Affolter on 1/20/2020, 04:03 AM: \n\n<p>I forgot to mention: .Net Framework 4.6.1</p>\n\n#### Feedback Bot on 1/20/2020, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Raphael Affolter on 2/7/2020, 08:39 AM: \n\n<p>Because we print a lot, we really suffer from this performance penalty.</p><p>Also reading PaperSizes and PaperSources from the printer settings is slow caused by the same problem.</p><p>Could you please inform me about a possible fix?</p><p>Best Regards,</p><p>Raphael</p>\n\n#### Raphael Affolter on 2/7/2020, 10:33 AM: \n\n<p>In my opinion the fix is easy: replace GetOutputPort by OutputPort in the call to </p><p>FastDeviceCapabilities.</p><p>Done.</p>\n\n#### Feedback Bot on 2/27/2020, 05:40 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Dada Huo [MSFT] on 10/20/2020, 01:57 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Raphael Affolter on 10/20/2020, 02:28 AM: \n\n<p>Thanks for answering.</p><p>The issue is not about Visual Studio, the problem is in the .Net Framework (at least 4.6.1).</p><p>By studying the source code on referencesource.microsoft.com I spotted calls to the default printer, even if I print on another printer. If the default printer is a network printer, this slows down the printing process significantly.</p><p>Please have a look if you can fix this in the .Net Framework(s).</p><p>PrinterResolution, PaperSizes and PaperSources of System.Drawing.Printing.PrinterSettings are affected.</p><p>I also mentioned a fix: replace GetOutputPort by OutputPort in the call to FastDeviceCapabilities...done.</p><p>I you need a repro project, I can provide one.</p>\n\n\n---\n### Original Solutions\n\n#### Raphael Affolter solved on 3/19/2020, 07:18 AM, 0 votes: \n\n<p>I would be helpful if at least somebody reacts on this issue. I even told you how to fix the problem...</p>\n","Url":"https://github.com/dotnet/standard/issues/1778","RelatedDescription":"Closed issue \"System.Drawing.Printing.PrinterSettings slow\" (#1778)"},{"Id":"727588709","IsPullRequest":false,"CreatedAt":"2020-10-22T17:34:59","Actor":"Joe-Sewell-PreEmptive","Number":"1777","RawContent":null,"Title":"Questions about tagging within this repository / future versions","State":"open","Body":"I was looking through this repository to determine if .NET Standard 2.1 libraries support default interface methods - it looks like they do, given the presence of `System.Runtime.CompilerServices.RuntimeFeature.DefaultImplementationsOfInterfaces`, as well as my own experimenting in VS 2019. It seems I was mistaken when thinking that this was not the case, so I'm glad this repository is easily accessible to determine this.\r\n\r\nBut while doing this, I found it difficult to determine what commits were included in this particular .NET Standard version. I see that there's a tag `v2.1.0-prerelease.19126.1`, as well as branches `release/2.0.0`, `release/3.0`, and `release/3.0-preview9`. One of the machines I tested VS 2019 on had a `netstandard.dll` assembly, itself targeting .NETStandard v2.1.0, with AssemblyInformationalVersion `1.1.0+a5b5f2e1e369972c8ff1e2183979fab6099f52ef`; this commit is part of the `release/3.0` branch. However, another machine had a same-named assembly, targeting .NETCoreApp v3.0 and AssemblyInformationalVersion `3.0.0+4ac4c0367003fe3973a3648eb0715ddb0e3bbcea`, and I don't see that commit hash in this repository.\r\n\r\nAdditionally, [this blog post](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/) states that 2.1 will be the last version, but there is another prerelease tag `v2.2.0-prerelease.19564.1` and [on GitHub](https://github.com/dotnet/standard/releases/tag/v2.2.0-prerelease.19564.1) it's labelled .NET 5.0 Preview 2.\r\n\r\nSo I have a few questions for understanding this repository:\r\n\r\n1. Since .NET Standard 2.1 is released, are there plans to continue development in this repository for e.g. the shared BCL going forward with .NET 5+?\r\n2. Are there multiple kinds of `netstandard.dll` for a single .NET Standard version? E.g. are there separate versions for .NET Framework to reference and for .NET Core / .NET 5+ to reference?\r\n3. Do the tags / branch names in this repository correspond to a .NET Standard version or something else?\r\n4. It looks like there are patch releases; are there patch versions of a single .NET Standard version?\r\n5. Are there other repositories which are being used to create `netstandard.dll`?\r\n6. Is there a way to determine, from the repository, which commit is the one used for a given release?\r\n\r\nThank you for your consideration.","Url":"https://github.com/dotnet/standard/issues/1777","RelatedDescription":"Open issue \"Questions about tagging within this repository / future versions\" (#1777)"},{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-16T08:15:08","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"closed","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Closed issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2020-09-20T19:05:41","Actor":"Korporal","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"open","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Open issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"bvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2020-09-02T08:39:21","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"open","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Open issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-08-23T14:50:16","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200819.21\r\n- **Date Produced**: 8/19/2020 11:31 PM\r\n- **Commit**: 56a95cc477558c1ccdf16d7abe962849ea970ba4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"},{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"wrkettlitz","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"wrkettlitz","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"767907840","IsPullRequest":true,"CreatedAt":"2020-12-15T17:46:34","Actor":"omajid","Number":"43009","RawContent":null,"Title":"Add RHEL 9 RID","State":"open","Body":"Trying to build .NET Core 3.1 (via source-build) on a recent Fedora version with /etc/os-release patched to report \"rhel.9\" results in a build failure.\r\n\r\nThis should, hopefully, fix that error.\r\n\r\nThis is a partial backport of https://github.com/dotnet/runtime/pull/34088.","Url":"https://github.com/dotnet/corefx/pull/43009","RelatedDescription":"Open PR \"Add RHEL 9 RID\" (#43009)"},{"Id":"758894194","IsPullRequest":true,"CreatedAt":"2020-12-07T22:18:56","Actor":"dotnet-maestro-bot","Number":"43008","RawContent":null,"Title":"Update BuildTools to rc1-05907-02 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/43008","RelatedDescription":"Open PR \"Update BuildTools to rc1-05907-02 (release/2.1)\" (#43008)"},{"Id":"742818370","IsPullRequest":true,"CreatedAt":"2020-11-16T19:04:08","Actor":"pgovind","Number":"43007","RawContent":null,"Title":"Move some unit tests to outerloop to get clean CI","State":"closed","Body":"Just moving some tests to outerloop in the hope that it leads to clean CI and fixes https://github.com/dotnet/runtime/issues/41286. Relevant parts copied from https://github.com/dotnet/runtime/pull/2194","Url":"https://github.com/dotnet/corefx/pull/43007","RelatedDescription":"Closed or merged PR \"Move some unit tests to outerloop to get clean CI\" (#43007)"},{"Id":"731587998","IsPullRequest":true,"CreatedAt":"2020-11-13T23:36:20","Actor":"BrennanConroy","Number":"43002","RawContent":null,"Title":"[Backport] Throw when reader is completed with an exception","State":"closed","Body":"Backport of https://github.com/dotnet/runtime/pull/43776\r\n\r\n## Customer Impact\r\n\r\nWhile fixing a usability concern with pipes we introduced this regression. Customers expecting an exception from a completed reader will instead get a completion without an exception.\r\n\r\n## Testing\r\n\r\nWe were missing a test case that was found by a customers' test suite. Test has been added and bug fixed with this change.\r\n\r\n## Regression?\r\n\r\nYes, previous patch we introduced this regression during another fix.\r\n\r\n## Risk\r\n\r\nLow, fix is very small and easy to understand","Url":"https://github.com/dotnet/corefx/pull/43002","RelatedDescription":"Closed or merged PR \"[Backport] Throw when reader is completed with an exception\" (#43002)"},{"Id":"739405467","IsPullRequest":true,"CreatedAt":"2020-11-12T23:55:16","Actor":"joperezr","Number":"43004","RawContent":null,"Title":"Fixing HashCode Seed Initialization on BCL package","State":"closed","Body":"fixes https://github.com/dotnet/runtime/issues/42808\r\n\r\nFixing seed initialization on Microsoft.Bcl.Hashcode to match netcoreapp behavior. Also provided a quirk in case people consuming the BCL package want to fall back to the non-randomized version.\r\n\r\ncc: @stephentoub @bartonjs @ericstj @fabricefou @Anipik \r\n\r\n## Customer Impact\r\n\r\nNetStandard implementation of GetRandomBytes has a bug which causes it to always return 0. This is used by HashCode when generating its internal seed used for generating hashes, which causes the user to get non-random hashes when consuming the Microsoft.Bcl.HashCode package in netstandard.\r\n\r\n## Testing\r\n\r\nWe added test coverage as part of this PR to ensure that a) Customers behavior will now be the same in netcoreapp and netfx and b) we added an AppContext switch so that folks can fall back to wrong behavior if they depended on non-randomized hashes.\r\n\r\n## Regression?\r\n\r\nNo. This package has had the incorrect behavior since we initially shipped it.\r\n\r\n## Risk\r\n\r\nLow. It may break customers that depended on the wrong behavior, but for such cases we provided an AppContext switch that they can decide to turn on if necessary.","Url":"https://github.com/dotnet/corefx/pull/43004","RelatedDescription":"Closed or merged PR \"Fixing HashCode Seed Initialization on BCL package\" (#43004)"},{"Id":"740305600","IsPullRequest":true,"CreatedAt":"2020-11-11T17:58:54","Actor":"dotnet-maestro[bot]","Number":"43006","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20201110.3\r\n- **Date Produced**: 11/10/2020 10:22 PM\r\n- **Commit**: 8c45b64747f07d9f554d0be4e50e94328ff4db52\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.10-servicing.20516.1 to 3.1.11-servicing.20560.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.10-servicing.20516.1 to 3.1.11-servicing.20560.3][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.10-servicing.20516.1 to 3.1.11-servicing.20560.3][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/d989459...8c45b64\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43006","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#43006)"},{"Id":"740109171","IsPullRequest":true,"CreatedAt":"2020-11-10T21:41:42","Actor":"aik-jahoda","Number":"43005","RawContent":null,"Title":"update branding to 3.1.11","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43005","RelatedDescription":"Closed or merged PR \"update branding to 3.1.11\" (#43005)"},{"Id":"735413420","IsPullRequest":true,"CreatedAt":"2020-11-03T18:41:39","Actor":"davidfowl","Number":"43003","RawContent":null,"Title":"Open pdb files with FileShare.Read and FileShare.Delete","State":"closed","Body":"#### Description\r\nWe've been getting reports of locked pdb files (aspnet/AspNetCore#3269) when deploying ASP.NET Core applications (but not locked dlls) and we assumed that it was application insights locking the pdb. Turns out, the runtime opens pdb files (once somebody accesses something like Exception.StackTrace) it can't be renamed/deleted until the process ends. This interrupts the deployment process on azure app service. It turns out we need to pass the right FileShare permissions when opening the file pdb file.\r\n\t\t\r\n#### Customer Impact\r\n\r\nCustomers that experience any exception today cannot easily re-deploy their site without going to the azure portal and restarting the site. The same goes for a server on premises (the admin needs to go restart the IIS application pool to upgrade the site).\r\n\r\n#### Regression?\r\nNo.\r\n\r\n#### Risk\r\nVery small, it's a very small tweak to the code that opens the file.\r\n\r\nPort of https://github.com/dotnet/corefx/pull/38291 to .NET 2.1. This was a customer request routed via CSS. Noted here https://github.com/dotnet/runtime/issues/43443\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/43003","RelatedDescription":"Closed or merged PR \"Open pdb files with FileShare.Read and FileShare.Delete\" (#43003)"},{"Id":"723507131","IsPullRequest":true,"CreatedAt":"2020-10-19T15:08:19","Actor":"dotnet-maestro[bot]","Number":"43001","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20201016.1\r\n- **Date Produced**: 10/16/2020 7:32 PM\r\n- **Commit**: d989459717cbce34262060c4b8b949185033e379\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20472.1 to 3.1.10-servicing.20516.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20472.1 to 3.1.10-servicing.20516.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20472.1 to 3.1.10-servicing.20516.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/8775efa...d989459\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43001","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#43001)"},{"Id":"722653114","IsPullRequest":true,"CreatedAt":"2020-10-15T21:22:30","Actor":"tarekgh","Number":"43000","RawContent":null,"Title":"[Test Only] Port failing test fix from runtime repo to 3.1 Release","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/43372","Url":"https://github.com/dotnet/corefx/pull/43000","RelatedDescription":"Closed or merged PR \"[Test Only] Port failing test fix from runtime repo to 3.1 Release\" (#43000)"},{"Id":"720798949","IsPullRequest":true,"CreatedAt":"2020-10-13T21:48:14","Actor":"Anipik","Number":"42998","RawContent":null,"Title":"Disable SetDateTimeMax test on Linux","State":"closed","Body":"The test failed on 3.1 branch https://github.com/dotnet/corefx/pull/42996\r\nRelated issue https://github.com/dotnet/runtime/issues/43166","Url":"https://github.com/dotnet/corefx/pull/42998","RelatedDescription":"Closed or merged PR \"Disable SetDateTimeMax test on Linux\" (#42998)"},{"Id":"720820938","IsPullRequest":true,"CreatedAt":"2020-10-13T21:45:04","Actor":"dotnet-maestro-bot","Number":"42999","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42999","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-05604-03, servicing-29321-03, servicing-29321-01, servicing-29322-01, respectively (release/2.1)\" (#42999)"},{"Id":"707735407","IsPullRequest":true,"CreatedAt":"2020-10-13T21:44:46","Actor":"ericstj","Number":"42994","RawContent":null,"Title":"[release/3.1] Ensure Image.Save can handle non readable / seekable Streams","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/36805 to release/3.1.\r\n\r\nOriginal issue: https://github.com/dotnet/runtime/issues/33522\r\n\r\n## Summary\r\n\r\nWhen calling `Image.Save` and passing in a stream to write the image to we started throwing `NotSupportedException` if the stream could not be read.  This happened accidentally as part of a performance fix in 3.x.  That fix tried to ensure a seekable stream and would copy the backing stream contents when doing so.  This was unnecessary work (and an unnecessary copy) since saving the image only requires writing and not reading nor seeking.\r\n\r\n## Customer Impact\r\n\r\nCustomer encounters `NotSupportedException` when trying to save an image when they did not before.  This is blocking service update to 3.1 for the customer as well as preventing their upstack consumers of this service from updating.\r\nWorkaround would involve saving to a `MemoryStream` then copying to the final stream, which is undesirable.  This significantly increases CPU and memory usage to a in a commonly used component low in the stack.\r\n\r\n## Regression?\r\n\r\nYes, from 2.1: https://github.com/dotnet/corefx/commit/dee434428ee392302ff2050bbee304c9fce68b2f\r\n\r\n## Testing\r\n\r\nUnit tests added to cover this scenario.  Partner has been using 5.0 fix.\r\n\r\n## Risk\r\n\r\nLow.  This is undoing a regression and fix has been in place in 5.0 for months. ","Url":"https://github.com/dotnet/corefx/pull/42994","RelatedDescription":"Closed or merged PR \"[release/3.1] Ensure Image.Save can handle non readable / seekable Streams\" (#42994)"},{"Id":"719663177","IsPullRequest":true,"CreatedAt":"2020-10-13T20:25:18","Actor":"Anipik","Number":"42996","RawContent":null,"Title":"update branding to 3.1.10","State":"closed","Body":"Adding a no merge label until we ship the 3.1.9","Url":"https://github.com/dotnet/corefx/pull/42996","RelatedDescription":"Closed or merged PR \"update branding to 3.1.10\" (#42996)"},{"Id":"719687373","IsPullRequest":true,"CreatedAt":"2020-10-13T19:34:06","Actor":"Anipik","Number":"42997","RawContent":null,"Title":"update branding to 2.1.24","State":"closed","Body":"We shipped the same assembly version for 4.5.3 & 4.5.2, we can only have one in the  json file, i decided to keep 4.5.3","Url":"https://github.com/dotnet/corefx/pull/42997","RelatedDescription":"Closed or merged PR \"update branding to 2.1.24\" (#42997)"},{"Id":"707419747","IsPullRequest":true,"CreatedAt":"2020-10-08T20:39:16","Actor":"CarnaViire","Number":"42993","RawContent":null,"Title":"[release/2.1] Backport missing SslStream API to 2.1","State":"closed","Body":"Add missing ReadAsync and WriteAsync API to SslStream. This is a backport of #29658 to 2.1 (only SslStream part)\r\n\r\nFix dotnet/runtime#38185\r\n\r\n## Summary\r\nFor non-sealed types, not specifying an override in a ref can lead to a derived type skipping the method in the hierarchy when calling to base.Method(). This was fixed for 3.1 in #29658 but not ported to 2.1. Implementation of ReadAsync and WriteAsync exists in SslStream, only explicit API is missing.\r\n\r\n## Customer Impact\r\nSqlClient team reported Stack Overflow exception when trying to use a class derived from SslStream in a mix of dotnetcore 2.1 and 3.x dotnet/runtime#38185 The team is working on the SqlClient driver and this is a potential issue for the end-users.\r\n\r\n## Regression?\r\nNo\r\n\r\n## Testing\r\nVerified by SqlClient team, see comment below.\r\n\r\n## Risk\r\nLow. Only explicitly specifying the override in the ref, the implementation already exists.","Url":"https://github.com/dotnet/corefx/pull/42993","RelatedDescription":"Closed or merged PR \"[release/2.1] Backport missing SslStream API to 2.1\" (#42993)"},{"Id":"712097410","IsPullRequest":true,"CreatedAt":"2020-09-30T21:24:13","Actor":"CarnaViire","Number":"42995","RawContent":null,"Title":"[release/2.1] Update macOS build instructions","State":"closed","Body":"Updated instructions on how to build 2.1 on macOS.\r\n\r\n## Summary\r\nI've spent quite a lot of time trying to build 2.1 on various platforms and every one of them produced different build errors. I was finally able to build it on macOS by installing an older version on Xcode. I would like this knowledge to be available to any dev who would need to build 2.1 while it is still supported.\r\n\r\n## Customer Impact\r\nn/a\r\n\r\n## Regression?\r\nn/a\r\n\r\n## Testing\r\nn/a\r\n\r\n## Risk\r\nLow. This is docs-only change.\r\n","Url":"https://github.com/dotnet/corefx/pull/42995","RelatedDescription":"Closed or merged PR \"[release/2.1] Update macOS build instructions\" (#42995)"},{"Id":"706763461","IsPullRequest":true,"CreatedAt":"2020-09-23T02:30:05","Actor":"dotnet-maestro[bot]","Number":"42992","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200922.1\r\n- **Date Produced**: 9/22/2020 11:25 PM\r\n- **Commit**: 8775efa17eaf06dc8b6ea9dd3917871fe2d7ff8e\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20469.1 to 3.1.9-servicing.20472.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/3fbe134...8775efa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42992","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42992)"},{"Id":"703944212","IsPullRequest":true,"CreatedAt":"2020-09-22T21:43:51","Actor":"carlossanlop","Number":"42988","RawContent":null,"Title":"[release/3.1] [corefx] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space","State":"closed","Body":"Backporting PR https://github.com/dotnet/runtime/pull/38742\r\n\r\nThe main fix goes into coreclr: https://github.com/dotnet/coreclr/pull/28099\r\n\r\nFixes: https://github.com/dotnet/runtime/issues/42360\r\n\r\nThis fix only introduced a **manual** test, which won't be executed with the CI, and only runs if the user manually sets an environment variable. \r\n\r\n## Customer Impact\r\n\r\nA customer hit this issue in 3.1 when trying to deploy to AzureStorage: https://github.com/dotnet/runtime/issues/42360\r\n\r\nOn Unix, when the disk runs out of space before a `FileStream` is disposed and the buffer is flushed to disk, `Dispose` silently succeeds, causing files to be corrupted and preventing the user from taking corrective action.\r\n\r\nOn Windows, we throw at the expected moment, allowing the user to react appropriately.\r\n\r\nThe suggested fix is to save any error thrown when the `SafeFileHandle.ReleaseHandle` method is called when the handle is disposed, then check that saved error in `FileStream.Dispose`, and throw an exception if there was an error.\r\n\r\n## Testing\r\n\r\nManually verified using the provided manual test introduced in this change.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\nThe code is doing an additional check that will ensure an exception is thrown so the user can be notified of failure. The modified code was identical to the code in 5.0.\r\n\r\nThe customer that reported the issue for 3.1 verified this code fix with a private DLL sent to them, and verified the exception is now being thrown as expected:\r\n\r\nhttps://github.com/dotnet/runtime/issues/42360#issuecomment-694545520\r\n\r\nThe customer also verified the behavior in 5.0 and confirmed that their issue is gone in that version, which justifies the backport: https://github.com/dotnet/runtime/issues/42360#issuecomment-693791617\r\n","Url":"https://github.com/dotnet/corefx/pull/42988","RelatedDescription":"Closed or merged PR \"[release/3.1] [corefx] Fix FileStream.Dispose silently fails on Dispose when disk has run out of space\" (#42988)"},{"Id":"704997021","IsPullRequest":true,"CreatedAt":"2020-09-22T16:45:20","Actor":"dotnet-maestro[bot]","Number":"42990","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200919.1\r\n- **Date Produced**: 9/19/2020 8:23 PM\r\n- **Commit**: 3fbe13469a10dca70e50f7cb8507e348b9095563\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20466.1 to 3.1.9-servicing.20469.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/dd56afa...3fbe134\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42990","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42990)"},{"Id":"705711038","IsPullRequest":true,"CreatedAt":"2020-09-21T15:41:37","Actor":"silvioguiso","Number":"42991","RawContent":null,"Title":"Fixes build-tools","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42991","RelatedDescription":"Closed or merged PR \"Fixes build-tools\" (#42991)"},{"Id":"704005336","IsPullRequest":true,"CreatedAt":"2020-09-18T23:01:25","Actor":"carlossanlop","Number":"42989","RawContent":null,"Title":"[release/3.1] Fix Windows AccessViolationException in FileSystemWatcher when monitoring network share for changes","State":"closed","Body":"## Customer impact\r\n\r\nThis issue was reported for 3.1 twice:\r\n- https://github.com/dotnet/runtime/issues/40412 - w3wp.exe crash in FileSystemWatcher after 2.2 -> 3.1 migration (c0000005 Access Violation)\r\n- https://github.com/dotnet/runtime/issues/42108 - FileSystemWatcher crash UNALIGNED_STACK_POINTER\r\n\r\nWhen monitoring a network share with `FileSystemWatcher`, if there are network issues that could cause the data to arrive malformed, then after casting the byte array to a `FILE_NOTIFY_INFORMATION`, attempts to access the struct fields can throw an AV.\r\n\r\nThe 6.0 (master) PR: https://github.com/dotnet/runtime/pull/42419\r\nThe 5.0 backport PR: https://github.com/dotnet/runtime/pull/42420\r\n\r\n## Testing\r\n\r\nThe issue was also reported internally by one of the customers. Our CSS partner was able to reproduce it locally.\r\n\r\nI provided him a private binary of System.IO.FileSystem.Watcher.dll with the changes in this fix, and he confirmed the AV no longer happens.\r\n\r\n## Risk\r\n\r\nLow. We are introducing boundary checks after casting data data coming from a P/Invoke, with the explicit purpose of removing an unexpected AV exception.","Url":"https://github.com/dotnet/corefx/pull/42989","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Windows AccessViolationException in FileSystemWatcher when monitoring network share for changes\" (#42989)"},{"Id":"696182658","IsPullRequest":true,"CreatedAt":"2020-09-18T21:37:36","Actor":"BrennanConroy","Number":"42981","RawContent":null,"Title":"[Backport][Pipelines] Noop Writes when Reader completed","State":"closed","Body":"Backport of https://github.com/dotnet/runtime/pull/41071\r\n\r\n## Customer Impact\r\nCustomers shouldn't be able to see any differences as we want to keep existing code working without modifications.\r\nThis is fixing a Pipelines usage pattern that could result in large memory pressure or OOMs in the worst case.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nYes? Tests were written and existing tests required no changes.\r\n\r\n## Risk\r\nLow, change was purposefully tailored to not break existing code","Url":"https://github.com/dotnet/corefx/pull/42981","RelatedDescription":"Closed or merged PR \"[Backport][Pipelines] Noop Writes when Reader completed\" (#42981)"},{"Id":"696214450","IsPullRequest":true,"CreatedAt":"2020-09-18T21:37:06","Actor":"BrennanConroy","Number":"42982","RawContent":null,"Title":"[Backport][Pipelines] Noop Writes when Reader completed","State":"closed","Body":"Backport of https://github.com/dotnet/runtime/pull/41071\r\n\r\n## Customer Impact\r\nCustomers shouldn't be able to see any differences as we want to keep existing code working without modifications.\r\nThis is fixing a Pipelines usage pattern that could result in large memory pressure or OOMs in the worst case.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nYes? Tests were written and existing tests required no changes.\r\n\r\n## Risk\r\nLow, change was purposefully tailored to not break existing code","Url":"https://github.com/dotnet/corefx/pull/42982","RelatedDescription":"Closed or merged PR \"[Backport][Pipelines] Noop Writes when Reader completed\" (#42982)"},{"Id":"697305891","IsPullRequest":true,"CreatedAt":"2020-09-18T18:56:03","Actor":"wfurt","Number":"42985","RawContent":null,"Title":"[release/3.1] release `existingTrust` to avoid native memory leak in ssl handshake on macOS","State":"closed","Body":"This is port of https://github.com/dotnet/runtime/pull/41657 to fix https://github.com/dotnet/runtime/issues/34080\r\n\r\n## Summary\r\nThere is memory leak inside of AppleCryptoNative_SslIsHostnameMatch() function which is used to verify peer's name in every client TLS handshake on macOS. There is no workaround and if running long enough, .NET will consume all available memory and crash. The `SecTrustRef` is internal structure and holds additional objects - like URL of OCSP or CRL responder so leaked memory is bigger than small. \r\n\r\n## Customer  Impact \r\nWe have worked with a major customer who has been hitting this leak in an app that they intend to widely deploy within their organization (10K”s of deployments). They are encountering this leak and it is blocking their deployment. They have attempted to work around it by restarting the app when their memory consumption reaches a threshold but this workaround is not sustainable for them at scale so they are seeking a fix backported to 3.1 LTS.\r\n\r\n## Regression?\r\nno.\r\n\r\n## Testing\r\nthe fix was verified with Apple's development tools e.g. `leaks` utility\r\n\r\n## Risk\r\nlow. This releases structure we obtained via `SSLCopyPeerTrust` and it does not change any flow.\r\n\r\ncc: @danmosemsft \r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42985","RelatedDescription":"Closed or merged PR \"[release/3.1] release `existingTrust` to avoid native memory leak in ssl handshake on macOS\" (#42985)"},{"Id":"702899998","IsPullRequest":true,"CreatedAt":"2020-09-17T15:21:31","Actor":"dotnet-maestro[bot]","Number":"42987","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200916.1\r\n- **Date Produced**: 9/16/2020 3:42 PM\r\n- **Commit**: dd56afab046dc89d4c2d04512e9345cef21a9439\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20461.1 to 3.1.9-servicing.20466.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/2a4152d...dd56afa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42987","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42987)"},{"Id":"697293502","IsPullRequest":true,"CreatedAt":"2020-09-15T20:07:19","Actor":"dotnet-maestro[bot]","Number":"42984","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200911.1\r\n- **Date Produced**: 9/11/2020 7:26 PM\r\n- **Commit**: 2a4152d784f25ee929b7c0e80c068627887fabcb\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: [from 3.1.9-servicing.20458.2 to 3.1.9-servicing.20461.1][1]\r\n\r\n[1]: https://github.com/dotnet/coreclr/compare/c2e8c9f...2a4152d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42984","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42984)"},{"Id":"701998399","IsPullRequest":true,"CreatedAt":"2020-09-15T18:16:38","Actor":"dotnet-maestro[bot]","Number":"42986","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:98d11e43-fc37-4a09-cd5a-08d72a4d12e0)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 98d11e43-fc37-4a09-cd5a-08d72a4d12e0\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: [from 3.1.0-preview3.19553.2 to 3.1.9-servicing.20459.3][1]\r\n  - **Microsoft.NETCore.DotNetHost**: [from 3.1.0-preview3.19553.2 to 3.1.9][1]\r\n  - **Microsoft.NETCore.DotNetHostPolicy**: [from 3.1.0-preview3.19553.2 to 3.1.9][1]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/13f35c3...1a04dd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:98d11e43-fc37-4a09-cd5a-08d72a4d12e0)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42986","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#42986)"},{"Id":"696434578","IsPullRequest":true,"CreatedAt":"2020-09-09T06:33:03","Actor":"dotnet-maestro[bot]","Number":"42983","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200908.2\r\n- **Date Produced**: 9/9/2020 4:52 AM\r\n- **Commit**: c2e8c9f71737d87a95610851587e2a1eaf18c91c\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.8-servicing.20411.5 to 3.1.9-servicing.20458.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42983","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42983)"},{"Id":"696125476","IsPullRequest":true,"CreatedAt":"2020-09-08T20:47:58","Actor":"Anipik","Number":"42980","RawContent":null,"Title":"update branding to 2.1.23","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42980","RelatedDescription":"Closed or merged PR \"update branding to 2.1.23\" (#42980)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"774793643","IsPullRequest":true,"CreatedAt":"2020-12-25T22:49:56","Actor":"333fred","Number":"50132","RawContent":null,"Title":"Extract IFindDefinitionService, move IGoToDefinitionSymbolService to the features layer","State":"open","Body":"This is mainly taking the part of `IGoToDefinitionService` that LSP depends on and pulling it into a new `IFindDefinitionService` in the features layer. The only real implementation change is taking a `Lazy` that was used to avoid realizing the stream provider in the LSP case and making it non-lazy, as LSP no longer depends on the service.","Url":"https://github.com/dotnet/roslyn/pull/50132","RelatedDescription":"Open PR \"Extract IFindDefinitionService, move IGoToDefinitionSymbolService to the features layer\" (#50132)"},{"Id":"774653209","IsPullRequest":false,"CreatedAt":"2020-12-25T13:27:31","Actor":"SunnieShine","Number":"50131","RawContent":null,"Title":"CodeLens doesn't count up the usage on custom method GetPinnableReference","State":"closed","Body":"**Version Used**: \r\nVS 16.9 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nType code such as:\r\n\r\n```csharp\r\nusing System;\r\n\r\nvar sudokuGrid = new SudokuGrid();\r\nunsafe\r\n{\r\n    fixed (short* ptr = sudokuGrid) // Here used `GetPinnableReference`.\r\n        Console.WriteLine(*ptr);\r\n}\r\n\r\npublic unsafe struct SudokuGrid\r\n{\r\n    private fixed short _masks[81];\r\n    \r\n    public readonly ref readonly short GetPinnableReference() => ref _masks[0];\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThere's 1 reference on the method `SudokuGrid.GetPinnableReference` usage.\r\n\r\n**Actual Behavior**:\r\nCodeLens shows that this method isn't called by any other methods (i.e. 0 references) no matter what valid signature I changed:\r\n\r\n* `readonly ref readonly short GetPinnableReference`\r\n* `ref short GetPinnableReference`\r\n* `ref readonly short GetPinnableReference`","Url":"https://github.com/dotnet/roslyn/issues/50131","RelatedDescription":"Closed issue \"CodeLens doesn't count up the usage on custom method GetPinnableReference\" (#50131)"},{"Id":"774588712","IsPullRequest":false,"CreatedAt":"2020-12-25T00:39:29","Actor":"333fred","Number":"50130","RawContent":null,"Title":"FormatAsync introduces extra newlines","State":"open","Body":"I can't work out what format whitespace is doing on this one. Consider this code:\r\n\r\n```cs\r\nclass Test\r\n{\r\n    void M()\r\n    {\r\n        Console.WriteLine(\"Test\");\r\n        var x = 1 \r\n        \r\n    }\r\n}\r\n```\r\n\r\nThere is a space after the `1`, and there are 8 spaces on the next line. If I call `FormatAsync` with bounds of `[72..90)`, I get back a document formatted like this:\r\n\r\n```cs\r\nclass Test\r\n{\r\n    void M()\r\n    {\r\n        Console.WriteLine(\"Test\");\r\n        var x = 1\r\n\r\n\r\n    }\r\n}\r\n```\r\n\r\nNote the extra newline inserted, and also the changes outside the range requested like https://github.com/dotnet/roslyn/issues/50129. This seems specific to scenarios involving code that does not end with a `;`, as I don't see it for scenarios like `var x = ; `.","Url":"https://github.com/dotnet/roslyn/issues/50130","RelatedDescription":"Open issue \"FormatAsync introduces extra newlines\" (#50130)"},{"Id":"774582589","IsPullRequest":false,"CreatedAt":"2020-12-24T23:45:41","Actor":"333fred","Number":"50129","RawContent":null,"Title":"FormatAsync removes whitespace outside the requested bounds","State":"open","Body":"**Version Used**: 3.8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nConsider the following code:\r\n\r\n```cs\r\nclass C\r\n{\r\n    public void M()\r\n    {\r\n        // There is a space after the ; here, and 8 spaces on the next line.\r\n        var i = 1; \r\n        \r\n    }\r\n}\r\n```\r\n\r\nIf I make a FormatAsync call, with the bounds `[109..130)`, I get back a text change removing both the space on the end of the `var` line _and_ the spaces on the line after, with a changed span of `[127..138)`. This span is outside the bounds of what I asked for. In practice, what this means that if I have on-type formatting turned on in vscode and I have a trailing space, FormatAsync will remove the auto-indentation added in to put my cursor, when all that was asked to be formatted was the previous line.","Url":"https://github.com/dotnet/roslyn/issues/50129","RelatedDescription":"Open issue \"FormatAsync removes whitespace outside the requested bounds\" (#50129)"},{"Id":"774554552","IsPullRequest":true,"CreatedAt":"2020-12-24T20:35:32","Actor":"CyrusNajmabadi","Number":"50128","RawContent":null,"Title":"Dedupe navigate-to results across project flavors","State":"open","Body":"Before:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/103105678-0beeee00-45e4-11eb-8356-6a578dee9270.png)\r\n\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/103105674-0396b300-45e4-11eb-966e-deb73a7009ab.png)\r\n\r\nNote the duplicate results across netcoreapp3.1 and netcoreapp2.0 are gone.  There are still multiple results due to partial files, and we need to make that better, but that's out of scope here.\r\n\r\n--\r\n\r\nWe accomplish this by deduping results that map back to the same file path and same location in that file.  There's no point showing multiple results of that sort as all those results will just end navigating back to the exact same file and location.\r\n\r\nA more ideal approach might be some mechanism to show that there are multiple results across all the linked projects for a file.  However, that's not really supported in the streaming model that navigate-to currently presents us.","Url":"https://github.com/dotnet/roslyn/pull/50128","RelatedDescription":"Open PR \"Dedupe navigate-to results across project flavors\" (#50128)"},{"Id":"774541704","IsPullRequest":false,"CreatedAt":"2020-12-24T19:18:31","Actor":"AlekseyTs","Number":"50127","RawContent":null,"Title":"An algorithm used to break/detect cycles between constant fields exhibits non-deterministic behavior and might produce unexpected diagnostics","State":"open","Body":"The following unit-test succeeds today:\r\n```\r\n        [Fact]\r\n        public void Test_01()\r\n        {\r\n            var source =\r\n@\"enum C\r\n{\r\n    A = F,\r\n    B = A + C + D + E,\r\n    C = E,\r\n    D = B,\r\n    E = B,\r\n    F = G,\r\n    G = F,\r\n}\";\r\n\r\n            System.Collections.Immutable.ImmutableArray<Diagnostic> listOf2 = default;\r\n            System.Collections.Immutable.ImmutableArray<Diagnostic> listOf3 = default;\r\n\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                var compilation = CreateCompilation(source);\r\n                var list = compilation.GetDeclarationDiagnostics();\r\n\r\n                switch (list.Length)\r\n                {\r\n                    case 2:\r\n                        listOf2 = list;\r\n                        break;\r\n                    case 3:\r\n                        listOf3 = list;\r\n                        break;\r\n                    default:\r\n                        Assert.True(false);\r\n                        break;\r\n                }\r\n\r\n                if (!listOf2.IsDefault && !listOf3.IsDefault)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            listOf2.Verify(\r\n                // (4,5): error CS0110: The evaluation of the constant value for 'C.B' involves a circular definition\r\n                //     B = A + C + D + E,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"B\").WithArguments(\"C.B\").WithLocation(4, 5),\r\n                // (8,5): error CS0110: The evaluation of the constant value for 'C.F' involves a circular definition\r\n                //     F = G,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"F\").WithArguments(\"C.F\").WithLocation(8, 5)\r\n                );\r\n\r\n            listOf3.Verify(\r\n                // (3,5): error CS0110: The evaluation of the constant value for 'C.A' involves a circular definition\r\n                //     A = F,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"A\").WithArguments(\"C.A\").WithLocation(3, 5),\r\n                // (4,5): error CS0110: The evaluation of the constant value for 'C.B' involves a circular definition\r\n                //     B = A + C + D + E,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"B\").WithArguments(\"C.B\").WithLocation(4, 5),\r\n                // (8,5): error CS0110: The evaluation of the constant value for 'C.F' involves a circular definition\r\n                //     F = G,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"F\").WithArguments(\"C.F\").WithLocation(8, 5)\r\n                );\r\n        }\r\n```\r\n\r\nObserved:\r\nThe same code sometimes produces 2 errors and sometimes 3 errors. The error that appears/disappears is\r\n```\r\n                // (3,5): error CS0110: The evaluation of the constant value for 'C.A' involves a circular definition\r\n                //     A = F,\r\n                Diagnostic(ErrorCode.ERR_CircConstValue, \"A\").WithArguments(\"C.A\").WithLocation(3, 5),\r\n```\r\nIt is also somewhat misleading because ```C.A``` is not involved into a cycle itself, it depends on a field that is involved into a cycle that is reported separately.\r\n\r\nI believe the intent was to report the error only for fields that are part of a cycle.\r\n","Url":"https://github.com/dotnet/roslyn/issues/50127","RelatedDescription":"Open issue \"An algorithm used to break/detect cycles between constant fields exhibits non-deterministic behavior and might produce unexpected diagnostics\" (#50127)"},{"Id":"774530097","IsPullRequest":false,"CreatedAt":"2020-12-24T18:14:42","Actor":"jaredpar","Number":"50126","RawContent":null,"Title":"Nested object initializers can incorrectly access init properties","State":"open","Body":"Consider the following code:\r\n\r\n```c#\r\nusing System;\r\n\r\npublic record Person(String FirstName, String LastName); \r\n\r\npublic class Container \r\n{\r\n    public Person Person { get;  }\r\n    \r\n    public Container(Person person)\r\n    {\r\n        Person = person;\r\n    }\r\n}\r\n\r\n\r\npublic class C {\r\n    public void M() {\r\n        Person person = new Person(\"j\", \"p\");\r\n        Container c = new Container(person)\r\n        {\r\n            Person = { FirstName = \"c\" }\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nThe nested initializer on `Person` mutates `FirstName` which should not happen. At a glance I believe we need to just disallow the use of `init` accessors in nested object initializers entirely. Don't have nested object initializers fully paged in right now so possible I'm missing a case. \r\n\r\nNote: by \"nested object initializer\" I mean the form of object initializer where it is not required to be prefixed with `new TypeName`. This is different than object initializers used inside of object initializers. \r\n\r\n ","Url":"https://github.com/dotnet/roslyn/issues/50126","RelatedDescription":"Open issue \"Nested object initializers can incorrectly access init properties\" (#50126)"},{"Id":"774455761","IsPullRequest":false,"CreatedAt":"2020-12-24T13:49:28","Actor":"huoyaoyuan","Number":"50125","RawContent":null,"Title":"Idea: project/package level code snippet","State":"open","Body":"Code snippets are always useful. However, the old snippets shipped with Visual Studio are only suitable for some old programming models.\r\n\r\nA project is likely to contain it's own pattern, and worth to be a code snippet. It will be very useful and flexible if the IDE can load code snippet for project.\r\n\r\n.NET SDK and nuget packages should be also provide snippets with them.\r\n\r\nLegacy snippets should be hidden when using new SDK.","Url":"https://github.com/dotnet/roslyn/issues/50125","RelatedDescription":"Open issue \"Idea: project/package level code snippet\" (#50125)"},{"Id":"774409154","IsPullRequest":false,"CreatedAt":"2020-12-24T12:59:14","Actor":"xtqqczze","Number":"50124","RawContent":null,"Title":"Fix for IDE0059 \"unnecessary assignment\" results in extra IL local","State":"open","Body":"**Version Used**: Visual Studio 2019 v16.9.0-pre.2.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\npublic class C {\r\n    [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]\r\n    public void M(int a, out int b) {\r\n        b = a;\r\n    }\r\n    public void A() {\r\n        M(0, out int v);\r\n        M(v, out v); // IDE0059\r\n    }\r\n    public void B() {\r\n        M(0, out int v);\r\n        M(v, out _);\r\n    }\r\n}\r\n```\r\n\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDYB8ACBmAAhwCYCBhAgbwFgAoAhggbRwEYA6AJQFcA7GNGDjsyAezAAHTIgDKiAG5oAxnCjsAsnBgALUQBMAkpIwAKNlz4ChI8VIyyFy1Rq27DxgPISBo3moByoga8GGi8YQDmAJQAunSMRIQ4ACwE6iZhMAQQSASi3FmZBMBRVPEJjMAEALzZANzlDAC+jYlEqQCCJqU09BUM6QAMufmF/ATyUQ19/enyIwUTUwQA9CsEBgAiAKKDgwCsAJytLTNtKQQAQt1lZwlDC2NZk9P9AybzeYsA+lMndE0gA===","Url":"https://github.com/dotnet/roslyn/issues/50124","RelatedDescription":"Open issue \"Fix for IDE0059 \"unnecessary assignment\" results in extra IL local\" (#50124)"},{"Id":"774258619","IsPullRequest":true,"CreatedAt":"2020-12-24T08:09:29","Actor":"sharwell","Number":"50122","RawContent":null,"Title":"Update to Microsoft.CodeAnalysis.Testing 1.0.1-beta1.20623.3","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/50122","RelatedDescription":"Open PR \"Update to Microsoft.CodeAnalysis.Testing 1.0.1-beta1.20623.3\" (#50122)"},{"Id":"774199058","IsPullRequest":true,"CreatedAt":"2020-12-24T05:48:58","Actor":"davidwengier","Number":"50121","RawContent":null,"Title":"Don't offer IDE0058 for dynamic returns","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/43648\r\n\r\nOne last little bit of productivity before the end of the year?","Url":"https://github.com/dotnet/roslyn/pull/50121","RelatedDescription":"Open PR \"Don't offer IDE0058 for dynamic returns\" (#50121)"},{"Id":"774101556","IsPullRequest":false,"CreatedAt":"2020-12-24T00:04:35","Actor":"TessenR","Number":"50120","RawContent":null,"Title":"Roslyn incorrectly updates nullable states of arguments passed to [NotNull(When)]/[MaybeNull(When)] parameters with user-defined conversions","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (19 Dec 2020)\r\nLatest commit 80e9227 by msftbot[bot]:\r\nMerge pull request #50073 from dotnet/merges/release/dev16.9-to-master\r\n\r\nMerge release/dev16.9 to master\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\npublic class A\r\n{\r\n    public static explicit operator C(A? a) => new C();\r\n}\r\n\r\npublic class C\r\n{\r\n    public static void Main()\r\n    {\r\n        A? a = null;\r\n        if (IsNotNull((C)a))\r\n        {\r\n          a.ToString();\r\n        }\r\n    }\r\n    \r\n    public static bool IsNotNull([NotNullWhen(true)] C c) => c != null;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nWarning for `a.ToString()` since the value passed to `IsNotNull` method is different from `a` and the state of `a` shouldn't be updated\r\n\r\n**Actual Behavior**:\r\nNo warnings. The program crashes at runtime with a `NullReferenceException`\r\n\r\n**Notes**\r\nThe same problem is present if you change the cast to an implicit conversion\r\nThe same problem is also present with `[MaybeNull(When)]` annotation updating unrelated variables","Url":"https://github.com/dotnet/roslyn/issues/50120","RelatedDescription":"Open issue \"Roslyn incorrectly updates nullable states of arguments passed to [NotNull(When)]/[MaybeNull(When)] parameters with user-defined conversions\" (#50120)"},{"Id":"773510851","IsPullRequest":true,"CreatedAt":"2020-12-23T23:16:39","Actor":"dotnet-bot","Number":"50113","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/master\n- https://github.com/dotnet/roslyn/find/master-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/50113","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#50113)"},{"Id":"774032579","IsPullRequest":false,"CreatedAt":"2020-12-23T20:40:48","Actor":"jnm2","Number":"50119","RawContent":null,"Title":"'Go to definition' on a tuple element name should not navigate to metadata for ValueTuple.ItemN","State":"open","Body":"**Version Used**: 16.8.3\r\n\r\nIf you press F12 to go to definition for `SomeMember`, and `bar` happens to be a tuple, you get taken to a source view that decompiles `ValueTuple<...>` from metadata even though I think this can't be useful and wasn't what was expected.\r\n\r\n```cs\r\nFoo(bar.SomeMember);\r\n```\r\n\r\nWhat I'm looking for is \"where is the SomeMember name coming from,\" and sometimes, \"where is the SomeMember value coming from.\" Here's an example of what I would expect:\r\n\r\n```cs\r\nvar bar = GetBarFromSomewhereElse();\r\nFoo(bar.SomeMember);\r\n```\r\n\r\nI would expect the navigation and selection to land here, even if it's in another file or in source generated from metadata, showing where the name came from. (Specifically: the name token which, if changed, would cause `bar.SomeMember` to stop compiling. In this way it's a logical extension of navigating to the definition of a member on e.g. a class.)\r\n\r\n```cs\r\n(int [|SomeMember|], int SomeOtherMember) GetBarFromSomewhereElse() => ...\r\n```\r\n\r\nWhen I go to definition on a default `ItemN` tuple element name, it's because I want to go to the place where I can create a custom name for it. (Or if in metadata, the place that shows me which library is responsible for not having defined a name.) Just like how going to definition on `SomeMember` would take me to the place where I can edit that name. In that case, I think it would be most useful to end up here:\r\n\r\n```cs\r\n(int[||], int) GetBarFromSomewhereElse() => ...\r\n```","Url":"https://github.com/dotnet/roslyn/issues/50119","RelatedDescription":"Open issue \"'Go to definition' on a tuple element name should not navigate to metadata for ValueTuple.ItemN\" (#50119)"},{"Id":"774014107","IsPullRequest":false,"CreatedAt":"2020-12-23T19:59:09","Actor":"CyrusNajmabadi","Number":"50118","RawContent":null,"Title":"ref-struct errors can be suppressed in VB.","State":"open","Body":"```vb\r\nClass C\r\n    Public Shared Sub FooWithoutAnyErrorsOrWarnings()\r\n#Disable Warning BC40008 ' Type or member is obsolete\r\n        Foo()\r\n#Enable Warning BC40008 ' Type or member is obsolete\r\n    End Sub\r\n\r\n    <Obsolete(\"\", False)>\r\n    Private Shared Sub Foo()\r\n        Dim x = New Span(Of Byte)({1, 2, 3})\r\n    End Sub\r\nEnd Class\r\n```\r\n\r\nThis turns out to be pretty dangerous.  It's easy to create code now that captures spans and reads/writes from them long after their backing store is invalid:\r\n\r\n```vb\r\n<Obsolete(\"\", False)>\r\nClass C\r\n    Private s As Span(Of Byte)\r\n\r\n    Public Sub Capture(s As Span(Of Byte))\r\n        Me.s = s\r\n    End Sub\r\n\r\n    Public Function Read() As Byte()\r\n        Return s.ToArray()\r\n    End Function\r\nEnd Class\r\n```\r\n\r\nThis was discovered as a way to workaround the restriction against using ref-structs in VB where lifetimes are not tracked.  However, even though there is no usage of any unsafe apis, it's now trivial to get into very unsafe scenarios that could trivially lead to memory corruption.\r\n\r\nWhen we discussed 'obsolete' as the mechanism to disable access to this type, i'm not sure if it was ever recognized that there was this loophole.  I personally never realized an 'obsolete error' could be suppressed by an 'obsolete warning'.  \r\n\r\nShould we introduce a new category of obsolete (similar to how we added diagnostics to them)?  i.e. one that is an error, but is always an error no matter what?","Url":"https://github.com/dotnet/roslyn/issues/50118","RelatedDescription":"Open issue \"ref-struct errors can be suppressed in VB.\" (#50118)"},{"Id":"773942591","IsPullRequest":false,"CreatedAt":"2020-12-23T17:17:07","Actor":"AlekseyTs","Number":"50117","RawContent":null,"Title":"Invalid formatting of `#If` directive in VB","State":"open","Body":"Paste the following code in VB type.\r\n```\r\n        /// <summary>\r\n        /// Generate a list containing the given field and all dependencies\r\n        /// of that field that require evaluation. The list is ordered by\r\n        /// dependencies, with fields with no dependencies first. Cycles are\r\n        /// broken at the first field lexically in the cycle. If multiple threads\r\n        /// call this method with the same field, the order of the fields\r\n        /// returned should be the same, although some fields may be missing\r\n        /// from the lists in some threads as other threads evaluate fields.\r\n        /// </summary>\r\n        internal static void OrderAllDependencies(\r\n            this SourceFieldSymbolWithSyntaxReference field,\r\n            ArrayBuilder<FieldInfo> order,\r\n            bool earlyDecodingWellKnownAttributes)\r\n        {\r\n            Debug.Assert(order.Count == 0);\r\n\r\n            var graph = PooledDictionary<SourceFieldSymbolWithSyntaxReference, Node<SourceFieldSymbolWithSyntaxReference>>.GetInstance();\r\n\r\n            CreateGraph(graph, field, earlyDecodingWellKnownAttributes);\r\n\r\n            Debug.Assert(graph.Count >= 1);\r\n            CheckGraph(graph);\r\n\r\n#if DEBUG\r\n            var fields = ArrayBuilder<SourceFieldSymbolWithSyntaxReference>.GetInstance();\r\n            fields.AddRange(graph.Keys);\r\n#endif\r\n\r\n            OrderGraph(graph, order);\r\n\r\n#if DEBUG\r\n            // Verify all entries in the graph are in the ordered list.\r\n            var map = new HashSet<SourceFieldSymbolWithSyntaxReference>(order.Select(o => o.Field).Distinct());\r\n            Debug.Assert(fields.All(f => map.Contains(f)));\r\n            fields.Free();\r\n#endif\r\n\r\n            graph.Free();\r\n        }\r\n```\r\n\r\nObserved:\r\n```\r\n        /// <summary>\r\n        /// Generate a list containing the given field And all dependencies\r\n        /// of that field that require evaluation. The list Is ordered by\r\n        /// dependencies, with fields with no dependencies first. Cycles are\r\n        /// broken at the first field lexically in the cycle. If multiple threads\r\n        /// call this method with the same field, the order of the fields\r\n        /// returned should be the same, although some fields may be missing\r\n        /// from the lists in some threads as other threads evaluate fields.\r\n        /// </summary>\r\n        internal Static void OrderAllDependencies(\r\n            this SourceFieldSymbolWithSyntaxReference field,\r\n            ArrayBuilder<FieldInfo> order,\r\n            bool earlyDecodingWellKnownAttributes)\r\n        {\r\n            Debug.Assert(order.Count == 0);\r\n\r\n            var graph = PooledDictionary < SourceFieldSymbolWithSyntaxReference, Node<SourceFieldSymbolWithSyntaxReference>>.GetInstance();\r\n\r\n            CreateGraph(graph, field, earlyDecodingWellKnownAttributes);\r\n\r\n            Debug.Assert(graph.Count >= 1);\r\n            CheckGraph(graph);\r\n\r\n#If DEBUGThen\r\n            var fields = ArrayBuilder < SourceFieldSymbolWithSyntaxReference > .GetInstance();\r\n            fields.AddRange(graph.Keys);\r\n#End If\r\n\r\n            OrderGraph(graph, order);\r\n\r\n#if DEBUGThen\r\n            // Verify all entries in the graph are in the ordered list.\r\n            var map = New HashSet < SourceFieldSymbolWithSyntaxReference > (order.Select(o >= o.Field).Distinct());\r\n            Debug.Assert(fields.All(f => map.Contains(f)));\r\n            fields.Free();\r\n#End If\r\n\r\n            graph.Free();\r\n        }\r\n```\r\n\r\nNote, conditional compilation directive is changed to ```#if DEBUGThen```. Expected ```#if DEBUG Then```.\r\n\r\nAlso, if I position the cursor at the end of ```#if DEBUGThen``` and press enter, the result is the following:\r\n```\r\n#If DEBUGThenThen\r\n\r\n#End If\r\n```\r\n\r\nThe space is missing and ```#End If``` is added. This is unexpected, ```#End If``` is already present and shouldn't be added.","Url":"https://github.com/dotnet/roslyn/issues/50117","RelatedDescription":"Open issue \"Invalid formatting of `#If` directive in VB\" (#50117)"},{"Id":"773794309","IsPullRequest":false,"CreatedAt":"2020-12-23T13:54:05","Actor":"Thaval","Number":"50115","RawContent":null,"Title":"Roslyn + MSBuild + VS19 fails to build ","State":"open","Body":"This roslyn + MSBuild integration is driving me crazy... insanity. And sorry for being so direct.\r\nI created a NET 48 console application which references a lot of Microsoft.Build and Microsoft.CodeAnalysis nuget references. The job is to load a solution and get all projects, easy task imho.\r\nSo I created another project, a NET 48 WPF project to be clear, which references the console application and use the \"SolutionReader\" class I created.\r\nHowever, after failing reading a solution for no reasons (amount of projects = 0), As I'm not new to Microsoft, I knew they have some troubles with their nuget dependencies, so I started to add Microsoft.Build and Microsoft.CodeAnalysis nugets even to the WPF project. I needed to set \"ExlucdeAssets=runtime\" to the Microsoft.Build* packages because Visual Studio was complaining.\r\nNow when I run the WPF application again and try to load a solution, is says that it cannot load Microsoft.Build.Locator because one of its dependencies could not be loaded (why don't give the nuget all the dependencies it's based on?!).\r\nThe only package missing is \"Microsoft.Build.Runtime\". However, as soon as I add this package, VS19 goes crazy. It cannot build the WPF project anymore and best thing: it doesn't output anymore why the build failed.\r\n\r\nWhen I remove the \"Microsoft.Build.Runtime\", the project still does not compile. I have to restart the whole computer!\r\n\r\nSo what hell is going on here? Has somebody a clue? \r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/50115","RelatedDescription":"Open issue \"Roslyn + MSBuild + VS19 fails to build \" (#50115)"},{"Id":"773606872","IsPullRequest":false,"CreatedAt":"2020-12-23T09:14:41","Actor":"naminodarie","Number":"50114","RawContent":null,"Title":"Visual Studio throw error when using a generic type having xml document containing `<list>` tag.","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.3\r\n\r\n**Steps to Reproduce**:\r\n\r\nDefine a generic type having xml document containing `<list>` tag.\r\n\r\n```C#\r\n/// <summary>Here is an example of a bulleted list:\r\n/// <list type=\"bullet\">\r\n/// <item>\r\n/// <description>Item 1.</description>\r\n/// </item>\r\n/// <item>\r\n/// <description>Item 2.</description>\r\n/// </item>\r\n/// </list>\r\n/// </summary>\r\npublic class Generic<T>{}\r\n```\r\n\r\nUse the type\r\n\r\n```C#\r\n/// <summary>Here is an example of a bulleted list:\r\n/// <list type=\"bullet\">\r\n/// <item>\r\n/// <description>Item 1.</description>\r\n/// </item>\r\n/// <item>\r\n/// <description>Item 2.</description>\r\n/// </item>\r\n/// </list>\r\n/// </summary>\r\npublic class Generic<T>{}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        _ = new Generic<> // Visual Studio throws error when typing `<`\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo error.\r\n\r\n**Actual Behavior**:\r\n\r\nVisual Studio throws error.\r\n\r\n```\r\ntype        : Error\r\nsource      : Editor or Editor Extension\r\ndescription : System.InvalidOperationException: Unexpected value 'ContainerStart' of type 'System.String'\r\n                 場所 Microsoft.CodeAnalysis.TaggedTextExtensions.ToClassificationTypeName(String taggedTextTag)\r\n                 場所 Microsoft.CodeAnalysis.Editor.Shared.Extensions.ClassificationExtensions.ToClassificationSpans(IEnumerable`1 parts, ITextSnapshot textSnapshot, ClassificationTypeMap typeMap)\r\n                 場所 Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Presentation.SignatureHelpClassifier.GetClassificationSpans(SnapshotSpan span)\r\n                 場所 Microsoft.VisualStudio.Text.Classification.Implementation.ClassifierTagger.<GetTags>d__5.MoveNext()\r\n                 場所 Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.<GetTagsForBuffer>d__47.MoveNext()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/50114","RelatedDescription":"Open issue \"Visual Studio throw error when using a generic type having xml document containing `<list>` tag.\" (#50114)"},{"Id":"773141375","IsPullRequest":true,"CreatedAt":"2020-12-22T23:19:18","Actor":"dotnet-bot","Number":"50106","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request. 🐯\n\n## Troubleshooting conflicts\n\n### Identify authors of changes which introduced merge conflicts\nScroll to the bottom, then for each file containing conflicts copy its path into the following searches:\n- https://github.com/dotnet/roslyn/find/master\n- https://github.com/dotnet/roslyn/find/master-vs-deps\n\nUsually the most recent change to a file between the two branches is considered to have introduced the conflicts, but sometimes it will be necessary to look for the conflicting lines and check the blame in each branch. Generally the author whose change introduced the conflicts should pull down this PR, fix the conflicts locally, then push up a commit resolving the conflicts.\n\n### Resolve merge conflicts using your local repo\nSometimes merge conflicts may be present on GitHub but merging locally will work without conflicts. This is due to differences between the merge algorithm used in local git versus the one used by GitHub.\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n","Url":"https://github.com/dotnet/roslyn/pull/50106","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#50106)"},{"Id":"773284638","IsPullRequest":true,"CreatedAt":"2020-12-22T22:14:02","Actor":"333fred","Number":"50111","RawContent":null,"Title":"IOperation Test Hook Pt 1","State":"open","Body":"Followup to https://github.com/dotnet/roslyn/pull/49534. That PR is already unicorning, so I'm going to split it up into a few smaller series of PRs. For simplicity of review, I'm going to take the following strategy: I'll cherry-pick the original commit to this branch, then create a separate commit to address any comments on the original commit right on top of it. I'll also copy over the relevant comment from the original commit and link to the original, then answer as a separate reply.\n","Url":"https://github.com/dotnet/roslyn/pull/50111","RelatedDescription":"Open PR \"IOperation Test Hook Pt 1\" (#50111)"},{"Id":"773252784","IsPullRequest":false,"CreatedAt":"2020-12-22T21:04:10","Actor":"TessenR","Number":"50110","RawContent":null,"Title":"Roslyn ignores [MaybeNull] / [NotNull] annotation on increment/decrement operators' return values","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (19 Dec 2020)\r\nLatest commit 80e9227 by msftbot[bot]:\r\nMerge pull request #50073 from dotnet/merges/release/dev16.9-to-master\r\n\r\nMerge release/dev16.9 to master\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nvar c = new C1();\r\nc.M1(c);\r\n\r\nclass C1\r\n{\r\n  public void M1(C1 c) { (++c).ToString(); c.ToString(); }\r\n\r\n  [return: MaybeNull] public static C1 operator ++(C1 c) => null;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nWarning for `(++c).ToString()`\r\nWarning for `c.ToString()`;\r\nBoth can be nullable according to `[return: MaybeNull]` annotation on `C1.++` operator\r\n\r\n**Actual Behavior**:\r\nNo warnings. The program crashes at runtime with a `NullReferenceException`\r\n\r\n**Notes**\r\nRoslyn similarly ignores `[return: NotNull]` annotation and emits false positive warnings for them in similar scenarios","Url":"https://github.com/dotnet/roslyn/issues/50110","RelatedDescription":"Open issue \"Roslyn ignores [MaybeNull] / [NotNull] annotation on increment/decrement operators' return values\" (#50110)"},{"Id":"773247897","IsPullRequest":false,"CreatedAt":"2020-12-22T20:55:50","Actor":"TessenR","Number":"50109","RawContent":null,"Title":"Roslyn ignores [AllowNull] / [DisallowNull] attributes on increment/decrement operators' arguments","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (19 Dec 2020)\r\nLatest commit 80e9227 by msftbot[bot]:\r\nMerge pull request #50073 from dotnet/merges/release/dev16.9-to-master\r\n\r\nMerge release/dev16.9 to master\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nnew C().M1(null);\r\n\r\nclass C\r\n{\r\n  public void M1(C? c) => c++;\r\n\r\n  public static C operator ++([DisallowNull] C? c) { c.ToString(); return c; }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nWarning for `c++` since it passes a nullable value to `[DisallowNull]` parameter\r\n\r\n**Actual Behavior**:\r\nNo warnings. The program crashes at runtime with a `NullReferenceException`\r\n\r\n**Notes**\r\nSimilarly Roslyn ignores `[AllowNull]` attributes and warns on passing nullable values to them which is absolutely fine.","Url":"https://github.com/dotnet/roslyn/issues/50109","RelatedDescription":"Open issue \"Roslyn ignores [AllowNull] / [DisallowNull] attributes on increment/decrement operators' arguments\" (#50109)"},{"Id":"773226041","IsPullRequest":false,"CreatedAt":"2020-12-22T20:25:04","Actor":"TessenR","Number":"50108","RawContent":null,"Title":"Incorrect nullability warnings on increment/decrement operators on nullable variables","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (19 Dec 2020)\r\nLatest commit 80e9227 by msftbot[bot]:\r\nMerge pull request #50073 from dotnet/merges/release/dev16.9-to-master\r\n\r\nMerge release/dev16.9 to master\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  void Test(C? c)\r\n  {\r\n    c = new C();\r\n    c++;\r\n  }\r\n\r\n  public static C? operator ++(C? c) => c;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings. The variable `c` allows null values, the operator's parameter allows null values. There's nothing to warn about.\r\n\r\n**Actual Behavior**:\r\n`warning CS8601: Possible null reference assignment.` is repoted for `c++`\r\n\r\n**Notes**\r\nNote that if you remove the assignment `c = new C()` the warning disappears.\r\nIt looks like Roslyn uses the actual nullability state of the variable `c` to determine allowed nullability instead of its annotation","Url":"https://github.com/dotnet/roslyn/issues/50108","RelatedDescription":"Open issue \"Incorrect nullability warnings on increment/decrement operators on nullable variables\" (#50108)"},{"Id":"773180747","IsPullRequest":true,"CreatedAt":"2020-12-22T20:19:39","Actor":"dibarbet","Number":"50107","RawContent":null,"Title":"Revert \"[master] Update dependencies from dotnet/arcade (#50093)\"","State":"closed","Body":"This reverts commit 997363e3aef95bd5ded6e8f27d41f59d719592a5.\r\n\r\nTesting, draft","Url":"https://github.com/dotnet/roslyn/pull/50107","RelatedDescription":"Closed or merged PR \"Revert \"[master] Update dependencies from dotnet/arcade (#50093)\"\" (#50107)"},{"Id":"773133074","IsPullRequest":true,"CreatedAt":"2020-12-22T17:49:38","Actor":"333fred","Number":"50105","RawContent":null,"Title":"Remove BinderOpts from BoundNodes","State":"open","Body":"We had a few locations in the bound nodes were we were hanging onto Binders for later use by IOperation. However, this is now largely unnecessary as, after the recent work to bind parameters up front, the only thing the binder was being used for was for access to a Compilation object, which the IOperation factory already had. Fixes https://github.com/dotnet/roslyn/issues/49218.\r\n\r\nCommit 1 is the simple stuff, removing `BinderOpt` from methods where it was simple to do so. The commit is largely mechanical, and should likely be reviewed on its own to make reviewing the next commits easier.\r\nCommit 2 removes the binder from using statements and using local declarations.\r\nCommit 3 removes it from foreach loops.\r\nCommit 4 fixes up an IOperation bug around mishandling expanded for GetEnumerator calls. This is a port of [#49534 (commit 5)](https://github.com/dotnet/roslyn/pull/49534/commits/ca6943f0a0d9f315e8a6f5bf5e2c1807d4d16005). I still need to write up a couple of VB tests here, but I'll take care of that on Monday.\r\n\r\nCommits 2-4 are likely best reviewed together, as I did a couple of refactorings in 3 and 4 on the original implementation in ","Url":"https://github.com/dotnet/roslyn/pull/50105","RelatedDescription":"Open PR \"Remove BinderOpts from BoundNodes\" (#50105)"},{"Id":"772630173","IsPullRequest":true,"CreatedAt":"2020-12-22T17:44:51","Actor":"paul1956","Number":"50098","RawContent":null,"Title":"Fix issue 50095","State":"closed","Body":"Fix 2 Typos and one missing Keyword in IsVBKeyword to address issue #50095","Url":"https://github.com/dotnet/roslyn/pull/50098","RelatedDescription":"Closed or merged PR \"Fix issue 50095\" (#50098)"},{"Id":"773066261","IsPullRequest":false,"CreatedAt":"2020-12-22T16:13:38","Actor":"jnm2","Number":"50104","RawContent":null,"Title":"Argument wrapping refactorings are not available when using target-typed new","State":"open","Body":"**Version Used**: 16.9.P2\r\n\r\n```cs\r\nclass C\r\n{\r\n    C(int a, int b) { }\r\n\r\n    C M()\r\n    {\r\n        return new([||]a: 1, b: 2);\r\n    }\r\n}\r\n```\r\n\r\nActual:\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/102909224-a3b6d580-4446-11eb-9d42-b11dedb177a8.png)\r\n\r\nExpected:\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/102909282-bcbf8680-4446-11eb-9a0f-bfb7d6e4c22f.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/50104","RelatedDescription":"Open issue \"Argument wrapping refactorings are not available when using target-typed new\" (#50104)"},{"Id":"772982648","IsPullRequest":false,"CreatedAt":"2020-12-22T14:20:36","Actor":"TessenR","Number":"50101","RawContent":null,"Title":"Roslyn reports multiple different warnings IDs for a single argument nullability mismatch problem in compound assignments","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (19 Dec 2020)\r\nLatest commit 80e9227 by msftbot[bot]:\r\nMerge pull request #50073 from dotnet/merges/release/dev16.9-to-master\r\n\r\nMerge release/dev16.9 to master\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n#nullable enable\r\nclass C<T>\r\n{\r\n  public static implicit operator C<T>(T t) => new C<T>();\r\n}\r\n\r\nclass C\r\n{\r\n  public static string operator +(C<object> x, C y) => \"\";\r\n  \r\n  static void F(C c, C<object?> y)\r\n  {\r\n    y += c; // CS8620 _and_ CS8619\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nOnly `CS8620: Argument of type 'C<object?>' cannot be used for parameter 'x' of type 'C<object>' in 'string C.operator +(C<object> x, C y)' due to differences in the nullability of reference types.` reported for `y += c`\r\n\r\n**Actual Behavior**:\r\nRoslyn reports two different warnings\r\n```\r\nwarning CS8619: Nullability of reference types in value of type 'C<object?>' doesn't match target type 'C<object>'.\r\nwarning CS8620: Argument of type 'C<object?>' cannot be used for parameter 'x' of type 'C<object>' in 'string C.operator +(C<object> x, C y)' due to differences in the nullability of reference types.\r\n```\r\nfor `y` in `y += c` despite the problem being a single `C<object?>` argument to `C<object>` parameter\r\n\r\n**Notes**\r\nNote that if you rewrite the compound assignment to `y = y + c` the incorrect CS8619 warning will go away. This also proves that there are no additional problems e.g. conversion from the result type of the + operator to the target type doesn't have any problems. However the argument problem is reported twice by the compiler","Url":"https://github.com/dotnet/roslyn/issues/50101","RelatedDescription":"Open issue \"Roslyn reports multiple different warnings IDs for a single argument nullability mismatch problem in compound assignments\" (#50101)"},{"Id":"772767448","IsPullRequest":false,"CreatedAt":"2020-12-22T08:54:46","Actor":"stevenxi","Number":"50100","RawContent":null,"Title":"C# highlight relevant property/field behaviour inconsistent in VS 2019","State":"closed","Body":"**Version Used**: \r\nVS 2019 16.8.3\r\n**Steps to Reproduce**:\r\n\r\nIn VS, when moving the cursor to an property, it highlights the relevant (same) properties. \r\nBut the behaviour is not consistent:\r\n\r\nIn the code below, we name first 'Id' in the Item class as **1**, the 'Id' in Where clause as **2**,  the 'Id' in the Select clause as **3**, and last, the 'Id' in ToDictionary as **4**.\r\n\r\n```\r\n        class Item\r\n        {\r\n            public int? Id { get; set; }\r\n        }\r\n\r\n\r\n        static void Main(string[] args)\r\n        {\r\n\r\n            var items = new Item[] { };\r\n\r\n\r\n            var allItems = items.AsQueryable()\r\n                .Where(x => x.Id.HasValue)\r\n                .ToList();\r\n\r\n            var subList = allItems.Select(x => new {x.Id})\r\n                .ToDictionary(x => x.Id.Value, x => new { });\r\n\r\n\r\n\r\n            Console.WriteLine(\"Press any key to continue...\");\r\n            Console.ReadKey();\r\n        }\r\n```\r\n\r\n1.  When cursor at **1**:  **1**, **2**, **3** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868728-73fdd280-4432-11eb-91ea-cb6463641295.png)\r\n\r\n2. When cursor at **2**:  **1**, **2**, **3** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868790-8c6ded00-4432-11eb-9d5c-6fdc24115a7b.png)\r\n\r\n3. When cursor at **3**:  **3**, **4** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868850-a5769e00-4432-11eb-99ea-7acddeb65ca6.png)\r\n\r\n4. When cursor at **4**:  **3**, **4** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868913-ba533180-4432-11eb-9761-b256bf2ad98e.png)\r\n\r\n\r\n**Expected Behavior**:\r\n\r\nThe highlight behaviour should be consistent. \r\n\r\n**Actual Behavior**:\r\n\r\nIt's not consistent: When seleting **1** and **2**, the **3** considered as relevant/same. but when selecting **3**, **1** and **2** are not.\r\n","Url":"https://github.com/dotnet/roslyn/issues/50100","RelatedDescription":"Closed issue \"C# highlight relevant property/field behaviour inconsistent in VS 2019\" (#50100)"},{"Id":"772767012","IsPullRequest":false,"CreatedAt":"2020-12-22T08:52:31","Actor":"stevenxi","Number":"50099","RawContent":null,"Title":"Inconsistent C# highlighting for property of anonymous type","State":"open","Body":"**Version Used**: \r\nVS 2019 16.8.3\r\n**Steps to Reproduce**:\r\n\r\nIn VS, when moving the cursor to an property, it highlights the relevant (same) properties. \r\nBut the behaviour is not consistent:\r\n\r\nIn the code below, we name first 'Id' in the Item class as **1**, the 'Id' in Where clause as **2**,  the 'Id' in the Select clause as **3**, and last, the 'Id' in ToDictionary as **4**.\r\n\r\n```\r\n        class Item\r\n        {\r\n            public int? Id { get; set; }\r\n        }\r\n\r\n\r\n        static void Main(string[] args)\r\n        {\r\n\r\n            var items = new Item[] { };\r\n\r\n\r\n            var allItems = items.AsQueryable()\r\n                .Where(x => x.Id.HasValue)\r\n                .ToList();\r\n\r\n            var subList = allItems.Select(x => new {x.Id})\r\n                .ToDictionary(x => x.Id.Value, x => new { });\r\n\r\n\r\n\r\n            Console.WriteLine(\"Press any key to continue...\");\r\n            Console.ReadKey();\r\n        }\r\n```\r\n\r\n1.  When cursor at **1**:  **1**, **2**, **3** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868728-73fdd280-4432-11eb-91ea-cb6463641295.png)\r\n\r\n2. When cursor at **2**:  **1**, **2**, **3** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868790-8c6ded00-4432-11eb-9d5c-6fdc24115a7b.png)\r\n\r\n3. When cursor at **3**:  **3**, **4** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868850-a5769e00-4432-11eb-99ea-7acddeb65ca6.png)\r\n\r\n4. When cursor at **4**:  **3**, **4** are highlighted\r\n![image](https://user-images.githubusercontent.com/3340119/102868913-ba533180-4432-11eb-9761-b256bf2ad98e.png)\r\n\r\n\r\n**Expected Behavior**:\r\n\r\nThe highlight behaviour should be consistent. \r\n\r\n**Actual Behavior**:\r\n\r\nIt's not consistent: When seleting **1** and **2**, the **3** considered as relevant/same. but when selecting **3**, **1** and **2** are not.\r\n","Url":"https://github.com/dotnet/roslyn/issues/50099","RelatedDescription":"Open issue \"Inconsistent C# highlighting for property of anonymous type\" (#50099)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"705078013","IsPullRequest":true,"CreatedAt":"2020-11-01T06:31:20","Actor":"RalfKornmannEnvision","Number":"8345","RawContent":null,"Title":"ARM64&Unix: New unwinder","State":"closed","Body":"Implements a custom unwinder for ARM64 that does not need the generic CFI based libunwind functions. This way we only need to loop just once over all used registers instead of doing the complicated CFI process.This will improve the performances for everything that needs a stack walk.\r\n\r\nAdditional unwind data are generated and stored as part of the LSDA. \r\n-4 byte for a relative offset\r\n-3 byte for the CFA\r\n-3 byte for each register that is part of the prolog save\r\n-1 byte end marker\r\n\r\nWe still keep the CFI data for the debugger. Maybe the could be removed for a build without debug information.\r\n\r\nA possible future optimization would be to introduce a compact format for the information used by the most common cases. This could be stored in the relative offset. But compared to the replacement of libunwind the wins would be rather small.\r\n\r\nThe same can be done for any  other supported architecture but each one will require a custom unwind function","Url":"https://github.com/dotnet/corert/pull/8345","RelatedDescription":"Closed or merged PR \"ARM64&Unix: New unwinder\" (#8345)"},{"Id":"727422211","IsPullRequest":true,"CreatedAt":"2020-10-30T17:18:29","Actor":"tonerdo","Number":"8370","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"Opening this here, since I don't yet have a branch in the runtimelabs repo.\r\n\r\nThis PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass DynamicClass1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n    public Random Field4 = new Random();\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    static DynamicClass1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    DynamicClass1 class1 = new DynamicClass1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n    Console.WriteLine(class1.Field4);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(DynamicClass1.StaticField1);\r\n    Console.WriteLine(string.Empty);\r\n    Console.WriteLine(DynamicClass1.StaticField2);\r\n    Console.WriteLine(DynamicClass1.StaticField3);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n\r\n_Note: Thread statics on dynamically loaded types are currently unsupported_\r\n\r\ncc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/8370","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8370)"},{"Id":"729561793","IsPullRequest":false,"CreatedAt":"2020-10-26T13:26:47","Actor":"itpleb","Number":"8371","RawContent":null,"Title":"how run it on openwrt arm v7?","State":"open","Body":"how run it on openwrt arm v7?","Url":"https://github.com/dotnet/corert/issues/8371","RelatedDescription":"Open issue \"how run it on openwrt arm v7?\" (#8371)"},{"Id":"725550980","IsPullRequest":false,"CreatedAt":"2020-10-20T12:48:05","Actor":"unlimitedcoder2","Number":"8369","RawContent":null,"Title":"Fails to dotnet publish.","State":"open","Body":"I folowwed the instructons from [Here](https://github.com/dotnet/corert/tree/master/samples/WebApi) It fails to build because it cannot find objwriter\r\nThere is a `libobjwriter.so` in `.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/` and I copied it to the same dir but with the name `objwriter.so` and it did not resolve the issue.\r\n\r\n```\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/alex/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/build/Microsoft.NETCore.Native.targets(231,5): error MSB3073: The command \"\"/home/alex/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/ilc\" @\"obj/Release/netcoreapp3.1/linux-x64/native/robloxility.ilc.rsp\"\" exited with code 1. [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/8369","RelatedDescription":"Open issue \"Fails to dotnet publish.\" (#8369)"},{"Id":"706262388","IsPullRequest":false,"CreatedAt":"2020-10-17T14:39:00","Actor":"teobugslayer","Number":"8347","RawContent":null,"Title":"Missing implementation of System.OperatingSystem.IsWindows","State":"closed","Body":"Hi all,\r\n\r\nI am trying to write cross-platform code and my attempt to use `IsWindows` and `IsWindowsVersionAtLeast` fails:\r\n\r\n```\r\n  Generating native code\r\nEXEC : warning : Method `[ZX]ZX.ConsoleDisplay.Init(int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindows() [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\nEXEC : warning : Method `[ZX]ZX.Program.ValidateCanRun()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindowsVersionAtLeast(Int32, Int32, Int32, Int32) [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\n```\r\n\r\nWhat are my options to rectify the problem?","Url":"https://github.com/dotnet/corert/issues/8347","RelatedDescription":"Closed issue \"Missing implementation of System.OperatingSystem.IsWindows\" (#8347)"},{"Id":"723206180","IsPullRequest":false,"CreatedAt":"2020-10-16T14:53:15","Actor":"atErik","Number":"8368","RawContent":null,"Title":"Great Project","State":"closed","Body":"Hi,  \r\nthis transpiler should be improved further.\r\ni have Starred this project.\r\n\r\nBTW , i have mentioned it here in SO(StackOverflow) site , would you please upvote it [here](https://stackoverflow.com/questions/64180191/) ( please upvote my Question+Answer, both ) if you find it useful or if you think it will be helpful for other users related to this type of transpiler projects.  \r\n( and please downvote user Caleb's answer, as that is incorrect answer . Correct-answer must answer my questions first , My question is about \"Transpiler\" tools & which \"transpiler\" tool can keep high-level algorithms/structures intact , Question/article is NOT about language learning, when to transpile & when-not, etc.  \r\nIn SO site, user Flimzy (and Caleb) doesn't give advice When \"C/C++\",etc to \"Go\" conversion related question is posted or when \"C/C++\" is criticized , But when \"Go\"-to-\"C/C++\",etc conversion Question is posted or when Google based products (like \"Go\"-language) are criticized , then those users, especially Flimzy \"Close\" the question & downvotes, & gives many un-asked advices, etc, Because those users are Google PUSHERS & google based product (like \"Go\") PUSHERS . Google Crimes<sup>[1](https://en.wikipedia.org/wiki/Criticism_of_Google), [2](https://en.wikipedia.org/wiki/Google_litigation), [3](https://www.bbc.com/news/business-52887340), [4](https://www.reuters.com/article/us-alphabet-google-privacy-lawsuit-idUSKBN23933H), [5](https://www.nytimes.com/2020/09/21/technology/google-antitrust-justice-department.html), [6](https://www.nationalreview.com/news/department-of-justice-state-attorneys-general-to-sue-google-for-antitrust-violations-report/)</sup>. Problems in \"Go\"<sup>[1](https://bravenewgeek.com/go-is-unapologetically-flawed-heres-why-we-use-it/)</sup>. )\r\n\r\nThanks.\r\n\r\nEDIT : added a line that i have Starred this project.","Url":"https://github.com/dotnet/corert/issues/8368","RelatedDescription":"Closed issue \"Great Project\" (#8368)"},{"Id":"723040495","IsPullRequest":false,"CreatedAt":"2020-10-16T09:07:22","Actor":"andreakarasho","Number":"8367","RawContent":null,"Title":"GitHub actions - clang fails on Ubuntu","State":"closed","Body":"I'm playing a little bit with gh actions.\r\nTo compile the application i need to setup 3 envs [windows, macOS, linux].\r\n\r\nOn Ubuntu i get this error when publishing the file:\r\n\r\n```\r\n/usr/bin/clang\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\n```","Url":"https://github.com/dotnet/corert/issues/8367","RelatedDescription":"Closed issue \"GitHub actions - clang fails on Ubuntu\" (#8367)"},{"Id":"719590628","IsPullRequest":true,"CreatedAt":"2020-10-16T02:54:11","Actor":"Rattenkrieg","Number":"8364","RawContent":null,"Title":"prevent runtime shutdown while foreground threads keep running","State":"closed","Body":"- [x] hack code\r\n- [x] make `GC_Scenarios._BinTree_thdtree_thdtree_._BinTree_thdtree_thdtree_sh`, `GC_Scenarios._BinTree_thdtreegrowingobj_thdtreegrowingobj_._BinTree_thdtreegrowingobj_thdtreegrowingobj_sh`, `GC_Scenarios._BinTree_thdtreelivingobj_thdtreelivingobj_._BinTree_thdtreelivingobj_thdtreelivingobj_sh` green\r\nI have issues with `./tests/runtest.sh release -coreclr Top200` either hanging on these three or exiting with 134 code.\r\nWhen I run it manually by `CORE_ROOT=./tests_downloaded/CoreCLR/Tests/Core_Root ./tests_downloaded/CoreCLR/GC/Scenarios/BinTree/thdtreegrowingobj/thdtreegrowingobj.sh` everithing works fine. I guess I've introduced some threading issue to xUnit runners.\r\n- [x] find some tests for foreground threads in CoreCLR or make our own \r\n\r\n\r\nSimplified logic adopted from CoreCLR with no additional states like `m_UnstartedThreadCount`, `m_PendingThreadCount` etc.\r\n","Url":"https://github.com/dotnet/corert/pull/8364","RelatedDescription":"Closed or merged PR \"prevent runtime shutdown while foreground threads keep running\" (#8364)"},{"Id":"714300525","IsPullRequest":true,"CreatedAt":"2020-10-15T00:10:17","Actor":"kant2002","Number":"8355","RawContent":null,"Title":"Display which type providing compiler helper is missing","State":"closed","Body":"I add these changes when I attempt to troubleshoot custom runtime and it failed that type was missing without indication why it want that type in first place. Have to know method which compiler want to use helps me troubleshoot what I should do.","Url":"https://github.com/dotnet/corert/pull/8355","RelatedDescription":"Closed or merged PR \"Display which type providing compiler helper is missing\" (#8355)"},{"Id":"721081874","IsPullRequest":false,"CreatedAt":"2020-10-14T02:25:12","Actor":"jkotas","Number":"8366","RawContent":null,"Title":"This repo is going to be archived on October 31, 2020","State":"open","Body":"We are centralizing all experimental projects based on dotnet/runtime in a new https://github.com/dotnet/runtimelab repo. More details about this effort are in https://github.com/dotnet/runtime/issues/35609 .\r\n\r\nRuntime optimized for AOT and RyuJIT codegen backend that were the two largest and most mature CoreRT components have been moved to their new place at https://github.com/dotnet/runtimelab/tree/feature/NativeAOT . The engineering infrastructure is setup, the packages are being published to a new NuGet feed and we are ready to start taking contributions. As with any new developer workflow, we know that there will be rough edges. Please help us smooth them out!\r\n\r\nCoreRT is dead, long live NativeAOT!\r\n\r\nWe would like to keep the experiments in dotnet/runtimelab more focused. Let’s use this issue to discuss what else would make sense to move over and in what form. I will be happy to sponsor experiments with significant interest. This includes the wasm target that @yowl has been relentlessly working on.","Url":"https://github.com/dotnet/corert/issues/8366","RelatedDescription":"Open issue \"This repo is going to be archived on October 31, 2020\" (#8366)"},{"Id":"718828491","IsPullRequest":false,"CreatedAt":"2020-10-13T13:40:40","Actor":"ryancheung","Number":"8363","RawContent":null,"Title":"Ubuntu 20.04 dotnet publish failed","State":"closed","Body":"Command: `dotnet publish -r linux-x64 -c Release`\r\nCoreRT publish failed in ubuntu 20.04 with the following build error:\r\n\r\n***\r\n  /usr/bin/clang\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  /usr/bin/ld: cannot find ***-lgssapi_krb5***\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n/home/ryan/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/build/Microsoft.NETCore.Native.targets(327,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL.o\" -o \"bin/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL\" /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libbootstrapper.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libRuntime.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.CoreLib.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.TypeLoader.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Globalization.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.IO.Compression.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Net.Security.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -Wl,--discard-all -Wl,--gc-sections\" exited with code 1. [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n***\r\n\r\nTemporary workaround I found:\r\n1. `cd /usr/lib/x86_64-linux-gnu`\r\n2. `sudo ln -s libgssapi_krb5.so.2.2 libgssapi_krb5.so`","Url":"https://github.com/dotnet/corert/issues/8363","RelatedDescription":"Closed issue \"Ubuntu 20.04 dotnet publish failed\" (#8363)"},{"Id":"720044433","IsPullRequest":false,"CreatedAt":"2020-10-13T10:03:24","Actor":"darderik","Number":"8365","RawContent":null,"Title":"Question about Marshalling of data structures across C++/C#","State":"closed","Body":"Hello, following the solution provided to the issue [#6984 ](https://github.com/dotnet/corert/issues/6984) , I tried playing around with the return of data structures from C++ to C#, as i couldn't find an issue related to this kind of operation, I thought about opening one in order to receive a few heads-up on the topic.\r\n\r\n\r\nC++ Code\r\n```\r\nstruct myStruct {\r\n    int ok;\r\n    string testStr;\r\n} ;\r\nextern \"C\" myStruct entry() {\r\n    myStruct myStu;\r\n    myStu.ok = 1;\r\n    myStu.testStr = \"hello\";\r\n    return myStu;\r\n}\r\n```\r\n\r\nC# Code\r\n```\r\nnamespace CppInterop\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic ok = entry();\r\n        }\r\n        [DllImport(\"*\")]\r\n        public extern static dynamic entry();\r\n    }\r\n}\r\n```\r\n\r\n\r\nAs expected, i get this error\r\n```\r\nUnhandled Exception: System.Exception: Method '[CppInterop]CppInterop.Program.entry()' requires marshalling that is not yet supported by this compiler.\r\n   at CppInterop.Program.entry() + 0x30\r\n   at CppInterop!<BaseAddress>+0x1e9b2d\r\nAborted\r\n```\r\n\r\nI was wondering if there was another way (as I know that dynamic isn't  aot friendly at all) to pass data structures (or objects) back from cpp , in the particular case that i know exactly how is the passed object structured.\r\nThank you for the help 👍 ","Url":"https://github.com/dotnet/corert/issues/8365","RelatedDescription":"Closed issue \"Question about Marshalling of data structures across C++/C#\" (#8365)"},{"Id":"718717259","IsPullRequest":false,"CreatedAt":"2020-10-10T22:48:19","Actor":"Rattenkrieg","Number":"8362","RawContent":null,"Title":"Error on tests/runtest.sh -coreclr All","State":"open","Body":"Tested on Fedora 32, as per `runtest.cmd` should affect Windows as well.\r\nOn \"all\" selection `-test_filter_path` parameter for `tests/CoreCLR/runtest.py` is omitted and we getting into this branch:\r\nhttps://github.com/dotnet/corert/blob/b06c72e12f24523dfe58717328a3de1b9f37a397/tests/CoreCLR/runtest.py#L1873-L1874\r\nThere is no `tests/issues.targets` file. Probably [this one](https://github.com/dotnet/runtime/blob/master/src/tests/issues.targets) meant to be used but somehow wasn't added. Git history gives no clue.\r\nI see this wasn't detected because `tests/runtest.sh -coreclr` defaults to Top200.","Url":"https://github.com/dotnet/corert/issues/8362","RelatedDescription":"Open issue \"Error on tests/runtest.sh -coreclr All\" (#8362)"},{"Id":"718107191","IsPullRequest":false,"CreatedAt":"2020-10-09T13:41:43","Actor":"maikebing","Number":"8361","RawContent":null,"Title":"What's the difference between corert  and   runtimelab‘s  NativeAOT ？","State":"closed","Body":" ","Url":"https://github.com/dotnet/corert/issues/8361","RelatedDescription":"Closed issue \"What's the difference between corert  and   runtimelab‘s  NativeAOT ？\" (#8361)"},{"Id":"715288580","IsPullRequest":true,"CreatedAt":"2020-10-09T12:23:48","Actor":"drvoss","Number":"8358","RawContent":null,"Title":"Update LoadLibrary.c","State":"closed","Body":"Support Visual C++ compiler","Url":"https://github.com/dotnet/corert/pull/8358","RelatedDescription":"Closed or merged PR \"Update LoadLibrary.c\" (#8358)"},{"Id":"717888122","IsPullRequest":false,"CreatedAt":"2020-10-09T06:24:33","Actor":"DenMpei","Number":"8360","RawContent":null,"Title":"Generating native code with Grpc.Core","State":"open","Body":"Good day!\r\n\r\nI hit the following issue:\r\ndotnet publish -r win-x64 leads to numerous compilation errors\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95550016-e56fdc80-0a10-11eb-86f1-3de6b52cbe58.png)\r\n\r\nInside the package is used Grpc.Core 2.28.1\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95549756-85793600-0a10-11eb-8411-a9149078d7ea.png)\r\n\r\nСompile with Microsoft.DotNet.ILCompiler 1.0.0-alpha-29408-02\r\n\r\nAdding code from [this issue](https://github.com/dotnet/corert/issues/6375) doesn't help\r\n\r\nI ask to give advice to solve the problem.\r\nRegards.","Url":"https://github.com/dotnet/corert/issues/8360","RelatedDescription":"Open issue \"Generating native code with Grpc.Core\" (#8360)"},{"Id":"715809353","IsPullRequest":false,"CreatedAt":"2020-10-06T15:48:07","Actor":"kant2002","Number":"8359","RawContent":null,"Title":"\"The input line is too long\" during build","State":"open","Body":"When I build CoreRT from command line in x64 dev command line there error after some time\r\n\r\n```\r\n>build.cmd\r\nDoing a clean build\r\n\r\nCould Not Find D:\\d\\kant\\GitHub\\dotnet\\corert\\bin\\Logs\\*_Windows_NT__x64__Debug.*\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\nThe input line is too long.\r\nThe syntax of the command is incorrect.\r\n```\r\n\r\nMy prior experience suggest that this is happens during call of \r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n```\r\n\r\nThis is happens IIRC due to long PATH variable.","Url":"https://github.com/dotnet/corert/issues/8359","RelatedDescription":"Open issue \"\"The input line is too long\" during build\" (#8359)"},{"Id":"713872400","IsPullRequest":true,"CreatedAt":"2020-10-05T13:52:47","Actor":"yowl","Number":"8352","RawContent":null,"Title":"Wasm: dont `RhpAssignRef` static fields","State":"closed","Body":"This PR changes the implementation of `stsfld` so that `RhpAssignRef` is not called when storing a gc  pointer in a static field.  For example, previous to this change, https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/System.Private.CoreLib/shared/System/AttributeUsageAttribute.cs#L23 resulted in a call to `RhpAssignRef` in the cctor.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/8352","RelatedDescription":"Closed or merged PR \"Wasm: dont `RhpAssignRef` static fields\" (#8352)"},{"Id":"709808614","IsPullRequest":true,"CreatedAt":"2020-10-05T03:15:02","Actor":"yowl","Number":"8350","RawContent":null,"Title":"Wasm: add support for most of the conv_ovf operations","State":"closed","Body":"This PR adds support for overflow checking for Wasm for most of the Conv_Ovf opcodes. Still to do are two of native int: `Conv_Ovf_I`, `Conv_Ovf_I_Un` . (`Conv_Ovf_U` is included here).  Was going to wait until c#9 was available to do the missing ones.","Url":"https://github.com/dotnet/corert/pull/8350","RelatedDescription":"Closed or merged PR \"Wasm: add support for most of the conv_ovf operations\" (#8350)"},{"Id":"714361340","IsPullRequest":true,"CreatedAt":"2020-10-05T02:02:26","Actor":"yowl","Number":"8357","RawContent":null,"Title":"Wasm: clean up ovf switch for floats.","State":"closed","Body":"This PR removes the TODO and switches for the add/sub/mul _ovf op codes for floats as they dont apply.","Url":"https://github.com/dotnet/corert/pull/8357","RelatedDescription":"Closed or merged PR \"Wasm: clean up ovf switch for floats.\" (#8357)"},{"Id":"714319950","IsPullRequest":false,"CreatedAt":"2020-10-04T13:58:23","Actor":"kengwang","Number":"8356","RawContent":null,"Title":"\"Segmentation fault\" on CentOS 7.8","State":"open","Body":"When I tried to start the program, it echoed `Segmentation fault`\r\nIt is alright running on Ubuntu.\r\n\r\n> Build on ubuntu-16.04\r\n> Run on CentOS Linux release 7.8.2003 (Core)\r\n\r\nHow could i deal with it","Url":"https://github.com/dotnet/corert/issues/8356","RelatedDescription":"Open issue \"\"Segmentation fault\" on CentOS 7.8\" (#8356)"},{"Id":"714296090","IsPullRequest":false,"CreatedAt":"2020-10-04T11:45:29","Actor":"kant2002","Number":"8354","RawContent":null,"Title":"CoreRT slower then regular .NET","State":"open","Body":"I thinking about checking how CoreRT works for the Wavelets and decide to use https://github.com/codeprof/TurboWavelets.Net as starting point.\r\n\r\nI migrate project to new SDK format and add Benchmarks.Net using samples provided.\r\n\r\nTo my disappointment regular .NET seems to be faster then CoreRT. \r\n\r\n```\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.12.1.1420-nightly, OS=Windows 10.0.18363.1082 (1909/November2019Update/19H2)\r\nIntel Core i7-6700HQ CPU 2.60GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET SDK=5.0.100-rc.1.20452.10\r\n  [Host]     : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  .NET 5.0   : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  CoreRt 5.0 : .NET 5.0.29330.02 @BuiltBy: dlab14-DDVSOWINAGE075 @Branch: master @Commit: 145402e00724acbc9e7636739140fb84f7d64845, X64 AOT\r\n\r\n\r\n|                Method |        Job |    Runtime |      Mean |    Error |   StdDev | Ratio | RatioSD |\r\n|---------------------- |----------- |----------- |----------:|---------:|---------:|------:|--------:|\r\n| Waveletimageupscaling |   .NET 5.0 |   .NET 5.0 | 155.72 ms | 3.267 ms | 9.426 ms |  1.00 |    0.00 |\r\n| Waveletimageupscaling | CoreRt 5.0 | CoreRt 5.0 | 167.68 ms | 3.303 ms | 9.478 ms |  1.08 |    0.09 |\r\n|                       |            |            |           |          |          |       |         |\r\n|      AdaptiveDeadzone |   .NET 5.0 |   .NET 5.0 |  30.40 ms | 0.588 ms | 0.764 ms |  1.00 |    0.00 |\r\n|      AdaptiveDeadzone | CoreRt 5.0 | CoreRt 5.0 |  33.79 ms | 0.683 ms | 1.763 ms |  1.14 |    0.08 |\r\n```\r\n\r\nSo I have generic questions.\r\n1. Does this results expected with CPU-bound workloads.\r\n2. What can I do to look more closely on this particular case.","Url":"https://github.com/dotnet/corert/issues/8354","RelatedDescription":"Open issue \"CoreRT slower then regular .NET\" (#8354)"},{"Id":"713880348","IsPullRequest":true,"CreatedAt":"2020-10-02T22:17:06","Actor":"yowl","Number":"8353","RawContent":null,"Title":"Wasm: Use the property for ShadowStackTop to ensure global exists","State":"closed","Body":"Depending on input, the first call to a RawPInvoke could occur before the shadow stack global was added.  This change requests the global via the property getter to ensure it is created before use.","Url":"https://github.com/dotnet/corert/pull/8353","RelatedDescription":"Closed or merged PR \"Wasm: Use the property for ShadowStackTop to ensure global exists\" (#8353)"},{"Id":"710664867","IsPullRequest":true,"CreatedAt":"2020-09-29T11:40:22","Actor":"tonerdo","Number":"8351","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"This PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass Class1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    [ThreadStatic]\r\n    public static int ThreadStaticField1;\r\n\r\n    static Class1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n        ThreadStaticField1 = 56;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    Class1 class1 = new Class1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(Class1.StaticField1);\r\n    Console.WriteLine(String.Empty);\r\n    Console.WriteLine(Class1.StaticField2);\r\n    Console.WriteLine(Class1.StaticField3);\r\n    Console.WriteLine(Class1.ThreadStaticField1);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n","Url":"https://github.com/dotnet/corert/pull/8351","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8351)"},{"Id":"709649946","IsPullRequest":false,"CreatedAt":"2020-09-27T02:19:00","Actor":"yowl","Number":"8349","RawContent":null,"Title":"Wasm: conv_r_un/4 should set to postive or negative infinity when too large","State":"open","Body":"","Url":"https://github.com/dotnet/corert/issues/8349","RelatedDescription":"Open issue \"Wasm: conv_r_un/4 should set to postive or negative infinity when too large\" (#8349)"},{"Id":"709582502","IsPullRequest":false,"CreatedAt":"2020-09-26T17:59:41","Actor":"yowl","Number":"8348","RawContent":null,"Title":"Question: ImportConvert unsigned parameter is always false","State":"open","Body":"`ImportConvert` in https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/Common/src/TypeSystem/IL/ILImporter.cs#L745-L766 is always passed `false` for the `unsigned` parameter (the last parameter), even on the unsigned conversions, `conv_ovf_u1`  Is there a reason for that?","Url":"https://github.com/dotnet/corert/issues/8348","RelatedDescription":"Open issue \"Question: ImportConvert unsigned parameter is always false\" (#8348)"},{"Id":"704206710","IsPullRequest":true,"CreatedAt":"2020-09-22T00:29:41","Actor":"RalfKornmannEnvision","Number":"8343","RawContent":null,"Title":"ARM64: RhpGcPoll","State":"closed","Body":"- Initial port of GCProbe.S for ARM64\r\n- Ensure RhpGcPoll & RhpGcPollRare are working","Url":"https://github.com/dotnet/corert/pull/8343","RelatedDescription":"Closed or merged PR \"ARM64: RhpGcPoll\" (#8343)"},{"Id":"705253015","IsPullRequest":false,"CreatedAt":"2020-09-21T03:12:25","Actor":"Powerlated","Number":"8346","RawContent":null,"Title":"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method ","State":"open","Body":"```\r\nUnhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nI am attempting to `dotnet publish -r win-x64 -c Release` a program and I receieve this error after the `Generating compatible native code.` message.","Url":"https://github.com/dotnet/corert/issues/8346","RelatedDescription":"Open issue \"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method \" (#8346)"},{"Id":"704803194","IsPullRequest":true,"CreatedAt":"2020-09-19T05:02:42","Actor":"toddsharpe","Number":"8344","RawContent":null,"Title":"Merge pull request #1 from dotnet/master","State":"closed","Body":"Updating CoreRT","Url":"https://github.com/dotnet/corert/pull/8344","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from dotnet/master\" (#8344)"},{"Id":"704118291","IsPullRequest":true,"CreatedAt":"2020-09-18T14:58:08","Actor":"RalfKornmannEnvision","Number":"8342","RawContent":null,"Title":"ARM64: Additional debug checks during exception handling","State":"closed","Body":"- Reenable stored register trashing as the debugger has no issues with it.\r\n- Implement missing call to RhpValidateExInfoPop","Url":"https://github.com/dotnet/corert/pull/8342","RelatedDescription":"Closed or merged PR \"ARM64: Additional debug checks during exception handling\" (#8342)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"774729580","IsPullRequest":true,"CreatedAt":"2020-12-25T22:36:50","Actor":"dotnet-maestro[bot]","Number":"15092","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201224.8\r\n- **Date Produced**: 12/25/2020 7:41 AM\r\n- **Commit**: 96c97c2cf48a4dc2bd9365c67f442b68514a007c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/adacdc0...96c97c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15092","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#15092)"},{"Id":"774655616","IsPullRequest":true,"CreatedAt":"2020-12-25T07:00:06","Actor":"dotnet-maestro[bot]","Number":"15091","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201224.3\r\n- **Date Produced**: 12/25/2020 6:48 AM\r\n- **Commit**: 7a2f5cc0c4a8212d2628e99e9918b4632aa4f344\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20624.2 to 6.0.0-alpha.1.20624.3][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/4900ad4...7a2f5cc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15091","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/aspnetcore\" (#15091)"},{"Id":"774421953","IsPullRequest":true,"CreatedAt":"2020-12-24T19:06:28","Actor":"dotnet-maestro[bot]","Number":"15089","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20201223.2\r\n- **Date Produced**: 12/23/2020 2:41 PM\r\n- **Commit**: 7d87394075e5af4be83239ceb54ba708c3227c86\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 6.0.0-alpha.1.20622.2 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/8d40d73...7d87394\r\n[2]: https://github.com/dotnet/wpf/compare/63da6bf...e025681\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#15089)"},{"Id":"774420960","IsPullRequest":true,"CreatedAt":"2020-12-24T18:59:33","Actor":"dotnet-maestro[bot]","Number":"15088","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 11:54 AM\r\n- **Commit**: adacdc0c9057f755f09b19ceaf1fde15af5278a6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a70005f...adacdc0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15088","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#15088)"},{"Id":"774365570","IsPullRequest":true,"CreatedAt":"2020-12-24T18:44:08","Actor":"dotnet-maestro[bot]","Number":"15087","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 9ac01057-d33d-4509-c9e1-08d846b6e5b9\r\n- **Build**: 20201224.1\r\n- **Date Produced**: 12/24/2020 12:07 PM\r\n- **Commit**: 6d05762d54a56309e49e6d8b70dca272e78e3e19\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20624.1][1]\r\n\r\n[1]: https://github.com/mono/linker/compare/8ecdb90...6d05762\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15087","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from mono/linker\" (#15087)"},{"Id":"774500810","IsPullRequest":true,"CreatedAt":"2020-12-24T17:52:14","Actor":"dotnet-maestro[bot]","Number":"15090","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 3:56 PM\r\n- **Commit**: 4900ad44cb953a0742f6e49bb0607f7a8876cf2e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20623.2 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/76f1cc2...4900ad4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15090","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#15090)"},{"Id":"774329617","IsPullRequest":true,"CreatedAt":"2020-12-24T13:52:29","Actor":"dotnet-maestro[bot]","Number":"15086","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20201224.2\r\n- **Date Produced**: 12/24/2020 12:00 PM\r\n- **Commit**: 3e87760abcc615da236bc48995fc0e6f65e7577b\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateSearch.Common**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.TemplateEngine.Orchestrator.RunnableProjects**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.DotNet.Common.ItemTemplates**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.TemplateEngine.Cli**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.TemplateEngine.Cli.Localization**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n  - **Microsoft.TemplateEngine.Utils**: [from 6.0.0-alpha.1.20623.1 to 6.0.0-alpha.1.20624.2][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/0bc66cf...3e87760\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#15086)"},{"Id":"774116526","IsPullRequest":true,"CreatedAt":"2020-12-24T06:33:25","Actor":"dotnet-maestro[bot]","Number":"15085","RawContent":null,"Title":"[release/5.0.2xx] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: d03fdba9-1cb5-4e2e-f455-08d8707111d9\r\n- **Build**: 20201223.5\r\n- **Date Produced**: 12/24/2020 12:51 AM\r\n- **Commit**: ae1ec7aa712e2f766e7733f5f1d6dd9bfb39d3dc\r\n- **Branch**: refs/heads/release/dev16.9\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: [from 11.0.0-beta.20623.4 to 11.0.0-beta.20623.5][1]\r\n\r\n[1]: https://github.com/dotnet/fsharp/compare/d598cf4...ae1ec7a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15085","RelatedDescription":"Closed or merged PR \"[release/5.0.2xx] Update dependencies from dotnet/fsharp\" (#15085)"},{"Id":"774109850","IsPullRequest":true,"CreatedAt":"2020-12-24T04:19:47","Actor":"dotnet-maestro[bot]","Number":"15084","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20201223.4\r\n- **Date Produced**: 12/24/2020 12:16 AM\r\n- **Commit**: 3771331700abe929950fa2331fb9a6a3040dec10\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.9.0-4.20622.12 to 3.9.0-4.20623.4][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/3446772...3771331\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn\" (#15084)"},{"Id":"774039226","IsPullRequest":true,"CreatedAt":"2020-12-24T03:52:32","Actor":"dotnet-maestro[bot]","Number":"15082","RawContent":null,"Title":"[release/5.0.2xx] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db43a0c8-ef90-4004-e15e-08d8706e3379)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: db43a0c8-ef90-4004-e15e-08d8706e3379\r\n- **Build**: 20201223.1\r\n- **Date Produced**: 12/23/2020 8:50 PM\r\n- **Commit**: a2c42ce9fc8d6fbd4a8cd600073803b8687c9341\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: [from 16.9.0-preview-20621-02 to 16.9.0-preview-20623-01][1]\r\n  - **Microsoft.Build**: [from 16.9.0-preview-20621-02 to 16.9.0-preview-20623-01][1]\r\n\r\n[1]: https://github.com/dotnet/msbuild/compare/0e8461c...a2c42ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db43a0c8-ef90-4004-e15e-08d8706e3379)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15082","RelatedDescription":"Closed or merged PR \"[release/5.0.2xx] Update dependencies from dotnet/msbuild\" (#15082)"},{"Id":"774004838","IsPullRequest":true,"CreatedAt":"2020-12-23T23:50:10","Actor":"dotnet-maestro[bot]","Number":"15080","RawContent":null,"Title":"[release/5.0.2xx] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: d03fdba9-1cb5-4e2e-f455-08d8707111d9\r\n- **Build**: 20201223.4\r\n- **Date Produced**: 12/23/2020 9:38 PM\r\n- **Commit**: d598cf4faf6e22a04a13111325503f3fa6860a32\r\n- **Branch**: refs/heads/release/dev16.9\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: [from 11.0.0-beta.20622.10 to 11.0.0-beta.20623.4][1]\r\n\r\n[1]: https://github.com/dotnet/fsharp/compare/b03075a...d598cf4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15080","RelatedDescription":"Closed or merged PR \"[release/5.0.2xx] Update dependencies from dotnet/fsharp\" (#15080)"},{"Id":"774092174","IsPullRequest":true,"CreatedAt":"2020-12-23T23:28:36","Actor":"dotnet-maestro-bot","Number":"15083","RawContent":null,"Title":"[automated] Merge branch 'release/5.0.2xx' => 'master'","State":"open","Body":"I detected changes in the release/5.0.2xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.2xx by the following committers:\n\n* dsplaisted\n* dotnet-maestro[bot]\n* rainersigwald\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.2xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.2xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.2xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.2xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.2xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.2xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.2xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/15083","RelatedDescription":"Open PR \"[automated] Merge branch 'release/5.0.2xx' => 'master'\" (#15083)"},{"Id":"774039191","IsPullRequest":true,"CreatedAt":"2020-12-23T22:58:08","Actor":"dotnet-maestro[bot]","Number":"15081","RawContent":null,"Title":"[master] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20201223.1\r\n- **Date Produced**: 12/23/2020 8:50 PM\r\n- **Commit**: a2c42ce9fc8d6fbd4a8cd600073803b8687c9341\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: [from 16.9.0-preview-20621-02 to 16.9.0-preview-20623-01][1]\r\n  - **Microsoft.Build**: [from 16.9.0-preview-20621-02 to 16.9.0-preview-20623-01][1]\r\n\r\n[1]: https://github.com/dotnet/msbuild/compare/0e8461c...a2c42ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15081","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/msbuild\" (#15081)"},{"Id":"773900168","IsPullRequest":true,"CreatedAt":"2020-12-23T20:40:47","Actor":"dotnet-maestro[bot]","Number":"15076","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20201223.2\r\n- **Date Produced**: 12/23/2020 3:41 PM\r\n- **Commit**: 76f1cc27f200933d02d516a8c3711216aef4129e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **dotnet-watch**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **dotnet-user-secrets**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **dotnet-dev-certs**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NET.Sdk.Razor**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/224c373...76f1cc2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#15076)"},{"Id":"773992838","IsPullRequest":true,"CreatedAt":"2020-12-23T19:39:23","Actor":"gewarren","Number":"15078","RawContent":null,"Title":"Fix DefaultItemExcludesInProjectFolder","State":"closed","Body":"Not sure if this is correct...","Url":"https://github.com/dotnet/sdk/pull/15078","RelatedDescription":"Closed or merged PR \"Fix DefaultItemExcludesInProjectFolder\" (#15078)"},{"Id":"773997247","IsPullRequest":false,"CreatedAt":"2020-12-23T19:18:37","Actor":"sdmaclea","Number":"15079","RawContent":null,"Title":"Update master templates to reference net6.0","State":"open","Body":"Testing dotnet-sdk-6.0.100-alpha.1.20623.4-osx-arm64.tar.gz\r\n\r\nI noticed the templates are still referencing `net5.0`\r\n\r\n```\r\n% ./dotnet --info \r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100-alpha.1.20623.4\r\n Commit:    9ce64552b6\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  11.2\r\n OS Platform: Darwin\r\n RID:         osx.11.0-arm64\r\n Base Path:   /Users/steve/git/dotnet/sdk/6.0.100-alpha.1.20623.4/\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0-alpha.1.20622.11\r\n  Commit:  a545d13cef\r\n\r\n.NET SDKs installed:\r\n  6.0.100-alpha.1.20623.4 [/Users/steve/git/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.0-alpha.1.20622.11 [/Users/steve/git/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.0-alpha.1.20622.11 [/Users/steve/git/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n% ./dotnet/dotnet new console -o hellowWorld\r\n\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on hellowWorld/hellowWorld.csproj...\r\n  Determining projects to restore...\r\n  Restored /Users/steve/git/hellowWorld/hellowWorld.csproj (in 2.46 sec).\r\nRestore succeeded.\r\n\r\nsteve@Toms-Mac-2 hellowWorld % ../dotnet/dotnet build  \r\nMicrosoft (R) Build Engine version 16.9.0-preview-20621-02+0e8461c69 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n                                                                               \r\n  Determining projects to restore...                                           \r\n  All projects are up-to-date for restore.\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\n  hellowWorld -> /Users/steve/git/hellowWorld/bin/Debug/net5.0/hellowWorld.dll\r\n                                                                                                                                                              \r\nBuild succeeded.                                                               \r\n    0 Warning(s)                                                               \r\n    0 Error(s)                                                                                                                                                \r\n                                       \r\nTime Elapsed 00:00:04.01       \r\nsteve@Toms-Mac-2 hellowWorld % ../dotnet/dotnet run  \r\nIt was not possible to find any compatible framework version\r\nThe framework 'Microsoft.NETCore.App', version '5.0.0' was not found.\r\n  - The following frameworks were found:\r\n      6.0.0-alpha.1.20622.11 at [/Users/steve/git/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nYou can resolve the problem by installing the specified framework and/or SDK.\r\n\r\nThe specified framework can be found at:\r\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App&framework_version=5.0.0&arch=arm64&rid=osx.11.0-arm64\r\n\r\nsteve@Toms-Mac-2 hellowWorld % cat hellowWorld.csproj \r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/sdk/issues/15079","RelatedDescription":"Open issue \"Update master templates to reference net6.0\" (#15079)"},{"Id":"773753820","IsPullRequest":true,"CreatedAt":"2020-12-23T19:16:54","Actor":"dotnet-maestro[bot]","Number":"15073","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201223.2\r\n- **Date Produced**: 12/23/2020 9:25 AM\r\n- **Commit**: a70005f4d89e03622b4dd3bea058f102e60702af\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20622.11 to 6.0.0-alpha.1.20623.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a545d13...a70005f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15073","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#15073)"},{"Id":"773456113","IsPullRequest":true,"CreatedAt":"2020-12-23T18:59:57","Actor":"dotnet-maestro[bot]","Number":"15070","RawContent":null,"Title":"[release/5.0.2xx] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: d03fdba9-1cb5-4e2e-f455-08d8707111d9\r\n- **Build**: 20201222.10\r\n- **Date Produced**: 12/23/2020 3:10 AM\r\n- **Commit**: b03075a7416f7b67bd072607c46c0aadd9bb6898\r\n- **Branch**: refs/heads/release/dev16.9\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: [from 11.0.0-beta.20616.7 to 11.0.0-beta.20622.10][1]\r\n\r\n[1]: https://github.com/dotnet/fsharp/compare/b3d8fdb...b03075a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d03fdba9-1cb5-4e2e-f455-08d8707111d9)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15070","RelatedDescription":"Closed or merged PR \"[release/5.0.2xx] Update dependencies from dotnet/fsharp\" (#15070)"},{"Id":"773908361","IsPullRequest":true,"CreatedAt":"2020-12-23T17:37:49","Actor":"dotnet-maestro[bot]","Number":"15077","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20201223.1\r\n- **Date Produced**: 12/23/2020 4:01 PM\r\n- **Commit**: 0bc66cfe5f6b0c61eeabfdbc718228705b2b1342\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateSearch.Common**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.TemplateEngine.Orchestrator.RunnableProjects**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.DotNet.Common.ItemTemplates**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.TemplateEngine.Cli**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.TemplateEngine.Cli.Localization**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n  - **Microsoft.TemplateEngine.Utils**: [from 6.0.0-alpha.1.20622.1 to 6.0.0-alpha.1.20623.1][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/45cc8cb...0bc66cf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15077","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#15077)"},{"Id":"773735996","IsPullRequest":true,"CreatedAt":"2020-12-23T15:52:39","Actor":"dotnet-maestro[bot]","Number":"15072","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20201221.12\r\n- **Date Produced**: 12/22/2020 1:57 AM\r\n- **Commit**: 3ba79fbd73d6765b67d0f75ac9dac148d6bea346\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20618.3 to 6.0.0-beta.20621.12][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20618.3 to 6.0.0-beta.20621.12][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20618.3 to 6.0.0-beta.20621.12][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 6.0.0-beta.20618.3 to 6.0.0-beta.20621.12][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e9b75e1...3ba79fb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#15072)"},{"Id":"773755564","IsPullRequest":true,"CreatedAt":"2020-12-23T15:00:42","Actor":"dotnet-maestro[bot]","Number":"15074","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 6.0.0-alpha.1.20618.1 to 6.0.0-alpha.1.20622.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20201222.2\r\n- **Date Produced**: 12/22/2020 2:26 PM\r\n- **Commit**: 8d40d735f2ea548ada8b8c38ce1642dc8a7acaf2\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20622.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20622.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20622.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 6.0.0-alpha.1.20618.1 to 6.0.0-alpha.1.20622.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/f211b93...8d40d73\r\n[2]: https://github.com/dotnet/wpf/compare/aae76f8...63da6bf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15074","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#15074)"},{"Id":"773820096","IsPullRequest":false,"CreatedAt":"2020-12-23T14:16:15","Actor":"alex6dj","Number":"15075","RawContent":null,"Title":"Console app args incorrect parsing","State":"open","Body":"Im creating a console app in net 5.0. It just recursively copy a directory to another.\r\n\r\nI just pass three args with each directory in this way.\r\n\r\nMainapp.exe \"source\" \"target\" \"deleteTarget(boolean)\"\r\n\r\nThe problem is when the source directory path ends with \\\"\r\nInstead of 3 arguments I get 2. The second containing all the others.\r\n\r\nA solution is to drop the slash at the end off the source path or use a double one \\\\\"\r\n\r\nIn my case is a simple console app to copy a VS solution output after building. Because Im using $(TargetDir) it already put that simbol at the path end and fails doing his job.\r\n\r\nUsing net v5.0.100 and VS v16.8.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/15075","RelatedDescription":"Open issue \"Console app args incorrect parsing\" (#15075)"},{"Id":"773077111","IsPullRequest":true,"CreatedAt":"2020-12-23T11:27:53","Actor":"dotnet-maestro[bot]","Number":"15067","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201222.11\r\n- **Date Produced**: 12/23/2020 7:37 AM\r\n- **Commit**: a545d13cef55534995115eb5f761fd0cecf66fc1\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20621.9 to 6.0.0-alpha.1.20622.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/81771ef...a545d13\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15067","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#15067)"},{"Id":"773654639","IsPullRequest":false,"CreatedAt":"2020-12-23T10:31:57","Actor":"lukos","Number":"15071","RawContent":null,"Title":"Project Build Issues after upgrading to Dotnet 5","State":"open","Body":"Since upgrading our build servers to dotnet 5, the behaviour of our builds has changed and is now broken. I keep trying different tricks and workarounds but they sometimes seem to work and sometimes don't. I am wasting so much of my time.\r\n\r\n### Scenario\r\nWe have a solution that contains a mixture of netstandard and netfx 4.7.2 projects. We have individual builds on our build server for projects within this solution. The build steps were:\r\n\r\n1. nuget restore against the _solution_\r\n2. msbuild of the _solution_\r\n3. dotnet pack for the _project_\r\n\r\nThis used to work fine but after installing .Net 5 (which updated dotnet), although I can't rule out that Windows update didn't do anything at that point, we started seeing the following error:\r\n\r\n`C:\\Program Files\\dotnet\\sdk\\5.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(241, 5): error NETSDK1005: Assets file 'C:\\TeamCity\\buildAgent\\work\\2357397f21417b8a\\Src\\Shared.Common\\obj\\project.assets.json' doesn't have a target for 'netstandard2.0'.`\r\n\r\nNote the project mentioned is netstandard2.0.\r\n\r\nI tried googling and found various articles saying to run _dotnet restore_ at the start of the process. So I added that in but that then caused a different error against a netfx project:\r\n\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Microsoft\\NuGet\\16.0\\Microsoft.NuGet.targets(198, 5): Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdentifiers\" property in your project file and then re-run NuGet restore.`\r\n\r\nI then found advice to disable both of the restore steps and to use the restore target in msbuild, which I added and which seemed to fix the problem but I suspect it only seemed to work since the depedencies were already cached on the build server. We added another build server and the build failed due to missing dependencies. I added back in the nuget restore step and it seemed to work but now it doesn't work on the first server again. Other advice mentioned modifying the projects but I didn't want to start down a slippery slope without understanding what was happening and when the builds used to work fine.\r\n\r\nI have tried with every combination of both restore steps, neither, msbuild, dotnet etc. and everything seems to cause some problem or other.\r\n\r\nI feel like this should just work, that nuget/msbuild/dotnet should handle what they can handle and ignore what they can't - or at least provide clear errors if we are definitely doing something wrong. I also don't know why MS seems to consistently break the tooling everytime they make a major release. We have problems with netstandard in netfx projects, with assembly redirects that don't get added properly, with esoteric messages, with \"improvements\" that are breaking changes, with a plethora of versions, incompatabilities, magic advice on StackOverflow which sometimes work for reasons unknown and with a broken mix of versions in the Microsoft.Extensions packages that require manual fixing of assembly redirects after every update of packages. Please can you advise why this is not working or is this already a know bug with .Net 5?","Url":"https://github.com/dotnet/sdk/issues/15071","RelatedDescription":"Open issue \"Project Build Issues after upgrading to Dotnet 5\" (#15071)"},{"Id":"772824575","IsPullRequest":true,"CreatedAt":"2020-12-23T09:49:57","Actor":"dotnet-maestro[bot]","Number":"15063","RawContent":null,"Title":"[master] Update dependencies from microsoft/vstest","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d8a596af-c18d-4760-2df5-08d849c580d6)\r\n## From https://github.com/microsoft/vstest\r\n- **Subscription**: d8a596af-c18d-4760-2df5-08d849c580d6\r\n- **Build**: 20201222-01\r\n- **Date Produced**: 12/22/2020 10:16 AM\r\n- **Commit**: 4f594fcab18869e7aee431450adeff58b1b74b76\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Test.Sdk**: [from 16.9.0-preview-20201218-01 to 16.9.0-preview-20201222-01][1]\r\n\r\n[1]: https://github.com/microsoft/vstest/compare/b51c407...4f594fc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d8a596af-c18d-4760-2df5-08d849c580d6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15063","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from microsoft/vstest\" (#15063)"},{"Id":"773042605","IsPullRequest":true,"CreatedAt":"2020-12-23T03:48:34","Actor":"dotnet-maestro[bot]","Number":"15066","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20201222.1\r\n- **Date Produced**: 12/22/2020 3:32 PM\r\n- **Commit**: 45cc8cb8b1bfdc76e9b0b41904c796cda4d96872\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateSearch.Common**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.TemplateEngine.Orchestrator.RunnableProjects**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.DotNet.Common.ItemTemplates**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.TemplateEngine.Abstractions**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.TemplateEngine.Cli**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.TemplateEngine.Cli.Localization**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n  - **Microsoft.TemplateEngine.Utils**: [from 6.0.0-alpha.1.20621.1 to 6.0.0-alpha.1.20622.1][1]\r\n\r\n[1]: https://github.com/dotnet/templating/compare/5aa4e1e...45cc8cb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15066","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#15066)"},{"Id":"773214468","IsPullRequest":true,"CreatedAt":"2020-12-23T03:38:29","Actor":"dotnet-maestro[bot]","Number":"15069","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20201222.12\r\n- **Date Produced**: 12/23/2020 12:06 AM\r\n- **Commit**: 3446772a034e8f72d514fe00cc1d53ef18bd7536\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 3.9.0-4.20621.6 to 3.9.0-4.20622.12][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/5fc3dbb...3446772\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15069","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn\" (#15069)"},{"Id":"773166799","IsPullRequest":true,"CreatedAt":"2020-12-22T20:38:21","Actor":"dotnet-maestro[bot]","Number":"15068","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 9ac01057-d33d-4509-c9e1-08d846b6e5b9\r\n- **Build**: 20201222.1\r\n- **Date Produced**: 12/22/2020 6:35 PM\r\n- **Commit**: 8ecdb90f69bacd96eb8a171d01a29b83494c0611\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: [from 6.0.0-alpha.1.20621.2 to 6.0.0-alpha.1.20622.1][1]\r\n\r\n[1]: https://github.com/mono/linker/compare/9d47fbf...8ecdb90\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:9ac01057-d33d-4509-c9e1-08d846b6e5b9)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15068","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from mono/linker\" (#15068)"},{"Id":"772938191","IsPullRequest":true,"CreatedAt":"2020-12-22T15:01:39","Actor":"dotnet-maestro[bot]","Number":"15065","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20201221.9\r\n- **Date Produced**: 12/22/2020 8:48 AM\r\n- **Commit**: 81771effb2097045b2fca49d4ee4ca252f1e5a94\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.NETCore.DotNetHostResolver**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.NET.HostModel**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.NETCore.App.Host.win-x64**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20620.6 to 6.0.0-alpha.1.20621.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f8f63b1...81771ef\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15065","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#15065)"},{"Id":"772928805","IsPullRequest":true,"CreatedAt":"2020-12-22T14:42:05","Actor":"dotnet-maestro[bot]","Number":"15064","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20201218.3\r\n- **Date Produced**: 12/18/2020 8:34 PM\r\n- **Commit**: e9b75e1cd4e63570624006a6d5bdb48b5b40b513\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20616.18 to 6.0.0-beta.20618.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20616.18 to 6.0.0-beta.20618.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20616.18 to 6.0.0-beta.20618.3][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 6.0.0-beta.20616.18 to 6.0.0-beta.20618.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/26b0054...e9b75e1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/15064","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#15064)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"759718417","IsPullRequest":false,"CreatedAt":"2020-12-08T19:30:20","Actor":"rbhanda","Number":"169","RawContent":null,"Title":"December 2020 .NET Updates","State":"open","Body":"The following .NET updates were released in December 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET December 2020 Updates – 5.0.1](https://devblogs.microsoft.com/dotnet/net-december-2020/)\r\n  * .NET 5.0.1 and .NET SDK 5.0.101 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.1/5.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n</br>\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/169","RelatedDescription":"Open issue \"December 2020 .NET Updates\" (#169)"},{"Id":"746031367","IsPullRequest":false,"CreatedAt":"2020-11-18T21:42:52","Actor":"samsp-msft","Number":"168","RawContent":null,"Title":"Survey: Repo contribution experience, Fall 2020","State":"open","Body":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/announcements)\r\n\r\nThank you for your time!\r\n\r\n## Discussion ##\r\nFor discussion, please go to dotnet/runtime#44903.\r\n","Url":"https://github.com/dotnet/announcements/issues/168","RelatedDescription":"Open issue \"Survey: Repo contribution experience, Fall 2020\" (#168)"},{"Id":"740056275","IsPullRequest":false,"CreatedAt":"2020-11-10T16:26:54","Actor":"rbhanda","Number":"167","RawContent":null,"Title":"November 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET November 2020 Updates – 5.0](https://devblogs.microsoft.com/dotnet/announcing-net-5-0/)\r\n  * .NET 5.0 and .NET SDK 5.0.100 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.0/5.0.0.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n\r\n</br>\r\n\r\n* [.NET Core November 2020 Updates – 3.1.10](https://devblogs.microsoft.com/dotnet/net-core-november-2020/)\r\n  * .NET Core 3.1.10 and .NET Core SDK 3.1.110 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.10/3.1.10.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Framework </h2>\r\n\r\n* [November 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-security-and-quality-rollup-updates/)\r\n\r\n* [November 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-cumulative-update-preview/)\r\n\r\n* [November 2020 Cumulative Update Preview for Windows 10 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-november-2020-cumulative-update-preview-for-windows-10-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/167","RelatedDescription":"Open issue \"November 2020 .NET Updates\" (#167)"},{"Id":"720690315","IsPullRequest":false,"CreatedAt":"2020-10-13T19:01:25","Actor":"TaraOverfield","Number":"166","RawContent":null,"Title":"October 2020 .NET Updates ","State":"open","Body":"The following .NET updates were released on October 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [October 2020 Updates – 2.1.23 and 3.1.9](https://devblogs.microsoft.com/dotnet/net-core-october-2020/)\r\n  * .NET Core 3.1.9 and .NET Core SDK 3.1.109 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.9/3.1.9.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.23 and .NET Core SDK 2.1.811 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.23/2.1.23.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* .[NET Core support for Ubuntu 20.10](https://github.com/dotnet/core/issues/5017)\r\n* .[NET Core Support for Fedora 33](https://github.com/dotnet/core/issues/5018)\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [October 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-security-and-quality-rollup-updates/)\r\n* [Republishing of July 2020 Security Only Updates](https://devblogs.microsoft.com/dotnet/net-framework-republishing-of-july-2020-security-only-updates/)\r\n* [October 2020 Cumulative Update Preview Update](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-cumulative-update-preview-update/)\r\n* [October 2020 Cumulative Update Preview Update for Windows 10 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-october-2020-cumulative-update-preview-update-for-windows-10-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/166","RelatedDescription":"Open issue \"October 2020 .NET Updates \" (#166)"},{"Id":"696061299","IsPullRequest":false,"CreatedAt":"2020-09-08T17:44:01","Actor":"rbhanda","Number":"165","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.\r\n\r\nThe ASP.NET Core cookie parser decodes entire cookie strings which could allow a malicious attacker to set a second cookie with the name being percent encoded.\r\n\r\nThe security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/25701\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.7 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.21 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.8 or SDK 3.1.108 (for Visual Studio 2019 v16.4) or 3.1.402 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1045](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1045)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 8, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-09-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/165","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\" (#165)"},{"Id":"696046001","IsPullRequest":false,"CreatedAt":"2020-09-08T17:20:15","Actor":"TaraOverfield","Number":"164","RawContent":null,"Title":"September 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET Core</h2>\r\n\r\n* [September 2020 Updates – 2.1.22 and 3.1.8](https://devblogs.microsoft.com/dotnet/net-core-september-2020/)\r\n  * .NET Core 3.1.8 and .NET Core SDK 3.1.108 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.8/3.1.8.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.22 and .NET Core SDK 2.1.810 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.22/2.1.22.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [September 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-security-and-quality-rollup-updates/)\r\n* [September 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-september-2020-cumulative-update-preview-update/)\r\n* [October 1, 2020 Cumulative Update Preview Update for Windows 10, version 2004 and Windows Server, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-october-1-2020-cumulative-update-preview-update-for-windows-10-version-2004-and-windows-server-version-2004/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/164","RelatedDescription":"Open issue \"September 2020 .NET Updates\" (#164)"},{"Id":"677090197","IsPullRequest":false,"CreatedAt":"2020-08-11T18:15:32","Actor":"rbhanda","Number":"163","RawContent":null,"Title":"August 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on August 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [August 2020 Updates – 2.1.21 and 3.1.7](https://devblogs.microsoft.com/dotnet/net-core-august-2020/)\r\n  * .NET Core 3.1.7 and .NET Core SDK 3.1.107 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.7/3.1.7.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.21 and .NET Core SDK 2.1.809 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.21/2.1.21.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n\r\n## .NET Framework\r\n* [August 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-august-2020-security-and-quality-rollup-updates/)\r\n\r\n* [August 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/august-2020-cumulative-update-preview/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/163","RelatedDescription":"Open issue \"August 2020 .NET Updates\" (#163)"},{"Id":"677046311","IsPullRequest":false,"CreatedAt":"2020-08-11T17:08:44","Actor":"rbhanda","Number":"162","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/24796\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.6 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.20 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/162","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#162)"},{"Id":"658602325","IsPullRequest":false,"CreatedAt":"2020-07-16T21:51:58","Actor":"clairernovotny","Number":"161","RawContent":null,"Title":"Moving microsoft/MSBuild to dotnet/MSBuild","State":"open","Body":"Early next week, we are planning to move `microsoft/msbuild` to `dotnet/msbuild` as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523","Url":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Open issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161)"},{"Id":"656777247","IsPullRequest":false,"CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Number":"160","RawContent":null,"Title":"July 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n  * .NET Core 3.1.6 and .NET Core SDK 3.1.106 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.20 and .NET Core SDK 2.1.808 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* [.NET Core support for Ubuntu 19.10 -- EOL](https://github.com/dotnet/core/issues/4925)\r\n\r\n## .NET Framework\r\n* [July 2020 Security and Quality Rollup Updates]( https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/)\r\n\r\n* [July 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/)\r\n\r\n* [July 2020 Cumulative Update Preview for Windows 10, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/)\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Open issue \"July 2020 .NET Updates\" (#160)"},{"Id":"656765637","IsPullRequest":false,"CreatedAt":"2020-07-14T17:06:53","Actor":"rbhanda","Number":"159","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability ","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/39296\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.6 or SDK 3.1.106 (for Visual Studio 2019 v16.4) or 3.1.302 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n","Url":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \" (#159)"},{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n   * .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n   * .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n* [Alpine 3.12 ](https://github.com/dotnet/core/issues/4750) is now  supported.","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1342142994015801346","CreatedAt":"2020-12-24T16:20:00+00:00","UserScreenname":"dotnet","Text":".@jongalloway has an update for us on his Head First C# Contest post. Learn more about some of the great projects a… https://t.co/zIdWVgVbcU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1341810819294748672","CreatedAt":"2020-12-23T18:20:03+00:00","UserScreenname":"dotnet","Text":"In today's #dotNET Tooling Community Standup, meet the visual designers behind #VisualStudio, @VisualStudio @Code,… https://t.co/7e2jGLnAfm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1341793724129562626","CreatedAt":"2020-12-23T17:12:07+00:00","UserScreenname":"dotnet","Text":"Want to take advantage of Entity Framework Core 5.0, but are unfamiliar with the dotnet command line and the EF Cor… https://t.co/aPgBUHJKfb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":9,"RawContent":null},{"Id":"1341515615018885123","CreatedAt":"2020-12-22T22:47:01+00:00","UserScreenname":"dotnet","Text":"Wondering what's in store for 🔥 Blazor 🔥 in .NET 5?\n\nThis #dotNETConf session replay shows you the latest and great… https://t.co/vg78Cna8O0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":11,"RawContent":null},{"Id":"1341464277224484868","CreatedAt":"2020-12-22T19:23:01+00:00","UserScreenname":"dotnet","Text":"...working with data on forms, views, and dashboards?\n\nIn this #dotNETConf session replay, we learn about the Power… https://t.co/QJd5cLAvCT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"1341415710782861312","CreatedAt":"2020-12-22T16:10:02+00:00","UserScreenname":"dotnet","Text":"In this episode of the #AzureDevOps podcast, @CoolCSH discusses #dotNETConf 2020 announcements, everything .NET 5.0… https://t.co/TIh0M0AcUk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1341394400665104386","CreatedAt":"2020-12-22T14:45:21+00:00","UserScreenname":"dotnet","Text":"Learn about some of the new features of Entity Framework Core 5 from @ajcvickers &amp; @jeremylikness in this episode o… https://t.co/ns3Idojshm","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":17,"RawContent":null},{"Id":"1341174115265331202","CreatedAt":"2020-12-22T00:10:01+00:00","UserScreenname":"dotnet","Text":"Site availability is crucial for the reputation and revenue of a business. \n\nIn this #dotNETConf session replay, we… https://t.co/Yx1GXPi7mi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":51,"FavoriteCount":10,"RawContent":null},{"Id":"1341114221363404801","CreatedAt":"2020-12-21T20:12:01+00:00","UserScreenname":"dotnet","Text":"In this #dotNETConf session replay, we get some good performance tricks you may not know on an algorithm you may ne… https://t.co/CTEGy2JTb5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":7,"RawContent":null},{"Id":"1340082169990004736","CreatedAt":"2020-12-18T23:51:01+00:00","UserScreenname":"dotnet","Text":"In this #dotNETConf session replay we get familiar with Custom Vision, it's API and ML algorithms for image classif… https://t.co/ND8Gh4aoae","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1340015229460242432","CreatedAt":"2020-12-18T19:25:01+00:00","UserScreenname":"dotnet","Text":"In this episode of the #OnDotNET Show, @JamesNK to explain how gRPC-Web works and show us what the code looks like… https://t.co/UBIyoOqUuJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1339958605961965568","CreatedAt":"2020-12-18T15:40:01+00:00","UserScreenname":"dotnet","Text":"Coroutines in #CSharp are traditionally implemented as IEnumerable. With C# 8+, it's possible to combine \"await\" an… https://t.co/jwjUVnEMy4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":107,"FavoriteCount":35,"RawContent":null},{"Id":"1339725416198598658","CreatedAt":"2020-12-18T00:13:24+00:00","UserScreenname":"dotnet","Text":"Looking for a new .NET person to follow? How about @zkat__, they  work on @nuget but 🤫, this is a secret. Don’t sha… https://t.co/aRx7ofdWTq","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":51,"FavoriteCount":11,"RawContent":null},{"Id":"1339714750670880768","CreatedAt":"2020-12-17T23:31:01+00:00","UserScreenname":"dotnet","Text":"A well-designed schema is essential for any GraphQL enabled application.\n\nIn this episode of #OnDotNET,… https://t.co/Tb7tNUojrw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":10,"RawContent":null},{"Id":"1339652591144341505","CreatedAt":"2020-12-17T19:24:01+00:00","UserScreenname":"dotnet","Text":"What can you use Blazor 🔥 for? \n\n#dotNETRocks talks to Georgia Nelson about GifBot, a Twitch bot Georgia built usin… https://t.co/gYhQbGmkGs","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1339598741100085251","CreatedAt":"2020-12-17T15:50:03+00:00","UserScreenname":"dotnet","Text":"In this #dotNETConf session replay @lyalindotcom takes us on a tour of what's new for desktop devs building applica… https://t.co/WxeHlaNMTF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"1339354626416635905","CreatedAt":"2020-12-16T23:40:01+00:00","UserScreenname":"dotnet","Text":"MVC is more than just an acronym, it's also a user interface framework for building web applications with #ASPNET C… https://t.co/kEmSCLNvGF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":9,"RawContent":null},{"Id":"1339289455233011712","CreatedAt":"2020-12-16T19:21:03+00:00","UserScreenname":"dotnet","Text":"In the latest Languages and Runtime Community Stand-up, Xin Shi, Matthew Jin, and Fred Silberberg discuss Infer#, p… https://t.co/fnGzsAnFVL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2020-12-26T05:30:31.2981166Z","RunDurationInMilliseconds":10680}