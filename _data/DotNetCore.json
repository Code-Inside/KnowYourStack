{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 5.0 Preview 5","PublishedOn":"2020-06-10T17:18:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are announcing the fifth preview release of EF Core 5.0.\nThe fifth previews of .NET 5 and ASP.NET Core 5.0 are also available now.\nPrerequisites\nThe previews of EF Core 5.0 require .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-5/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 5","PublishedOn":"2020-06-10T17:10:13+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 5. It contains a small set of new features and performance improvements. The .NET 5.0 Preview 4 post covers what we are planning to deliver with .NET 5.0....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-5/","RawContent":null},{"Title":".NET Core June 2020 Updates – 2.1.19 and 3.1.5","PublishedOn":"2020-06-09T17:30:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core June 2020 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nSecurity\nCVE-2020-1108:...","Href":"https://devblogs.microsoft.com/dotnet/net-core-june-2020-updates-2-1-19-and-3-1-5/","RawContent":null},{"Title":"Help us improve WPF and UWP XAML designer","PublishedOn":"2020-05-29T00:00:53+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We would like to make your experience developing WPF and UWP applications in Visual Studio better!\nCurrently we are investigating ways of improving the XAML Designer and making you more productive...","Href":"https://devblogs.microsoft.com/dotnet/help-us-improve-wpf-and-uwp-xaml-designer/","RawContent":null},{"Title":"Continuous integration workflow template for .NET Core desktop apps with GitHub Actions","PublishedOn":"2020-05-28T14:00:15+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We know how time consuming it can be to quickly set up continuous integration and continuous deployment workflows (CI/CD) for your WPF and Windows Forms desktop applications.\nThat&#8217;s why, in...","Href":"https://devblogs.microsoft.com/dotnet/continuous-integration-workflow-template-for-net-core-desktop-apps-with-github-actions/","RawContent":null},{"Title":"Introducing YARP Preview 1","PublishedOn":"2020-05-21T20:00:40+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Introducing YARP Preview 1\nYARP is a project to create a reverse proxy server. It started when we noticed a pattern of questions from internal teams at Microsoft who were either building a reverse...","Href":"https://devblogs.microsoft.com/dotnet/introducing-yarp-preview-1/","RawContent":null},{"Title":"Using Visual Studio Codespaces with .NET Core","PublishedOn":"2020-05-21T15:00:29+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"What a time to be a .NET developer!  Lots of great announcements at Build, new releases for .NET Core and new preview projects for cloud native development make me excited to be a .NET developer!\nOne...","Href":"https://devblogs.microsoft.com/dotnet/using-visual-studio-codespaces-with-net-core/","RawContent":null},{"Title":"Welcome to C# 9.0","PublishedOn":"2020-05-20T15:00:30+00:00","CommentsCount":250,"FacebookCount":0,"Summary":"C# 9.0 is taking shape, and I&#8217;d like to share our thinking on some of the major features we&#8217;re adding to this next version of the language.\nWith every new version of C# we strive for...","Href":"https://devblogs.microsoft.com/dotnet/welcome-to-c-9-0/","RawContent":null},{"Title":"F# 5 and F# tools update","PublishedOn":"2020-05-20T15:00:16+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We&#8217;re excited to announce some updates to F# 5 today! We shipped a lot of preview features since F# 5 preview 1, and they have all been stabilizing since that release. Today, we&#8217;re happy...","Href":"https://devblogs.microsoft.com/dotnet/f-5-update-for-net-5-preview-4/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 4","PublishedOn":"2020-05-19T20:20:07+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today we are excited to announce the fourth preview release of Entity Framework Core (EF Core) 5.0.\nThe fourth previews of .NET 5 and ASP.NET Core 5.0 are also available now.\nBe sure to check out the...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12268956493","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:22:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Closed pull request \"Adding OmniSharp to projects list\" (#182) at dotnet/foundation","RelatedBody":""},{"Id":"12268946116","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:21:09","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/192","RelatedDescription":"Closed pull request \"Update coverlet links\" (#192) at dotnet/foundation","RelatedBody":"Update repo links\r\n\r\ncc: @tonerdo"},{"Id":"12231641754","Type":"PullRequestEvent","CreatedAt":"2020-05-04T08:11:29","Actor":"MarcoRossignoli","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/192","RelatedDescription":"Opened pull request \"Update coverlet links\" (#192) at dotnet/foundation","RelatedBody":"Update repo links\r\n\r\ncc: @tonerdo"},{"Id":"12207129416","Type":"PullRequestEvent","CreatedAt":"2020-04-30T15:40:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Closed pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"12194500050","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:53:42","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Merged pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12194328779","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:39:00","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Opened pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12193219033","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:16","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Merged pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12193217084","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Merged pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12069320388","Type":"PullRequestEvent","CreatedAt":"2020-04-16T15:55:03","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Opened pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12057488269","Type":"PullRequestEvent","CreatedAt":"2020-04-15T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Opened pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12047631812","Type":"PullRequestEvent","CreatedAt":"2020-04-14T19:06:28","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Merged pull request \"Added Unity Contaienr project\" (#188) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582563527","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Opened issue \"June 2020 .NET Updates\" (#158) at dotnet/announcements","RelatedBody":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n"},{"Id":"12582414995","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:22:17","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.18 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.4 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"12606171088","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:47:15","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28050","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)\" (#28050) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"12606040466","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:33:00","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28049","RelatedDescription":"Closed pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28049) at dotnet/coreclr","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @omajid\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12605681344","Type":"PullRequestEvent","CreatedAt":"2020-06-11T16:54:25","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28049","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28049) at dotnet/coreclr","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @omajid\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12605631125","Type":"PullRequestEvent","CreatedAt":"2020-06-11T16:49:16","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28045","RelatedDescription":"Merged pull request \"[release/2.1] Fix build with clang 10\" (#28045) at dotnet/coreclr","RelatedBody":"This contains a grab bag of fixes to fix the build with clang 10.\r\n\r\n- https://github.com/dotnet/coreclr/pull/23075\r\n\r\n  Fix missing includes in coreclr/src/debug/createdump/\r\n\r\n- https://github.com/dotnet/runtime/pull/33096\r\n\r\n  SList::Init: add missing constructor\r\n\r\n- A subset of https://github.com/dotnet/coreclr/pull/22129\r\n\r\n  Just the parts that introduce the THROW_DECL macro in pal.h\r\n\r\n- https://github.com/dotnet/runtime/pull/32837\r\n\r\n  This fixes THROW_DECL introduce in the previous PR to work with clang, which\r\n  is required in clang 10.\r\n\r\n- One new change:\r\n\r\n  In a significant divergance, this commits adds more THROW_DECL macros\r\n  to all the math functions to address a ton of errors pointed out when\r\n  building SOS:\r\n\r\n   ```\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/ToolBox/SOS/Strike/strike.cpp:116:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/vm/hillclimbing.h:19:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/inc/complex.h:16:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/math.h:36:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/cmath:45:\r\n    In file included from /usr/include/math.h:290:\r\n    /usr/include/bits/mathcalls.h:53:13: error: exception specification in declaration does not match previous declaration\r\n    __MATHCALL (acos,, (_Mdouble_ __x));\r\n                ^\r\n    /home/omajid/devel/dotnet/coreclr/src/pal/inc/pal.h:4395:26: note: previous declaration is here\r\n    PALIMPORT double __cdecl acos(double);\r\n                             ^\r\n   ```\r\n\r\n  Then, to make sure the declarations and implementations match, it adds\r\n  THROW_DECL to the definitions in src/pal/src/cruntime/math.cpp\r\n\r\nCo-authored-by: Mike McLaughlin <mikem@microsoft.com>\r\nCo-authored-by: Sinan Kaya <sinan.kaya@microsoft.com>\r\nCo-authored-by: Tom Deseyn <tom.deseyn@gmail.com>"},{"Id":"12595069342","Type":"PullRequestEvent","CreatedAt":"2020-06-10T18:41:43","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28048","RelatedDescription":"Merged pull request \"Update branding to 2.1.20\" (#28048) at dotnet/coreclr","RelatedBody":""},{"Id":"12594495622","Type":"PullRequestEvent","CreatedAt":"2020-06-10T17:39:08","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28048","RelatedDescription":"Opened pull request \"Update branding to 2.2.20\" (#28048) at dotnet/coreclr","RelatedBody":""},{"Id":"12585033627","Type":"PullRequestEvent","CreatedAt":"2020-06-09T22:25:25","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Merged pull request \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033) at dotnet/coreclr","RelatedBody":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nWe completely missed decode of all x64 simd instruction forms.\r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n  + Additionally the same code was tested for regressions in other areas.\r\n    + Trying a breakpoint on every line of code\r\n    + Stepping through every line of code \r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n  + Shipped in all .NET Core 5.0 previews to date\r\n  + Over the last 90 days, there have been \r\n     + 184K debugging sessions launched on .NET Core 5 previews\r\n     + from 3.3K unique MAC addresses\r\n  + We have no reports of issues linked to this fix\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n  + We have several confirmation that this issue observed in 3.0/3.1 has been fixed by 5.0 \r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n+ @tommcdon & @hoyosjs have each used the x64 debugger since this change for debugging various reported/discovered issues. They saw no issues suggesting a regression.\r\n\r\n## Risk\r\nLow. \r\n+ dotnet/coreclr#25958 has been in 5.0 since 9/2019\r\n+ Only affects x64 debugger operation. \r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n  + Rewrites one function `NativeWalker::DecodeInstructionForPatchSkip()`.  Used only for debugging x64 code.\r\n  + Adds 1 new machine generated instruction decode table. (10k lines)\r\n+ Adds tools to regenerate the parser tables\r\n  + Add 3 files to archive the tool used to generate the decode table.to machine generate. (Only used in development) \r\n+ Adds documentation (1 file)\r\n+ Sufficient testing coverage\r\n \r\n## Code Reviewers\r\n@hoyosjs @tannergooding @noahfalk @jkotas "},{"Id":"12584974287","Type":"PullRequestEvent","CreatedAt":"2020-06-09T22:16:49","Actor":"wtgodbe","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28044","RelatedDescription":"Merged pull request \"[release/3.1] Fix triggers for 3.1\" (#28044) at dotnet/coreclr","RelatedBody":""},{"Id":"12584946098","Type":"PullRequestEvent","CreatedAt":"2020-06-09T22:12:49","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28047","RelatedDescription":"Merged pull request \"update branding to 3.1.6\" (#28047) at dotnet/coreclr","RelatedBody":""},{"Id":"12583124434","Type":"PullRequestEvent","CreatedAt":"2020-06-09T18:38:26","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28047","RelatedDescription":"Opened pull request \"update branding to 3.1.6\" (#28047) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"12617700362","Type":"PullRequestEvent","CreatedAt":"2020-06-12T19:26:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13398","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13398) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200612.12\r\n- **Date Produced**: 6/12/2020 5:56 PM\r\n- **Commit**: 32e8cf29db2e5b3052a70e9b1926fc740aec7ab1\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20271.7 to 3.1.400-preview.20312.12\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12617151752","Type":"PullRequestEvent","CreatedAt":"2020-06-12T18:16:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13398","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13398) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200612.12\r\n- **Date Produced**: 6/12/2020 5:56 PM\r\n- **Commit**: 32e8cf29db2e5b3052a70e9b1926fc740aec7ab1\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20271.7 to 3.1.400-preview.20312.12\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12617123766","Type":"PullRequestEvent","CreatedAt":"2020-06-12T18:12:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13397","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13397) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n"},{"Id":"12616937356","Type":"PullRequestEvent","CreatedAt":"2020-06-12T17:49:54","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13396","RelatedDescription":"Merged pull request \"Merge internal changes and update branding to 2.1.516\" (#13396) at dotnet/cli","RelatedBody":""},{"Id":"12607312674","Type":"PullRequestEvent","CreatedAt":"2020-06-11T19:57:40","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13396","RelatedDescription":"Opened pull request \"Merge internal changes and update branding to 2.1.516\" (#13396) at dotnet/cli","RelatedBody":""},{"Id":"12606450747","Type":"PullRequestEvent","CreatedAt":"2020-06-11T18:18:01","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13380","RelatedDescription":"Merged pull request \"Correct tool path append\" (#13380) at dotnet/cli","RelatedBody":""},{"Id":"12606450073","Type":"PullRequestEvent","CreatedAt":"2020-06-11T18:17:56","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13379","RelatedDescription":"Merged pull request \"Correct tool path append\" (#13379) at dotnet/cli","RelatedBody":""},{"Id":"12606449335","Type":"PullRequestEvent","CreatedAt":"2020-06-11T18:17:51","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13383","RelatedDescription":"Merged pull request \"Correct tool path append\" (#13383) at dotnet/cli","RelatedBody":""},{"Id":"12606449016","Type":"PullRequestEvent","CreatedAt":"2020-06-11T18:17:49","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13382","RelatedDescription":"Merged pull request \"Correct tool path append\" (#13382) at dotnet/cli","RelatedBody":""},{"Id":"12606448488","Type":"PullRequestEvent","CreatedAt":"2020-06-11T18:17:45","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13381","RelatedDescription":"Merged pull request \"Correct tool path append\" (#13381) at dotnet/cli","RelatedBody":""},{"Id":"12606172653","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:47:25","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13395","RelatedDescription":"Opened pull request \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13395) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"12606172293","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:47:23","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13394","RelatedDescription":"Opened pull request \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13394) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"12606172046","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:47:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13393","RelatedDescription":"Opened pull request \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13393) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"12613688141","Type":"PullRequestEvent","CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1766) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 5.0.100-preview.6.20266.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"12608476970","Type":"PullRequestEvent","CreatedAt":"2020-06-11T22:33:08","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#1759) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"12606140999","Type":"PullRequestEvent","CreatedAt":"2020-06-11T17:43:56","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42933","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)\" (#42933) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"12595534524","Type":"PullRequestEvent","CreatedAt":"2020-06-10T19:33:30","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42932","RelatedDescription":"Closed pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42932) at dotnet/corefx","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12594694830","Type":"PullRequestEvent","CreatedAt":"2020-06-10T18:00:23","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42932","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42932) at dotnet/corefx","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12594643617","Type":"PullRequestEvent","CreatedAt":"2020-06-10T17:54:53","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42931","RelatedDescription":"Merged pull request \"Merging changes and no branding or packages changes required\" (#42931) at dotnet/corefx","RelatedBody":""},{"Id":"12594345928","Type":"PullRequestEvent","CreatedAt":"2020-06-10T17:23:18","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42931","RelatedDescription":"Opened pull request \"Merging changes and no branding or packages changes required\" (#42931) at dotnet/corefx","RelatedBody":""},{"Id":"12585301660","Type":"PullRequestEvent","CreatedAt":"2020-06-09T23:09:41","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42930","RelatedDescription":"Merged pull request \"Branding for 3.1.6\" (#42930) at dotnet/corefx","RelatedBody":""},{"Id":"12583073673","Type":"PullRequestEvent","CreatedAt":"2020-06-09T18:32:45","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42930","RelatedDescription":"Opened pull request \"Branding for 3.1.6\" (#42930) at dotnet/corefx","RelatedBody":""},{"Id":"12547488518","Type":"PullRequestEvent","CreatedAt":"2020-06-05T23:02:45","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42929","RelatedDescription":"Closed pull request \"Removing reference assets from Microsoft.Bcl.AsyncInterfaces and Microsoft.Bcl.HashCode packages\" (#42929) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/runtime/issues/37496\r\n\r\ncc: @ericstj @StephenBonikowsky @Anipik @andreyns\r\n\r\nApplications that rely on the workflow compiler task require all of the consuming packages to not expose reference assets when restored for .NET Framework. For this reason, we want to remove the reference assets from these two compat packs which are part of the closure of Microsoft.Extensions.Hosting."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"12621818045","Type":"PullRequestEvent","CreatedAt":"2020-06-13T14:25:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8188","RelatedDescription":"Merged pull request \"Prevent out/ref marshalling of COM interfaces\" (#8188) at dotnet/corert","RelatedBody":"AllocAndTransform is not called for out/ref marshalling, so this was ending up blitting the raw pointer across."},{"Id":"12621815779","Type":"PullRequestEvent","CreatedAt":"2020-06-13T14:24:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8194","RelatedDescription":"Merged pull request \"Delete RD.XML related fwlinks\" (#8194) at dotnet/corert","RelatedBody":"The RD.XML format CoreRT uses is different from .NET Native, so this probably causes more harm than good."},{"Id":"12621653271","Type":"PullRequestEvent","CreatedAt":"2020-06-13T13:37:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8195","RelatedDescription":"Merged pull request \"Wasm: clear shadow stack slots in case of call to RhCollect\" (#8195) at dotnet/corert","RelatedBody":"As part of fixing #8171, its apparent that there is a bug in the call to `GC.Collect` which prevents some objects from being collected.   This PR fixes this.\r\n\r\nWhat happens is that in `RhCollect` and `System_Runtime_InternalCalls__RhpCollect` 3 slots are allocated on the shadow stack but are not all set before the call to `RhpCollect`.  If these slots have object references in them, from previous calls which used more of the shadow stack, then these references will still be there, and if they are the only references left to live objects, will prevent those objects from being collected.  \r\n\r\nNot a huge deal in the long term as at some point they would probably have gotten overwritten or collected, but a definitely a problem when testing."},{"Id":"12621593854","Type":"PullRequestEvent","CreatedAt":"2020-06-13T13:18:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8204","RelatedDescription":"Opened pull request \"Allow preinitializing delegates and reading initonly statics\" (#8204) at dotnet/corert","RelatedBody":"This extends the static constructor interpreter with support for preinitializing delegates and support for reading readonly static fields declared by other types.\r\n\r\nThe readonly static fields can be accessed after interpreting the static constructor of the containing type. This opens us up to recursive dependencies - the interpreter will bail if recursive dependency is hit (we already have a test).\r\n\r\nThis significantly improves the interpreter's ability to run static constructors at compile time:\r\n\r\n|          | Eligible types | Preinitialized before | Preinitialized after |\r\n| -------- | -------------- | --------------------- | -------------------- |\r\n| WinForms | 1520           | 702                   | 967                  |\r\n| WebApi   | 2005           | 746                   | 1278                 |\r\n\r\nAbout 60% of types now have their static constructor executed at compile time."},{"Id":"12620405538","Type":"PullRequestEvent","CreatedAt":"2020-06-13T06:32:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8203","RelatedDescription":"Opened pull request \"Sync compiler from dotnet/runtime\" (#8203) at dotnet/corert","RelatedBody":"The JitInterface GUID wasn't updated again..."},{"Id":"12610451544","Type":"IssuesEvent","CreatedAt":"2020-06-12T05:01:50","Actor":"VS-ux","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8202","RelatedDescription":"Opened issue \"CoreRT using too much memory\" (#8202) at dotnet/corert","RelatedBody":"Hi all!\r\nI tried out CoreRT on my winforms application which I've recently ported to .NET Core 3.1, from .NET Framework 4.8, using this [tutorial](https://docs.microsoft.com/en-us/dotnet/core/porting/winforms). The followed the Hello-World sample on the front page, however I got a Class Load error on System.Drawing.Design.UITypeEditor. I don't even use this class. I added the RootAllApplicationAssemblies tag, as specified [here](https://github.com/dotnet/corert/issues/6359#issuecomment-507156448), and also added a rd.xml file. (My application also didn't come with a Properties folder containing a Default.rd.xml file). However, I got a unknown method exception for `System.Drawing.Primitives`. I removed it, and it seemed to work OK. However, a couple minutes later, the memory usage skyrocketed. My system has 16GB memory, and eventually it used all of it and I had to task kill cmd. Is there any solution to this? Thanks"},{"Id":"12597359748","Type":"PullRequestEvent","CreatedAt":"2020-06-10T23:35:09","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8201","RelatedDescription":"Opened pull request \"Wasm: add support for new StackTrace().ToString()\" (#8201) at dotnet/corert","RelatedBody":"This PR adds initial support for `StackTrace` and it's `ToString` via emscripten's `emscripten_get_callstack` function.  This should help in getting a `StackTrace` for `Exception` and enabling the Exceptions simple test."},{"Id":"12590448820","Type":"PullRequestEvent","CreatedAt":"2020-06-10T11:22:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8200","RelatedDescription":"Merged pull request \"Fix NYI's for Function Pointers\" (#8200) at dotnet/corert","RelatedBody":"The `IsReflectionBlocked` fix is rather theoretical as i didn't manage to hit it locally.\r\nFixes #8199"},{"Id":"12590448778","Type":"IssuesEvent","CreatedAt":"2020-06-10T11:22:04","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8199","RelatedDescription":"Closed issue \"NotImplementedException thrown when trying to compile with function pointers\" (#8199) at dotnet/corert","RelatedBody":"I try to build my project as the samples suggest (The project doesn't use reflection anywhere, unless 'REFLECTION' is defined which it isn't here).\r\n\r\nI get this output with absolutely nothing else\r\n\r\n```Unhandled Exception: Unhandled Exception: System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()```"},{"Id":"12588119999","Type":"PullRequestEvent","CreatedAt":"2020-06-10T07:22:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8198","RelatedDescription":"Merged pull request \"Port changes related to homogeneous aggregate recognition\" (#8198) at dotnet/corert","RelatedBody":"dotnet/runtime#35576\r\ndotnet/runtime#35864\r\ndotnet/runtime#36673"},{"Id":"12582992929","Type":"PullRequestEvent","CreatedAt":"2020-06-09T18:24:00","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8200","RelatedDescription":"Opened pull request \"Fix NYI's for Function Pointers\" (#8200) at dotnet/corert","RelatedBody":"The `IsReflectionBlocked` fix is rather theoretical as i didn't manage to hit it locally.\r\nFixes #8199"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"12624163128","Type":"PullRequestEvent","CreatedAt":"2020-06-14T04:13:49","Actor":"jkoritzinsky","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11810","RelatedDescription":"Merged pull request \"Resolve R2R compilers in a separate target than resolving command line arguments for R2Rd assemblies.\" (#11810) at dotnet/sdk","RelatedBody":"I'm working on a new Shared Framework SDK for https://github.com/dotnet/arcade/issues/2704 to replace the various shared-framework creation SDKs that we have in the stack. This will enable the new SharedFramework SDK to reuse the built-in ReadyToRun targets and still support dotnet/runtime, which currently uses a live crossgen to crossgen their shared framework.\r\n\r\nThe current implementation binds together the \"find crossgen\" and \"resolve the arguments to pass to crossgen for each assembly\" steps. This PRs splits those steps so dotnet/runtime can override the \"find crossgen\" step but keep using the SDKs implementation of \"resolve the arguments to pass to crossgen for each assembly\"."},{"Id":"12621922713","Type":"IssuesEvent","CreatedAt":"2020-06-13T14:55:20","Actor":"AraHaan","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/12064","RelatedDescription":"Opened issue \"Directory.Build.props seems to write all of my intermediate files in the wrong location.\" (#12064) at dotnet/sdk","RelatedBody":"Lets say for example you use this ``Directory.Build.props`` files in all of your projects to keep the source tree clean by outputting the build files (intermediate and non-intermediate) in the project root which just so happens to also be the ``$(SolutionDir)``.\r\n\r\nFor me the outputs then results in the project system crashing on VS2019 and also results in build errors being emitted on dotnet build.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\r\n  <PropertyGroup>\r\n    <!--\r\n    For non-SDK projects that import this file and then import Microsoft.Common.props,\r\n    tell Microsoft.Common.props not to import Directory.Build.props again\r\n    -->\r\n    <ImportDirectoryBuildProps>false</ImportDirectoryBuildProps>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <MSBuildProjectExtensionsPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</MSBuildProjectExtensionsPath>\r\n    <BaseIntermediateOutputPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</IntermediateOutputPath>\r\n    <OutputPath>..\\bin\\$(Configuration)\\</OutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nHowever for some reason it all outputs to ``..\\obj\\$(Configuration)`` instead resulting in the project system crash and dotnet build failing when I clearly told it to output to ``..\\obj\\$(ProjectName)\\$(Configuration)\\``.\r\n\r\nI am using the current version of .net core from github nightly releases and I am using he insider builds of windows 10 on the fast ring."},{"Id":"12621736634","Type":"PullRequestEvent","CreatedAt":"2020-06-13T14:02:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12063","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/fsharp\" (#12063) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200612.5\r\n- **Date Produced**: 6/13/2020 4:09 AM\r\n- **Commit**: 2aa38744c9288aa9ca2bc192c1c85cdb1d1d53a0\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20312.2 to 10.10.0-beta.20312.5\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n"},{"Id":"12621685971","Type":"PullRequestEvent","CreatedAt":"2020-06-13T13:47:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12062","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/runtime\" (#12062) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200612.11\r\n- **Date Produced**: 6/13/2020 8:41 AM\r\n- **Commit**: 27ad36aa7e1ea7967053f5e0dc529700dd506399\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"12621380492","Type":"PullRequestEvent","CreatedAt":"2020-06-13T12:11:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12063","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/fsharp\" (#12063) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200612.5\r\n- **Date Produced**: 6/13/2020 4:09 AM\r\n- **Commit**: 2aa38744c9288aa9ca2bc192c1c85cdb1d1d53a0\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20312.2 to 10.10.0-beta.20312.5\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n"},{"Id":"12621366545","Type":"PullRequestEvent","CreatedAt":"2020-06-13T12:06:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12062","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/runtime\" (#12062) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200612.11\r\n- **Date Produced**: 6/13/2020 8:41 AM\r\n- **Commit**: 27ad36aa7e1ea7967053f5e0dc529700dd506399\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"12620429204","Type":"PullRequestEvent","CreatedAt":"2020-06-13T06:41:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12061","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview6] Update dependencies from dotnet/fsharp\" (#12061) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:11bb8090-6789-4721-321a-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 11bb8090-6789-4721-321a-08d8080363b6\r\n- **Build**: 20200612.5\r\n- **Date Produced**: 6/13/2020 4:09 AM\r\n- **Commit**: 2aa38744c9288aa9ca2bc192c1c85cdb1d1d53a0\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20312.2 to 10.10.0-beta.20312.5\r\n\r\n[marker]: <> (End:11bb8090-6789-4721-321a-08d8080363b6)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"637211734","IsPullRequest":true,"CreatedAt":"2020-06-11T17:47:15","Actor":"dotnet-maestro-bot","Number":"28050","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28050","RelatedDescription":"Open PR \"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)\" (#28050)"},{"Id":"637176717","IsPullRequest":true,"CreatedAt":"2020-06-11T17:32:59","Actor":"dotnet-maestro-bot","Number":"28049","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @omajid\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28049","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28049)"},{"Id":"629345338","IsPullRequest":true,"CreatedAt":"2020-06-11T16:49:15","Actor":"omajid","Number":"28045","RawContent":null,"Title":"[release/2.1] Fix build with clang 10","State":"closed","Body":"This contains a grab bag of fixes to fix the build with clang 10.\r\n\r\n- https://github.com/dotnet/coreclr/pull/23075\r\n\r\n  Fix missing includes in coreclr/src/debug/createdump/\r\n\r\n- https://github.com/dotnet/runtime/pull/33096\r\n\r\n  SList::Init: add missing constructor\r\n\r\n- A subset of https://github.com/dotnet/coreclr/pull/22129\r\n\r\n  Just the parts that introduce the THROW_DECL macro in pal.h\r\n\r\n- https://github.com/dotnet/runtime/pull/32837\r\n\r\n  This fixes THROW_DECL introduce in the previous PR to work with clang, which\r\n  is required in clang 10.\r\n\r\n- One new change:\r\n\r\n  In a significant divergance, this commits adds more THROW_DECL macros\r\n  to all the math functions to address a ton of errors pointed out when\r\n  building SOS:\r\n\r\n   ```\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/ToolBox/SOS/Strike/strike.cpp:116:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/vm/hillclimbing.h:19:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/inc/complex.h:16:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/math.h:36:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/cmath:45:\r\n    In file included from /usr/include/math.h:290:\r\n    /usr/include/bits/mathcalls.h:53:13: error: exception specification in declaration does not match previous declaration\r\n    __MATHCALL (acos,, (_Mdouble_ __x));\r\n                ^\r\n    /home/omajid/devel/dotnet/coreclr/src/pal/inc/pal.h:4395:26: note: previous declaration is here\r\n    PALIMPORT double __cdecl acos(double);\r\n                             ^\r\n   ```\r\n\r\n  Then, to make sure the declarations and implementations match, it adds\r\n  THROW_DECL to the definitions in src/pal/src/cruntime/math.cpp\r\n\r\nCo-authored-by: Mike McLaughlin <mikem@microsoft.com>\r\nCo-authored-by: Sinan Kaya <sinan.kaya@microsoft.com>\r\nCo-authored-by: Tom Deseyn <tom.deseyn@gmail.com>","Url":"https://github.com/dotnet/coreclr/pull/28045","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix build with clang 10\" (#28045)"},{"Id":"636430835","IsPullRequest":true,"CreatedAt":"2020-06-10T18:41:43","Actor":"Anipik","Number":"28048","RawContent":null,"Title":"Update branding to 2.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28048","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.20\" (#28048)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-06-09T22:25:24","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"closed","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nWe completely missed decode of all x64 simd instruction forms.\r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n  + Additionally the same code was tested for regressions in other areas.\r\n    + Trying a breakpoint on every line of code\r\n    + Stepping through every line of code \r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n  + Shipped in all .NET Core 5.0 previews to date\r\n  + Over the last 90 days, there have been \r\n     + 184K debugging sessions launched on .NET Core 5 previews\r\n     + from 3.3K unique MAC addresses\r\n  + We have no reports of issues linked to this fix\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n  + We have several confirmation that this issue observed in 3.0/3.1 has been fixed by 5.0 \r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n+ @tommcdon & @hoyosjs have each used the x64 debugger since this change for debugging various reported/discovered issues. They saw no issues suggesting a regression.\r\n\r\n## Risk\r\nLow. \r\n+ dotnet/coreclr#25958 has been in 5.0 since 9/2019\r\n+ Only affects x64 debugger operation. \r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n  + Rewrites one function `NativeWalker::DecodeInstructionForPatchSkip()`.  Used only for debugging x64 code.\r\n  + Adds 1 new machine generated instruction decode table. (10k lines)\r\n+ Adds tools to regenerate the parser tables\r\n  + Add 3 files to archive the tool used to generate the decode table.to machine generate. (Only used in development) \r\n+ Adds documentation (1 file)\r\n+ Sufficient testing coverage\r\n \r\n## Code Reviewers\r\n@hoyosjs @tannergooding @noahfalk @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Closed or merged PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"622546826","IsPullRequest":true,"CreatedAt":"2020-06-09T22:16:48","Actor":"mmitche","Number":"28044","RawContent":null,"Title":"[release/3.1] Fix triggers for 3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28044","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix triggers for 3.1\" (#28044)"},{"Id":"635670566","IsPullRequest":true,"CreatedAt":"2020-06-09T22:12:48","Actor":"Anipik","Number":"28047","RawContent":null,"Title":"update branding to 3.1.6","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28047","RelatedDescription":"Closed or merged PR \"update branding to 3.1.6\" (#28047)"},{"Id":"629617445","IsPullRequest":true,"CreatedAt":"2020-06-09T00:40:12","Actor":"AaronRobinsonMSFT","Number":"28046","RawContent":null,"Title":"Support function pointers in field marshalers","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37295\r\n\r\nThis was fixed in .NET 5 when [field marshalling was completely rewritten](https://github.com/dotnet/coreclr/pull/26340).\r\n\r\n## Customer Impact\r\n\r\nUsers will be unable to have function pointers as fields in structs that are used in interop scenarios. [Function pointers](https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md) are now supported in the C# language.\r\n\r\n### Workaround\r\n\r\nThis can naturally be worked around by using `IntPtr`, `UIntPtr`, `void*`, `nint`, or `nuint` as the field and then casting to the appropriate function pointer type at the usage site in managed code. This would severely degrade the UX for usage of function pointers though.\r\n\r\n## Regression?\r\n\r\nNo. This is supporting a new C# feature and previous .NET runtimes never tested/supported this scenario.\r\n\r\n## Testing\r\n\r\nValidated both 32 and 64 bit struct of the field marshalling scenario. This follows the same behavior as a `void*` pointer so no new functionality is added just reuse of an existing code path for a new type.\r\n\r\n## Risk\r\nLow. \r\n\r\n/cc @tannergooding @333fred @jkoritzinsky @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28046","RelatedDescription":"Closed or merged PR \"Support function pointers in field marshalers\" (#28046)"},{"Id":"622076092","IsPullRequest":true,"CreatedAt":"2020-05-20T20:55:40","Actor":"Anipik","Number":"28043","RawContent":null,"Title":"update branding to 2.2.11","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28043","RelatedDescription":"Closed or merged PR \"update branding to 2.2.11\" (#28043)"},{"Id":"622026514","IsPullRequest":true,"CreatedAt":"2020-05-20T19:37:48","Actor":"dotnet-maestro-bot","Number":"28042","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28042","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28042)"},{"Id":"622017923","IsPullRequest":true,"CreatedAt":"2020-05-20T19:15:38","Actor":"Anipik","Number":"28041","RawContent":null,"Title":"update branding for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28041","RelatedDescription":"Closed or merged PR \"update branding for 2.1\" (#28041)"},{"Id":"599126504","IsPullRequest":true,"CreatedAt":"2020-05-20T19:15:20","Actor":"dotnet-maestro-bot","Number":"28034","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28034","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28034)"},{"Id":"614197782","IsPullRequest":true,"CreatedAt":"2020-05-13T16:54:47","Actor":"sywhang","Number":"28038","RawContent":null,"Title":"Port to 3.1 - Fix a native memory leak in EventPipe","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/35924.\r\n\r\nA customer reported a seemingly unbounded memory usage growth over time when using AppInsights: https://github.com/microsoft/ApplicationInsights-dotnet/issues/1678.\r\n\r\nEventPipeBuffers were being allocated using `malloc`, and over time this may cause an internal fragmentation within glibc's internal data structure, resulting in a memory leak over time. A usage pattern that worsens this leak is to start tracing, fill up all the buffers, then stop tracing, and repeat that many times. This fix mitigates the issue by making EventPipeBuffer to use ClrVirtualAlloc instead of malloc.\r\n\r\n## Customer Impact\r\nOn Linux platforms (specifically ones that use glibc), customers may see an unexpected growth in the native heap size over a long period of time if using EventPipe for a long time (ex. using Application Insights Service Profiler), making our first-party and third-party tracing solutions potentially problematic in production scenarios when used for elongated periods of time.\r\n\r\n## Regression?\r\nNo, EventPipe buffers were always allocated using malloc.\r\n\r\n## Testing\r\nThe fix was tested against the scenario the customer provided and . Additional performance tests that use EventPipe showed minimal performance regression (<4 % in the worst case). \r\n\r\n## Risk\r\nI believe the risk is low - the fix is localized to only 3-lines change and the behavior is well-understood. I have tested the fix locally for the past three weeks for various performance measurements and the fix passed all the runtime tracing tests that I ran locally and all the tests in the CI when I merged https://github.com/dotnet/runtime/pull/35924.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28038","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix a native memory leak in EventPipe\" (#28038)"},{"Id":"607419146","IsPullRequest":true,"CreatedAt":"2020-05-13T16:54:21","Actor":"janvorli","Number":"28036","RawContent":null,"Title":"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/713\r\nThere is a race between DynamicMethodDesc::Destroy called from\r\nthe finalizer thread and the MethodDescs enumeration called from\r\nETW::MethodLog::SendEventsForJitMethods at process exit.\r\nDynamicMethodDesc::Destroy cleans up its members m_pSig and\r\nm_pszMethodName and then it calls GetLCGMethodResolver()->Destroy();\r\nThat calls EEJitManager::FreeCodeMemory, which tries to take the\r\nm_CodeHeapCritSec lock. But this lock is already held by\r\nthe ETW::MethodLog::SendEventsForJitMethods.\r\nSo the iterator can see half-destroyed DynamicMethodDesc and\r\na crash happens when trying to get the dynamic method name\r\nfrom the m_pszMethodName for the ETW event purposes.\r\n\r\nThe fix is to call the GetLCGMethodResolver()->Destroy() before\r\ndestroying the m_pSig and m_pszMethodName.\r\n\r\n# Customer impact\r\nThe bug is causing random crashes, one of our teams had to turn off AppInsights temporarily as a workaround.\r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nLocal testing and all libraries and coreclr tests in the runtime repo - this change has been in the runtime master since December.\r\n\r\n# Risk\r\nLow, the change just prolongs lifetime of two DynamicMethodDesc members beyond the point when other code can access them.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28036","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race\" (#28036)"},{"Id":"604969346","IsPullRequest":true,"CreatedAt":"2020-05-13T16:53:54","Actor":"sdmaclea","Number":"28035","RawContent":null,"Title":"Backport Cross DAC runtime layout changes","State":"closed","Body":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n","Url":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Closed or merged PR \"Backport Cross DAC runtime layout changes\" (#28035)"},{"Id":"617035823","IsPullRequest":true,"CreatedAt":"2020-05-13T16:47:30","Actor":"Anipik","Number":"28040","RawContent":null,"Title":"update branding to 3.1.5","State":"closed","Body":"- no darc feed to remove","Url":"https://github.com/dotnet/coreclr/pull/28040","RelatedDescription":"Closed or merged PR \"update branding to 3.1.5\" (#28040)"},{"Id":"616421797","IsPullRequest":true,"CreatedAt":"2020-05-12T07:18:54","Actor":"kouvel","Number":"28039","RawContent":null,"Title":"[3.1] Fix Unix named mutex crash during some race conditions","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\n\r\nBelow when I refer to \"mutex\" I'm referring to the underlying mutex object, not an instance of the `Mutex` class.\r\n- When the last reference to a mutex is closed while the lock is held by some thread and a pthread mutex is used, the mutex was attempted to be destroyed but that has undefined behavior\r\n- There doesn't seem to be a way to behave exactly like on Windows for this corner case, where the mutex is destroyed when the last reference to it is released, regardless of which process has the mutex locked and which process releases the last reference to it (they could be two different processes), including in cases of abrupt shutdown\r\n- For this corner case I settled on what seems like a decent solution and compatible with older runtimes:\r\n  - When a process releases its last reference to the mutex\r\n    - If that mutex is locked by the same thread, the lock is abandoned and the process no longer references the mutex\r\n    - If that mutex is locked by a different thread, the lifetime of the mutex is extended with an implicit ref. The implicit ref prevents this or other processes from attempting to destroy the mutex while it is locked. The implicit ref is removed in either of these cases:\r\n      - The mutex gets another reference from within the same process\r\n      - The thread that owns the lock exits and abandons the mutex, at which point that would be the last reference to the mutex and the process would not reference the mutex anymore\r\n  - The implementation based on file locks is less restricted, but for consistency that implementation also follows the same behavior\r\n- There was also a race between an exiting thread abandoning one of its locked named mutexes and another thread releasing the last reference to it, fixed by using the creation/deletion process lock to synchronize\r\n\r\nFix for https://github.com/dotnet/runtime/issues/34271 in 3.1\r\n\r\n### Customer impact\r\n\r\n- Random crashes were seen on Unixes\r\n- When a named mutex is locked and the last reference to it is released from a different thread in any process, the underlying pthread mutex object is destroyed and that has undefined behavior. Crashes were seen where some data associated with the destroyed pthread mutex continues to be used when acquiring another pthread mutex in racy situations, causing a crash because the memory containing the destroyed pthread mutex is unmapped.\r\n- There was also a race where a thread has acquired the lock of a named mutex, between that thread exiting and abandoning the mutex, and another thread attempting to destroy the mutex\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- PAL named mutex tests on Linux and OSX including in stress mode (1 hour) in debug and release\r\n- System.Threading tests including mutex tests on Linux and OSX with debug and release coreclr\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- It is a bit of a corner case, where a lock is acquired and the mutex is disposed without releasing the lock, especially necessary for this issue is that the thread that disposes the mutex is different from the one that holds the lock\r\n- Since the fix involves extending the lifetime of a mutex in such a case, the underlying shared named mutex may observably live longer than before. That is necessary for correctness, as the behavior there was incorrect before and leading to the crashes.","Url":"https://github.com/dotnet/coreclr/pull/28039","RelatedDescription":"Open PR \"[3.1] Fix Unix named mutex crash during some race conditions\" (#28039)"},{"Id":"613636507","IsPullRequest":true,"CreatedAt":"2020-05-07T17:26:33","Actor":"mikem8361","Number":"28037","RawContent":null,"Title":"Remove SOS_README.md from every app's OutDir","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/35888\r\n\r\nRuntime master repo PR: https://github.com/dotnet/runtime/pull/33878\r\n\r\n# Customer impact\r\nThe is causing customers' apps to fail with SOS_README.md not found. \r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nChange in runtime master already.\r\n\r\n# Risk\r\nLow. Don't ship SOS_README.md anymore and it doesn't get put in the deps files.","Url":"https://github.com/dotnet/coreclr/pull/28037","RelatedDescription":"Closed or merged PR \"Remove SOS_README.md from every app's OutDir\" (#28037)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-04-17T19:59:21","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"closed","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Closed or merged PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-03-31T21:15:35","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"Port Cross OS DAC to 3.1","State":"open","Body":"This represents the changes required to enable Cross OS/Arch DAC for the 3.1 product. This new feature will allow triage and debug of \r\n\r\nThis is currently a superset of #28035, which is the minimum changes to the runtime to allow us to build the Cross DAC out of band and have it work correctly.\r\n\r\n**_This patch set is still under development._**  \r\n+ It is still missing the CI changes required to sign and publish the Cross DAC binaries.\r\n+ It is not fully tested.  This is blocked by a release containing #28035.\r\n+ Depending on partner requirements this change set could grow (likely to support full stack unwind support).\r\n\r\n# Customer impact\r\n\r\nThis implements a new diagnostic feature allowing triage of Linux/Linux-Alpine dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is new 3.1 feature\r\n\r\n # Testing\r\n\r\nThis is based on a series of PR's from the 5.0 branch.\r\n\r\nWe will have Partner sign-off before we consider merging this PR.\r\n\r\nWe have initial manual test results for the new feature from our testing team.\r\n\r\n # Risk\r\n\r\nModerate\r\n\r\nThe intent is to make no functional changes to the runtime.  \r\n\r\nHowever, this change is large.  It introduces lots of changes to the build system and `#if` related to the `Target` and `Host` platform. This is not expected to change the runtime, because for the runtime `Target` == `Host`.  However due to the shear number of changes the change is difficult to exhaustively review.\r\n\r\nThe risk is mitigated in part because errors in the build systems and `#if` would typically trigger compile errors.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"Port Cross OS DAC to 3.1\" (#28027)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"637927016","IsPullRequest":true,"CreatedAt":"2020-06-12T19:26:55","Actor":"dotnet-maestro[bot]","Number":"13398","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200612.12\r\n- **Date Produced**: 6/12/2020 5:56 PM\r\n- **Commit**: 32e8cf29db2e5b3052a70e9b1926fc740aec7ab1\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20271.7 to 3.1.400-preview.20312.12\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13398","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13398)"},{"Id":"637925322","IsPullRequest":true,"CreatedAt":"2020-06-12T18:12:47","Actor":"dotnet-maestro[bot]","Number":"13397","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13397","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13397)"},{"Id":"637285184","IsPullRequest":true,"CreatedAt":"2020-06-12T17:49:53","Actor":"dsplaisted","Number":"13396","RawContent":null,"Title":"Merge internal changes and update branding to 2.1.516","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13396","RelatedDescription":"Closed or merged PR \"Merge internal changes and update branding to 2.1.516\" (#13396)"},{"Id":"628092247","IsPullRequest":true,"CreatedAt":"2020-06-11T18:18:00","Actor":"wli3","Number":"13380","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13380","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13380)"},{"Id":"628091811","IsPullRequest":true,"CreatedAt":"2020-06-11T18:17:56","Actor":"wli3","Number":"13379","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13379","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13379)"},{"Id":"628097280","IsPullRequest":true,"CreatedAt":"2020-06-11T18:17:51","Actor":"wli3","Number":"13383","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13383","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13383)"},{"Id":"628096852","IsPullRequest":true,"CreatedAt":"2020-06-11T18:17:48","Actor":"wli3","Number":"13382","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13382","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13382)"},{"Id":"628095959","IsPullRequest":true,"CreatedAt":"2020-06-11T18:17:45","Actor":"wli3","Number":"13381","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13381","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13381)"},{"Id":"637211803","IsPullRequest":true,"CreatedAt":"2020-06-11T17:47:25","Actor":"dotnet-maestro-bot","Number":"13395","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13395","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13395)"},{"Id":"637211791","IsPullRequest":true,"CreatedAt":"2020-06-11T17:47:22","Actor":"dotnet-maestro-bot","Number":"13394","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13394","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13394)"},{"Id":"637211780","IsPullRequest":true,"CreatedAt":"2020-06-11T17:47:21","Actor":"dotnet-maestro-bot","Number":"13393","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13393","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13393)"},{"Id":"637166798","IsPullRequest":true,"CreatedAt":"2020-06-11T16:38:04","Actor":"dotnet-maestro-bot","Number":"13392","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wtgodbe\n* dsplaisted\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13392","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13392)"},{"Id":"636603503","IsPullRequest":true,"CreatedAt":"2020-06-11T16:35:31","Actor":"dsplaisted","Number":"13391","RawContent":null,"Title":"Merge internal changes and update branding to 3.1.106","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13391","RelatedDescription":"Closed or merged PR \"Merge internal changes and update branding to 3.1.106\" (#13391)"},{"Id":"635830790","IsPullRequest":true,"CreatedAt":"2020-06-10T22:03:54","Actor":"wli3","Number":"13390","RawContent":null,"Title":"Update branding to 2.1.613","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13390","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.613\" (#13390)"},{"Id":"635682692","IsPullRequest":true,"CreatedAt":"2020-06-10T17:02:06","Actor":"sfoslund","Number":"13389","RawContent":null,"Title":"3.1.3xx Branding Update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13389","RelatedDescription":"Closed or merged PR \"3.1.3xx Branding Update\" (#13389)"},{"Id":"635682227","IsPullRequest":true,"CreatedAt":"2020-06-09T22:00:17","Actor":"sfoslund","Number":"13388","RawContent":null,"Title":"2.1.8xx Branding Update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13388","RelatedDescription":"Closed or merged PR \"2.1.8xx Branding Update\" (#13388)"},{"Id":"631990432","IsPullRequest":true,"CreatedAt":"2020-06-06T18:35:30","Actor":"wli3","Number":"13386","RawContent":null,"Title":"Fix pool","State":"closed","Body":"Apply to all existing ubuntu pool.\r\n\r\nDue to failure\r\n\r\nhttps://github.com/dotnet/cli/pull/13382\r\nhttps://github.com/dotnet/cli/pull/13381","Url":"https://github.com/dotnet/cli/pull/13386","RelatedDescription":"Closed or merged PR \"Fix pool\" (#13386)"},{"Id":"631991476","IsPullRequest":true,"CreatedAt":"2020-06-06T18:35:23","Actor":"wli3","Number":"13387","RawContent":null,"Title":"Fix pool","State":"closed","Body":"Apply to all existing ubuntu pool.\r\n\r\nDue to failure\r\n\r\nhttps://github.com/dotnet/cli/pull/13382\r\nhttps://github.com/dotnet/cli/pull/13381","Url":"https://github.com/dotnet/cli/pull/13387","RelatedDescription":"Closed or merged PR \"Fix pool\" (#13387)"},{"Id":"631989120","IsPullRequest":true,"CreatedAt":"2020-06-06T17:11:34","Actor":"wli3","Number":"13385","RawContent":null,"Title":"Fix pool","State":"closed","Body":"Apply to all existing ubuntu pool.\r\n\r\nDue to failure\r\n\r\nhttps://github.com/dotnet/cli/pull/13382\r\nhttps://github.com/dotnet/cli/pull/13381","Url":"https://github.com/dotnet/cli/pull/13385","RelatedDescription":"Closed or merged PR \"Fix pool\" (#13385)"},{"Id":"630892048","IsPullRequest":true,"CreatedAt":"2020-06-04T14:48:25","Actor":"larson-carter","Number":"13384","RawContent":null,"Title":"Port zsh shell completion to #compdef - @mcornella","State":"open","Body":"I did NOT find this solution, I know @mcornella is quite busy and I wanted to make sure that this was able to be formed into a PR.\r\n\r\nThis solves issue https://github.com/dotnet/sdk/issues/9232","Url":"https://github.com/dotnet/cli/pull/13384","RelatedDescription":"Open PR \"Port zsh shell completion to #compdef - @mcornella\" (#13384)"},{"Id":"622234270","IsPullRequest":true,"CreatedAt":"2020-06-03T18:37:43","Actor":"wli3","Number":"13374","RawContent":null,"Title":"Add tests for RestoreUseStaticGraphEvaluation","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/11420\r\nWait after 5/26 need https://github.com/dotnet/toolset/pull/4583 get in first and then update stage 0","Url":"https://github.com/dotnet/cli/pull/13374","RelatedDescription":"Closed or merged PR \"Add tests for RestoreUseStaticGraphEvaluation\" (#13374)"},{"Id":"628074229","IsPullRequest":true,"CreatedAt":"2020-06-01T16:21:33","Actor":"wli3","Number":"13378","RawContent":null,"Title":"Correct tool path append","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13378","RelatedDescription":"Closed or merged PR \"Correct tool path append\" (#13378)"},{"Id":"626819235","IsPullRequest":true,"CreatedAt":"2020-05-28T21:15:19","Actor":"dotnet-maestro[bot]","Number":"13377","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200602.3\r\n- **Date Produced**: 6/2/2020 9:51 PM\r\n- **Commit**: 9b71be0663493cd0e111b55536a2e1eeb272f54c\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20269.3 to 1.0.0-beta.20302.3\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13377","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13377)"},{"Id":"622652478","IsPullRequest":true,"CreatedAt":"2020-05-22T23:00:27","Actor":"dsplaisted","Number":"13375","RawContent":null,"Title":"Update branding to 2.1.515","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13375","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.515\" (#13375)"},{"Id":"622879553","IsPullRequest":true,"CreatedAt":"2020-05-22T03:11:19","Actor":"dotnet-maestro[bot]","Number":"13376","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200521.7\r\n- **Date Produced**: 5/22/2020 12:24 AM\r\n- **Commit**: 112cd1f6e31b506668ab15f816110290643fa91c\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20269.11 to 3.1.400-preview.20271.7\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13376","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13376)"},{"Id":"622116558","IsPullRequest":true,"CreatedAt":"2020-05-20T23:18:35","Actor":"wli3","Number":"13373","RawContent":null,"Title":"Merge internal release 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13373","RelatedDescription":"Closed or merged PR \"Merge internal release 2.1.6xx\" (#13373)"},{"Id":"621441767","IsPullRequest":true,"CreatedAt":"2020-05-20T16:48:34","Actor":"dotnet-maestro[bot]","Number":"13372","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200519.3\r\n- **Date Produced**: 5/20/2020 3:26 AM\r\n- **Commit**: daeea2e8a29de71c551bf8d36dbe2247ee802a46\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.5-servicing.20269.2 to 3.1.5-servicing.20269.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.DotNet.PlatformAbstractions**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.NET.HostModel**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.Extensions.DependencyModel**: from 3.1.5 to 3.1.5\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13372","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13372)"},{"Id":"621441654","IsPullRequest":true,"CreatedAt":"2020-05-20T16:48:14","Actor":"dotnet-maestro[bot]","Number":"13371","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3eeaae8b-fc0e-462d-30ca-08d7d677f4fe)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 3eeaae8b-fc0e-462d-30ca-08d7d677f4fe\r\n- **Build**: 20200519.3\r\n- **Date Produced**: 5/20/2020 3:26 AM\r\n- **Commit**: daeea2e8a29de71c551bf8d36dbe2247ee802a46\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.5-servicing.20269.2 to 3.1.5-servicing.20269.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.DotNet.PlatformAbstractions**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.NET.HostModel**: from 3.1.5 to 3.1.5\r\n  - **Microsoft.Extensions.DependencyModel**: from 3.1.5 to 3.1.5\r\n\r\n[marker]: <> (End:3eeaae8b-fc0e-462d-30ca-08d7d677f4fe)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13371","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/core-setup\" (#13371)"},{"Id":"621308522","IsPullRequest":true,"CreatedAt":"2020-05-20T08:22:11","Actor":"dotnet-maestro[bot]","Number":"13370","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200519.3\r\n- **Date Produced**: 5/19/2020 5:55 PM\r\n- **Commit**: ccfddb60fbd3de13463298334f00610edb5f63c6\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20269.1 to 1.0.0-beta.20269.3\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13370","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13370)"},{"Id":"621303376","IsPullRequest":true,"CreatedAt":"2020-05-20T08:21:28","Actor":"dotnet-maestro[bot]","Number":"13369","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200519.11\r\n- **Date Produced**: 5/20/2020 12:26 AM\r\n- **Commit**: d1248815ac9e6e4210776f95425fd5646c59dece\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20263.9 to 3.1.400-preview.20269.11\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13369","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13369)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"},{"Id":"578529521","IsPullRequest":true,"CreatedAt":"2020-03-10T12:35:54","Actor":"dotnet-maestro[bot]","Number":"1737","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1737)"},{"Id":"577855009","IsPullRequest":true,"CreatedAt":"2020-03-09T12:10:53","Actor":"dotnet-maestro[bot]","Number":"1736","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1736","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1736)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"637209922","IsPullRequest":true,"CreatedAt":"2020-06-11T17:43:55","Actor":"dotnet-maestro-bot","Number":"42933","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42933","RelatedDescription":"Open PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)\" (#42933)"},{"Id":"636443187","IsPullRequest":true,"CreatedAt":"2020-06-10T19:33:29","Actor":"dotnet-maestro-bot","Number":"42932","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42932","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42932)"},{"Id":"636421450","IsPullRequest":true,"CreatedAt":"2020-06-10T17:54:52","Actor":"Anipik","Number":"42931","RawContent":null,"Title":"Merging changes and no branding or packages changes required","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42931","RelatedDescription":"Closed or merged PR \"Merging changes and no branding or packages changes required\" (#42931)"},{"Id":"635667378","IsPullRequest":true,"CreatedAt":"2020-06-09T23:09:40","Actor":"Anipik","Number":"42930","RawContent":null,"Title":"Branding for 3.1.6","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42930","RelatedDescription":"Closed or merged PR \"Branding for 3.1.6\" (#42930)"},{"Id":"631808790","IsPullRequest":true,"CreatedAt":"2020-06-05T23:02:44","Actor":"joperezr","Number":"42929","RawContent":null,"Title":"Removing reference assets from Microsoft.Bcl.AsyncInterfaces and Microsoft.Bcl.HashCode packages","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37496\r\n\r\ncc: @ericstj @StephenBonikowsky @Anipik @andreyns\r\n\r\nApplications that rely on the workflow compiler task require all of the consuming packages to not expose reference assets when restored for .NET Framework. For this reason, we want to remove the reference assets from these two compat packs which are part of the closure of Microsoft.Extensions.Hosting.","Url":"https://github.com/dotnet/corefx/pull/42929","RelatedDescription":"Closed or merged PR \"Removing reference assets from Microsoft.Bcl.AsyncInterfaces and Microsoft.Bcl.HashCode packages\" (#42929)"},{"Id":"626777329","IsPullRequest":true,"CreatedAt":"2020-06-02T19:30:34","Actor":"wfurt","Number":"42928","RawContent":null,"Title":"[release/3.1]  update Ubuntu and Alpine RID","State":"closed","Body":"This is port of https://github.com/dotnet/runtime/pull/37031 to add new RID for Ubuntu and Alpine releases.\r\n\r\nfixes https://github.com/dotnet/runtime/issues/37000\r\n\r\nI'm not sure what the approval process is for this @danmosemsft. \r\nDiscussion in https://github.com/dotnet/corefx/pull/42871 sugests \"tell-mode\"  but I'm not sure if that is still correct.","Url":"https://github.com/dotnet/corefx/pull/42928","RelatedDescription":"Closed or merged PR \"[release/3.1]  update Ubuntu and Alpine RID\" (#42928)"},{"Id":"622653785","IsPullRequest":true,"CreatedAt":"2020-05-21T17:48:40","Actor":"dotnet-maestro-bot","Number":"42927","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42927","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42927)"},{"Id":"622651452","IsPullRequest":true,"CreatedAt":"2020-05-21T17:16:47","Actor":"Anipik","Number":"42926","RawContent":null,"Title":"update branding for 2.1.19","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42926","RelatedDescription":"Closed or merged PR \"update branding for 2.1.19\" (#42926)"},{"Id":"622028652","IsPullRequest":true,"CreatedAt":"2020-05-20T20:56:35","Actor":"Anipik","Number":"42925","RawContent":null,"Title":"update branding for 2.1.19","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42925","RelatedDescription":"Closed or merged PR \"update branding for 2.1.19\" (#42925)"},{"Id":"621235040","IsPullRequest":true,"CreatedAt":"2020-05-20T16:12:17","Actor":"joperezr","Number":"42924","RawContent":null,"Title":"Fixing Debuggable attribute getting set on S.R.CS.Unsafe Release builds","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/36664\r\n\r\ncc: @ericstj @Anipik @jkotas @tannergooding \r\n\r\nFull issue description is on the linked issue above, but generally we recently serviced Unsafe package and added a net461 asset in there which broke some customers since this new asset had attribute `[assembly: Debuggable(DebuggableAttribute.DebuggingModes.Default | DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints)]` set. This fix will change DebugType so that the linker SDK won't send an option to the linker causing this attribute to get set.","Url":"https://github.com/dotnet/corefx/pull/42924","RelatedDescription":"Closed or merged PR \"Fixing Debuggable attribute getting set on S.R.CS.Unsafe Release builds\" (#42924)"},{"Id":"619294250","IsPullRequest":true,"CreatedAt":"2020-05-15T23:14:26","Actor":"dotnet-maestro[bot]","Number":"42923","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200513.2\r\n- **Date Produced**: 5/14/2020 2:56 AM\r\n- **Commit**: b1745659051f73cf089fbfb2ebbe4648c2fb6c12\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR**: from 3.1.4-servicing.20202.1 to 3.1.4-servicing.20263.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42923","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42923)"},{"Id":"618429792","IsPullRequest":true,"CreatedAt":"2020-05-14T21:56:53","Actor":"joperezr","Number":"42922","RawContent":null,"Title":"Reving up version of WinHttpHandler to 4.7.2","State":"closed","Body":"cc: @ericstj @Anipik @wtgodbe @mmitche ","Url":"https://github.com/dotnet/corefx/pull/42922","RelatedDescription":"Closed or merged PR \"Reving up version of WinHttpHandler to 4.7.2\" (#42922)"},{"Id":"618396928","IsPullRequest":true,"CreatedAt":"2020-05-14T21:54:20","Actor":"joperezr","Number":"42921","RawContent":null,"Title":"Fixing System.Net.Http.Json so that it won't require facades when restored in net461","State":"closed","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nThis is a new package comming in from the blazor branch, which for it's release would have still required the netstandard shims. By re-spinning a build it will automatically get fixed so that is what this PR is doing.","Url":"https://github.com/dotnet/corefx/pull/42921","RelatedDescription":"Closed or merged PR \"Fixing System.Net.Http.Json so that it won't require facades when restored in net461\" (#42921)"},{"Id":"605120509","IsPullRequest":true,"CreatedAt":"2020-05-14T17:19:44","Actor":"joperezr","Number":"42910","RawContent":null,"Title":"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds","State":"closed","Body":"cc: @ericstj @Anipik @wtgodbe \r\n\r\nThese changes will fix WinHttpHandler to make it build against the net461 targeting pack first to avoid regression when the netstandard facades are not injected by the package automatically. This should unblock us from shipping WinHttpHandler package again now without the need of the netstandard facades.\r\n\r\nFYI: @karelz after this is in, we will be able to ship the pending change on WinHttpHandler package.\r\n\r\nI will add the No Merge label since this is not supposed to ship until next release and branches are locked right now.\r\n\r\nFYI: @Jozkee we will most likely need to do the same changes to the package we are shipping for Blazor.","Url":"https://github.com/dotnet/corefx/pull/42910","RelatedDescription":"Closed or merged PR \"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds\" (#42910)"},{"Id":"610893020","IsPullRequest":true,"CreatedAt":"2020-05-13T23:31:35","Actor":"joperezr","Number":"42915","RawContent":null,"Title":"Merging Blazor feature branch into release/3.1","State":"closed","Body":"cc: @ericstj @pranavkm @Jozkee @Anipik @safern \r\n\r\nThis was mostly a straight forward merge except for the following conflicts/changes I made:\r\n\r\n- **[Merge Conflict]** eng\\Versions.props: We had done some special branding for blazor feature branch, I kept source as it was on release/3.1 branch as that is what we wanted.\r\n- **[Merge Conflict]** src\\packages.builds: We had conflicts here since the packages that were being built were different. I kept source as it was on release/3.1.\r\n- **[Post-Merge manual change]** eng\\corefx-base.yml and eng\\windows.yml: We made some changes on the blazor feature branch in order to ONLY ship the http json package on these yml files. I removed those changes and kept source as it was on release/3.1\r\n- **[Post-Merge manual change]** packageIndex.json: I manually added the 3.2.0 as stable version, as it will have shipped by the time we merge this PR\r\n\r\nOther than the above details, this was just a direct merge and I didn't have to edit anything else.","Url":"https://github.com/dotnet/corefx/pull/42915","RelatedDescription":"Closed or merged PR \"Merging Blazor feature branch into release/3.1\" (#42915)"},{"Id":"605073774","IsPullRequest":true,"CreatedAt":"2020-05-13T21:44:31","Actor":"joperezr","Number":"42909","RawContent":null,"Title":"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages","State":"closed","Body":"We recently merged https://github.com/dotnet/corefx/pull/42901 which main purpose was to remove the need of the netstandard facades when using our OOB packages in net461+. Unfortunately by doing this we did find a side-effect (by using manual verification) with the System.Net.Http.WinHttpHandler package so we had to undo shipping that package with https://github.com/dotnet/corefx/pull/42908. We could have caught this in our package testing if we had enabled VerifyReferenceClosure for netfx, but that was currently disabled. This PR will enable those checks to make sure we never regress this scenario again.\r\n\r\ncc: @ericstj @Anipik @wtgodbe \r\nFYI: @karelz \r\n\r\nThis is a test-only change. The branch is locked right now because of the release process so I will add the NoMerge label, but will remove it once branch is unlocked.","Url":"https://github.com/dotnet/corefx/pull/42909","RelatedDescription":"Closed or merged PR \"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages\" (#42909)"},{"Id":"608486062","IsPullRequest":true,"CreatedAt":"2020-05-13T21:41:11","Actor":"vcsjones","Number":"42914","RawContent":null,"Title":"[release/3.1] Handle additional chain statuses for X509Chain on macOS","State":"closed","Body":"Ports the following PRs from runtime in to the release/3.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/3.1 branch.\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 3.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42914","RelatedDescription":"Closed or merged PR \"[release/3.1] Handle additional chain statuses for X509Chain on macOS\" (#42914)"},{"Id":"605929794","IsPullRequest":true,"CreatedAt":"2020-05-13T21:39:00","Actor":"mconnew","Number":"42912","RawContent":null,"Title":"Fix serialization of read-only IEnumerable's for DCS","State":"closed","Body":"Servicing change for dotnet/runtime#34151\r\n\r\n## Description\r\n\r\nWhen a DataContractSerializer is created for an IEnumerable type without a default constructor, we should still be able to serialize the contents even though we can't instantiate an instance when deserializing. The silverlight implementation of DCS was originally ported which lacks this capability.  This breaks serialization of the results from many LINQ queries.  \r\nThe fix is to port the late throwing capability from .NET Framework.\r\n\r\n## Customer Impact\r\n\r\nInternal customer is unable to port an existing .NET Framework WCF based service to CoreWCF.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework. This is not a regression from earlier versions of .NET Core.\r\n\r\n## Testing\r\n\r\nThis includes a unit test which serializes a LINQ query result which returns a type without a default constructor.\r\n\r\n## Risk\r\n\r\n**Low**. This is porting the existing implementation from .NET Framework. It's not introducing any new failure code paths as it turns a throw into a potential deferred throw. Existing happy code path is unaltered. Includes tests for the specific customer scenario.","Url":"https://github.com/dotnet/corefx/pull/42912","RelatedDescription":"Closed or merged PR \"Fix serialization of read-only IEnumerable's for DCS\" (#42912)"},{"Id":"617635660","IsPullRequest":true,"CreatedAt":"2020-05-13T21:32:27","Actor":"Anipik","Number":"42920","RawContent":null,"Title":"Update branding for 3.1.5","State":"closed","Body":"The history looks distorted because we didnt merge the internal branches as it was not required.\r\ni updated the branding and packageindex.\r\nand removed the packages from packages.build","Url":"https://github.com/dotnet/corefx/pull/42920","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.5\" (#42920)"},{"Id":"617630775","IsPullRequest":true,"CreatedAt":"2020-05-13T17:38:18","Actor":"Anipik","Number":"42919","RawContent":null,"Title":"[Donnot review]Branding2","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42919","RelatedDescription":"Closed or merged PR \"[Donnot review]Branding2\" (#42919)"},{"Id":"617035111","IsPullRequest":true,"CreatedAt":"2020-05-12T23:52:49","Actor":"Anipik","Number":"42918","RawContent":null,"Title":"update branding to 3.1.5","State":"closed","Body":"- There was no darc feed to remove","Url":"https://github.com/dotnet/corefx/pull/42918","RelatedDescription":"Closed or merged PR \"update branding to 3.1.5\" (#42918)"},{"Id":"616423599","IsPullRequest":true,"CreatedAt":"2020-05-12T07:22:11","Actor":"kouvel","Number":"42917","RawContent":null,"Title":"[3.1] Test-only followup for \"Fix Unix named mutex crash during some race conditions\"","State":"open","Body":"Test-only port of https://github.com/dotnet/runtime/pull/36268 to 3.1\r\nTest-only followup for and depends on https://github.com/dotnet/coreclr/pull/28039\r\n\r\nCloses https://github.com/dotnet/runtime/issues/34271","Url":"https://github.com/dotnet/corefx/pull/42917","RelatedDescription":"Open PR \"[3.1] Test-only followup for \"Fix Unix named mutex crash during some race conditions\"\" (#42917)"},{"Id":"611046209","IsPullRequest":true,"CreatedAt":"2020-05-05T17:54:59","Actor":"vcsjones","Number":"42916","RawContent":null,"Title":"[release/2.1] Handle additional chain statuses for X509Chain on macOS","State":"closed","Body":"Ports the following PRs in to the release/2.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n* dotnet/corefx#40117\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/2.1 branch.\r\n\r\nThis omits the unit test changes from 40117 because that test does not exist in release/2.1\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 2.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42916","RelatedDescription":"Closed or merged PR \"[release/2.1] Handle additional chain statuses for X509Chain on macOS\" (#42916)"},{"Id":"607782633","IsPullRequest":true,"CreatedAt":"2020-04-27T20:10:29","Actor":"pranavkm","Number":"42913","RawContent":null,"Title":"Produce stable builds of System.Net.Http.Json","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42913","RelatedDescription":"Closed or merged PR \"Produce stable builds of System.Net.Http.Json\" (#42913)"},{"Id":"605904437","IsPullRequest":true,"CreatedAt":"2020-04-24T17:27:45","Actor":"joperezr","Number":"42911","RawContent":null,"Title":"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461","State":"closed","Body":"cc: @ericstj \r\n\r\nAs expected, System.Net.Http.Json net461 configuration incorrectly depends on System.Net.Http.dll version 4.2.0.0. This is fine for now since HttpJson package depends on the netstandard facades, but this will change once this branch is merged to release/3.1 so it is important to make sure that we address this now. I have verified that after this change the package reflects the change only on the lib/net461 asset by downgrading its System.Net.Http dependency from 4.2.0.0 down to 4.0.0.0. Apart from that, the package remains unchanged.\r\n\r\nFYI: @Jozkee ","Url":"https://github.com/dotnet/corefx/pull/42911","RelatedDescription":"Closed or merged PR \"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461\" (#42911)"},{"Id":"604162038","IsPullRequest":true,"CreatedAt":"2020-04-21T20:25:19","Actor":"joperezr","Number":"42908","RawContent":null,"Title":"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461","State":"closed","Body":"cc: @wtgodbe @Anipik @mmitche @ericstj \r\n\r\nThis will undo the build of System.Net.Http.WinHttpHandler\r\n\r\nFYI: @karelz @alnikola as this affects #42888 fix.\r\n","Url":"https://github.com/dotnet/corefx/pull/42908","RelatedDescription":"Closed or merged PR \"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461\" (#42908)"},{"Id":"601680398","IsPullRequest":true,"CreatedAt":"2020-04-17T21:57:41","Actor":"Jozkee","Number":"42906","RawContent":null,"Title":"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/35040\r\n\r\ncc @ericstj @jeffhandley ","Url":"https://github.com/dotnet/corefx/pull/42906","RelatedDescription":"Closed or merged PR \"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)\" (#42906)"},{"Id":"602197177","IsPullRequest":true,"CreatedAt":"2020-04-17T19:49:27","Actor":"cheenamalhotra","Number":"42907","RawContent":null,"Title":"[Release/3.1] Address MARS TDS header contained errors","State":"open","Body":"Ports PR https://github.com/dotnet/SqlClient/pull/490 that fixes issue https://github.com/dotnet/SqlClient/issues/85\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/85 where client applications fail intermittently with below exception:\r\n\r\n`System.Data.SqlClient.SqlException (0x80131904): The incoming tabular data stream (TDS) protocol stream is incorrect. The MARS TDS header contained errors.`\r\n\r\n### Customer Impact\r\nHigh. A lot of customers are impacted with this bug.\r\n\r\n### Regression?\r\nNo\r\n\r\n### Testing\r\nPreviously SqlClient tests did not cover this use-case, but test has been added to cover this scenario in this PR.\r\n\r\n### Risk\r\n**Low**: The fix has been verified with all bound tests, EF Core tests and many customers have also reported they are able to now run their applications in heavy load successfully.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel \r\n\r\n_Edit: We're holding on to merge this PR right now, will re-activate when ready._","Url":"https://github.com/dotnet/corefx/pull/42907","RelatedDescription":"Open PR \"[Release/3.1] Address MARS TDS header contained errors\" (#42907)"},{"Id":"601512593","IsPullRequest":true,"CreatedAt":"2020-04-17T04:24:35","Actor":"ericstj","Number":"42905","RawContent":null,"Title":"Update branding to rc","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42905","RelatedDescription":"Closed or merged PR \"Update branding to rc\" (#42905)"},{"Id":"599733444","IsPullRequest":true,"CreatedAt":"2020-04-14T22:05:24","Actor":"dotnet-maestro[bot]","Number":"42904","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200413.4\r\n- **Date Produced**: 4/13/2020 7:11 PM\r\n- **Commit**: 1a55276ab9d16792cec595ba870df39a9d97d5ca\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 2.4.1-beta.20113.5 to 2.4.1-beta.20213.4\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: from 2.5.1-beta.20113.5 to 2.5.1-beta.20213.4\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.ApiCompat**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: from 2.2.0-beta.20113.5 to 2.2.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CoreFxTesting**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenAPI**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenFacades**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 2.0.0-beta.20113.5 to 2.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42904","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42904)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"638269202","IsPullRequest":false,"CreatedAt":"2020-06-14T02:21:30","Actor":"gafter","Number":"45157","RawContent":null,"Title":"Improve the \"not exhaustive\" diagnostic in the presence of a when clause.","State":"open","Body":"After https://github.com/dotnet/roslyn/pull/44702 we produce a diagnostic that gives an example of a pattern that would cover a non-covered scenario in a switch expression that isn't exhaustive. However, we don't tell the user when that is because of the presence of a `when` clause. @alrz observed this [in code review](https://github.com/dotnet/roslyn/pull/44702#issuecomment-641706686):\r\n\r\n> I wonder what example we give for:\r\n> ```cs\r\n> return unsigned switch \r\n> {\r\n>   0 => true,\r\n>   var x when x > 0 => false,\r\n> };\r\n> ```\r\n> I would expect `_` since any other number is caught by the second arm. F# gives the example anyways but has a special diagnostic in presence of when. `For example, the value '1' may indicate a case not covered by the pattern(s). However, a pattern rule with a 'when' clause might successfully match this value.`\r\n\r\nWe should definitely enhance the diagnostic to include this information when appropriate.\r\n","Url":"https://github.com/dotnet/roslyn/issues/45157","RelatedDescription":"Open issue \"Improve the \"not exhaustive\" diagnostic in the presence of a when clause.\" (#45157)"},{"Id":"638255676","IsPullRequest":true,"CreatedAt":"2020-06-14T00:04:39","Actor":"dotnet-bot","Number":"45156","RawContent":null,"Title":"Merge master to features/UsedAssemblyReferences","State":"open","Body":"\nThis is an automatically generated pull request from master into features/UsedAssemblyReferences.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/UsedAssemblyReferences\ngit reset --hard upstream/features/UsedAssemblyReferences\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/UsedAssemblyReferences --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45156","RelatedDescription":"Open PR \"Merge master to features/UsedAssemblyReferences\" (#45156)"},{"Id":"638255650","IsPullRequest":true,"CreatedAt":"2020-06-14T00:04:24","Actor":"dotnet-bot","Number":"45155","RawContent":null,"Title":"Merge master to features/source-generators","State":"open","Body":"\nThis is an automatically generated pull request from master into features/source-generators.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/source-generators\ngit reset --hard upstream/features/source-generators\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/source-generators --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45155","RelatedDescription":"Open PR \"Merge master to features/source-generators\" (#45155)"},{"Id":"638255635","IsPullRequest":true,"CreatedAt":"2020-06-14T00:04:10","Actor":"dotnet-bot","Number":"45154","RawContent":null,"Title":"Merge master to features/target-typing","State":"open","Body":"\nThis is an automatically generated pull request from master into features/target-typing.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/target-typing\ngit reset --hard upstream/features/target-typing\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/target-typing --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45154","RelatedDescription":"Open PR \"Merge master to features/target-typing\" (#45154)"},{"Id":"638255556","IsPullRequest":true,"CreatedAt":"2020-06-14T00:03:35","Actor":"dotnet-bot","Number":"45153","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45153","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#45153)"},{"Id":"638255347","IsPullRequest":true,"CreatedAt":"2020-06-14T00:01:57","Actor":"dotnet-bot","Number":"45152","RawContent":null,"Title":"Merge master to release/dev16.8-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.8-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.8-preview1\ngit reset --hard upstream/release/dev16.8-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.8-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45152","RelatedDescription":"Open PR \"Merge master to release/dev16.8-preview1\" (#45152)"},{"Id":"638231847","IsPullRequest":true,"CreatedAt":"2020-06-13T22:33:07","Actor":"dotnet-bot","Number":"45149","RawContent":null,"Title":"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.8-preview1 into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/release/dev16.8-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45149","RelatedDescription":"Closed or merged PR \"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps\" (#45149)"},{"Id":"638231728","IsPullRequest":true,"CreatedAt":"2020-06-13T22:30:33","Actor":"dotnet-bot","Number":"45148","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45148","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.8-preview1-vs-deps\" (#45148)"},{"Id":"638236469","IsPullRequest":true,"CreatedAt":"2020-06-13T21:28:08","Actor":"ryzngard","Number":"45151","RawContent":null,"Title":"Fix possible problem with TelemetryId","State":"open","Body":"TelemetryId we use based on class type uses a platform dependent hashcode algorithm for strings. Currently this works because we only support one type for VS. In the future this could regress easily. This adds a platform independent hash using FNV to the GUID used to identify a type. \r\n\r\nThis has the benefit of maintaining the current behavior as the first 4 bytes of the hash, but also allows a more permanent fix to start flowing through. Telemetry could still be queried for the first 4 bytes for now, but later those will need to be ignored to be exact. ","Url":"https://github.com/dotnet/roslyn/pull/45151","RelatedDescription":"Open PR \"Fix possible problem with TelemetryId\" (#45151)"},{"Id":"638235180","IsPullRequest":true,"CreatedAt":"2020-06-13T21:18:00","Actor":"Kuinox","Number":"45150","RawContent":null,"Title":"Fix MakeMethodAsynchronous on ValueTask without generics.","State":"open","Body":"Hello ~\r\nThe MakeMethodAsynchronous code fix does not recognize method return type ValueTask, resulting in a Task<ValueTask>.\r\nThe fix is straightforward and I added a test for it.","Url":"https://github.com/dotnet/roslyn/pull/45150","RelatedDescription":"Open PR \"Fix MakeMethodAsynchronous on ValueTask without generics.\" (#45150)"},{"Id":"638205086","IsPullRequest":true,"CreatedAt":"2020-06-13T19:44:55","Actor":"dotnet-bot","Number":"45142","RawContent":null,"Title":"Merge master to release/dev16.8-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.8-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.8-preview1\ngit reset --hard upstream/release/dev16.8-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.8-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45142","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.8-preview1\" (#45142)"},{"Id":"638205428","IsPullRequest":true,"CreatedAt":"2020-06-13T19:44:48","Actor":"dotnet-bot","Number":"45144","RawContent":null,"Title":"Merge master to features/target-typing","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/target-typing.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/target-typing\ngit reset --hard upstream/features/target-typing\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/target-typing --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45144","RelatedDescription":"Closed or merged PR \"Merge master to features/target-typing\" (#45144)"},{"Id":"638205317","IsPullRequest":true,"CreatedAt":"2020-06-13T19:44:35","Actor":"dotnet-bot","Number":"45143","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45143","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#45143)"},{"Id":"638218277","IsPullRequest":true,"CreatedAt":"2020-06-13T19:33:12","Actor":"333fred","Number":"45147","RawContent":null,"Title":"Report better errors when multiple invalid constraints are combined","State":"open","Body":"Instead of reporting that a constraint must come first, if there are multiple constraints that must come first, we now report that these constraints cannot be combined. We also suppress these errors if a previous error about inherited constraints was reported. Fixes https://github.com/dotnet/roslyn/issues/45141.\r\n","Url":"https://github.com/dotnet/roslyn/pull/45147","RelatedDescription":"Open PR \"Report better errors when multiple invalid constraints are combined\" (#45147)"},{"Id":"638212424","IsPullRequest":false,"CreatedAt":"2020-06-13T18:52:52","Actor":"333fred","Number":"45146","RawContent":null,"Title":"`var` variables cannot be used in `nameof` in the same line.","State":"open","Body":"```cs\r\nclass C\r\n{\r\n    static string M(string s)\r\n    {\r\n        var a = M(nameof(a)); // Error: a is not definitely assigned\r\n        string b = M(nameof(b)); // Works fine.\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/45146","RelatedDescription":"Open issue \"`var` variables cannot be used in `nameof` in the same line.\" (#45146)"},{"Id":"638205594","IsPullRequest":false,"CreatedAt":"2020-06-13T18:05:15","Actor":"Youssef1313","Number":"45145","RawContent":null,"Title":"NullReferenceException on GetChangedRoot call while the xmldoc doesn't mention any exception","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 16.5.4\r\n\r\n**Steps to Reproduce**:\r\n\r\nhttps://stackoverflow.com/questions/62363572 (It's not answered yet, but whether the code I've have a problem or not, the xmldoc should mention that GetChangedRoot may throw an exception with, and when/why it's thrown with the `<exception>` tag.","Url":"https://github.com/dotnet/roslyn/issues/45145","RelatedDescription":"Open issue \"NullReferenceException on GetChangedRoot call while the xmldoc doesn't mention any exception\" (#45145)"},{"Id":"638203451","IsPullRequest":false,"CreatedAt":"2020-06-13T17:51:01","Actor":"333fred","Number":"45141","RawContent":null,"Title":"`where T : class, notnull` error is confusing","State":"open","Body":"If you have `where T: class, notnull`, the error is that `notnull` must come first. If you have `where T: notnull, class`, the error is that `class` must come first. We should detect this situation and give a good error.","Url":"https://github.com/dotnet/roslyn/issues/45141","RelatedDescription":"Open issue \"`where T : class, notnull` error is confusing\" (#45141)"},{"Id":"638200649","IsPullRequest":false,"CreatedAt":"2020-06-13T17:32:50","Actor":"Youssef1313","Number":"45140","RawContent":null,"Title":"ArgumentOutOfRangeException while typing","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 16.5.4\r\n\r\n**Steps to Reproduce**:\r\n\r\nIt happened when I pressed (<kbd>Ctrl</kbd>+<kbd>Backspace</kbd>) to delete something, but I myself can't reproduce it again. I don't know if it's useful without clear steps or not, but reporting it anyways.\r\n\r\nHere are the logs:\r\n\r\n```\r\n    <record>1150</record>\r\n    <time>2020/06/13 17:29:55.231</time>\r\n    <type>Error</type>\r\n    <source>Editor or Editor Extension</source>\r\n    <description>System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.&#x000D;&#x000A;Parameter name: span&#x000D;&#x000A;   at Microsoft.VisualStudio.Text.SnapshotSpan..ctor(ITextSnapshot snapshot, Span span)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.NavigableSymbolClassifier.SetNavigableSymbolSpan(Nullable`1 span)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.UpdateMouseCursorAndNavigableSpan(Nullable`1 span)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.&lt;QueryNavigableSymbolAsync&gt;d__35.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.&lt;SetMouseCursorAndNavigableSpanHelperAsync&gt;d__33.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.&lt;SetMouseCursorAndNavigableSpanHelperAsync&gt;d__33.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.&lt;&gt;c__DisplayClass32_0.&lt;&lt;SetMouseCursorAndNavigableSpanAsync&gt;b__0&gt;d.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Threading.JoinableTask.&lt;JoinAsync&gt;d__68.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Threading.JoinableTask`1.&lt;JoinAsync&gt;d__3.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.GoToDefMouseHandler.&lt;SetMouseCursorAndNavigableSpanAsync&gt;d__32.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.&lt;CallExtensionPointAsync&gt;d__34.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)</description>\r\n  </entry>\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/45140","RelatedDescription":"Open issue \"ArgumentOutOfRangeException while typing\" (#45140)"},{"Id":"638104057","IsPullRequest":true,"CreatedAt":"2020-06-13T07:45:50","Actor":"dotnet-bot","Number":"45138","RawContent":null,"Title":"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.8-preview1 into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/release/dev16.8-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45138","RelatedDescription":"Closed or merged PR \"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps\" (#45138)"},{"Id":"638103950","IsPullRequest":true,"CreatedAt":"2020-06-13T07:33:45","Actor":"dotnet-bot","Number":"45137","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45137","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.8-preview1-vs-deps\" (#45137)"},{"Id":"638104395","IsPullRequest":true,"CreatedAt":"2020-06-13T06:06:01","Actor":"jrmoreno1","Number":"45139","RawContent":null,"Title":"#3438, use standard Type Conversion Functions when possible","State":"open","Body":"use standard Type Conversion Functions when possible (including CStr), and not CType.","Url":"https://github.com/dotnet/roslyn/pull/45139","RelatedDescription":"Open PR \"#3438, use standard Type Conversion Functions when possible\" (#45139)"},{"Id":"638084018","IsPullRequest":true,"CreatedAt":"2020-06-13T05:55:28","Actor":"dotnet-bot","Number":"45134","RawContent":null,"Title":"Merge master to features/target-typing","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/target-typing.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/target-typing\ngit reset --hard upstream/features/target-typing\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/target-typing --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45134","RelatedDescription":"Closed or merged PR \"Merge master to features/target-typing\" (#45134)"},{"Id":"638083770","IsPullRequest":true,"CreatedAt":"2020-06-13T05:55:25","Actor":"dotnet-bot","Number":"45129","RawContent":null,"Title":"Merge master to release/dev16.8-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.8-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.8-preview1\ngit reset --hard upstream/release/dev16.8-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.8-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45129","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.8-preview1\" (#45129)"},{"Id":"638083953","IsPullRequest":true,"CreatedAt":"2020-06-13T05:55:22","Actor":"dotnet-bot","Number":"45132","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45132","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#45132)"},{"Id":"638100846","IsPullRequest":true,"CreatedAt":"2020-06-13T05:35:25","Actor":"jcouv","Number":"45136","RawContent":null,"Title":"Handle custom modifiers on copy ctor","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/44902","Url":"https://github.com/dotnet/roslyn/pull/45136","RelatedDescription":"Open PR \"Handle custom modifiers on copy ctor\" (#45136)"},{"Id":"638083864","IsPullRequest":true,"CreatedAt":"2020-06-13T04:36:50","Actor":"dotnet-bot","Number":"45131","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45131","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.8-preview1-vs-deps\" (#45131)"},{"Id":"638083973","IsPullRequest":true,"CreatedAt":"2020-06-13T04:33:17","Actor":"dotnet-bot","Number":"45133","RawContent":null,"Title":"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.8-preview1 into release/dev16.8-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps\ngit reset --hard upstream/release/dev16.8-preview1-vs-deps\ngit merge upstream/release/dev16.8-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.8-preview1-to-release/dev16.8-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45133","RelatedDescription":"Closed or merged PR \"Merge release/dev16.8-preview1 to release/dev16.8-preview1-vs-deps\" (#45133)"},{"Id":"638083834","IsPullRequest":true,"CreatedAt":"2020-06-13T04:31:14","Actor":"dotnet-bot","Number":"45130","RawContent":null,"Title":"Merge release/dev16.7-preview3-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.7-preview3-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-preview3-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.7-preview3-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-preview3-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/45130","RelatedDescription":"Closed or merged PR \"Merge release/dev16.7-preview3-vs-deps to master-vs-deps\" (#45130)"},{"Id":"638043077","IsPullRequest":true,"CreatedAt":"2020-06-12T23:06:50","Actor":"RikkiGibson","Number":"45128","RawContent":null,"Title":"Check partial method return type compatibility","State":"open","Body":"Closes #44930 \r\n","Url":"https://github.com/dotnet/roslyn/pull/45128","RelatedDescription":"Open PR \"Check partial method return type compatibility\" (#45128)"},{"Id":"638087948","IsPullRequest":false,"CreatedAt":"2020-06-12T18:53:18","Actor":"faruknane","Number":"45135","RawContent":null,"Title":"[BUG?] Bypassing \"cannot take the pointer of a local variable shared by anonymous functions.\" ","State":"open","Body":"<!--This is just a template - feel free to delete any and all of it and replace as appropriate.-->\r\n\r\n### Description\r\n\r\n<!--\r\n* Please share a clear and concise description of the problem.\r\n* Include minimal steps to reproduce the problem if possible. E.g.: the smallest possible code snippet; or a small repo to clone, with steps to run it.\r\n* What behavior are you seeing, and what behavior would you expect?\r\n  -->\r\nThere is a limitation in C# that ensures that a local variable cannot be changed unintentionally which is shared by anonymous functions (Func<,,,>). What the limitation does is blocking getting the address of that local variable. \r\n\r\n![image](https://user-images.githubusercontent.com/37745467/84536097-ca58be80-acf5-11ea-9855-d9a7db5c482e.png)\r\n\r\nHowever, I was able to bypass that limitation with a **\"ref\"** keyword.  \r\n\r\n```csharp\r\n        public unsafe static (Func<int>, Func<int>, IntPtr) A()\r\n        {\r\n            int x = 5;\r\n\r\n            //int* ptr = &x; //throws error\r\n\r\n            return \r\n            (() => \r\n            {\r\n                x--;\r\n                return x; \r\n            }, \r\n\r\n            () =>\r\n            {\r\n                x+=10;\r\n                return x;\r\n            }, \r\n\r\n            (IntPtr)B(ref x));\r\n        }\r\n\r\n        public unsafe static int* B(ref int p)\r\n        {\r\n            fixed(int* ptr = &p)\r\n                return ptr;\r\n        }\r\n\r\n        unsafe static void Main(string[] args)\r\n        {\r\n            var (f1, f2, p) = A();\r\n            int* ptr = (int*)p;\r\n\r\n            Console.WriteLine(f1());\r\n            Console.WriteLine(f2());\r\n            *ptr = -10;\r\n            Console.WriteLine(f1());\r\n            Console.WriteLine(f2());\r\n        }\r\n```\r\nThere are already other solutions probably to bypassing the limitation.\r\nHowever, being not able to get the pointer of a shared local variable and being able to pass the variable with a ref keyword at the same time is not logical. I'd like to suggest block the ref keyword usage with the local variables shared by anonymous functions or let both available to the developers.  \r\n### Configuration\r\n\r\n<!--\r\n* Which version of .NET is the code running on?\r\n* What OS and version, and what distro if applicable?\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n* Do you know whether it is specific to that configuration?\r\n  -->\r\n\r\nWhich version of .NET is the code running on? .NET5 preview x\r\n\r\n\r\n### Output of the example code\r\n\r\n![image](https://user-images.githubusercontent.com/37745467/84536511-aba6f780-acf6-11ea-8d30-1919beeaf9ca.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/45135","RelatedDescription":"Open issue \"[BUG?] Bypassing \"cannot take the pointer of a local variable shared by anonymous functions.\" \" (#45135)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"632648236","IsPullRequest":true,"CreatedAt":"2020-06-13T14:25:17","Actor":"MichalStrehovsky","Number":"8188","RawContent":null,"Title":"Prevent out/ref marshalling of COM interfaces","State":"closed","Body":"AllocAndTransform is not called for out/ref marshalling, so this was ending up blitting the raw pointer across.","Url":"https://github.com/dotnet/corert/pull/8188","RelatedDescription":"Closed or merged PR \"Prevent out/ref marshalling of COM interfaces\" (#8188)"},{"Id":"634870701","IsPullRequest":true,"CreatedAt":"2020-06-13T14:24:39","Actor":"MichalStrehovsky","Number":"8194","RawContent":null,"Title":"Delete RD.XML related fwlinks","State":"closed","Body":"The RD.XML format CoreRT uses is different from .NET Native, so this probably causes more harm than good.","Url":"https://github.com/dotnet/corert/pull/8194","RelatedDescription":"Closed or merged PR \"Delete RD.XML related fwlinks\" (#8194)"},{"Id":"635039753","IsPullRequest":true,"CreatedAt":"2020-06-13T13:37:24","Actor":"yowl","Number":"8195","RawContent":null,"Title":"Wasm: clear shadow stack slots in case of call to RhCollect","State":"closed","Body":"As part of fixing #8171, its apparent that there is a bug in the call to `GC.Collect` which prevents some objects from being collected.   This PR fixes this.\r\n\r\nWhat happens is that in `RhCollect` and `System_Runtime_InternalCalls__RhpCollect` 3 slots are allocated on the shadow stack but are not all set before the call to `RhpCollect`.  If these slots have object references in them, from previous calls which used more of the shadow stack, then these references will still be there, and if they are the only references left to live objects, will prevent those objects from being collected.  \r\n\r\nNot a huge deal in the long term as at some point they would probably have gotten overwritten or collected, but a definitely a problem when testing.","Url":"https://github.com/dotnet/corert/pull/8195","RelatedDescription":"Closed or merged PR \"Wasm: clear shadow stack slots in case of call to RhCollect\" (#8195)"},{"Id":"638160907","IsPullRequest":true,"CreatedAt":"2020-06-13T13:18:49","Actor":"MichalStrehovsky","Number":"8204","RawContent":null,"Title":"Allow preinitializing delegates and reading initonly statics","State":"open","Body":"This extends the static constructor interpreter with support for preinitializing delegates and support for reading readonly static fields declared by other types.\r\n\r\nThe readonly static fields can be accessed after interpreting the static constructor of the containing type. This opens us up to recursive dependencies - the interpreter will bail if recursive dependency is hit (we already have a test).\r\n\r\nThis significantly improves the interpreter's ability to run static constructors at compile time:\r\n\r\n|          | Eligible types | Preinitialized before | Preinitialized after |\r\n| -------- | -------------- | --------------------- | -------------------- |\r\n| WinForms | 1520           | 702                   | 967                  |\r\n| WebApi   | 2005           | 746                   | 1278                 |\r\n\r\nAbout 60% of types now have their static constructor executed at compile time.","Url":"https://github.com/dotnet/corert/pull/8204","RelatedDescription":"Open PR \"Allow preinitializing delegates and reading initonly statics\" (#8204)"},{"Id":"638107398","IsPullRequest":true,"CreatedAt":"2020-06-13T06:32:13","Actor":"MichalStrehovsky","Number":"8203","RawContent":null,"Title":"Sync compiler from dotnet/runtime","State":"open","Body":"The JitInterface GUID wasn't updated again...","Url":"https://github.com/dotnet/corert/pull/8203","RelatedDescription":"Open PR \"Sync compiler from dotnet/runtime\" (#8203)"},{"Id":"637485404","IsPullRequest":false,"CreatedAt":"2020-06-12T05:01:50","Actor":"VS-ux","Number":"8202","RawContent":null,"Title":"CoreRT using too much memory","State":"open","Body":"Hi all!\r\nI tried out CoreRT on my winforms application which I've recently ported to .NET Core 3.1, from .NET Framework 4.8, using this [tutorial](https://docs.microsoft.com/en-us/dotnet/core/porting/winforms). The followed the Hello-World sample on the front page, however I got a Class Load error on System.Drawing.Design.UITypeEditor. I don't even use this class. I added the RootAllApplicationAssemblies tag, as specified [here](https://github.com/dotnet/corert/issues/6359#issuecomment-507156448), and also added a rd.xml file. (My application also didn't come with a Properties folder containing a Default.rd.xml file). However, I got a unknown method exception for `System.Drawing.Primitives`. I removed it, and it seemed to work OK. However, a couple minutes later, the memory usage skyrocketed. My system has 16GB memory, and eventually it used all of it and I had to task kill cmd. Is there any solution to this? Thanks","Url":"https://github.com/dotnet/corert/issues/8202","RelatedDescription":"Open issue \"CoreRT using too much memory\" (#8202)"},{"Id":"636612152","IsPullRequest":true,"CreatedAt":"2020-06-10T23:35:08","Actor":"yowl","Number":"8201","RawContent":null,"Title":"Wasm: add support for new StackTrace().ToString()","State":"open","Body":"This PR adds initial support for `StackTrace` and it's `ToString` via emscripten's `emscripten_get_callstack` function.  This should help in getting a `StackTrace` for `Exception` and enabling the Exceptions simple test.","Url":"https://github.com/dotnet/corert/pull/8201","RelatedDescription":"Open PR \"Wasm: add support for new StackTrace().ToString()\" (#8201)"},{"Id":"635662353","IsPullRequest":true,"CreatedAt":"2020-06-10T11:22:04","Actor":"Suchiman","Number":"8200","RawContent":null,"Title":"Fix NYI's for Function Pointers","State":"closed","Body":"The `IsReflectionBlocked` fix is rather theoretical as i didn't manage to hit it locally.\r\nFixes #8199","Url":"https://github.com/dotnet/corert/pull/8200","RelatedDescription":"Closed or merged PR \"Fix NYI's for Function Pointers\" (#8200)"},{"Id":"635545919","IsPullRequest":false,"CreatedAt":"2020-06-10T11:22:04","Actor":"john-h-k","Number":"8199","RawContent":null,"Title":"NotImplementedException thrown when trying to compile with function pointers","State":"closed","Body":"I try to build my project as the samples suggest (The project doesn't use reflection anywhere, unless 'REFLECTION' is defined which it isn't here).\r\n\r\nI get this output with absolutely nothing else\r\n\r\n```Unhandled Exception: Unhandled Exception: System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  System.NotImplementedException: The method or operation is not implemented.\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(TypeDesc type)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(Instantiation instantiation)\r\n     at ILCompiler.MetadataManager.IsReflectionBlocked(MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.IsMethodEligibleForTracking(NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()```","Url":"https://github.com/dotnet/corert/issues/8199","RelatedDescription":"Closed issue \"NotImplementedException thrown when trying to compile with function pointers\" (#8199)"},{"Id":"635520618","IsPullRequest":true,"CreatedAt":"2020-06-10T07:22:04","Actor":"AntonLapounov","Number":"8198","RawContent":null,"Title":"Port changes related to homogeneous aggregate recognition","State":"closed","Body":"dotnet/runtime#35576\r\ndotnet/runtime#35864\r\ndotnet/runtime#36673","Url":"https://github.com/dotnet/corert/pull/8198","RelatedDescription":"Closed or merged PR \"Port changes related to homogeneous aggregate recognition\" (#8198)"},{"Id":"635483038","IsPullRequest":false,"CreatedAt":"2020-06-09T14:32:29","Actor":"yowl","Number":"8197","RawContent":null,"Title":"Wasm: Enable threads","State":"open","Body":"Enabling of threads in Wasm is currently blocked by https://github.com/emscripten-core/emscripten/issues/10809  .  Creating this to track.","Url":"https://github.com/dotnet/corert/issues/8197","RelatedDescription":"Open issue \"Wasm: Enable threads\" (#8197)"},{"Id":"635186043","IsPullRequest":false,"CreatedAt":"2020-06-09T09:29:51","Actor":"srrin","Number":"8196","RawContent":null,"Title":"RHBIND : error RHB0002: Failed to write PDB - Xamarin Forms UWP ","State":"closed","Body":"Hi team,\r\nRequesting assistance to fix the above mentioned error in Xamarin forms UWP build.\r\n\r\nI am developing an Xamarin forms application, which uses multiple nuget packages referred to the UWP project. When I try to release the application, I am getting the following error in azure pipeline\r\n\r\n_\r\n\r\n> 2020-06-05T14:13:25.2731045Z   C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : RHBIND : error RHB0002: Failed to write PDB. [E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\MyProject.UWP.csproj]\r\n> 2020-06-05T14:13:25.2734238Z   C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-arm.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\ARM\\ilc\\Tools\\rhbind.exe @\"E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\obj\\arm\\Release\\ilc\\intermediate\\rhbindargs.MyProject.UWP.rsp\"' returned exit code 2 [E:\\BuildAgents\\WD-DailyAgent-Pool\\WD-DailyAgent-1\\_work\\1\\s\\MyProject.UWP\\MyProject.UWP.csproj]\r\n\r\n_\r\n\r\nI have followed all the scenarios from this URL below, but still we are not able fix the issue. \r\nhttps://developercommunity.visualstudio.com/content/problem/664053/rhbind-error-rhb0002-in-generating-xamarin-forms-u.html \r\n\r\nPlease find some finding in our investigation\r\n\r\n- If I change nuget packages to project references, build succeeds\r\n- When I refer all assemblies as nuget packages, then the build fails\r\n- When I exclude one or two nuget packages, then the build succeeds\r\n- When I comment out the “Dynamic required all” or set “Dynamic Auto” behavior, application builds, but it struck in the splash screen.\r\n- I tried to include all assemblies directly instead of <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />, but the application fails with msbuild error.\r\n- Included ShortcutGenericAnalysis  as true and\r\n- UseDotNetNativeSharedAssemblyFrameworkPackage  as false. But still the build fails\r\n\r\nThanks, looking for some solution to get through this issue, as we are blocked completely and not able to release the application for UWP.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8196","RelatedDescription":"Closed issue \"RHBIND : error RHB0002: Failed to write PDB - Xamarin Forms UWP \" (#8196)"},{"Id":"631758601","IsPullRequest":false,"CreatedAt":"2020-06-08T08:02:26","Actor":"acarrau","Number":"8186","RawContent":null,"Title":"Deserializing with XmlSerializer is not working","State":"closed","Body":"A .netstandard2.0 library is being wrapped by a netcoreapp3.1 that is being published like this in linux:\r\n\r\n`dotnet publish /p:NativeLib=Shared -r linux-x64 -c Debug`\r\n\r\nThe moment the library in it's internal logic tries to deserialize an xml document, it throws this error:\r\n\r\n```\r\nUnhandled Exception: System.InvalidOperationException: There is an error in XML document (4, 2).\r\n ---> EETypeRva:0x01D8EE30(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'System.Xml.Serialization.ReflectionXmlSerializationReaderHelper.GetSetMemberValueDelegateWithType<myLibrary.NodeDateItem,System.DateTime>(System.Reflection.MemberInfo)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x28b\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x94\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x37\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeConstructedGenericMethodInfo.get_UncachedMethodInvoker() + 0x3b\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0x1b0\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x3fa\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GetSetMemberValueDelegate(Object, String) + 0x2c9\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x131c\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteStructMethod(StructMapping, Boolean, Boolean, String) + 0x76\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0xb65\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x7cc\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElements(ReflectionXmlSerializationReader.Member[], UnknownNodeAction, UnknownNodeAction, ReflectionXmlSerializationReader.Member, ReflectionXmlSerializationReader.Member, XmlSerializationReader.Fixup, List`1) + 0x134\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMembers(Object&, ReflectionXmlSerializationReader.Member[], UnknownNodeAction, UnknownNodeAction, ReflectionXmlSerializationReader.Member, ReflectionXmlSerializationReader.Member) + 0x98\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x1728\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteStructMethod(StructMapping, Boolean, Boolean, String) + 0x76\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0xb65\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x7cc\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElements(ReflectionXmlSerializationReader.Member[], UnknownNodeAction, UnknownNodeAction, ReflectionXmlSerializationReader.Member, ReflectionXmlSerializationReader.Member, XmlSerializationReader.Fixup, List`1) + 0x134\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMembers(Object&, ReflectionXmlSerializationReader.Member[], UnknownNodeAction, UnknownNodeAction, ReflectionXmlSerializationReader.Member, ReflectionXmlSerializationReader.Member) + 0x98\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x1728\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteStructMethod(StructMapping, Boolean, Boolean, String) + 0x76\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0xb65\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x7cc\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElements(ReflectionXmlSerializationReader.Member[], UnknownNodeAction, UnknownNodeAction, ReflectionXmlSerializationReader.Member, ReflectionXmlSerializationReader.Member, XmlSerializationReader.Fixup, List`1) + 0x134\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GenerateTypeElement(XmlTypeMapping) + 0x3f9\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.ReadObject() + 0xe6\r\n   at System.Xml.Serialization.XmlSerializer.DeserializeUsingReflection(XmlReader, String, XmlDeserializationEvents) + 0xc6\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String, XmlDeserializationEvents) + 0x3a1\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String, XmlDeserializationEvents) + 0x5f3\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String) + 0x83\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(Stream) + 0x82\r\n   at myLibrary.ReadFromString(String) + 0xd5\r\n```\r\n\r\nThe classes to map the XML were defined with xsd 4.7.3081.0.\r\n\r\nI have tried by setting the rd.xml file in the wrapper library like this:\r\n\r\n```\r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n  <Library>\r\n    <Assembly Name=\"myLibrary\" Dynamic=\"Required All\" Serialize=\"Required All\" XmlSerializer=\"Required All\" />\r\n    <Assembly Name=\"System.Xml\" Dynamic=\"Required All\" />\r\n    <Assembly Name=\"System.Xml.Serialization\" Dynamic=\"Required All\">\r\n    <Assembly Name=\"System.Private.Xml\" Dynamic=\"Required All\" />\r\n    <Type Name=\"System.Xml.Serialization.ReflectionXmlSerializationReaderHelper\">\r\n      <Method Name=\"GetSetMemberValueDelegateWithType\">\r\n        <GenericArgument Name=\"myLibrary.NodeDateItem, myLibrary\" />\r\n        <GenericArgument Name=\"System.DateTime,  System.Private.CoreLib\" />\r\n      </Method>\r\n    </Type>\r\n  </Library>\r\n</Directives>\r\n```\r\n\r\nI have red XmlSerializer might not be supported? https://docs.microsoft.com/en-us/dotnet/framework/net-native/migrating-your-windows-store-app-to-net-native#differences-in-serializers\r\n\r\n_Note:_ I'm loading the generated .so file in python and executing the function.","Url":"https://github.com/dotnet/corert/issues/8186","RelatedDescription":"Closed issue \"Deserializing with XmlSerializer is not working\" (#8186)"},{"Id":"633565718","IsPullRequest":false,"CreatedAt":"2020-06-07T16:43:42","Actor":"kant2002","Number":"8193","RawContent":null,"Title":"Custom GC in CoreRT does not compile","State":"open","Body":"I was try to follow presentation of @kkokosa on YouTube about custom GC for .NET Core and thought that it would be fun exercise to make it in CoreRT. \r\n\r\nSo right now it is breaks with error\r\n```\r\nEXEC : LLVM error : invalid symbol redefinition\r\n```\r\n\r\nSo I assume this is because `GC_Initialize` already defined. Presumably in `Runtime.lib`. Can something to be done about that?","Url":"https://github.com/dotnet/corert/issues/8193","RelatedDescription":"Open issue \"Custom GC in CoreRT does not compile\" (#8193)"},{"Id":"632690523","IsPullRequest":true,"CreatedAt":"2020-06-07T09:18:25","Actor":"FabianNitsche","Number":"8190","RawContent":null,"Title":"Deleted more ProjectN leftovers","State":"closed","Body":"While trying to build on RaspberryPi 3 B+ with Ubuntu 20.04 Arm64 I found some issues.\r\n\r\nThe compiler gave me the following error:\r\n\r\n```\r\n/home/ubuntu/projects/corert/src/Native/Runtime/MiscHelpers.cpp:354:42: error: member access into incomplete type 'Module'\r\n        ASSERT(pModule == NULL || pModule->ContainsDataAddress(pIatCell));\r\n                                         ^\r\n/home/ubuntu/projects/corert/src/Native/Runtime/Portable/../forward_declarations.h:23:10: note: forward declaration of 'Module'\r\nFWD_DECL(Module)\r\n         ^\r\n1 error generated.\r\n```\r\n\r\nIt seems to be more leftovers from the ProjectN. And since Module is always null, I was so bolt to just delete the asserts, since they will always succeed.","Url":"https://github.com/dotnet/corert/pull/8190","RelatedDescription":"Closed or merged PR \"Deleted more ProjectN leftovers\" (#8190)"},{"Id":"632694769","IsPullRequest":true,"CreatedAt":"2020-06-07T09:18:03","Actor":"FabianNitsche","Number":"8191","RawContent":null,"Title":"Updated unix GC from CoreCLR","State":"closed","Body":"While trying to build on RaspberryPi 3 B+ with Ubuntu 20.04 Arm64 I found some issues.\r\n\r\nThe compiler gave me the following error:\r\n\r\n```\r\n/home/ubuntu/projects/corert/src/Native/gc/unix/gcenv.unix.cpp:797:13: error: use of undeclared identifier 'ReadMemoryValueFromFile'\r\n        if (ReadMemoryValueFromFile(\"/sys/devices/system/cpu/cpu0/cache/index0/size\", &size))\r\n```\r\n\r\nI copied over the unix/gc files from dotnet/runtime.\r\n\r\nTogether with PR #8190:\r\n`CoreRT native components successfully built.`","Url":"https://github.com/dotnet/corert/pull/8191","RelatedDescription":"Closed or merged PR \"Updated unix GC from CoreCLR\" (#8191)"},{"Id":"632730654","IsPullRequest":true,"CreatedAt":"2020-06-07T09:16:52","Actor":"jkotas","Number":"8192","RawContent":null,"Title":"Fix NativeLibrary sample readme","State":"closed","Body":"Also, add a sanity check to the build targets to make this mistake easier to diagnose.","Url":"https://github.com/dotnet/corert/pull/8192","RelatedDescription":"Closed or merged PR \"Fix NativeLibrary sample readme\" (#8192)"},{"Id":"632648394","IsPullRequest":true,"CreatedAt":"2020-06-06T20:16:39","Actor":"MichalStrehovsky","Number":"8189","RawContent":null,"Title":"Scan for typeof(X).GetProperty(\"Foo\")","State":"closed","Body":"This is used in LINQ expressions interpreter.","Url":"https://github.com/dotnet/corert/pull/8189","RelatedDescription":"Closed or merged PR \"Scan for typeof(X).GetProperty(\"Foo\")\" (#8189)"},{"Id":"631842952","IsPullRequest":false,"CreatedAt":"2020-06-05T18:44:41","Actor":"alrod","Number":"8187","RawContent":null,"Title":"Not able to compile to native executable Grps sample","State":"open","Body":"Repro steps:\r\n1. Clone [AspNetCore.Docs](https://github.com/dotnet/AspNetCore.Docs)\r\n2. Open the sample project in [folder](https://github.com/dotnet/AspNetCore.Docs/tree/master/aspnetcore/tutorials/grpc/grpc-start/sample/GrpcGreeter)\r\n3. Add nuget reference to `Microsoft.DotNet.ILCompiler`. I used `1.0.0-alpha-28928-02` version.\r\n4. Add `<RuntimeIdentifier>win10-x64</RuntimeIdentifier>` in `GrpcGreeter.csproj`\r\n5. Publish with `dotnet publish` and try to run `GrpcGreeter\\bin\\Debug\\netcoreapp3.1\\win10-x64\\publish\\GrpcGreeter.exe`\r\n6. Error:\r\n```\r\nC:\\Users\\alrod\\Downloads\\AspNetCore.Docs-master\\AspNetCore.Docs-master\\aspnetcore\\tutorials\\grpc\\grpc-start\\sample\\GrpcGreeter\\bin\\Debug\\netcoreapp3.1\\win10-x64\\publish>GrpcGreeter.exe\r\nGeneric virtual method pointer lookup failure.\r\n\r\nDeclaring type handle: EEType:0x00007FF61F8BF670\r\nTarget type handle: EEType:0x00000130162BD198\r\nMethod name: AddMethod\r\nInstantiation:\r\n  Argument 00000000: EEType:0x00007FF61F893AA0\r\n  Argument 00000001: EEType:0x00007FF61F8953F0\r\n```\r\n\r\nThe exception stack trace from dump:\r\n`C:\\Tools\\Procdump>procdump.exe -e 1 -f \"\" -x C:\\Temp\\dump C:\\Users\\alrod\\Downloads\\AspNetCore.Docs-master\\AspNetCore.Docs-master\\aspnetcore\\tutorials\\grpc\\grpc-start\\sample\\GrpcGreeter\\bin\\Debug\\netcoreapp3.1\\win10-x64\\publish\\GrpcGreeter.exe`\r\n\r\n\r\n```\r\nKERNELBASE!RaiseFailFastException+af\r\n--\r\nGrpcGreeter!S_P_CoreLib_Interop_mincore__RaiseFailFastException_0+56\r\nGrpcGreeter!S_P_CoreLib_Interop_mincore__RaiseFailFastException+ff\r\nGrpcGreeter!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast_1+1a9\r\nGrpcGreeter!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast+26\r\nGrpcGreeter!S_P_CoreLib_System_Environment__FailFast+17\r\nGrpcGreeter!S_P_TypeLoader_Internal_Runtime_TypeLoader_TypeLoaderEnvironment__ResolveGenericVirtualMethodTarget_Static+757\r\nGrpcGreeter!S_P_TypeLoader_Internal_Runtime_TypeLoader_TypeLoaderEnvironment__ResolveGenericVirtualMethodTarget+5f\r\nGrpcGreeter!S_P_TypeLoader_Internal_Runtime_TypeLoader_TypeLoaderEnvironment__TryGetGenericVirtualTargetForTypeAndSlot+174\r\nGrpcGreeter!S_P_TypeLoader_Internal_Runtime_TypeLoader_Callbacks__TryGetGenericVirtualTargetForTypeAndSlot+6d\r\nGrpcGreeter!S_P_CoreLib_Internal_Runtime_CompilerServices_GenericVirtualMethodSupport__GVMLookupForSlotWorker+10b\r\nGrpcGreeter!S_P_CoreLib_Internal_Runtime_CompilerServices_GenericVirtualMethodSupport__GVMLookupForSlot+7d\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_TypeLoaderExports___c___GVMLookupForSlot_b__16_0+4d\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_TypeLoaderExports__CacheMiss_0+128\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_TypeLoaderExports__GVMLookupForSlot+13c\r\nGrpcGreeter!GrpcGreeter_GrpcGreeter_Greeter__BindService_0+b5\r\nGrpcGreeter!Internal_CompilerGenerated__Module___InvokeRetVII<System___Canon__System___Canon>+10a\r\nGrpcGreeter!S_P_CoreLib_System_InvokeUtils_CalliIntrinsics__Call_1+4b\r\nGrpcGreeter!S_P_CoreLib_System_InvokeUtils__CallDynamicInvokeMethod+251\r\nGrpcGreeter!S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__CallDynamicInvokeMethod+7b\r\nGrpcGreeter!S_P_Reflection_Execution_Internal_Reflection_Execution_MethodInvokers_StaticMethodInvoker__Invoke+10c\r\nGrpcGreeter!S_P_Reflection_Core_Internal_Reflection_Core_Execution_MethodInvoker__Invoke+83\r\nGrpcGreeter!S_P_Reflection_Core_System_Reflection_Runtime_MethodInfos_RuntimeMethodInfo__Invoke+86\r\nGrpcGreeter!S_P_CoreLib_System_Reflection_MethodBase__Invoke+4d\r\nGrpcGreeter!Grpc_AspNetCore_Server_Grpc_AspNetCore_Server_Model_Internal_BinderServiceMethodProvider_1<System___Canon>__OnServiceMethodDiscovery+19d\r\nGrpcGreeter!Grpc_AspNetCore_Server_Grpc_AspNetCore_Server_Model_Internal_ServiceRouteBuilder_1<System___Canon>__Build+167\r\nGrpcGreeter!Grpc_AspNetCore_Server_Microsoft_AspNetCore_Builder_GrpcEndpointRouteBuilderExtensions__MapGrpcService<System___Canon>+bd\r\nGrpcGreeter!GrpcGreeter_GrpcGreeter_Startup___c___Configure_b__1_0+29\r\nGrpcGreeter!Microsoft_AspNetCore_Routing_Microsoft_AspNetCore_Builder_EndpointRoutingApplicationBuilderExtensions__UseEndpoints+dc\r\nGrpcGreeter!GrpcGreeter_GrpcGreeter_Startup__Configure+e1\r\nGrpcGreeter!Internal_CompilerGenerated__Module___InvokeRetVII<System___Canon__System___Canon>+c2\r\nGrpcGreeter!S_P_CoreLib_System_InvokeUtils_CalliIntrinsics__Call_1+4b\r\nGrpcGreeter!S_P_CoreLib_System_InvokeUtils__CallDynamicInvokeMethod+251\r\nGrpcGreeter!S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__CallDynamicInvokeMethod+7b\r\nGrpcGreeter!S_P_Reflection_Execution_Internal_Reflection_Execution_MethodInvokers_InstanceMethodInvoker__Invoke+121\r\nGrpcGreeter!S_P_Reflection_Core_Internal_Reflection_Core_Execution_MethodInvoker__Invoke+83\r\nGrpcGreeter!S_P_Reflection_Core_System_Reflection_Runtime_MethodInfos_RuntimeMethodInfo__Invoke+86\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_MethodInfoExtensions__InvokeWithoutWrappingExceptions+50\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_ConfigureBuilder__Invoke+235\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_ConfigureBuilder___c__DisplayClass4_0___Build_b__0+2b\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_GenericWebHostBuilder___c__DisplayClass13_0___UseStartup_b__2+90\r\nGrpcGreeter!Microsoft_AspNetCore_Microsoft_AspNetCore_HostFilteringStartupFilter___c__DisplayClass0_0___Configure_b__0+49\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_GenericWebHostService__StartAsync_d__31__MoveNext+573\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncMethodBuilderCore__Start<Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_GenericWebHostService__StartAsync_d__31>+80\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder__Start<Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_GenericWebHostService__StartAsync_d__31>+1b\r\nGrpcGreeter!Microsoft_AspNetCore_Hosting_Microsoft_AspNetCore_Hosting_GenericWebHostService__StartAsync+89\r\nGrpcGreeter!Microsoft_Extensions_Hosting_Microsoft_Extensions_Hosting_Internal_Host__StartAsync_d__9__MoveNext+2b7\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncMethodBuilderCore__Start<Microsoft_Extensions_Hosting_Microsoft_Extensions_Hosting_Internal_Host__StartAsync_d__9>+80\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder__Start<Microsoft_Extensions_Hosting_Microsoft_Extensions_Hosting_Internal_Host__StartAsync_d__9>+1b\r\nGrpcGreeter!Microsoft_Extensions_Hosting_Microsoft_Extensions_Hosting_Internal_Host__StartAsync+9a\r\nGrpcGreeter!Microsoft_Extensions_Hosting_Abstractions_Microsoft_Extensions_Hosting_HostingAbstractionsHostExtensions__RunAsync_d__4__MoveNext+9e\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncMethodBuilderCore__Start<Microsoft_Extensions_Hosting_Abstractions_Microsoft_Extensions_Hosting_HostingAbstractionsHostExtensions__RunAsync_d__4>+80\r\nGrpcGreeter!S_P_CoreLib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder__Start<Microsoft_Extensions_Hosting_Abstractions_Microsoft_Extensions_Hosting_HostingAbstractionsHostExtensions__RunAsync_d__4>+1b\r\nGrpcGreeter!Microsoft_Extensions_Hosting_Abstractions_Microsoft_Extensions_Hosting_HostingAbstractionsHostExtensions__RunAsync+96\r\nGrpcGreeter!Microsoft_Extensions_Hosting_Abstractions_Microsoft_Extensions_Hosting_HostingAbstractionsHostExtensions__Run+2c\r\nGrpcGreeter!GrpcGreeter_GrpcGreeter_Program__Main+44\r\nGrpcGreeter!GrpcGreeter__Module___MainMethodWrapper+17\r\nGrpcGreeter!GrpcGreeter__Module___StartupCodeMain+80\r\nGrpcGreeter!wmain+ae\r\nGrpcGreeter!__scrt_common_main_seh+10c\r\nkernel32!BaseThreadInitThunk+14\r\nntdll!RtlUserThreadStart+21\r\n\r\n\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/8187","RelatedDescription":"Open issue \"Not able to compile to native executable Grps sample\" (#8187)"},{"Id":"630766034","IsPullRequest":true,"CreatedAt":"2020-06-04T12:57:28","Actor":"FabianNitsche","Number":"8185","RawContent":null,"Title":"Added missing trusty patches","State":"closed","Body":"When following the cross build demo for arm in Documentation. By default the rootfs for trusty is created by build-rootfs.sh. However, the script does some patches in the end. These files were missing. I copied them from dotnet/arcade to corert.","Url":"https://github.com/dotnet/corert/pull/8185","RelatedDescription":"Closed or merged PR \"Added missing trusty patches\" (#8185)"},{"Id":"630122183","IsPullRequest":false,"CreatedAt":"2020-06-03T16:32:38","Actor":"olegsavelos","Number":"8184","RawContent":null,"Title":"Native compilation and WMI","State":"closed","Body":"I am experimenting with native compilation with .NET 5 and having troubles with executing code that contains references to WMI.\r\n\r\nHere is an example code\r\n\r\n`   public class NativeLibrary\r\n    {\r\n        [NativeCallable(EntryPoint = \"authorize\", CallingConvention = CallingConvention.StdCall)]\r\n        public static IntPtr Authorize()\r\n        {\r\n            var m = new System.Management.ManagementClass(\"Win32_BIOS\");\r\n            return IntPtr.Zero;\r\n        }\r\n    }`\r\n\r\nWhen called this exception error is printed in console window\r\n\r\n`Unhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.InvalidProgramException: Common Language Runtime detected an invalid program. The body of method 'Void System.Management.WbemDefPath..ctor()' is invalid.\r\n   at Internal.Runtime.TypeLoaderExceptionHelper.CreateInvalidProgramException(ExceptionStringID, String) + 0x40\r\n   at Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowInvalidProgramExceptionWithArgument(ExceptionStringID, String) + 0x9\r\n   at System.Management.WbemDefPath..ctor() + 0x15\r\n   at NativeLibrary!<BaseAddress>+0x23dd59\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x25d\r\n   --- End of inner exception stack trace ---\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x414\r\n   at Internal.Reflection.Execution.MethodInvokers.InstanceMethodInvoker.Invoke(Object, Object[], BinderBundle, Boolean) + 0x7f\r\n   at Internal.Reflection.Core.Execution.MethodInvoker.Invoke(Object, Object[], Binder, BindingFlags, CultureInfo) + 0x46\r\n   at System.Reflection.Runtime.MethodInfos.RuntimePlainConstructorInfo`1.Invoke(BindingFlags, Binder, Object[], CultureInfo) + 0x90\r\n   at System.ActivatorImplementation.CreateInstance(Type, Boolean) + 0xb7\r\n   at System.Management.MTAHelper.CreateInMTA(Type) + 0x37\r\n   at System.Management.ManagementPath.CreateWbemPath(String) + 0x1d\r\n   at NativeLibrary!<BaseAddress>+0x6a68d`\r\n\r\nThere is not much information that i could find but as i understand it has to do with COM interop?\r\n","Url":"https://github.com/dotnet/corert/issues/8184","RelatedDescription":"Closed issue \"Native compilation and WMI\" (#8184)"},{"Id":"629873720","IsPullRequest":true,"CreatedAt":"2020-06-03T13:23:54","Actor":"FabianNitsche","Number":"8183","RawContent":null,"Title":"Fix for build error when using libunwind.","State":"closed","Body":"Cross-building on x64 linux for arm caused a build error in libunwind UnwindCursor.hpp\r\n\r\nThis was fixed in llvm-project with the commit https://github.com/llvm/llvm-project/commit/221c5af4e4f4a504a4d1f352dd7b76d305e56a62","Url":"https://github.com/dotnet/corert/pull/8183","RelatedDescription":"Closed or merged PR \"Fix for build error when using libunwind.\" (#8183)"},{"Id":"629690226","IsPullRequest":true,"CreatedAt":"2020-06-03T08:08:54","Actor":"jkotas","Number":"8182","RawContent":null,"Title":"ILVerify project was moved to dotnet/runtime","State":"closed","Body":"See https://github.com/dotnet/runtime/pull/35038","Url":"https://github.com/dotnet/corert/pull/8182","RelatedDescription":"Closed or merged PR \"ILVerify project was moved to dotnet/runtime\" (#8182)"},{"Id":"624483203","IsPullRequest":true,"CreatedAt":"2020-06-01T07:04:43","Actor":"MichalStrehovsky","Number":"8176","RawContent":null,"Title":"Run static constructors at compile time","State":"closed","Body":"When possible, run static constructors at compile time and store the produced data blob in the executable. This eliminates the need to keep the static constructor code around if the type was statically constructed at compile time.\r\n\r\nThis runs a small interpreter to interpret the static constructor at compile time.\r\n\r\n* Besides the easy things (preinitializing primitive-typed fields), this can also preinitialize reference types (classes, arrays). This builds on top of the GC's ability to deal with \"frozen objects\" (reference type instances allocated within the data section of the executable instead of on the GC heap). There's some limitations of course (e.g no finalizers - these never get garbage collected).\r\n* Can also do things like non-recursive inlining\r\n\r\nOf course there's limitations (the static constructor cannot have side effects, cannot do things like p/invoke, etc.), but it works pretty well.\r\n\r\nSome results:\r\n\r\n|                      | Types eligible for preinitialization | Types preinitialized |\r\n|----------------------|--------------------------------------|----------------------|\r\n| ASP.NET SampleWebApi | 1991                                 | 754                  |\r\n| Empty WinForms app   | 1510                                 | 709                  |\r\n| Console Hello world  | 317                                  | 149                  |\r\n\r\nAlso results in about 0.2% size on disk improvement, but size improvement is not really the point of this optimization.\r\n\r\nCurrent limitations that I want to lift eventually:\r\n* No backwards branches - to avoids jokers putting `while (true) ;` in a static constructors (we can put an upper limit on number of instructions interpreted instead)\r\n* Can't preinitialize delegates, but delegates to static methods should be doable and are pretty common in the ASP.NET codebase.\r\n* Can't access static fields of types other than the one being preinitialized. We should be able to lift this limitations for readonly fields with some care (seems pretty common too).\r\n* We might be able to model `typeof(Foo) == typeof(T)` that shows up sometimes.","Url":"https://github.com/dotnet/corert/pull/8176","RelatedDescription":"Closed or merged PR \"Run static constructors at compile time\" (#8176)"},{"Id":"627990287","IsPullRequest":false,"CreatedAt":"2020-05-31T23:34:43","Actor":"yowl","Number":"8180","RawContent":null,"Title":"Wasm: Question: Exception.StackTrace & ClassLibFunctionId.AppendExceptionStackFrame","State":"closed","Body":"Wasm currently returns null when attempting to get the `StackTrace` property of `Exception` .  `HasBeenThrown` is false.  This would be because `_idxFirstFreeStackTraceEntry` is 0 and that looks to be incremented from what I can see via \r\n\r\nhttps://github.com/dotnet/corert/blob/c783ad38eda17e275c9b5c44d238595db6d7135f/src/Runtime.Base/src/System/Runtime/ExceptionHandling.cs#L267\r\n\r\nIs it true that for first chance exceptions there would be a call to `RhThrowEx` which does this?    As it revolves around IP values, Wasm might have to do something a little different although emscripten produces backtraces somehow, maybe using an implementation glibc's `backtrace` function.","Url":"https://github.com/dotnet/corert/issues/8180","RelatedDescription":"Closed issue \"Wasm: Question: Exception.StackTrace & ClassLibFunctionId.AppendExceptionStackFrame\" (#8180)"},{"Id":"628003511","IsPullRequest":true,"CreatedAt":"2020-05-31T23:27:25","Actor":"MichalStrehovsky","Number":"8181","RawContent":null,"Title":"Fix repro projects","State":"closed","Body":"This definition got renamed.","Url":"https://github.com/dotnet/corert/pull/8181","RelatedDescription":"Closed or merged PR \"Fix repro projects\" (#8181)"},{"Id":"627777132","IsPullRequest":true,"CreatedAt":"2020-05-30T18:23:16","Actor":"yowl","Number":"8179","RawContent":null,"Title":"Wasm: Move the NRE check higher for method calls, to catch non-virtual case","State":"closed","Body":"This PR fixes a missing ThrowIfNull call for non-virtual method calls by moving the check higher up the stack.  Adds a test, enables the remaining Generics test, and removes 2 dead methods.","Url":"https://github.com/dotnet/corert/pull/8179","RelatedDescription":"Closed or merged PR \"Wasm: Move the NRE check higher for method calls, to catch non-virtual case\" (#8179)"},{"Id":"627711712","IsPullRequest":true,"CreatedAt":"2020-05-30T14:20:01","Actor":"MichalStrehovsky","Number":"8178","RawContent":null,"Title":"Factor type initialization out into a separate class","State":"closed","Body":"Pulled out the refactoring from the preinitialization pull request into a separate thing to minimize the delta. That pull request is too big.","Url":"https://github.com/dotnet/corert/pull/8178","RelatedDescription":"Closed or merged PR \"Factor type initialization out into a separate class\" (#8178)"},{"Id":"624837044","IsPullRequest":false,"CreatedAt":"2020-05-26T12:14:31","Actor":"pilldaily","Number":"8177","RawContent":null,"Title":"buildvars-setup.cmd will fail because CheckMSBuild used before its defined ","State":"open","Body":"buildvars-setup.cmd:156  `goto :CheckMSBuild` is not working in my environment\r\n\r\na simple fix would be move :MissingVisualC and :CheckMSBuild on top of :VS2017\r\n\r\n```\r\n:MissingVisualC\r\necho Could not find Visual C++ under !VS%__VSProductVersion%COMNTOOLS!. Visual C++ is a pre-requisite to build this repository.\r\necho See: https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\nexit /b 1\r\n\r\n:CheckMSBuild\r\nif not exist !_msbuildexe! (echo Error: Could not find MSBuild.exe.  Please see https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md for build instructions. && exit /b 1)\r\n\r\n\r\n \r\n:VS2017\r\n:: Setup vars for VS2017\r\nset __VSVersion=vs2017\r\nset __VSProductVersion=150\r\nif not exist \"%VSINSTALLDIR%\\VC\\Auxiliary\\Build\\vcvarsall.bat\" goto :MissingVisualC\r\nset _msbuildexe=\"%VSINSTALLDIR%\\MSBuild\\15.0\\Bin\\MSBuild.exe\"\r\ngoto :CheckMSBuild\r\n\r\n:VS2019\r\n:: Setup vars for VS2019\r\nset __VSVersion=vs2019\r\nset __VSProductVersion=160\r\nif not exist \"%VSINSTALLDIR%\\VC\\Auxiliary\\Build\\vcvarsall.bat\" goto :MissingVisualC\r\nset _msbuildexe=\"%VSINSTALLDIR%\\MSBuild\\Current\\Bin\\MSBuild.exe\"\r\ngoto :CheckMSBuild\r\n\r\n\r\n\r\n```","Url":"https://github.com/dotnet/corert/issues/8177","RelatedDescription":"Open issue \"buildvars-setup.cmd will fail because CheckMSBuild used before its defined \" (#8177)"},{"Id":"624418187","IsPullRequest":true,"CreatedAt":"2020-05-25T23:31:58","Actor":"jkotas","Number":"8175","RawContent":null,"Title":"Cleanup","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8175","RelatedDescription":"Closed or merged PR \"Cleanup\" (#8175)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"638175831","IsPullRequest":false,"CreatedAt":"2020-06-13T14:55:20","Actor":"AraHaan","Number":"12064","RawContent":null,"Title":"Directory.Build.props seems to write all of my intermediate files in the wrong location.","State":"open","Body":"Lets say for example you use this ``Directory.Build.props`` files in all of your projects to keep the source tree clean by outputting the build files (intermediate and non-intermediate) in the project root which just so happens to also be the ``$(SolutionDir)``.\r\n\r\nFor me the outputs then results in the project system crashing on VS2019 and also results in build errors being emitted on dotnet build.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\r\n  <PropertyGroup>\r\n    <!--\r\n    For non-SDK projects that import this file and then import Microsoft.Common.props,\r\n    tell Microsoft.Common.props not to import Directory.Build.props again\r\n    -->\r\n    <ImportDirectoryBuildProps>false</ImportDirectoryBuildProps>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <MSBuildProjectExtensionsPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</MSBuildProjectExtensionsPath>\r\n    <BaseIntermediateOutputPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>..\\obj\\$(ProjectName)\\$(Configuration)\\</IntermediateOutputPath>\r\n    <OutputPath>..\\bin\\$(Configuration)\\</OutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nHowever for some reason it all outputs to ``..\\obj\\$(Configuration)`` instead resulting in the project system crash and dotnet build failing when I clearly told it to output to ``..\\obj\\$(ProjectName)\\$(Configuration)\\``.\r\n\r\nI am using the current version of .net core from github nightly releases and I am using he insider builds of windows 10 on the fast ring.","Url":"https://github.com/dotnet/sdk/issues/12064","RelatedDescription":"Open issue \"Directory.Build.props seems to write all of my intermediate files in the wrong location.\" (#12064)"},{"Id":"638151267","IsPullRequest":true,"CreatedAt":"2020-06-13T14:02:19","Actor":"dotnet-maestro[bot]","Number":"12063","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200612.5\r\n- **Date Produced**: 6/13/2020 4:09 AM\r\n- **Commit**: 2aa38744c9288aa9ca2bc192c1c85cdb1d1d53a0\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20312.2 to 10.10.0-beta.20312.5\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12063","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#12063)"},{"Id":"638150648","IsPullRequest":true,"CreatedAt":"2020-06-13T13:47:22","Actor":"dotnet-maestro[bot]","Number":"12062","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200612.11\r\n- **Date Produced**: 6/13/2020 8:41 AM\r\n- **Commit**: 27ad36aa7e1ea7967053f5e0dc529700dd506399\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.7.20311.11 to 5.0.0-preview.7.20312.11\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12062","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#12062)"},{"Id":"638093344","IsPullRequest":true,"CreatedAt":"2020-06-13T06:41:15","Actor":"dotnet-maestro[bot]","Number":"12061","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:11bb8090-6789-4721-321a-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 11bb8090-6789-4721-321a-08d8080363b6\r\n- **Build**: 20200612.5\r\n- **Date Produced**: 6/13/2020 4:09 AM\r\n- **Commit**: 2aa38744c9288aa9ca2bc192c1c85cdb1d1d53a0\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20312.2 to 10.10.0-beta.20312.5\r\n\r\n[marker]: <> (End:11bb8090-6789-4721-321a-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12061","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/fsharp\" (#12061)"},{"Id":"637964909","IsPullRequest":true,"CreatedAt":"2020-06-12T23:54:27","Actor":"vijayrkn","Number":"12059","RawContent":null,"Title":"Updating the Xdt version","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/12059","RelatedDescription":"Closed or merged PR \"Updating the Xdt version\" (#12059)"},{"Id":"638010458","IsPullRequest":false,"CreatedAt":"2020-06-12T21:24:02","Actor":"marcpopMSFT","Number":"12060","RawContent":null,"Title":"Trigger a build warning when targeting an out of support SDK","State":"open","Body":"Customers today could be targeting older .net core versions in their builds and not know.  Perhaps they aren't even using that version.\r\n\r\nWe should help them out with a warning message that points them to our support documentation: https://aka.ms/dotnetcoresupport\r\n\r\nTo determine what's in support, it's probably better to download and access releases.json so we don't have to release a new build just to have this warning start showing up.","Url":"https://github.com/dotnet/sdk/issues/12060","RelatedDescription":"Open issue \"Trigger a build warning when targeting an out of support SDK\" (#12060)"},{"Id":"637925458","IsPullRequest":true,"CreatedAt":"2020-06-12T18:13:05","Actor":"dotnet-maestro[bot]","Number":"12058","RawContent":null,"Title":"[master] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: a3c26c65-d5fb-4ade-e67f-08d808024d62\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12058","RelatedDescription":"Open PR \"[master] Update dependencies from nuget/nuget.client\" (#12058)"},{"Id":"637925442","IsPullRequest":true,"CreatedAt":"2020-06-12T18:13:03","Actor":"dotnet-maestro[bot]","Number":"12057","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b5286ad6-5e57-4b64-3220-08d8080363b6)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: b5286ad6-5e57-4b64-3220-08d8080363b6\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:b5286ad6-5e57-4b64-3220-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12057","RelatedDescription":"Open PR \"[release/5.0.1xx-preview6] Update dependencies from nuget/nuget.client\" (#12057)"},{"Id":"637925214","IsPullRequest":true,"CreatedAt":"2020-06-12T18:12:32","Actor":"dotnet-maestro[bot]","Number":"12056","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7c9bc2e6-8f6b-4ade-321f-08d8080363b6)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 7c9bc2e6-8f6b-4ade-321f-08d8080363b6\r\n- **Build**: 5.7.0.6645\r\n- **Date Produced**: 6/11/2020 12:59 AM\r\n- **Commit**: f548641f11f1a7a0bc27632e9534f1bb1e43a350\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-preview.2.6618 to 5.7.0-preview.3.6645\r\n\r\n[marker]: <> (End:7c9bc2e6-8f6b-4ade-321f-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12056","RelatedDescription":"Open PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#12056)"},{"Id":"637892644","IsPullRequest":false,"CreatedAt":"2020-06-12T17:06:21","Actor":"wli3","Number":"12055","RawContent":null,"Title":"dotnet tools X net5.0","State":"open","Body":"What happens if a dotent tools targeting net5.0-win and want to call Windows specific API? Say access Bluetooth to help debugging a device.\r\n\r\nCurrently the target framework selection is choosing the most compatible TFM according to the TFM SDK is built on. In this case, SDK will be built on net5.0, and it won't choose net5.0-win.\r\n","Url":"https://github.com/dotnet/sdk/issues/12055","RelatedDescription":"Open issue \"dotnet tools X net5.0\" (#12055)"},{"Id":"637828172","IsPullRequest":false,"CreatedAt":"2020-06-12T15:21:17","Actor":"rainersigwald","Number":"12054","RawContent":null,"Title":"GetDependsOnNETStandard should log what reference did","State":"open","Body":"I tracked an issue down to \"Something decided that a reference depended on .NET Standard, and added references\". But in the log, `GetDependsOnNETStandard` doesn't say what did:\r\n\r\n```\r\nGetDependsOnNETStandard\r\n    Assembly = d:\\CxCache\\.A\\MsBuild.Corext.nlraJAQZn3srSP8A9p-6Vw\\Extensions\\Microsoft\\Microsoft.NET.Build.Extensions\\\\tools\\net472\\Microsoft.NET.Build.Extensions.Tasks.dll\r\n    Parameters\r\n        References\r\n            {many, many references}\r\n    OutputProperties\r\n        DependsOnNETStandard = True\r\n```\r\n\r\nIt'd be great if this logged the first true path before returning:\r\n\r\nhttps://github.com/dotnet/sdk/blob/d95869aba41e10c11172a0228c621f3c0772deaa/src/Tasks/Microsoft.NET.Build.Extensions.Tasks/GetDependsOnNETStandard.cs#L52-L55","Url":"https://github.com/dotnet/sdk/issues/12054","RelatedDescription":"Open issue \"GetDependsOnNETStandard should log what reference did\" (#12054)"},{"Id":"637728959","IsPullRequest":true,"CreatedAt":"2020-06-12T14:53:51","Actor":"dotnet-maestro[bot]","Number":"12052","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:460d559e-c5c6-4e43-336f-08d807fd723d)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 460d559e-c5c6-4e43-336f-08d807fd723d\r\n- **Build**: 20200612.3\r\n- **Date Produced**: 6/12/2020 12:15 PM\r\n- **Commit**: ec4841263590f5456e32728d98097e97c1605e22\r\n- **Branch**: refs/heads/release/dev16.7-preview3-vs-deps\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.7.0-3.20312.2 to 3.7.0-3.20312.3\r\n\r\n[marker]: <> (End:460d559e-c5c6-4e43-336f-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12052","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/roslyn\" (#12052)"},{"Id":"637728966","IsPullRequest":true,"CreatedAt":"2020-06-12T14:53:38","Actor":"dotnet-maestro[bot]","Number":"12053","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20200612.3\r\n- **Date Produced**: 6/12/2020 12:15 PM\r\n- **Commit**: ec4841263590f5456e32728d98097e97c1605e22\r\n- **Branch**: refs/heads/release/dev16.7-preview3-vs-deps\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.7.0-3.20312.2 to 3.7.0-3.20312.3\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12053","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn\" (#12053)"},{"Id":"637707669","IsPullRequest":true,"CreatedAt":"2020-06-12T14:40:34","Actor":"dotnet-maestro[bot]","Number":"12050","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 769e6472-e796-4bcb-a0ac-08d7dbf4acc5\r\n- **Build**: 20200611.3\r\n- **Date Produced**: 6/11/2020 11:47 PM\r\n- **Commit**: 326ec6fafa0b60f707a9a6d06f10a9a5501fd5c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: from 5.0.0-preview.3.20309.3 to 5.0.0-preview.3.20311.3\r\n\r\n[marker]: <> (End:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12050","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from mono/linker\" (#12050)"},{"Id":"637708714","IsPullRequest":true,"CreatedAt":"2020-06-12T14:27:14","Actor":"dotnet-maestro[bot]","Number":"12051","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:42347601-5838-4322-3219-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 42347601-5838-4322-3219-08d8080363b6\r\n- **Build**: 20200612.2\r\n- **Date Produced**: 6/12/2020 9:09 AM\r\n- **Commit**: d7c00c9c988faa8f48980e6b54dd4a320adb8384\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20310.5 to 10.10.0-beta.20312.2\r\n\r\n[marker]: <> (End:42347601-5838-4322-3219-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12051","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#12051)"},{"Id":"637705610","IsPullRequest":true,"CreatedAt":"2020-06-12T14:21:24","Actor":"dotnet-maestro[bot]","Number":"12047","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200611.11\r\n- **Date Produced**: 6/12/2020 2:27 AM\r\n- **Commit**: b179e198403adbfbf275a40741cef7b252cda186\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.7.20311.2 to 5.0.0-preview.7.20311.11\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12047","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#12047)"},{"Id":"637706699","IsPullRequest":true,"CreatedAt":"2020-06-12T14:18:31","Actor":"dotnet-maestro[bot]","Number":"12048","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.7.20310.5 to 5.0.0-preview.7.20311.4 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200611.4\r\n- **Date Produced**: 6/11/2020 9:44 PM\r\n- **Commit**: 9e0a2c20a97266a45973ef03743db3eb1d1ec3f3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.7.20310.5 to 5.0.0-preview.7.20311.4\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.7.20310.5 to 5.0.0-preview.7.20311.4\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12048","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#12048)"},{"Id":"637707020","IsPullRequest":true,"CreatedAt":"2020-06-12T12:13:02","Actor":"dotnet-maestro[bot]","Number":"12049","RawContent":null,"Title":"[master] Update dependencies from Microsoft/vstest","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9dee50-6009-4f5e-3201-08d7a4f3bc87)\r\n## From https://github.com/microsoft/vstest\r\n- **Subscription**: 3c9dee50-6009-4f5e-3201-08d7a4f3bc87\r\n- **Build**: 20200612-02\r\n- **Date Produced**: 6/12/2020 9:31 AM\r\n- **Commit**: df62aca07cacc5c018dc8e828f03a0cd79ee52da\r\n- **Branch**: refs/heads/rel/16.7\r\n- **Updates**:\r\n  - **Microsoft.NET.Test.Sdk**: from 16.8.0-preview-20200610-07 to 16.7.0-release-20200612-02\r\n\r\n[marker]: <> (End:3c9dee50-6009-4f5e-3201-08d7a4f3bc87)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12049","RelatedDescription":"Open PR \"[master] Update dependencies from Microsoft/vstest\" (#12049)"},{"Id":"637620252","IsPullRequest":true,"CreatedAt":"2020-06-12T11:43:54","Actor":"dotnet-maestro[bot]","Number":"12042","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from microsoft/vstest","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c78c840b-bfb3-488e-faf1-08d7f76e4602)\r\n## From https://github.com/microsoft/vstest\r\n- **Subscription**: c78c840b-bfb3-488e-faf1-08d7f76e4602\r\n- **Build**: 20200612-02\r\n- **Date Produced**: 6/12/2020 9:31 AM\r\n- **Commit**: df62aca07cacc5c018dc8e828f03a0cd79ee52da\r\n- **Branch**: refs/heads/rel/16.7\r\n- **Updates**:\r\n  - **Microsoft.NET.Test.Sdk**: from 16.7.0-release-20200610-05 to 16.7.0-release-20200612-02\r\n\r\n[marker]: <> (End:c78c840b-bfb3-488e-faf1-08d7f76e4602)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12042","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from microsoft/vstest\" (#12042)"},{"Id":"637621295","IsPullRequest":true,"CreatedAt":"2020-06-12T11:25:38","Actor":"dotnet-maestro[bot]","Number":"12044","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:11bb8090-6789-4721-321a-08d8080363b6)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: 11bb8090-6789-4721-321a-08d8080363b6\r\n- **Build**: 20200612.2\r\n- **Date Produced**: 6/12/2020 9:09 AM\r\n- **Commit**: d7c00c9c988faa8f48980e6b54dd4a320adb8384\r\n- **Branch**: refs/heads/release/dev16.7\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 10.10.0-beta.20310.5 to 10.10.0-beta.20312.2\r\n\r\n[marker]: <> (End:11bb8090-6789-4721-321a-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12044","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/fsharp\" (#12044)"},{"Id":"637674339","IsPullRequest":false,"CreatedAt":"2020-06-12T11:09:35","Actor":"balasherkar","Number":"12046","RawContent":null,"Title":"how to handle ws-fed encrypted security token?","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/12046","RelatedDescription":"Closed issue \"how to handle ws-fed encrypted security token?\" (#12046)"},{"Id":"637638353","IsPullRequest":false,"CreatedAt":"2020-06-12T10:03:16","Actor":"saadsaeed01","Number":"12045","RawContent":null,"Title":"How can I pass 'Query Params' from a .razor page to .cshtml page in ASP.NET Core Blazor","State":"open","Body":"**Problem**\r\n\r\nI am trying to pass Query Params from a razor page to login.cshtml page. But I am not able to receive the Query Params\r\n\r\n**Methodology**\r\n\r\nI have razor component ForgetPassword.razor. It has a function UpdatePassword which is given below:\r\n\r\n```\r\nprivate async Task UpdatePassword()\r\n{\r\n\r\n   //The logic to be updated password will be implemented here\r\n    .\r\n    .\r\n    .           \r\n   //After user password has been updated then we need to redirect to login.cshtml page with a query param. I am using NavigationManager to redirect to login.cshtml page\r\n\r\n    var query = new Dictionary<string, string> { { \"message\", \"The password was successfully changed\" } };\r\n    _navManager.NavigateTo(QueryHelpers.AddQueryString(\"/login\", query));           \r\n}\r\n```\r\nNow when I am directed to the login.cshtml page. I am using the function OnGet to receive parameters. When I am directed towards the login.cshtml page through ForgetPassword.razor. The function is called but the message is always null.\r\n\r\n```\r\npublic async Task<IActionResult> OnGet(string message)\r\n{\r\n\r\n     //Some logic related to message here \r\n}\r\n```\r\nHowever, If I am on login.cshtml page and manually enter QueryParams in URL tab like:\r\n\r\nhttps://localhost:44372/login?message=HelloWorld\r\n\r\nI do receive the message.\r\n\r\nKindly help me with this problem.\r\n\r\nRegards\r\n\r\nSaad","Url":"https://github.com/dotnet/sdk/issues/12045","RelatedDescription":"Open issue \"How can I pass 'Query Params' from a .razor page to .cshtml page in ASP.NET Core Blazor\" (#12045)"},{"Id":"637621103","IsPullRequest":false,"CreatedAt":"2020-06-12T09:34:27","Actor":"rseanhall","Number":"12043","RawContent":null,"Title":"Officially support --self-contained with EnableDynamicLoading=true","State":"open","Body":"As far as I can tell, the only officially supported way to publish with `--self-contained true` is with a project with `OutputType=Exe`. In .NET 3.0, the `EnableDynamicLoading` property was added to support building components (https://github.com/dotnet/sdk/pull/3305). I would like it to be officially supported to publish a project with `EnableDynamicLoading=True` as self-contained. This is to support the new functionality being added in https://github.com/dotnet/runtime/issues/35465.\r\n\r\nThe general idea of how this is supposed to work is that the only difference between a self-contained published project with `OutputType=Exe` and `EnableDynamicLoading=True` is that the latter won't create an executable file. The output needs to contain:\r\n1. The project's build outputs.\r\n1. All dependencies of the project (applicable to the specified RID).\r\n1. The `.deps.json` file.\r\n1. The `.runtimeconfig.json` file.\r\n1. The specified runtime (applicable to the specified RID).\r\n\r\nAs far as I can tell, this already works today. 1-4 are already officially supported by specifying `EnableDynamicLoading=True`. The SDK already does 5 today, and it doesn't create an executable file. So unless I'm missing something that needs to be happening in the `EnableDynamicLoading` case, only tests and documentation needs to be written. I can help with that if needed.\r\n\r\n/cc @vitek-karas ","Url":"https://github.com/dotnet/sdk/issues/12043","RelatedDescription":"Open issue \"Officially support --self-contained with EnableDynamicLoading=true\" (#12043)"},{"Id":"637495841","IsPullRequest":true,"CreatedAt":"2020-06-12T07:33:10","Actor":"dotnet-maestro[bot]","Number":"12040","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:460d559e-c5c6-4e43-336f-08d807fd723d)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 460d559e-c5c6-4e43-336f-08d807fd723d\r\n- **Build**: 20200612.2\r\n- **Date Produced**: 6/12/2020 5:01 AM\r\n- **Commit**: 7869637badb48af19156cd9d1f8d3ba69663aa1d\r\n- **Branch**: refs/heads/release/dev16.7-preview3-vs-deps\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.7.0-3.20311.5 to 3.7.0-3.20312.2\r\n\r\n[marker]: <> (End:460d559e-c5c6-4e43-336f-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12040","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/roslyn\" (#12040)"},{"Id":"637495847","IsPullRequest":true,"CreatedAt":"2020-06-12T07:17:55","Actor":"dotnet-maestro[bot]","Number":"12041","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20200612.2\r\n- **Date Produced**: 6/12/2020 5:01 AM\r\n- **Commit**: 7869637badb48af19156cd9d1f8d3ba69663aa1d\r\n- **Branch**: refs/heads/release/dev16.7-preview3-vs-deps\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.7.0-3.20311.5 to 3.7.0-3.20312.2\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12041","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn\" (#12041)"},{"Id":"637411228","IsPullRequest":true,"CreatedAt":"2020-06-12T03:10:02","Actor":"dotnet-maestro[bot]","Number":"12039","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4ab8d731-469e-4b39-5499-08d7f76c64e3)\r\n## From https://github.com/dotnet/websdk\r\n- **Subscription**: 4ab8d731-469e-4b39-5499-08d7f76c64e3\r\n- **Build**: 20200611.5\r\n- **Date Produced**: 6/12/2020 12:43 AM\r\n- **Commit**: 2934f6a47c79ca793c1f831e904f2dc6782a3bef\r\n- **Branch**: refs/heads/release/5.0.1xx-preview6\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.6.20310.8 to 5.0.100-preview.6.20311.5\r\n\r\n[marker]: <> (End:4ab8d731-469e-4b39-5499-08d7f76c64e3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12039","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/websdk\" (#12039)"},{"Id":"637404195","IsPullRequest":true,"CreatedAt":"2020-06-12T02:29:00","Actor":"dotnet-maestro[bot]","Number":"12036","RawContent":null,"Title":"[release/5.0.1xx-preview6] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8bc86bdd-178b-43f7-3490-08d7f76f116e)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 8bc86bdd-178b-43f7-3490-08d7f76f116e\r\n- **Build**: 20200611.17\r\n- **Date Produced**: 6/12/2020 12:13 AM\r\n- **Commit**: 351a97dee8b7e29d775c6456e074812ae66141c5\r\n- **Branch**: refs/heads/release/5.0-preview6\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.6.20310.9 to 5.0.0-preview.6.20311.17\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.6.20310.9 to 5.0.0-preview.6.20311.17\r\n\r\n[marker]: <> (End:8bc86bdd-178b-43f7-3490-08d7f76f116e)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12036","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview6] Update dependencies from dotnet/aspnetcore\" (#12036)"},{"Id":"637408695","IsPullRequest":false,"CreatedAt":"2020-06-12T00:44:51","Actor":"joelverhagen","Number":"12038","RawContent":null,"Title":"dotnet tool search command should look up search URL via service index","State":"open","Body":"_This only affects .NET CLI from the .NET 5.0 previews since AFAIK these previews are the only place that this code has shipped._\r\n\r\nAccording to the NuGet V3 API documentation for the [Search resource](https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource), clients using the search API should look up the search URL using the search index. Any entry with the `@type` of `SearchQueryService` is a search service. \r\n\r\nThe nuget.org V3 service index is: https://api.nuget.org/v3/index.json\r\n\r\nIn the [`NugetToolSearchApiRequest` class](https://github.com/dotnet/sdk/blob/68baf9d2d992cc53d3c99eed991707e0d071479f/src/Cli/dotnet/NugetSearch/NugetToolSearchApiRequest.cs#L48), the search URL is hard coded instead of fetched dynamically from the service index. This is brittle and may break in the future in the URL advertised in the service index changes. Per V3 protocol, package sources are free to change URLs as long as the service index is updated accordingly.\r\n\r\nFor reference, nuget.org has changed the search URL at least once and the base URL for the sibling resource `RegistrationsBaseUrl` over 5 times.\r\n\r\nIf this class is able to use the `NuGet.Protocol` NuGet package, I recommend some code like this to discovery the search URL.\r\n\r\n```csharp\r\nvar repository = Repository.Factory.GetCoreV3(\"https://api.nuget.org/v3/index.json\");\r\nvar resource = await repository.GetResourceAsync<ServiceIndexResourceV3>();\r\n\r\nvar uris = resource.GetServiceEntryUris(\"SearchQueryService\");\r\nforeach (var uri in uris)\r\n{\r\n    Console.WriteLine(uri.AbsoluteUri);\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\nhttps://azuresearch-usnc.nuget.org/query\r\nhttps://azuresearch-ussc.nuget.org/query\r\n```\r\n\r\nTwo search URLs are advertised by nuget.org. You can choose to use the first only  or take a round robin approach for higher availability like NuGet client code:\r\nhttps://github.com/NuGet/NuGet.Client/blob/fc9dd52fcdf3c9a299a96de39b641b7c91779b5e/src/NuGet.Core/NuGet.Protocol/Resources/RawSearchResourceV3.cs#L43\r\n\r\nAlso, we plan on releasing a new resource type (for example `SearchQueryService/3.1.0`) as a signal that a package source supports package type filtering. This is not currently implemented but would ideally go in as part of this change:\r\n\r\n```csharp\r\nvar uris = resource.GetServiceEntryUris(\"SearchQueryService/3.1.0\");\r\n```\r\n\r\n/cc @wli3 @loic-sharma @ryuyu","Url":"https://github.com/dotnet/sdk/issues/12038","RelatedDescription":"Open issue \"dotnet tool search command should look up search URL via service index\" (#12038)"},{"Id":"637393533","IsPullRequest":false,"CreatedAt":"2020-06-11T23:54:09","Actor":"sbomer","Number":"12035","RawContent":null,"Title":"Support aggressive trimming","State":"open","Body":"The current linker defaults make it difficult to modify the linker behavior to achieve \"aggressive\" trimming. We should introduce an MSBuild property to turn on aggressive trimming - that is, to pass all linker inputs with the action \"link\" instead of \"copy\" or \"copyused\". We need to consider how this interacts with existing mechanisms to modify linker behavior on individual assemblies.","Url":"https://github.com/dotnet/sdk/issues/12035","RelatedDescription":"Open issue \"Support aggressive trimming\" (#12035)"},{"Id":"637404609","IsPullRequest":false,"CreatedAt":"2020-06-11T02:02:24","Actor":"Trojaner","Number":"12037","RawContent":null,"Title":"Condition on ProjectReference is not respected in dotnet build","State":"open","Body":"I am using the .NET Core SDK project structure with net461 as target.\r\n\r\n**Visual Studio Version**:\r\n16.3.1\r\n\r\n**dotnet --version**\r\n3.1.100\r\n\r\n**Summary**:\r\nThis is a similar issue to dotnet/project-system#6277 but the inverse situation occurs.\r\nProjectReference Conditions are respected by Visual Studio, but not by `dotnet build`.\r\n\r\n**Steps to Reproduce**:\r\n1.  Clone https://github.com/openmod/OpenMod/commit/31518dfecbdf70cb48ac724dafe56a92e2a8bc3e (later revisions have a workaround)\r\n2.  Build OpenMod.Unturned.Module with `dotnet build unturned/OpenMod.Unturned.Module --configuration Release --no-restore`.\r\n3. Check if `unturned/OpenMod.Unturned.Module/bin/Releases/net461/OpenMod.Unturned.dll` exists (it will be there)\r\n4. Clear bin folders\r\n5. Build OpenMod.Unturned.Module in Visual Studio with Release configuration.\r\n6. Check if `unturned/OpenMod.Unturned.Module/bin/Releases/net461/OpenMod.Unturned.dll` exists (it won't be there)\r\n\r\n**Expected Behavior**:\r\nIt is expected that in both cases the conditional OpenMod.Unturned project will *not* be included in release configuration, as $(NuGetBootstrap) equals true in release mode. See https://github.com/openmod/OpenMod/blob/31518dfecbdf70cb48ac724dafe56a92e2a8bc3e/unturned/OpenMod.Unturned.Module/OpenMod.Unturned.Module.csproj#L21 for the project conditions.\r\n\r\n**Actual Behavior**:\r\nVisual Studio behaves as expected. No OpenMod.Unturned.dll is found in the  `unturned/OpenMod.Unturned.Module/bin/Releases/net461/` directory, meaning the project did not get referenced.\r\n\r\n**Workaround**\r\nA simple workaround exists. The workaround is to move the condition to the PropertyGroup instead, like done in [this commit](https://github.com/openmod/OpenMod/commit/df876c8bc7ad714bb6a98eafcb336deed68a315c).\r\n\r\nThe dotnet build does not behave like Visual Studio. The OpenMod.Unturned.dll exists in  `unturned/OpenMod.Unturned.Module/bin/Releases/net461/`, which means the project got referenced despite the false condition.\r\n\r\n**User Impact**:\r\nInconsistent build behaviour across Visual Studio and `dotnet build`","Url":"https://github.com/dotnet/sdk/issues/12037","RelatedDescription":"Open issue \"Condition on ProjectReference is not respected in dotnet build\" (#12037)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1266468358758764544","CreatedAt":"2020-05-29T20:36:01+00:00","UserScreenname":"dotnet","Text":"We have released the May 2020 Security and Quality Rollup Updates for .NET Framework. Get all the info and resource… https://t.co/lgYPYVq94U","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":35,"FavoriteCount":20,"RawContent":null},{"Id":"1266424571944722432","CreatedAt":"2020-05-29T17:42:01+00:00","UserScreenname":"dotnet","Text":"In this episode of the #AzureDevOps podcast, @quorralyne shares what she loves about #dotNET 5, the current project… https://t.co/XDG4iIDULr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1266415510696062983","CreatedAt":"2020-05-29T17:06:01+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":34,"FavoriteCount":13,"RawContent":null},{"Id":"1266389088028033024","CreatedAt":"2020-05-29T15:21:01+00:00","UserScreenname":"dotnet","Text":"In this #MSBuild session on demand, we learn about the latest features and support for building enterprise-grade so… https://t.co/hPt40Bag81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":28,"RawContent":null},{"Id":"1266109747339694089","CreatedAt":"2020-05-28T20:51:01+00:00","UserScreenname":"dotnet","Text":"#MSBuild session on demand: Build native apps for any device with .NET\n\nLearn how #Xamarin is evolving to support m… https://t.co/XcoybIqkhL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":89,"FavoriteCount":34,"RawContent":null},{"Id":"1266069734266732545","CreatedAt":"2020-05-28T18:12:01+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, Nikola @Metulev showcases how quickly you can get started with the Microsoft Graph To… https://t.co/4lSbbPgKHF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1266057913916948480","CreatedAt":"2020-05-28T17:25:03+00:00","UserScreenname":"dotnet","Text":".@Microsoft desktop developers can now quickly set up DevOps for their applications using @GitHub Actions! \nLearn h… https://t.co/th90MftM6U","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":37,"RawContent":null},{"Id":"1265748206165659649","CreatedAt":"2020-05-27T20:54:23+00:00","UserScreenname":"dotnet","Text":"Join @EdwardSkrod on the #dotNET community standup with @LyalinDotCom &amp; @OliaGavrysh Thurs, 5/27 @ 10 am PST for a… https://t.co/L3T2t0tXB9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"1265720613835911170","CreatedAt":"2020-05-27T19:04:44+00:00","UserScreenname":"dotnet","Text":"If you're interested in F#, you should check out this conference. It's completely free and has speakers from both t… https://t.co/4uOWn0gWps","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":79,"FavoriteCount":48,"RawContent":null},{"Id":"1265700550592606208","CreatedAt":"2020-05-27T17:45:01+00:00","UserScreenname":"dotnet","Text":"...so many great things coming for #dotNET devs in the new releases of #VS2019.\n✅ .NET Async tool for profiling .NE… https://t.co/CJYjfE33Fj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":85,"FavoriteCount":22,"RawContent":null},{"Id":"1265663054420869120","CreatedAt":"2020-05-27T15:16:01+00:00","UserScreenname":"dotnet","Text":"There's plenty of new things coming to .NET, from .NET 5 to source generators. This #MSBuild session on demand walk… https://t.co/ahf0PC0mou","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":82,"FavoriteCount":31,"RawContent":null},{"Id":"1265382953036713985","CreatedAt":"2020-05-26T20:43:00+00:00","UserScreenname":"dotnet","Text":"We've made some updates to #ASPNET Core in #dotNET 5 Preview 4.\nRead all about them, jump in, and then give us your… https://t.co/pm3nJTwJDz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":79,"FavoriteCount":42,"RawContent":null},{"Id":"1265347468960493568","CreatedAt":"2020-05-26T18:22:00+00:00","UserScreenname":"dotnet","Text":"In the DevOps for .NET Developers series, @AbelSquidHead  &amp; @jeremylikness discuss doing Feature Flags with .NET\n\nhttps://t.co/TZOtPnxUGI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"1265336148878073856","CreatedAt":"2020-05-26T17:37:01+00:00","UserScreenname":"dotnet","Text":"Blazor WebAssembly includes support for Progressive Web Applications. \n\nFollow along with @JonGalloway as he shows… https://t.co/QPcjvVI6OE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":123,"FavoriteCount":44,"RawContent":null},{"Id":"1265327433638502400","CreatedAt":"2020-05-26T17:02:23+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2020-06-14T05:30:31.0283197Z","RunDurationInMilliseconds":12336}