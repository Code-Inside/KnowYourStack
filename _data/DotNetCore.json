{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework July 2020 Cumulative Update Preview for Windows 10, version 2004","PublishedOn":"2020-07-31T17:42:59+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2020 Cumulative Update Preview for .NET Framework 3.5 and 4.8 on Windows 10, version 2004.\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/","RawContent":null},{"Title":"Learn about the latest .NET Productivity features","PublishedOn":"2020-07-29T17:15:56+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"The .NET Productivity team (a.k.a. Roslyn) is constantly thinking of new ways to make .NET developers more productive. We’ve been working hard to take the feedback you’ve sent us and turn it into...","Href":"https://devblogs.microsoft.com/dotnet/learn-about-the-latest-net-productivity-features/","RawContent":null},{"Title":".NET Framework July 2020 Cumulative Update Preview","PublishedOn":"2020-07-21T21:10:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2020 Cumulative Update Preview Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/","RawContent":null},{"Title":"Announcing Entity Framework Core EF Core 5.0 Preview 7","PublishedOn":"2020-07-21T16:54:05+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, the Entity Framework Core team announces the seventh preview release of EF Core 5.0.\nThis release includes a factory to create DbContext instances, the ability to reset DbContext state, Cosmos...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-ef-core-5-0-preview-7/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 7","PublishedOn":"2020-07-21T16:19:39+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 7. It&#8217;s the second to last of the preview releases (before moving to RC). Most features should be very close to done at this point. Single file and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-7/","RawContent":null},{"Title":".NET Framework July 2020 Security and Quality Rollup Updates","PublishedOn":"2020-07-14T17:19:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On July 23, 2020, updates KB4565616 v2, KB4565623 v2, KB4565636 v2, KB4565583 v2, KB4565586 v2 and KB4565589 v2 were released to replace v1 of those updates for .NET Framework 4.5.2, 4.6, 4.6.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/","RawContent":null},{"Title":".NET Core July 2020 Updates – 2.1.20 and 3.1.6","PublishedOn":"2020-07-14T17:16:17+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2020 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nSecurity\nCVE-2020-1147:...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2020/","RawContent":null},{"Title":"Performance Improvements in .NET 5","PublishedOn":"2020-07-13T10:54:25+00:00","CommentsCount":58,"FacebookCount":0,"Summary":"In previous releases of .NET Core, I&#8217;ve blogged about the significant performance improvements that found their way into the release. For each post, from .NET Core 2.0 to .NET Core 2.1 to .NET...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/","RawContent":null},{"Title":"F# 5 and F# tools update for June","PublishedOn":"2020-06-26T17:20:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to announce more updates to F# 5 today! We shipped an initial set of features with F# 5 preview 1, and they have all been stabilizing since that release including a updates from last...","Href":"https://devblogs.microsoft.com/dotnet/f-5-and-f-tools-update-for-june/","RawContent":null},{"Title":"Announcing Entity Framework Core EFCore 5.0 Preview 6","PublishedOn":"2020-06-25T16:47:30+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, the Entity Framework Core team announces the sixth preview release of EF Core 5.0. This release includes split queries for related collections, a new &#8220;index&#8221; attribute, improved...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-efcore-5-0-preview-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12268956493","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:22:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Closed pull request \"Adding OmniSharp to projects list\" (#182) at dotnet/foundation","RelatedBody":""},{"Id":"12268946116","Type":"PullRequestEvent","CreatedAt":"2020-05-07T13:21:09","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/192","RelatedDescription":"Closed pull request \"Update coverlet links\" (#192) at dotnet/foundation","RelatedBody":"Update repo links\r\n\r\ncc: @tonerdo"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12929048885","Type":"IssuesEvent","CreatedAt":"2020-07-16T21:51:59","Actor":"clairernovotny","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Opened issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161) at dotnet/announcements","RelatedBody":"Early next week, we are planning to move this repository to dotnet/msbuild as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523"},{"Id":"12902892833","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Opened issue \"July 2020 .NET Updates\" (#160) at dotnet/announcements","RelatedBody":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n\r\n\r\n* .NET Core 3.1.6 and .NET Core SDK 3.1.106 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.20 and .NET Core SDK 2.1.808 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n"},{"Id":"12902701233","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:06:54","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Denial of Service Vulnerability\" (#159) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.4 or SDK 3.1.104 (for Visual Studio 2019 v16.4) or 3.1.202 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n"},{"Id":"12582563527","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Opened issue \"June 2020 .NET Updates\" (#158) at dotnet/announcements","RelatedBody":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n\r\n\r\n* .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n\r\n* .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n"},{"Id":"12582414995","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:22:17","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.18 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.4 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"13088397237","Type":"PullRequestEvent","CreatedAt":"2020-08-02T17:08:06","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28073","RelatedDescription":"Opened pull request \"Don't rely on the built-in marshaller during activation.\" (#28073) at dotnet/coreclr","RelatedBody":"## Summary\r\n\r\nRelying on the built-in marshaller leverages the Class interface approach which doesn't work for some interface types (e.g. interfaces inheriting from `IDispatch`).\r\n\r\nThis approach is wrong regardless of why given that COM dictates the returned value must be properly cast the specific interface vtable.\r\n\r\nUpdated tests so they would have found this issue.\r\n\r\n## Customer impact\r\n\r\nThis issue manifests most commonly when activating a managed COM server for an interface that inherits from `IDispatch`. This is particularly profound in Office extensions since most inherit from `IDispatch`. The fact that this hasn't been reported seems to imply few customers are authoring Office extensions using .NET Core at present. As .NET 5 releases and adoption increases the assumption would be this issue will become more common.\r\n\r\nThere is no workaround.\r\n\r\nSee https://github.com/dotnet/runtime/issues/38950 for user reported issue.\r\n\r\n.NET 5 fix: https://github.com/dotnet/runtime/pull/40228.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework and has been present since COM support was added to .NET Core.\r\n\r\n## Testing\r\n\r\nValidation of the above user scenario and updated tests to handle verify the scenario.\r\n\r\n## Risk\r\n\r\nThe risk of this change has two facets. It is possible .NET Core COM server authors have come to rely on this unusual behavior so it is possible we break someone. How that manifests would near impossible to determine given the fact that this is a bug in our following COM rules.\r\n\r\nThe change itself is isolated to COM scenarios only and has no impact on any scenario other than COM servers authored in .NET Core. This seems to be an acceptable risk given that the primary motivation for COM support was for Office and given few have hit this and it does impact that scenario the fix to follow the COM rules is warranted."},{"Id":"13076993016","Type":"PullRequestEvent","CreatedAt":"2020-07-31T20:04:51","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28072","RelatedDescription":"Opened pull request \"Fix DataTargetReader::AlignBase()\" (#28072) at dotnet/coreclr","RelatedBody":"## Summary\r\n\r\n#28033 added `DAC_ALIGNAS` macro to force MSVC and clang/gcc compilers layouts to match.  Unfortunately `DataTargetReader::AlignBase()` hard coded the difference in layouts.  This PR updates `DataTargetReader::AlignBase()` to remove the obsolete assumption.\r\n\r\n## Customer impact\r\n\r\nCustomer reported being unable to examine stack traces using the out of process stack unwinder.  This breaks their diagnostic tools.\r\n\r\n## Regression\r\n\r\nYes:  Introduced by #28033 \r\nThe regression was missed because the regression was only for Linux targets and `FEATURE_METADATA_VERIFY_LAYOUTS` is disabled on Linux.\r\n\r\n## Testing\r\n\r\nEnabled `FEATURE_METADATA_VERIFY_LAYOUTS` in draft PR #28063 to verify layout assumptions on Linux too.  Not in this PR simply to reduce size of PR to more easily meet servicing BAR.\r\n\r\nAlso tested with a custom built version of .NET Core 3.1.5 with this patch and the originals customers reported issue.\r\n\r\n## Risk\r\n\r\nLow code is only used in DBI for debugging. "},{"Id":"13074387163","Type":"PullRequestEvent","CreatedAt":"2020-07-31T15:19:41","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28071","RelatedDescription":"Opened pull request \"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap\" (#28071) at dotnet/coreclr","RelatedBody":"- Snap's default strict confinement doesn't allow setting the affinity of a different thread, and currently doesn't allow `sched_setaffinity(<nonzeroPid>, ...)`, which pthread implementation calls\r\n- Switched to use `sched_setaffinity(0, ...)` where appropriate\r\n\r\nFixes https://github.com/dotnet/runtime/issues/1634"},{"Id":"13063849775","Type":"PullRequestEvent","CreatedAt":"2020-07-30T17:08:55","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28070","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28070) at dotnet/coreclr","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @ViktorHofer\n* @stephentoub\n* @Anipik\n* @dotnet-maestro-bot\n* @omajid\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"13063802447","Type":"PullRequestEvent","CreatedAt":"2020-07-30T17:04:32","Actor":"silvioguiso","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28069","RelatedDescription":"Merged pull request \"Decodes bitstream to string\" (#28069) at dotnet/coreclr","RelatedBody":""},{"Id":"13063353185","Type":"PullRequestEvent","CreatedAt":"2020-07-30T16:24:36","Actor":"silvioguiso","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28069","RelatedDescription":"Opened pull request \"Decodes bitstream to string\" (#28069) at dotnet/coreclr","RelatedBody":""},{"Id":"13042901049","Type":"PullRequestEvent","CreatedAt":"2020-07-28T23:51:18","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28057","RelatedDescription":"Closed pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28057) at dotnet/coreclr","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @omajid\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"13042867850","Type":"PullRequestEvent","CreatedAt":"2020-07-28T23:44:52","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28055","RelatedDescription":"Merged pull request \"Use Azure Artifacts feed instead of MyGet\" (#28055) at dotnet/coreclr","RelatedBody":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"13125252787","Type":"PullRequestEvent","CreatedAt":"2020-08-06T06:14:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13442","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13442) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"13124129176","Type":"PullRequestEvent","CreatedAt":"2020-08-06T02:47:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13442","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13442) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"13040576271","Type":"PullRequestEvent","CreatedAt":"2020-07-28T18:45:48","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13431","RelatedDescription":"Merged pull request \"Use Azure Artifacts instead of MyGet\" (#13431) at dotnet/cli","RelatedBody":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed."},{"Id":"13032732009","Type":"PullRequestEvent","CreatedAt":"2020-07-28T05:06:01","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13432","RelatedDescription":"Merged pull request \"Use Azure Artifacts instead of MyGet\" (#13432) at dotnet/cli","RelatedBody":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed."},{"Id":"13032729186","Type":"PullRequestEvent","CreatedAt":"2020-07-28T05:05:31","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13433","RelatedDescription":"Merged pull request \"Use Azure Artifacts instead of MyGet\" (#13433) at dotnet/cli","RelatedBody":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"13135211951","Type":"IssuesEvent","CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Opened issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771) at dotnet/standard","RelatedBody":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n```\r\nwarning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n```\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n"},{"Id":"13121604343","Type":"IssuesEvent","CreatedAt":"2020-08-05T20:00:51","Actor":"vsfeedback","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1770","RelatedDescription":"Opened issue \"Add String.Replace() method overloads to accept String Arrays\" (#1770) at dotnet/standard","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1096521/add-stringreplace-overloads-to-accept-string-array.html)._\n\n---\n<p>I’d suggest adding 2 overloads for the String.Replace() method to accept string arrays.</p><h2>1. Suggestion: <code>String.Replace(String[], String[])</code></h2><p>This will replace all occurences from the first argument (String[]) with the second argument (String[]).<br>\nExample:</p>\n<pre>var testString = &quot;this is just a test&quot;;\nstring[] search = { &quot;this&quot;, &quot;just&quot;, &quot;test&quot; };\nstring[] replace = { &quot;that&quot;, &quot;only&quot;, &quot;plane&quot; };\nvar newString = testString.Replace(search, replace); // &quot;that is only a plane&quot;\n</pre><p>At the moment you could call 3x Replace() in a chain to achieve this or write a new method for that with a loop etc.</p><h2>2. Suggestion: <code>String.Replace(String[], String)</code></h2><p>This will replace all occurences from the first argument (String[]) with the second argument (String)<br>\nExample:</p>\n<pre>var testString = &quot;this is just a test&quot;;\nstring[] search = { &quot;this&quot;, &quot;test&quot; };\nstring replace = &quot;no&quot;;\nvar newString = testString.Replace(search, replace); // &quot;no is just a no&quot;\n</pre>\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/1/2020, 01:33 AM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team."},{"Id":"13085175971","Type":"IssuesEvent","CreatedAt":"2020-08-02T00:39:54","Actor":"lewing","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1073","RelatedDescription":"Closed issue \".NET Standard for WebAssembly\" (#1073) at dotnet/standard","RelatedBody":"### Rationale and Usage\r\n\r\nAs WebAssembly support in Mono is being worked on there is a need to consider it as a platform for NS2.1.  `PlatformID.WebAssembly`\r\n \r\n### Proposed API\r\n\r\n#### PlatformID\r\n\r\nThis adds WebAssembly enum to `PlatformID`\r\n\r\n```\r\n    public enum PlatformID\r\n    {\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32S = 0,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32Windows = 1,\r\n        Win32NT = 2,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WinCE = 3,\r\n        Unix = 4,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Xbox = 5,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] MacOSX = 6\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WebAssembly = 7\r\n    }\r\n```\r\n\r\n#### OSPlatform\r\n\r\nThis adds `OSPlatform.WebAssembly`.\r\n\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    public readonly struct OSPlatform : IEquatable<OSPlatform>\r\n    {\r\n        private readonly string _osPlatform;\r\n\r\n        public static OSPlatform WebAssembly { get; } = new OSPlatform(\"WEBASSEMBLY\");\r\n\r\n        public static OSPlatform FreeBSD { get; } = new OSPlatform(\"FREEBSD\");\r\n\r\n        public static OSPlatform Linux { get; } = new OSPlatform(\"LINUX\");\r\n\r\n        public static OSPlatform OSX { get; } = new OSPlatform(\"OSX\");\r\n\r\n        public static OSPlatform Windows { get; } = new OSPlatform(\"WINDOWS\");\r\n\r\n```\r\n\r\nIssue from Blazor: https://github.com/mono/mono/issues/13002\r\n\r\n@terrajobst @marek-safar @lewing\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"13053973187","Type":"PullRequestEvent","CreatedAt":"2020-07-29T21:42:59","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42961","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42961) at dotnet/corefx","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"13053935993","Type":"PullRequestEvent","CreatedAt":"2020-07-29T21:38:39","Actor":"silvioguiso","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42960","RelatedDescription":"Merged pull request \"Unlocks esrp version\" (#42960) at dotnet/corefx","RelatedBody":""},{"Id":"13053398046","Type":"PullRequestEvent","CreatedAt":"2020-07-29T20:41:13","Actor":"silvioguiso","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42960","RelatedDescription":"Opened pull request \"Unlocks esrp version\" (#42960) at dotnet/corefx","RelatedBody":""},{"Id":"13041367519","Type":"PullRequestEvent","CreatedAt":"2020-07-28T20:15:04","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42959","RelatedDescription":"Opened pull request \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#42959) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"13136231497","Type":"PullRequestEvent","CreatedAt":"2020-08-07T05:29:25","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/46615","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#46615) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"13135508114","Type":"PullRequestEvent","CreatedAt":"2020-08-07T03:03:44","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/46615","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#46615) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"13123086721","Type":"IssuesEvent","CreatedAt":"2020-08-05T23:26:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8256","RelatedDescription":"Opened issue \"Survey: Native AOT\" (#8256) at dotnet/corert","RelatedBody":"Performance has been a key .NET feature. The existing options for optimizing published applications work well for most scenarios that .NET targets today.\r\n\r\nSome of you asked us to consider adding native AOT compilation option with distinctly different characteristics. The distinctly different characteristics of native AOT come with tradeoffs such as lower compatibility that are explained in detail in [.NET Runtime Form Factors](https://github.com/dotnet/designs/blob/master/accepted/2020/form-factors.md#native-aot-form-factors). We’ve created a survey to help us better understand the native AOT use cases.\r\n\r\nWe would appreciate your feedback so we can work on creating the right plans for future. If you don’t supply contact details, then responses will be anonymous.\r\n\r\nSurvey: https://www.surveymonkey.com/r/SQCYB2C\r\n\r\nThank you for your time!"},{"Id":"13119703763","Type":"PullRequestEvent","CreatedAt":"2020-08-05T16:28:31","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8255","RelatedDescription":"Opened pull request \"Wasm: Align classes and arrays with 64 bit types at 8 byte\" (#8255) at dotnet/corert","RelatedBody":"Closes #8250 \r\n\r\nThis PR enables the `FEATURE_64BIT_ALIGNMENT` feature for Wasm and implements some of the `RhpNew...` functions to align arrays and classes at 8 bytes.  This will move Wasm closer to enabling threads (although may have to wait for Wasm Exceptions for this as the current emscripten exception handling is not thread safe - this Wasm feature is currently behind a flag in v8).\r\n\r\nMay also improve ARM32 support, but not tried that."},{"Id":"13114189704","Type":"IssuesEvent","CreatedAt":"2020-08-05T07:17:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/issues/8254","RelatedDescription":"Reopened issue \"Windows DLL import leftovers in Unix assemblies?\" (#8254) at dotnet/corert","RelatedBody":"To get an idea of how many and which native calls I need to implement on different game consoles I have written a small tool that scans assemblies for DLLImports. To my surprise I found some calls to Windows dlls in the SDK and framework folder that were build for an ARM64 Unix system. \r\n\r\nI assume it's not a big issue as these functions might not be called at all and as CoreRT would use dynamic loading they will not cause any unresolved externals. But maybe someone is interested and like to clean it up at some point\r\n\r\nIn System.Private.CoreLib.dll I found\r\n        kernel32.dll\r\n                LCIDToLocaleName\r\n                LocaleNameToLCID\r\n                LCMapStringEx\r\n                FindNLSStringEx\r\n                CompareStringEx\r\n                CompareStringOrdinal\r\n                FindStringOrdinal\r\n                IsNLSDefinedString\r\n                GetUserPreferredUILanguages\r\n                GetLocaleInfoEx\r\n                EnumSystemLocalesEx\r\n                EnumTimeFormatsEx\r\n                GetCalendarInfoEx\r\n                GetUserGeoID\r\n                GetGeoInfo\r\n                EnumCalendarInfoExEx\r\n                GetNLSVersionEx\r\n                ResolveLocaleName\r\n        Normaliz.dll\r\n                IdnToAscii\r\n                IdnToUnicode\r\n                IsNormalizedString\r\n                NormalizeString\r\n\r\nand another one in\r\nSystem.Reflection.Metadata.dll\r\n        kernel32.dll\r\n                ReadFile"},{"Id":"13114189422","Type":"IssuesEvent","CreatedAt":"2020-08-05T07:17:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8254","RelatedDescription":"Closed issue \"Windows DLL import leftovers in Unix assemblies?\" (#8254) at dotnet/corert","RelatedBody":"To get an idea of how many and which native calls I need to implement on different game consoles I have written a small tool that scans assemblies for DLLImports. To my surprise I found some calls to Windows dlls in the SDK and framework folder that were build for an ARM64 Unix system. \r\n\r\nI assume it's not a big issue as these functions might not be called at all and as CoreRT would use dynamic loading they will not cause any unresolved externals. But maybe someone is interested and like to clean it up at some point\r\n\r\nIn System.Private.CoreLib.dll I found\r\n        kernel32.dll\r\n                LCIDToLocaleName\r\n                LocaleNameToLCID\r\n                LCMapStringEx\r\n                FindNLSStringEx\r\n                CompareStringEx\r\n                CompareStringOrdinal\r\n                FindStringOrdinal\r\n                IsNLSDefinedString\r\n                GetUserPreferredUILanguages\r\n                GetLocaleInfoEx\r\n                EnumSystemLocalesEx\r\n                EnumTimeFormatsEx\r\n                GetCalendarInfoEx\r\n                GetUserGeoID\r\n                GetGeoInfo\r\n                EnumCalendarInfoExEx\r\n                GetNLSVersionEx\r\n                ResolveLocaleName\r\n        Normaliz.dll\r\n                IdnToAscii\r\n                IdnToUnicode\r\n                IsNormalizedString\r\n                NormalizeString\r\n\r\nand another one in\r\nSystem.Reflection.Metadata.dll\r\n        kernel32.dll\r\n                ReadFile"},{"Id":"13114148856","Type":"IssuesEvent","CreatedAt":"2020-08-05T07:12:16","Actor":"RalfKornmannEnvision","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8254","RelatedDescription":"Opened issue \"Windows DLL import leftovers in Unix assemblies?\" (#8254) at dotnet/corert","RelatedBody":"To get an idea of how many and which native calls I need to implement on different game consoles I have written a small tool that scans assemblies for DLLImports. To my surprise I found some calls to Windows dlls in the SDK and framework folder that were build for an ARM64 Unix system. \r\n\r\nI assume it's not a big issue as these functions might not be called at all and as CoreRT would use dynamic loading they will not cause any unresolved externals. But maybe someone is interested and like to clean it up at some point\r\n\r\nIn System.Private.CoreLib.dll I found\r\n        kernel32.dll\r\n                LCIDToLocaleName\r\n                LocaleNameToLCID\r\n                LCMapStringEx\r\n                FindNLSStringEx\r\n                CompareStringEx\r\n                CompareStringOrdinal\r\n                FindStringOrdinal\r\n                IsNLSDefinedString\r\n                GetUserPreferredUILanguages\r\n                GetLocaleInfoEx\r\n                EnumSystemLocalesEx\r\n                EnumTimeFormatsEx\r\n                GetCalendarInfoEx\r\n                GetUserGeoID\r\n                GetGeoInfo\r\n                EnumCalendarInfoExEx\r\n                GetNLSVersionEx\r\n                ResolveLocaleName\r\n        Normaliz.dll\r\n                IdnToAscii\r\n                IdnToUnicode\r\n                IsNormalizedString\r\n                NormalizeString\r\n\r\nand another one in\r\nSystem.Reflection.Metadata.dll\r\n        kernel32.dll\r\n                ReadFile"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"13136013574","Type":"PullRequestEvent","CreatedAt":"2020-08-07T04:47:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12819","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn\" (#12819) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: e251dd77-ab9f-49fc-4299-08d828bd4fbd\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 4:18 AM\r\n- **Commit**: dba2fa57432b4bd9cc7880e2c6fe3acdd01bba3c\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20379.3 to 3.8.0-2.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n\r\n"},{"Id":"13136010258","Type":"PullRequestEvent","CreatedAt":"2020-08-07T04:46:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12818","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/roslyn\" (#12818) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 4:18 AM\r\n- **Commit**: dba2fa57432b4bd9cc7880e2c6fe3acdd01bba3c\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20379.3 to 3.8.0-2.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n"},{"Id":"13135844638","Type":"PullRequestEvent","CreatedAt":"2020-08-07T04:11:45","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12817","RelatedDescription":"Opened pull request \"Refactor SDK resolver out from MSBuildSdkResolver\" (#12817) at dotnet/sdk","RelatedBody":""},{"Id":"13135666749","Type":"PullRequestEvent","CreatedAt":"2020-08-07T03:34:38","Actor":"jmarolf","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12816","RelatedDescription":"Merged pull request \"fix additional space in properties\" (#12816) at dotnet/sdk","RelatedBody":"fixes #12784"},{"Id":"13135666722","Type":"IssuesEvent","CreatedAt":"2020-08-07T03:34:37","Actor":"jmarolf","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/12784","RelatedDescription":"Closed issue \"EnableNETAnalyzers feature not working\" (#12784) at dotnet/sdk","RelatedBody":"\r\nThis file has bugs in these lines:\r\n\r\nIn these two locations, there is an extra space in `$(EnableNETAnalyzers )` before the closing parenthesis, causing MSBuild to not find that property:\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L22\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L26\r\n\r\nSo even if I set `EnableNETAnalyzers` to true in my csproj, it gets overriden to `false` because this line overrides it:\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L26\r\n\r\nOnce that spaces get removed, the DLLs are not found because their paths are relative to the project, not to the SDK:\r\n\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L37\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L41\r\nhttps://github.com/dotnet/sdk/blob/4edb1ebd7a4169cc7b39aecd4a2f198c22dcd2cc/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.Analyzers.targets#L44\r\n\r\nError:\r\n```\r\nCSC : error CS0006: Metadata file '..\\analyzers\\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll' could not be found [D:\\testing\\ConsoleCore\\ConsoleCore.csproj]\r\nCSC : error CS0006: Metadata file '..\\analyzers\\Microsoft.CodeAnalysis.NetAnalyzers.dll' could not be found [D:\\testing\\ConsoleCore\\ConsoleCore.csproj]\r\n```\r\n\r\nSo the fix is to prefix the 3 DLL paths with `$(MSBuildThisFileDirectory)` like this:\r\n```xml\r\nInclude=\"$(MSBuildThisFileDirectory)..\\analyzers\\Microsoft.CodeAnalysis.VisualBasic.NetAnalyzers.dll\"\r\n```\r\n\r\nOnce fixed, it can find instances of the new Roslyn analyzers.\r\n\r\nThis bug is present in master and in Preview8.\r\n\r\ncc @jmarolf @mavasani "},{"Id":"13135144339","Type":"PullRequestEvent","CreatedAt":"2020-08-07T01:51:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12804","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/windowsdesktop\" (#12804) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200805.1\r\n- **Date Produced**: 8/5/2020 3:07 PM\r\n- **Commit**: 8be1ccd1047a7febcb347a18f4cc9f5b9e99cdd7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n"},{"Id":"13135043462","Type":"PullRequestEvent","CreatedAt":"2020-08-07T01:31:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12806","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/roslyn-analyzers\" (#12806) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: e7c40fb8-9651-4ba2-dbe8-08d81c92f408\r\n- **Build**: 20200805.4\r\n- **Date Produced**: 8/6/2020 3:18 AM\r\n- **Commit**: b22019435de10dc59bfccaaa9b2dd08e9eb4a3b6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: from 3.3.0-beta3.20404.8 to 3.3.0-beta3.20405.4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n\r\n"},{"Id":"13134940053","Type":"PullRequestEvent","CreatedAt":"2020-08-07T01:09:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/12800","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/msbuild\" (#12800) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200806.1\r\n- **Date Produced**: 8/6/2020 6:53 AM\r\n- **Commit**: e8c17c128ed847d4acd278b42a02df9621bd1652\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n  - **Microsoft.Build**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n"},{"Id":"13134486494","Type":"PullRequestEvent","CreatedAt":"2020-08-06T23:37:08","Actor":"jmarolf","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/12816","RelatedDescription":"Opened pull request \"bugfix/fix additional space in properties rc1\" (#12816) at dotnet/sdk","RelatedBody":"fixes #12784"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"671652892","IsPullRequest":true,"CreatedAt":"2020-08-02T17:08:05","Actor":"AaronRobinsonMSFT","Number":"28073","RawContent":null,"Title":"[.NET Core 3.1] Don't rely on the built-in interface marshaller during COM activation.","State":"open","Body":"## Summary\r\n\r\nRelying on the built-in marshaller leverages the Class interface approach which doesn't work for some interface types (e.g. interfaces inheriting from `IDispatch`).\r\n\r\nThis approach is wrong regardless of why given that COM dictates the returned value must be properly cast the specific interface vtable.\r\n\r\nUpdated tests so they would have found this issue.\r\n\r\n## Customer impact\r\n\r\nThis issue manifests most commonly when activating a managed COM server for an interface that inherits from `IDispatch`. This is particularly profound in Office extensions since most inherit from `IDispatch`. The fact that this hasn't been reported seems to imply few customers are authoring Office extensions using .NET Core at present. As .NET 5 releases and adoption increases the assumption would be this issue will become more common.\r\n\r\nThere is no workaround.\r\n\r\nSee https://github.com/dotnet/runtime/issues/38950 for user reported issue.\r\n\r\n.NET 5 PR: https://github.com/dotnet/runtime/pull/40228.\r\n\r\n## Regression\r\n\r\nThis is a regression from .NET Framework and has been present since COM support was added to .NET Core.\r\n\r\n## Testing\r\n\r\nValidation of the above user scenario and updated tests in .NET 5 to verify the scenario. The test updates did not get ported to this PR but can be if those changes are desired. The minimum updates to tests were applied here to enable build and run of existing tests.\r\n\r\n## Risk\r\n\r\nThe risk of this change has two facets. It is possible .NET Core COM server authors have come to rely on this unusual behavior so it is possible we break someone. How that manifests would near impossible to determine given the fact that this is a bug in our following COM rules.\r\n\r\nThe change itself is isolated to COM scenarios only and has no impact on any scenario other than COM servers authored in .NET Core. This seems to be an acceptable risk given that the primary motivation for COM support was for Office and since few (read one) reports of the failure and it does impact the Office scenario the fix to follow the COM rules appears warranted.","Url":"https://github.com/dotnet/coreclr/pull/28073","RelatedDescription":"Open PR \"[.NET Core 3.1] Don't rely on the built-in interface marshaller during COM activation.\" (#28073)"},{"Id":"670175635","IsPullRequest":true,"CreatedAt":"2020-07-31T20:04:50","Actor":"sdmaclea","Number":"28072","RawContent":null,"Title":"Fix DataTargetReader::AlignBase()","State":"open","Body":"## Summary\r\n\r\n#28033 added `DAC_ALIGNAS` macro to force MSVC and clang/gcc compilers layouts to match.  Unfortunately `DataTargetReader::AlignBase()` hard coded the difference in layouts.  This PR updates `DataTargetReader::AlignBase()` to remove the obsolete assumption.\r\n\r\n## Customer impact\r\n\r\nCustomer reported being unable to examine stack traces using the out of process stack unwinder.  This breaks their diagnostic tools.\r\n\r\n## Regression\r\n\r\nYes:  Introduced by #28033 \r\nThe regression was missed because the regression was only for Linux targets and `FEATURE_METADATA_VERIFY_LAYOUTS` is disabled on Linux.\r\n\r\n## Testing\r\n\r\nEnabled `FEATURE_METADATA_VERIFY_LAYOUTS` in draft PR #28063 to verify layout assumptions on Linux too.  Not in this PR simply to reduce size of PR to more easily meet servicing BAR.\r\n\r\nAlso tested with a custom built version of .NET Core 3.1.5 with this patch and the originals customers reported issue.\r\n\r\n## Risk\r\n\r\nLow code is only used in DBI for debugging. ","Url":"https://github.com/dotnet/coreclr/pull/28072","RelatedDescription":"Open PR \"Fix DataTargetReader::AlignBase()\" (#28072)"},{"Id":"669925126","IsPullRequest":true,"CreatedAt":"2020-07-31T15:19:40","Actor":"kouvel","Number":"28071","RawContent":null,"Title":"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap","State":"open","Body":"- Port of https://github.com/dotnet/runtime/pull/40205 to 3.1\r\n- Snap's default strict confinement doesn't allow setting the affinity of a different thread, and currently doesn't allow `sched_setaffinity(<nonzeroPid>, ...)` even with the calling thread's pid, which pthread implementation uses\r\n- Switched to use `sched_setaffinity(0, ...)` where appropriate\r\n\r\nFixes https://github.com/dotnet/runtime/issues/1634\r\n\r\n### Customer impact\r\n\r\n- .NET Core doesn't work under Snap's default strict confinement. When a thread is created coreclr requests for the processor affinity of the new thread to be changed to the process' affinity, which is not allowed under Snap's strict confinement.\r\n- There are a couple of workarounds, but both involve manual/non-default steps (inconvenient) and give the process more control than desired:\r\n  - Specify the process-control plug and manually connect it before running the app\r\n  - Require the classic confinement instead and specify it when installing the app\r\n- The workarounds may also cause some difficulty, especially longer-term, for .NET Core apps to be added to the public snap store due to the extra control the process would require.\r\n  - It is possible to specify to auto-connect the process-control plug using store processes, but it requires review and justification, and the purpose of working around this issue may be difficult to justify longer-term\r\n  - Apps that use the classic confinement run without any sandboxing, and may not be allowed in the public snap store for the purpose of working around this issue\r\n  - See https://github.com/dotnet/runtime/issues/1634#issuecomment-667332468 for more information\r\n\r\n### Regression?\r\n\r\nNo\r\n\r\n### Testing\r\n\r\n- Tested a small app under Snap's strict confinement\r\n- PAL, coreclr, and libraries tests\r\n\r\n### Risk\r\n\r\nLow:\r\n- Instead of the creating thread changing the affinity of the created thread, the created thread changes its own affinity after starting, the difference is mostly invisible\r\n- Where appropriate, used a fallback to use the pthread implementation for setting the affinity when sched_setaffinity is not available, so in the theoretical possibility of a different pthread implementation for setting the affinity, there would be no change from before","Url":"https://github.com/dotnet/coreclr/pull/28071","RelatedDescription":"Open PR \"[3.1] Change new thread's affinity after thread starts, from the same thread, as a workaround for Snap\" (#28071)"},{"Id":"668982471","IsPullRequest":true,"CreatedAt":"2020-07-30T17:08:54","Actor":"dotnet-maestro-bot","Number":"28070","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @ViktorHofer\n* @stephentoub\n* @Anipik\n* @dotnet-maestro-bot\n* @omajid\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28070","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28070)"},{"Id":"668934448","IsPullRequest":true,"CreatedAt":"2020-07-30T17:04:31","Actor":"silvioguiso","Number":"28069","RawContent":null,"Title":"Decodes bitstream to string","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28069","RelatedDescription":"Closed or merged PR \"Decodes bitstream to string\" (#28069)"},{"Id":"656700055","IsPullRequest":true,"CreatedAt":"2020-07-28T23:51:17","Actor":"dotnet-maestro-bot","Number":"28057","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @omajid\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28057","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28057)"},{"Id":"651823123","IsPullRequest":true,"CreatedAt":"2020-07-28T23:44:51","Actor":"garath","Number":"28055","RawContent":null,"Title":"Use Azure Artifacts feed instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/coreclr/pull/28055","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts feed instead of MyGet\" (#28055)"},{"Id":"667346270","IsPullRequest":true,"CreatedAt":"2020-07-28T20:16:27","Actor":"dotnet-maestro-bot","Number":"28068","RawContent":null,"Title":"Update BuildTools to rc1-05428-07 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28068","RelatedDescription":"Open PR \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#28068)"},{"Id":"665279560","IsPullRequest":true,"CreatedAt":"2020-07-28T18:29:19","Actor":"ViktorHofer","Number":"28066","RawContent":null,"Title":"Hardcode path to ICU on macOS","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/05f17e3170d014efe63202c4e7e7b641e8f8fef6.","Url":"https://github.com/dotnet/coreclr/pull/28066","RelatedDescription":"Closed or merged PR \"Hardcode path to ICU on macOS\" (#28066)"},{"Id":"665280682","IsPullRequest":true,"CreatedAt":"2020-07-24T17:09:08","Actor":"ViktorHofer","Number":"28067","RawContent":null,"Title":"Hardcode path to ICU on macOS","State":"closed","Body":"Port of dotnet/runtime@05f17e3","Url":"https://github.com/dotnet/coreclr/pull/28067","RelatedDescription":"Closed or merged PR \"Hardcode path to ICU on macOS\" (#28067)"},{"Id":"664937647","IsPullRequest":true,"CreatedAt":"2020-07-24T06:02:10","Actor":"theaoqi","Number":"28065","RawContent":null,"Title":"[3.1] build.sh skipcrossgen failed","State":"open","Body":"dotnet/runtime has a new build system and I cannot reproduce this issue with dotnet/runtime. I have no idea whether coreclr 3.1 accept new fixes. If not, please free feel to close the PR. Thanks!\r\n\r\n```\r\n$ ./build.sh skipcrossgen\r\n...\r\nCommand successfully completed.\r\nRunning init-dotnet.sh\r\nInstalling dotnet using Arcade...\r\nRunning: /disk/aoqi/disk/dotnet/coreclr/.dotnet/dotnet msbuild /nologo /verbosity:minimal /clp:Summary /p:PortableBuild=true /maxcpucount /p:ArcadeBuild=true /home/aoqi/work/dotnet/dotnet/coreclr/src/build.proj /flp:Verbosity=normal;LogFile=/home/aoqi/work/dotnet/dotnet/coreclr/bin/Logs/System.Private.CoreLib_Debug.log /p:__IntermediatesDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin/obj/Linux.x64.Debug /p:__RootBinDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /nodeReuse:false /p:RestoreDuringBuild=true /p:OptimizationDataDir=\"/home/aoqi/work/dotnet/dotnet/coreclr/.packages/optimization.Linux-x64.IBC.CoreCLR/99.99.99-master-20190912.1/data\" /p:EnableProfileGuidedOptimization=true /p:BuildManagedTools=true\r\n  runincontext -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/runincontext.dll\r\n  R2RDump -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/R2RDump.dll\r\n  System.Private.CoreLib -> /home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:06.72\r\nCommand successfully completed.\r\nSkipping generating native image\r\nGenerating nuget packages for Linux\r\nDistroRid is linux-x64\r\nROOTFS_DIR is \r\n/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/MSBuild.dll /nologo -bl:/home/aoqi/work/dotnet/dotnet/coreclr/bin/Logs/Nuget_Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/disk/aoqi/disk/dotnet/coreclr/.dotnet/sdk/3.1.100/dotnet.dll -maxcpucount /m -verbosity:m /v:minimal /clp:Summary /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:Configuration=Debug /p:RepoRoot=/disk/aoqi/disk/dotnet/coreclr /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:PortableBuild=true /p:ArcadeBuild=true /p:__IntermediatesDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin/obj/Linux.x64.Debug /p:__RootBinDir=/home/aoqi/work/dotnet/dotnet/coreclr/bin /p:__DoCrossArchBuild=0 /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /p:RestoreDuringBuild=true /p:Projects=/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/packages.builds /warnaserror /disk/aoqi/disk/dotnet/coreclr/.packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.20113.5/tools/Build.proj\r\n  Restore completed in 17.97 ms for /disk/aoqi/disk/dotnet/coreclr/.packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.20113.5/tools/Tools.proj.\r\n  Restore completed in 4.95 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Jit/Microsoft.NETCore.Jit.builds.\r\n  Restore completed in 4.96 ms for /home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/packages.builds.\r\n  Restore completed in 4.97 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.builds.\r\n  Restore completed in 4.96 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.TestHost/Microsoft.NETCore.TestHost.builds.\r\n  Restore completed in 4.96 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.ILAsm/Microsoft.NETCore.ILAsm.builds.\r\n  Restore completed in 4.92 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Native/Microsoft.NETCore.Native.builds.\r\n  Restore completed in 4.97 ms for /disk/aoqi/disk/dotnet/coreclr/src/.nuget/Microsoft.NETCore.ILDAsm/Microsoft.NETCore.ILDAsm.builds.\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget lib package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget packed package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error : Error when creating nuget packed package from /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Runtime.CoreCLR.nuspec. NuGet.Packaging.Core.PackagingException: File not found: '/home/aoqi/work/dotnet/dotnet/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll'. [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n/home/aoqi/work/dotnet/dotnet/coreclr/.packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.20113.5/build/Packaging.targets(1260,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/home/aoqi/work/dotnet/dotnet/coreclr/src/.nuget/Microsoft.NETCore.Runtime.CoreCLR/Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n  Microsoft.NETCore.Native -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Native.nuspec\r\n  Microsoft.NETCore.TestHost -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.TestHost.nuspec\r\n  Microsoft.NETCore.ILDAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.ILDAsm.nuspec\r\n  Microsoft.NETCore.Native -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Native.nuspec\r\n  Microsoft.NETCore.ILAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.ILAsm.nuspec\r\n  Microsoft.NETCore.ILDAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.ILDAsm.nuspec\r\n  Microsoft.NETCore.Runtime.CoreCLR -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Runtime.CoreCLR.nuspec\r\n  Microsoft.NETCore.TestHost -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.TestHost.nuspec\r\n  Microsoft.NETCore.ILAsm -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.ILAsm.nuspec\r\n  Microsoft.NETCore.Jit -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.NETCore.Jit.nuspec\r\n  Microsoft.NETCore.Jit -> /disk/aoqi/disk/dotnet/coreclr/artifacts/packages/Debug/specs/Microsoft.NETCore.Jit.nuspec\r\n\r\nBuild FAILED.\r\n```","Url":"https://github.com/dotnet/coreclr/pull/28065","RelatedDescription":"Open PR \"[3.1] build.sh skipcrossgen failed\" (#28065)"},{"Id":"662127321","IsPullRequest":true,"CreatedAt":"2020-07-21T16:32:06","Actor":"silvioguiso","Number":"28064","RawContent":null,"Title":"Adds tls12 to init-tools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28064","RelatedDescription":"Closed or merged PR \"Adds tls12 to init-tools\" (#28064)"},{"Id":"658424684","IsPullRequest":true,"CreatedAt":"2020-07-16T17:58:25","Actor":"sdmaclea","Number":"28063","RawContent":null,"Title":"Enable FEATURE_METADATA_VERIFY_LAYOUTS and fix debugging regression","State":"open","Body":"#28035 Changed the layout of several types used in the DBI. The code to verify these layouts was only enabled on Windows. Therefore these layout changes were not detected and the TargetTypes/DataTargetReader code responsible for binary translation was not updated\r\n\r\nThis is a draft patch to document the process used to find and verify the layout changes.  I suspect this is too big a patch to take in 3.1 servicing.  The https://github.com/dotnet/coreclr/commit/7c68ef0ca51618797043174fe547064cb872e013 patch will likely be the ultimate servicing patch\r\n\r\n/cc @hoyosjs @noahfalk @jeffschwMSFT @jkotas @chuckries ","Url":"https://github.com/dotnet/coreclr/pull/28063","RelatedDescription":"Open PR \"Enable FEATURE_METADATA_VERIFY_LAYOUTS and fix debugging regression\" (#28063)"},{"Id":"657022467","IsPullRequest":true,"CreatedAt":"2020-07-16T17:18:08","Actor":"AaronRobinsonMSFT","Number":"28061","RawContent":null,"Title":"Don't prune the IManagedActivationFactory type","State":"closed","Body":"Fixes a user reported issue for consuming XAML Islands in .NET 3.1. The result is a random failure typically during XAML load. The managed definition of [`IManagedActivationFactory`](https://github.com/dotnet/coreclr/blob/68ec8a211852cc9cf662d19bac251f364719702f/src/System.Private.CoreLib/src/System/Runtime/InteropServices/WindowsRuntime/ManagedActivationFactory.cs#L10-L16) has been pruned of its function and thus when a call is made to a class implementing that interface, random memory is executed since there is no entry in the vtable.\r\n\r\nThe scenario involving this code was [removed in .NET 5.0](https://github.com/dotnet/runtime/issues/37672) so there is no need to bring the work forward.\r\n\r\n## Customer Impact\r\n\r\nUsers will be unable to use XAML Islands or WinUI with bindings in .NET 3.1.\r\n\r\n### Workaround\r\n\r\nThere is no work around. The Linker removed the function definition and single implementation in question - they no longer exist in the assembly to call.\r\n\r\n## Regression?\r\n\r\nThis is probably a regression, but I have not identified the exact location where the break was introduced.\r\n\r\nConfirmed the method is missing and broken in [3.0.1](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.exe), but the method is present in 2.2.7.\r\n\r\n## Testing\r\n\r\nValidated a patched version of `System.Private.CoreLib` against a XAML Island scenario from https://github.com/microsoft/Xaml-Islands-Samples.\r\n\r\n## Risk\r\nLow. \r\n\r\n/cc @jeffschwMSFT @jkotas @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/28061","RelatedDescription":"Closed or merged PR \"Don't prune the IManagedActivationFactory type\" (#28061)"},{"Id":"657491939","IsPullRequest":true,"CreatedAt":"2020-07-15T16:49:23","Actor":"silvioguiso","Number":"28062","RawContent":null,"Title":"Updates build pipelines","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28062","RelatedDescription":"Closed or merged PR \"Updates build pipelines\" (#28062)"},{"Id":"648602879","IsPullRequest":true,"CreatedAt":"2020-07-14T22:59:44","Actor":"stephentoub","Number":"28053","RawContent":null,"Title":"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/21417 from 2.2 to 2.1\r\n\r\n#### Description\r\n\r\nCTR.Token should never throw, but it's currently throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed.\r\n\r\nDetails: We added the CancellationTokenRegistration.Token property in .NET Core 2.1.  Since the CTR already knows with what token it's associated, allowing you to get the token from the CTR saves you from also needing to separately store the token, which lets you improve memory utilization by not carrying it around effectively twice.  We took advantage of that, for example, in FileStream's Read/WriteAsync operations, to decrease the size of the object allocated for those operations.  However, the CTR.Token property is incorrectly throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed, which introduces an ODE where there wasn't previously one (just accessing a CancellationToken you already had stored).  This is causing regressions in code that created a token source, registered with its token, and then disposed the source.\r\n\r\n#### Customer Impact\r\n\r\ne.g.\r\nExceptions on background threads that crash the process when performing operations like:\r\n```C#\r\nvar cts = new CancellationTokenSource();\r\nTask<int> t = fileStream.ReadAsync(..., cts.Token);\r\ncts.Dispose();\r\nint result = await t;\r\n```\r\n\r\nWe fixed this in 2.2 but so far held off on backporting to 2.1 pending more customer data since it's an LTS release. Since then we've had 2 more reports (see https://github.com/dotnet/runtime/issues/37641) most recently a customer that says:\r\n\r\n> It may take the rest of the year to reach 3.1. In the meantime our servers are crashing and clients are getting mad! I can only apologize to them, mitigate the issues as best as possible and then blame you for not updating an LTS version!\r\n\r\nSince the change is very low risk -- it's been in the product since 2.2 -- we are proposing we now backport to 2.1\r\n\r\n#### Regression?\r\n\r\nYes.  It's not a regression in CancellationTokenRegistration.Token, which was only introduced in 2.1, but rather a regression in that it's behavior isn't matching code it was used to replace, so it's for example a regression in FileStream.Read/WriteAsync.\r\n\r\n#### Packaging reviewed? \r\n\r\nChange affects System.Private.CoreLib only.\r\n\r\n#### Risk\r\n\r\nMinimal.  The new code is effectively the same as the old, except avoiding a ThrowIfDisposed call.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28053","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#28053)"},{"Id":"643722922","IsPullRequest":true,"CreatedAt":"2020-07-14T22:59:17","Actor":"janvorli","Number":"28051","RawContent":null,"Title":"Port to 3.1 - Fix JIT_CheckedWriteBarrier on macOS","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/38242\r\n\r\nIn a change to enable Mojave hardened runtime support that was made last\r\nyear, a bug was introduced into the JIT_CheckedWriteBarrier. A\r\nconditional relative jump before an updated piece of code that was jumping\r\nafter that piece of code was not updated and ended up jumping into the\r\nmiddle of an instruction. Since that condition occurs only with specific\r\nmemory layout and it is very rare, that problem was not discovered until\r\nnow.\r\n\r\n# Customer impact\r\nThe bug is causing consistent crashes on some configurations of OSX machines while it works fine on others. Unity was hit by this problem. It was observed on the new Apple silicon devices when running under Rosetta 2 emulator, but it can occur on any x64 macOS device.\r\n\r\n# Regression?\r\nYes, introduced in 3.1.0\r\n\r\n# Testing\r\nThe original fix was supplied and tested by Unity\r\n\r\n# Risk\r\nLow, this fix fixes an obvious bug in assembler helper code where a conditional jump jumps into the middle of an instruction and the app crashes. \r\n","Url":"https://github.com/dotnet/coreclr/pull/28051","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix JIT_CheckedWriteBarrier on macOS\" (#28051)"},{"Id":"656897714","IsPullRequest":true,"CreatedAt":"2020-07-14T22:58:24","Actor":"Anipik","Number":"28059","RawContent":null,"Title":"update branding for 2.1.21","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28059","RelatedDescription":"Closed or merged PR \"update branding for 2.1.21\" (#28059)"},{"Id":"656917337","IsPullRequest":true,"CreatedAt":"2020-07-14T22:58:06","Actor":"dotnet-maestro-bot","Number":"28060","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-29017-01, servicing-29018-12, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28060","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-29017-01, servicing-29018-12, respectively (release/2.1)\" (#28060)"},{"Id":"656806164","IsPullRequest":true,"CreatedAt":"2020-07-14T22:54:22","Actor":"Anipik","Number":"28058","RawContent":null,"Title":"update branding to 3.1.7","State":"closed","Body":"No internal changes","Url":"https://github.com/dotnet/coreclr/pull/28058","RelatedDescription":"Closed or merged PR \"update branding to 3.1.7\" (#28058)"},{"Id":"656177065","IsPullRequest":true,"CreatedAt":"2020-07-14T15:21:22","Actor":"silvioguiso","Number":"28056","RawContent":null,"Title":"Updates build pools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28056","RelatedDescription":"Closed or merged PR \"Updates build pools\" (#28056)"},{"Id":"650173216","IsPullRequest":true,"CreatedAt":"2020-07-02T20:32:09","Actor":"sdmaclea","Number":"28054","RawContent":null,"Title":"More release/3.1 crossdac incremental changes","State":"closed","Body":"+ allow the branch to continue after 5.0 releases\r\n+ Fixup `CrossDacCoreClrVersion` variable routing\r\n+ Add `SymStoreCrossDacIndex` to add libcoreclr.so to packages and enable SymStore indexing","Url":"https://github.com/dotnet/coreclr/pull/28054","RelatedDescription":"Closed or merged PR \"More release/3.1 crossdac incremental changes\" (#28054)"},{"Id":"646561680","IsPullRequest":true,"CreatedAt":"2020-07-02T01:55:05","Actor":"sdmaclea","Number":"28052","RawContent":null,"Title":"Modify internal pipeline to simplify 3.1-crossdac mirroring","State":"closed","Body":"My idea is that the 3.1-crossdac will disable the normal runtime build and test (as it would be wasteful and redundant), then add its own tests.  \r\n\r\nTo simplify auto merging I wanted to keep the 3.1 servicing branch aligned with the 3.1-crossdac branch.\r\n\r\nSo this basically \r\n+ Adding comments.\r\n+ A condition on `variables['Build.SourceBranch']`\r\n+ Changing indent.\r\n\r\nMy hope is that this is the only CI change to the release/3.1 branch.","Url":"https://github.com/dotnet/coreclr/pull/28052","RelatedDescription":"Closed or merged PR \"Modify internal pipeline to simplify 3.1-crossdac mirroring\" (#28052)"},{"Id":"637211734","IsPullRequest":true,"CreatedAt":"2020-06-15T17:24:10","Actor":"dotnet-maestro-bot","Number":"28050","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28050","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28928-01, servicing-28928-04, respectively (release/2.1)\" (#28050)"},{"Id":"637176717","IsPullRequest":true,"CreatedAt":"2020-06-11T17:32:59","Actor":"dotnet-maestro-bot","Number":"28049","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @omajid\n* @Anipik\n* @dotnet-maestro-bot\n* @mmitche\n* @davmason\n* @jashook\n* @jkotas\n* @wtgodbe\n* @RussKeldorph\n* @adiaaida\n* @tarekgh\n* @BruceForstall\n* @AndyAyersMS\n* @stephentoub\n* @DrewScoggins\n* @jorive\n* @danmosemsft\n* @janvorli\n* @sandreenko\n* @hoyosjs\n* @kouvel\n* @joshfree\n* @weshaggard\n* @krwq\n* @CarolEidt\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28049","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#28049)"},{"Id":"629345338","IsPullRequest":true,"CreatedAt":"2020-06-11T16:49:15","Actor":"omajid","Number":"28045","RawContent":null,"Title":"[release/2.1] Fix build with clang 10","State":"closed","Body":"This contains a grab bag of fixes to fix the build with clang 10.\r\n\r\n- https://github.com/dotnet/coreclr/pull/23075\r\n\r\n  Fix missing includes in coreclr/src/debug/createdump/\r\n\r\n- https://github.com/dotnet/runtime/pull/33096\r\n\r\n  SList::Init: add missing constructor\r\n\r\n- A subset of https://github.com/dotnet/coreclr/pull/22129\r\n\r\n  Just the parts that introduce the THROW_DECL macro in pal.h\r\n\r\n- https://github.com/dotnet/runtime/pull/32837\r\n\r\n  This fixes THROW_DECL introduce in the previous PR to work with clang, which\r\n  is required in clang 10.\r\n\r\n- One new change:\r\n\r\n  In a significant divergance, this commits adds more THROW_DECL macros\r\n  to all the math functions to address a ton of errors pointed out when\r\n  building SOS:\r\n\r\n   ```\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/ToolBox/SOS/Strike/strike.cpp:116:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/vm/hillclimbing.h:19:\r\n    In file included from /home/omajid/devel/dotnet/coreclr/src/inc/complex.h:16:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/math.h:36:\r\n    In file included from /usr/bin/../lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/cmath:45:\r\n    In file included from /usr/include/math.h:290:\r\n    /usr/include/bits/mathcalls.h:53:13: error: exception specification in declaration does not match previous declaration\r\n    __MATHCALL (acos,, (_Mdouble_ __x));\r\n                ^\r\n    /home/omajid/devel/dotnet/coreclr/src/pal/inc/pal.h:4395:26: note: previous declaration is here\r\n    PALIMPORT double __cdecl acos(double);\r\n                             ^\r\n   ```\r\n\r\n  Then, to make sure the declarations and implementations match, it adds\r\n  THROW_DECL to the definitions in src/pal/src/cruntime/math.cpp\r\n\r\nCo-authored-by: Mike McLaughlin <mikem@microsoft.com>\r\nCo-authored-by: Sinan Kaya <sinan.kaya@microsoft.com>\r\nCo-authored-by: Tom Deseyn <tom.deseyn@gmail.com>","Url":"https://github.com/dotnet/coreclr/pull/28045","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix build with clang 10\" (#28045)"},{"Id":"636430835","IsPullRequest":true,"CreatedAt":"2020-06-10T18:41:43","Actor":"Anipik","Number":"28048","RawContent":null,"Title":"Update branding to 2.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28048","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.20\" (#28048)"},{"Id":"622546826","IsPullRequest":true,"CreatedAt":"2020-06-09T22:16:48","Actor":"mmitche","Number":"28044","RawContent":null,"Title":"[release/3.1] Fix triggers for 3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28044","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix triggers for 3.1\" (#28044)"},{"Id":"635670566","IsPullRequest":true,"CreatedAt":"2020-06-09T22:12:48","Actor":"Anipik","Number":"28047","RawContent":null,"Title":"update branding to 3.1.6","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28047","RelatedDescription":"Closed or merged PR \"update branding to 3.1.6\" (#28047)"},{"Id":"629617445","IsPullRequest":true,"CreatedAt":"2020-06-09T00:40:12","Actor":"AaronRobinsonMSFT","Number":"28046","RawContent":null,"Title":"Support function pointers in field marshalers","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37295\r\n\r\nThis was fixed in .NET 5 when [field marshalling was completely rewritten](https://github.com/dotnet/coreclr/pull/26340).\r\n\r\n## Customer Impact\r\n\r\nUsers will be unable to have function pointers as fields in structs that are used in interop scenarios. [Function pointers](https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md) are now supported in the C# language.\r\n\r\n### Workaround\r\n\r\nThis can naturally be worked around by using `IntPtr`, `UIntPtr`, `void*`, `nint`, or `nuint` as the field and then casting to the appropriate function pointer type at the usage site in managed code. This would severely degrade the UX for usage of function pointers though.\r\n\r\n## Regression?\r\n\r\nNo. This is supporting a new C# feature and previous .NET runtimes never tested/supported this scenario.\r\n\r\n## Testing\r\n\r\nValidated both 32 and 64 bit struct of the field marshalling scenario. This follows the same behavior as a `void*` pointer so no new functionality is added just reuse of an existing code path for a new type.\r\n\r\n## Risk\r\nLow. \r\n\r\n/cc @tannergooding @333fred @jkoritzinsky @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28046","RelatedDescription":"Closed or merged PR \"Support function pointers in field marshalers\" (#28046)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"673972725","IsPullRequest":true,"CreatedAt":"2020-08-06T06:14:45","Actor":"dotnet-maestro[bot]","Number":"13442","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13442","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13442)"},{"Id":"657683483","IsPullRequest":true,"CreatedAt":"2020-07-28T18:45:47","Actor":"garath","Number":"13431","RawContent":null,"Title":"Use Azure Artifacts instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/cli/pull/13431","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts instead of MyGet\" (#13431)"},{"Id":"657684460","IsPullRequest":true,"CreatedAt":"2020-07-28T05:06:00","Actor":"garath","Number":"13432","RawContent":null,"Title":"Use Azure Artifacts instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/cli/pull/13432","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts instead of MyGet\" (#13432)"},{"Id":"657685101","IsPullRequest":true,"CreatedAt":"2020-07-28T05:05:31","Actor":"garath","Number":"13433","RawContent":null,"Title":"Use Azure Artifacts instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/cli/pull/13433","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts instead of MyGet\" (#13433)"},{"Id":"658389526","IsPullRequest":true,"CreatedAt":"2020-07-22T23:00:25","Actor":"dotnet-maestro-bot","Number":"13438","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wtgodbe\n* dsplaisted\n* wli3\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13438","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13438)"},{"Id":"663986992","IsPullRequest":true,"CreatedAt":"2020-07-22T22:56:25","Actor":"dotnet-maestro[bot]","Number":"13441","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200722.8\r\n- **Date Produced**: 7/22/2020 9:53 PM\r\n- **Commit**: 4b0c1aca9239a592552a63e84d09767d9b187adb\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20365.20 to 3.1.400-servicing.20372.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13441","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13441)"},{"Id":"663936181","IsPullRequest":true,"CreatedAt":"2020-07-22T18:12:33","Actor":"wtgodbe","Number":"13440","RawContent":null,"Title":"Update version of Guardian package","State":"closed","Body":"Unblocks SDL validation","Url":"https://github.com/dotnet/cli/pull/13440","RelatedDescription":"Closed or merged PR \"Update version of Guardian package\" (#13440)"},{"Id":"663323745","IsPullRequest":true,"CreatedAt":"2020-07-22T00:38:45","Actor":"joeloff","Number":"13439","RawContent":null,"Title":"Stabilize branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13439","RelatedDescription":"Closed or merged PR \"Stabilize branding\" (#13439)"},{"Id":"657810483","IsPullRequest":true,"CreatedAt":"2020-07-17T22:17:37","Actor":"dsplaisted","Number":"13434","RawContent":null,"Title":"Update branding to 2.1.517","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13434","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.517\" (#13434)"},{"Id":"657935007","IsPullRequest":true,"CreatedAt":"2020-07-17T10:28:05","Actor":"dotnet-maestro[bot]","Number":"13437","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200715.20\r\n- **Date Produced**: 7/16/2020 7:14 AM\r\n- **Commit**: b501745abdf35363aa5f1caa95d9086594c49366\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20360.11 to 3.1.400-preview.20365.20\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13437","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13437)"},{"Id":"657850381","IsPullRequest":true,"CreatedAt":"2020-07-17T09:31:54","Actor":"dotnet-maestro[bot]","Number":"13435","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200715.6\r\n- **Date Produced**: 7/16/2020 1:27 AM\r\n- **Commit**: 7cc59275eade471e29b88a797275818b0d513d0f\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20326.2 to 1.0.0-beta.20365.6\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13435","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13435)"},{"Id":"657864090","IsPullRequest":true,"CreatedAt":"2020-07-16T16:59:15","Actor":"dsplaisted","Number":"13436","RawContent":null,"Title":"Merge internal changes and update branding to 3.1.107","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13436","RelatedDescription":"Closed or merged PR \"Merge internal changes and update branding to 3.1.107\" (#13436)"},{"Id":"656913599","IsPullRequest":true,"CreatedAt":"2020-07-16T15:48:59","Actor":"dotnet-maestro-bot","Number":"13425","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13425","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13425)"},{"Id":"656913634","IsPullRequest":true,"CreatedAt":"2020-07-16T15:48:26","Actor":"dotnet-maestro-bot","Number":"13426","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13426","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13426)"},{"Id":"656913636","IsPullRequest":true,"CreatedAt":"2020-07-16T15:48:03","Actor":"dotnet-maestro-bot","Number":"13427","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13427","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13427)"},{"Id":"657552199","IsPullRequest":true,"CreatedAt":"2020-07-15T19:59:54","Actor":"sfoslund","Number":"13430","RawContent":null,"Title":"Updating branding to 2.1.809","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13430","RelatedDescription":"Closed or merged PR \"Updating branding to 2.1.809\" (#13430)"},{"Id":"657550829","IsPullRequest":true,"CreatedAt":"2020-07-15T19:29:09","Actor":"wli3","Number":"13429","RawContent":null,"Title":"Update branding to 2.1.614","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13429","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.614\" (#13429)"},{"Id":"656944900","IsPullRequest":true,"CreatedAt":"2020-07-15T16:49:32","Actor":"wtgodbe","Number":"13428","RawContent":null,"Title":"Insert 3.1.6 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13428","RelatedDescription":"Closed or merged PR \"Insert 3.1.6 runtime\" (#13428)"},{"Id":"656812384","IsPullRequest":true,"CreatedAt":"2020-07-15T14:51:01","Actor":"sfoslund","Number":"13424","RawContent":null,"Title":"3.1.3xx Branding Update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13424","RelatedDescription":"Closed or merged PR \"3.1.3xx Branding Update\" (#13424)"},{"Id":"655060366","IsPullRequest":true,"CreatedAt":"2020-07-13T09:47:48","Actor":"dotnet-maestro[bot]","Number":"13422","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6702\r\n- **Date Produced**: 7/8/2020 1:51 AM\r\n- **Commit**: cd51d2637fc533e1e188c860e7616107904a3623\r\n- **Branch**: release-5.7.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-rtm.6686 to 5.7.0-rtm.6702\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13422","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13422)"},{"Id":"655092543","IsPullRequest":true,"CreatedAt":"2020-07-11T00:40:01","Actor":"dotnet-maestro[bot]","Number":"13423","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200710.11\r\n- **Date Produced**: 7/10/2020 11:45 PM\r\n- **Commit**: 7272da4b33c8f184e79561614a79f6a76725bb4f\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20358.5 to 3.1.400-preview.20360.11\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13423","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13423)"},{"Id":"655033575","IsPullRequest":true,"CreatedAt":"2020-07-10T21:00:16","Actor":"nugetlurker","Number":"13421","RawContent":null,"Title":"Insert NuGet Build 5.7.0-rtm.6702 into cli","State":"open","Body":"Insert NuGet Build 5.7.0-rtm.6702 into cli master branch","Url":"https://github.com/dotnet/cli/pull/13421","RelatedDescription":"Open PR \"Insert NuGet Build 5.7.0-rtm.6702 into cli\" (#13421)"},{"Id":"653721826","IsPullRequest":true,"CreatedAt":"2020-07-09T06:24:14","Actor":"dotnet-maestro[bot]","Number":"13420","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200708.5\r\n- **Date Produced**: 7/9/2020 2:37 AM\r\n- **Commit**: 7a07692dcfcff7705cda9bc2a5f12779f4c4d7e7\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20330.17 to 3.1.400-preview.20358.5\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13420","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13420)"},{"Id":"652555002","IsPullRequest":true,"CreatedAt":"2020-07-08T03:04:08","Actor":"dotnet-maestro[bot]","Number":"13419","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6686\r\n- **Date Produced**: 7/2/2020 12:31 AM\r\n- **Commit**: bd482514a87a0085f8eb8603842ee1cb3ca5f277\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-rtm.6677 to 5.7.0-rtm.6686\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13419","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13419)"},{"Id":"647511528","IsPullRequest":true,"CreatedAt":"2020-07-01T23:01:06","Actor":"dotnet-maestro-bot","Number":"13415","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* wtgodbe\n* dsplaisted\n* dotnet-bot\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13415","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13415)"},{"Id":"648647630","IsPullRequest":true,"CreatedAt":"2020-07-01T04:12:35","Actor":"dotnet-maestro[bot]","Number":"13418","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200630.17\r\n- **Date Produced**: 7/1/2020 3:29 AM\r\n- **Commit**: a99cb0ac6abb55577041c096a75ff7008a807994\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20329.2 to 3.1.400-preview.20330.17\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13418","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13418)"},{"Id":"648336283","IsPullRequest":true,"CreatedAt":"2020-06-30T20:57:13","Actor":"dotnet-maestro[bot]","Number":"13417","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3d0224a4-3d24-42c0-3376-08d807fd723d\r\n- **Build**: 5.7.0.6677\r\n- **Date Produced**: 6/27/2020 9:11 PM\r\n- **Commit**: 088004379cb99890f766e9b7a0a29f7b080f888b\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.7.0-rtm.6670 to 5.7.0-rtm.6677\r\n\r\n[marker]: <> (End:3d0224a4-3d24-42c0-3376-08d807fd723d)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13417","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13417)"},{"Id":"647512520","IsPullRequest":true,"CreatedAt":"2020-06-29T17:56:34","Actor":"dotnet-maestro[bot]","Number":"13416","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200629.2\r\n- **Date Produced**: 6/29/2020 4:16 PM\r\n- **Commit**: 15c823ade9700b999bda3bca8e2c7987ff265f25\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20324.14 to 3.1.400-preview.20329.2\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13416","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13416)"},{"Id":"647102782","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:32","Actor":"wli3","Number":"13413","RawContent":null,"Title":"Remove unnecessary reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13413","RelatedDescription":"Closed or merged PR \"Remove unnecessary reference\" (#13413)"},{"Id":"647102832","IsPullRequest":true,"CreatedAt":"2020-06-29T16:25:29","Actor":"wli3","Number":"13414","RawContent":null,"Title":"Remove unnecessary reference","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13414","RelatedDescription":"Closed or merged PR \"Remove unnecessary reference\" (#13414)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"wrkettlitz","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"wrkettlitz","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-06-12T12:00:40","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200803.5\r\n- **Date Produced**: 8/3/2020 9:14 PM\r\n- **Commit**: 7385e2722b9fa517314aa5db1fa598a8d417b3c7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20403.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-06-11T22:33:07","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200609.1\r\n- **Date Produced**: 6/9/2020 8:21 PM\r\n- **Commit**: 54d096ee50a9bcf7ac6efd16a07d51af651d20a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20309.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"624353567","IsPullRequest":false,"CreatedAt":"2020-05-25T15:03:53","Actor":"JavierMendozaPaitan","Number":"1765","RawContent":null,"Title":"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type ","State":"open","Body":"Hi,\r\n\r\nI wrapped a net framework lib with net standard but i got the error: Could not load type 'System.ServiceModel.NetNamedPipeBinding' from assembly 'System.ServiceModel, Version=4.0.0.0\r\n\r\nI suppose the system.servicemodel.primitive package doesn't implement this type. How to wrap and old lib which could include its old system.servicemodel lib ?","Url":"https://github.com/dotnet/standard/issues/1765","RelatedDescription":"Open issue \"Problem with system.servicemodel.netnamedpipebinding class, coud not load that type \" (#1765)"},{"Id":"623678460","IsPullRequest":false,"CreatedAt":"2020-05-23T15:04:16","Actor":"ryandanthony","Number":"1764","RawContent":null,"Title":"Any plans to support NativeLibrary in dotnet standard?","State":"open","Body":"Are there any plans, or is it even possible, to support NativeLibrary in dotnet standard?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary?view=netcore-3.1\r\n\r\nI have a dotnet standard 2.1 library that needs to load a c++ library, but we want to support multiple versions of the library (linux and windows).\r\n\r\nExample usage: \r\n```C#\r\nstatic class NativeMethods\r\n{\r\n\tprivate const string LibraryName = \"something\";\r\n\tstatic NativeMethods()\r\n\t{\r\n\t\tNativeLibrary.SetDllImportResolver(typeof(NativeMethods).Assembly, ImportResolver);\r\n\t}\r\n\tprivate static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)\r\n\t{\r\n\t\tIntPtr libHandle = IntPtr.Zero;\r\n\t\tif (libraryName == NativeMethods.LibraryName)\r\n\t\t{\r\n\t\t\tstring library;\r\n\t\t\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.so\";\t\r\n\t\t\t} \r\n\t\t\telse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dylib\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlibrary = \"libsomething_c.dll\";\r\n\t\t\t}\r\n\t\t\tvar libraryLoaded = NativeLibrary.TryLoad(library, assembly, DllImportSearchPath.AssemblyDirectory, out libHandle);\r\n\t\t\tif (!libraryLoaded)\r\n\t\t\t{\r\n\t\t\t\tthrow new Exception($\"Unable to Load Library: {library}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn libHandle;\r\n\t}\r\n```\r\n\r\nAlternatively, is there another way to load a cross platform C++ code in a dotnet standard?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1764","RelatedDescription":"Open issue \"Any plans to support NativeLibrary in dotnet standard?\" (#1764)"},{"Id":"622924911","IsPullRequest":false,"CreatedAt":"2020-05-22T03:32:32","Actor":"gzak","Number":"1763","RawContent":null,"Title":".NET Zero-copy API","State":"open","Body":"Add support for a [zero-copy API](https://en.wikipedia.org/wiki/Zero-copy), akin to java.nio.channels.FileChannel's transferTo() method.\r\n\r\n# General\r\n\r\nIt would be great if .NET had a built-in way of doing zero-copy steam transfers, especially for large blobs (like files). Most operating systems appear to support this, so it's just a matter of exposing some API to do this in .NET. By adding it to .NET standard, both .NET Core and .NET Framework can both benefit from this API.","Url":"https://github.com/dotnet/standard/issues/1763","RelatedDescription":"Open issue \".NET Zero-copy API\" (#1763)"},{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-22T00:09:24","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Closed or merged PR \"Oren → Claire\" (#1761)"},{"Id":"616300562","IsPullRequest":false,"CreatedAt":"2020-05-12T05:03:05","Actor":"anuj272","Number":"1762","RawContent":null,"Title":"compilation error in converting .net framework to .net standard dll","State":"closed","Body":"We converted class library from .net framework to .net standard 2.0\r\nProject A conosle app in .net framework 4.6.2 starts complaining. which uses the above library.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'XmlElementAttribute' exists in both 'System.Xml.XmlSerializer, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConcurrentDictionary<TKey, TValue>' exists in both 'System.Collections.Concurrent, Version=4.0.13.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0433\tThe type 'ConfigurationManager' exists in both 'System.Configuration.ConfigurationManager, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' and 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n\r\nI tried adding nuget of Microsoft.Windows.Compatibility to console app but it doesn't help.\r\nconsole app had reference to both System.Configuration.dll and system.configuration.configurationManager nuget.\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1762","RelatedDescription":"Closed issue \"compilation error in converting .net framework to .net standard dll\" (#1762)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"668184871","IsPullRequest":true,"CreatedAt":"2020-07-29T21:42:58","Actor":"dotnet-maestro-bot","Number":"42961","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @garath\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42961","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42961)"},{"Id":"668136180","IsPullRequest":true,"CreatedAt":"2020-07-29T21:38:38","Actor":"silvioguiso","Number":"42960","RawContent":null,"Title":"Unlocks esrp version","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42960","RelatedDescription":"Closed or merged PR \"Unlocks esrp version\" (#42960)"},{"Id":"667345442","IsPullRequest":true,"CreatedAt":"2020-07-28T20:15:03","Actor":"dotnet-maestro-bot","Number":"42959","RawContent":null,"Title":"Update BuildTools to rc1-05428-07 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42959","RelatedDescription":"Open PR \"Update BuildTools to rc1-05428-07 (release/2.1)\" (#42959)"},{"Id":"667260042","IsPullRequest":true,"CreatedAt":"2020-07-28T17:57:05","Actor":"dotnet-maestro-bot","Number":"42958","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @garath\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42958","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42958)"},{"Id":"651727270","IsPullRequest":true,"CreatedAt":"2020-07-28T17:48:24","Actor":"garath","Number":"42944","RawContent":null,"Title":"Use Azure Artifacts feeds instead of MyGet","State":"closed","Body":"As part of [moving to Azure Artifacts from MyGet](https://github.com/dotnet/arcade/blob/master/Documentation/MigrationPlan/MyGetFeeds.md), point all MyGet feed sources to new Azure Artifacts feed.","Url":"https://github.com/dotnet/corefx/pull/42944","RelatedDescription":"Closed or merged PR \"Use Azure Artifacts feeds instead of MyGet\" (#42944)"},{"Id":"666540534","IsPullRequest":true,"CreatedAt":"2020-07-27T21:21:20","Actor":"dotnet-maestro-bot","Number":"42957","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42957","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42957)"},{"Id":"666533975","IsPullRequest":true,"CreatedAt":"2020-07-27T19:41:25","Actor":"silvioguiso","Number":"42956","RawContent":null,"Title":"Locks esrp version","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42956","RelatedDescription":"Closed or merged PR \"Locks esrp version\" (#42956)"},{"Id":"656955515","IsPullRequest":true,"CreatedAt":"2020-07-16T17:34:53","Actor":"Anipik","Number":"42952","RawContent":null,"Title":"add packaging for system.data.sqlclient","State":"closed","Body":"@ericstj do we need to build pkg\\Microsoft.Windows.Compatibility\\Microsoft.Windows.Compatibility.pkgproj this package as well in order to ship system.data.sqlclient ?\r\nLast time we incremented the serviceModelVersion but didnt build Microsoft.Windows.Compatibility.pkgproj t","Url":"https://github.com/dotnet/corefx/pull/42952","RelatedDescription":"Closed or merged PR \"add packaging for system.data.sqlclient\" (#42952)"},{"Id":"657519998","IsPullRequest":true,"CreatedAt":"2020-07-15T17:28:46","Actor":"dotnet-maestro-bot","Number":"42955","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42955","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42955)"},{"Id":"657496222","IsPullRequest":true,"CreatedAt":"2020-07-15T16:49:46","Actor":"silvioguiso","Number":"42954","RawContent":null,"Title":"Updates pipelines queues","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42954","RelatedDescription":"Closed or merged PR \"Updates pipelines queues\" (#42954)"},{"Id":"656958126","IsPullRequest":true,"CreatedAt":"2020-07-14T23:35:57","Actor":"dotnet-maestro-bot","Number":"42953","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wfurt\n* @Anipik\n* @dotnet-maestro-bot\n* @silvioguiso\n* @dotnet-bot\n* @GrabYourPitchforks\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42953","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42953)"},{"Id":"639055539","IsPullRequest":true,"CreatedAt":"2020-07-14T23:14:42","Actor":"wfurt","Number":"42934","RawContent":null,"Title":"[release/2.1] add new Ubuntu & Alpine versions to RID graph","State":"closed","Body":"This is port of #42928 for https://github.com/dotnet/runtime/issues/37000\r\nAdds new RID for Ubuntu & Alpine. \r\nMarking as servicing-approved per discussion in https://github.com/dotnet/corefx/pull/42928\r\n\r\nfixes  https://github.com/dotnet/runtime/issues/37000","Url":"https://github.com/dotnet/corefx/pull/42934","RelatedDescription":"Closed or merged PR \"[release/2.1] add new Ubuntu & Alpine versions to RID graph\" (#42934)"},{"Id":"656916463","IsPullRequest":true,"CreatedAt":"2020-07-14T23:12:33","Actor":"dotnet-maestro-bot","Number":"42951","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-29017-01, servicing-29018-12, servicing-29019-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42951","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-29017-01, servicing-29018-12, servicing-29019-01, respectively (release/2.1)\" (#42951)"},{"Id":"656902486","IsPullRequest":true,"CreatedAt":"2020-07-14T23:12:10","Actor":"Anipik","Number":"42949","RawContent":null,"Title":"update branding for 2.1.21","State":"closed","Body":"no packages were published in this iteration","Url":"https://github.com/dotnet/corefx/pull/42949","RelatedDescription":"Closed or merged PR \"update branding for 2.1.21\" (#42949)"},{"Id":"651714174","IsPullRequest":true,"CreatedAt":"2020-07-14T23:11:18","Actor":"vcsjones","Number":"42942","RawContent":null,"Title":"[release/3.1] Ignore 0-byte responses from AIA fetch.","State":"closed","Body":"Ports dotnet/runtime#38787 to release/3.1 to address dotnet/runtime#38704.\r\n\r\n## Summary\r\n\r\nWhen performing AIA fetching on Linux-based operating systems, we attempt to download the missing issuer certificate to aid in building a complete X509 chain. If the server (incorrectly) responds with a successful status code, but an empty response, we attempt to re-build the chain with an X509 certificate that is in an invalid state. This invalid state results in a null pointer being dereferenced in native code, which causes a crash of the runtime.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#38704. On Linux-based environments, customers that explicitly or implicitly use `X509Chain` to build a certificate that cause an AIA fetch and the server improperly responds successfully but with empty content will cause a null pointer dereference in native code, which will result in an unrecoverable hard crash of the runtime.\r\n\r\n## Regression?\r\n\r\nYes. Prior to .NET Core 3.0, a managed exception was thrown instead of an access violation.\r\n\r\n## Testing\r\n\r\nThe original fix against dotnet/runtime contains a unit test to prevent further regressions. The test is not ported here due to missing testing faculties for AIA fetching.\r\n\r\n## Risk\r\n\r\n**Low**. The fix is to treat empty responses or any other response that results in a certificate with an invalid handle as an invalid response.","Url":"https://github.com/dotnet/corefx/pull/42942","RelatedDescription":"Closed or merged PR \"[release/3.1] Ignore 0-byte responses from AIA fetch.\" (#42942)"},{"Id":"643406701","IsPullRequest":true,"CreatedAt":"2020-07-14T23:09:15","Actor":"cheenamalhotra","Number":"42937","RawContent":null,"Title":"[Release 3.1] Avoid enlistment of pooled connection in aborted transaction","State":"closed","Body":"Ports https://github.com/dotnet/SqlClient/pull/551 and https://github.com/dotnet/SqlClient/pull/543 to System.Data.SqlClient.\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/237 that occurs due to driver enlisting pooled connection in stale transaction which is due abort from SysTx.Transactions on the server. This incorrect enlistment causes server to perform forth-coming operations in implicit mode, causing unwanted commits.\r\n\r\nThe fix ensures if a transaction gets aborted externally, the corresponding connection is not sent back to the pool.\r\n\r\n### Customer Impact\r\n**High** This bug causes the driver to perform commits outside transaction even though client is presumably working inside a transaction. It qualifies for a security issue.\r\n\r\n### Regression?\r\nNo, this issue is reproducible with all SqlClient drivers.\r\n\r\n### Testing\r\nThis issue has not yet been reproduced in .NET Core applications but the driver behavior being same to that of .NET Framework needs to be fixed. The issue happens intermittently and is more likely to happen on SQL Server machines working in heavy load. The original issue was reproduced in WPF Client application, with failures seen intermittently. But client applications on any platform are susceptible to this issue.\r\n\r\n### Risk\r\n**Low**: The fix has been verified by customers with failing use-cases, and by our teams by validating driver behavior on how it works with aborted transactions.\r\n\r\nThe scope of changes is low, and the fix has also been released in Microsoft.Data.SqlClient v1.1.1 and v2.0.0.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42937","RelatedDescription":"Closed or merged PR \"[Release 3.1] Avoid enlistment of pooled connection in aborted transaction\" (#42937)"},{"Id":"644136441","IsPullRequest":true,"CreatedAt":"2020-07-14T23:08:54","Actor":"cheenamalhotra","Number":"42938","RawContent":null,"Title":"[Release/3.1] Fix infinite loop when end of stream is reached","State":"closed","Body":"Ports https://github.com/dotnet/SqlClient/pull/577 to fix issue https://github.com/dotnet/SqlClient/issues/165 in System.Data.SqlClient\r\n\r\n### Summary\r\nThe issue has been occurring for many customer applications where Client and Server cannot find a common security protocol to continue SSL handshake as the server does not send any further information while the client continues to loop. This started happening recently when client OS and docker containers disabled TLS v1.0 and v1.1, while target servers were not upgraded to TLS v1.2. \r\n\r\n### Customer Impact\r\n**Medium:** The issue impacts Linux and Mac applications where servers are not ready to transition to TLS v1.2.\r\n\r\n### Regression?\r\nNo, this issue is reproducible with all previous versions of .NET Core SqlClient drivers (impacts Managed SNI use-cases).\r\n\r\n### Testing\r\nIn order to test this issue, a special setup is required on server side, to disable TLS v1.2 while the client only supports with TLSv1.2+. Local testing has been done to confirm the fix is applicable and the driver can now come out of infinite loop and throw exception.\r\n\r\n### Risk\r\n**Low:** The fix is not a major functional change, and it applies only to Linux/Mac customers if their servers are not updated to support TLS 1.2. This has also been released in Microsoft.Data.SqlClient v1.1.3 and v2.0.0.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42938","RelatedDescription":"Closed or merged PR \"[Release/3.1] Fix infinite loop when end of stream is reached\" (#42938)"},{"Id":"647535840","IsPullRequest":true,"CreatedAt":"2020-07-14T23:08:14","Actor":"danmosemsft","Number":"42941","RawContent":null,"Title":"[release/3.1] Port SafeProcessHandle.Unix: fix missing DangerousRelease","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/37412\r\n\r\n###  Description\r\n\r\nPorts #37412. Original issue https://github.com/dotnet/runtime/issues/36661\r\nFixes regression introduced in [this PR](https://github.com/dotnet/corefx/pull/36199) between 2.2 and 3.0 \r\n\r\n###  Description from original PR \r\n\r\nBecause the SafeProcessHandle was not owned, ReleaseHandle was not called, causing the wrapped SafeWaitHandle to never release its resources.\r\n\r\n###  Customer Impact\r\n\r\nFrom customer:\r\n> This is very impactful for our embedded clients. If left out would mean skipping .Net core 3. The clients cycle a process exactly once per second which amounts to ~ 10-20 mb leak every 24 hrs. I should imagine any long running processes like asp.net core servers that spawn any child processes are also affected.\r\n\r\nWe are asked to port this to enable the customer to migrate to 3.1.\r\n\r\n###  Risk\r\n\r\nLow. \r\n* We already shipped this in Preview 6 and the customer (@myrup) validated the change there\r\n* The change is limited to Unix\r\n* The change is very localized and relatively straightforward to understand. \r\n","Url":"https://github.com/dotnet/corefx/pull/42941","RelatedDescription":"Closed or merged PR \"[release/3.1] Port SafeProcessHandle.Unix: fix missing DangerousRelease\" (#42941)"},{"Id":"656700272","IsPullRequest":true,"CreatedAt":"2020-07-14T23:07:42","Actor":"dotnet-maestro-bot","Number":"42947","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @Anipik\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42947","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42947)"},{"Id":"656802977","IsPullRequest":true,"CreatedAt":"2020-07-14T22:56:01","Actor":"Anipik","Number":"42948","RawContent":null,"Title":"Update Branding to 3.1.7","State":"closed","Body":"Packages.builds file is not cleared bcoz we didnt ship those packages. they will get shipped in this change\r\n\r\ncc @aik-jahoda ","Url":"https://github.com/dotnet/corefx/pull/42948","RelatedDescription":"Closed or merged PR \"Update Branding to 3.1.7\" (#42948)"},{"Id":"656910214","IsPullRequest":true,"CreatedAt":"2020-07-14T21:28:40","Actor":"stephentoub","Number":"42950","RawContent":null,"Title":"[release/3.1] Fix ManagedWebSocket ordering of releasing send buffer and semaphore","State":"open","Body":"Port https://github.com/dotnet/runtime/pull/39199 to release/3.1.\r\n\r\n## Summary\r\n\r\nManagedWebSocket is the WebSocket implementation returned from WebSocket.CreateFromStream and used by both ClientWebSocket and ASP.NET Core.  Sends on a WebSocket can't run concurrently, and there's a lock that protects access to shared resources, including a pooled buffer.  The code that ends a send operation returns the buffer to the pool and releases the lock, but it does so in the opposite (wrong) order.  As such, a second concurrent send could end up trying to use the buffer concurrently with the first send operation releasing it.\r\n\r\n## Customer Impact\r\n\r\nInitially reported as a sporadic ArgumentException that escapes from within the WebSocket implementation (from valid usage).  But in theory it could result in data corruption throughout the process, with a buffer being returned to the pool while it's still in use.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nUnit tests.\r\n\r\n## Risk\r\n\r\nLow.  The fix just swaps two instructions (in three places) to return the buffer before releasing the lock.\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42950","RelatedDescription":"Open PR \"[release/3.1] Fix ManagedWebSocket ordering of releasing send buffer and semaphore\" (#42950)"},{"Id":"656178037","IsPullRequest":true,"CreatedAt":"2020-07-14T15:21:38","Actor":"silvioguiso","Number":"42946","RawContent":null,"Title":"Updated build pools","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42946","RelatedDescription":"Closed or merged PR \"Updated build pools\" (#42946)"},{"Id":"652538867","IsPullRequest":true,"CreatedAt":"2020-07-07T21:54:22","Actor":"Anipik","Number":"42945","RawContent":null,"Title":"note that the crypto article moved","State":"closed","Body":"This is a temproray branch. After merging this change i will update the master and master-archive tags to point to the new commit","Url":"https://github.com/dotnet/corefx/pull/42945","RelatedDescription":"Closed or merged PR \"note that the crypto article moved\" (#42945)"},{"Id":"651722065","IsPullRequest":true,"CreatedAt":"2020-07-06T18:43:20","Actor":"vcsjones","Number":"42943","RawContent":null,"Title":"[release/2.1] Ignore 0-byte responses from AIA fetch.","State":"closed","Body":"Ports dotnet/runtime#38787 to release/2.1 to address dotnet/runtime#38704.\r\n\r\n## Summary\r\n\r\nWhen performing AIA (Authority Information Access) fetching on Linux-based operating systems, we attempt to download the missing issuer certificate to aid in building a complete X509 chain. If the server (incorrectly) responds with a successful status code, but an empty response, we attempt to re-build the chain with an X509 certificate that is in an invalid state. This invalid state results in an exception during chain building, which is not expected.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#38704. On Linux-based environments, customers that explicitly or implicitly use `X509Chain` to build a certificate that cause an AIA fetch and the server improperly responds successfully but with empty content will cause an exception in chain building, which is not expected.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nThe original fix against dotnet/runtime contains a unit test to prevent further regressions. The test is not ported here due to missing testing faculties for AIA fetching.\r\n\r\n## Risk\r\n\r\n**Low**. The fix is to treat empty responses or any other response that results in a certificate with an invalid handle as an invalid response.","Url":"https://github.com/dotnet/corefx/pull/42943","RelatedDescription":"Closed or merged PR \"[release/2.1] Ignore 0-byte responses from AIA fetch.\" (#42943)"},{"Id":"645642851","IsPullRequest":true,"CreatedAt":"2020-06-25T18:03:30","Actor":"Anipik","Number":"42940","RawContent":null,"Title":"Build the platforms package for shipping","State":"closed","Body":"This https://github.com/dotnet/corefx/pull/42928 change was mistakenly merged preemptively before the branch  was open.\r\nIt lacked the packaging stuff, so just adding that","Url":"https://github.com/dotnet/corefx/pull/42940","RelatedDescription":"Closed or merged PR \"Build the platforms package for shipping\" (#42940)"},{"Id":"644373851","IsPullRequest":true,"CreatedAt":"2020-06-25T02:37:55","Actor":"carlossanlop","Number":"42939","RawContent":null,"Title":"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call","State":"closed","Body":"Fixes https://github.com/dotnet/runtime/issues/37538\r\n\r\n### Summary\r\n\r\n[This 3.1 code fix](https://github.com/dotnet/corefx/pull/42501/files), which addressed a .NET Standard issue in System.IO.FileSystem.AccessControl introduced a recursive call in Path.cs that affects the `Microsoft.IO` version of `Path`.\r\n\r\n### Customer Impact\r\n\r\nCurrently impacts Visual Studio who is consuming Microsoft.IO (see issue).\r\nSystem.IO is not affected by this recursive call because the `Path` code consumed by that namespace lives in the mirrored file in coreclr.\r\n\r\n### Regression?\r\n\r\nYes.\r\n\r\n### Testing\r\n\r\nI built corefx in both netcoreapp3.1 and netfx.\r\nI ran the tests in System.Runtime.Extensions, which is where the Path unit tests live, for both frameworks.\r\nThere are no Microsoft.IO unit tests, so I copied the dll into a NetFX console app, made a call to `TrimEndingDirectorySeparator(ReadOnlySpan<char> path)` and confirmed that the issue is resolved for Microsft.IO.\r\n\r\n### Risk\r\n\r\nLow: Accepting this change will get rid of the recursive call affecting Microsoft.IO.\r\n\r\ncc @danmosemsft @ericstj","Url":"https://github.com/dotnet/corefx/pull/42939","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Path.EndsInDirectorySeparator recursive call\" (#42939)"},{"Id":"641565767","IsPullRequest":true,"CreatedAt":"2020-06-22T15:55:11","Actor":"dotnet-maestro-bot","Number":"42936","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @silvioguiso\n* @dotnet-maestro-bot\n* @Anipik\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42936","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42936)"},{"Id":"641542597","IsPullRequest":true,"CreatedAt":"2020-06-18T21:35:27","Actor":"silvioguiso","Number":"42935","RawContent":null,"Title":"Updates pipelines branches","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42935","RelatedDescription":"Closed or merged PR \"Updates pipelines branches\" (#42935)"},{"Id":"637209922","IsPullRequest":true,"CreatedAt":"2020-06-15T17:23:46","Actor":"dotnet-maestro-bot","Number":"42933","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42933","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28928-01, servicing-28928-04, servicing-28928-01, respectively (release/2.1)\" (#42933)"},{"Id":"636443187","IsPullRequest":true,"CreatedAt":"2020-06-10T19:33:29","Actor":"dotnet-maestro-bot","Number":"42932","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/uwp6.2. I'm a robot and am configured to help you automatically keep release/uwp6.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @dotnet-maestro-bot\n* @bartonjs\n* @omajid\n* @joperezr\n* @danmosemsft\n* @mmitche\n* @wtgodbe\n* @ViktorHofer\n* @davidsh\n* @stephentoub\n* @dotnet-bot\n* @MattGal\n* @safern\n* @tarekgh\n* @ahsonkhan\n* @wfurt\n* @dseefeld\n* @DrewScoggins\n* @joshfree\n* @krwq\n* @weshaggard\n* @yujayee\n* @jiayi11\n* @jamshedd\n* @leecow\n* @vivmishra\n* @pakrym\n* @riarenas\n* @rmkerr\n* @maryamariyan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/uwp6.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/uwp6.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/uwp6.2 release/uwp6.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/uwp6.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/uwp6.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42932","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/uwp6.2'\" (#42932)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"674721835","IsPullRequest":true,"CreatedAt":"2020-08-07T05:29:24","Actor":"dotnet-bot","Number":"46615","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/46615","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#46615)"},{"Id":"674669474","IsPullRequest":true,"CreatedAt":"2020-08-07T01:44:43","Actor":"dotnet-bot","Number":"46613","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"This is an automatically generated pull request from master into master-vs-deps.\r\n\r\n``` bash\r\ngit fetch --all\r\ngit checkout merges/master-to-master-vs-deps\r\ngit reset --hard upstream/master-vs-deps\r\ngit merge upstream/master\r\n# Fix merge conflicts\r\ngit commit\r\ngit push upstream merges/master-to-master-vs-deps --force\r\n```\r\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.\r\n\r\n🦔 ","Url":"https://github.com/dotnet/roslyn/pull/46613","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#46613)"},{"Id":"674688068","IsPullRequest":false,"CreatedAt":"2020-08-07T01:09:31","Actor":"jasonmalinowski","Number":"46614","RawContent":null,"Title":"Inline parameter hint is shown for array indexing which isn't really necessary","State":"open","Body":"In this case we're indexing into an ImmutableArray. I'm not sure the name of the index is terrible useful here:\r\n\r\n![image](https://user-images.githubusercontent.com/201340/89597784-f1bc9b00-d80f-11ea-8167-e99b5f209dc2.png)\r\n\r\nMaybe we should just exclude them if it's an indexer with a single parameter?","Url":"https://github.com/dotnet/roslyn/issues/46614","RelatedDescription":"Open issue \"Inline parameter hint is shown for array indexing which isn't really necessary\" (#46614)"},{"Id":"674669151","IsPullRequest":false,"CreatedAt":"2020-08-07T00:02:32","Actor":"RikkiGibson","Number":"46612","RawContent":null,"Title":"RunTests should write paths to failing log files as soon as failures occur","State":"open","Body":"**Version Used**: 762cd26\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Introduce a build failure by modifying Roslyn source\r\n2. `.\\Build.cmd -test`\r\n3. Observe outputs\r\n\r\n**Expected Behavior**:\r\n\r\nWhen a test assembly has failures, the path to the test run log is written to stderr.\r\n\r\n\r\n\r\n```\r\n  19 running,  0 queued, 63 completed\r\n  18 running,  0 queued, 64 completed\r\n  17 running,  0 queued, 65 completed\r\n  16 running,  0 queued, 66 completed,  1 failures\r\n  xUnit output log: C:\\Users\\rikki\\src\\roslyn\\artifacts\\log\\Debug\\xUnitFailure-Microsoft.CodeAnalysis.CSharp.Emit.UnitTests.dll.4.log\r\n  15 running,  0 queued, 67 completed,  1 failures\r\n  # and so on...\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nOutputs tell you numbers running/queued/completed/failures, but you don't find out what has failed so far until every last test has finished running.\r\n\r\n```\r\n  19 running,  0 queued, 63 completed\r\n  18 running,  0 queued, 64 completed\r\n  17 running,  0 queued, 65 completed\r\n  16 running,  0 queued, 66 completed,  1 failures\r\n  15 running,  0 queued, 67 completed,  1 failures\r\n  # ... some time later\r\n  xUnit output log: C:\\Users\\rikki\\src\\roslyn\\artifacts\\log\\Debug\\xUnitFailure-Microsoft.CodeAnalysis.CSharp.Emit.UnitTests.dll.4.log\r\n    Microsoft.CodeAnalysis.CSharp.UnitTests.Emit.CompilationEmitTests.Bug769741 [FAIL]\r\n```\r\n\r\n@jaredpar would this be a reasonable change to make?","Url":"https://github.com/dotnet/roslyn/issues/46612","RelatedDescription":"Open issue \"RunTests should write paths to failing log files as soon as failures occur\" (#46612)"},{"Id":"674668660","IsPullRequest":false,"CreatedAt":"2020-08-07T00:01:02","Actor":"vsccarl","Number":"46611","RawContent":null,"Title":"Inline Parameter Name Hints excludes interpolated strings","State":"open","Body":"**Version Used**: \r\n30406.18.master\r\n**Steps to Reproduce**:\r\n\r\n1. Clone [Ocelot](https://github.com/ThreeMammals/Ocelot.git)\r\n2. Turn on Tools > Options > Text Editor > C#/Basic > Advanced > Editor Help > Inline Parameter Name Hints\r\n3. Open Ocelot.AcceptanceTests.ButterflyTracingTests.cs Line 147\r\n\r\n**Expected Behavior**:\r\nbaseURL name hint is shown.\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/12900364/89594081-c6cd4980-d805-11ea-847a-c6a979d34eb9.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/46611","RelatedDescription":"Open issue \"Inline Parameter Name Hints excludes interpolated strings\" (#46611)"},{"Id":"674667128","IsPullRequest":false,"CreatedAt":"2020-08-06T23:55:44","Actor":"vsccarl","Number":"46610","RawContent":null,"Title":"Code jittering while scrolling and modifying code using Inline Parameter Name Hints","State":"open","Body":"**Version**\r\n30406.18.master\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Enable Tools > Options > Text Editor > C#/Basic > Advanced > Editor Help > Inline Parameter Name Hints\r\n2. While a few of these hints are shown scroll or type/paste/add code\r\n\r\n**Expected Behavior**:\r\nNo jittering of the text\r\n\r\n**Actual Behavior**:\r\n![InlineParameterHints](https://user-images.githubusercontent.com/12900364/89593980-853c9e80-d805-11ea-9c18-71a2b2c3b21d.gif)\r\n","Url":"https://github.com/dotnet/roslyn/issues/46610","RelatedDescription":"Open issue \"Code jittering while scrolling and modifying code using Inline Parameter Name Hints\" (#46610)"},{"Id":"674663442","IsPullRequest":false,"CreatedAt":"2020-08-06T23:42:47","Actor":"RikkiGibson","Number":"46609","RawContent":null,"Title":"Static fields in interfaces don't get nullable initialization checks","State":"open","Body":"**Version Used**: 4aaaed7\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n#nullable enable\r\npublic interface I1 {\r\n    public static string Prop { get; set; } // 1\r\n}\r\n```\r\n\r\n**Expected Behavior**: Warning that `Prop` was not initialized\r\n\r\n**Actual Behavior**: No warning\r\n","Url":"https://github.com/dotnet/roslyn/issues/46609","RelatedDescription":"Open issue \"Static fields in interfaces don't get nullable initialization checks\" (#46609)"},{"Id":"674502096","IsPullRequest":true,"CreatedAt":"2020-08-06T23:00:46","Actor":"dotnet-bot","Number":"46596","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"This is an automatically generated pull request from master into master-vs-deps.\r\n\r\n``` bash\r\ngit fetch --all\r\ngit checkout merges/master-to-master-vs-deps\r\ngit reset --hard upstream/master-vs-deps\r\ngit merge upstream/master\r\n# Fix merge conflicts\r\ngit commit\r\ngit push upstream merges/master-to-master-vs-deps --force\r\n```\r\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.\r\n\r\n:hedgehog:","Url":"https://github.com/dotnet/roslyn/pull/46596","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#46596)"},{"Id":"674614730","IsPullRequest":false,"CreatedAt":"2020-08-06T22:51:20","Actor":"vsfeedback","Number":"46601","RawContent":null,"Title":"C# Intellisense suggest symbols for #define and related directives","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1132014/c-intellisense-suggest-symbols-for-define-and-rela.html)._\n\n---\n`#define` (and `#undef`) in C# can only take after them a single token which must elsewhere in the file be used as an argument to `#if`/`#elif` somewhere in the same file to be meaningful, so those tokens could be suggested when writing those directives. Similarly `#if`/`#elif` could have the tokens referenced by `#define`/`#undef` (or the project file) as suggestions.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/31/2020, 02:41 AM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46601","RelatedDescription":"Closed issue \"C# Intellisense suggest symbols for #define and related directives\" (#46601)"},{"Id":"674618313","IsPullRequest":false,"CreatedAt":"2020-08-06T22:31:43","Actor":"vsfeedback","Number":"46606","RawContent":null,"Title":"Need a warning when implicit ToString occurs (without implementation)","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1043678/need-a-warning-when-implicit-tostring-occurs-witho.html)._\n\n---\nToString casting can be misleading, everybody in project may understand it differently for many different classes.\n\nI should have an option not to use implicit ToString casting in design time. I would like to see warning \"Need ToString implementation\".\n\nThere are many not intuitive castings like       $\"{object}\"     or     \"s\" + object      that give unexpected results then.\n\nVisual Studio Extension called SneakyToString does it... there are some bugs there and I would prefer to have it built in.\n\np.s.\nI like the concept for ToString only for internal and debugging purposes...\n\n---\n### Original Comments\n\n#### Feedback Bot on 5/22/2020, 01:11 AM: \n\nThank you for taking the time to provide your suggestion.  We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46606","RelatedDescription":"Closed issue \"Need a warning when implicit ToString occurs (without implementation)\" (#46606)"},{"Id":"674620905","IsPullRequest":true,"CreatedAt":"2020-08-06T22:22:11","Actor":"333fred","Number":"46607","RawContent":null,"Title":"Update extension getenumerator status.","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/46607","RelatedDescription":"Closed or merged PR \"Update extension getenumerator status.\" (#46607)"},{"Id":"674623300","IsPullRequest":false,"CreatedAt":"2020-08-06T21:55:10","Actor":"RikkiGibson","Number":"46608","RawContent":null,"Title":"'Build.cmd -testCoreClr' is broken","State":"open","Body":"**Version Used**: 79400d2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Pull down latest master (or the linked commit)\r\n2. Run 'git clean -xdf' to be sure the repo isn't confused about e.g. which dotnet sdk to use and isn't reusing artifacts built from other branches\r\n3. `.\\Build.cmd -testCoreClr`\r\n\r\n**Expected Behavior**: Tests pass.\r\n\r\n**Actual Behavior**: Several test projects have failures:\r\n\r\n```\r\nXUnit : error : Tests failed: C:\\Users\\rikki\\src\\roslyn2\\artifacts\\TestResults\\Debug\\Microsoft.CodeAnalysis.CSharp.Comm\r\nandLine.UnitTests_net5.0_x64.html [net5.0|x64] [C:\\Users\\rikki\\src\\roslyn2\\src\\Compilers\\CSharp\\Test\\CommandLine\\Micros\r\noft.CodeAnalysis.CSharp.CommandLine.UnitTests.csproj]\r\nXUnit : error : Tests failed: C:\\Users\\rikki\\src\\roslyn2\\artifacts\\TestResults\\Debug\\Microsoft.CodeAnalysis.VisualBasic\r\n.Symbol.UnitTests_net5.0_x64.html [net5.0|x64] [C:\\Users\\rikki\\src\\roslyn2\\src\\Compilers\\VisualBasic\\Test\\Symbol\\Micros\r\noft.CodeAnalysis.VisualBasic.Symbol.UnitTests.vbproj]\r\nXUnit : error : Tests failed: C:\\Users\\rikki\\src\\roslyn2\\artifacts\\TestResults\\Debug\\Microsoft.CodeAnalysis.VisualBasic\r\n.Semantic.UnitTests_net5.0_x64.html [net5.0|x64] [C:\\Users\\rikki\\src\\roslyn2\\src\\Compilers\\VisualBasic\\Test\\Semantic\\Mi\r\ncrosoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.vbproj]\r\nXUnit : error : Tests failed: C:\\Users\\rikki\\src\\roslyn2\\artifacts\\TestResults\\Debug\\Microsoft.CodeAnalysis.VisualBasic\r\n.Emit.UnitTests_net5.0_x64.html [net5.0|x64] [C:\\Users\\rikki\\src\\roslyn2\\src\\Compilers\\VisualBasic\\Test\\Emit\\Microsoft.\r\nCodeAnalysis.VisualBasic.Emit.UnitTests.vbproj]\r\nXUnit : error : Tests failed: C:\\Users\\rikki\\src\\roslyn2\\artifacts\\TestResults\\Debug\\Microsoft.CodeAnalysis.CSharp.Scri\r\npting.UnitTests_netcoreapp3.1_x64.html [netcoreapp3.1|x64] [C:\\Users\\rikki\\src\\roslyn2\\src\\Scripting\\CSharpTest\\Microso\r\nft.CodeAnalysis.CSharp.Scripting.UnitTests.csproj]\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/46608","RelatedDescription":"Open issue \"'Build.cmd -testCoreClr' is broken\" (#46608)"},{"Id":"674616590","IsPullRequest":false,"CreatedAt":"2020-08-06T21:38:54","Actor":"vsfeedback","Number":"46605","RawContent":null,"Title":"formatting option to ignore spaces in assignment statements and auto property declaration statements","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1125623/formatting-option-to-ignore-spaces-in-assignment-s.html)._\n\n---\n<p>There is already a formatting option</p><p><strong>csharp_space_around_declaration_statements = ignore</strong></p><p>This works in declaration like:</p><pre>    private int       _i1 ;\n    private double    _d1 ;\n</pre><p>but does not work in the declaration of auto properties, like </p><pre>    public int    I1 { get; set; }\n    public double D1 { get; set; }\n</pre><p>or</p><pre>    public string Caption              { get =&gt; _Caption;              set =&gt; SetProperty ( ref _Caption,              value ); }\n    public bool   SimpleWindowMode     { get =&gt; _SimpleWindowMode;     set =&gt; SetProperty ( ref _SimpleWindowMode,     value ); }\n    public bool   SendPLCDataOnRequest { get =&gt; _SendPLCDataOnRequest; set =&gt; SetProperty ( ref _SendPLCDataOnRequest, value ); }\n    public bool   AutomaticMode        { get =&gt; _AutomaticMode;        set =&gt; SetProperty ( ref _AutomaticMode,        value ); }\n    public bool   DirectMode           { get =&gt; _DirectMode;           set =&gt; SetProperty ( ref _DirectMode,           value ); }\n    public short  ExitCode             { get =&gt; _ExitCode;             set =&gt; SetProperty ( ref _ExitCode,             value ); }\n    public bool   SimulationMode       { get =&gt; _SimulationMode;       set =&gt; SetProperty ( ref _SimulationMode,       value ); }\n    public string PathFromCommandLine  { get =&gt; _PathFromCommandLine;  set =&gt; SetProperty ( ref _PathFromCommandLine,  value ); }\n\n</pre><p>In my opinion, these are &quot;declaration&quot; statements, so the option</p><p><strong>csharp_space_around_declaration_statements = ignore</strong></p><p>should work at least in the simple example.</p> <p>If that is not possible, then I would be happy with a new option, something like</p><p><strong>csharp_space_around_auto_property_statements = ignore<br></strong></p><p>Going further, I personally like to align assignment statements, like:</p><pre>      fred   = 1.0 ;\n      george = 1.0 ; <br></pre><p>I propose adding a new option</p><p><strong>csharp_space_around_assignment_statements = ignore</strong></p><p>I personally use the &quot;Code Alignment&quot; extension in Visual Studio (along with 280000 others) and it is frustrating that visual studio often reverts the formatting which this extension performs.</p>\n</pre>\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/26/2020, 06:50 PM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46605","RelatedDescription":"Open issue \"formatting option to ignore spaces in assignment statements and auto property declaration statements\" (#46605)"},{"Id":"674616474","IsPullRequest":false,"CreatedAt":"2020-08-06T21:38:39","Actor":"vsfeedback","Number":"46604","RawContent":null,"Title":"Tooltips for #pragma warning disable","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1131226/tooltips-for-pragma-warning-disable.html)._\n\n---\nIf I mouse over a line that says something like #pragma warning disable IDE1234 or CS1234 it would be nice if I got a tooltip that told me what that warning was.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/31/2020, 02:40 AM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46604","RelatedDescription":"Open issue \"Tooltips for #pragma warning disable\" (#46604)"},{"Id":"674616154","IsPullRequest":false,"CreatedAt":"2020-08-06T21:37:53","Actor":"vsfeedback","Number":"46603","RawContent":null,"Title":"new line option before/after the arrow when using an expression body for a method/property","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1132571/new-line-option-beforeafter-the-arrow-when-using-a.html)._\n\n---\nI want the option to add a new line before(or after) the arrow when using an expression body for a method (or property).\n\nCurrently, the following code using long type names will not break on a new line.\nOne line is too long.\n```\npublic static System.Collections.Generic.IList<Guid> CreateList() => new  System.Collections.Generic.List<Guid>();\n```\n\nIf possible, I would like to see a line break before(or after) an arrow.\n(The first line is the same as in the block body!)\n```\npublic static System.Collections.Generic.IList<Guid> CreateList()\n    => new System.Collections.Generic.List<Guid>();\n```\n\nMy editorconfig is below.\n```\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n```\n\nThanks.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/31/2020, 02:40 AM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46603","RelatedDescription":"Open issue \"new line option before/after the arrow when using an expression body for a method/property\" (#46603)"},{"Id":"674616041","IsPullRequest":false,"CreatedAt":"2020-08-06T21:37:38","Actor":"vsfeedback","Number":"46602","RawContent":null,"Title":"Line break option when using multiple conditional expressions","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1133304/line-break-option-when-using-multiple-conditional.html)._\n\n---\nThe IDE0046 suggestion makes a series of multiple conditional expressions awkward.\n\n----\n\nOriginal Code:\n```\n        static int Foo(bool f1, bool f2, bool f3)\n        {\n            if (f1)\n            {\n                return 123;\n            }\n            if (f2)\n            {\n                return 456;\n            }\n            if (f3)\n            {\n                return 789;\n            }\n            return 0;\n        }\n```\n\n----\n\nApplied IDE0046  suggestion:\n```\n        static int Foo(bool f1, bool f2, bool f3)\n        {\n            return f1 ? 123 : f2 ? 456 : f3 ? 789 : 0;\n        }\n```\n\n----\n\nI want the code formatted to be cleanly formatted, with colon followed by a new line of code.\n\n```\n        static int Foo2(bool f1, bool f2, bool f3)\n        {\n            return f1 ? 123 :\n                f2 ? 456 :\n                f3 ? 789 :\n                0;\n        }\n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 8/3/2020, 03:18 AM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team.","Url":"https://github.com/dotnet/roslyn/issues/46602","RelatedDescription":"Open issue \"Line break option when using multiple conditional expressions\" (#46602)"},{"Id":"674593303","IsPullRequest":true,"CreatedAt":"2020-08-06T20:50:24","Actor":"sharwell","Number":"46599","RawContent":null,"Title":"Finish 'Generate Equals' conversion to new test library","State":"open","Body":"Closes #46319","Url":"https://github.com/dotnet/roslyn/pull/46599","RelatedDescription":"Open PR \"Finish 'Generate Equals' conversion to new test library\" (#46599)"},{"Id":"674564108","IsPullRequest":false,"CreatedAt":"2020-08-06T19:56:11","Actor":"jrmoreno1","Number":"46598","RawContent":null,"Title":"Fix All in project not making changes","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2019\r\nVersion 16.7.0\r\nVisualStudio.16.Release/16.7.0+30330.147\r\nMicrosoft .NET Framework\r\nVersion 4.8.03761\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools   3.7.0-6.20375.2+34202cc2f3e869fd70a26d8237f4552cf9e192cf\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30701.1\r\n\r\nVisual Basic Tools   3.7.0-6.20375.2+34202cc2f3e869fd70a26d8237f4552cf9e192cf\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n**Steps to Reproduce**:\r\n\r\n1.  Open a file in a project that is under source control (TFSVC on premis), that has a code fix that will apply to multiple files.  I originally encountered this problem with a code fix I was working on, but confirmed it with IDE0001 (Name can be simplified) and System.EventArgs as a parameter to event handlers.\r\n2. Click on the light bulb and choose project\r\n3. Preview comes up, showing  the correct changes\r\n4. Hit the apply button (should apply to project)\r\n\r\n**Expected Behavior**:\r\nBunch of files get checked out and System.EventArgs is rewritten to just EventArgs in all of them.\r\n\r\n**Actual Behavior**:\r\nFiles get checked out, but there is no change.\r\n\r\n***********\r\nI originally found this in the Experimental hive (Roslyn) while working on my own code fix provider, and I thought I had done something wrong or corrupted the hive.  But I have confirmed that it happens with other providers as well as in the main app.  At the moment this is 100% repeatable.  If I undo changes and start over with step 1 (without exiting Visual Studio), I get the same result every time.  \r\n\r\nThis is happening for both VB and C# projects.","Url":"https://github.com/dotnet/roslyn/issues/46598","RelatedDescription":"Open issue \"Fix All in project not making changes\" (#46598)"},{"Id":"674502968","IsPullRequest":true,"CreatedAt":"2020-08-06T18:04:46","Actor":"mavasani","Number":"46597","RawContent":null,"Title":"Harden DiagnosticResultSerializer diagnostic reader part","State":"open","Body":"**Strongly recommended to review with whitespace diffs disabled: https://github.com/dotnet/roslyn/pull/46597/files?diff=unified&w=1**\r\n\r\nCloses #46544\r\n\r\nCurrent implementation of read logic in DiagnosticResultSerializer was partially graceful - handled version mismatches + exceptions from deserializing individual document diagnostics. However, it attempted to continue deserializing data after any such mismatch/exception, and none of this code was guarded against further exceptions. This PR does the following changes:\r\n\r\n1. Completely harden the deserializing logic against any exceptions or version mismatches. We now log NFW for exceptions and prevent VS crash.\r\n2. Do not attempt to continue deserializing data when there is a failure to read any specific part of the serialized data. We immediately bail out from deserializing and return empty diagnostic result. This prevents cascaded exceptions/NFWs.","Url":"https://github.com/dotnet/roslyn/pull/46597","RelatedDescription":"Open PR \"Harden DiagnosticResultSerializer diagnostic reader part\" (#46597)"},{"Id":"674501735","IsPullRequest":false,"CreatedAt":"2020-08-06T18:02:29","Actor":"vsfeedback","Number":"46595","RawContent":null,"Title":"Change signature refactoring does not respect indented braces","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1138807/change-signature-refactoring-does-not-respect-inde.html)._\n\n---\n<p>[severity:I’m somewhat annoyed. A fix would be nice]<br>\n<br>\nOur code style is configured to indent braces. When I use “change signature” refactoring on an interface method it breaks formatting in the implementation methods. I had to manually fix a bit over 200 files because of this issue.<br>\n<br>\nI have attached a sample project which can be used to reproduce the issue.</p>\n<ol>\n<li>place cursor on MyInterface.Method method</li>\n<li>press Ctrl+.</li>\n<li>click Change signature…</li>\n<li>add any new parameter (ex.: int a) and choose any callsite injection</li>\n<li>notice BetterClass.Method method’s braces aren’t formatted correctly</li></ol>\n<br><p>\nActual result:</p><ol>\n</ol>\n<pre>    public class BetterClass : MyInterface\n        {\n        <span class=hljs-function><span class=hljs-keyword>public</span> <span class=hljs-keyword>void</span> <span class=hljs-title>Method</span><span class=hljs-params>(<span class=hljs-keyword>int</span> a)</span>\n        </span>{\n            }\n        }\n</pre>\n<p><br>\nExpected result:</p>\n<pre>    public class BetterClass : MyInterface\n        {\n        <span class=hljs-function><span class=hljs-keyword>public</span> <span class=hljs-keyword>void</span> <span class=hljs-title>Method</span><span class=hljs-params>(<span class=hljs-keyword>int</span> a)</span>\n            </span>{\n            }\n        }\n</pre>\n\n---\n### Original Comments\n\n#### Feedback Bot on 8/5/2020, 11:27 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/46595","RelatedDescription":"Open issue \"Change signature refactoring does not respect indented braces\" (#46595)"},{"Id":"674490646","IsPullRequest":true,"CreatedAt":"2020-08-06T17:42:56","Actor":"svick","Number":"46594","RawContent":null,"Title":"Adjust log line splitting for shared compiler","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/42172.\r\n\r\nWhen the `Csc` task does not use shared compilation, output of `csc` is [processed by MSBuild using `Process.OutputDataReceived`](https://github.com/dotnet/msbuild/blob/e8c17c128ed847d4acd278b42a02df9621bd1652/src/Utilities/ToolTask.cs#L698), [which considers line separators to be `\\r`, `\\n` and `\\r\\n`](https://github.com/dotnet/runtime/blob/a778b7e09722c45891ab66f0cd38785d3156c839/src/libraries/System.Diagnostics.Process/src/System/Diagnostics/AsyncStreamReader.cs#L142-L144). This means that when the output of `csc` is `C.cs(8,26): warning CS0618: 'Class1' is obsolete: '\\n'`, MSBuild sees this as two lines (the second one containing just `'`).\r\n\r\nWhen the `Csc` task uses shared compilation, the output of `VBCSCompiler` is instead processed by `Csc.LogMessages`, which currently only considers `Environment.NewLine` as a line separator. This means that the same output as above is seen by MSBuild as a single line on Windows.\r\n\r\nWhen the output above is processed as a single line, it seems MSBuild does not consider it to be warning. (Though I haven't really looked into why that happens.)\r\n\r\nThis PR makes the two paths consistent, by changing separators in `Csc.LogMessages` to `\\r`, `\\n` and `\\r\\n`.\r\n\r\nI haven't figured out a good way to test `Csc.LogMessages`. Let me know if there is one.\r\n\r\nThe following interaction demonstrates that this change actually fixes https://github.com/dotnet/roslyn/issues/42172 (3.8.0-before is a version without the fix, 3.8.0-after with the fix):\r\n\r\n```\r\n> dotnet add package Microsoft.Net.Compilers.Toolset -v 3.8.0-before\r\n> dotnet build -p:UseSharedCompilation=true -t:Rebuild\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20360-03+188921e2f for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  Restored C:\\code\\tmp\\corelib\\corelib.csproj (in 197 ms).\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\n  corelib -> C:\\code\\tmp\\corelib\\bin\\Debug\\netstandard2.0\\corelib.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:05.11\r\n> dotnet build -p:UseSharedCompilation=false -t:Rebuild\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20360-03+188921e2f for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n  corelib -> C:\\code\\tmp\\corelib\\bin\\Debug\\netstandard2.0\\corelib.dll\r\n\r\nBuild succeeded.\r\n\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:04.37\r\n> dotnet add package Microsoft.Net.Compilers.Toolset -v 3.8.0-after \r\n> dotnet build -p:UseSharedCompilation=true -t:Rebuild\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20360-03+188921e2f for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n  corelib -> C:\\code\\tmp\\corelib\\bin\\Debug\\netstandard2.0\\corelib.dll\r\n\r\nBuild succeeded.\r\n\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:04.56\r\n> dotnet build -p:UseSharedCompilation=false -t:Rebuild\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20360-03+188921e2f for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n  corelib -> C:\\code\\tmp\\corelib\\bin\\Debug\\netstandard2.0\\corelib.dll\r\n\r\nBuild succeeded.\r\n\r\nC.cs(8,26): warning CS0618: 'Class1' is obsolete: ' [C:\\code\\tmp\\corelib\\corelib.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:04.33\r\n```","Url":"https://github.com/dotnet/roslyn/pull/46594","RelatedDescription":"Open PR \"Adjust log line splitting for shared compiler\" (#46594)"},{"Id":"674454283","IsPullRequest":false,"CreatedAt":"2020-08-06T16:50:04","Actor":"chasewallis","Number":"46593","RawContent":null,"Title":"16.7 causing wpf project to fail with `\"csc.exe\" exited with code -2146232797`","State":"open","Body":"**Version Used**: \r\n16.7 (was working fine in 16.6.x)\r\n\r\n**Steps to Reproduce**:\r\n\r\nBuild the project. The only message I see is   \r\n```C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Cor\r\n       e.targets(70,5): error MSB6006: \"csc.exe\" exited with code -2146232797. [C:\\path\\to\\source\\Wpf.project\\Wpf.project_0egzionw_wpftmp.csproj]\r\n```\r\n\r\nThere is a stack trace in the event viewer:\r\n```Application: csc.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.DecisionDagRewriter.WhenClauseMightAssignPatternVariableWalker.MethodMayMutateReceiver(BoundExpression receiver, MethodSymbol method)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.DecisionDagRewriter.WhenClauseMightAssignPatternVariableWalker.VisitPropertyAccess(BoundPropertyAccess node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitNameOfOperator(BoundNameOfOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitBinaryOperator(BoundBinaryOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.DecisionDagRewriter.WhenClauseMightAssignPatternVariableWalker.MightAssignSomething(BoundExpression expr)\r\n   at System.Linq.ImmutableArrayExtensions.Any[T](ImmutableArray`1 immutableArray, Func`2 predicate)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.DecisionDagRewriter.ShareTempsIfPossibleAndEvaluateInput(BoundDecisionDag decisionDag, BoundExpression loweredSwitchGoverningExpression, ArrayBuilder`1 result, BoundExpression& savedInputExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.SwitchStatementLocalRewriter.LowerSwitchStatement(BoundSwitchStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.SwitchStatementLocalRewriter.Rewrite(LocalRewriter localRewriter, BoundSwitchStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatement(BoundStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitPossibleUsingDeclaration(BoundStatement node, ImmutableArray`1 statements, Int32 statementIndex, Boolean& replacedLocalDeclarations)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatementSubList(ArrayBuilder`1 builder, ImmutableArray`1 statements, Int32 startIndex)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatement(BoundStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsync>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsync>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+DecisionDagRewriter+WhenClauseMightAssignPatternVariableWalker.MethodMayMutateReceiver(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+DecisionDagRewriter+WhenClauseMightAssignPatternVariableWalker.VisitPropertyAccess(Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitNameOfOperator(Microsoft.CodeAnalysis.CSharp.BoundNameOfOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitBinaryOperator(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+DecisionDagRewriter+WhenClauseMightAssignPatternVariableWalker.MightAssignSomething(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at System.Linq.ImmutableArrayExtensions.Any[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>, System.Func`2<System.__Canon,Boolean>)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+DecisionDagRewriter.ShareTempsIfPossibleAndEvaluateInput(Microsoft.CodeAnalysis.CSharp.BoundDecisionDag, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, Microsoft.CodeAnalysis.CSharp.BoundExpression ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+SwitchStatementLocalRewriter.LowerSwitchStatement(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter+SwitchStatementLocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.LocalRewriter, Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitPossibleUsingDeclaration(Microsoft.CodeAnalysis.CSharp.BoundStatement, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, Int32, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatementSubList(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, Int32)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.DiagnosticBag, Boolean ByRef, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsync>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nI tried to get the jit-debugger attached to the csc.exe, but I was unable to (don't know how). I followed the advise here: https://docs.microsoft.com/en-us/visualstudio/debugger/debug-using-the-just-in-time-debugger?view=vs-2019#jit_errors but I couldn't get the jit-debugger working.\r\n\r\n**Expected Behavior**:\r\nProject compiles\r\n\r\n**Actual Behavior**:\r\nProject fails to build with the error:  \r\n```C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Cor\r\n       e.targets(70,5): error MSB6006: \"csc.exe\" exited with code -2146232797. [C:\\Users\\Chase.Wallis\\source\\Product\\Co\r\n       mmon\\AdminArsenal.Product.Wpf\\AdminArsenal.Product.Wpf_0egzionw_wpftmp.csproj]```","Url":"https://github.com/dotnet/roslyn/issues/46593","RelatedDescription":"Open issue \"16.7 causing wpf project to fail with `\"csc.exe\" exited with code -2146232797`\" (#46593)"},{"Id":"674438107","IsPullRequest":false,"CreatedAt":"2020-08-06T16:22:37","Actor":"sharwell","Number":"46592","RawContent":null,"Title":"Avoid running builds for changes that do not impact build outcome","State":"open","Body":"This functionality was originally submitted as #46504, but there are some problems to address before we can use it.\r\n\r\n1. Need to update the GitHub required checks to work correctly with the new configuration (i.e. merging should not be blocked due to builds getting skipped).\r\n2. Need to update the CI build to verify that skipped file(s) or path(s) are not actually being used by the build.","Url":"https://github.com/dotnet/roslyn/issues/46592","RelatedDescription":"Open issue \"Avoid running builds for changes that do not impact build outcome\" (#46592)"},{"Id":"674429515","IsPullRequest":true,"CreatedAt":"2020-08-06T16:08:44","Actor":"Youssef1313","Number":"46591","RawContent":null,"Title":"Update README.md","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/46591","RelatedDescription":"Open PR \"Update README.md\" (#46591)"},{"Id":"674408802","IsPullRequest":true,"CreatedAt":"2020-08-06T15:37:56","Actor":"sharwell","Number":"46590","RawContent":null,"Title":"Revert \"don't run CI on changes that do not change code\"","State":"open","Body":"Reverts dotnet/roslyn#46504\r\n\r\nGitHub does not support this configuration. Disabling the build for a pull request has a side effect of never having the tests for the pull request pass. This prevents merging pull requests falling into the exclusion category.","Url":"https://github.com/dotnet/roslyn/pull/46590","RelatedDescription":"Open PR \"Revert \"don't run CI on changes that do not change code\"\" (#46590)"},{"Id":"674288914","IsPullRequest":false,"CreatedAt":"2020-08-06T12:50:44","Actor":"tmm360","Number":"46588","RawContent":null,"Title":"AD0001 Analyzer 'Microsoft.CodeAnalysis.CSharp.RemoveUnnecessarySuppressions.CSharpRemoveUnnecessarySuppressionsDiagnosticAnalyzer' threw an exception of type 'System.InvalidOperationException'","State":"open","Body":"With new Visual Studio release is raised a new warning when in project there is `GlobalSuppressions.cs` with scope on `namespaceanddescendants`. This is the warning text:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\tAD0001\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.RemoveUnnecessarySuppressions.CSharpRemoveUnnecessarySuppressionsDiagnosticAnalyzer' threw an exception of type 'System.InvalidOperationException' with message 'Unexpected value 'NamespaceAndDescendants' of type 'Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState+TargetScope''.\r\nException occurred with following context:\r\nCompilation: ConsoleApp1\r\nSyntaxTree: C:\\Users\\mirko\\Desktop\\wow\\ConsoleApp1\\ConsoleApp1\\GlobalSuppressions.cs\r\nSyntaxNode: [assembly: SuppressMessage(\"Usage\" ... [AttributeListSyntax]@[294..476) (7,0)-(7,182)\r\n\r\nSystem.InvalidOperationException: Unexpected value 'NamespaceAndDescendants' of type 'Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState+TargetScope'\r\n   in Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.TargetSymbolResolver.Resolve(Boolean& resolvedWithDocCommentIdFormat)\r\n   in Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.HasValidTarget(ImmutableArray`1 namedAttributeArguments, TargetScope targetScope, Boolean& targetHasDocCommentIdFormat, String& targetSymbolString, IOperation& targetValueOperation, ImmutableArray`1& resolvedSymbols)\r\n   in Microsoft.CodeAnalysis.RemoveUnnecessarySuppressions.AbstractRemoveUnnecessarySuppressionsDiagnosticAnalyzer.CompilationAnalyzer.AnalyzeAssemblyOrModuleAttribute(SyntaxNode attributeSyntax, SemanticModel model, Action`1 reportDiagnostic, CancellationToken cancellationToken)\r\n   in Microsoft.CodeAnalysis.CSharp.RemoveUnnecessarySuppressions.CSharpRemoveUnnecessarySuppressionsDiagnosticAnalyzer.<>c__DisplayClass0_0.<RegisterAttributeSyntaxAction>b__0(SyntaxNodeAnalysisContext context)\r\n   in Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.<>c__58`1.<ExecuteSyntaxNodeAction>b__58_0(ValueTuple`2 data)\r\n   in Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock[TArg](DiagnosticAnalyzer analyzer, Action`1 analyze, TArg argument, Nullable`1 info)\r\n-----\r\n\r\nSuppress the following diagnostics to disable this analyzer: IDE0076, IDE0077\tConsoleApp1\t\t1\tActive\r\n```\r\n\r\n**Version Used**: \r\nMicrosoft Visual Studio Community 2019 Version 16.7.0\r\nC# Tools   3.7.0-6.20375.2+34202cc2f3e869fd70a26d8237f4552cf9e192cf\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new .Net Core console application with `netcoreapp3.1`\r\n2. Add a `GlobalSuppressions.cs` file with a sample SuppressMessage with scope on `namespaceanddescendants`. Example:\r\n```c#\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\n[assembly: SuppressMessage(\"Usage\", \"CA2214:Do not call overridable methods in constructors\", Justification = \"<pending>\", Scope = \"namespaceanddescendants\", Target = \"ConsoleApp1\")]\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nAs for previous versions, I expect to not receive any warning.\r\n\r\n**Actual Behavior**:\r\n\r\nA warning is raised for this code.","Url":"https://github.com/dotnet/roslyn/issues/46588","RelatedDescription":"Open issue \"AD0001 Analyzer 'Microsoft.CodeAnalysis.CSharp.RemoveUnnecessarySuppressions.CSharpRemoveUnnecessarySuppressionsDiagnosticAnalyzer' threw an exception of type 'System.InvalidOperationException'\" (#46588)"},{"Id":"674288430","IsPullRequest":false,"CreatedAt":"2020-08-06T12:50:00","Actor":"neoaisac","Number":"46587","RawContent":null,"Title":"Icorrectly suggesting IDE0032 \"Use auto property\" for readonly fields","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 16.6.4\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nprivate readonly IServices _services;\r\n\r\npublic IServices Services => _services;\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nShould not suggest IDE0032.\r\n\r\nWhen suggested change is executed, the code above changes to:\r\n\r\n```\r\npublic IServices Services { get; private set; }\r\n```\r\n\r\nHowever, the auto-property's `private set` accessor does not make its value equivalent to the `readonly`. It can still be modified internally in the scope of the class, instead of just in the constructor, making this a non-equivalent repalcement.\r\n\r\n**Actual Behavior**:\r\n\r\nSuggests IDE0032.\r\n","Url":"https://github.com/dotnet/roslyn/issues/46587","RelatedDescription":"Open issue \"Icorrectly suggesting IDE0032 \"Use auto property\" for readonly fields\" (#46587)"},{"Id":"674270841","IsPullRequest":true,"CreatedAt":"2020-08-06T12:22:03","Actor":"dotnet-maestro[bot]","Number":"46586","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d7cf4206-186c-405a-0738-08d7d0ed8d73)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: d7cf4206-186c-405a-0738-08d7d0ed8d73\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d7cf4206-186c-405a-0738-08d7d0ed8d73)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/46586","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#46586)"},{"Id":"674221813","IsPullRequest":true,"CreatedAt":"2020-08-06T10:54:36","Actor":"Youssef1313","Number":"46585","RawContent":null,"Title":"Exclude md files from CI build","State":"open","Body":"Follow up to #46504","Url":"https://github.com/dotnet/roslyn/pull/46585","RelatedDescription":"Open PR \"Exclude md files from CI build\" (#46585)"},{"Id":"674130001","IsPullRequest":false,"CreatedAt":"2020-08-06T08:43:51","Actor":"7enderhead","Number":"46584","RawContent":null,"Title":"Restore misses .tools\\msbuild\\16.6.5-alpha1\\tools\\MSBuild\\Current\\Bin\\msbuild.exe","State":"closed","Body":"**Version Used**: forked from Master, commit  81c5d71a65daa74343241b3ad9c25b6fc372096e \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. run Restore.cmd (or build.ps1 -restore) on Windows 10\r\n\r\n**Expected Behavior**:\r\n- restore runs through\r\n\r\n**Actual Behavior**:\r\n```\r\n$ Restore.cmd\r\nTool 'dotnet-format' (version '4.0.130203') was restored. Available commands: dotnet-format\r\nTool 'powershell' (version '7.0.0') was restored. Available commands: pwsh\r\n\r\nRestore was successful.\r\nRoslyn.sln:\r\nException calling \"Start\" with \"0\" argument(s): \"The system cannot find the file specified\"\r\nSystem.Management.Automation.MethodInvocationException: Exception calling \"Start\" with \"0\" argument(s): \"The system cannot find the file specified\" ---> System.ComponentModel.Win32Exception: The system cannot find the file specified\r\n   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nat Exec-Process, C:\\src\\roslyn\\eng\\common\\tools.ps1: line 79\r\nat MSBuild-Core, C:\\src\\roslyn\\eng\\common\\tools.ps1: line 593\r\nat InitializeToolset, C:\\src\\roslyn\\eng\\common\\tools.ps1: line 510\r\nat BuildSolution, C:\\src\\roslyn\\eng\\build.ps1: line 213\r\nat <ScriptBlock>, C:\\src\\roslyn\\eng\\build.ps1: line 670\r\nat <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n- Debugging with `Write-Host \"command: $($command), args: $($commandArgs)\"` at tools.ps1 prior to line 79 shows that it is tried to invoke `.tools\\msbuild\\16.6.5-alpha1\\tools\\MSBuild\\Current\\Bin\\msbuild.exe`, which does not exist.\r\n- Instead, the folder only contains `RoslynTools.MSBuild.16.6.5-alpha1.nupkg`:\r\n```\r\n$ ls .tools\\msbuild\\16.6.5-alpha1\\\r\nRoslynTools.MSBuild.16.6.5-alpha1.nupkg\r\n```","Url":"https://github.com/dotnet/roslyn/issues/46584","RelatedDescription":"Closed issue \"Restore misses .tools\\msbuild\\16.6.5-alpha1\\tools\\MSBuild\\Current\\Bin\\msbuild.exe\" (#46584)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"673910246","IsPullRequest":false,"CreatedAt":"2020-08-05T23:26:52","Actor":"jkotas","Number":"8256","RawContent":null,"Title":"Survey: Native AOT","State":"open","Body":"Performance has been a key .NET feature. The existing options for optimizing published applications work well for most scenarios that .NET targets today.\r\n\r\nSome of you asked us to consider adding native AOT compilation option with distinctly different characteristics. The distinctly different characteristics of native AOT come with tradeoffs such as lower compatibility that are explained in detail in [.NET Runtime Form Factors](https://github.com/dotnet/designs/blob/master/accepted/2020/form-factors.md#native-aot-form-factors). We’ve created a survey to help us better understand the native AOT use cases.\r\n\r\nWe would appreciate your feedback so we can work on creating the right plans for future. If you don’t supply contact details, then responses will be anonymous.\r\n\r\nSurvey: https://www.surveymonkey.com/r/SQCYB2C\r\n\r\nThank you for your time!","Url":"https://github.com/dotnet/corert/issues/8256","RelatedDescription":"Open issue \"Survey: Native AOT\" (#8256)"},{"Id":"673685686","IsPullRequest":true,"CreatedAt":"2020-08-05T16:28:31","Actor":"yowl","Number":"8255","RawContent":null,"Title":"Wasm: Align classes and arrays with 64 bit types at 8 byte","State":"open","Body":"Closes #8250 \r\n\r\nThis PR enables the `FEATURE_64BIT_ALIGNMENT` feature for Wasm and implements some of the `RhpNew...` functions to align arrays and classes at 8 bytes.  This will move Wasm closer to enabling threads (although may have to wait for Wasm Exceptions for this as the current emscripten exception handling is not thread safe - this Wasm feature is currently behind a flag in v8).\r\n\r\nMay also improve ARM32 support, but not tried that.","Url":"https://github.com/dotnet/corert/pull/8255","RelatedDescription":"Open PR \"Wasm: Align classes and arrays with 64 bit types at 8 byte\" (#8255)"},{"Id":"673310727","IsPullRequest":false,"CreatedAt":"2020-08-05T07:12:15","Actor":"RalfKornmannEnvision","Number":"8254","RawContent":null,"Title":"Windows DLL import leftovers in Unix assemblies?","State":"open","Body":"To get an idea of how many and which native calls I need to implement on different game consoles I have written a small tool that scans assemblies for DLLImports. To my surprise I found some calls to Windows dlls in the SDK and framework folder that were build for an ARM64 Unix system. \r\n\r\nI assume it's not a big issue as these functions might not be called at all and as CoreRT would use dynamic loading they will not cause any unresolved externals. But maybe someone is interested and like to clean it up at some point\r\n\r\nIn System.Private.CoreLib.dll I found\r\n        kernel32.dll\r\n                LCIDToLocaleName\r\n                LocaleNameToLCID\r\n                LCMapStringEx\r\n                FindNLSStringEx\r\n                CompareStringEx\r\n                CompareStringOrdinal\r\n                FindStringOrdinal\r\n                IsNLSDefinedString\r\n                GetUserPreferredUILanguages\r\n                GetLocaleInfoEx\r\n                EnumSystemLocalesEx\r\n                EnumTimeFormatsEx\r\n                GetCalendarInfoEx\r\n                GetUserGeoID\r\n                GetGeoInfo\r\n                EnumCalendarInfoExEx\r\n                GetNLSVersionEx\r\n                ResolveLocaleName\r\n        Normaliz.dll\r\n                IdnToAscii\r\n                IdnToUnicode\r\n                IsNormalizedString\r\n                NormalizeString\r\n\r\nand another one in\r\nSystem.Reflection.Metadata.dll\r\n        kernel32.dll\r\n                ReadFile","Url":"https://github.com/dotnet/corert/issues/8254","RelatedDescription":"Open issue \"Windows DLL import leftovers in Unix assemblies?\" (#8254)"},{"Id":"673181645","IsPullRequest":true,"CreatedAt":"2020-08-05T04:51:14","Actor":"yowl","Number":"8253","RawContent":null,"Title":"Wasm: split llvm->wasm from wasm link","State":"closed","Body":"This PR separates the compilation from LLVM bitcode to final `.wasm`.  There are now 2 steps in the build \r\n\r\n- LLVM bitcode to wasm object file\r\n- Wasm object and archives to final .wasm\r\n\r\nThe advantages are:\r\n\r\n- Faster build time for debug builds.  When going straight from bitcode to .wasm, the link time optimizer runs in `wasm-ld` and can't be turned off.  Now it can be turned off resulting in faster linking.\r\n- Building with pthreads enabled was failing and the emscripten suggestion was to first build to a `.o`.  Threads are not enabled yet but this is a step towards that. https://github.com/emscripten-core/emscripten/issues/10370\r\n\r\nAnother possible advantage is if the LLVM bitcode was to be used to build another target, then maybe this separation will help.","Url":"https://github.com/dotnet/corert/pull/8253","RelatedDescription":"Closed or merged PR \"Wasm: split llvm->wasm from wasm link\" (#8253)"},{"Id":"672416973","IsPullRequest":true,"CreatedAt":"2020-08-04T14:09:40","Actor":"jkotas","Number":"8252","RawContent":null,"Title":"Ignore slow tail calls instead failing the compilation for them","State":"closed","Body":"Fixes #8251","Url":"https://github.com/dotnet/corert/pull/8252","RelatedDescription":"Closed or merged PR \"Ignore slow tail calls instead failing the compilation for them\" (#8252)"},{"Id":"672148644","IsPullRequest":false,"CreatedAt":"2020-08-04T14:09:39","Actor":"FoggyFinder","Number":"8251","RawContent":null,"Title":"Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures' after updating","State":"closed","Body":"I've used CoreRt and it works perfectly for some of my F# + Avalonia applications.\r\nBut now when I've tried to update one of them I receive the next exception:\r\n\r\n```\r\nEXEC : error : Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures+Invoke@2712<System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>,int32,System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>>.Invoke(KeyValuePair`2<int32,__Canon>)' [SomeProjects.fsproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures+Invoke@2712<System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>,int32,System.Collections.Generic.KeyValuePair`2<int32,System.__Canon>>.Invoke(KeyValuePair`2<int32,__Canon>)' ---> System.NotImplementedException: getTailCallHelpers\r\n     at Internal.JitInterface.CorInfoImpl.getTailCallHelpers(CORINFO_RESOLVED_TOKEN& callToken, CORINFO_SIG_INFO* sig, CORINFO_GET_TAILCALL_HELPERS_FLAGS flags, CORINFO_TAILCALL_HELPERS& pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getTailCallHelpers(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& callToken, CORINFO_SIG_INFO* sig, CORINFO_GET_TAILCALL_HELPERS_FLAGS flags, CORINFO_TAILCALL_HELPERS& pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleThreaded(List`1 methodsToCompile)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n```\r\n\r\nLast time I've build this app near 3 months ago so I don't remember the exact version of CoreRt.\r\n\r\nAs a workaround: Is there is a way to get the full list of versions with its dates? Just to specify it instead of `1.0.0-alpha-*` inside of `fsproj` \r\n","Url":"https://github.com/dotnet/corert/issues/8251","RelatedDescription":"Closed issue \"Code generation failed for method '[FSharp.Core]Microsoft.FSharp.Core.OptimizedClosures' after updating\" (#8251)"},{"Id":"665684844","IsPullRequest":true,"CreatedAt":"2020-08-04T00:24:48","Actor":"yowl","Number":"8247","RawContent":null,"Title":"Wasm: Support for calling emscripten_set_main_loop","State":"closed","Body":"This PR allows code to use `emscripten_set_main_loop` (https://emscripten.org/docs/api_reference/emscripten.h.html#browser-execution-environment).\r\nThis is possible with the .net 5 compiler and the use of e.g.\r\n```\r\n        [DllImport(\"*\")]\r\n        internal static extern unsafe void emscripten_set_main_loop(delegate*<void> f,  int fps, int simulate_infinite_loop);\r\n\r\n        [UnmanagedCallersOnly(EntryPoint = \"MainLoop\", CallingConvention = CallingConvention.Cdecl)]\r\n        static void MainLoop()\r\n        {\r\n            Console.WriteLine(\"Main loop\");\r\n        }\r\n```\r\nand\r\n```\r\n        emscripten_set_main_loop(&MainLoop, 0, 0);\r\n```\r\n\r\nIt adds handling for `TypeFlags.FunctionPointer` and adds a call to `RhpReversePInvokeReturn2` when the main function exits as emscripten will subsequently make calls into the main loop function and the thread state needs to go back to preemptive.","Url":"https://github.com/dotnet/corert/pull/8247","RelatedDescription":"Closed or merged PR \"Wasm: Support for calling emscripten_set_main_loop\" (#8247)"},{"Id":"668729616","IsPullRequest":false,"CreatedAt":"2020-07-30T13:33:44","Actor":"yowl","Number":"8250","RawContent":null,"Title":"Wasm: Alignment required for atomics","State":"open","Body":"Wasm does not currently align memory access which is a problem when we want to introduce threads and atomics.   The WebAssembly specification says that unaligned atomic operations will trap, https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md:\r\n\r\n\"Alignment\r\nUnlike normal memory accesses, misaligned atomic accesses trap\"\r\n\r\nAnd indeed attempting this at the moment, results in (on Edge)\r\n```\r\nRuntimeError: operation does not support unaligned accesses\r\n    at RhpLockCmpXchg64 (http://localhost:8000/HelloWasm.wasm:wasm-function[20682]:0xd04530)\r\n    at S_P_CoreLib_System_Threading_Interlocked__CompareExchange_0 (http://localhost:8000/HelloWasm.wasm:wasm-function[1427]:0xb2194)\r\n    at S_P_CoreLib_System_Threading_Interlocked__Read (http://localhost:8000/HelloWasm.wasm:wasm-function[10329]:0x5eab12)\r\n    at S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_Length (http://localhost:8000/HelloWasm.wasm:wasm-function[12667]:0x7c570a)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__CreateResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5590]:0x2e9ff6)\r\n    at S_P_CoreLib_System_Resources_ManifestBasedResourceGroveler__GrovelForResourceSet (http://localhost:8000/HelloWasm.wasm:wasm-function[5581]:0x2e731c)\r\n    at dynCall_viiii (http://localhost:8000/HelloWasm.wasm:wasm-function[22680]:0xe150f5)\r\n    at http://localhost:8000/HelloWasm.js:1822:22\r\n    at invoke_viiii (http://localhost:8000/HelloWasm.js:7504:5)\r\n    at S_P_CoreLib_System_Resources_ResourceManager__InternalGetResourceSet\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/8250","RelatedDescription":"Open issue \"Wasm: Alignment required for atomics\" (#8250)"},{"Id":"665852159","IsPullRequest":false,"CreatedAt":"2020-07-26T20:15:15","Actor":"josephmoresena","Number":"8249","RawContent":null,"Title":"Array problems disabling reflection","State":"open","Body":"CoreRT in Reflection-free mode not work:\r\n\r\n1. Type.GetArrayRank()\r\n2. Array.CreateInstance(Type, dimensionArray), where dimensionArray.Length > 0 and Type is Integer (8,16,32 or 64 bits, signed or unsigned but not IntPtr, UIntPtr, Boolean or Enum);\r\n2. Array.CreateInstance(Type, dimensionArray), where Type isn't Integer (8,16,32 or 64 bits, signed or unsigned)","Url":"https://github.com/dotnet/corert/issues/8249","RelatedDescription":"Open issue \"Array problems disabling reflection\" (#8249)"},{"Id":"665721972","IsPullRequest":false,"CreatedAt":"2020-07-26T06:51:08","Actor":"VS-ux","Number":"8248","RawContent":null,"Title":"COM Support","State":"open","Body":"HI!\r\nSo I've seen this repo for a couple of months and it's pretty cool. However, I was wondering when or how COM will be supported.\r\nKeep in mind this type of stuff is not my area of expertise so I apologize for any mistakes.\r\n\r\nI use Winforms alot and that includes using things such as `OpenFileDialog`. However, since COM isn't supported, these things don't work. Issue #4219 showed some examples and this [sample](https://github.com/kant2002/CoreRTWinFormsTestBed/tree/master/WinFormsComInterop) helped alot. However, when CoreRT'ing and starting the binary it failed. I think it's because I didn't follow step 6 as listed [here](https://github.com/dotnet/corert/issues/4219#issuecomment-623159691). I'm unsure what to do on that step. Can somebody guide me through what to do? (I really just need support for MenuStrip, ContextMenuStrip, ToolStrip, and possibly StatusStrip.\r\nThanks\r\n","Url":"https://github.com/dotnet/corert/issues/8248","RelatedDescription":"Open issue \"COM Support\" (#8248)"},{"Id":"665667881","IsPullRequest":false,"CreatedAt":"2020-07-25T22:02:50","Actor":"Suchiman","Number":"8246","RawContent":null,"Title":"CoreRT quits when Foreground threads are running","State":"open","Body":"This code will print Hello World until all eternity on CoreCLR but exit immediately and print nothing on CoreRT.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Threading;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var t = new Thread(Meh);\r\n        t.IsBackground = false;\r\n        t.Start();\r\n    }\r\n\r\n    private static void Meh(object obj)\r\n    {\r\n        while (true)\r\n        {\r\n            Thread.Sleep(10);\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI suppose it would need to check before this line https://github.com/dotnet/corert/blob/9d8bd29a71f68941aaa2c00e9c9a0eed86cafa10/src/Native/Bootstrap/main.cpp#L450 if there are any Foreground threads still running, how does this work on CoreCLR?","Url":"https://github.com/dotnet/corert/issues/8246","RelatedDescription":"Open issue \"CoreRT quits when Foreground threads are running\" (#8246)"},{"Id":"665288924","IsPullRequest":true,"CreatedAt":"2020-07-24T18:28:51","Actor":"yowl","Number":"8245","RawContent":null,"Title":"Wasm: Change boolean logic for gc.cpp find_object","State":"closed","Body":"This PR implements the suggestion in #8205.  I'm submitting the PR as with this change and #8171 its possible to run 100 iterations of the Generics test without a memory access failure.\r\n\r\nFixes #8210 \r\nCloses #8205\r\n\r\nDraft as depends on #8171","Url":"https://github.com/dotnet/corert/pull/8245","RelatedDescription":"Closed or merged PR \"Wasm: Change boolean logic for gc.cpp find_object\" (#8245)"},{"Id":"664401363","IsPullRequest":true,"CreatedAt":"2020-07-23T15:52:36","Actor":"christianscheuer","Number":"8244","RawContent":null,"Title":"Temporary workaround for https://github.com/dotnet/corert/issues/8241","State":"closed","Body":"Temp fix until dotnet/runtime#39717 can be consumed when CoreRT moves to runtimelab.\r\n\r\nConfirmed working with Big Sur.\r\n\r\nCC @jkotas ","Url":"https://github.com/dotnet/corert/pull/8244","RelatedDescription":"Closed or merged PR \"Temporary workaround for https://github.com/dotnet/corert/issues/8241\" (#8244)"},{"Id":"657282440","IsPullRequest":false,"CreatedAt":"2020-07-23T12:20:17","Actor":"akashdarshan99","Number":"8232","RawContent":null,"Title":"Binary generation doesn't finish when including rd.xml","State":"closed","Body":"Hey, the issue im having is with the output generation, where the cmd is stuck at\r\n\r\n`  Generating native code\r\nEXEC : warning : RD.XML processing will change before release `\r\n\r\nThe ram usage goes very high for ilc.exe process (reaches almost 9gb, out of available 12gb), and is stuck there. (Waited for 8hours)\r\n\r\nHowever, when i do not include rd.xml, I get an output binary file, which obviously gives me an error as follows.\r\n\r\n`System.Reflection.MissingMetadataException: 'MongoDB.Bson.Serialization.BsonClassMap<Db.UserDocument>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x13e\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed2.GetOrAdd(K) + 0x87\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x44\r\n   at MongoDB.Bson.Serialization.BsonClassMap.LookupClassMap(Type) + 0x147\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializationProvider.GetSerializer(Type, IBsonSerializerRegistry) + 0xd5\r\n   at MongoDB.Bson.Serialization.BsonSerializerRegistry.CreateSerializer(Type) + 0x8b\r\n   at System.Collections.Concurrent.ConcurrentDictionary2.GetOrAdd(TKey, Func2) + 0x73\r\n   at MongoDB.Bson.Serialization.BsonSerializerRegistry.GetSerializer[T]() + 0x25\r\n   at MongoDB.Driver.MongoCollectionImpl1..ctor(IMongoDatabase, CollectionNamespace, MongoCollectionSettings, ICluster, IOperationExecutor) + 0x79\r\n   at MongoDB.Driver.MongoDatabaseImpl.GetCollection[TDocument](String, MongoCollectionSettings) + 0xa5\r\n   at Console.Db.MongoDatabase1..ctor(String) + 0x183`\r\n\r\nThis is how my rd.xml looks like:\r\n\r\n`<Directives>\r\n\t<Application>\r\n\t\t<Assembly Name=\"MongoDB.Bson\" Dynamic=\"Required All\" />\r\n\t\t<Assembly Name=\"MongoDB.Driver.Core\" Dynamic=\"Required All\" />\r\n\t\t<Assembly Name=\"MongoDB.Driver\" Dynamic=\"Required All\" />\r\n\t</Application>\r\n</Directives>`\r\n\r\nmy csproj for console looks like this:\r\n\r\n`\r\n        <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n\t<RdXmlFile Include=\"rd.xml\" />\r\n`\r\n\r\nA point to note that the project referencing mongodb, is a library project, which is referenced by the main console application.\r\nPlease do guide me if theres anything wrong from my side, or if this is a bug. Thank you","Url":"https://github.com/dotnet/corert/issues/8232","RelatedDescription":"Closed issue \"Binary generation doesn't finish when including rd.xml\" (#8232)"},{"Id":"664200929","IsPullRequest":true,"CreatedAt":"2020-07-23T10:09:05","Actor":"jkotas","Number":"8243","RawContent":null,"Title":"Fix uninitialized variable in JIT/EE interface","State":"closed","Body":"Fixes #8235","Url":"https://github.com/dotnet/corert/pull/8243","RelatedDescription":"Closed or merged PR \"Fix uninitialized variable in JIT/EE interface\" (#8243)"},{"Id":"658574740","IsPullRequest":false,"CreatedAt":"2020-07-23T10:09:05","Actor":"ogxd","Number":"8235","RawContent":null,"Title":"Error LNK2001: unresolved external symbol NYI_LDVIRTFTN when creating shared library","State":"closed","Body":"I have a C# NET Standard 2.0 library with no external dependencies.\r\nWhen I replicate the NativeLibrary sample to create a shared library, it works.\r\nHowever, as soon as I add a single line of code in one of the exposed functions, I get this error :\r\n\r\n```\r\nMyLib.obj : error LNK2001: unresolved external symbol NYI_LDVIRTFTN [...MyLib.csproj]\r\nbin\\Release\\netstandard2.0\\win-x64\\native\\MyLib.dll : fatal error LNK1120: 1 unresolved externals [...\\MyLib.csproj]\r\n...\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-29116-01\\build\\Microsoft.NETCore.Native.targets(310,5): error MSB3073: The command \"\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\Release\\netstandard2.0\\win-x64\\native\\link.rsp\"\" exited with code 1120. [...\\MyLib.csproj]\r\n```\r\n\r\nMyLib targets x64, and I have unsafe code and optimize code enabled.","Url":"https://github.com/dotnet/corert/issues/8235","RelatedDescription":"Closed issue \"Error LNK2001: unresolved external symbol NYI_LDVIRTFTN when creating shared library\" (#8235)"},{"Id":"663619968","IsPullRequest":true,"CreatedAt":"2020-07-22T11:39:50","Actor":"MichalStrehovsky","Number":"8242","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8242","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#8242)"},{"Id":"663130038","IsPullRequest":false,"CreatedAt":"2020-07-21T16:00:41","Actor":"christianscheuer","Number":"8241","RawContent":null,"Title":"Cannot load 'System.Security.Cryptography.Native.Apple' after recent CoreRT upgrade","State":"open","Body":"Hi all,\r\n\r\nHas something been changed to the build system recently that means there's a chance the native parts of `System.Security.Cryptography.Native.Apple` don't get properly statically linked with the binary anymore?\r\n\r\nSince our recent update to latest CoreRT, I get this when using any crypto functions:\r\n`System.DllNotFoundException: Unable to load DLL 'System.Security.Cryptography.Native.Apple': The specified module could not be found.`\r\n","Url":"https://github.com/dotnet/corert/issues/8241","RelatedDescription":"Open issue \"Cannot load 'System.Security.Cryptography.Native.Apple' after recent CoreRT upgrade\" (#8241)"},{"Id":"662429254","IsPullRequest":false,"CreatedAt":"2020-07-21T04:30:36","Actor":"christianscheuer","Number":"8240","RawContent":null,"Title":"FailFastException since upgrading CoreRT","State":"closed","Body":"While working on getting our product to work with Big Sur, I upgraded our build to newest CoreRT (which we, admittingly, hadn't done in a pretty long while).\r\n\r\nWith the current tip of CoreRT we're getting a failfast with this stacktrace:\r\n\r\n```\r\nthread #6, stop reason = signal SIGABRT\r\n  * frame #0: 0x00007fff5da972c6 libsystem_kernel.dylib`__pthread_kill + 10\r\n    frame #1: 0x00007fff5db52bf1 libsystem_pthread.dylib`pthread_kill + 284\r\n    frame #2: 0x00007fff5da016a6 libsystem_c.dylib`abort + 127\r\n    frame #3: 0x0000000100d6f9e9 sfbackend`::RaiseFailFastException(arg1=<unavailable>, arg2=<unavailable>, arg3=<unavailable>) at PalRedhawkUnix.cpp:149:5 [opt]\r\n    frame #4: 0x0000000100d248ce sfbackend`StackFrameIterator::CalculateCurrentMethodState() [inlined] PalRaiseFailFastException(arg1=<unavailable>, arg3=1) at PalRedhawkFunctions.h:184:5 [opt]\r\n    frame #5: 0x0000000100d248c0 sfbackend`StackFrameIterator::CalculateCurrentMethodState(this=0x000070000a2caef0) at StackFrameIterator.cpp:1712 [opt]\r\n    frame #6: 0x0000000100d26a38 sfbackend`Thread::GcScanRootsWorker(this=0x000000010fd017e0, pfnEnumCallback=0x0000000100d4c990, pvCallbackData=0x000070000a2cb140, frameIterator=0x000070000a2caef0) at thread.cpp:515:27 [opt]\r\n    frame #7: 0x0000000100d26895 sfbackend`Thread::GcScanRoots(this=0x000000010fd017e0, pfnEnumCallback=<unavailable>, pvCallbackData=<unavailable>) at thread.cpp:422:5 [opt]\r\n    frame #8: 0x0000000100d1e845 sfbackend`GCToEEInterface::GcScanRoots(fn=(sfbackend`WKS::GCHeap::Promote(Object**, ScanContext*, unsigned int) at gc.cpp:35709), condemned=<unavailable>, max_gen=<unavailable>, sc=0x000070000a2cb140)(Object**, ScanContext*, unsigned int), int, int, ScanContext*) at gcrhscan.cpp:79:22 [opt]\r\n    frame #9: 0x0000000100d401b6 sfbackend`WKS::gc_heap::mark_phase(condemned_gen_number=2, mark_only_p=NO) at gc.cpp:20220:9 [opt]\r\n    frame #10: 0x0000000100d3d171 sfbackend`WKS::gc_heap::gc1() at gc.cpp:16159:13 [opt]\r\n    frame #11: 0x0000000100d47d4d sfbackend`WKS::gc_heap::garbage_collect(n=0) at gc.cpp:0:21 [opt]\r\n    frame #12: 0x0000000100d382a7 sfbackend`WKS::GCHeap::GarbageCollectGeneration(this=<unavailable>, gen=0, reason=reason_alloc_loh) at gc.cpp:37156:9 [opt]\r\n    frame #13: 0x0000000100d397ab sfbackend`WKS::gc_heap::trigger_gc_for_alloc(gen_number=<unavailable>, gr=<unavailable>, msl=0x0000000105478a84, loh_p=<unavailable>, take_state=<unavailable>) at gc.cpp:13394:14 [opt]\r\n    frame #14: 0x0000000100d3a7df sfbackend`WKS::gc_heap::try_allocate_more_space(acontext=0x000070000a2cb360, size=1701864, flags=32, gen_number=<unavailable>) at gc.cpp:13517:17 [opt]\r\n    frame #15: 0x0000000100d5d3e1 sfbackend`WKS::gc_heap::allocate_uoh_object(unsigned long, unsigned int, int, long long&) [inlined] WKS::gc_heap::allocate_more_space(acontext=0x0000000000000000, size=1701864, flags=32, alloc_generation_number=3) at gc.cpp:13953:18 [opt]\r\n    frame #16: 0x0000000100d5d3c3 sfbackend`WKS::gc_heap::allocate_uoh_object(jsize=<unavailable>, flags=32, gen_number=3, alloc_bytes=0x0000000114a00018) at gc.cpp:32530 [opt]\r\n    frame #17: 0x0000000100d6164b sfbackend`WKS::GCHeap::Alloc(this=<unavailable>, context=<unavailable>, size=1701832, flags=32) at gc.cpp:36138:30 [opt]\r\n    frame #18: 0x0000000100d1daff sfbackend`::RhpGcAlloc(pEEType=<unavailable>, uFlags=<unavailable>, cbSize=<unavailable>, pTransitionFrame=<unavailable>) at gcrhenv.cpp:288:54 [opt]\r\n    frame #19: 0x0000000100d804d3 sfbackend`RhpNewArrayRare at AllocFast.S:307\r\n    frame #20: 0x0000000101e55002 sfbackend`S_P_Reflection_Execution_System_Collections_Generic_LowLevelList_1<S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation_FunctionPointerOffsetPair>__ToArray + 34\r\n    frame #21: 0x0000000101a2a390 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__ComputeLdftnReverseLookup_InvokeMap + 704\r\n    frame #22: 0x0000000101a29a61 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__GetLdFtnReverseLookups_Helper + 625\r\n    frame #23: 0x0000000101a29f7e sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__TryGetMethodForStartAddress + 302\r\n    frame #24: 0x0000000101a2ba88 sfbackend`S_P_Reflection_Execution_Internal_Reflection_Execution_ReflectionExecutionDomainCallbacksImplementation__GetMethodBaseFromStartAddressIfAvailable + 56\r\n    frame #25: 0x00000001014a82de sfbackend`S_P_CoreLib_Internal_DeveloperExperience_DeveloperExperience__TryGetMethodBase + 46\r\n    frame #26: 0x00000001014485f8 sfbackend`S_P_CoreLib_System_Diagnostics_StackFrame__InitializeForIpAddress + 136\r\n    frame #27: 0x0000000101448b23 sfbackend`S_P_CoreLib_System_Diagnostics_StackTrace__InitializeForIpAddressArray + 275\r\n    frame #28: 0x00000001014a965a sfbackend`S_P_CoreLib_Internal_Diagnostics_StackTraceHelper__FormatStackTrace_0 + 58\r\n    frame #29: 0x00000001013c50b9 sfbackend`S_P_CoreLib_System_Exception__ToString + 121\r\n    frame #30: 0x0000000101846bda sfbackend`sfbackend_SoundFlow_Shortcuts_StatsController__PushLoop_d__34__MoveNext + 1850\r\n    frame #31: 0x0000000100d80708 sfbackend`RhpCallCatchFunclet at ExceptionHandling.S:335\r\n    frame #32: 0x000000010149c822 sfbackend`S_P_CoreLib_System_Runtime_EH__DispatchEx + 578\r\n    frame #33: 0x000000010149c580 sfbackend`S_P_CoreLib_System_Runtime_EH__RhThrowEx + 80\r\n    frame #34: 0x0000000100d80630 sfbackend`RhpThrowEx at ExceptionHandling.S:152\r\n    frame #35: 0x00000001014a2a3c sfbackend`S_P_CoreLib_System_Runtime_ExceptionServices_ExceptionDispatchInfo__Throw + 28\r\n    frame #36: 0x00000001014a47ab sfbackend`S_P_CoreLib_System_Runtime_CompilerServices_TaskAwaiter__ThrowForNonSuccess + 187\r\n    frame #37: 0x00000001014a46e6 sfbackend`S_P_CoreLib_System_Runtime_CompilerServices_TaskAwaiter__HandleNonSuccessAndDebuggerNotification + 70\r\n    frame #38: 0x0000000101846590 sfbackend`sfbackend_SoundFlow_Shortcuts_StatsController__PushLoop_d__34__MoveNext + 240\r\n```\r\n\r\nThe method in question is an async method with several nested try/catch blocks and while + for loops.\r\n\r\nAny input as to how to debug / figure out why this issue occurs would be very much appreciated :)\r\n","Url":"https://github.com/dotnet/corert/issues/8240","RelatedDescription":"Closed issue \"FailFastException since upgrading CoreRT\" (#8240)"},{"Id":"662323175","IsPullRequest":false,"CreatedAt":"2020-07-20T22:19:52","Actor":"christianscheuer","Number":"8239","RawContent":null,"Title":"\"Failed to change helper page protection to read / write\" assert on macOS Big Sur (Rosetta 2)","State":"open","Body":"Hi all,\r\n\r\nIn the process of preparing our product for the Apple ARM switch, running a CoreRT compiled binary, we're hitting this assert:\r\nhttps://github.com/dotnet/corert/blob/bb212a9d2083046724f48e206f47b7dfb78d9979/src/Native/Runtime/unix/PalRedhawkUnix.cpp#L1207\r\n\r\nI suspect this may be related to how Rosetta 2 translates/recompiles instructions on the fly which could mean they might disallow read/write access to code pages - but I can't find any documentation on whether or not that's the case.\r\n\r\nIs there another way to flush the process write buffers rather than using the mprotect call, that we could utilize for Big Sur / Rosetta 2?","Url":"https://github.com/dotnet/corert/issues/8239","RelatedDescription":"Open issue \"\"Failed to change helper page protection to read / write\" assert on macOS Big Sur (Rosetta 2)\" (#8239)"},{"Id":"659524860","IsPullRequest":true,"CreatedAt":"2020-07-17T19:55:10","Actor":"yowl","Number":"8238","RawContent":null,"Title":"Wasm: Upgrade emscripten for thread destructor support on thread termination","State":"closed","Body":"Updates emscripten to the latest which should allow thread support to be enabled in Wasm as previous versions do not always call thread destructors. https://github.com/emscripten-core/emscripten/issues/10809","Url":"https://github.com/dotnet/corert/pull/8238","RelatedDescription":"Closed or merged PR \"Wasm: Upgrade emscripten for thread destructor support on thread termination\" (#8238)"},{"Id":"659114862","IsPullRequest":true,"CreatedAt":"2020-07-17T18:32:15","Actor":"MichalStrehovsky","Number":"8237","RawContent":null,"Title":"Sync GC with dotnet/runtime","State":"closed","Body":"The GCInterface we have in CoreRT is not compatible with the live GCInterface in the runtimelabs repo. This brings current GC sources over.","Url":"https://github.com/dotnet/corert/pull/8237","RelatedDescription":"Closed or merged PR \"Sync GC with dotnet/runtime\" (#8237)"},{"Id":"658953721","IsPullRequest":false,"CreatedAt":"2020-07-17T07:18:05","Actor":"RalfKornmannEnvision","Number":"8236","RawContent":null,"Title":"ARM64 and cross compile support","State":"open","Body":"About a year a year ago I was working on an evaluation to use CoreRT to port the C# part of PC/Windows based game to they major game consoles (XBox One; PlayStation 4 and Switch). The Team had it already running with Mono but was not satisfied with the overall performances. Therefore I was tasked with checking if the performances can be improved or finding an alternative to using Mono. \r\n\r\nAs getting CoreRT working on the XBox was an very easy task I was able to get the core module of our C# code run in a few hours. As it runs more than twice as fast compared to Mono it was decided to go ahead. PlayStation was a little bit more work but it worked after a few days and showed the same performances improvements. Unfortunately while goingon to the Switch I noticed that the ARM64 support was incomplete and using ARM was not an option because of some limitations on the target system. As the team still wanted the performances improvements I started to implement the missing parts. It took some time but I was able to get our test case running and again it was more than twice as fast as the Mono version. It does not use all .Net features therefore there are still parts missing. But as our test test case (around 5MB of C# code) was able to run for hours with the precise GC I assume it is at least a big part.\r\n\r\nUnfortunately priorities changed and this project was put on hold. After things have changed again it was decided to give a switch from Mono to CoreRT a second try. This time I although got the permission to submit anything that does not touch the various NDAs. As you might assume I needed to add code on different places including the jit itself. As anything was done on a now nearly one year old version I need to reintegrate all these changes again. But I'd like to make sure they can easily go back in the main code branch. \r\n\r\nTherefore the question on which of these changes you are interested in and what's your recommended work flow?\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8236","RelatedDescription":"Open issue \"ARM64 and cross compile support\" (#8236)"},{"Id":"658291999","IsPullRequest":false,"CreatedAt":"2020-07-16T15:29:50","Actor":"ogxd","Number":"8234","RawContent":null,"Title":"Link error 1181 when building the NativeLibrary sample as a shared library","State":"closed","Body":"I just cloned the repository.\r\n\r\nThe C# dll builds fine, but then when I try to compile it as a shared library using : \r\n`dotnet publish /p:NativeLib=Shared -r win-x64 -c Release`\r\n\r\nIt throws the following exception : \r\n`LINK : fatal error LNK1181: cannot open input file 'kernel32.lib' [...\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]\r\n...\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-29116-02\\build\\Microsoft.NETCore.Native.targets(310,5): error MSB3073: The command \"link  @\"obj\\Release\\netstandard2.0\\win-x64\\native\\link.rsp\"\" exited with code 1181. [...\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]`\r\n\r\nCreating a static library works fine however","Url":"https://github.com/dotnet/corert/issues/8234","RelatedDescription":"Closed issue \"Link error 1181 when building the NativeLibrary sample as a shared library\" (#8234)"},{"Id":"658229197","IsPullRequest":false,"CreatedAt":"2020-07-16T14:37:11","Actor":"jnkarate","Number":"8233","RawContent":null,"Title":"Question about When this will be Ready for Industry","State":"closed","Body":"When will this be ready for industry use, specifically the ability to build a .NET Core library as a .so (linux) and a .dylib (mac)?","Url":"https://github.com/dotnet/corert/issues/8233","RelatedDescription":"Closed issue \"Question about When this will be Ready for Industry\" (#8233)"},{"Id":"656869635","IsPullRequest":true,"CreatedAt":"2020-07-15T16:13:46","Actor":"yowl","Number":"8229","RawContent":null,"Title":"Wasm: fix commit version for emsdk","State":"closed","Body":"This PR fixes the commit version of Emscripten, the build environment, not the actual compiler.  Currently the head is pulled and if Emscripten commit a breaking change, the Wasm CI fails, as happened recently.  They've actually fixed that particular problem, but going forwards it's probably a good idea.","Url":"https://github.com/dotnet/corert/pull/8229","RelatedDescription":"Closed or merged PR \"Wasm: fix commit version for emsdk\" (#8229)"},{"Id":"657153199","IsPullRequest":true,"CreatedAt":"2020-07-15T12:07:53","Actor":"MichalStrehovsky","Number":"8231","RawContent":null,"Title":"Don't mark object files incremental linker compatible","State":"closed","Body":"From a quick search in the LLVM codebase, the only thing this controls is whether to generate a timestamp into the object file in PE/COFF outputs. This breaks output determinism.\r\n\r\nWe disable incremental linking anyway:\r\n\r\nhttps://github.com/dotnet/corert/blob/692e443e3427e43f54b0e43567d7df761a47c961/src/BuildIntegration/Microsoft.NETCore.Native.Windows.props#L72-L73","Url":"https://github.com/dotnet/corert/pull/8231","RelatedDescription":"Closed or merged PR \"Don't mark object files incremental linker compatible\" (#8231)"},{"Id":"656980224","IsPullRequest":false,"CreatedAt":"2020-07-15T00:40:21","Actor":"christianscheuer","Number":"8230","RawContent":null,"Title":"Investigating LLVM as a general backend for x86, x64 and arm64 code generation","State":"open","Body":"Per our chat on gitter.im/dotnet/corert today, we are investigating whether or not it makes sense for us to put some work into getting LLVM as a backend for CoreRT. (For a full context of why we need that, please refer to the gitter conversation, or feel free to contact me directly)\r\n\r\nThanks to all the great work that's already been done via LLVM for wasm, perhaps the project wouldn't be as crazy as I immediately think.\r\n\r\nWith help from @MichalStrehovsky and @yowl, and based on Michal's zerosharp code, I got a tiny little no-corelib Hello world to compile via LLVM an x86 Mac executable:\r\nhttps://github.com/dotnet/corert/compare/master...christianscheuer:macllvm\r\n\r\nTo test it, make sure to install the prerequisites (it needs llvm 10.0 and the MacOS 10.13 SDK installed, see the README for more info), then build CoreRT in Debug and skip the tests: `./build.sh skiptests`, then go into the `tests/src/llvm` directory and run `./build.sh`.\r\nIt will run CSC to compile to IL, run the modified ILC from the repo to compile to bitcode (which uses the WebAssembly LLVM backend with some hardcoded modifications) - and then use the installed LLVM 10 linker (it needs to be the same major version of LLVM that's used to produce the bitcode, and we're using libLLVM 10 to produce the bitcode) to produce a runnable executable. It then runs it, it prints Hello world and returns 42 :)\r\n\r\n--\r\n\r\nNow all of this raises a bunch of questions it would be great to get your input to.\r\n\r\n- Assuming that we would be going down this path, I expect the first step would be to look at how to refactor the WebAssembly backend so that a new, generic ILToLLVMImporter can be created as a base class, and have ILToWebAssemblyImporter inherit from that, as well as other derived classes for the new x86, x64, arm64 targets (or, some other structure). For example, I suspect many opcode importers, stack management etc. should be the same no matter if the \"architecture\" is wasm or x64 (accounting for different pointer sizes), so there should be a lot of code that can be reused. Things like the shadow stack however I don't think we'll need for anything but wasm, if I understand the reasons behind it correctly, so there would be a challenge to see how to structure the code so both a shadow stack based and regular stack based version can coexist.\r\nSo the question is - with all of this in mind: How would you approach code structuring of such an endeavor?\r\nObviously we can do a clean copy-paste into a different directory, but I thought the two implementations could benefit from each other if they were linked...\r\n\r\n- Overall engineering plan\r\nWhat would be the best way to approach the rest of the bringup, once that initial refactor has been done? What would be the best order of x64-ifying it (ie. add support for 8 byte pointer sizes, potentially remove the shadow stack, etc.)\r\nAny other considerations?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8230","RelatedDescription":"Open issue \"Investigating LLVM as a general backend for x86, x64 and arm64 code generation\" (#8230)"},{"Id":"656116271","IsPullRequest":true,"CreatedAt":"2020-07-14T06:41:21","Actor":"MichalStrehovsky","Number":"8228","RawContent":null,"Title":"Collapse MetadataWriter into MetadataTransform","State":"closed","Body":"The original reason why these were split is to make it possible to share the writer with the .NET Native compiler. This is no longer needed.","Url":"https://github.com/dotnet/corert/pull/8228","RelatedDescription":"Closed or merged PR \"Collapse MetadataWriter into MetadataTransform\" (#8228)"},{"Id":"656115958","IsPullRequest":true,"CreatedAt":"2020-07-14T06:40:31","Actor":"MichalStrehovsky","Number":"8227","RawContent":null,"Title":"Delete unused files","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8227","RelatedDescription":"Closed or merged PR \"Delete unused files\" (#8227)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"674754110","IsPullRequest":true,"CreatedAt":"2020-08-07T04:47:06","Actor":"dotnet-maestro[bot]","Number":"12819","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: e251dd77-ab9f-49fc-4299-08d828bd4fbd\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 4:18 AM\r\n- **Commit**: dba2fa57432b4bd9cc7880e2c6fe3acdd01bba3c\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20379.3 to 3.8.0-2.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e251dd77-ab9f-49fc-4299-08d828bd4fbd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12819","RelatedDescription":"Open PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/roslyn\" (#12819)"},{"Id":"674753894","IsPullRequest":true,"CreatedAt":"2020-08-07T04:46:28","Actor":"dotnet-maestro[bot]","Number":"12818","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 4e2127c6-ddee-47cc-71b4-08d8080280bd\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 4:18 AM\r\n- **Commit**: dba2fa57432b4bd9cc7880e2c6fe3acdd01bba3c\r\n- **Branch**: refs/heads/master-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: from 3.8.0-2.20379.3 to 3.8.0-2.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4e2127c6-ddee-47cc-71b4-08d8080280bd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12818","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/roslyn\" (#12818)"},{"Id":"674742757","IsPullRequest":true,"CreatedAt":"2020-08-07T04:11:44","Actor":"dsplaisted","Number":"12817","RawContent":null,"Title":"Refactor SDK resolver out from MSBuildSdkResolver","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/12817","RelatedDescription":"Open PR \"Refactor SDK resolver out from MSBuildSdkResolver\" (#12817)"},{"Id":"674661814","IsPullRequest":true,"CreatedAt":"2020-08-07T03:34:37","Actor":"jmarolf","Number":"12816","RawContent":null,"Title":"fix additional space in properties","State":"closed","Body":"fixes #12784","Url":"https://github.com/dotnet/sdk/pull/12816","RelatedDescription":"Closed or merged PR \"fix additional space in properties\" (#12816)"},{"Id":"674269537","IsPullRequest":true,"CreatedAt":"2020-08-07T01:51:38","Actor":"dotnet-maestro[bot]","Number":"12804","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200805.1\r\n- **Date Produced**: 8/5/2020 3:07 PM\r\n- **Commit**: 8be1ccd1047a7febcb347a18f4cc9f5b9e99cdd7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-rc.1.20404.1 to 5.0.0-rc.1.20405.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12804","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#12804)"},{"Id":"674273476","IsPullRequest":true,"CreatedAt":"2020-08-07T01:31:02","Actor":"dotnet-maestro[bot]","Number":"12806","RawContent":null,"Title":"[master] Update dependencies from dotnet/roslyn-analyzers","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n## From https://github.com/dotnet/roslyn-analyzers\r\n- **Subscription**: e7c40fb8-9651-4ba2-dbe8-08d81c92f408\r\n- **Build**: 20200805.4\r\n- **Date Produced**: 8/6/2020 3:18 AM\r\n- **Commit**: b22019435de10dc59bfccaaa9b2dd08e9eb4a3b6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.NetAnalyzers**: from 3.3.0-beta3.20404.8 to 3.3.0-beta3.20405.4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e7c40fb8-9651-4ba2-dbe8-08d81c92f408)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12806","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/roslyn-analyzers\" (#12806)"},{"Id":"674075630","IsPullRequest":true,"CreatedAt":"2020-08-07T01:09:59","Actor":"dotnet-maestro[bot]","Number":"12800","RawContent":null,"Title":"[master] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200806.1\r\n- **Date Produced**: 8/6/2020 6:53 AM\r\n- **Commit**: e8c17c128ed847d4acd278b42a02df9621bd1652\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n  - **Microsoft.Build**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12800","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/msbuild\" (#12800)"},{"Id":"674638255","IsPullRequest":true,"CreatedAt":"2020-08-06T22:31:55","Actor":"sbomer","Number":"12815","RawContent":null,"Title":"Introduce option to enable trim analysis warnings","State":"open","Body":"New versions of the linker will emit warnings for code that can be broken by trimming. https://github.com/mono/linker/pull/1324 added support for `--nowarn`, which we will use to disable them (the \"opinionated default\") in .NET5 to prevent noise. This change turns them off and adds a new property to let developers opt into the warnings.\r\n\r\nThe new property is called `SuppressTrimAnalysisWarnings`.\r\n\r\nSee some old discussion in https://github.com/dotnet/sdk/pull/12388.","Url":"https://github.com/dotnet/sdk/pull/12815","RelatedDescription":"Open PR \"Introduce option to enable trim analysis warnings\" (#12815)"},{"Id":"674456836","IsPullRequest":true,"CreatedAt":"2020-08-06T21:26:13","Actor":"sfoslund","Number":"12812","RawContent":null,"Title":"Updating target framework version parsing length","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/12614","Url":"https://github.com/dotnet/sdk/pull/12812","RelatedDescription":"Closed or merged PR \"Updating target framework version parsing length\" (#12812)"},{"Id":"674525011","IsPullRequest":true,"CreatedAt":"2020-08-06T18:42:58","Actor":"mateoatr","Number":"12814","RawContent":null,"Title":"Use forward slash as dir separator inside RelativePath","State":"open","Body":"Related to https://github.com/dotnet/runtime/issues/37208. Using a backslash as a directory separator for copied satellite assemblies is causing errors when generating bundles for single file apps, since it's completely valid to use `\\` in a filename. Changing this line seemed like the easiest way to solve this.","Url":"https://github.com/dotnet/sdk/pull/12814","RelatedDescription":"Open PR \"Use forward slash as dir separator inside RelativePath\" (#12814)"},{"Id":"674485792","IsPullRequest":true,"CreatedAt":"2020-08-06T17:33:44","Actor":"sfoslund","Number":"12813","RawContent":null,"Title":"Sort windows supported platform versions in descending order","State":"open","Body":"Fixes https://github.com/dotnet/sdk/issues/12629","Url":"https://github.com/dotnet/sdk/pull/12813","RelatedDescription":"Open PR \"Sort windows supported platform versions in descending order\" (#12813)"},{"Id":"674429196","IsPullRequest":false,"CreatedAt":"2020-08-06T16:08:12","Actor":"wli3","Number":"12811","RawContent":null,"Title":"No error when Microsoft.NET.Sdk + net5.0 (without net5.0-windows)","State":"open","Body":"```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/12811","RelatedDescription":"Open issue \"No error when Microsoft.NET.Sdk + net5.0 (without net5.0-windows)\" (#12811)"},{"Id":"674306471","IsPullRequest":true,"CreatedAt":"2020-08-06T15:48:28","Actor":"dotnet-maestro[bot]","Number":"12807","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20200806.1\r\n- **Date Produced**: 8/6/2020 1:04 PM\r\n- **Commit**: cc389d808931f6629c20552d324e781a877addcd\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli**: from 5.0.0-rc.1.20403.1 to 5.0.0-rc.1.20406.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12807","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12807)"},{"Id":"674410811","IsPullRequest":false,"CreatedAt":"2020-08-06T15:40:50","Actor":"sfoslund","Number":"12810","RawContent":null,"Title":"Add end to end tests for SDK resolver global.json resolution","State":"open","Body":"See original comment here: https://github.com/dotnet/sdk/pull/12633#discussion_r466053772\r\n\r\nDepends on https://github.com/dotnet/msbuild/issues/5618","Url":"https://github.com/dotnet/sdk/issues/12810","RelatedDescription":"Open issue \"Add end to end tests for SDK resolver global.json resolution\" (#12810)"},{"Id":"674271229","IsPullRequest":true,"CreatedAt":"2020-08-06T15:19:21","Actor":"dotnet-maestro[bot]","Number":"12805","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 769e6472-e796-4bcb-a0ac-08d7dbf4acc5\r\n- **Build**: 20200805.2\r\n- **Date Produced**: 8/6/2020 12:42 AM\r\n- **Commit**: e88e769ea68f2899cbd9b9b0afc405b87744ac04\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: from 5.0.0-preview.3.20405.1 to 5.0.0-preview.3.20405.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12805","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from mono/linker\" (#12805)"},{"Id":"674259116","IsPullRequest":true,"CreatedAt":"2020-08-06T14:52:40","Actor":"dotnet-maestro[bot]","Number":"12802","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200803.5\r\n- **Date Produced**: 8/3/2020 9:14 PM\r\n- **Commit**: 7385e2722b9fa517314aa5db1fa598a8d417b3c7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.SignTool**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12802","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12802)"},{"Id":"674358361","IsPullRequest":false,"CreatedAt":"2020-08-06T14:28:49","Actor":"johndaintree","Number":"12809","RawContent":null,"Title":"No support to marshal Strings in structures to and from wchar_t.","State":"open","Body":"I have a similar issue to the (now close, but not fixed) one made here:\r\n\r\nhttps://github.com/dotnet/runtime/issues/8271#issuecomment-561912518\r\n\r\nIn that I have a lot of unmanaged code that uses structures that contain pointers to arrays of wchar_t. I'd like to be able to marshal these structures in an out of managed code as Strings.\r\n\r\nHowever, there is no UnmanagedType field that will do this.  There is UnmanagedTtype.LPWStr, which will work for Windows (2 byte wchar_t), but no equivalent for the Unixes (which have a 4 byte wchar_t). The only portable option is to use UnmanagedType.LPUTF8Str but then I'll have to change all my unmanaged code (in multiple places) to cope.\r\n\r\nCustom marshalling also doesn't work on fields in structures- otherwise I'd use that. I guess I could refactor all the code into functions with a parameter per field in the structure  - I believe that custom marshalling will work there. But it seems like a lot hoops to jump though where ( I reckon) the built in marshaller could do it.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/12809","RelatedDescription":"Open issue \"No support to marshal Strings in structures to and from wchar_t.\" (#12809)"},{"Id":"674323803","IsPullRequest":true,"CreatedAt":"2020-08-06T13:41:34","Actor":"dotnet-maestro[bot]","Number":"12808","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200805.17\r\n- **Date Produced**: 8/6/2020 9:02 AM\r\n- **Commit**: 0f7370baa68c5809f93095cbce9bf614f44cc731\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12808","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#12808)"},{"Id":"674262377","IsPullRequest":false,"CreatedAt":"2020-08-06T12:07:15","Actor":"rogatec","Number":"12803","RawContent":null,"Title":"dotnet publish --no-build error MSB4018 ComputeManagedAssemblies","State":"open","Body":"Hi,\r\n\r\nregarding to the issue #9552 I am encountering the following error:\r\n\r\nI am trying to publish a dotnet core 3.1. cli with a project reference to a netstandard2.0 library.\r\n\r\n## Steps to reproduce\r\nI created a sample .net core 3.1 console app which I've uploaded, so you can reproduce the issue.\r\n\r\n> https://github.com/rogatec/Dotnet31ConsoleApp\r\n\r\n1. clone the project\r\n2. Within the root folder execute the following\r\n    - `dotnet restore`\r\n    - `dotnet build --no-restore -c Release`\r\n    - `dotnet test --no-build -c Release`\r\n    - `dotnet publish \"Dotnet31ConsoleApp/Dotnet31ConsoleApp.csproj\" --no-build -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:ReadyToRun=true -p:ReadyToRunShowWarnings=true -p:Version=1.0 -o publish/win`\r\n\r\n> Do not use VS publish option. If so delete the file from bin folder\r\n\r\n## Expected behavior\r\nThe project is successfully published in the given output path \"publish/win\".\r\n\r\n## Actual behavior\r\nI am getting the following error stack trace:\r\n\r\n```bash\r\nMicrosoft (R)-Build-Engine, Version 16.6.0+5ff7b0c9e für .NET Core\r\nCopyright (C) Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018: Unerwarteter Fehler bei der ComputeManagedAssemblies-Aufgabe. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018: System.IO.FileNotFoundException: Could not find file 'D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\obj\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.dll'. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018: File name: 'D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\obj\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.dll' [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Mono.Cecil.ModuleDefinition.GetFileStream(String fileName, FileMode mode, FileAccess access, FileShare share) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Mono.Cecil.ModuleDefinition.ReadModule(String fileName, ReaderParameters parameters) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Mono.Cecil.ModuleDefinition.ReadModule(String fileName) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Utils.IsManagedAssembly(String fileName) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at ILLink.Tasks.ComputeManagedAssemblies.<>c.<Execute>b__8_0(ITaskItem f) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.Linq.Enumerable.WhereArrayIterator`1.ToArray() [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at ILLink.Tasks.ComputeManagedAssemblies.Execute() [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(136,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\n``` \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nλ dotnet --info\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.1.302\r\n Commit:    41faccf259\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.302\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.6\r\n  Commit:  3acd9b0cd1\r\n\r\n.NET Core SDKs installed:\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n## Additional information\r\n\r\nI used all those fancy new options, but with just `dotnet publish \"Dotnet31ConsoleApp/Dotnet31ConsoleApp.csproj\" --no-build -c Release -r win-x64` I am receiving the following error output:\r\n\r\n```bash\r\nMicrosoft (R)-Build-Engine, Version 16.6.0+5ff7b0c9e für .NET Core\r\nCopyright (C) Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(147,5): error MSB3030: Datei \"D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\bin\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.runtimeconfig.json\" konnte nicht kopiert werden, da die Datei nicht gefunden wurde. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(147,5): error MSB3030: Datei \"obj\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.dll\" konnte nicht kopiert werden, da die Datei nicht gefunden wurde. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(147,5): error MSB3030: Datei \"D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\bin\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.deps.json\" konnte nicht kopiert werden, da die Datei nicht gefunden wurde. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(147,5): error MSB3030: Datei \"obj\\Release\\netcoreapp3.1\\win-x64\\Dotnet31ConsoleApp.pdb\" konnte nicht kopiert werden, da die Datei nicht gefunden wurde. [D:\\_Entwicklung\\tmp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp\\Dotnet31ConsoleApp.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/12803","RelatedDescription":"Open issue \"dotnet publish --no-build error MSB4018 ComputeManagedAssemblies\" (#12803)"},{"Id":"674075712","IsPullRequest":true,"CreatedAt":"2020-08-06T09:18:34","Actor":"dotnet-maestro[bot]","Number":"12801","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45952e3d-1468-45d9-1495-08d828bd51eb)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 45952e3d-1468-45d9-1495-08d828bd51eb\r\n- **Build**: 20200806.1\r\n- **Date Produced**: 8/6/2020 6:53 AM\r\n- **Commit**: e8c17c128ed847d4acd278b42a02df9621bd1652\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n  - **Microsoft.Build**: from 16.8.0-preview-20405-02 to 16.8.0-preview-20406-01\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45952e3d-1468-45d9-1495-08d828bd51eb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12801","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/msbuild\" (#12801)"},{"Id":"673945194","IsPullRequest":true,"CreatedAt":"2020-08-06T05:44:00","Actor":"dotnet-maestro[bot]","Number":"12793","RawContent":null,"Title":"[master] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 541ffb79-a58a-4b7b-321c-08d8080363b6\r\n- **Build**: 20200805.2\r\n- **Date Produced**: 8/5/2020 11:21 PM\r\n- **Commit**: 3f5db5a3e40290db66706cdc19c49277fb77b315\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.8.0-preview-20405-03 to 16.8.0-preview-20405-02\r\n  - **Microsoft.Build**: from 16.8.0-preview-20405-03 to 16.8.0-preview-20405-02\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:541ffb79-a58a-4b7b-321c-08d8080363b6)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12793","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/msbuild\" (#12793)"},{"Id":"673952515","IsPullRequest":true,"CreatedAt":"2020-08-06T05:37:13","Actor":"dotnet-maestro[bot]","Number":"12794","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45952e3d-1468-45d9-1495-08d828bd51eb)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 45952e3d-1468-45d9-1495-08d828bd51eb\r\n- **Build**: 20200805.2\r\n- **Date Produced**: 8/5/2020 11:21 PM\r\n- **Commit**: 3f5db5a3e40290db66706cdc19c49277fb77b315\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.8.0-preview-20405-03 to 16.8.0-preview-20405-02\r\n  - **Microsoft.Build**: from 16.8.0-preview-20405-03 to 16.8.0-preview-20405-02\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45952e3d-1468-45d9-1495-08d828bd51eb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12794","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from dotnet/msbuild\" (#12794)"},{"Id":"673970570","IsPullRequest":true,"CreatedAt":"2020-08-06T05:11:44","Actor":"dotnet-maestro[bot]","Number":"12797","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200805.9\r\n- **Date Produced**: 8/6/2020 2:04 AM\r\n- **Commit**: b052c4fcc200633443ccfedb0007e03b4b2340a8\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-rc.1.20405.8 to 5.0.0-rc.1.20405.9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12797","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12797)"},{"Id":"674019525","IsPullRequest":false,"CreatedAt":"2020-08-06T05:05:26","Actor":"wli3","Number":"12799","RawContent":null,"Title":"Winform should not support netcoreapp3.0","State":"open","Body":"![image](https://user-images.githubusercontent.com/6993335/89492935-ae0e5680-d767-11ea-8f2f-4e49dd82d6f1.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/12799","RelatedDescription":"Open issue \"Winform should not support netcoreapp3.0\" (#12799)"},{"Id":"673953532","IsPullRequest":true,"CreatedAt":"2020-08-06T04:23:08","Actor":"dotnet-maestro[bot]","Number":"12795","RawContent":null,"Title":"[master] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: a3c26c65-d5fb-4ade-e67f-08d808024d62\r\n- **Build**: 5.8.0.6753\r\n- **Date Produced**: 7/29/2020 2:03 AM\r\n- **Commit**: ca0c27bc71690ea014c560f50f94a671aa432ff2\r\n- **Branch**: dev\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.8.0-preview.1.6725 to 5.8.0-preview.1.6753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a3c26c65-d5fb-4ade-e67f-08d808024d62)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12795","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from nuget/nuget.client\" (#12795)"},{"Id":"673953535","IsPullRequest":true,"CreatedAt":"2020-08-06T04:08:12","Actor":"dotnet-maestro[bot]","Number":"12796","RawContent":null,"Title":"[release/5.0.1xx-preview8] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0410360-866d-4c30-bfba-08d828bd793b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: c0410360-866d-4c30-bfba-08d828bd793b\r\n- **Build**: 5.8.0.6753\r\n- **Date Produced**: 7/29/2020 2:03 AM\r\n- **Commit**: ca0c27bc71690ea014c560f50f94a671aa432ff2\r\n- **Branch**: dev\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.8.0-preview.1.6725 to 5.8.0-preview.1.6753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0410360-866d-4c30-bfba-08d828bd793b)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12796","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview8] Update dependencies from nuget/nuget.client\" (#12796)"},{"Id":"673972290","IsPullRequest":true,"CreatedAt":"2020-08-06T04:01:31","Actor":"dotnet-maestro[bot]","Number":"12798","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7e1fb3da-4a17-48ac-7060-08d7e6f19e0b)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7e1fb3da-4a17-48ac-7060-08d7e6f19e0b\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/6/2020 12:36 AM\r\n- **Commit**: 0f7d7daceeb78d33bc4719cfdb32f8e97075872f\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 2.0.0-beta.20365.6 to 2.0.0-beta.20405.7\r\n  - **Microsoft.DotNet.SignTool**: from 1.0.0-beta.20365.6 to 1.0.0-beta.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7e1fb3da-4a17-48ac-7060-08d7e6f19e0b)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12798","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#12798)"},{"Id":"673920410","IsPullRequest":true,"CreatedAt":"2020-08-06T02:39:35","Actor":"dotnet-maestro[bot]","Number":"12791","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200805.7\r\n- **Date Produced**: 8/5/2020 11:00 PM\r\n- **Commit**: 25948ab962d56c1982816a5bdfe16f9a97c38620\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.BlazorWebAssembly**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.AspNetCore.Analyzers**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: from 5.0.0-rc.1.20405.5 to 5.0.0-rc.1.20405.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/12791","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#12791)"},{"Id":"673943069","IsPullRequest":false,"CreatedAt":"2020-08-06T01:12:05","Actor":"PureKrome","Number":"12792","RawContent":null,"Title":"dotnet pack \"silently\" fails when a bad -p argument is provided","State":"open","Body":"Hi 👋🏻 \r\n\r\nWhen I pass a bad/invalid `-p` argument to `dotnet pack` I get no error message or anything. I would have expected a bit more info to suggest that I was the idiot and need to fix up the command.\r\n\r\n### Example / current behaviour:\r\n\r\n`dotnet pack <some sln or csproj> -c RELEASE -p:/Version=1.0.0`\r\n\r\nNothing happens, no error message, nothing. Notice the INCORRECT `-p` argument? it _should be_ `-p:Version=1.0.0`\r\n\r\nIf i add \"diagnostic\" logging .. I get ONE line only -> that it tried to execute msbuild.dll to run this command:\r\n\r\n`dotnet pack <some sln or csproj> -c RELEASE -p:/Version=1.0.0 -v diag`\r\n\r\ne.g.\r\n\r\n```\r\nPS C:\\Projects\\Personal\\Foo> dotnet pack .\\src\\Foo\\Foo.csproj -c RELEASE -p:/Version=1.0.0 -v diag\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.1.302\\MSBuild.dll -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\3.1.302\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\3.1.302\\dotnet.dll -maxcpucount -property:Configuration=RELEASE -p:/Version=1.0.0 -restore -target:pack -verbosity:m -verbosity:diag .\\src\\Foo\\Foo.csproj\r\nPS C:\\Projects\\Personal\\Foo>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nI would like to see a better error message to help it easier to diagnose my mistake\r\n\r\ne.g.\r\n\r\n```\r\nPS C:\\> dotnet pack -c RELEASE -p:/Version=1.0.0\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nERROR: An invalid property/parameter \"/Version\" was passed to MSBuild. \r\n\r\nPS C:\\>\r\n```\r\n\r\n### Further info:\r\n\r\n```\r\ndotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.302\r\n Commit:    41faccf259\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.302\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.6\r\n  Commit:  3acd9b0cd1\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/12792","RelatedDescription":"Open issue \"dotnet pack \"silently\" fails when a bad -p argument is provided\" (#12792)"},{"Id":"673918987","IsPullRequest":false,"CreatedAt":"2020-08-05T23:55:04","Actor":"wli3","Number":"12790","RawContent":null,"Title":"dotnet tool search errors","State":"open","Body":"do not provide any search term will result in bad error message.\r\n\r\n```\r\nPS C:\\Users\\kdollard\\source\\repos\\command-line-api\\command-line-api> dotnet tool search \r\nSystem.InvalidOperationException: Sequence contains no elements\r\n   at System.Linq.ThrowHelper.ThrowNoElementsException()\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n   at Microsoft.DotNet.NugetSearch.NugetSearchApiParameter..ctor(AppliedOption appliedOption)\r\n   at Microsoft.DotNet.Tools.Tool.Search.ToolSearchCommand.Execute()\r\n   at Microsoft.DotNet.Cli.DotNetTopLevelCommandBase.RunCommand(String[] args)\r\n   at Microsoft.DotNet.Tools.Tool.ToolCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/12790","RelatedDescription":"Open issue \"dotnet tool search errors\" (#12790)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"658602325","IsPullRequest":false,"CreatedAt":"2020-07-16T21:51:58","Actor":"clairernovotny","Number":"161","RawContent":null,"Title":"Moving microsoft/MSBuild to dotnet/MSBuild","State":"open","Body":"Early next week, we are planning to move `microsoft/msbuild` to `dotnet/msbuild` as part of some maintenance activities of .NET Foundation projects. There should be no impact on forks or links as GitHub will redirect them to the new location.\r\n\r\nPlease let us know if you have any concerns!\r\n\r\n\r\n### Discussion\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/microsoft/msbuild/issues/5523","Url":"https://github.com/dotnet/announcements/issues/161","RelatedDescription":"Open issue \"Moving microsoft/MSBuild to dotnet/MSBuild\" (#161)"},{"Id":"656777247","IsPullRequest":false,"CreatedAt":"2020-07-14T17:27:22","Actor":"rbhanda","Number":"160","RawContent":null,"Title":"July 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on July 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [July 2020 Updates – 2.1.20 and 3.1.6](https://devblogs.microsoft.com/dotnet/net-core-july-2020/)\r\n  * .NET Core 3.1.6 and .NET Core SDK 3.1.106 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.6/3.1.6.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1))\r\n   * .NET Core 2.1.20 and .NET Core SDK 2.1.808 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.20/2.1.20.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1))\r\n* [.NET Core support for Ubuntu 19.10 -- EOL](https://github.com/dotnet/core/issues/4925)\r\n\r\n## .NET Framework\r\n* [July 2020 Security and Quality Rollup Updates]( https://devblogs.microsoft.com/dotnet/net-framework-july-2020-security-and-quality-rollup-updates/)\r\n\r\n* [July 2020 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview/)\r\n\r\n* [July 2020 Cumulative Update Preview for Windows 10, version 2004](https://devblogs.microsoft.com/dotnet/net-framework-july-2020-cumulative-update-preview-for-windows-10-version-2004/)\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/160","RelatedDescription":"Open issue \"July 2020 .NET Updates\" (#160)"},{"Id":"656765637","IsPullRequest":false,"CreatedAt":"2020-07-14T17:06:53","Actor":"rbhanda","Number":"159","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability ","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of an XML file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an ASP.NET Core application, or other application that parses certain types of XML.\r\n\r\nThe security update addresses the vulnerability by restricting  the types that are allowed to be present in the XML payload.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/39296\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.19 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.5 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.6 or SDK 3.1.106 (for Visual Studio 2019 v16.4) or 3.1.302 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1147](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1147)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-07-14_\r\n","Url":"https://github.com/dotnet/announcements/issues/159","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1147 | .NET Core Remote Code Execution Vulnerability \" (#159)"},{"Id":"635635668","IsPullRequest":false,"CreatedAt":"2020-06-09T17:37:53","Actor":"rbhanda","Number":"158","RawContent":null,"Title":"June 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on June 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n**.NET Core**\r\n---\r\n* [June 2020 Updates – 2.1.19 and 3.1.5](https://devblogs.microsoft.com/dotnet/net-core-june-2020/)\r\n   * .NET Core 3.1.5 and .NET Core SDK 3.1.105( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.5/3.1.5.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n   * .NET Core 2.1.19 and .NET Core SDK 2.1.807 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.19/2.1.19.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n* [Alpine 3.12 ](https://github.com/dotnet/core/issues/4750) is now  supported.","Url":"https://github.com/dotnet/announcements/issues/158","RelatedDescription":"Open issue \"June 2020 .NET Updates\" (#158)"},{"Id":"635626476","IsPullRequest":false,"CreatedAt":"2020-06-09T17:22:15","Actor":"blowdart","Number":"157","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\n_The update addresses the vulnerability by correcting how the .NET Core web application handles web requests. The previous update contained an incomplete fix, the runtime and SDK version numbers have now been updated to the runtimes and SDKs that have the complete fix. This new issue has been created for users which subscribe to the announcements via email or other automated means which may not show issue changes._\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/157","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability [Update]\" (#157)"},{"Id":"617017419","IsPullRequest":false,"CreatedAt":"2020-05-12T22:57:13","Actor":"blowdart","Number":"156","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability which exists when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/36313\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.18 or lower\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.4 or lower\r\n* Any .NET 5 application running on .NET 5 Preview 3 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1 you should download and install Runtime 2.1.19 or SDK 2.1.515 (for Visual Studio 2017 v15.9), 2.1.612 (for Visual Studio 2019 v16.0) or 2.1.807 (for Visual Studio 2019 v16.2 or later) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET Core 3.1 you should download and install Runtime 3.1.5 or SDK 3.1.105 (for Visual Studio 2019 v16.4) or 3.1.301 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n* For machines running .NET 5 Preview you should download and install .NET 5 Preview 4 when available from https://dotnet.microsoft.com/download/dotnet/5.0\r\n\r\nIf you have multiple affected versions you must update the runtime or SDKs for each version.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1108](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1108)\r\n\r\n### Revisions\r\n\r\nV1.1 (June 9, 2020): Versions that contain the patch updated.\r\nV1.0 (May 12, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-06-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/156","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1108 | .NET Core Denial of Service Vulnerability\" (#156)"},{"Id":"616825277","IsPullRequest":false,"CreatedAt":"2020-05-12T17:19:31","Actor":"TaraOverfield","Number":"155","RawContent":null,"Title":"May 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on May 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2020 Security and Quality Rollup Updates](https://devblogs.microsoft.com/dotnet/net-framework-may-2020-security-and-quality-rollup-updates/)\r\n\r\n## .NET Core\r\n* [May 2020 Updates – 2.1.18 and 3.1.4](https://devblogs.microsoft.com/dotnet/net-core-may-2020/)\r\n\r\n * .NET Core 3.1.4 and .NET Core SDK 3.1.104 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.4/3.1.4.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.18 and .NET Core SDK 2.1.806 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.18/2.1.18.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/155","RelatedDescription":"Open issue \"May 2020 .NET Updates\" (#155)"},{"Id":"616104772","IsPullRequest":false,"CreatedAt":"2020-05-11T18:52:24","Actor":"terrajobst","Number":"154","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fannouncements)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/announcements/issues/154","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#154)"},{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1291419911474933761","CreatedAt":"2020-08-06T17:04:34+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1291363166790836226","CreatedAt":"2020-08-06T13:19:05+00:00","UserScreenname":"dotnet","Text":"On this week's #OnNET Live, @daveaglick will be talking about #JamStack, static web apps, and @statiqdev!  \n\nTune i… https://t.co/sAZsRw13d7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"1291150999026110464","CreatedAt":"2020-08-05T23:16:01+00:00","UserScreenname":"dotnet","Text":"✅ Find specific character patterns\n✅ Validate text\n✅ Extract, edit, replace, or delete text substrings.\nHere's how… https://t.co/wzMYMjhfrk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":19,"RawContent":null},{"Id":"1291118033960939520","CreatedAt":"2020-08-05T21:05:01+00:00","UserScreenname":"dotnet","Text":"Still have Silverlight apps? They're no simple to rewrite. #dotNETRocks talks to Giovanni Albani about the OpenSilv… https://t.co/noEZB1WnHO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":17,"FavoriteCount":6,"RawContent":null},{"Id":"1291082798296641536","CreatedAt":"2020-08-05T18:45:00+00:00","UserScreenname":"dotnet","Text":"In case you missed it, gRPC-Web for #dotNET is now officially released. With this release gRPC-Web graduates to a f… https://t.co/mXvAOPFPCQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":314,"FavoriteCount":116,"RawContent":null},{"Id":"1291038388804517888","CreatedAt":"2020-08-05T15:48:32+00:00","UserScreenname":"dotnet","Text":"This is your chance.\n\nTune in live, 10am PT, for the next Entity Framework #dotNET Community Standup where the expe… https://t.co/o2CTRQwuro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":10,"RawContent":null},{"Id":"1290695931189325824","CreatedAt":"2020-08-04T17:07:44+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":15,"FavoriteCount":9,"RawContent":null},{"Id":"1290661273580036099","CreatedAt":"2020-08-04T14:50:01+00:00","UserScreenname":"dotnet","Text":"Join members from the #dotNET Desktop teams for our community stand-up covering EF Core 5 updates and WPF roadmap a… https://t.co/tI2mYKkYMM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":15,"RawContent":null},{"Id":"1290443839598190592","CreatedAt":"2020-08-04T00:26:01+00:00","UserScreenname":"dotnet","Text":"#dotNET 5 Preview 7 is now ready for evaluation. See the new updates for:\n➡️ Blazor WebAssembly, accessibility, and… https://t.co/EDEBQVnjRg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":78,"FavoriteCount":42,"RawContent":null},{"Id":"1290402568955408389","CreatedAt":"2020-08-03T21:42:01+00:00","UserScreenname":"dotnet","Text":"A #Jupyter Notebook enables you to share words, images, code AND code results. In this new Data Exposed series, we… https://t.co/tW6NbTih1i","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":16,"FavoriteCount":4,"RawContent":null},{"Id":"1290334116324532227","CreatedAt":"2020-08-03T17:10:01+00:00","UserScreenname":"dotnet","Text":"We just published the best practices for working with regular expressions in #dotNET. Learn how to create efficient… https://t.co/Yp1FUsCtSO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":312,"FavoriteCount":127,"RawContent":null},{"Id":"1290291335962873856","CreatedAt":"2020-08-03T14:20:01+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @ToddHGardner discusses how his team is building their Request Metrics project and ot… https://t.co/SDcstxhE2e","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1289362715320909824","CreatedAt":"2020-08-01T00:50:01+00:00","UserScreenname":"dotnet","Text":"Introducing drawing controls for Shapes and Paths with #XamarinForms! Powerful new cross-platform controls using th… https://t.co/kA6jzhPsk6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":9,"RawContent":null},{"Id":"1289314652753670151","CreatedAt":"2020-07-31T21:39:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, Corey Weathers from @Twilio returns to show us how we can use Twilio’s integration wi… https://t.co/HLWXSoeTXb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":11,"FavoriteCount":11,"RawContent":null},{"Id":"1289247112262164481","CreatedAt":"2020-07-31T17:10:39+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2020-08-07T05:30:34.7457852Z","RunDurationInMilliseconds":13074}