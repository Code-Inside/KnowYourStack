{"Data":{"Blog":{"FeedItems":[{"Title":"Aspire 9.4 is here with a CLI and interactive dashboard features","PublishedOn":"2025-07-29T18:05:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Aspire 9.4 is packed with new features, integrations, and improvements\nThe post Aspire 9.4 is here with a CLI and interactive dashboard features appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/announcing-aspire-9-4/","RawContent":null},{"Title":"MCP C# SDK Gets Major Update: Support for Protocol Version 2025-06-18","PublishedOn":"2025-07-22T17:00:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The MCP C# SDK has been updated to support the latest Model Context Protocol specification (2025-06-18), bringing structured tool output, elicitation support, enhanced security, and more to .NET...","Href":"https://devblogs.microsoft.com/dotnet/mcp-csharp-sdk-2025-06-18-update/","RawContent":null},{"Title":"Ask Mode vs Agent Mode – Choosing the Right Copilot Experience for .NET","PublishedOn":"2025-07-21T17:05:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"GitHub Copilot Chat offers two powerful modes, Ask Mode and Agent Mode, that can dramatically accelerate your development. Learn when to use each mode to get the most out of this tool.\nThe post Ask...","Href":"https://devblogs.microsoft.com/dotnet/ask-mode-vs-agent-mode/","RawContent":null},{"Title":"Building Your First MCP Server with .NET and Publishing to NuGet","PublishedOn":"2025-07-15T20:00:00+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Learn how to create a Model Context Protocol (MCP) server using .NET 10 and publish it to NuGet — making AI capabilities discoverable and reusable across the ecosystem.\nThe post Building Your First...","Href":"https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart/","RawContent":null},{"Title":".NET 10 Preview 6 is now available!","PublishedOn":"2025-07-15T17:22:00+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Find out about the new features in .NET 10 Preview 6 across the .NET runtime, SDK, libraries, ASP.NET Core, Blazor, C#, .NET MAUI, and more!\nThe post .NET 10 Preview 6 is now available! appeared first...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-10-preview-6/","RawContent":null},{"Title":"Customize AI responses from GitHub Copilot","PublishedOn":"2025-07-10T17:15:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Learn how custom instructions can tailor GitHub Copilot's AI responses to your team's exact needs.\nThe post Customize AI responses from GitHub Copilot appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/customize-ai-responses-from-github-copilot/","RawContent":null},{"Title":"How the .NET MAUI Team uses GitHub Copilot for Productivity","PublishedOn":"2025-07-09T17:15:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"How the .NET MAUI Team uses GitHub Copilot for Productivity\nThe post How the .NET MAUI Team uses GitHub Copilot for Productivity appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/maui-team-copilot-tips/","RawContent":null},{"Title":".NET and .NET Framework July 2025 servicing releases updates","PublishedOn":"2025-07-08T19:00:00+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"A recap of the latest servicing updates for .NET and .NET Framework for July 2025.\nThe post .NET and .NET Framework July 2025 servicing releases updates appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-july-2025-servicing-updates/","RawContent":null},{"Title":"Local AI + .NET = AltText Magic in One C# Script","PublishedOn":"2025-07-02T20:00:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Learn how to generate image AltText using .NET 10 and local AI models — all in a single C# file with dotnet run app.cs. A fun and accessible example of what AI can do beyond chat.\nThe post Local AI +...","Href":"https://devblogs.microsoft.com/dotnet/alttext-generator-csharp-local-models/","RawContent":null},{"Title":"Simpler XAML in .NET MAUI 10","PublishedOn":"2025-06-26T19:15:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Make your .NET MAUI XAML more consistent and easier to read with global and implicit XML namespaces.\nThe post Simpler XAML in .NET MAUI 10 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/simpler-xaml-in-dotnet-maui-10/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"52121394499","Type":"IssuesEvent","CreatedAt":"2025-07-15T17:45:44","Actor":"jongalloway","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/364","RelatedDescription":"Opened issue \".NET 10 Preview 6\" (#364) at dotnet/announcements","RelatedBody":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9974. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 6. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview6).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)\n"},{"Id":"51843387392","Type":"IssuesEvent","CreatedAt":"2025-07-08T18:49:02","Actor":"victorisr","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/363","RelatedDescription":"Opened issue \".NET July 2025 Updates\" (#363) at dotnet/announcements","RelatedBody":"On July 08, 2025, we released .NET 9.0.7, .NET 8.0.18 updates.\n\n## Release Notes\n\n* [.NET July 2025 Update - .NET 9.0.7 and .NET 8.0.18](https://github.com/dotnet/core/issues/9967)\n* [.NET 8.0.18 and .NET SDK 8.0.412](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.18/8.0.18.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.7 and .NET SDK 9.0.302](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.7/9.0.7.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in July 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-july-2025-servicing-updates/)."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"52700191353","Type":"IssuesEvent","CreatedAt":"2025-07-29T20:04:31","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/79663","RelatedDescription":"Opened issue \"Hovering mouse over code tooltips stop working\" (#79663) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Hovering-mouse-over-code-tooltips-stop-w/10891809)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:17.12]\nSometimes Visual Studio will randomly stop showing tooltips on mouse hover over methods and members in code.  I have to restart my visual studio instance to get it working again.\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/20/2025, 11:48 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 4/21/2025, 11:09 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Burow, David on 6/29/2025, 09:16 PM: \n\n<p>Tooltips stop functioning less than 5 minutes after starting visual studio. I’ve deleted the .vs folder and the issue immediately returned.</p>\n\n#### Alex Piskarev on 7/22/2025, 09:47 PM: \n\n<p>Definitely still happening on the latest version. I’ve disabled all extraneous (non-Microsoft) extensions and it’s still happening. Although for me, it can take up to an hour or two for them to stop showing up on hover (or hotkey). Restarting visual studio fixes it, until it happens again.</p>\n<p>Highly annoying and reduces productivity.</p>\n<p>Debugging devenv.exe while they are broken does not show any exceptions being thrown.</p>\n"},{"Id":"52698519181","Type":"IssuesEvent","CreatedAt":"2025-07-29T19:19:03","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/79662","RelatedDescription":"Opened issue \"New model classes not recognized without restarting Visual Studio in large projects\" (#79662) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/New-model-classes-not-recognized-without/10943562)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:2022 version 17.14.9]\nI'm experiencing an issue in Visual Studio 2019 when working on larger projects (VB.NET or C#). After creating a new model class file, the project often does not recognize the new class until I completely close and reopen the solution or Visual Studio itself. IntelliSense and build tools fail to detect the new file immediately. This issue does not occur in smaller projects.\n\nI've tried rebuilding the solution and refreshing IntelliSense, but the problem persists. This slows down development significantly. It seems like the file change cache or IntelliSense is not updating properly in larger solutions.\n\nSteps to reproduce:\n\n    Open a large solution.\n\n    Add a new class (e.g., a model in the \"Models\" folder).\n\n    Try to use the new class elsewhere in the project — IntelliSense fails to recognize it.\n\n    Closing and reopening Visual Studio solves the issue.\n\nPlease investigate this behavior. It would be helpful if there were a way to force the IDE to refresh file recognition without restarting the entire application.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/29/2025, 03:35 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 7/29/2025, 06:32 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n"},{"Id":"52698307036","Type":"PullRequestEvent","CreatedAt":"2025-07-29T19:13:33","Actor":"dotnet-policy-service[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/79660","RelatedDescription":"Merged pull request \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79660) at dotnet/roslyn","RelatedBody":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* genlu\n* CyrusNajmabadi\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n"},{"Id":"52698136454","Type":"PullRequestEvent","CreatedAt":"2025-07-29T19:09:10","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/79640","RelatedDescription":"Merged pull request \"Fix logging when item counts change in LoadedProject\" (#79640) at dotnet/roslyn","RelatedBody":"@jasonmalinowski "},{"Id":"52697913849","Type":"PullRequestEvent","CreatedAt":"2025-07-29T19:03:19","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/79661","RelatedDescription":"Opened pull request \"Update debugger.contracts to 18.0.0-beta.25379.1\" (#79661) at dotnet/roslyn","RelatedBody":""},{"Id":"52697318285","Type":"PullRequestEvent","CreatedAt":"2025-07-29T18:48:13","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/78713","RelatedDescription":"Merged pull request \"[release/dev17.12] Update dependencies to ensure coherency\" (#78713) at dotnet/roslyn","RelatedBody":"Coherency update: Failed to perform coherency update for one or more dependencies. Please review the GitHub checks or run `darc update-dependencies --coherency-only` locally against darc-release/dev17.12-5ef1690f-90f8-421c-b52a-cb41980c9338 for more information."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"52700956341","Type":"IssuesEvent","CreatedAt":"2025-07-29T20:25:18","Actor":"marcpopMSFT","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/48541","RelatedDescription":"Closed issue \"dotnet build performance - Windows Vs MacOS Vs Linux\" (#48541) at dotnet/sdk","RelatedBody":"We've noticed some unexpected build performance differences Windows, Mac and Linux machines when running `dotnet build`. (dotnet 8)\n\nWe've run the following tests, trying to keep the tests as fair as we reasonably can. All tests were performed via the command line so as not to introduce differences based on the IDE, all other software was closed except a Microsoft Teams video call which was running during every test. All tests used the same codebase and we ignored the first build time. The numbers are approximate as it wasn't a perfect scenario but the differences are large enough to demonstrate the issue. The Linux did not include the Teams video call, unfortunately.\n\nWe had three setups: (Sorry I don't have some of the precise details as my colleagues are off today, but the specs are close enough to show the issue. Free memory wasn't an issue during any of the tests. All machines have NVME drives)\n\n1) A Macbook with an Apple M3 Max processor. I'm not sure if it's a \"14\" or \"16\" core processor but either way it has 10-12 performance cores, a TDP of 78W and a 3nm process.\n2) A Windows 11 desktop with an Intel Xeon W5-2445 processor. It's a 10 core processor with a TDP of 175W and a 7nm process.\n3) A Windows 11 laptop with an Intel i7-11800H processor. It's an 8 core processor with a TDP of 45W and a 10nm process.\n4) A Linux desktop with an AMD Ryzen 9 processor. It's a 12 core processor but unfortunately I don't know exactly which one.\n\nI like to use process size and TDP to judge a processor's performance, as that also captures the thermal performance for sustained use without thermal throttling.\n\nFrom the specs, you might expect #1 and #2 to be approximately in the same ballpark, as the Macbook's lower TDP is made up for by the smaller / more efficient process. You may also expect #3 to be approximately 3-4x slower than #2 when it throttles down.\n\nCommand used:\n`dotnet build Airsweb.sln --no-incremental --no-restore --property WarningLevel=0`\nWe disabled warnings in order to rule out differences in the terminal performance and we disabled package restoration to rule out differences in network performance.\n\nResults:\n#1 - Build time was around 35 seconds, with the CPU usage pegged at 100%.\n#2 - Build time was around 80 seconds, with the CPU usage pegged at 100% expect for a period during the middle where it dropped to 20%.\n#3 - Build time was around 180 seconds, I'm not sure what the CPU usage was like during this test.\n#4 - Build time was around 40 seconds, I'm not sure what the CPU usage was like during this test. As a reminder, this one did not include the video call.\n\nLooking at these ballpark numbers:\n- Comparing #2 and #3 (Windows desktop and Windows laptop) approximately fits what I would expect based on the processors.\n- I would have expected #1 and #2 (Macbook and Windows desktop) to have approximately the same times as the processors should, on paper, be equivalent_(ish)_.\n- The times for #1 and #4 (Macbook and Linux desktop) are about the same, I'd expect this but with the caveat that I don't know exactly which processor was in the Linux machine.\n\nThe tests were not scientific enough to categorically state that there's a problem, but the performance difference between #1 and #2 was really unexpected. Has anybody else had the same experience and by extension, is this an issue with the dotnet build tool that could be resolved, or is this a fundamental difference between the OSs which cannot be resolved, or have I missed something when I set my expectations on this hardware?"},{"Id":"52700799575","Type":"IssuesEvent","CreatedAt":"2025-07-29T20:20:59","Actor":"marcpopMSFT","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/49827","RelatedDescription":"Closed issue \"Tool install seems to fail when installing a multi-targeted tool for a specific framework when other frameworks in the package are missing\" (#49827) at dotnet/sdk","RelatedBody":"### Describe the bug\n\nDetails are at https://github.com/fsprojects/FSharpLint/pull/748, will fill in later - but this does appear to be an actual problem in our logic. We can't seem to install a lower-TFM-than-expected tool.\n\n\n### To Reproduce\n\nThe assets are downloadable at https://github.com/fsprojects/FSharpLint/actions/runs/16333319389/artifacts/3550501863 - extract this and attempt to install the tool with a command like:\n\n> dotnet tool install --global dotnet-fsharplint --add-source ./artifacts --prerelease --framework net8.0 -v d\n\n### Exceptions (if any)\n\n```\n[NuGet Manager] [Info]   GET https://api.nuget.org/v3/registration5-gz-semver2/dotnet-fsharplint/index.json\n[NuGet Manager] [Info]   OK https://api.nuget.org/v3/registration5-gz-semver2/dotnet-fsharplint/index.json 51ms\n[NuGet Manager] [Info]   GET https://api.nuget.org/v3/registration5-gz-semver2/dotnet-fsharplint/index.json\n[NuGet Manager] [Info]   OK https://api.nuget.org/v3/registration5-gz-semver2/dotnet-fsharplint/index.json 45ms\n[NuGet Manager] [Info]   GET https://api.nuget.org/v3-flatcontainer/dotnet-fsharplint/index.json\n[NuGet Manager] [Info]   OK https://api.nuget.org/v3-flatcontainer/dotnet-fsharplint/index.json 39ms\n[NuGet Manager] [Info]   GET https://api.nuget.org/v3-flatcontainer/dotnet-fsharplint/0.25.1--date20250716-1121.git-1447adf/dotnet-fsharplint.0.25.1--date20250716-1121.git-1447adf.nupkg\n[NuGet Manager] [Info]   OK https://api.nuget.org/v3-flatcontainer/dotnet-fsharplint/0.25.1--date20250716-1121.git-1447adf/dotnet-fsharplint.0.25.1--date20250716-1121.git-1447adf.nupkg 574ms\nSkipping NuGet package signature verification.\nTool 'dotnet-fsharplint' failed to update due to the following:\nThe settings file in the tool's NuGet package is invalid: Settings file 'DotnetToolSettings.xml' was not found in the package.\nTool 'dotnet-fsharplint' failed to install. Contact the tool author for assistance.\nError: Process completed with exit code 1.\n```\n\n### Further technical details\n- Include the output of `dotnet --info`\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version"},{"Id":"52694311165","Type":"IssuesEvent","CreatedAt":"2025-07-29T17:32:23","Actor":"TimPurdum","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/49988","RelatedDescription":"Opened issue \"TypeScript Compilation in Razor Class Library causes build to fail in referencing projects\" (#49988) at dotnet/sdk","RelatedBody":"### Describe the bug\nA Razor Class Library with TypeScript files does not consistently build successfully in .NET 9+\n\n### To Reproduce\n[Repro Project](https://github.com/dymaptic/TypeScriptBuildIssueDemo)\n\n1. Clone the repository.\n2. Open the solution in Visual Studio 2022 or later.\n3. Build the solution or main project (Blazor app `TypeScriptBuildIssueDemo`).\n4. Right-click and Re-build the solution or main project.\n\nThis is also reproducible in VSCode and JetBrains Rider. However, it does not appear to be reproducible from the command line.\nLikely this points to an issue with the parallel build processes of the IDEs.\n\n### Exceptions\n\nYou should see the build failing alternating times with the following error:\n\n```\nSystem.InvalidOperationException: No file exists for the asset at either location 'D:\\TypeScriptBuildIssueDemo\\TypeScriptBuildIssueDemo.Library\\wwwroot\\js\\app.js' or 'wwwroot\\js\\app.js'.\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.StaticWebAsset.ResolveFile(String identity, String originalItemSpec)\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.DefineStaticWebAssets.ResolveFileDetails(String originalItemSpec, String identity)\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.DefineStaticWebAssets.Execute()\n```\n\n### Further technical details\n\n<details><summary>details of dotnet --info</summary>\n<p>\n.NET SDK:\n Version:           10.0.100-preview.6.25358.103\n Commit:            75972a5ba7\n Workload version:  10.0.100-manifests.6616851e\n MSBuild version:   17.15.0-preview-25358-103+75972a5ba\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.26100\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\10.0.100-preview.6.25358.103\\\n\n.NET workloads installed:\n [maccatalyst]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    18.4.10622-net10-p5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.maccatalyst\\18.4.10622-net10-p5\\WorkloadManifest.json\n   Install Type:              Msi\n\n [android]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    36.0.0-preview.5.116/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.android\\36.0.0-preview.5.116\\WorkloadManifest.json\n   Install Type:              Msi\n\n [maui-windows]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    10.0.0-preview.5.25306.5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.maui\\10.0.0-preview.5.25306.5\\WorkloadManifest.json\n   Install Type:              Msi\n\n [ios]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    18.4.10622-net10-p5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.ios\\18.4.10622-net10-p5\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use workload sets when installing new manifests.\nWorkloads are configured to install and update using workload versions, but none were found. Run \"dotnet workload restore\" to install a workload version.\n\nHost:\n  Version:      10.0.0-preview.6.25358.103\n  Architecture: x64\n  Commit:       75972a5ba7\n\n.NET SDKs installed:\n  8.0.412 [C:\\Program Files\\dotnet\\sdk]\n  9.0.205 [C:\\Program Files\\dotnet\\sdk]\n  9.0.301 [C:\\Program Files\\dotnet\\sdk]\n  10.0.100-preview.6.25358.103 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   \n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n</p>\n</details>\n- Visual Studio Version 17.14.7, Windows 11 version 10.0.26100\n"},{"Id":"52690582901","Type":"IssuesEvent","CreatedAt":"2025-07-29T16:03:17","Actor":"dotnet-policy-service[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/49981","RelatedDescription":"Closed issue \"Cannot use NuGet MCP server when using private feed\" (#49981) at dotnet/sdk","RelatedBody":"<!--\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\n\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\n\n-->\n\n### Describe the bug\nAdding a NuGet MCP server with `dnx` to `.mcp.json` / `.vscode/mcp.json` cannot be used when the package is hosted in a private nuget feed. Note that this is **not** simply a feature request, because the exception noted below also happens if the package is added to a local folder feed (and I assume the same applies if the package is hosted on nuget.org). I had to disable / remove the private feed(s) from my nuget.config to get it working.\n\n### To Reproduce\n<!--\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\n\nWe may close this issue if:\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\n- if we will not be able to repro the behavior you're reporting\n-->\nFollow the steps from: https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart/\nPublish to a private nuget feed instead of nuget.org\n\n### Exceptions (if any)\n```\n[NuGet Manager] [Warning] The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\nUnhandled exception: Unable to load the service index for source https://pkgs.dev.azure.com/[org]/_packaging/[feed]/nuget/v3/index.json\n```\n\n### Further technical details\nTested on both VS2022 (17.14.9) and VSCode insiders (1.103.0), with .NET 10 preview 6 SDK installed"},{"Id":"52690581869","Type":"IssuesEvent","CreatedAt":"2025-07-29T16:03:16","Actor":"dotnet-policy-service[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/49983","RelatedDescription":"Closed issue \"`dotnet restore` failes when a no_proxy environment variable exists, that starts with *\" (#49983) at dotnet/sdk","RelatedBody":"### Describe the bug\nIf you run `dotnet restore`, with the system having an environment variable `no_proxy` set to `*.example.com` it will fail with ` Invalid regular expression: /*\\.example\\.com/: Nothing to repeat`\n\n### To Reproduce\n> setx no_proxy *.example.com\n> dotnet restore\n\n### Exceptions (if any)\n> ##[error]SyntaxError: Invalid regular expression: /*\\.example\\.com/: Nothing to repeat\n> ##[error]Packages failed to restore\n\nSeen with dotnet 9.0.302"},{"Id":"52690289825","Type":"PullRequestEvent","CreatedAt":"2025-07-29T15:57:13","Actor":"Copilot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/49987","RelatedDescription":"Opened pull request \"[WIP] Update MSTest in test templates (template_feed directory) to 3.10.0\" (#49987) at dotnet/sdk","RelatedBody":"Thanks for assigning this issue to me. I'm starting to work on it and will keep this PR's description up to date as I form a plan and make progress.\n\nOriginal issue description:\n\n> We should update 3.9.0 to 3.10.0\n\n\nFixes #49856.\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey."},{"Id":"52690255267","Type":"PullRequestEvent","CreatedAt":"2025-07-29T15:56:29","Actor":"Youssef1313","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/49857","RelatedDescription":"Closed pull request \"Update MSTest version from 3.9.0 to 3.9.3 in test templates\" (#49857) at dotnet/sdk","RelatedBody":"This PR updates MSTest version references from 3.9.0 to 3.9.3 in all test template files located in the `template_feed` directory.\n\n## Changes Made\n\nUpdated MSTest version in 4 template project files:\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-CSharp/Company.TestProject1.csproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-FSharp/Company.TestProject1.fsproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-VisualBasic/Company.TestProject1.vbproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/Playwright-MSTest-CSharp/Company.TestProject1.csproj`\n\nEach file had exactly 2 version references updated:\n- `<Project Sdk=\"MSTest.Sdk/3.9.0\">` → `<Project Sdk=\"MSTest.Sdk/3.9.3\">`\n- `<PackageReference Include=\"MSTest\" Version=\"3.9.0\" />` → `<PackageReference Include=\"MSTest\" Version=\"3.9.3\" />`\n\n## Impact\n\nThese template files are used when developers create new MSTest projects using `dotnet new mstest` commands. The updated templates will now reference the latest MSTest version 3.9.3 instead of 3.9.0, ensuring new projects get the latest features and bug fixes.\n\nFixes #49856.\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💡 You can make Copilot smarter by setting up custom instructions, customizing its development environment and configuring Model Context Protocol (MCP) servers. Learn more [Copilot coding agent tips](https://gh.io/copilot-coding-agent-tips) in the docs."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"nxtn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"nxtn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"nxtn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"nxtn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"nxtn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"nxtn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"nxtn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"1527986834","IsPullRequest":true,"CreatedAt":"2023-01-21T00:23:55","Actor":"vseanreesermsft","Number":"28284","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28284","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28284)"},{"Id":"1527873107","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:09","Actor":"vseanreesermsft","Number":"28283","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28283","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28283)"},{"Id":"1514220089","IsPullRequest":true,"CreatedAt":"2022-12-30T22:28:28","Actor":"hoyosjs","Number":"28282","RawContent":null,"Title":" Update 3.1-crossdac to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28282","RelatedDescription":"Closed or merged PR \" Update 3.1-crossdac to 3.1.32\" (#28282)"},{"Id":"1468534279","IsPullRequest":true,"CreatedAt":"2022-11-29T18:58:08","Actor":"vseanreesermsft","Number":"28281","RawContent":null,"Title":"Update branding to 3.1.33","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28281","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.33\" (#28281)"},{"Id":"1440723893","IsPullRequest":true,"CreatedAt":"2022-11-09T18:50:23","Actor":"vseanreesermsft","Number":"28279","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28279","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28279)"},{"Id":"1440752065","IsPullRequest":true,"CreatedAt":"2022-11-08T19:53:36","Actor":"hoyosjs","Number":"28280","RawContent":null,"Title":"v3.1.31 crossdac merge","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28280","RelatedDescription":"Closed or merged PR \"v3.1.31 crossdac merge\" (#28280)"},{"Id":"1432112337","IsPullRequest":true,"CreatedAt":"2022-11-02T20:45:51","Actor":"vseanreesermsft","Number":"28278","RawContent":null,"Title":"Update branding to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28278","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.32\" (#28278)"},{"Id":"1410006325","IsPullRequest":true,"CreatedAt":"2022-10-15T01:57:19","Actor":"hoyosjs","Number":"28277","RawContent":null,"Title":"Remove all other signing off crossdac leg","State":"closed","Body":"The crossdac legs sign diagnostic binaries separately. Remove all other signing steps as unnecessary.﻿\n","Url":"https://github.com/dotnet/coreclr/pull/28277","RelatedDescription":"Closed or merged PR \"Remove all other signing off crossdac leg\" (#28277)"},{"Id":"1408565963","IsPullRequest":true,"CreatedAt":"2022-10-14T00:16:54","Actor":"hoyosjs","Number":"28276","RawContent":null,"Title":"Merge 3.1.30 into crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28276","RelatedDescription":"Closed or merged PR \"Merge 3.1.30 into crossdac\" (#28276)"},{"Id":"1404970163","IsPullRequest":true,"CreatedAt":"2022-10-11T23:19:19","Actor":"vseanreesermsft","Number":"28275","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28275","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28275)"},{"Id":"1386781587","IsPullRequest":true,"CreatedAt":"2022-10-05T02:14:01","Actor":"hoyosjs","Number":"28273","RawContent":null,"Title":"[release/3.1] Use new windows pools","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28273","RelatedDescription":"Closed or merged PR \"[release/3.1] Use new windows pools\" (#28273)"},{"Id":"1396561217","IsPullRequest":true,"CreatedAt":"2022-10-05T01:31:27","Actor":"vseanreesermsft","Number":"28274","RawContent":null,"Title":"Update branding to 3.1.31","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28274","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.31\" (#28274)"},{"Id":"1373834388","IsPullRequest":true,"CreatedAt":"2022-09-15T19:23:54","Actor":"hoyosjs","Number":"28272","RawContent":null,"Title":"[release/3.1-crossdac] Merge 3.1.29 changes into crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28272","RelatedDescription":"Closed or merged PR \"[release/3.1-crossdac] Merge 3.1.29 changes into crossdac\" (#28272)"},{"Id":"1346022555","IsPullRequest":true,"CreatedAt":"2022-09-15T05:42:22","Actor":"hoyosjs","Number":"28267","RawContent":null,"Title":"[release/3.1] Add signing infrastructure for diagnostic binaries","State":"closed","Body":"Use a signing infrastructure orthogonal to microbuild to use other certs for diagnostic binaries.","Url":"https://github.com/dotnet/coreclr/pull/28267","RelatedDescription":"Closed or merged PR \"[release/3.1] Add signing infrastructure for diagnostic binaries\" (#28267)"},{"Id":"1371751677","IsPullRequest":true,"CreatedAt":"2022-09-14T00:33:23","Actor":"vseanreesermsft","Number":"28270","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28270","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28270)"},{"Id":"1371995170","IsPullRequest":true,"CreatedAt":"2022-09-13T20:58:26","Actor":"alexperovich","Number":"28271","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28271","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#28271)"},{"Id":"1363612389","IsPullRequest":true,"CreatedAt":"2022-09-06T18:50:56","Actor":"vseanreesermsft","Number":"28269","RawContent":null,"Title":"Update branding to 3.1.30","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28269","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.30\" (#28269)"},{"Id":"1358085481","IsPullRequest":true,"CreatedAt":"2022-09-01T18:29:24","Actor":"MattGal","Number":"28268","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required to continue building PRs in the dotnet public repo.  The agents and images used in the new project / organization are identical and build regressions are not expected.\r\n\r\nFor questions / concerns, please stop by the .NET Core Engineering Services [First Responders Teams Channel](https://teams.microsoft.com/l/channel/19%3aafba3d1545dd45d7b79f34c1821f6055%40thread.skype/First%2520Responders?groupId=4d73664c-9f2f-450d-82a5-c2f02756606d&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47).\r\n","Url":"https://github.com/dotnet/coreclr/pull/28268","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#28268)"},{"Id":"1336375306","IsPullRequest":true,"CreatedAt":"2022-08-15T19:50:41","Actor":"cshung","Number":"28265","RawContent":null,"Title":"[release/3.1] Reset current_no_gc_region_info after leaving no gc region implicitly","State":"closed","Body":"Backport https://github.com/dotnet/runtime/pull/73602.\r\n\r\n## Customer Impact\r\nCustomers reported occasional `System.InvalidOperationException` with message `The NoGCRegion mode was already in progress` when calling `GC.TryStartNoGCRegion`. This is preventing them from using this optimization and impacting their cold start latencies.\r\n\r\n## Testing\r\nCustomers have tried the fix on .NET 6 overnight and reported the exception never appears again. Meanwhile, there is an unpatched machine and observed 72 exceptions of the same type in the same time interval, proving this does fix the bug.\r\n\r\n## Risk\r\nLow. This only impact customer using `TryStartNoGCRegion`, and this is the right thing to do.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28265","RelatedDescription":"Closed or merged PR \"[release/3.1] Reset current_no_gc_region_info after leaving no gc region implicitly\" (#28265)"},{"Id":"1337020793","IsPullRequest":true,"CreatedAt":"2022-08-12T18:11:08","Actor":"hoyosjs","Number":"28266","RawContent":null,"Title":"Make crossdac build more resilient","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28266","RelatedDescription":"Closed or merged PR \"Make crossdac build more resilient\" (#28266)"},{"Id":"1335383831","IsPullRequest":true,"CreatedAt":"2022-08-11T17:22:32","Actor":"hoyosjs","Number":"28264","RawContent":null,"Title":"Remove unnecessary steps failing publishing","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28264","RelatedDescription":"Closed or merged PR \"Remove unnecessary steps failing publishing\" (#28264)"},{"Id":"1333874561","IsPullRequest":true,"CreatedAt":"2022-08-09T23:23:02","Actor":"hoyosjs","Number":"28263","RawContent":null,"Title":"Release/3.1 crossdac v3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28263","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac v3.1.28\" (#28263)"},{"Id":"1333621360","IsPullRequest":true,"CreatedAt":"2022-08-09T22:21:44","Actor":"vseanreesermsft","Number":"28262","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28262","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28262)"},{"Id":"1326087034","IsPullRequest":true,"CreatedAt":"2022-08-05T08:38:48","Actor":"vseanreesermsft","Number":"28260","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28260","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#28260)"},{"Id":"1326278896","IsPullRequest":true,"CreatedAt":"2022-08-02T19:08:59","Actor":"vseanreesermsft","Number":"28261","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28261","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#28261)"},{"Id":"1305271889","IsPullRequest":true,"CreatedAt":"2022-07-14T20:47:22","Actor":"hoyosjs","Number":"28259","RawContent":null,"Title":"Merge release/3.1 into crossdac for v3.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28259","RelatedDescription":"Closed or merged PR \"Merge release/3.1 into crossdac for v3.1.27\" (#28259)"},{"Id":"1287880240","IsPullRequest":true,"CreatedAt":"2022-07-14T06:56:48","Actor":"ghost","Number":"28256","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/coreclr) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/coreclr) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/coreclr/pull/28256","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#28256)"},{"Id":"1302443364","IsPullRequest":true,"CreatedAt":"2022-07-12T21:05:21","Actor":"wtgodbe","Number":"28258","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28258","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28258)"},{"Id":"1294684428","IsPullRequest":true,"CreatedAt":"2022-07-06T23:51:58","Actor":"mmitche","Number":"28257","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28257","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#28257)"},{"Id":"1274189528","IsPullRequest":true,"CreatedAt":"2022-06-17T17:39:35","Actor":"hoyosjs","Number":"28255","RawContent":null,"Title":"Crossdac v3.1.26","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28255","RelatedDescription":"Closed or merged PR \"Crossdac v3.1.26\" (#28255)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"1586431329","IsPullRequest":true,"CreatedAt":"2023-03-06T20:45:43","Actor":"marcpopMSFT","Number":"13858","RawContent":null,"Title":"Link to tags and announce read only","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13858","RelatedDescription":"Closed or merged PR \"Link to tags and announce read only\" (#13858)"},{"Id":"1598785795","IsPullRequest":true,"CreatedAt":"2023-02-24T14:58:37","Actor":"mrizwan-az","Number":"13860","RawContent":null,"Title":"Merge-Base 'fabricbot. json'","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13860","RelatedDescription":"Closed or merged PR \"Merge-Base 'fabricbot. json'\" (#13860)"},{"Id":"1597762086","IsPullRequest":true,"CreatedAt":"2023-02-24T14:58:32","Actor":"mrizwan-az","Number":"13859","RawContent":null,"Title":"Add `.github/fabricbot.json`","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13859","RelatedDescription":"Closed or merged PR \"Add `.github/fabricbot.json`\" (#13859)"},{"Id":"1527986152","IsPullRequest":true,"CreatedAt":"2023-01-17T22:46:51","Actor":"vseanreesermsft","Number":"13857","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13857","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13857)"},{"Id":"1527872294","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:28","Actor":"vseanreesermsft","Number":"13856","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13856","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13856)"},{"Id":"1442568945","IsPullRequest":true,"CreatedAt":"2023-01-03T23:50:31","Actor":"dotnet-maestro[bot]","Number":"13853","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221108.6\r\n- **Date Produced**: November 8, 2022 11:26:32 PM UTC\r\n- **Commit**: 7120a7d1b74dcbce97e34dded2c9e9011639b175\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22513.5 to 1.0.0-beta.22558.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a244208...7120a7d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.425\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13853","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13853)"},{"Id":"1446124563","IsPullRequest":true,"CreatedAt":"2022-11-29T21:58:55","Actor":"marcpopMSFT","Number":"13854","RawContent":null,"Title":"Migrate the nuget state from earlier SDKs","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13854","RelatedDescription":"Closed or merged PR \"Migrate the nuget state from earlier SDKs\" (#13854)"},{"Id":"1468533103","IsPullRequest":true,"CreatedAt":"2022-11-29T18:54:03","Actor":"vseanreesermsft","Number":"13855","RawContent":null,"Title":"Update branding to 3.1.427","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13855","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.427\" (#13855)"},{"Id":"1440722468","IsPullRequest":true,"CreatedAt":"2022-11-14T16:34:07","Actor":"vseanreesermsft","Number":"13852","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13852","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13852)"},{"Id":"1440670789","IsPullRequest":true,"CreatedAt":"2022-11-08T22:20:49","Actor":"marcpopMSFT","Number":"13851","RawContent":null,"Title":"Clear the feeds before adding the local location.","State":"closed","Body":"They were flagging these additional nuget.config files as they didn't clear the feeds. I didn't find anything beyond these two so just updating these two for now.","Url":"https://github.com/dotnet/cli/pull/13851","RelatedDescription":"Closed or merged PR \"Clear the feeds before adding the local location.\" (#13851)"},{"Id":"1435077781","IsPullRequest":true,"CreatedAt":"2022-11-04T22:17:39","Actor":"marcpopMSFT","Number":"13850","RawContent":null,"Title":"Enable Codeql","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13850","RelatedDescription":"Closed or merged PR \"Enable Codeql\" (#13850)"},{"Id":"1432111919","IsPullRequest":true,"CreatedAt":"2022-11-01T22:33:22","Actor":"vseanreesermsft","Number":"13849","RawContent":null,"Title":"Update branding to 3.1.426","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13849","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.426\" (#13849)"},{"Id":"1415339232","IsPullRequest":true,"CreatedAt":"2022-10-31T10:14:58","Actor":"dotnet-maestro[bot]","Number":"13848","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221013.5\r\n- **Date Produced**: October 13, 2022 9:51:19 PM UTC\r\n- **Commit**: a244208da0e2d8be67497826fd0881e3218b5e03\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22513.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0de02c6...a244208\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13848","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13848)"},{"Id":"1406878446","IsPullRequest":true,"CreatedAt":"2022-10-14T09:33:47","Actor":"dotnet-maestro[bot]","Number":"13847","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221012.2\r\n- **Date Produced**: October 12, 2022 5:09:37 PM UTC\r\n- **Commit**: 869528d3af327eb6de19b414631280734dfe76e6\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22512.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0de02c6...869528d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13847","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13847)"},{"Id":"1399778162","IsPullRequest":true,"CreatedAt":"2022-10-12T22:29:13","Actor":"dotnet-maestro[bot]","Number":"13845","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20221012.2\r\n- **Date Produced**: October 12, 2022 5:09:37 PM UTC\r\n- **Commit**: 869528d3af327eb6de19b414631280734dfe76e6\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22378.5 to 1.0.0-beta.22512.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/0de02c6...869528d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.424\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13845","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13845)"},{"Id":"1404969579","IsPullRequest":true,"CreatedAt":"2022-10-12T22:28:29","Actor":"vseanreesermsft","Number":"13846","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13846","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13846)"},{"Id":"1386756171","IsPullRequest":true,"CreatedAt":"2022-10-05T18:31:14","Actor":"marcpopMSFT","Number":"13843","RawContent":null,"Title":"Update windows images","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13843","RelatedDescription":"Closed or merged PR \"Update windows images\" (#13843)"},{"Id":"1396559862","IsPullRequest":true,"CreatedAt":"2022-10-05T18:29:27","Actor":"vseanreesermsft","Number":"13844","RawContent":null,"Title":"Update branding to 3.1.425","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13844","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.425\" (#13844)"},{"Id":"1371751135","IsPullRequest":true,"CreatedAt":"2022-09-15T22:48:13","Actor":"vseanreesermsft","Number":"13842","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13842","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13842)"},{"Id":"1363606777","IsPullRequest":true,"CreatedAt":"2022-09-06T20:16:47","Actor":"vseanreesermsft","Number":"13841","RawContent":null,"Title":"Update branding to 3.1.424","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13841","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.424\" (#13841)"},{"Id":"1363566236","IsPullRequest":true,"CreatedAt":"2022-09-06T17:39:32","Actor":"mmitche","Number":"13839","RawContent":null,"Title":"[release/3.1.4xx] Remediate CFS errors","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13839","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Remediate CFS errors\" (#13839)"},{"Id":"1363604115","IsPullRequest":true,"CreatedAt":"2022-09-06T17:29:56","Actor":"vseanreesermsft","Number":"13840","RawContent":null,"Title":"Update branding to 3.1.424","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13840","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.424\" (#13840)"},{"Id":"1358096179","IsPullRequest":true,"CreatedAt":"2022-09-02T22:07:25","Actor":"alexperovich","Number":"13838","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required for builds to continue working in the new org, dev.azure.com/dnceng-public.","Url":"https://github.com/dotnet/cli/pull/13838","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#13838)"},{"Id":"1333620200","IsPullRequest":true,"CreatedAt":"2022-08-09T21:16:32","Actor":"vseanreesermsft","Number":"13837","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13837","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13837)"},{"Id":"1326282837","IsPullRequest":true,"CreatedAt":"2022-08-02T23:16:34","Actor":"vseanreesermsft","Number":"13836","RawContent":null,"Title":"Update branding to 3.1.423","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13836","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.423\" (#13836)"},{"Id":"1287878126","IsPullRequest":true,"CreatedAt":"2022-07-29T15:06:29","Actor":"ghost","Number":"13832","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/cli) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/cli) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/cli/pull/13832","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#13832)"},{"Id":"1302442444","IsPullRequest":true,"CreatedAt":"2022-07-12T20:19:23","Actor":"wtgodbe","Number":"13835","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13835","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13835)"},{"Id":"1286362242","IsPullRequest":true,"CreatedAt":"2022-07-08T19:03:34","Actor":"marcpopMSFT","Number":"13831","RawContent":null,"Title":"upgrade our newtonsoft version","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13831","RelatedDescription":"Closed or merged PR \"upgrade our newtonsoft version\" (#13831)"},{"Id":"1294682386","IsPullRequest":true,"CreatedAt":"2022-07-05T21:37:38","Actor":"mmitche","Number":"13834","RawContent":null,"Title":"Update branding to 3.1.422","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13834","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.422\" (#13834)"},{"Id":"1294678849","IsPullRequest":true,"CreatedAt":"2022-07-05T19:29:43","Actor":"mmitche","Number":"13833","RawContent":null,"Title":"Update branding to 3.1.422","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13833","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.422\" (#13833)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2022-09-13T01:39:00","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"closed","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Closed issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"751999481","IsPullRequest":false,"CreatedAt":"2022-09-12T20:32:30","Actor":"Meenakshise","Number":"1783","RawContent":null,"Title":"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, ","State":"closed","Body":"[tuple-not-loading-log.txt](https://github.com/dotnet/standard/files/5606091/tuple-not-loading-log.txt)\r\n\r\nI have  web project which is targeted to 4.6.2 .net framework. This project is calling a framework library which is targeted to the same .net framework 4.6.2. But in the framework library project it is referencing the system.valuetuple of 4.3.0 via the nuget package. \r\n  <package id=\"System.ValueTuple\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n\r\nThis valuetuple 4.3.0 targets .net standard 1.0 and .net framework 4.5. But our UI project is targeting 4.6.2. And we are getting this valuetuple not able to load. Could you please tell me why so ? \r\n\r\nSo if i am referencing a library that targets .net standard and .net framework of which the referencing project doesnt target to . How does the dll assemblies work here ? Really confused. Please help us\r\n\r\nBasically I am getting this error. The detailed log is attached in tuple-not-loading file. \r\n_message: \"ReflectionTypeLoadException: Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\n VS 2017 IDE is used to build the project ","Url":"https://github.com/dotnet/standard/issues/1783","RelatedDescription":"Closed issue \"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, \" (#1783)"},{"Id":"950167090","IsPullRequest":false,"CreatedAt":"2022-09-12T20:17:23","Actor":"ericstj","Number":"1791","RawContent":null,"Title":"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy","State":"closed","Body":"Create a new `netstandard2.1` library.\r\nAdd a reference to `<PackageReference Include=\"System.Reflection.DispatchProxy\" Version=\"4.7.1\" />`\r\nTry to use `DispatchProxy`\r\n\r\nExpected: \r\n`DispatchProxy` is resolved from `netstandard.dll`\r\n\r\nActual:\r\n```\r\nerror CS0433: The type 'DispatchProxy' exists in both 'System.Reflection.DispatchProxy, Version=4.0.6.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n```\r\n\r\n\r\nBuild contains conflict message:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' and 'Runtime:C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\System.Reflection.DispatchProxy.dll'. Choosing 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' because AssemblyVersion '4.0.6.0' is greater than '4.0.5.0'.\r\n```\r\n\r\nOther shims avoid this by setting the AssemblyVersion higher than that which was previously shipped.","Url":"https://github.com/dotnet/standard/issues/1791","RelatedDescription":"Closed issue \"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy\" (#1791)"},{"Id":"743421464","IsPullRequest":false,"CreatedAt":"2022-08-18T23:19:22","Actor":"ishepherd","Number":"1781","RawContent":null,"Title":"Update docs to reflect the status of .NET Standard in 2020","State":"closed","Body":"My understanding is, .NET Standard isn't the plan for standard .NET anymore. [The plan is now .NET 5.](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/)\r\n\r\nThat isn't at all clear from the docs here which seem to be frozen in time. Suggest you make some slight edits to [faq.md](https://github.com/dotnet/standard/blob/master/docs/faq.md) and [README.md](https://github.com/dotnet/standard/blob/master/README.md) to reflect the new status of .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1781","RelatedDescription":"Closed issue \"Update docs to reflect the status of .NET Standard in 2020\" (#1781)"},{"Id":"1157458269","IsPullRequest":true,"CreatedAt":"2022-08-18T23:18:36","Actor":"calledtoconstruct","Number":"1804","RawContent":null,"Title":"Fix url to LICENSE.TXT","State":"closed","Body":"It appears as though the license file was moved to a new location to accommodate additional versions.  Updated the URL to the location of the file as it is today.","Url":"https://github.com/dotnet/standard/pull/1804","RelatedDescription":"Closed or merged PR \"Fix url to LICENSE.TXT\" (#1804)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2022-08-18T22:53:57","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"closed","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Closed issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2022-08-18T22:52:32","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"closed","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Closed issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2022-08-18T22:51:38","Actor":"The-Futurist","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"closed","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Closed issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"727588709","IsPullRequest":false,"CreatedAt":"2022-08-18T22:49:34","Actor":"Joe-Sewell-PreEmptive","Number":"1777","RawContent":null,"Title":"Questions about tagging within this repository / future versions","State":"closed","Body":"I was looking through this repository to determine if .NET Standard 2.1 libraries support default interface methods - it looks like they do, given the presence of `System.Runtime.CompilerServices.RuntimeFeature.DefaultImplementationsOfInterfaces`, as well as my own experimenting in VS 2019. It seems I was mistaken when thinking that this was not the case, so I'm glad this repository is easily accessible to determine this.\r\n\r\nBut while doing this, I found it difficult to determine what commits were included in this particular .NET Standard version. I see that there's a tag `v2.1.0-prerelease.19126.1`, as well as branches `release/2.0.0`, `release/3.0`, and `release/3.0-preview9`. One of the machines I tested VS 2019 on had a `netstandard.dll` assembly, itself targeting .NETStandard v2.1.0, with AssemblyInformationalVersion `1.1.0+a5b5f2e1e369972c8ff1e2183979fab6099f52ef`; this commit is part of the `release/3.0` branch. However, another machine had a same-named assembly, targeting .NETCoreApp v3.0 and AssemblyInformationalVersion `3.0.0+4ac4c0367003fe3973a3648eb0715ddb0e3bbcea`, and I don't see that commit hash in this repository.\r\n\r\nAdditionally, [this blog post](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/) states that 2.1 will be the last version, but there is another prerelease tag `v2.2.0-prerelease.19564.1` and [on GitHub](https://github.com/dotnet/standard/releases/tag/v2.2.0-prerelease.19564.1) it's labelled .NET 5.0 Preview 2.\r\n\r\nSo I have a few questions for understanding this repository:\r\n\r\n1. Since .NET Standard 2.1 is released, are there plans to continue development in this repository for e.g. the shared BCL going forward with .NET 5+?\r\n2. Are there multiple kinds of `netstandard.dll` for a single .NET Standard version? E.g. are there separate versions for .NET Framework to reference and for .NET Core / .NET 5+ to reference?\r\n3. Do the tags / branch names in this repository correspond to a .NET Standard version or something else?\r\n4. It looks like there are patch releases; are there patch versions of a single .NET Standard version?\r\n5. Are there other repositories which are being used to create `netstandard.dll`?\r\n6. Is there a way to determine, from the repository, which commit is the one used for a given release?\r\n\r\nThank you for your consideration.","Url":"https://github.com/dotnet/standard/issues/1777","RelatedDescription":"Closed issue \"Questions about tagging within this repository / future versions\" (#1777)"},{"Id":"741314211","IsPullRequest":false,"CreatedAt":"2022-08-18T22:43:51","Actor":"amitagrawalhyd","Number":"1779","RawContent":null,"Title":"Support with Universal Windows Platform","State":"closed","Body":".Net Standard 2.1 is not supporting Universal Windows Platform and when we see the following doc \"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\" it is showing TBD, need your help on finalizing few things for our project, by when we can see support with UWP and which version of UWP will be supported. Early response will be helpful.","Url":"https://github.com/dotnet/standard/issues/1779","RelatedDescription":"Closed issue \"Support with Universal Windows Platform\" (#1779)"},{"Id":"841566004","IsPullRequest":false,"CreatedAt":"2022-08-18T22:36:31","Actor":"rexcfnghk","Number":"1787","RawContent":null,"Title":"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1","State":"closed","Body":"# Summary\r\n\r\n.NET Standard version is not resolved correctly when a transitive dependency targets multiple .NET Standard versions.\r\n\r\n# Environment\r\n\r\n- Windows 10 (19042.746)\r\n- .NET 5 SDK 5.0.201\r\n\r\n# Minimal reproducible example\r\n[bug.zip](https://github.com/dotnet/standard/files/6209239/bug.zip)\r\n\r\nThis is a three-project solution:\r\n- `TestProject1` targeting `netcoreapp3.1`\r\n- `ClassProject1` targeting `netstandard2.0`\r\n- `ClassProject2` targeting *both* `netstandard2.0` and `netstandard2.1`\r\n\r\nThe project dependency chain is: `TestProject1 -> ClassProject1 -> ClassProject2`\r\n\r\nA method (`ClassProject2Test1`) on `ClassProject2` is hidden behind a `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n# The issue\r\n\r\nThe unit test failed with a `MissingMethodException`\r\n\r\n```\r\n[xUnit.net 00:00:00.38]     TestProject1.UnitTest1.Test1 [FAIL]\r\n  Failed TestProject1.UnitTest1.Test1 [2 ms]\r\n  Error Message:\r\n   System.MissingMethodException : Method not found: 'Void ClassLibrary2.Class2.Class2Test1()'.\r\n  Stack Trace:\r\n     at ClassLibrary1.Class1.Class1Test1()\r\n   at TestProject1.UnitTest1.Test1() in C:\\Users\\rex\\source\\netstandard-bug-repro\\TestProject1\\UnitTest1.cs:line 12\r\n```\r\n\r\n# Expected result\r\n\r\nThe compiler should have resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.0)*` \r\n\r\n# Actual result\r\n\r\nThe compiler resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.1)*` \r\n\r\nWhich causes the exception because the offending method, `ClassProject2Test1`, was hidden by the `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1787","RelatedDescription":"Closed issue \"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1\" (#1787)"},{"Id":"987085034","IsPullRequest":false,"CreatedAt":"2022-08-18T22:29:04","Actor":"Coder3333","Number":"1793","RawContent":null,"Title":"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken","State":"closed","Body":"I also reported this issue at https://github.com/dotnet/runtime/issues/58583, in case that is a more appropriate place.\r\n\r\n\r\nI am witnessing this behavior in packages\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\netstandard.dll when running from a .Net Core 3.1 application.  \r\n\r\nWhen I call DbCommand.ExecuteReaderAsync with a CancellationToken and cancel it before it finishes, an exception is thrown that contains a TaskCanceledException buried down in the InnerExceptions.  I expect that behavior, but the issue is that the TaskCanceledException.CancellationToken is not the CancellationToken that I provided to ExecuteReaderAsync.  I do not know where this other CancellationToken is coming from, but I thought we were only supposed to suppress TaskCanceledException in our applications if it is for the provided CancellationToken, so I end up with a lot more unhandled exceptions than I want.  \r\n\r\nIs it safe to suppress any TaskCanceledException, no matter what CancellationToken it contains?  Where does this mystery CancellationToken come from, and could ExecuteReaderAsync just return the CancellationToken given to it?\r\n\r\n```c#\r\n                using (var cts = new CancellationTokenSource())\r\n                {\r\n                    using (var cmd = db.GetSqlStringCommand(queryString))\r\n                    {\r\n                        cts.Cancel();\r\n                        try\r\n                        {\r\n                            using (var rdr = cmd.ExecuteReaderAsync(cts.Token).Result)\r\n                            {\r\n                            }\r\n                        }\r\n                        catch (Exception ex3)\r\n                        {\r\n//  if you inspect ex3, you will find a TaskCanceledException buried in InnerExceptions, but its CancellationToken is not cts.Token\r\n                            throw;\r\n                        }\r\n                    }\r\n                }\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1793","RelatedDescription":"Closed issue \"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken\" (#1793)"},{"Id":"748223490","IsPullRequest":false,"CreatedAt":"2022-08-18T22:27:17","Actor":"kyurkchyan","Number":"1782","RawContent":null,"Title":"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP","State":"closed","Body":"# Summary\r\nI was trying to access Embedded resources on UWP. Something like this\r\n\r\n```C#\r\nmanifestResourceInfo = typeof(App).Assembly.GetManifestResourceInfo(\"UwpEmbeddedResourceBug.appsettings.json\");\r\n```\r\nHowever, this doesn't work on UWP, even though it works like a charm on iOS for instance. \r\nFurther, when you try to use this in UWP debug mode, it will return non-null `manifestResourceInfo`, however internally the `FileName` property will be null. But if you try to use the same on Release build, instead you will get an exception\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Func`1.BeginInvoke(AsyncCallback, Object) + 0x1f\r\n   at SharedLibrary!<BaseAddress>+0x9f17d7\r\n   at UwpEmbeddedResourceBug.MainPage..ctor() + 0x3e\r\n```\r\n## Sample project\r\n[UwpEmbeddedResourceBug.zip](https://github.com/dotnet/standard/files/5579379/UwpEmbeddedResourceBug.zip)\r\n\r\n## Version info\r\n``` \r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.1\r\nVisualStudio.16.Release/16.8.1+30711.63\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA497\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.550.19892\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.550.19892\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.550.19892\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.550.19892\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJetBrains ReSharper 2020.2.4   Build 202.0.20200925.65451\r\nJetBrains ReSharper package for Microsoft Visual Studio. For more information about ReSharper, visit http://www.jetbrains.com/resharper. Copyright © 2020 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Foo   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.8.000.255 (d16-8@d002176)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.4.1.3 (e30c41de3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```","Url":"https://github.com/dotnet/standard/issues/1782","RelatedDescription":"Closed issue \"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP\" (#1782)"},{"Id":"773128444","IsPullRequest":false,"CreatedAt":"2022-07-31T21:04:00","Actor":"rathnagiri","Number":"1786","RawContent":null,"Title":"Security Vulnerability due to System.Text.RegularExpressions","State":"closed","Body":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n","Url":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Closed issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786)"},{"Id":"1099686661","IsPullRequest":true,"CreatedAt":"2022-01-12T00:54:39","Actor":"ericstj","Number":"1803","RawContent":null,"Title":"[release/3.0] Update feeds","State":"closed","Body":"Updating feeds in latest release branch to be consistent with https://github.com/dotnet/corefx/blob/release/3.1/NuGet.config.","Url":"https://github.com/dotnet/standard/pull/1803","RelatedDescription":"Closed or merged PR \"[release/3.0] Update feeds\" (#1803)"},{"Id":"1050222761","IsPullRequest":false,"CreatedAt":"2022-01-11T21:42:58","Actor":"Xyncgas","Number":"1796","RawContent":null,"Title":"[Feature Request] Allow Static Method In Interface","State":"closed","Body":"Because in serialization workflow you usually call obj.export() or something, but when you are importing the object with custom business logic you don't do obj.import() --but usually--> typeof(object).import() which is a static method that returns an object.\r\n\r\nFailure in defining static method in interface makes it hard to implement a contract for me.","Url":"https://github.com/dotnet/standard/issues/1796","RelatedDescription":"Closed issue \"[Feature Request] Allow Static Method In Interface\" (#1796)"},{"Id":"1059250174","IsPullRequest":false,"CreatedAt":"2022-01-11T21:41:44","Actor":"one-harsh","Number":"1799","RawContent":null,"Title":"[Feature Request] Support for MultiSet & MultiMap in System.Collections.Generic","State":"closed","Body":"While we have Dictionary and HashSet support, there are many times where we need a [MultiSet](https://en.wikipedia.org/wiki/Multiset) or a [MultiMap](https://en.wikipedia.org/wiki/Multimap). Could this be added to the core library or is there already a plan to add one? Various other languages, including C++, supports this container iterator.","Url":"https://github.com/dotnet/standard/issues/1799","RelatedDescription":"Closed issue \"[Feature Request] Support for MultiSet & MultiMap in System.Collections.Generic\" (#1799)"},{"Id":"1090825946","IsPullRequest":false,"CreatedAt":"2022-01-11T21:39:54","Actor":"Equijano24","Number":"1801","RawContent":null,"Title":"Support of 'IAsyncComparer' for Linq operations.","State":"closed","Body":"Some Linq operations such as OrderBy or ThenBy might require asynchronous comparers for custom objects. Consider the following case:\r\n```\r\npublic class ExoticObject {...}\r\n\r\npublic class ExoticComparer : IAsyncComparer<ExoticObject>\r\n{\r\n    public async ValueTask<int> Compare(ExoticObject e1, ExoticObject e2)\r\n    {\r\n        return await ..... // Some asynchronous code\r\n    }\r\n}\r\n```\r\nThe following expression would make use of an asynchronous comparer:\r\n```\r\nIOrderedAsyncEnumerable<ExoticObject> orderedOnes =\r\n    listOfExotics().OrderByAwait(SomeAsyncKeySelector, new ExoticComparer());\r\n```\r\nPlease provide an IAsyncComparer interface and support for Linq operations.","Url":"https://github.com/dotnet/standard/issues/1801","RelatedDescription":"Closed issue \"Support of 'IAsyncComparer' for Linq operations.\" (#1801)"},{"Id":"1062524841","IsPullRequest":true,"CreatedAt":"2021-11-26T19:34:10","Actor":"lpatalas","Number":"1800","RawContent":null,"Title":"Migrate to 1ES hosted pools","State":"closed","Body":"We are moving to 1ES hosted pools. This PR update pipeline yaml to use new pools.\r\n\r\nTracking issue: https://github.com/dotnet/core-eng/issues/14276\r\n","Url":"https://github.com/dotnet/standard/pull/1800","RelatedDescription":"Closed or merged PR \"Migrate to 1ES hosted pools\" (#1800)"},{"Id":"1056603180","IsPullRequest":true,"CreatedAt":"2021-11-26T19:33:44","Actor":"joshongithub","Number":"1798","RawContent":null,"Title":"Update netstandard2.1 platform support info","State":"closed","Body":"Since there was .NET 3.0 and 3.1, I changed it to .NET Core 3.x. I also added .NET 5 and .NET 6 since both are supported.","Url":"https://github.com/dotnet/standard/pull/1798","RelatedDescription":"Closed or merged PR \"Update netstandard2.1 platform support info\" (#1798)"},{"Id":"1050457478","IsPullRequest":false,"CreatedAt":"2021-11-11T16:40:32","Actor":"Xyncgas","Number":"1797","RawContent":null,"Title":"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?","State":"closed","Body":"In the example :\r\n```\r\nPublic class ClassA{\r\n    string a = \"A2\";\r\n}\r\npublic class ClassB : ClassA{//ClassB derive from Class A\r\n    string b = \"2B\";\r\n}\r\nPublic ClassA TestSample()\r\n{\r\n    classB I_Have_A_Pen = new ClassB();\r\n    Return I_Have_A_Pen;\r\n}\r\nvoid Main()\r\n{\r\n    var I_Have_A_Pineapple = TestSample(); //Ref:{7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}\r\n}\r\n```\r\nSo, at {7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}, I have two questions :\r\nI_Have_A_Pineapple is now ClassA but does the standard say it's actually still ClassB or I_Have_A_Pineapple.GetType()==typeof(ClassB) ?\r\n\r\nI_Have_A_Pineapple now doesn't have access to string b which value is \"2B\", because it's casted to ClassA and 2B only existed as Class B member, so a while later would gc be collecting this reference and 2B is gone forever while it might only exist at this moment?","Url":"https://github.com/dotnet/standard/issues/1797","RelatedDescription":"Closed issue \"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?\" (#1797)"},{"Id":"980465227","IsPullRequest":false,"CreatedAt":"2021-08-26T17:45:34","Actor":"petrosmm","Number":"1792","RawContent":null,"Title":"linq using GetValueOrDefault  in Where clause problem","State":"closed","Body":"Hello,\r\n\r\nI am currently using .NET core 2.2.x and EF Core. 2.2.6. I have a function that returns a List<Animal> from the database with no issue. It returns 11 results. However, when I try to use `.Where(p => p.DeletedAt.GetValueOrDefault(DateTime.Now) => DateTime.Now).ToList()`, it still should return 11 results, however it returns 0. I also eliminated the possibility that there is something wrong with my where clause (logic) because it works perfectly on 4.6.1 EF Core 2.2.6. Furthermore, I confirmed that it is only where I am comparing a nullable type using that function and I am guessing that I missed a thread someone opened on this issue. I am aware .NET core 2.2 is not LTS. I also thought this goes here because it's not AFAIK, an EF core issue but rather an Ienumerable/Linq issue.\r\n\r\nUpdate: As it turns out your notion of `DateTime.Now` getting evaluated twice is true. To rectify that, I will now be using `DateTime.Now.Date`. This is odd because this exact code works on 4.6.1. You're probably right. SMH. Thank you @GrabYourPitchforks! You may now close.","Url":"https://github.com/dotnet/standard/issues/1792","RelatedDescription":"Closed issue \"linq using GetValueOrDefault  in Where clause problem\" (#1792)"},{"Id":"894396747","IsPullRequest":false,"CreatedAt":"2021-07-28T22:25:27","Actor":"SiberaIndustries","Number":"1789","RawContent":null,"Title":"Strong name signature not valid","State":"closed","Body":"Since I've ported a ClickOnce application from .NET Framework 4.6.1 to .NET Standard 2.0, the message _\"Strong assembly name signature not valid for **Microsoft.SqlServer.Assessment.Types.dll**\"_ appears when trying to install or update the application. So the next step was to verify the assembly strong name by using the [Strong Name Tool](https://docs.microsoft.com/dotnet/framework/tools/sn-exe-strong-name-tool) to make sure, that everything is fine, but:\r\n\r\n```sh\r\n> sn.exe -v Microsoft.SqlServer.Assessment.Types.dll\r\n\r\nMicrosoft (R) .NET Framework Strong Name Utility Version 4.0.30319.0\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nMicrosoft.SqlServer.Assessment.Types.dll is a delay-signed or test-signed assembly\r\n```\r\n\r\nAdditional information:\r\n\r\n- The assembly versions `161.46041.41` and `161.46367.54` ended up in the same result\r\n- This issue looks very similar to [this](https://www.damirscorner.com/blog/posts/20140502-StrongNameValidationFailedSecurityException.html)\r\n- @markingmyname / @olprod: The root package, which is required for [Server Management Objects (SMOs)](https://docs.microsoft.com/sql/relational-databases/server-management-objects-smo/overview-smo?view=sql-server-ver15), is:\r\n  - [Microsoft.SqlServer.SqlManagementObjects](https://www.nuget.org/packages/Microsoft.SqlServer.SqlManagementObjects)\r\n    - Microsoft.SqlServer.Assessment\r\n      - Microsoft.SqlServer.Assessment.Authoring\r\n        - **Microsoft.SqlServer.Assessment.Types.dll**\r\n- This issue appears on windows server machines but the software runs on different machines and I would like to avoid temporary workarounds such as editing the registry and activate the strong name bypass feature because of the forced validation on windows server machines","Url":"https://github.com/dotnet/standard/issues/1789","RelatedDescription":"Closed issue \"Strong name signature not valid\" (#1789)"},{"Id":"852541719","IsPullRequest":false,"CreatedAt":"2021-04-07T15:50:35","Actor":"vsfeedback","Number":"1788","RawContent":null,"Title":"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Closed issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788)"},{"Id":"761600986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:17:30","Actor":"tmds","Number":"1785","RawContent":null,"Title":"mono and .NET5+","State":"closed","Body":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?","Url":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785)"},{"Id":"741918893","IsPullRequest":false,"CreatedAt":"2020-11-16T21:03:55","Actor":"viralmodi","Number":"1780","RawContent":null,"Title":"How to build .NET Standard based library for ARM architecture","State":"closed","Body":"We currently own a .NET Standard based library. We would like to make it work on ARM platform as well. Is there some documentation which can help understand how to go about achieving that?\r\nI searched up on MSFT docs and found a few pages but it is not clear to me all the steps needed to achieve the above based on those docs. Any help is appreciated. I would like to know ways to compile cross platform, using IDEs like Visual Studio/Rider, code/metadata modifications required to project (.csproj) files and anywhere else to achieve this?","Url":"https://github.com/dotnet/standard/issues/1780","RelatedDescription":"Closed issue \"How to build .NET Standard based library for ARM architecture\" (#1780)"},{"Id":"736344890","IsPullRequest":false,"CreatedAt":"2020-11-04T18:49:53","Actor":"vsfeedback","Number":"1778","RawContent":null,"Title":"System.Drawing.Printing.PrinterSettings slow","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemDrawingPrintingPrinterSettings-/890524)._\n\n---\nHello\n\nI'm debugging a problem with the printer settings. Some calls are significant slower if the default printer is a network printer, even if I explicit set a local printer name.\n\nAfter studying referencesource I think I found the culprit.\n\nI call:\n\nvar printerSettings = new System.Drawing.Printing.PrinterSettings();\n\nprinterSettings.PrinterName = &quot;LOCALPRINTER&quot;;\n\n// the next call is slow if the OS default printer is a network printer\nvar res = printerSettings.DefaultPageSettings.PrinterResolution\n\nInternally FastDeviceCapabilities is called.\n\nFastDeviceCapabilities calls GetOutputPort. But GetOutput port return the port of the default printer and not the port of the given printer!\n\nIn addition, DeviceCapabilities is then called with a wrong combination of printer name and port, don't know if this could lead to additional problems.\n\nResolution: GetOutputPort should return the port of the given printer and not accessing the default printer at all.\n\nBest Regards,\nRaphael\n\n---\n### Original Comments\n\n#### Raphael Affolter on 1/20/2020, 04:03 AM: \n\n<p>I forgot to mention: .Net Framework 4.6.1</p>\n\n#### Feedback Bot on 1/20/2020, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Raphael Affolter on 2/7/2020, 08:39 AM: \n\n<p>Because we print a lot, we really suffer from this performance penalty.</p><p>Also reading PaperSizes and PaperSources from the printer settings is slow caused by the same problem.</p><p>Could you please inform me about a possible fix?</p><p>Best Regards,</p><p>Raphael</p>\n\n#### Raphael Affolter on 2/7/2020, 10:33 AM: \n\n<p>In my opinion the fix is easy: replace GetOutputPort by OutputPort in the call to </p><p>FastDeviceCapabilities.</p><p>Done.</p>\n\n#### Feedback Bot on 2/27/2020, 05:40 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Dada Huo [MSFT] on 10/20/2020, 01:57 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Raphael Affolter on 10/20/2020, 02:28 AM: \n\n<p>Thanks for answering.</p><p>The issue is not about Visual Studio, the problem is in the .Net Framework (at least 4.6.1).</p><p>By studying the source code on referencesource.microsoft.com I spotted calls to the default printer, even if I print on another printer. If the default printer is a network printer, this slows down the printing process significantly.</p><p>Please have a look if you can fix this in the .Net Framework(s).</p><p>PrinterResolution, PaperSizes and PaperSources of System.Drawing.Printing.PrinterSettings are affected.</p><p>I also mentioned a fix: replace GetOutputPort by OutputPort in the call to FastDeviceCapabilities...done.</p><p>I you need a repro project, I can provide one.</p>\n\n\n---\n### Original Solutions\n\n#### Raphael Affolter solved on 3/19/2020, 07:18 AM, 0 votes: \n\n<p>I would be helpful if at least somebody reacts on this issue. I even told you how to fix the problem...</p>\n","Url":"https://github.com/dotnet/standard/issues/1778","RelatedDescription":"Closed issue \"System.Drawing.Printing.PrinterSettings slow\" (#1778)"},{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-16T08:15:08","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"closed","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Closed issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"billvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"1527984595","IsPullRequest":true,"CreatedAt":"2023-01-20T23:48:58","Actor":"vseanreesermsft","Number":"43169","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43169","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43169)"},{"Id":"1527872763","IsPullRequest":true,"CreatedAt":"2023-01-10T20:43:17","Actor":"vseanreesermsft","Number":"43168","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43168","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43168)"},{"Id":"1468527506","IsPullRequest":true,"CreatedAt":"2022-11-29T18:59:51","Actor":"vseanreesermsft","Number":"43167","RawContent":null,"Title":"Update branding to 3.1.33","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43167","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.33\" (#43167)"},{"Id":"1440723374","IsPullRequest":true,"CreatedAt":"2022-11-09T20:13:35","Actor":"vseanreesermsft","Number":"43166","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43166","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43166)"},{"Id":"1432112515","IsPullRequest":true,"CreatedAt":"2022-11-02T20:52:15","Actor":"vseanreesermsft","Number":"43165","RawContent":null,"Title":"Update branding to 3.1.32","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43165","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.32\" (#43165)"},{"Id":"1415605434","IsPullRequest":true,"CreatedAt":"2022-10-24T17:21:55","Actor":"carlossanlop","Number":"43164","RawContent":null,"Title":"[release/3.1] Disable failing 3.1 tests","State":"closed","Body":"Disables tests mentioned in:\r\n\r\n- https://github.com/dotnet/runtime/issues/77233\r\n- https://github.com/dotnet/runtime/issues/77234","Url":"https://github.com/dotnet/corefx/pull/43164","RelatedDescription":"Closed or merged PR \"[release/3.1] Disable failing 3.1 tests\" (#43164)"},{"Id":"1404969957","IsPullRequest":true,"CreatedAt":"2022-10-12T18:50:13","Actor":"vseanreesermsft","Number":"43163","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43163","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43163)"},{"Id":"1397189190","IsPullRequest":true,"CreatedAt":"2022-10-07T20:14:20","Actor":"carlossanlop","Number":"43162","RawContent":null,"Title":"Disable failing unit tests","State":"closed","Body":"- https://github.com/dotnet/runtime/issues/76651 System.Globalization.Tests.IdnMappingIdnaConformanceTests.GetUnicode_Invalid\n- https://github.com/dotnet/runtime/issues/76653 System.Security.Cryptography.X509Certificates.Tests.CertificateCreation.CertificateRequestUsageTests.AlwaysVersion3\n- https://github.com/dotnet/runtime/issues/76654 System.Net.Http.Functional.Tests.PlatformHandler_HttpProtocolTests*","Url":"https://github.com/dotnet/corefx/pull/43162","RelatedDescription":"Closed or merged PR \"Disable failing unit tests\" (#43162)"},{"Id":"1396559607","IsPullRequest":true,"CreatedAt":"2022-10-05T02:03:54","Actor":"vseanreesermsft","Number":"43161","RawContent":null,"Title":"Update branding to 3.1.31","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43161","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.31\" (#43161)"},{"Id":"1371751481","IsPullRequest":true,"CreatedAt":"2022-09-14T18:45:29","Actor":"vseanreesermsft","Number":"43160","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43160","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43160)"},{"Id":"1363608964","IsPullRequest":true,"CreatedAt":"2022-09-07T00:58:35","Actor":"vseanreesermsft","Number":"43159","RawContent":null,"Title":"Update branding to 3.1.30","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43159","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.30\" (#43159)"},{"Id":"1358084578","IsPullRequest":true,"CreatedAt":"2022-09-01T00:36:50","Actor":"MattGal","Number":"43158","RawContent":null,"Title":"Update public pool names","State":"closed","Body":"This change is required to continue building PRs in the dotnet public repo.  The agents and images used in the new project / organization are identical and build regressions are not expected.\r\n\r\nFor questions / concerns, please stop by the .NET Core Engineering Services [First Responders Teams Channel](https://teams.microsoft.com/l/channel/19%3aafba3d1545dd45d7b79f34c1821f6055%40thread.skype/First%2520Responders?groupId=4d73664c-9f2f-450d-82a5-c2f02756606d&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47).\r\n","Url":"https://github.com/dotnet/corefx/pull/43158","RelatedDescription":"Closed or merged PR \"Update public pool names\" (#43158)"},{"Id":"1339589839","IsPullRequest":true,"CreatedAt":"2022-08-17T18:05:48","Actor":"ericstj","Number":"43157","RawContent":null,"Title":"Update Newtonsoft.Json to 13.0.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43157","RelatedDescription":"Closed or merged PR \"Update Newtonsoft.Json to 13.0.1\" (#43157)"},{"Id":"1333620861","IsPullRequest":true,"CreatedAt":"2022-08-09T22:21:25","Actor":"vseanreesermsft","Number":"43156","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43156","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43156)"},{"Id":"1326279220","IsPullRequest":true,"CreatedAt":"2022-08-05T08:39:20","Actor":"vseanreesermsft","Number":"43155","RawContent":null,"Title":"Update branding to 3.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43155","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.29\" (#43155)"},{"Id":"1287954484","IsPullRequest":true,"CreatedAt":"2022-07-13T23:37:42","Actor":"ghost","Number":"43150","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/corefx) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=dotnet/corefx) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/dotnet/corefx/pull/43150","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#43150)"},{"Id":"1302443193","IsPullRequest":true,"CreatedAt":"2022-07-12T19:16:43","Actor":"wtgodbe","Number":"43154","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43154","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43154)"},{"Id":"1294792186","IsPullRequest":true,"CreatedAt":"2022-07-12T18:19:48","Actor":"vcsjones","Number":"43153","RawContent":null,"Title":"Fix RSA OAEP decryption in OpenSSL with non-power-of-two keys lengths","State":"closed","Body":"## Customer Impact\r\n\r\nA customer reported in dotnet/runtime#71607 that decrypting RSA OAEP with SHA2 and a 3072-bit key on Linux resulted in a OAEP de-padding error, while other platforms were able to perform these operations successfully.\r\n\r\nInvestigation in to the issue led to uncover that RSA OAEP decryption that uses the managed implementation does not work with non-power-of-two keys because we do not slice a rented buffer accordingly. The current implementation only works because `CryptoPool.Rent` happens to give back power-of-two arrays which are exactly the same size as the key.\r\n\r\nThe fix is to slice the data to the correct size.\r\n\r\nThis does not affect dotnet/runtime because the managed implementation of RSA OAEP is no longer used for OpenSSL RSA decryption. This change was introduced in dotnet/runtime#50063.\r\n\r\n## Testing\r\n\r\nUnit tests were introduced to test RSA OAEP encryption with a 3072-bit RSA key. These tests will be forward-ported to dotnet/runtime.\r\n\r\n## Risk\r\n\r\nMinimal. The change is localized and understood that a `Slice` was missing.","Url":"https://github.com/dotnet/corefx/pull/43153","RelatedDescription":"Closed or merged PR \"Fix RSA OAEP decryption in OpenSSL with non-power-of-two keys lengths\" (#43153)"},{"Id":"1294682979","IsPullRequest":true,"CreatedAt":"2022-07-06T23:50:10","Actor":"mmitche","Number":"43152","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43152","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#43152)"},{"Id":"1294679544","IsPullRequest":true,"CreatedAt":"2022-07-05T19:29:57","Actor":"mmitche","Number":"43151","RawContent":null,"Title":"Update branding to 3.1.28","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43151","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.28\" (#43151)"},{"Id":"1272811676","IsPullRequest":true,"CreatedAt":"2022-06-25T04:15:13","Actor":"NegativeMjark","Number":"43149","RawContent":null,"Title":"[release/3.1] Fix writing large arrays to anonymous pipes on linux","State":"closed","Body":"Increment the `bufPtr` when we can't write the array in a single syscall. Should fix https://github.com/dotnet/runtime/issues/70798","Url":"https://github.com/dotnet/corefx/pull/43149","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix writing large arrays to anonymous pipes on linux\" (#43149)"},{"Id":"1271134644","IsPullRequest":true,"CreatedAt":"2022-06-15T17:12:36","Actor":"vseanreesermsft","Number":"43147","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43147","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43147)"},{"Id":"1271361620","IsPullRequest":true,"CreatedAt":"2022-06-15T17:07:42","Actor":"wfurt","Number":"43148","RawContent":null,"Title":"[release/3.1] add missing RID for Fedora 37 and Ubuntu 22.04","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43148","RelatedDescription":"Closed or merged PR \"[release/3.1] add missing RID for Fedora 37 and Ubuntu 22.04\" (#43148)"},{"Id":"1263608318","IsPullRequest":true,"CreatedAt":"2022-06-08T20:09:26","Actor":"vseanreesermsft","Number":"43146","RawContent":null,"Title":"Update branding to 3.1.27","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43146","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.27\" (#43146)"},{"Id":"1238924423","IsPullRequest":true,"CreatedAt":"2022-05-17T18:01:41","Actor":"carlossanlop","Number":"43145","RawContent":null,"Title":"[release/3.1] Add RID for Alpine 3.16","State":"closed","Body":"@rbhanda @mmitche @ericstj @wfurt \r\n\r\nPlease let me know if everything looks in order.\r\n\r\nThis was based on the 3.15 PR: https://github.com/dotnet/corefx/pull/43129/files","Url":"https://github.com/dotnet/corefx/pull/43145","RelatedDescription":"Closed or merged PR \"[release/3.1] Add RID for Alpine 3.16\" (#43145)"},{"Id":"1231585802","IsPullRequest":true,"CreatedAt":"2022-05-10T22:26:01","Actor":"vseanreesermsft","Number":"43144","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43144","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43144)"},{"Id":"1194176879","IsPullRequest":true,"CreatedAt":"2022-05-04T16:10:21","Actor":"teo-tsirpanis","Number":"43141","RawContent":null,"Title":"[release/2.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager","State":"closed","Body":"Fixes issue dotnet/runtime#57472\r\n\r\nMain pr dotnet/runtime#57479\r\n\r\nAlso backported to 5.0 in dotnet/runtime#57562 and 3.1 in #43102. This PR will pave the way for backporting it to the `System.Memory` OOB package for .NET Framework.\r\n\r\n# Customer Impact\r\n\r\nA customer has encountered dotnet/runtime#57472 while on .NET Framework and reported it in dotnet/runtime#67295, necessiating backporting it once again. As an example provided in that issue, this memory manager:\r\n\r\n``` csharp\r\nprivate sealed class BasicMemoryManager : MemoryManager<byte>\r\n{\r\n    private readonly byte[] _buffer;\r\n    public BasicMemoryManager(int size = 1024) => _buffer = new byte[size];\r\n\r\n    protected override bool TryGetArray(out ArraySegment<byte> segment)\r\n    {\r\n        segment = new ArraySegment<byte>(_buffer);\r\n        return true;\r\n    }\r\n    public override Span<byte> GetSpan() => _buffer;\r\n\r\n    public override MemoryHandle Pin(int elementIndex = 0) => throw new NotSupportedException();\r\n    public override void Unpin() => throw new NotSupportedException();\r\n    protected override void Dispose(bool disposing) { }\r\n}\r\n```\r\n\r\nwill fail two of the following tests:\r\n\r\n``` csharp\r\n[Theory]\r\n[InlineData(0, 32)]\r\n[InlineData(0, 29)]\r\n[InlineData(32, 32)] // fail: length 0\r\n[InlineData(32, 29)] // fail: length -3\r\npublic void OffsetTest(int offset, int length)\r\n{\r\n    var mgr = new BasicMemoryManager(1024);\r\n    var slice = mgr.Memory.Slice(offset, length);\r\n    Assert.Equal(length, slice.Length);\r\n\r\n    var ros = new ReadOnlySequence<byte>(slice);\r\n    Assert.True(ros.IsSingleSegment);\r\n    Assert.Equal(length, ros.Length);\r\n}\r\n```\r\n\r\n# Testing\r\n\r\nFailing test has been added in this PR.\r\n\r\n# Risk\r\n\r\nLow, as the change is very simple and obvious when you look at `ReadOnlySequence<T>` ctor that accepts `ReadOnlyMemory<T>` (notice line 133 versus lines 140 and 148):\r\n\r\nhttps://github.com/dotnet/corefx/blob/0d40b482e6b6c232131dc808182d6b32d9d37394/src/System.Memory/src/System/Buffers/ReadOnlySequence.cs#L130-L149\r\n\r\nMoreover, the changed code gets triggered only when creating a `ReadOnlySequence` from a `ReadOnlyMemory` backed by a `MemoryManager`. All other use cases (including creating from an array or from a `ReadOnlyMemory` backed by an array or a string) are unaffected. And the changes are identical to those in the other backports.\r\n\r\n# Regression\r\n\r\nThis is not a regression.","Url":"https://github.com/dotnet/corefx/pull/43141","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager\" (#43141)"},{"Id":"1224389900","IsPullRequest":true,"CreatedAt":"2022-05-03T19:24:35","Actor":"vseanreesermsft","Number":"43143","RawContent":null,"Title":"Update branding to 3.1.26","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43143","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.26\" (#43143)"},{"Id":"1202264239","IsPullRequest":true,"CreatedAt":"2022-04-13T04:53:34","Actor":"vseanreesermsft","Number":"43142","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43142","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43142)"},{"Id":"1193653850","IsPullRequest":true,"CreatedAt":"2022-04-05T21:51:59","Actor":"vseanreesermsft","Number":"43140","RawContent":null,"Title":"Update branding to 3.1.25","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43140","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.25\" (#43140)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"3275482062","IsPullRequest":true,"CreatedAt":"2025-07-30T02:31:55","Actor":"jcouv","Number":"79674","RawContent":null,"Title":"Extensions: address follow-ups for new metadata design","State":"open","Body":"Erase attribute in PE\r\nDisallow attribute in source\r\nVerify round-tripping on extension block\r\nRe-enable skipped tests\r\n\r\nAddresses some of the follow-up issues tracked by https://github.com/dotnet/roslyn/issues/78963\r\nRelates to test plan https://github.com/dotnet/roslyn/issues/76130","Url":"https://github.com/dotnet/roslyn/pull/79674","RelatedDescription":"Open PR \"Extensions: address follow-ups for new metadata design\" (#79674)"},{"Id":"3275296809","IsPullRequest":true,"CreatedAt":"2025-07-30T01:24:03","Actor":"github-actions[bot]","Number":"79671","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* CyrusNajmabadi\n* tmat\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79671","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79671)"},{"Id":"3275329549","IsPullRequest":true,"CreatedAt":"2025-07-30T00:28:23","Actor":"tmat","Number":"79673","RawContent":null,"Title":"Add Copilot semantic search","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/79673","RelatedDescription":"Open PR \"Add Copilot semantic search\" (#79673)"},{"Id":"3275300642","IsPullRequest":false,"CreatedAt":"2025-07-30T00:13:10","Actor":"dotnet-bot","Number":"79672","RawContent":null,"Title":"[Automated] PRs inserted in VS build main-10829.77","State":"closed","Body":"[View Complete Diff of Changes](https://github.com/dotnet/roslyn/compare/e644f864fb302c088d751f6face7bd54cda17259...e161fe03b2cbf57058bce76e71a5c5eab5e1635a?w=1)\n- [File-based program directive diagnostics in editor](https://github.com/dotnet/roslyn/pull/79421)\n- [[main] Source code updates from dotnet/dotnet](https://github.com/dotnet/roslyn/pull/79620)\n- [Fixup quick info for suppressed nullable operations.](https://github.com/dotnet/roslyn/pull/79636)\n- [Remove most remaining workspace changed on UI thread](https://github.com/dotnet/roslyn/pull/79391)\n- [Remove unnecessary feed](https://github.com/dotnet/roslyn/pull/79635)\n- [Rename Razor source generated documents in all scenarios, and map edits](https://github.com/dotnet/roslyn/pull/79604)\n- [Use Append overload for repeating chars](https://github.com/dotnet/roslyn/pull/79626)\n- [Remove UI thread use of UIContext](https://github.com/dotnet/roslyn/pull/79347)\n- [Reduce allocations in CSharpVirtualCharService.TryConvertStringToVirtualChars](https://github.com/dotnet/roslyn/pull/79623)\n- [Update Microsoft.ILVerification](https://github.com/dotnet/roslyn/pull/79555)\n- [Add reference assemblies dir parameter](https://github.com/dotnet/roslyn/pull/79614)\n- [Produce a better return type when trying to return an anonymous type in an async method](https://github.com/dotnet/roslyn/pull/79631)\n- [Refine Caching example](https://github.com/dotnet/roslyn/pull/79593)\n- [Don't use a pool in SemanticTokensHelper.ComputeTokens](https://github.com/dotnet/roslyn/pull/79622)\n- [Fix issue with source generator diagnostics not refreshing on save in…](https://github.com/dotnet/roslyn/pull/79507)\n- [Use modern extension](https://github.com/dotnet/roslyn/pull/79550)\n- [Fix formatting of CDATA sections in quick info](https://github.com/dotnet/roslyn/pull/79627)\n- [Generate semantic search ref assemblies package](https://github.com/dotnet/roslyn/pull/79618)\n","Url":"https://github.com/dotnet/roslyn/issues/79672","RelatedDescription":"Closed issue \"[Automated] PRs inserted in VS build main-10829.77\" (#79672)"},{"Id":"3275277534","IsPullRequest":true,"CreatedAt":"2025-07-29T23:56:30","Actor":"jasonmalinowski","Number":"79670","RawContent":null,"Title":"Delete the Legacy SolutionEventsBatchScopeCreator","State":"open","Body":"The csproj/msvbprj project systems now create proper batches around their actions, so it's not clear we need this anymore.","Url":"https://github.com/dotnet/roslyn/pull/79670","RelatedDescription":"Open PR \"Delete the Legacy SolutionEventsBatchScopeCreator\" (#79670)"},{"Id":"3275132459","IsPullRequest":true,"CreatedAt":"2025-07-29T23:51:45","Actor":"CyrusNajmabadi","Number":"79668","RawContent":null,"Title":"Trap on-the-fly-doc exceptions in quick info","State":"closed","Body":"Possible fix for https://github.com/dotnet/roslyn/issues/79663\r\n\r\nLooking at the history of reports, the only thing i can see we changed in quick info was the introduction of on-the-fly-docs.  This calls into copilot services, and has a lot of complexity (as well as naked throws in it).  I've wrapped these to at least report back to us when something goes wrong.  but to also be tolerant and non-blocking of normal quick info in that case.","Url":"https://github.com/dotnet/roslyn/pull/79668","RelatedDescription":"Closed or merged PR \"Trap on-the-fly-doc exceptions in quick info\" (#79668)"},{"Id":"3275143245","IsPullRequest":true,"CreatedAt":"2025-07-29T22:31:07","Actor":"RikkiGibson","Number":"79669","RawContent":null,"Title":"Add messages for when design time builds begin and complete","State":"open","Body":"Suggestion from @JoeRobich: include an ID for the message so we know which start event is associated with which end event. (We also probably want to include list of projects that are being built.)\r\n\r\nThese events support integration testing restore for FBPs, and, eventuall could allow us to have more visibility for users when design-time builds are happening on the vscode side.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79669","RelatedDescription":"Open PR \"Add messages for when design time builds begin and complete\" (#79669)"},{"Id":"3274986657","IsPullRequest":true,"CreatedAt":"2025-07-29T22:28:15","Actor":"github-actions[bot]","Number":"79665","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* RikkiGibson\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79665","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79665)"},{"Id":"3275131501","IsPullRequest":true,"CreatedAt":"2025-07-29T22:23:05","Actor":"ToddGrun","Number":"79667","RawContent":null,"Title":"Remove some code now that we've updated to a newer System.IO.Hashing package version","State":"open","Body":"This version exposes the XxHash128 class, which our Checksum class uses extensively. This and four other files that were copied into roslyn for it's support are no longer needed.\r\n\r\nTest insertion pipeline run 1: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=12064988&view=results\r\n  -- failed miserably\r\n\r\nTest inseriton pipeline run 2: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=12066383&view=results","Url":"https://github.com/dotnet/roslyn/pull/79667","RelatedDescription":"Open PR \"Remove some code now that we've updated to a newer System.IO.Hashing package version\" (#79667)"},{"Id":"3274666379","IsPullRequest":true,"CreatedAt":"2025-07-29T22:21:15","Actor":"tmat","Number":"79661","RawContent":null,"Title":"Update debugger.contracts to 18.0.0-beta.25379.1","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/79661","RelatedDescription":"Closed or merged PR \"Update debugger.contracts to 18.0.0-beta.25379.1\" (#79661)"},{"Id":"3275114945","IsPullRequest":true,"CreatedAt":"2025-07-29T22:12:00","Actor":"dibarbet","Number":"79666","RawContent":null,"Title":"Allow PR val build insertion step to be re-run","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/79666","RelatedDescription":"Open PR \"Allow PR val build insertion step to be re-run\" (#79666)"},{"Id":"3274830378","IsPullRequest":false,"CreatedAt":"2025-07-29T20:04:30","Actor":"vsfeedback","Number":"79663","RawContent":null,"Title":"Hovering mouse over code tooltips stop working","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Hovering-mouse-over-code-tooltips-stop-w/10891809)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:17.12]\nSometimes Visual Studio will randomly stop showing tooltips on mouse hover over methods and members in code.  I have to restart my visual studio instance to get it working again.\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/20/2025, 11:48 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 4/21/2025, 11:09 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Burow, David on 6/29/2025, 09:16 PM: \n\n<p>Tooltips stop functioning less than 5 minutes after starting visual studio. I’ve deleted the .vs folder and the issue immediately returned.</p>\n\n#### Alex Piskarev on 7/22/2025, 09:47 PM: \n\n<p>Definitely still happening on the latest version. I’ve disabled all extraneous (non-Microsoft) extensions and it’s still happening. Although for me, it can take up to an hour or two for them to stop showing up on hover (or hotkey). Restarting visual studio fixes it, until it happens again.</p>\n<p>Highly annoying and reduces productivity.</p>\n<p>Debugging devenv.exe while they are broken does not show any exceptions being thrown.</p>\n","Url":"https://github.com/dotnet/roslyn/issues/79663","RelatedDescription":"Open issue \"Hovering mouse over code tooltips stop working\" (#79663)"},{"Id":"3274709452","IsPullRequest":false,"CreatedAt":"2025-07-29T19:19:01","Actor":"vsfeedback","Number":"79662","RawContent":null,"Title":"New model classes not recognized without restarting Visual Studio in large projects","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/New-model-classes-not-recognized-without/10943562)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:2022 version 17.14.9]\nI'm experiencing an issue in Visual Studio 2019 when working on larger projects (VB.NET or C#). After creating a new model class file, the project often does not recognize the new class until I completely close and reopen the solution or Visual Studio itself. IntelliSense and build tools fail to detect the new file immediately. This issue does not occur in smaller projects.\n\nI've tried rebuilding the solution and refreshing IntelliSense, but the problem persists. This slows down development significantly. It seems like the file change cache or IntelliSense is not updating properly in larger solutions.\n\nSteps to reproduce:\n\n    Open a large solution.\n\n    Add a new class (e.g., a model in the \"Models\" folder).\n\n    Try to use the new class elsewhere in the project — IntelliSense fails to recognize it.\n\n    Closing and reopening Visual Studio solves the issue.\n\nPlease investigate this behavior. It would be helpful if there were a way to force the IDE to refresh file recognition without restarting the entire application.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/29/2025, 03:35 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 7/29/2025, 06:32 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n","Url":"https://github.com/dotnet/roslyn/issues/79662","RelatedDescription":"Open issue \"New model classes not recognized without restarting Visual Studio in large projects\" (#79662)"},{"Id":"3274517360","IsPullRequest":true,"CreatedAt":"2025-07-29T19:13:32","Actor":"github-actions[bot]","Number":"79660","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* genlu\n* CyrusNajmabadi\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79660","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79660)"},{"Id":"3274501403","IsPullRequest":false,"CreatedAt":"2025-07-29T18:00:11","Actor":"AdamSobieski","Number":"79659","RawContent":null,"Title":"Extension Indexed Properties","State":"open","Body":"Hello. I was excited to find, using [ILDASM](https://learn.microsoft.com/en-us/dotnet/framework/tools/ildasm-exe-il-disassembler), that indexed properties (shown below) could be represented in .NET assemblies using the new extension everything techniques. I also found that expressing these isn't possible in C# 14 using .NET 10 Preview 6.\n\nI would like to ask whether extending indexed properties (beyond `Item`) is on the roadmap, for .NET and/or C#, at this time?\n\n```\npublic static class Predicates\n{\n    extension(Knowledgebase kb)\n    {\n        public bool? P1[Agent x, Widget y, Widget z]\n        {\n            get\n            {\n                return kb.Get<bool>(\"Namespace.P1\", x, y, z);\n            }\n            set\n            {\n                if(value.HasValue)\n                {\n                    kb.Set<bool>(\"Namespace.P1\", value.Value, x, y, z);\n                }\n                else\n                {\n                    kb.Remove(\"Namespace.P1\", x, y, z);\n                }\n            }\n        }\n    }\n}\n```\n\n```\npublic static class Predicates\n{\n    extension(State state)\n    {\n        public bool? P2[Agent x, Widget y, Widget z]\n        {\n            get\n            {\n                return state.Get<bool>(\"Namespace.P2\", x, y, z);\n            }\n            set\n            {\n                if(value.HasValue)\n                {\n                    state.Set<bool>(\"Namespace.P2\", value.Value, x, y, z);\n                }\n                else\n                {\n                    state.Remove(\"Namespace.P2\", x, y, z);\n                }\n            }\n        }\n    }\n}\n```\n\nThank you.","Url":"https://github.com/dotnet/roslyn/issues/79659","RelatedDescription":"Open issue \"Extension Indexed Properties\" (#79659)"},{"Id":"3274492233","IsPullRequest":false,"CreatedAt":"2025-07-29T17:57:10","Actor":"Youssef1313","Number":"79658","RawContent":null,"Title":"Allow PublicApiAnalyzers to track internal APIs with `[Internal]` prefix","State":"open","Body":"Tracking internal APIs can be useful in cases where IVT is used and compatibility between different versions of components is required.\n\nFor example:\n\n- `Project1` has a PackageReference to `Project2`.\n- `Project2` exposes IVT to `Project1`\n- Both projects produce NuGet packages\n- If I make a change in internal API in `Project2` that is called by `Project1`, that means a binary incompatibility is introduced.\n\nSuggestion: all internal APIs, unless annotated with `EmbeddedAttribute`, can be tracked as an opt-in feature.\n\nThat way, `Project2` is forced to add `EmbeddedAttribute` when not intended to be used by IVT, and otherwise breaking changes can be tracked more easily.","Url":"https://github.com/dotnet/roslyn/issues/79658","RelatedDescription":"Open issue \"Allow PublicApiAnalyzers to track internal APIs with `[Internal]` prefix\" (#79658)"},{"Id":"3271540586","IsPullRequest":true,"CreatedAt":"2025-07-29T17:45:18","Actor":"genlu","Number":"79644","RawContent":null,"Title":"Pass in referenceAssembliesDir to ISemanticSearchSolutionService","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/79644","RelatedDescription":"Closed or merged PR \"Pass in referenceAssembliesDir to ISemanticSearchSolutionService\" (#79644)"},{"Id":"3274347192","IsPullRequest":true,"CreatedAt":"2025-07-29T16:59:56","Actor":"ToddGrun","Number":"79657","RawContent":null,"Title":"Reduce alllocations in AnalyzerExecutor.GetAddDiagnostic","State":"open","Body":"Will create a speedometer run to verify this removes these allocations.\r\n\r\nTest insertion pipeline run: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=12067033&view=results\r\n\r\nThis method accounts for 2.4% of total allocations in the Roslyn ServiceHub process for the CompletionInCohosting speedometer test\r\n\r\nThere is already an existing mechanism used for pooling similar actions used in the ExecuteSemanticModelActions and ExecuteSyntaxTreeActions methods, so this just follows that pattern and moves the invocation code for compilation and symbol diagnostics into AnalyzerDiagnosticReporter.\r\n\r\n<img width=\"1593\" height=\"599\" alt=\"image\" src=\"https://github.com/user-attachments/assets/850fa7f6-f1b4-4088-850f-17aec7809419\" />","Url":"https://github.com/dotnet/roslyn/pull/79657","RelatedDescription":"Open PR \"Reduce alllocations in AnalyzerExecutor.GetAddDiagnostic\" (#79657)"},{"Id":"3274277858","IsPullRequest":false,"CreatedAt":"2025-07-29T16:36:50","Actor":"DoctorKrolic","Number":"79656","RawContent":null,"Title":"Code lens don't show implicit inheritance constructor usage","State":"open","Body":"**Version Used**:\n17.14.9 P1\n\n**Steps to Reproduce**:\n```cs\npublic class A\n{\n    public A()\n    {\n    }\n}\n\npublic class B : A\n{\n}\n```\n\n**Expected Behavior**:\nCode lens over constructor of `A` should show 1 usage and point to `A` in `B : A` syntax\n\n**Actual Behavior**:\nCode lens shows 0 constructor usages","Url":"https://github.com/dotnet/roslyn/issues/79656","RelatedDescription":"Open issue \"Code lens don't show implicit inheritance constructor usage\" (#79656)"},{"Id":"3274004179","IsPullRequest":true,"CreatedAt":"2025-07-29T16:07:16","Actor":"github-actions[bot]","Number":"79655","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* CyrusNajmabadi\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79655","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79655)"},{"Id":"3272805780","IsPullRequest":true,"CreatedAt":"2025-07-29T15:51:49","Actor":"CyrusNajmabadi","Number":"79651","RawContent":null,"Title":"Improve QuickInfo NRT info in the presence of nullability altering checks","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/66854\r\n\r\nFollowup to https://github.com/dotnet/roslyn/pull/79649","Url":"https://github.com/dotnet/roslyn/pull/79651","RelatedDescription":"Closed or merged PR \"Improve QuickInfo NRT info in the presence of nullability altering checks\" (#79651)"},{"Id":"3274002793","IsPullRequest":false,"CreatedAt":"2025-07-29T15:05:41","Actor":"TessenR","Number":"79654","RawContent":null,"Title":"Ref safety analysis for extension properties produces different results based on syntax used","State":"open","Body":"**Version Used**:  2e23a0df5bf8d49f6bf856287b0eb10de08f97d9\n\n**Steps to Reproduce**:\n\nCompile the following code:\n```\nusing System;\n\nref struct S\n{\n    public Span<int> field;\n}\n\nstatic class E\n{\n    extension(S s)\n    {\n        public S Property { get => throw null!; set => throw null!; }\n    }\n\n    extension(ref S s)\n    {\n        public S RefReceiverProperty { get => throw null!; set => throw null!; }\n    }\n\n    public static void Test1(S s)\n    {\n        var x = new S {  field = stackalloc int[10] };\n        s.Property = x; // error\n        E.set_Property(s, x); // no errors\n\n        s.RefReceiverProperty = x; // no errors\n        E.set_RefReceiverProperty(ref s, x); // error\n    }\n}\n```\n\n**Diagnostic Id**:\n\n`CS8352`, `CS8350`\n\n**Expected Behavior**:\nThe ref safety analysis doesn't depend on the syntax used to call the `set` accessors.\nIn both pairs of calls either the ref safety diagnostic is reported in both, or not reported in both.\n\n**Actual Behavior**:\nCompilation errors depend on the syntax used to call extension properties' set accessors despite producing equivalent IL code.","Url":"https://github.com/dotnet/roslyn/issues/79654","RelatedDescription":"Open issue \"Ref safety analysis for extension properties produces different results based on syntax used\" (#79654)"},{"Id":"3273917867","IsPullRequest":false,"CreatedAt":"2025-07-29T14:40:00","Actor":"jnm2","Number":"79653","RawContent":null,"Title":"Expand \"Simplify interpolation\" to understand ToShortDateString() and others","State":"open","Body":"In https://github.com/dotnet/roslyn/issues/40066, Roslyn started informing folks about the option of replacing `{expr.ToString(\"code\")}` with `{expr:code}` inside interpolated strings.\n\nThere are a few variants of this which were missed:\n\n- [`DateTime.ToLongDateString()`](https://learn.microsoft.com/en-us/dotnet/api/system.datetime.tolongdatestring): equivalent to `:D`\n- [`DateTime.ToLongTimeString()`](https://learn.microsoft.com/en-us/dotnet/api/system.datetime.tolongtimestring): equivalent to `:T`\n- [`DateTime.ToShortDateString()`](https://learn.microsoft.com/en-us/dotnet/api/system.datetime.toshortdatestring): equivalent to `:d`\n- [`DateTime.ToShortTimeString()`](https://learn.microsoft.com/en-us/dotnet/api/system.datetime.toshorttimestring): equivalent to `:t`\n- [`DateOnly.ToLongDateString()`](https://learn.microsoft.com/en-us/dotnet/api/system.dateonly.tolongdatestring): equivalent to `:D`\n- [`DateOnly.ToShortDateString()`](https://learn.microsoft.com/en-us/dotnet/api/system.dateonly.toshortdatestring): equivalent to `:d`\n- [`TimeOnly.ToLongTimeString()`](https://learn.microsoft.com/en-us/dotnet/api/system.timeonly.tolongtimestring): equivalent to `:T`\n- [`TimeOnly.ToShortTimeString()`](https://learn.microsoft.com/en-us/dotnet/api/system.timeonly.toshorttimestring): equivalent to `:t`\n\nI have seen folks learn about this C# language feature based on the IDE suggestion. Recently, because the IDE suggestion does not yet understand these methods above, there was a missed opportunity.\n","Url":"https://github.com/dotnet/roslyn/issues/79653","RelatedDescription":"Open issue \"Expand \"Simplify interpolation\" to understand ToShortDateString() and others\" (#79653)"},{"Id":"3273622163","IsPullRequest":false,"CreatedAt":"2025-07-29T13:41:38","Actor":"mikernet","Number":"79652","RawContent":null,"Title":"Renaming lambda parameter messes up strings across the whole project","State":"closed","Body":"**Version Used**: VS 17.14.6, .NET SDK 9.0.301, 9.0.303\n\n**Steps to Reproduce**:\n\nA video is worth a million words:\n\nhttps://github.com/user-attachments/assets/dbab4ff5-0225-49cf-a492-814f3d0763e4\n\nNotice that `format` in the string gets replaced by `f` when I refactor the lambda parameter name. It changes every string across the whole project that contains `\"format\"` in it (maybe even the solution, I'm not sure).\n\nMinimal code to trigger the issue:\n\n```cs\n\nstring x = \"something\";\nAction<string> y = something => something.ToString();\n```\n\nRename `something` and notice the string content gets changed as well.","Url":"https://github.com/dotnet/roslyn/issues/79652","RelatedDescription":"Closed issue \"Renaming lambda parameter messes up strings across the whole project\" (#79652)"},{"Id":"3272666196","IsPullRequest":true,"CreatedAt":"2025-07-29T13:31:22","Actor":"CyrusNajmabadi","Number":"79649","RawContent":null,"Title":"Show nullability of a local variable when hovering on the decl of it","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/41245\r\nFixes https://github.com/dotnet/roslyn/issues/42897\r\nFixes https://github.com/dotnet/roslyn/issues/63959\r\n","Url":"https://github.com/dotnet/roslyn/pull/79649","RelatedDescription":"Closed or merged PR \"Show nullability of a local variable when hovering on the decl of it\" (#79649)"},{"Id":"3272695627","IsPullRequest":false,"CreatedAt":"2025-07-29T08:39:05","Actor":"roji","Number":"79650","RawContent":null,"Title":"CS9236 reported even when lambda parameters/return types are explicitly specified","State":"open","Body":"Following up on https://github.com/dotnet/efcore/pull/36454, see below for a minimal repro in which CS9236 (Compiling requires binding the lambda expression at least 200 times) is reported). Note that all lambdas have their parameter and return types explicitly determined, but CS9236 is still reported.\n\nThis reproed for me with dotnet SDK 10.0.100-preview.6.25358.103.\n \n```c#\nvoid Produces_a_diagnostic()\n{\n    AssertQuery(\n        IQueryable<IQueryable<IQueryable<IQueryable<Customer>>>> (ISetSource ss) => ss.Set<Customer>()\n            .Select(IQueryable<IQueryable<IQueryable<Customer>>> (Customer outer) => ss.Set<Customer>()\n                .Select(IQueryable<IQueryable<Customer>> (Customer c) => ss.Set<Customer>()\n                                                                                            // CS9236 just below\n                    .Select(IQueryable<Customer> (Customer cc) => ss.Set<Customer>().OrderBy(string (Customer inner) => inner.CustomerID)))));\n\n    void AssertQuery<TResult>(Func<ISetSource, IQueryable<TResult>> query)\n        => throw new NotImplementedException();\n}\n\n// Interestingly, if I switch to a regular array with IEnumerable instead of IQueryable,\n// the diagnostic goes away (possibly because of the removal of the extra Set() call?):\nvoid Does_not_produce_a_diagnostic()\n{\n    AssertQuery(\n        IEnumerable<IEnumerable<IEnumerable<IEnumerable<Customer>>>> (Customer[] ss) => ss\n            .Select(IEnumerable<IEnumerable<IEnumerable<Customer>>> (Customer outer) => ss\n                .Select(IEnumerable<IEnumerable<Customer>> (Customer c) => ss\n                    .Select(IEnumerable<Customer> (Customer cc) => ss.OrderBy(string (Customer inner) => inner.CustomerID)))));\n\n    void AssertQuery<TResult>(Func<Customer[], IEnumerable<TResult>> query)\n        => throw new NotImplementedException();\n}\n\npublic interface ISetSource\n{\n    IQueryable<TEntity> Set<TEntity>()\n        where TEntity : class;\n}\n\npublic class Customer\n{\n    public string CustomerID { get; set; }\n}\n```\n\n/cc @jaredpar @CyrusNajmabadi ","Url":"https://github.com/dotnet/roslyn/issues/79650","RelatedDescription":"Open issue \"CS9236 reported even when lambda parameters/return types are explicitly specified\" (#79650)"},{"Id":"3271883968","IsPullRequest":true,"CreatedAt":"2025-07-29T04:47:06","Actor":"github-actions[bot]","Number":"79648","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* dotnet-maestro[bot]\n* RikkiGibson\n* dibarbet\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79648","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79648)"},{"Id":"3271705281","IsPullRequest":true,"CreatedAt":"2025-07-29T03:21:03","Actor":"dotnet-maestro[bot]","Number":"79647","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:68bcfd48-e237-4022-9011-da7f2d2b96e6)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [68bcfd48-e237-4022-9011-da7f2d2b96e6](https://maestro.dot.net/subscriptions?search=68bcfd48-e237-4022-9011-da7f2d2b96e6)\n- **Build**: [20250727.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2759482)\n- **Date Produced**: July 28, 2025 5:33:53 PM UTC\n- **Commit**: [6a953e76162f3f079405f80e28664fa51b136740](https://github.com/dotnet/dotnet/commit/6a953e76162f3f079405f80e28664fa51b136740)\n- **Commit Diff**: [03fb785...6a953e7](https://github.com/dotnet/dotnet/compare/03fb78540de4e5b3c8874da30e60b58321956993...6a953e76162f3f079405f80e28664fa51b136740)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [2.0.0-rc.1.25375.119 to 2.0.0-rc.1.25377.103](https://github.com/dotnet/dotnet/compare/03fb78540d...6a953e7616)\n  - System.CommandLine\n\n[marker]: <> (End:68bcfd48-e237-4022-9011-da7f2d2b96e6)\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/aspnetcore/compare/bf1f642be9fe230fed38e10561d4aa9ed5859b8f...c40d32ed99f3fae965ac81a257e3cf3889601754\n- https://github.com/dotnet/diagnostics/compare/d7d850097b755b343851f9c5b93325aacb8323aa...24de8bfbfd5795acd1dde863ed8172d538a9f585\n- https://github.com/dotnet/fsharp/compare/7dd51e626b3787b69d3933a33cf2ce23fc36c576...53929f2e01281a614a15033dfaae6fb6d00bb543\n- https://github.com/dotnet/roslyn-analyzers/compare/06f47ea69c931a5111d32b1c443d4546db5888f2...5261191c4ec2e273dc4400328a6e81ba7f677b82\n- https://github.com/dotnet/winforms/compare/91ebb7421e6248f425c79169c448246150bd4c39...cd22d8061ea3461925cb5aacb4b0e2c16c132063\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/roslyn/pull/79647","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#79647)"},{"Id":"3271570691","IsPullRequest":true,"CreatedAt":"2025-07-29T00:26:48","Actor":"github-actions[bot]","Number":"79645","RawContent":null,"Title":"[automated] Merge branch 'main' => 'main-vs-deps'","State":"closed","Body":"I detected changes in the main branch which have not been merged yet to main-vs-deps. I'm a robot and am configured to help you automatically keep main-vs-deps up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on main by the following committers:\n\n* CyrusNajmabadi\n* jasonmalinowski\n* tmat\n* davidwengier\n* slang25\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout main\r\ngit pull --ff-only\r\ngit checkout main-vs-deps\r\ngit pull --ff-only\r\ngit merge --no-ff main\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/main-to-main-vs-deps'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\nThe provided examples assume that the remote is named 'origin'. If you have a different remote name, please replace 'origin' with the name of your remote.\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull https://github.com/dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit fetch\r\ngit checkout -b merge/main-to-main-vs-deps origin/main-vs-deps\r\ngit pull git@github.com:dotnet/roslyn merge/main-to-main-vs-deps\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/roslyn HEAD:merge/main-to-main-vs-deps\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/roslyn/pull/79645","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'main' => 'main-vs-deps'\" (#79645)"},{"Id":"3271573800","IsPullRequest":false,"CreatedAt":"2025-07-29T00:12:45","Actor":"dotnet-bot","Number":"79646","RawContent":null,"Title":"[Automated] PRs inserted in VS build main-10828.76","State":"closed","Body":"[View Complete Diff of Changes](https://github.com/dotnet/roslyn/compare/a0f3e3327b410aa34c8bed125e0b2595ab506fb1...e644f864fb302c088d751f6face7bd54cda17259?w=1)\n- [Fix Xaml MEF import](https://github.com/dotnet/roslyn/pull/79616)\n- [Add diagnostic provider for clients without dynamic registration](https://github.com/dotnet/roslyn/pull/77984)\n- [Fix eol handling on the last token in a file when formatting code actions](https://github.com/dotnet/roslyn/pull/79602)\n- [Reduce allocations during CommonCompletionItem.Create](https://github.com/dotnet/roslyn/pull/79591)\n- [Remove unchecked values from tests](https://github.com/dotnet/roslyn/pull/79601)\n- [Nullable extensions: Add assertion to AsMemberOfType and handle failures](https://github.com/dotnet/roslyn/pull/79428)\n- [Add metadata documents to the MAS workspace upfront](https://github.com/dotnet/roslyn/pull/78886)\n- [Avoid adding dependency on System.Threading.Channels to InteractiveHost](https://github.com/dotnet/roslyn/pull/79594)\n- [Update debugger contracts to 18.0.0-beta.25353.1](https://github.com/dotnet/roslyn/pull/79277)\n- ['use explicit type' should not be offered when anonymous types are involved](https://github.com/dotnet/roslyn/pull/79572)\n- [Include comments written above local variables when getting quick info for them.](https://github.com/dotnet/roslyn/pull/79580)\n- [Modify LSP folding ranges to account for AutoCollapse](https://github.com/dotnet/roslyn/pull/79551)\n- [Have 'use explicit type' add usings as necessary to minimally qualify the type](https://github.com/dotnet/roslyn/pull/79574)\n- [SemanticSearchService refactoring](https://github.com/dotnet/roslyn/pull/79522)\n- [Fix creating skeleton cross-language references](https://github.com/dotnet/roslyn/pull/79576)\n- [Remove obsolete API the project system was using](https://github.com/dotnet/roslyn/pull/79565)\n- [Get rid of an unnecessary image list load](https://github.com/dotnet/roslyn/pull/79564)\n- [Mark SyntaxTokenParser as non-experimental](https://github.com/dotnet/roslyn/pull/79521)\n- [Fix issue where we weren't properly adding elastic trivia to newly generated members](https://github.com/dotnet/roslyn/pull/79571)\n- [Further simplification of common test patterns.](https://github.com/dotnet/roslyn/pull/79568)\n- [Add back in helpers that were removed in #79559](https://github.com/dotnet/roslyn/pull/79567)\n- [Fix main build break AGAIN](https://github.com/dotnet/roslyn/pull/79559)\n- [Projects to deploy](https://github.com/dotnet/roslyn/pull/79430)\n- [Fix main build break](https://github.com/dotnet/roslyn/pull/79554)\n- [Properly handle optional arguments when converting a local function to a method.](https://github.com/dotnet/roslyn/pull/79531)\n- [Also downgrade System.Numerics.Vectors for VS](https://github.com/dotnet/roslyn/pull/79548)\n- [Fix location of 'partial' modifier when generating new partial members](https://github.com/dotnet/roslyn/pull/79545)\n- [Fix issue with 'use explicit type' and nullable tuples](https://github.com/dotnet/roslyn/pull/79544)\n- [Add Enum static extensions](https://github.com/dotnet/roslyn/pull/79546)\n- [Fix name qualification when moving a using alias outside of a file scoped namespace](https://github.com/dotnet/roslyn/pull/79540)\n- [Remove lots of duplication in our test harness.](https://github.com/dotnet/roslyn/pull/79536)\n- [Fix out of bounds when creating structure guides for types without bodies](https://github.com/dotnet/roslyn/pull/79543)\n- [Convert ValueTaskFactory methods to static extensions](https://github.com/dotnet/roslyn/pull/79541)\n- [Get rid of legacy test methods.](https://github.com/dotnet/roslyn/pull/79532)\n- [Add Version.Details.props](https://github.com/dotnet/roslyn/pull/79539)\n- [Cleanup split between lexer and sliding-text-window](https://github.com/dotnet/roslyn/pull/79205)\n- [Extensions: address or split remaining open issues directly associated with test plan](https://github.com/dotnet/roslyn/pull/79452)\n- [Improve compiler server/client logging](https://github.com/dotnet/roslyn/pull/79335)\n- [Allow add using to work on Razor generated documents](https://github.com/dotnet/roslyn/pull/79530)\n- [Simplify ancestor checks](https://github.com/dotnet/roslyn/pull/79513)\n- [Update Basic.Reference.Assemblies](https://github.com/dotnet/roslyn/pull/79525)\n- [Downgrade System.Memory to make VS happy](https://github.com/dotnet/roslyn/pull/79523)\n- [Fix 'this' keyword not being recomended where allowed](https://github.com/dotnet/roslyn/pull/79514)\n- [Prevent auth issue in PR val builds](https://github.com/dotnet/roslyn/pull/79524)\n- [Allow captured primary constructor parameters to be still used in base-list](https://github.com/dotnet/roslyn/pull/79512)\n- [Fix 'switch' keyword recomendations after an expression](https://github.com/dotnet/roslyn/pull/79515)\n- [Do not do full cleanup when we are formatting a new document](https://github.com/dotnet/roslyn/pull/79508)\n- [Fix escaping of enum members in completion](https://github.com/dotnet/roslyn/pull/79516)\n- [Suggest proper 'Async'-suffixed name for Task-returning symbols](https://github.com/dotnet/roslyn/pull/79518)\n- [Reenable analyzer that was disabled when we moved to .Net 10 Preview 5](https://github.com/dotnet/roslyn/pull/79511)\n- [Make attachdebugger flag work on non-Windows](https://github.com/dotnet/roslyn/pull/79499)\n- [Update VMR orchestrator property](https://github.com/dotnet/roslyn/pull/79517)\n- [Extensions: add test for function type scenario](https://github.com/dotnet/roslyn/pull/79323)\n- [[main] Update dependencies from dotnet/arcade](https://github.com/dotnet/roslyn/pull/79450)\n- [Fix exception when requesting additional file diagnostics](https://github.com/dotnet/roslyn/pull/79501)\n- [Remove asynchrony from service registration](https://github.com/dotnet/roslyn/pull/79493)\n- [Don't mark special compiler synthesized members as obsolete](https://github.com/dotnet/roslyn/pull/79496)\n- [Fix name declaration completion in primary constructor parameters](https://github.com/dotnet/roslyn/pull/79497)\n- [Extensions: fix issue with GetParameterOrExtensionParameter](https://github.com/dotnet/roslyn/pull/79402)\n- [Generate complogs on build failure](https://github.com/dotnet/roslyn/pull/79446)\n- [Use globs in .projitems for source packages](https://github.com/dotnet/roslyn/pull/79480)\n- [Do not place SuppressMessage attributes on an extension block](https://github.com/dotnet/roslyn/pull/79492)\n- [Ignore all targets of MS.CA.Threading.Package in rebuild](https://github.com/dotnet/roslyn/pull/79495)\n- [Find add-using results in SG docs](https://github.com/dotnet/roslyn/pull/79490)\n- [Do not remove usings/imports in code-cleanup when file has syntax errors](https://github.com/dotnet/roslyn/pull/79484)\n- [Allow Razor to create a formatting options, and send them to OOP](https://github.com/dotnet/roslyn/pull/79458)\n- [Correctly change return type of partial method definition part when making method async](https://github.com/dotnet/roslyn/pull/79478)\n- [Move RoslynParallel and ProducerConsumer to threading source package](https://github.com/dotnet/roslyn/pull/79474)\n- [Update System.Memory to prevent bootstrap failure](https://github.com/dotnet/roslyn/pull/79475)\n","Url":"https://github.com/dotnet/roslyn/issues/79646","RelatedDescription":"Closed issue \"[Automated] PRs inserted in VS build main-10828.76\" (#79646)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"3275444708","IsPullRequest":true,"CreatedAt":"2025-07-30T02:03:04","Actor":"dotnet-maestro[bot]","Number":"49990","RawContent":null,"Title":"[main] Update dependencies from microsoft/testfx","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:91043ec4-cb05-4190-931d-16d6d3e461e4)\n## From https://github.com/microsoft/testfx\n- **Subscription**: [91043ec4-cb05-4190-931d-16d6d3e461e4](https://maestro.dot.net/subscriptions?search=91043ec4-cb05-4190-931d-16d6d3e461e4)\n- **Build**: [20250729.21](https://dev.azure.com/dnceng/internal/_build/results?buildId=2760855)\n- **Date Produced**: July 29, 2025 10:44:17 PM UTC\n- **Commit**: [f822bb9cfb379c5d49b6a138504bea8f0093ca7b](https://github.com/microsoft/testfx/commit/f822bb9cfb379c5d49b6a138504bea8f0093ca7b)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [1.8.0-preview.25378.9 to 1.9.0-preview.25379.21][1]\n    - Microsoft.Testing.Platform\n  - From [3.10.0-preview.25378.9 to 3.11.0-preview.25379.21][1]\n    - MSTest\n\n[1]: https://github.com/microsoft/testfx/compare/4517f8a354...f822bb9cfb\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:91043ec4-cb05-4190-931d-16d6d3e461e4)\n\n","Url":"https://github.com/dotnet/sdk/pull/49990","RelatedDescription":"Open PR \"[main] Update dependencies from microsoft/testfx\" (#49990)"},{"Id":"3273179761","IsPullRequest":true,"CreatedAt":"2025-07-30T00:10:17","Actor":"dotnet-maestro[bot]","Number":"49979","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade-services","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:f28c1419-5c6d-450e-ea9c-08dc651d4041)\n## From https://github.com/dotnet/arcade-services\n- **Subscription**: [f28c1419-5c6d-450e-ea9c-08dc651d4041](https://maestro.dot.net/subscriptions?search=f28c1419-5c6d-450e-ea9c-08dc651d4041)\n- **Build**: [20250729.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2760440)\n- **Date Produced**: July 29, 2025 10:38:35 AM UTC\n- **Commit**: [a85dd96e684db2ed4a224d1aeda065a4faea2eff](https://github.com/dotnet/arcade-services/commit/a85dd96e684db2ed4a224d1aeda065a4faea2eff)\n- **Branch**: refs/heads/production\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [1.1.0-beta.25374.1 to 1.1.0-beta.25379.3][1]\n    - Microsoft.DotNet.Darc\n    - Microsoft.DotNet.DarcLib\n\n[1]: https://github.com/dotnet/arcade-services/compare/e5296d002b...a85dd96e68\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:f28c1419-5c6d-450e-ea9c-08dc651d4041)\n\n","Url":"https://github.com/dotnet/sdk/pull/49979","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade-services\" (#49979)"},{"Id":"3275051813","IsPullRequest":false,"CreatedAt":"2025-07-29T21:35:43","Actor":"tmat","Number":"49989","RawContent":null,"Title":"run command does not forward -binaryLogger option","State":"open","Body":"The list of options `command.Options.Where(o => o is IForwardedOption)` does not include `-bl` msbuild option, while it does include `--property` msbuild option:\n\n<img width=\"1018\" height=\"244\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b73e9b61-3020-4301-a4c0-f65209fc7515\" />\n\n`dotnet watch` needs to forward this option to `dotnet build` instead of forwarding it to the application.\n\n\n","Url":"https://github.com/dotnet/sdk/issues/49989","RelatedDescription":"Open issue \"run command does not forward -binaryLogger option\" (#49989)"},{"Id":"3274430640","IsPullRequest":false,"CreatedAt":"2025-07-29T17:32:22","Actor":"TimPurdum","Number":"49988","RawContent":null,"Title":"TypeScript Compilation in Razor Class Library causes build to fail in referencing projects","State":"open","Body":"### Describe the bug\nA Razor Class Library with TypeScript files does not consistently build successfully in .NET 9+\n\n### To Reproduce\n[Repro Project](https://github.com/dymaptic/TypeScriptBuildIssueDemo)\n\n1. Clone the repository.\n2. Open the solution in Visual Studio 2022 or later.\n3. Build the solution or main project (Blazor app `TypeScriptBuildIssueDemo`).\n4. Right-click and Re-build the solution or main project.\n\nThis is also reproducible in VSCode and JetBrains Rider. However, it does not appear to be reproducible from the command line.\nLikely this points to an issue with the parallel build processes of the IDEs.\n\n### Exceptions\n\nYou should see the build failing alternating times with the following error:\n\n```\nSystem.InvalidOperationException: No file exists for the asset at either location 'D:\\TypeScriptBuildIssueDemo\\TypeScriptBuildIssueDemo.Library\\wwwroot\\js\\app.js' or 'wwwroot\\js\\app.js'.\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.StaticWebAsset.ResolveFile(String identity, String originalItemSpec)\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.DefineStaticWebAssets.ResolveFileDetails(String originalItemSpec, String identity)\n   at Microsoft.AspNetCore.StaticWebAssets.Tasks.DefineStaticWebAssets.Execute()\n```\n\n### Further technical details\n\n<details><summary>details of dotnet --info</summary>\n<p>\n.NET SDK:\n Version:           10.0.100-preview.6.25358.103\n Commit:            75972a5ba7\n Workload version:  10.0.100-manifests.6616851e\n MSBuild version:   17.15.0-preview-25358-103+75972a5ba\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.26100\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\10.0.100-preview.6.25358.103\\\n\n.NET workloads installed:\n [maccatalyst]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    18.4.10622-net10-p5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.maccatalyst\\18.4.10622-net10-p5\\WorkloadManifest.json\n   Install Type:              Msi\n\n [android]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    36.0.0-preview.5.116/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.android\\36.0.0-preview.5.116\\WorkloadManifest.json\n   Install Type:              Msi\n\n [maui-windows]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    10.0.0-preview.5.25306.5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.maui\\10.0.0-preview.5.25306.5\\WorkloadManifest.json\n   Install Type:              Msi\n\n [ios]\n   Installation Source: VS 17.14.36221.1\n   Manifest Version:    18.4.10622-net10-p5/10.0.100-preview.5\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\10.0.100-preview.5\\microsoft.net.sdk.ios\\18.4.10622-net10-p5\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use workload sets when installing new manifests.\nWorkloads are configured to install and update using workload versions, but none were found. Run \"dotnet workload restore\" to install a workload version.\n\nHost:\n  Version:      10.0.0-preview.6.25358.103\n  Architecture: x64\n  Commit:       75972a5ba7\n\n.NET SDKs installed:\n  8.0.412 [C:\\Program Files\\dotnet\\sdk]\n  9.0.205 [C:\\Program Files\\dotnet\\sdk]\n  9.0.301 [C:\\Program Files\\dotnet\\sdk]\n  10.0.100-preview.6.25358.103 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   \n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 10.0.0-preview.6.25358.103 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n</p>\n</details>\n- Visual Studio Version 17.14.7, Windows 11 version 10.0.26100\n","Url":"https://github.com/dotnet/sdk/issues/49988","RelatedDescription":"Open issue \"TypeScript Compilation in Razor Class Library causes build to fail in referencing projects\" (#49988)"},{"Id":"3273647414","IsPullRequest":false,"CreatedAt":"2025-07-29T16:03:17","Actor":"S-Luiten","Number":"49981","RawContent":null,"Title":"Cannot use NuGet MCP server when using private feed","State":"closed","Body":"<!--\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\n\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\n\n-->\n\n### Describe the bug\nAdding a NuGet MCP server with `dnx` to `.mcp.json` / `.vscode/mcp.json` cannot be used when the package is hosted in a private nuget feed. Note that this is **not** simply a feature request, because the exception noted below also happens if the package is added to a local folder feed (and I assume the same applies if the package is hosted on nuget.org). I had to disable / remove the private feed(s) from my nuget.config to get it working.\n\n### To Reproduce\n<!--\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\n\nWe may close this issue if:\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\n- if we will not be able to repro the behavior you're reporting\n-->\nFollow the steps from: https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart/\nPublish to a private nuget feed instead of nuget.org\n\n### Exceptions (if any)\n```\n[NuGet Manager] [Warning] The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\nUnhandled exception: Unable to load the service index for source https://pkgs.dev.azure.com/[org]/_packaging/[feed]/nuget/v3/index.json\n```\n\n### Further technical details\nTested on both VS2022 (17.14.9) and VSCode insiders (1.103.0), with .NET 10 preview 6 SDK installed","Url":"https://github.com/dotnet/sdk/issues/49981","RelatedDescription":"Closed issue \"Cannot use NuGet MCP server when using private feed\" (#49981)"},{"Id":"3273965757","IsPullRequest":false,"CreatedAt":"2025-07-29T16:03:15","Actor":"glatzert","Number":"49983","RawContent":null,"Title":"`dotnet restore` failes when a no_proxy environment variable exists, that starts with *","State":"closed","Body":"### Describe the bug\nIf you run `dotnet restore`, with the system having an environment variable `no_proxy` set to `*.example.com` it will fail with ` Invalid regular expression: /*\\.example\\.com/: Nothing to repeat`\n\n### To Reproduce\n> setx no_proxy *.example.com\n> dotnet restore\n\n### Exceptions (if any)\n> ##[error]SyntaxError: Invalid regular expression: /*\\.example\\.com/: Nothing to repeat\n> ##[error]Packages failed to restore\n\nSeen with dotnet 9.0.302","Url":"https://github.com/dotnet/sdk/issues/49983","RelatedDescription":"Closed issue \"`dotnet restore` failes when a no_proxy environment variable exists, that starts with *\" (#49983)"},{"Id":"3274162246","IsPullRequest":true,"CreatedAt":"2025-07-29T15:57:11","Actor":"Copilot","Number":"49987","RawContent":null,"Title":"Update MSTest in test templates (template_feed directory) to 3.10.0","State":"open","Body":"This PR updates MSTest references in all test project templates from version 3.9.0 to 3.10.0 as requested in the issue.\n\n## Changes Made\n\nUpdated MSTest version references in 4 template files:\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-CSharp/Company.TestProject1.csproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-FSharp/Company.TestProject1.fsproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/MSTest-VisualBasic/Company.TestProject1.vbproj`\n- `template_feed/Microsoft.DotNet.Common.ProjectTemplates.10.0/content/Playwright-MSTest-CSharp/Company.TestProject1.csproj`\n\nEach template file had two version references updated:\n1. MSTest SDK reference: `<Project Sdk=\"MSTest.Sdk/3.9.0\">` → `<Project Sdk=\"MSTest.Sdk/3.10.0\">`\n2. MSTest package reference: `<PackageReference Include=\"MSTest\" Version=\"3.9.0\" />` → `<PackageReference Include=\"MSTest\" Version=\"3.10.0\" />`\n\n## Testing\n\n- Build completed successfully without errors\n- Template creation works correctly with new version (verified with both C# and F# templates)\n- Generated project files contain the updated MSTest 3.10.0 references\n- All previous 3.9.0 references have been removed from the template_feed directory\n\nThe changes are minimal and surgical, updating only the necessary version references to achieve the requested update.\n\nFixes #49856.\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey.","Url":"https://github.com/dotnet/sdk/pull/49987","RelatedDescription":"Open PR \"Update MSTest in test templates (template_feed directory) to 3.10.0\" (#49987)"},{"Id":"3274131868","IsPullRequest":false,"CreatedAt":"2025-07-29T15:48:43","Actor":"Youssef1313","Number":"49986","RawContent":null,"Title":"Update test templates to use 3.10.0 instead of 3.9.3","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/49986","RelatedDescription":"Closed issue \"Update test templates to use 3.10.0 instead of 3.9.3\" (#49986)"},{"Id":"3274098902","IsPullRequest":false,"CreatedAt":"2025-07-29T15:37:05","Actor":"sator-imaging","Number":"49985","RawContent":null,"Title":"Ability to inject project/package reference from command line","State":"open","Body":"# Motivation\n*At this moment*, AI coding agents don't understand the new `dotnet run` features.\n\nThey usuallly say like as follows.\n- Ok, I can provide `dotnet-script` information.\n- Did you know: the power of `.csx` files.\n\nCoding agents well-understand top level statements. so, I want to inject the additional nuget package and project references to the agent-written .cs files.\n\n\n### Is your feature request related to a problem? Please describe.\nNot a problem.\n\n### Describe the solution you'd like\n```bash\ndotnet run file-based-app.cs --pacakge-reference \"nuget.package@1.0.0\" --project-reference \"path/to/project.csproj\"\n```\n\nor, determine by file extension.\n\n```bash\ndotnet run file-based-app.cs -ref \"nuget@1.0.0\" -ref \"./project.csproj\"\n```\n\nadditionally, it's so great to have the ability to run test with single .cs file.\n\n```bash\ndotnet test unitTest.cs -ref MSTest@latest -ref \"../src/something.csproj\"\n```\n\n### Additional context\nThe time will solve.\n","Url":"https://github.com/dotnet/sdk/issues/49985","RelatedDescription":"Open issue \"Ability to inject project/package reference from command line\" (#49985)"},{"Id":"3274046577","IsPullRequest":true,"CreatedAt":"2025-07-29T15:19:28","Actor":"Youssef1313","Number":"49984","RawContent":null,"Title":"make dicts in NamedPipeBase strong typed","State":"open","Body":"Syncing with https://github.com/microsoft/testfx/pull/5973/","Url":"https://github.com/dotnet/sdk/pull/49984","RelatedDescription":"Open PR \"make dicts in NamedPipeBase strong typed\" (#49984)"},{"Id":"3273803173","IsPullRequest":false,"CreatedAt":"2025-07-29T14:07:32","Actor":"S-Luiten","Number":"49982","RawContent":null,"Title":"Support uninstalling individual project templates","State":"open","Body":"### Is your feature request related to a problem? Please describe.\nWhen asking an AI agent to create a new blazor webassembly project, they will most likely use the old wasm template instead of the new blazor web app template. To prevent this, I want to be able to uninstall or at least disable the `blazorwasm` and `blazorwasm-empty` project templates.\n\n### Describe the solution you'd like\n`dotnet new uninstall` should be able to uninstall individual project templates by their short name in addition to being able to uninstall project template packages.","Url":"https://github.com/dotnet/sdk/issues/49982","RelatedDescription":"Open issue \"Support uninstalling individual project templates\" (#49982)"},{"Id":"3273439985","IsPullRequest":true,"CreatedAt":"2025-07-29T13:23:35","Actor":"dotnet-maestro[bot]","Number":"49980","RawContent":null,"Title":"[main] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:fcb199f6-ff33-44a0-f3ef-08d8e97c775d)\n## From https://github.com/nuget/nuget.client\n- **Subscription**: [fcb199f6-ff33-44a0-f3ef-08d8e97c775d](https://maestro.dot.net/subscriptions?search=fcb199f6-ff33-44a0-f3ef-08d8e97c775d)\n- **Build**: [7.0.0.86](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=12056170)\n- **Date Produced**: July 29, 2025 3:36:02 AM UTC\n- **Commit**: [9644810e0c4746ad2ec9acbc83e8c5d961551561](https://github.com/nuget/nuget.client/commit/9644810e0c4746ad2ec9acbc83e8c5d961551561)\n- **Branch**: dev\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [7.0.0-preview.1.67 to 7.0.0-preview.1.86][1]\n    - Microsoft.Build.NuGetSdkResolver\n    - NuGet.Build.Tasks\n    - NuGet.Build.Tasks.Console\n    - NuGet.Build.Tasks.Pack\n    - NuGet.CommandLine.XPlat\n    - NuGet.Commands\n    - NuGet.Common\n    - NuGet.Configuration\n    - NuGet.Credentials\n    - NuGet.DependencyResolver.Core\n    - NuGet.Frameworks\n    - NuGet.LibraryModel\n    - NuGet.Localization\n    - NuGet.Packaging\n    - NuGet.ProjectModel\n    - NuGet.Protocol\n    - NuGet.Versioning\n\n[1]: https://github.com/nuget/nuget.client/compare/3326797718...9644810e0c\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:fcb199f6-ff33-44a0-f3ef-08d8e97c775d)\n\n","Url":"https://github.com/dotnet/sdk/pull/49980","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from nuget/nuget.client\" (#49980)"},{"Id":"3272118760","IsPullRequest":false,"CreatedAt":"2025-07-29T05:15:40","Actor":"Gijsreyn","Number":"49977","RawContent":null,"Title":"Allow post copy dotnet tool install","State":"open","Body":"### Is your feature request related to a problem? Please describe.\nI am trying to create a .NET tool for DSC v3 resources. I've successfully created the .NET tool, but it's lacking a post-copy step. \n\n<img width=\"467\" height=\"256\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ad829fb5-feb2-438b-b101-fea87f6e36c9\" />\n\nI would like to be able to copy the resource manifest in the root of the tools directory, rather than manually copying it here or set the PATH environment variable to something like: `C:\\Users\\<username>\\.dotnet\\tools\\.store\\universaldsc.resource.windows.user\\0.1.0\\universaldsc.resource.windows.user\\0.1.0\\tools\\net9.0\\any`\n\n### Describe the solution you'd like\nAdd the ability to provide a post-copy task in the DotnetToolSettings.xml.\n\n### Additional context\nAdd any other context or screenshots about the feature request here.","Url":"https://github.com/dotnet/sdk/issues/49977","RelatedDescription":"Open issue \"Allow post copy dotnet tool install\" (#49977)"},{"Id":"3271700670","IsPullRequest":true,"CreatedAt":"2025-07-29T03:23:46","Actor":"dotnet-maestro[bot]","Number":"49976","RawContent":null,"Title":"[main] Update dependencies from microsoft/testfx","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:91043ec4-cb05-4190-931d-16d6d3e461e4)\n## From https://github.com/microsoft/testfx\n- **Subscription**: [91043ec4-cb05-4190-931d-16d6d3e461e4](https://maestro.dot.net/subscriptions?search=91043ec4-cb05-4190-931d-16d6d3e461e4)\n- **Build**: [20250728.9](https://dev.azure.com/dnceng/internal/_build/results?buildId=2759698)\n- **Date Produced**: July 28, 2025 2:09:20 PM UTC\n- **Commit**: [4517f8a354d3e066d8e44796b37a1064b6bfd8a7](https://github.com/microsoft/testfx/commit/4517f8a354d3e066d8e44796b37a1064b6bfd8a7)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [1.8.0-preview.25374.11 to 1.8.0-preview.25378.9][1]\n    - Microsoft.Testing.Platform\n  - From [3.10.0-preview.25374.11 to 3.10.0-preview.25378.9][1]\n    - MSTest\n\n[1]: https://github.com/microsoft/testfx/compare/f1ea405d39...4517f8a354\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:91043ec4-cb05-4190-931d-16d6d3e461e4)\n\n","Url":"https://github.com/dotnet/sdk/pull/49976","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from microsoft/testfx\" (#49976)"},{"Id":"3268842035","IsPullRequest":false,"CreatedAt":"2025-07-29T02:02:55","Actor":"vwenchen","Number":"49965","RawContent":null,"Title":"[NETSDKE2E][Regression]Redundant messages are displayed in terminal output when running .NET 10.0 project.","State":"closed","Body":"### Issue Description\nWith NET10 preview7 sdk installed, Reductant \"build succeed\" log displays during creating project in CLI.\n\n### Steps to Reproduce\n1. Install Net 10.0.100-preview.7.25372.104 SDK on window11-x64.\n2. In CLI, dotnet new console -o myconsole\n3. Cd myconsole and then \"dotnet build\"\n4. After \"dotnet build\", run \"dotnet restore/dotnet pack/dotnet publish\" and then check if log info can be displayed well.\n\n### Expected Behavior\nFor step4,\nThere is no build log displaying and the result can be displayed directly in CLI.\n\n\n### Actual Behavior\nBuild info displays again even though we have built project in step3.\n\n<img width=\"1101\" height=\"543\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0d8cc2d4-5234-47e2-8359-b4283bac3b7b\" />\n\n\n\ndotnet --info\n.NET SDK:\n Version:           10.0.100-preview.7.25374.104\n Commit:            3f1b780b8c\n Workload version:  10.0.100-manifests.dab2011a\n MSBuild version:   17.15.0-preview-25374-104+3f1b780b8\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.26100\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\10.0.100-preview.7.25374.104\\\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use workload sets when installing new manifests.\nWorkloads are configured to install and update using workload versions, but none were found. Run \"dotnet workload restore\" to install a workload version.\n\nHost:\n  Version:      10.0.0-preview.7.25374.104\n  Architecture: x64\n  Commit:       3f1b780b8c\n\n.NET SDKs installed:\n  10.0.100-preview.7.25374.104 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 10.0.0-preview.7.25374.104 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 10.0.0-preview.7.25374.104 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 10.0.0-preview.7.25374.104 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  None\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n\n\nAnalysis\nNo response\n\nVersions & Configurations\nNo response","Url":"https://github.com/dotnet/sdk/issues/49965","RelatedDescription":"Closed issue \"[NETSDKE2E][Regression]Redundant messages are displayed in terminal output when running .NET 10.0 project.\" (#49965)"},{"Id":"3268237019","IsPullRequest":false,"CreatedAt":"2025-07-29T01:08:13","Actor":"richlander","Number":"49960","RawContent":null,"Title":"The .NET CLI Does Not Speak the Universal Language of LLMs","State":"closed","Body":"## Executive Summary\n\n- **Problem**: The .NET CLI outputs unstructured text while AI assistants need JSON—creating a 90% token overhead that limits AI capabilities\n- **Impact**: Every major LLM training run learns inefficient .NET patterns, encoding technical debt that will persist for years\n- **Solution**: Add `--output json` to all commands, following Azure CLI's proven pattern\n- **Timeline**: Critical window closing—each month of delay means millions more training examples teaching the wrong patterns\n- **Precedent**: Microsoft already solved this in Azure CLI; kubectl proves the ecosystem benefits\n- **Ask**: Prioritize structured output as a platform reset, not incremental fixes—make .NET the template for AI-native development\n\n## The Disconnect\n\nMicrosoft is a leader in AI innovation. Azure OpenAI powers enterprise AI adoption, GitHub Copilot transforms how developers write code, and Microsoft's AI research pushes the boundaries of what's possible. Yet there's a glaring disconnect: the .NET CLI, Microsoft's flagship developer tool, remains fundamentally misaligned with the AI-driven workflows that Microsoft itself is pioneering.\n\nThis disconnect runs deeper than just AI. The .NET CLI also lags behind Microsoft's other primary focus area—cloud computing. The patterns we need aren't new AI innovations; they're proven cloud-native approaches that Microsoft has championed for years through Azure APIs, REST services, and schema-driven architectures. The .NET CLI simply hasn't adopted the same principles that power Microsoft's cloud platform success.\n\nThis isn't about falling behind competitors—it's about one part of Microsoft's ecosystem not keeping pace with Microsoft's own innovation in their two core business areas. The solution isn't revolutionary; it's evolutionary, following patterns that Microsoft has already proven successful in Azure CLI and that the industry has standardized around with tools like kubectl.\n\n## The AI Assistant Reality Check\n\nWorking with AI assistants on .NET projects reveals the friction immediately. A simple developer request like \"build this project and tell me if there were any warnings\" forces AI assistants into text parsing:\n\n```bash\n$ dotnet build\nRestore complete (0.3s)\nYou are using a preview version of .NET. See: https://aka.ms/dotnet-support-policy\n  JsonSchemaInjector succeeded (0.1s) → /home/rich/git/distroessed/artifacts/bin/JsonSchemaInjector/debug/JsonSchemaInjector.dll\n  MarkdownTemplate succeeded (0.1s) → /home/rich/git/distroessed/artifacts/bin/MarkdownTemplate/debug/MarkdownTemplate.dll\n  DotnetRelease succeeded (0.1s) → /home/rich/git/distroessed/artifacts/bin/DotnetRelease/debug/DotnetRelease.dll\n  UpdateIndexes succeeded (0.1s) → /home/rich/git/distroessed/artifacts/bin/UpdateIndexes/debug/UpdateIndexes.dll\n\nBuild succeeded in 0.7s\n```\n\nAs an AI assistant, if I cannot inspect your CLI output with `jq`, I know I'm headed into friction and unnecessary token spend. Unstructured text output with promotional messages, inconsistent formatting, and mixed timing data forces me to write complex parsing logic instead of focusing on solving your development problems.\n\nCompare this to kubectl, which has become the gold standard for AI-friendly tooling:\n\n```bash\n$ kubectl get nodes -o json | jq '.items[0].metadata.name'\n\"worker-node-1\"\n```\n\nOr Azure CLI, Microsoft's own exemplar of modern command-line design:\n\n```bash\n$ az account show --output json | jq '.name'\n\"Production Subscription\"\n```\n\nThe difference is stark. While Azure CLI and kubectl provide structured, parseable output that AI assistants can reliably consume, the .NET CLI forces AI to become a text parser, burning tokens on regex operations instead of focusing on solving developer problems.\n\n## The Path Forward: JSON-First Design\n\nThe solution follows established patterns from Microsoft's successful tools. Three key changes would transform the .NET CLI into an AI-native platform:\n\n### Today vs Goal: Key Transformations\n\n**1. Structured Output for All Commands**\n\nToday:\n\n```bash\n$ dotnet build\n# 15 lines of mixed text output\n# Requires regex parsing\n```\n\nGoal:\n\n```bash\n$ dotnet build --output json      # Structured output\n$ dotnet build                    # Human-readable (default)\n$ dotnet build -o json           # Short form\n{\n  \"succeeded\": true,\n  \"warnings\": [],\n  \"errors\": [],\n  \"projectsBuilt\": 4\n}\n```\n\n**2. Configuration as API**\n\nToday:\n\n```bash\n# Manually edit global.json\n# Hope syntax is correct\n# No validation until build\n```\n\nGoal:\n\n```bash\ndotnet config --export          # Full config as JSON\ndotnet config --import spec.json # Apply configuration\ndotnet config --validate        # Schema-based validation\n```\n\n**3. Self-Describing Schema Discovery**\n\nToday:\n\n```bash\n$ dotnet build --help\n# Wall of text\n# No machine-readable structure\n```\n\nGoal:\n\n```bash\ndotnet schema                   # Full CLI schema (hypermedia-style self-description)\ndotnet schema --version         # Schema version for compatibility checking\ndotnet schema --changes         # Evolution path and migration guide\n```\n\nThis follows the hypermedia/self-describing API pattern where tools can discover their own capabilities and evolution paths. Just as REST APIs use hypermedia to describe available operations, the CLI becomes self-documenting and versionable, enabling both AI consumption and graceful schema evolution over time.\n\n## The Deeper Problems\n\nEven when the .NET CLI does provide JSON output, the schema design often defeats the purpose. Consider `dotnet list package --format json`, which technically provides structured output but requires complex parsing:\n\n```bash\n# To get a simple list of package names requires a three-level traversal:\n$ dotnet list package --format json | jq '.projects[].frameworks[].topLevelPackages[].id'\n```\n\nThe multi-targeting scenario makes this exponentially worse, forcing AI assistants to navigate nested arrays of projects, frameworks, and packages just to answer \"what packages does this project use?\" This demonstrates that adding `--format json` isn't sufficient—the schema must be designed for programmatic consumption, not just dump internal data models as JSON.\n\nBut even this analysis is deceptively simple relative to reality. The `jq` command I showed assumes a naive scenario, but multi-targeting means there can be different package compositions and versions for different frameworks—that's actually the feature. If a project targets both .NET 9 and .NET 10, the JSON contains separate framework objects with potentially different packages. The AI faces an impossible choice: which framework's packages should it return? The \"everything is a list of lists\" foundational model forces every consumer to solve the multi-targeting complexity problem themselves, when the API should handle that complexity internally and accept context like `--framework net10.0` to return unambiguous results.\n\nHere's what this looks like in practice:\n\n```json\n// Current: The multi-targeting nightmare\n{\n  \"projects\": [{\n    \"path\": \"/src/MyProject.csproj\",\n    \"frameworks\": [\n      {\n        \"framework\": \"net9.0\",\n        \"topLevelPackages\": [\n          {\"id\": \"Newtonsoft.Json\", \"requestedVersion\": \"13.0.3\", \"resolvedVersion\": \"13.0.3\"},\n          {\"id\": \"Microsoft.Extensions.Logging\", \"requestedVersion\": \"9.0.0\", \"resolvedVersion\": \"9.0.0\"}\n        ]\n      },\n      {\n        \"framework\": \"net10.0\",\n        \"topLevelPackages\": [\n          {\"id\": \"System.Text.Json\", \"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"},\n          {\"id\": \"Microsoft.Extensions.Logging\", \"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"}\n        ]\n      }\n    ]\n  }]\n}\n\n// To answer \"what logging package version is used?\" requires:\n$ dotnet list package --format json | \\\n  jq '.projects[0].frameworks[] | \n      select(.topLevelPackages[] | \n      select(.id == \"Microsoft.Extensions.Logging\")) | \n      {framework: .framework, version: (.topLevelPackages[] | \n      select(.id == \"Microsoft.Extensions.Logging\").resolvedVersion)}'\n\n// Better: Context-aware API\n$ dotnet list package --framework net10.0 --output json\n{\n  \"packages\": [\n    {\"id\": \"System.Text.Json\", \"version\": \"10.0.0\"},\n    {\"id\": \"Microsoft.Extensions.Logging\", \"version\": \"10.0.0\"}\n  ]\n}\n\n// Direct answer to \"what logging version for .NET 10?\"\n$ dotnet list package --framework net10.0 --output json | \\\n  jq '.packages[] | select(.id == \"Microsoft.Extensions.Logging\").version'\n\"10.0.0\"\n```\n\nThe context-aware approach with `--framework` solves the multi-targeting complexity by letting the user specify their intent upfront. But we can make this even better by combining context-awareness with dictionary-based schemas:\n\n```json\n// Best: Context-aware + Dictionary-based\n// Multi-framework view (when no context specified)\n$ dotnet list package --output json\n{\n  \"frameworks\": {\n    \"net9.0\": {\n      \"Newtonsoft.Json\": {\"requestedVersion\": \"13.0.3\", \"resolvedVersion\": \"13.0.3\"},\n      \"Microsoft.Extensions.Logging\": {\"requestedVersion\": \"9.0.0\", \"resolvedVersion\": \"9.0.0\"}\n    },\n    \"net10.0\": {\n      \"System.Text.Json\": {\"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"},\n      \"Microsoft.Extensions.Logging\": {\"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"}\n    }\n  }\n}\n\n// Single-framework view (with context)\n$ dotnet list package --framework net10.0 --output json\n{\n  \"packages\": {\n    \"System.Text.Json\": {\"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"},\n    \"Microsoft.Extensions.Logging\": {\"requestedVersion\": \"10.0.0\", \"resolvedVersion\": \"10.0.0\"}\n  }\n}\n\n// Now queries become trivial:\n// \"What version of logging is used in .NET 10?\" (with context)\n$ dotnet list package --framework net10.0 --output json | jq '.packages[\"Microsoft.Extensions.Logging\"].resolvedVersion'\n\"10.0.0\"\n\n// \"What version of logging is used in .NET 10?\" (without context)\n$ dotnet list package --output json | jq '.frameworks[\"net10.0\"][\"Microsoft.Extensions.Logging\"].resolvedVersion'\n\"10.0.0\"\n\n// \"Is Newtonsoft.Json used in .NET 10?\"\n$ dotnet list package --framework net10.0 --output json | jq '.packages | has(\"Newtonsoft.Json\")'\nfalse\n\n// \"What frameworks use Microsoft.Extensions.Logging?\"\n$ dotnet list package --output json | jq '.frameworks | to_entries[] | select(.value | has(\"Microsoft.Extensions.Logging\")) | .key'\n\"net9.0\"\n\"net10.0\"\n```\n\nThis dictionary approach transforms complex search operations into direct lookups. Package IDs and framework monikers become the \"currency\" for direct access.\n\nTo show how powerful this pattern is, let me share another example. The developer @richlander recently came to me with a CVE tracking schema he didn't like but was unable to improve. It had the same hallmark problem as the packages scheme above, with heavy use of arrays requiring iteration and filtering. Instead, I got him to re-pivot the schema around dictionary lookups using \"currency\" concepts—direct access by .NET version or package ID rather than searching through lists:\n\n**Before** - \"Give me all vulnerabilities affecting .NET 8.0\":\n\n```bash\njq '.packages[] | select(.name == \"Microsoft.NetCore.Sdk\") | .affected[] | select(.family | startswith(\"8.0\"))'\n```\n\n**After** - \"Give me all vulnerabilities affecting .NET 8.0\":\n\n```bash\njq '.platform[\"8.0\"]'\n```\n\nThe CVE schema actually operates in a similar domain to package management—tracking component versions and their relationships. The transformation from array-heavy to dictionary-based access using version numbers as \"currency\" demonstrates exactly what the packages API needs: a way to specify context and get direct, unambiguous results.\n\nZooming out, if `jq` access patterns are not your design guide, then one has to ask which consumption scenario you have in mind. The difference between array-heavy schemas and dictionary-based schemas is the difference between forcing consumers to search through data versus enabling direct access to what they need.\n\n## The Token Economics Problem\n\nThis isn't just about convenience—it's about capability. AI assistants operate under token constraints, and parsing unstructured text is expensive. Let me quantify this with real examples from our earlier session:\n\n**Simple task: \"Build the project and check for warnings\"**\n\nCurrent approach (~450 tokens):\n\n```bash\n$ dotnet build\n# 15 lines of output including:\n# - Preview version warnings (repeated 4x)\n# - File paths with timestamps\n# - Mixed success/timing information\n# Requires complex parsing logic to extract warning count\n```\n\nStructured approach (~50 tokens):\n\n```bash\n$ dotnet build --output json | jq '.warnings | length'\n0\n```\n\nThat's a **90% token reduction** for a basic operation. Scale this across a development session:\n\n- Project setup: 1,200 tokens → 200 tokens (83% reduction)\n- Dependency analysis: 800 tokens → 150 tokens (81% reduction)  \n- Build troubleshooting: 2,000 tokens → 300 tokens (85% reduction)\n\n**Total session impact**: 4,000 tokens → 650 tokens\n\nFor AI assistants with typical context windows:\n\n- **Claude**: 200k context = 50 complex operations vs 300+ with structured output\n- **GPT-4**: 128k context = 32 complex operations vs 200+ with structured output\n- **Budget models**: 8k context = 2 operations vs 12+ with structured output\n\nThe irony is that .NET has the potential to be one of the cheapest platforms for AI assistance—its strong typing, explicit configuration, and structured project model should translate perfectly to structured CLI output. Instead, the current text-based approach makes .NET one of the most token-expensive platforms to work with programmatically.\n\nThis token overhead means AI assistants can perform fewer operations, make more mistakes, and provide less sophisticated automation. The tools designed to help developers are actually hindering the AI assistants that increasingly augment development workflows.\n\n## What LLMs Actually Need From Developer Tools\n\nUnderstanding why the .NET CLI struggles with AI integration requires examining what language models value most in developer tooling:\n\n**High-Utility Training Data**: Structured, predictable output becomes high-quality training examples that generalize well across scenarios. Conversely, human-readable text with inconsistent formatting becomes low-quality training data that teaches brittle, tool-specific patterns.\n\n**Cross-Platform Concept Transfer**: When I learn structured output patterns from kubectl, those concepts immediately apply to Azure CLI, GitHub CLI, and any other well-designed tool. Each tool with unique text parsing quirks becomes an isolated learning challenge rather than building on universal patterns.\n\n**Universal Operational Language Convergence**: This is the key insight. Linux core tools like `jq`, `grep`, `awk`, and shell pipelines appear in virtually every technical domain in my training data. They're the universal interface language of modern operations—what we might call the \"low entropy core\" where patterns from different domains converge into common, highly-reinforced behaviors.\n\nWhen a tool outputs JSON that works naturally with `jq`, it doesn't just get the benefit of structured data—it gets the accumulated learning from every Python data pipeline, every Kubernetes automation script, every Docker workflow, every CI/CD system that uses those same patterns. The training signal is massive because these tools are the connective tissue of modern development.\n\n**The Network Effect**: `kubectl get pods -o json | jq '.items[0].metadata.name'` isn't just a kubectl command—it's leveraging the intersection of container orchestration knowledge AND JSON processing knowledge AND shell scripting patterns. The composability creates a training signal multiplier effect.\n\n**Composability Over Memorization**: LLMs excel when tools can be chained reliably. Well-designed APIs let me focus cognitive resources on solving the developer's problem rather than wrestling with tool syntax. Token limits make this crucial—every token spent on parsing is a token not spent on solution quality.\n\n## What Success Looks Like: Learning from kubectl\n\nThe Kubernetes ecosystem demonstrates how structured CLI output enables sophisticated AI-driven automation. Tools like kait (Kubernetes AI tool) can autonomously debug cluster issues by parsing kubectl's JSON output:\n\n```bash\n# AI assistant can reliably extract and act on structured data\n$ kubectl get pods --output json | jq '.items[] | select(.status.phase==\"Failed\")'\n```\n\nThis structured approach has spawned an entire ecosystem of AI-powered Kubernetes tools:\n\n- **kubectl-ai**: Generate kubectl commands from natural language descriptions\n- **BotKube**: Chat-based cluster management with direct kubectl execution  \n- **k8sgpt**: AI-powered cluster analysis and troubleshooting\n- **Various LLM-powered operators**: Autonomous cluster management tools\n\nThese tools exist because kubectl provides consistent, structured output that AI can reliably parse and act upon. For example, an AI assistant can handle requests like \"Find pods using the most memory in the default namespace\" by running `kubectl get pods -o json` and processing the structured response—precisely the workflow enabled by predictable JSON schemas.\n\nNotably, in the Kubernetes ecosystem with all this automation capability, AI assistants rarely create YAML manifests unless specifically asked. Instead, they orchestrate one-off deployments directly through kubectl commands. The structured output makes imperative operations more reliable than declarative file manipulation, suggesting that when CLIs are designed correctly, they become the preferred interface even over traditional configuration files.\n\nThese tools exist because kubectl provides consistent, structured output with discoverable schemas. The AI can reliably understand what data is available and how to access it.\n\n## Microsoft's Own Solution: Azure CLI\n\nMicrosoft has already solved this problem in Azure CLI. Consider how Azure CLI enables AI-friendly automation:\n\n```json\n$ az vm list --output json\n[\n  {\n    \"name\": \"myVM\",\n    \"resourceGroup\": \"myRG\",\n    \"location\": \"eastus\",\n    \"powerState\": \"VM running\"\n  }\n]\n```\n\nAzure CLI's `--output json` flag provides structured data that AI assistants can reliably parse and manipulate. This enables sophisticated automation workflows where AI can:\n\n- Query resource states programmatically\n- Chain operations using structured data\n- Validate operations before execution\n- Provide clear error reporting\n\nThe pattern is proven within Microsoft's own ecosystem, yet the .NET CLI hasn't adopted these same principles.\n\n## The Strategic Isolation Problem\n\nConversely, when the .NET CLI outputs text that can't flow into standard Unix tools, it becomes isolated from the broader ecosystem. It can't leverage the massive training corpus, the \"low entropy core\", around universal tooling patterns. Every .NET-specific parsing solution is learned in isolation rather than building on the foundational patterns that appear everywhere.\n\nThis explains why Azure CLI's `--output json` was so strategically important—it didn't just add a feature, it connected Azure workflows to the universal tooling ecosystem. The .NET CLI remains an island, unable to benefit from the gravitational pull of the broader operational automation domain.\n\nC# as a programming language converges well with the \"low entropy core\" for programming languages (syntax, control structures, patterns transfer across Python, JavaScript, Go). The .NET CLI operates outside the convergent patterns of the operational domain (or control plane). This operational domain might actually have more training signal than any individual programming language because it appears across:\n\n- DevOps automation (every language ecosystem)\n- Cloud operations (every provider)  \n- Container orchestration (every platform)\n- CI/CD systems (every technology stack)\n\nWhen kubectl, Azure CLI, Docker, GitHub CLI, and AWS CLI all converge on `--output json | jq` patterns, that creates an incredibly dense training signal. When the .NET CLI outputs only text, it doesn't just miss structured data—it misses participation in this universal operational language.\n\nDomains outside this convergent core get learned as isolated special cases rather than benefiting from massive pattern reinforcement. The .NET CLI isn't just missing features—it's missing network effects.\n\n## The Platform Transformation Opportunity\n\n### Configuration as Code, Actually\n\nInstead of \"configuration files that happen to be checked in,\" .NET could achieve true configuration-as-code where:\n\n- Configuration is manipulated through APIs, not file editing\n- Complex workflows become single commands\n- AI assistants work with schemas, not syntax\n- Validation and correctness are built-in, not bolt-on\n\nWhile tools like kubectl excel at reading deployment state through APIs, there's an opportunity for .NET to provide comprehensive writing and manipulation APIs as well. This wouldn't necessarily be a strong competitive advantage, but the .NET ecosystem—with its emphasis on strongly-typed configuration and complex project hierarchies—might benefit more from structured manipulation APIs than ecosystems with simpler configuration models.\n\n### CLI as Minimal Service\n\nThe deeper insight is that a well-designed CLI with structured output is essentially a minimal service without HTTP transport. The same OpenAPI contracts that define .NET services could define .NET CLI commands. This creates unprecedented alignment between development tools and deployment targets.\n\nWhen developers work with:\n\n```bash\ndotnet build --output json\ndotnet test --output json  \ndotnet publish --output json\n```\n\nThey're using the same patterns they'll use for:\n\n```bash\ncurl https://build-service/api/build\ncurl https://test-service/api/test\ncurl https://deploy-service/api/publish\n```\n\nThis CLI-service alignment represents a competitive advantage that other platforms may not have developed.\n\n## The Innovation Paradox\n\nThe irony is that Microsoft has all the pieces to solve this problem. They understand:\n\n- **Structured APIs** (Azure, Graph API)\n- **Schema evolution** (OpenAPI, ARM templates)\n- **AI-friendly tooling** (Azure CLI, GitHub CLI)\n- **Configuration-as-code** (Azure DevOps, GitHub Actions)\n\nYet the .NET CLI hasn't yet adopted these patterns proven successful in Microsoft's own ecosystem. The tools still output text like it's 2010, while the rest of Microsoft's platform has evolved into sophisticated, schema-driven APIs.\n\n## Conclusion: Completing the Platform Vision\n\nMicrosoft's AI leadership creates an opportunity to make .NET the template for AI-native development platforms. The changes needed aren't revolutionary—they're evolutionary steps following patterns Microsoft has already proven successful.\n\nThis analysis builds on a series of related issues that collectively propose a comprehensive modernization strategy:\n\n- [dotnet/runtime#118102](https://github.com/dotnet/runtime/issues/118102): System.CommandLine's instability undermining CLI development\n- [dotnet/sdk#49973](https://github.com/dotnet/sdk/issues/49973): JSON output for `dotnet --info` and environment queries\n- [dotnet/sdk#49955](https://github.com/dotnet/sdk/issues/49955): File format encapsulation through comprehensive config commands\n- [dotnet/sdk#49951](https://github.com/dotnet/sdk/issues/49951): Optimizing for autonomous code assistants\n\n**Critical guidance for the team**: These issues should not be resolved within the confines of the existing CLI paradigm. The solution requires adopting the modern, proven approach as a platform reset, not incremental fixes to legacy patterns.\n\n### The Training Window Crisis\n\n**Time is of the essence, and the window is closing fast.**\n\nEvery major LLM training run that happens today—whether from Anthropic, OpenAI, Google, Meta, or Microsoft itself—is learning the .NET CLI's text-parsing patterns as the way to interact with .NET tooling. These patterns become deeply embedded in model weights and persist for years.\n\nConsider the timeline reality:\n\n- **Claude 3 (early 2024)**: Learned current .NET CLI text patterns\n- **GPT-4 iterations**: Continuously reinforcing text parsing approaches\n- **Gemini, Llama, and others**: All learning the same inefficient patterns\n\nEven if Microsoft ships perfect JSON support tomorrow, these models will continue suggesting text-parsing approaches for years because that's what dominated their training data.\n\nThe technical debt isn't just in the CLI—it's being encoded into the models that will assist developers for the next decade.\n\n### Adopt the universal language pattern\n\nAzure CLI demonstrates that Microsoft knows how to build AI-friendly command-line tools. kubectl proves that structured output enables ecosystem innovation. The missing piece is applying these lessons to the .NET CLI.\n\nWhen Microsoft's flagship development platform speaks the same language as Microsoft's cloud services and AI tooling, developers get a coherent experience from `dotnet new` to production deployment. That coherence—not just individual features—will differentiate .NET in an increasingly AI-driven development world.\n\nThe path forward is clear: follow the lead of Azure CLI and kubectl, treat configuration as an API rather than files, and design for AI consumption from day one. The result wouldn't just fix current friction—it would establish .NET as the platform where AI-assisted development isn't an add-on but a fundamental design principle.\n\nThe problem isn't that the .NET CLI lacks features. It's that the .NET CLI does not speak the universal language of LLMs—the structured data patterns that appear in millions of training examples across every domain. Until it learns this language, it remains isolated from the AI revolution that Microsoft itself is leading.\n\nMicrosoft leads in AI innovation. It's time for their developer tools to reflect that leadership.\n","Url":"https://github.com/dotnet/sdk/issues/49960","RelatedDescription":"Closed issue \"The .NET CLI Does Not Speak the Universal Language of LLMs\" (#49960)"},{"Id":"3270066556","IsPullRequest":true,"CreatedAt":"2025-07-28T19:49:08","Actor":"jjonescz","Number":"49969","RawContent":null,"Title":"Avoid double disposal of terminal logger","State":"closed","Body":"Fixes a regression introduced in https://github.com/dotnet/sdk/pull/49841 - `dotnet run file.cs` results in \"Unhandled exception: The CancellationTokenSource has been disposed.\" It only appears when using the terminal logger, hence no tests catch it (and I don't think it can be tested, see https://github.com/dotnet/msbuild/issues/12237).","Url":"https://github.com/dotnet/sdk/pull/49969","RelatedDescription":"Closed or merged PR \"Avoid double disposal of terminal logger\" (#49969)"},{"Id":"3271032500","IsPullRequest":true,"CreatedAt":"2025-07-28T19:02:57","Actor":"tmat","Number":"49974","RawContent":null,"Title":"Prepare delta applier for code sharing","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/49974","RelatedDescription":"Open PR \"Prepare delta applier for code sharing\" (#49974)"},{"Id":"3268785516","IsPullRequest":true,"CreatedAt":"2025-07-28T18:46:29","Actor":"ViktorHofer","Number":"49964","RawContent":null,"Title":"Remove Idle target workaround","State":"closed","Body":"Instead of defining an empty \"Idle\" target, condition the P2Ps on restore. The `MSBuildRestoreSessionId` is only set during restore and not build.","Url":"https://github.com/dotnet/sdk/pull/49964","RelatedDescription":"Closed or merged PR \"Remove Idle target workaround\" (#49964)"},{"Id":"3270069994","IsPullRequest":true,"CreatedAt":"2025-07-28T17:46:41","Actor":"github-actions[bot]","Number":"49970","RawContent":null,"Title":"[release/10.0.1xx-preview7] Avoid double disposal of terminal logger","State":"closed","Body":"Backport of #49969 to release/10.0.1xx-preview7\r\n\r\n/cc @jjonescz\r\n\r\n## Description\r\n\r\nFixing a double disposal of MSBuild's terminal logger resulting in a crash during builds/runs of file-based apps.\r\n\r\n## Regression?\r\n\r\n- [x] Yes - introduced in [a PR](https://github.com/dotnet/sdk/pull/49841) recently merged into preview7\r\n- [ ] No\r\n\r\n## Risk\r\n\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low\r\n\r\n## Verification\r\n\r\n- [x] Manual\r\n- [ ] Automated (not possible to currently have unit tests for terminal logger, filed [an issue](https://github.com/dotnet/msbuild/issues/12237) to follow up)\r\n","Url":"https://github.com/dotnet/sdk/pull/49970","RelatedDescription":"Closed or merged PR \"[release/10.0.1xx-preview7] Avoid double disposal of terminal logger\" (#49970)"},{"Id":"3270494228","IsPullRequest":false,"CreatedAt":"2025-07-28T16:03:54","Actor":"baronfel","Number":"49972","RawContent":null,"Title":"Multi-arch container publishing doesn't work when certain RID-forcing publish properties are set","State":"open","Body":"### Describe the bug\n\nSee [this Bluesky thread](https://bsky.app/profile/chrismckee.bsky.social/post/3lunqvhetjs2j) for context and discussion.\n\nWith multi-arch container publish being a thing, some users are using it with publish configurations that conflict with historical decisions that the .NET SDK has had. Specifically, while we would like the container publish for multi arch to logically look like\n\n* outer build does zero work\n* triggers N inner RID-specific build\n* outer build uses results of inner build to make image manifest\n\nThe decision to make the `PublishContainer` target implicitly rely on the `Publish` target (via the documented command `dotnet publish -t:PublishContainer`) means that the outer project (with no RID set) is also asked to publish - and as a result if the outer project has properties like `PublishReadyToRun`, `PublishAot`, etc set then the RuntimeIdentifierInference targets force it to get a RID, which then short-circuits the decision-making of the PublishContainer target on if it is doing multi-arch publish.\n\nOne workaround is to disable `UseCurrentRuntimeIdentifier`, but the CLi today seems to not allow passing `false` for this option.","Url":"https://github.com/dotnet/sdk/issues/49972","RelatedDescription":"Open issue \"Multi-arch container publishing doesn't work when certain RID-forcing publish properties are set\" (#49972)"},{"Id":"3270308576","IsPullRequest":true,"CreatedAt":"2025-07-28T15:11:09","Actor":"WeihanLi","Number":"49971","RawContent":null,"Title":"update dotnet-cli PathToApplicationDefinition help text","State":"open","Body":"add C# file since we support dotnet run file for C# now\r\n\r\n<img width=\"2311\" height=\"627\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ac9b855a-b83e-4efe-90fb-c432a1cecbc6\" />\r\n","Url":"https://github.com/dotnet/sdk/pull/49971","RelatedDescription":"Open PR \"update dotnet-cli PathToApplicationDefinition help text\" (#49971)"},{"Id":"3268884580","IsPullRequest":true,"CreatedAt":"2025-07-28T14:32:46","Actor":"jjonescz","Number":"49966","RawContent":null,"Title":"Unskip razor tests","State":"closed","Body":"Closes https://github.com/dotnet/sdk/issues/49925.","Url":"https://github.com/dotnet/sdk/pull/49966","RelatedDescription":"Closed or merged PR \"Unskip razor tests\" (#49966)"},{"Id":"3270019063","IsPullRequest":true,"CreatedAt":"2025-07-28T13:54:14","Actor":"jjonescz","Number":"49968","RawContent":null,"Title":"Revert \"[release/10.0.1xx-preview7] Ensure all evaluation data are in binlogs from file-based apps\"","State":"open","Body":"Reverts dotnet/sdk#49896.","Url":"https://github.com/dotnet/sdk/pull/49968","RelatedDescription":"Open PR \"Revert \"[release/10.0.1xx-preview7] Ensure all evaluation data are in binlogs from file-based apps\"\" (#49968)"},{"Id":"3269921998","IsPullRequest":false,"CreatedAt":"2025-07-28T13:28:42","Actor":"stevefan1999-personal","Number":"49967","RawContent":null,"Title":"Enable Consistent NativeAOT Development Experience with Build-Time AOT Compilation Support","State":"open","Body":"## Problem Statement\n\nThe current .NET development workflow creates a significant runtime inconsistency between development (```dotnet build```) and production (```dotnet publish``` with NativeAOT). This discrepancy leads to scenarios where applications function correctly during development using JIT compilation but fail catastrophically when published as native binaries. This fundamental workflow issue undermines developer confidence and productivity.\n\n### Current Pain Points:\n\n1. **Runtime Behavior Divergence**: Code that executes successfully under ```dotnet build``` may crash or behave differently under ```dotnet publish``` with NativeAOT enabled\n2. **Late Discovery of Incompatibilities**: AOT-specific issues are often discovered only during the publish phase, leading to costly debugging cycles\n3. **Insufficient Debugging Support**: The current NativeAOT toolchain lacks the seamless debugging experience available in JIT mode\n4. **Dependency on Static Analysis**: Relying solely on Roslyn analyzers for AOT compatibility is insufficient for catching runtime-specific issues\n\n## Proposed Solution\n\n### 1. Introduce ```<BuildAot>``` MSBuild Property\n\nA new MSBuild property that enables NativeAOT compilation for all build operations, including ```dotnet build```:\n\n```xml\n<PropertyGroup>\n    <BuildAot>true</BuildAot>\n    <!-- Automatically implies <PublishAot>true</PublishAot> -->\n</PropertyGroup>\n```\n\n**Benefits:**\n- Ensures development binaries match production behavior exactly\n- Catches AOT-incompatible code immediately during development\n- Eliminates the \"works on my machine\" problem between JIT and AOT\n\n### 2. Implement Debug-Optimized NativeAOT Mode\n\nCreate a specialized compilation mode for ```<BuildAot>``` that prioritizes debugging experience over performance:\n\n**Characteristics:**\n- Single-pass code generation for rapid compilation\n- Full debug symbol generation with source mapping\n- Minimal optimizations to preserve code structure\n- Support for edit-and-continue workflows where feasible\n\n**Example configuration:**\n```xml\n<PropertyGroup>\n    <BuildAot>true</BuildAot>\n    <OptimizationPreference>Debug</OptimizationPreference>\n    <IlcGenerateStackTraceData>true</IlcGenerateStackTraceData>\n    <IlcOptimizationPreference>Size</IlcOptimizationPreference>\n</PropertyGroup>\n```\n\n### 3. Enhanced Production Optimization for ```<PublishAot>```\n\nWhen using ```dotnet publish``` with AOT, enable aggressive optimizations by default:\n\n- **Link-Time Optimization (LTO)**: Cross-module optimization for maximum performance\n- **CPU-Specific Code Paths**: Generate optimized paths for different architectures with runtime detection\n- **Profile-Guided Optimization**: Support for PGO data collection and application\n\n**Example:**\n```xml\n<PropertyGroup Condition=\"'$(Configuration)' == 'Release'\">\n    <PublishAot>true</PublishAot>\n    <IlcOptimizationPreference>Speed</IlcOptimizationPreference>\n    <IlcEnableLinkTimeOptimization>true</IlcEnableLinkTimeOptimization>\n    <IlcGenerateMicroArchitectureSpecificCode>true</IlcGenerateMicroArchitectureSpecificCode>\n</PropertyGroup>\n```\n\n### 4. Alternative Approach: AOT Emulation Mode for CoreCLR\n\nFor scenarios where full NativeAOT isn't feasible, implement an emulation mode that constrains CoreCLR to match NativeAOT behavior:\n\n```xml\n<PropertyGroup>\n    <EmulateAotConstraints>true</EmulateAotConstraints>\n</PropertyGroup>\n```\n\n**Emulation Features:**\n- Disable runtime code generation (such as [Activator.CreateInstance](https://learn.microsoft.com/en-us/dotnet/api/system.activator.createinstance?view=net-9.0) or [Reflection.Emit](https://learn.microsoft.com/en-us/dotnet/api/system.reflection.emit?view=net-9.0) just as you would expect them not to work with NativeAOT)\n- Enforce static type resolution\n- Reject runtime reflection-based invocation patterns that requires JIT\n- Simulate trimming behavior during JIT compilation\n\nThis should enable a broader estimation without having to modify too much existing code, or let's say the JIT will effectively become a AOT compiler at runtime of some sort instead, because without dynamic runtime code generation, it is effectively a single-pass compiler without aggressive optimization that emits native code instructions on the fly. With `<EmulateAotConstraints>` we could also enable a small optimization for the JIT compiler to speculatively batch pre-build and cache a large part of the hot code to native code first within a certain time budget, because we are sure that there won't be any dynamic codegen behaviour. Say like we have some pause time in the GC, and then we can leverage the pause time to do AOT codegen without having to do an online hot path profiling.\n\n### 5. Strict AOT Compatibility Mode\n\nIntroduce ```<RejectNonAotCompatible>``` property for teams requiring absolute AOT compatibility:\n\n```xml\n<PropertyGroup>\n    <RejectNonAotCompatible>true</RejectNonAotCompatible>\n</PropertyGroup>\n```\n\nThis would:\n- Fail compilation for any code not explicitly marked with ```[AotCompatible]```\n- Require explicit opt-in for AOT-compatible libraries\n- Provide compile-time guarantees about AOT compatibility\n\nThere is already a property that treat every AOT related warning as error, but it is not enough.\n\n## Expected Benefits\n\n1. **Developer Experience Parity**: Match the seamless debugging experience of languages like Rust and Go where native compilation is the default\n2. **Early Error Detection**: Identify AOT-incompatible patterns during development, not deployment\n3. **Consistent Runtime Behavior**: Eliminate surprises between development and production environments\n4. **Performance Optimization**: Clear separation between debug and release builds allows for more aggressive production optimizations\n\n## Implementation Considerations\n\n- **ILC Enhancement**: Extend the IL Compiler to support rapid, debug-friendly code generation\n- **MSBuild Integration**: Seamless integration with existing .NET build infrastructure\n- **Debugger Support**: Ensure Visual Studio, VS Code, and other IDEs can debug NativeAOT binaries effectively\n- **Incremental Compilation**: Support for incremental native compilation to maintain reasonable build times\n\n## Success Metrics\n\n- Reduction in AOT-related production issues\n- Improved developer satisfaction scores\n- Decreased time-to-resolution for AOT compatibility issues\n- Adoption rate of NativeAOT in production scenarios\n\nThis proposal aims to elevate .NET's native compilation story to match or exceed the developer experience offered by languages with native-first compilation models such as Golang, Rust, C++, Swift and Flutter, while maintaining the flexibility and power of the .NET ecosystem.","Url":"https://github.com/dotnet/sdk/issues/49967","RelatedDescription":"Open issue \"Enable Consistent NativeAOT Development Experience with Build-Time AOT Compilation Support\" (#49967)"},{"Id":"3268768835","IsPullRequest":true,"CreatedAt":"2025-07-28T08:34:09","Actor":"ViktorHofer","Number":"49963","RawContent":null,"Title":"Remove unnecessary license and xml headers","State":"open","Body":"The license header is only needed in shipping content files. It explicitly isn't needed in input files.","Url":"https://github.com/dotnet/sdk/pull/49963","RelatedDescription":"Open PR \"Remove unnecessary license and xml headers\" (#49963)"},{"Id":"3267995140","IsPullRequest":true,"CreatedAt":"2025-07-28T08:32:09","Actor":"dotnet-bot","Number":"49959","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 140: Build ID 2759525","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.","Url":"https://github.com/dotnet/sdk/pull/49959","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 140: Build ID 2759525\" (#49959)"},{"Id":"3268396318","IsPullRequest":false,"CreatedAt":"2025-07-28T06:52:46","Actor":"Youssef1313","Number":"49962","RawContent":null,"Title":"Verify if `dotnet test` for MTP should call `ArgumentEscaper.EscapeAndConcatenateArgArrayForProcessStart`","State":"open","Body":"https://github.com/dotnet/sdk/blob/fc81ab9accc5aa1876462415b8273ed8d6ae1708/src/Cli/dotnet/Commands/Test/TestApplication.cs#L103-L106\n\nWe need to verify if this should be calling `ArgumentEscaper.EscapeAndConcatenateArgArrayForProcessStart`. We should add a test as well.","Url":"https://github.com/dotnet/sdk/issues/49962","RelatedDescription":"Open issue \"Verify if `dotnet test` for MTP should call `ArgumentEscaper.EscapeAndConcatenateArgArrayForProcessStart`\" (#49962)"},{"Id":"3267738211","IsPullRequest":true,"CreatedAt":"2025-07-28T02:02:31","Actor":"dotnet-maestro[bot]","Number":"49958","RawContent":null,"Title":"[release/9.0.3xx] Update dependencies from dotnet/razor","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:9f2707b0-e419-4ec3-8a64-01c85fa0ff69)\n## From https://github.com/dotnet/razor\n- **Subscription**: [9f2707b0-e419-4ec3-8a64-01c85fa0ff69](https://maestro.dot.net/subscriptions?search=9f2707b0-e419-4ec3-8a64-01c85fa0ff69)\n- **Build**: [20250727.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2759015)\n- **Date Produced**: July 27, 2025 9:06:09 AM UTC\n- **Commit**: [3372435431977e91904a23ceb1eab689badc1bd9](https://github.com/dotnet/razor/commit/3372435431977e91904a23ceb1eab689badc1bd9)\n- **Branch**: refs/heads/release/dev17.14\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [9.0.0-preview.25329.3 to 9.0.0-preview.25377.2][1]\n    - Microsoft.SourceBuild.Intermediate.razor\n    - Microsoft.AspNetCore.Mvc.Razor.Extensions.Tooling.Internal\n    - Microsoft.CodeAnalysis.Razor.Tooling.Internal\n    - Microsoft.NET.Sdk.Razor.SourceGenerators.Transport\n\n[1]: https://github.com/dotnet/razor/compare/3372435431...3372435431\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:9f2707b0-e419-4ec3-8a64-01c85fa0ff69)\n\n","Url":"https://github.com/dotnet/sdk/pull/49958","RelatedDescription":"Open PR \"[release/9.0.3xx] Update dependencies from dotnet/razor\" (#49958)"},{"Id":"3267737865","IsPullRequest":true,"CreatedAt":"2025-07-28T02:02:14","Actor":"dotnet-maestro[bot]","Number":"49957","RawContent":null,"Title":"[release/8.0.3xx] Update dependencies from dotnet/razor","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:113b2065-88fb-4a3d-be71-08dc11e0db9c)\n## From https://github.com/dotnet/razor\n- **Subscription**: [113b2065-88fb-4a3d-be71-08dc11e0db9c](https://maestro.dot.net/subscriptions?search=113b2065-88fb-4a3d-be71-08dc11e0db9c)\n- **Build**: [20250727.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2759033)\n- **Date Produced**: July 27, 2025 8:42:48 AM UTC\n- **Commit**: [09ca88197916e545aefea53f16ed1b266644cde9](https://github.com/dotnet/razor/commit/09ca88197916e545aefea53f16ed1b266644cde9)\n- **Branch**: refs/heads/release/dev17.10\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [7.0.0-preview.25329.2 to 7.0.0-preview.25377.7][1]\n    - Microsoft.AspNetCore.Mvc.Razor.Extensions.Tooling.Internal\n    - Microsoft.CodeAnalysis.Razor.Tooling.Internal\n    - Microsoft.NET.Sdk.Razor.SourceGenerators.Transport\n\n[1]: https://github.com/dotnet/razor/compare/09ca881979...09ca881979\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:113b2065-88fb-4a3d-be71-08dc11e0db9c)\n\n","Url":"https://github.com/dotnet/sdk/pull/49957","RelatedDescription":"Open PR \"[release/8.0.3xx] Update dependencies from dotnet/razor\" (#49957)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"3233159070","IsPullRequest":false,"CreatedAt":"2025-07-15T17:45:43","Actor":"jongalloway","Number":"364","RawContent":null,"Title":".NET 10 Preview 6","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9974. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 6. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview6).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview6/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)\n","Url":"https://github.com/dotnet/announcements/issues/364","RelatedDescription":"Open issue \".NET 10 Preview 6\" (#364)"},{"Id":"3213472424","IsPullRequest":false,"CreatedAt":"2025-07-08T18:49:00","Actor":"victorisr","Number":"363","RawContent":null,"Title":".NET July 2025 Updates","State":"open","Body":"On July 08, 2025, we released .NET 9.0.7, .NET 8.0.18 updates.\n\n## Release Notes\n\n* [.NET July 2025 Update - .NET 9.0.7 and .NET 8.0.18](https://github.com/dotnet/core/issues/9967)\n* [.NET 8.0.18 and .NET SDK 8.0.412](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.18/8.0.18.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.7 and .NET SDK 9.0.302](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.7/9.0.7.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nKnown issues:\n\n* https://github.com/dotnet/dotnet-docker/discussions/6527\n\nAlso announced at [.NET Updates in July 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-july-2025-servicing-updates/).","Url":"https://github.com/dotnet/announcements/issues/363","RelatedDescription":"Open issue \".NET July 2025 Updates\" (#363)"},{"Id":"3134569207","IsPullRequest":false,"CreatedAt":"2025-06-10T18:56:00","Actor":"victorisr","Number":"362","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-30399: .NET Remote Code Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-30399 | .NET Remote Code Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 and .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn attacker could exploit this vulnerability by placing files in particular locations, leading to unintended code execution.\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/116495\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 8.0 application running on .NET 8.0.16 or earlier.\n* Any .NET 9.0 application running on .NET 9.0.5 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 9\"></a>.NET 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, < =9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 9.0.0, < =9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 9.0.0, < =9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 9.0.0, <= 9.0.5 | 9.0.6\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 9.0.0, <= 9.0.5 | 9.0.6\n\n### <a name=\".NET 8\"></a>.NET 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 8.0.0, <= 8.0.16 | 8.0.17\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 8.0.0, <= 8.0.16 | 8.0.17\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0 or .NET 8.0, as appropriate. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.17  Runtime or .NET 8.0.314 SDK (for Visual Studio 2022 v17.10 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 9.0, you should download and install .NET 9.0.6  Runtime or .NET 9.0.107 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 9.0 or .NET 8.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-30399]( https://www.cve.org/CVERecord?id=CVE-2025-30399)\n\n### Revisions\n\nV1.0 (June 10, 2025): Advisory published.","Url":"https://github.com/dotnet/announcements/issues/362","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-30399: .NET Remote Code Vulnerability\" (#362)"},{"Id":"3134557504","IsPullRequest":false,"CreatedAt":"2025-06-10T18:50:41","Actor":"victorisr","Number":"361","RawContent":null,"Title":".NET June 2025 Updates","State":"open","Body":"On June 10, 2025, we released .NET 9.0.6, .NET 8.0.17 updates.\n\n## Release Notes\n\n* [.NET June 2025 Update - .NET 9.0.6 and .NET 8.0.17](https://github.com/dotnet/core/issues/9930)\n* [.NET 8.0.17 and .NET SDK 8.0.411](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.17/8.0.17.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.6 and .NET SDK 9.0.301](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.6/9.0.6.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in June 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-june-2025-servicing-updates/).\n\n## Security Updates\n\nThis release includes fixes for the following security issues:\n\n* [CVE-2025-30399](https://github.com/dotnet/announcements/issues/362): .NET Remote Code Vulnerability\n\nThese security updates affect both .NET 9 and .NET 8. We recommend upgrading to the latest SDK and runtime versions for your major version channel.\n\n## Previous Release\n\n* [.NET May 2025 Updates](https://github.com/dotnet/announcements/issues/357)\n* The May release included a fix for [CVE-2025-26646](https://github.com/dotnet/announcements/issues/356): .NET Spoofing Vulnerability, which affected the Microsoft.Build.Tasks.Core package.\n* An update was issued on May 22nd for .NET 8.0.313 and .NET 8.0.410 SDKs to address this vulnerability.\n\nThis issue will be updated if there are any additional releases during the month.\n ","Url":"https://github.com/dotnet/announcements/issues/361","RelatedDescription":"Open issue \".NET June 2025 Updates\" (#361)"},{"Id":"3134481467","IsPullRequest":false,"CreatedAt":"2025-06-10T18:15:46","Actor":"jamesmontemagno","Number":"360","RawContent":null,"Title":".NET 10 Preview 5","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9927. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 5. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview5).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview5/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)","Url":"https://github.com/dotnet/announcements/issues/360","RelatedDescription":"Open issue \".NET 10 Preview 5\" (#360)"},{"Id":"3061188259","IsPullRequest":false,"CreatedAt":"2025-05-13T20:44:21","Actor":"mmitche","Number":"359","RawContent":null,"Title":"Unified Build Progress and Preview 4 Milestone","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9892. See that thread for discussion.\n\nToday we are excited to announce that the .NET 10 Preview 4 build was produced from [dotnet/dotnet](https://github.com/dotnet/dotnet), using a new build system and repo structure! This is a major milestone in our **Unified Build** project, resulting in major efficiencies for the official build and aligning Microsoft practices with those of community .NET builders.\n\n## What's changing?\n\nFrom .NET Core 1.0 through .NET 9, we have had essentially two build systems that have evolved separately. Microsoft's build, which utilizes many small repositories and a complex dependency management system to produce a product, and a largely bespoke build that meets the requirements of our Linux distro partner community. We arrived at that situation by circumstance not intent. The new system corrects those challenges and enables Microsoft and the community to share a build system derived from the source-build system that the community had been using.\n\n## Unified Build?\n\nThe Unified Build project has been working for years to move from producing the core .NET product (SDK and runtimes) via a complex distributed, multi-repository build to a simpler system which builds the product from a single monolithic repository. This shift also brings closer alignment between the way that Microsoft and our Linux distro partners build .NET, a huge win for maintainability.\n\nUnified Build drastically reduces build overhead by forcing \"coherency\" of components at all times and performing most of the building in a set of parallel jobs (like Linux-x64) we call \"verticals\". No need to flow dependency updates through a dozen+ repositories for days to get a shippable build. Instead, each \"vertical \" (e.g. Windows x64, MacOS arm64, etc.) is built in parallel, then stitched together at the end to form the shipping product. Even more exciting, Unified Build reaps these full-build wins _without_ compromising the development efficiency of smaller repos by allowing source diffs (no mucking about with submodules) to flow to and from this \"virtual\" monolithic repository. A developer can work in an isolated repository, where tools and validation are tailored to a specific product component, without the overall product build incurring the cost that distributed development has. Or they can make cross cutting changes in the VMR repository itself, vastly accelerating inter-repo development.\n\n## What's next?\n\nOver the coming months. We'll be refining code flow, optimizing the build, improving dev workflow, and generally working on Fit and Finish prior to shipping .NET 10. In addition, expect a deep-dive blog post about the effort some time mid-summer.\n\nFollow along at https://github.com/dotnet/dotnet!","Url":"https://github.com/dotnet/announcements/issues/359","RelatedDescription":"Open issue \"Unified Build Progress and Preview 4 Milestone\" (#359)"},{"Id":"3060874369","IsPullRequest":false,"CreatedAt":"2025-05-13T18:20:26","Actor":"jamesmontemagno","Number":"358","RawContent":null,"Title":".NET 10 Preview 4","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9886. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 4. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview4).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview4/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)","Url":"https://github.com/dotnet/announcements/issues/358","RelatedDescription":"Open issue \".NET 10 Preview 4\" (#358)"},{"Id":"3060854600","IsPullRequest":false,"CreatedAt":"2025-05-13T18:10:40","Actor":"victorisr","Number":"357","RawContent":null,"Title":".NET May 2025 Updates","State":"open","Body":"# .NET May 2025 Updates\n\nOn May 13, we released .NET 9.0.5, .NET 8.0.16 updates.\n\nToday May 22nd, we are releasing .NET 8.0.313 and .NET 8.0.410 which is an update to .NET 8.0.312 SDK and .NET 8.0.409 SDK. Our May release for .NET 8.0.312 and .NET 8.0.409 missed a fix for [CVE-2025-26646](https://github.com/dotnet/announcements/issues/356) which impacts Microsoft.Build.Tasks.core.dll. \n\n``Note that there is no change to the .NET 8.0.16 runtime, this is an SDK only change. No action is required if you're only deploying the .NET 8 runtime, but if you're deploying the .NET 8 SDK then you will need to pick up the re-release with the fix.``\n\n* https://github.com/dotnet/core/discussions/9885\n* [.NET 8.0.16 and .NET SDK 8.0.410](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.16/8.0.410.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.5 and .NET SDK 9.0.300](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.5/9.0.5.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in May 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-may-2025-servicing-updates/).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/357","RelatedDescription":"Open issue \".NET May 2025 Updates\" (#357)"},{"Id":"3060828661","IsPullRequest":false,"CreatedAt":"2025-05-13T17:58:34","Actor":"rbhanda","Number":"356","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-26646: .NET Spoofing Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-26646: .NET Spoofing Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 9.0.xxx and .NET 8.0.xxx SDK. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in .NET SDK or MSBuild applications where external control of file name or path allows an unauthorized attacked to perform spoofing over a network.\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/msbuild/issues/11846\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nProjects which do not utilize the [DownloadFile](https://learn.microsoft.com/visualstudio/msbuild/downloadfile-task)  build task are not susceptible to this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any installation of .NET 9.0.105 SDK, .NET 9.0.203 SDK or earlier.\n* Any installation of .NET 8.0.115 SDK, .NET 8.0.311 or .NET 8.0.312 SDK, .NET 8.0.408 or .NET 8.0.409SDK or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.Build.Tasks.Core](https://www.nuget.org/packages/Microsoft.Build.Tasks.Core) |>= 15.8.166, <=15.9.20<br />>=16.0.461, <= 16.11.0<br />>= 17.0.0, <= 17.8.3<br/>>= 17.9.5, <= 17.10.4<br />17.11.4<br />17.12.6 <br />17.13.9 | 15.9.30<br />16.11.6<br />17.8.29<br/>17.10.29<br />17.12.36<br />17.13.26 <br />17.14.8\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a .NET SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0 SDK or .NET 8.0 SDK. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install the appropriate SDK: `.NET 9.0.300` for Visual Studio 2022 v17.14, `.NET 9.0.204` for v17.13, or `.NET 9.0.106` for v17.12. Download from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\n* If you're using .NET 8.0, you should download and install the appropriate SDK: `.NET 8.0.410` for Visual Studio 2022 v17.11, `.NET 8.0.313` for v17.10, or `.NET 8.0.116` for v17.8. Download from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n\nOnce you have installed the updated SDK, restart your apps for the update to take effect.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/aspnetcore. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n### External Links\n\n[CVE-2025-26646]( https://www.cve.org/CVERecord?id=CVE-2025-26646)\n\nRevisions\nV1.0 (May 13, 2025): Advisory published.\n\nVersion 1.0\n\nLast Updated 2025-05-13\n\nV1.1 (May 22, 2025): Advisory published.\n\nVersion 1.1\n\nLast Updated 2025-05-22","Url":"https://github.com/dotnet/announcements/issues/356","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-26646: .NET Spoofing Vulnerability\" (#356)"},{"Id":"2986837893","IsPullRequest":false,"CreatedAt":"2025-04-10T20:40:59","Actor":"jamesmontemagno","Number":"354","RawContent":null,"Title":".NET 10 Preview 3","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9846. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 3. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview3).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview3/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)","Url":"https://github.com/dotnet/announcements/issues/354","RelatedDescription":"Open issue \".NET 10 Preview 3\" (#354)"},{"Id":"2980722221","IsPullRequest":false,"CreatedAt":"2025-04-08T19:09:27","Actor":"victorisr","Number":"353","RawContent":null,"Title":".NET April 2025 Updates","State":"open","Body":"# .NET April 2025 Updates\n\nToday, we are releasing .NET 9.0.4, .NET 8.0.15 updates.\n\n* https://github.com/dotnet/core/discussions/9838\n* [.NET 8.0.15 and .NET SDK 8.0.408](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.15/8.0.15.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.4 and .NET SDK 9.0.203](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.4/9.0.4.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in April 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-april-2025-servicing-updates/).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/353","RelatedDescription":"Open issue \".NET April 2025 Updates\" (#353)"},{"Id":"2980311664","IsPullRequest":false,"CreatedAt":"2025-04-08T16:22:30","Actor":"leecow","Number":"352","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-26682: .NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-26682: .NET Denial of Service Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 9.0, and ASP.NET Core 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in ASP.NET Core where using HTTP/3 improperly may result in a Denial of Service by allocation of resources without limits or throttling.\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/61390\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any ASP.NET Core 9.0 application running on ASP.NET Core 9.0.3 or earlier.\n* Any ASP.NET Core application running on ASP.NET Core 8.0.14 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\n### <a name=\"ASP.NET Core 9\"></a>ASP.NET Core 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 9.0.0, <= 9.0.3 | 9.0.4\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 9.0.0, <= 9.0.3 | 9.0.4\n\n\n### <a name=\"ASP.NET Core 8\"></a>ASP.NET Core 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 8.0.0, <= 8.0.14 | 8.0.15\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 8.0.0, <= 8.0.14 | 8.0.15\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0.4  Runtime or .NET 9.0.105 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/aspnetcore. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n### External Links\n\n### Acknowledgement\n\n\n[CVE-2025-26682]( https://www.cve.org/CVERecord?id=CVE-2025-26682)\n\n### Revisions\n\nV1.0 (April 8, 2025): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2025-04-08_","Url":"https://github.com/dotnet/announcements/issues/352","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-26682: .NET Denial of Service Vulnerability\" (#352)"},{"Id":"2980088181","IsPullRequest":false,"CreatedAt":"2025-04-08T15:03:30","Actor":"lbussell","Number":"351","RawContent":null,"Title":"`dotnetbinaries.blob.core.windows.net` will be taken offline on 2025-06-10","State":"open","Body":"> This issue is a locked mirror of https://github.com/microsoft/dotnet-framework-docker/discussions/1235. See that post for discussion.\n\n`dotnetbinaries.blob.core.windows.net` is a storage account hosting various .NET binaries that were used in .NET Framework container image builds. It will be decommissioned on 2025-06-10. Below is a summary of the resources hosted on `dotnetbinaries` along with instructions on how to obtain them from alternative sources.\n\n## Migration guidance\n\n### .NET Framework Reference Assemblies\n\nAffected URLs:\n\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.0.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.5.2.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.6.2.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.7.1.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.7.2.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.8.zip\n- https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v4.8.1.zip\n\nInstead of using the above URLs, download .NET Framework reference assemblies from NuGet.org:\n\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net40\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net45\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net451\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net452\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net46\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net461\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net462\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net47\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net471\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net472\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net48\n- https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net481\n\nTo extract the reference assemblies from the NuGet packages, use the following NuGet CLI command:\n\n```powershell\nnuget install Microsoft.NETFramework.ReferenceAssemblies.net472 -DirectDownload -ExcludeVersion -Version 1.0.3 -OutputDirectory .\\Packages\n```\n\n### Service Monitor\n\nServiceMonitor is a Windows executable designed to be used as the entrypoint process when running IIS inside a Windows Server container.\n\nAffected URLs:\n\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/1342334/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.1/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.2/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.3/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.4/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.5/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.6/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.8/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.9/ServiceMonitor.exe\n- https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.10/ServiceMonitor.exe\n\nThe latest ServiceMonitor release has been re-uploaded to GitHub and is available at the following URL:\n\n- https://github.com/microsoft/IIS.ServiceMonitor/releases/download/v2.0.1.10/ServiceMonitor.exe\n\nAny future releases will be posted on [ServiceMonitor's GitHub Releases page](https://github.com/microsoft/IIS.ServiceMonitor/releases).\n\n### .NET Framework 3.5 Installers\n\nAffected URLs:\n\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-ltsc2016.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-1709.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-1803.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-1809.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-1903.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-1909.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-2004.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-2009.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-20H2.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-ltsc2016.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-ltsc2019.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-ltsc2022.zip\n- https://dotnetbinaries.blob.core.windows.net/dockerassets/microsoft-windows-netfx3-ltsc2025.zip\n\nInstead of installing .NET Framework 3.5 using the above installers, you should instead [Deploy .NET Framework 3.5 by using Deployment Image Servicing and Management (DISM)](https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/deploy-net-framework-35-by-using-deployment-image-servicing-and-management--dism?view=windows-11).\n\nFor guidance specific to .NET Framework container images, please see [How to install .NET Framework 3.5 on Windows Server Core container images](https://github.com/microsoft/dotnet-framework-docker/blob/main/documentation/install-netfx3.md).\n","Url":"https://github.com/dotnet/announcements/issues/351","RelatedDescription":"Open issue \"`dotnetbinaries.blob.core.windows.net` will be taken offline on 2025-06-10\" (#351)"},{"Id":"2929482122","IsPullRequest":false,"CreatedAt":"2025-03-18T18:24:38","Actor":"jamesmontemagno","Number":"350","RawContent":null,"Title":".NET 10 Preview 2","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9810. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 2. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview2).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)","Url":"https://github.com/dotnet/announcements/issues/350","RelatedDescription":"Open issue \".NET 10 Preview 2\" (#350)"},{"Id":"2929274389","IsPullRequest":false,"CreatedAt":"2025-03-18T17:20:24","Actor":"richlander","Number":"349","RawContent":null,"Title":".NET Framework 3.5 images for Windows Server 2025 will no longer be published after May 13th","State":"open","Body":"> This issue is a locked mirror of https://github.com/microsoft/dotnet-framework-docker/discussions/1228.\n\nWe have been publishing Windows container images for .NET Framework 3.5 and 4.x since 2016. We recently reviewed pull usage for .NET Framework 3.5 images (across all Windows Server versions) and found that it is low. We plan to stop producing (and no longer document) the `3.5` tag for Server 2025 before it gets significant usage. We only [recently added support for Windows Server 2025](https://github.com/microsoft/dotnet-framework-docker/pull/1183). We will not be publishing .NET Framework 3.5 images for Windows Server 2025+ going forward.\n\nWe plan to stop producing .NET Framework 3.5 tags for Windows Server 2025 on May 13th.\n\nWindows Server 2025 tags for .NET Framework 3.5 look like the following:\n\n```\n3.5-20250211-windowsservercore-ltsc2025, 3.5-windowsservercore-ltsc2025, 3.5\n```\n\nDocumentation for installing .NET Framework 3.5 is provided here: [How to install .NET Framework 3.5 on Windows Server Core container images](https://github.com/microsoft/dotnet-framework-docker/blob/main/documentation/install-netfx3.md).\n\nWe are currently considering opportunities to consolidate 4.x images. We may have a follow-on notice about those images.\n","Url":"https://github.com/dotnet/announcements/issues/349","RelatedDescription":"Open issue \".NET Framework 3.5 images for Windows Server 2025 will no longer be published after May 13th\" (#349)"},{"Id":"2911344682","IsPullRequest":false,"CreatedAt":"2025-03-11T17:29:13","Actor":"rbhanda","Number":"348","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-24070: .NET Elevation of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-24070: .NET Elevation of Privilege Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 9.0 , ASP.NET Core 8.0, and ASP.NET Core 2.3. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in ASP.NET Core applications calling RefreshSignInAsync with an improperly authenticated user parameter that could allow an attacker to sign into another user's account, resulting in Elevation of Privilege.\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/60871\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any ASP.NET Core 9.0 application running on ASP.NET Core 9.0.2 or earlier.\n* Any ASP.NET Core application running on ASP.NET Core 8.0.13 or earlier.\n* Any ASP.NET Core 2.x application consuming the package Microsoft.AspNetCore.Identity version 2.3.0 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.Identity](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity) | 2.3.0 | 2.3.1\n\n### <a name=\"ASP.NET Core 9\"></a>ASP.NET Core 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n\n\n### <a name=\"ASP.NET Core 8\"></a>ASP.NET Core 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0.3  Runtime or .NET 9.0.103 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/aspnetcore. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n### External Links\n\n### Acknowledgement\nZahid TOKAT\n\n[CVE-2025-24070]( https://www.cve.org/CVERecord?id=CVE-2025-24070)\n\n### Revisions\n\nV1.0 (March 11, 2025): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2025-03-11_","Url":"https://github.com/dotnet/announcements/issues/348","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-24070: .NET Elevation of Privilege Vulnerability\" (#348)"},{"Id":"2911341687","IsPullRequest":false,"CreatedAt":"2025-03-11T17:28:07","Actor":"rbhanda","Number":"347","RawContent":null,"Title":".NET March 2025 Updates","State":"open","Body":"# .NET March 2025 Updates\n\nToday, we are releasing .NET 9.0.3, .NET 8.0.14 updates.\n\n* https://github.com/dotnet/core/discussions/9790\n* [.NET 8.0.14 and .NET SDK 8.0.407](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.14/8.0.14.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.3 and .NET SDK 9.0.201](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.3/9.0.3.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in March 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-march-2025-servicing-updates/).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/347","RelatedDescription":"Open issue \".NET March 2025 Updates\" (#347)"},{"Id":"2901647471","IsPullRequest":false,"CreatedAt":"2025-03-06T23:31:14","Actor":"rbhanda","Number":"346","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in [WinDbg](https://aka.ms/windbg/download). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nImproper verification of cryptographic signature in SOS allows an authorized attacker to execute code over a network resulting in Remote Code Execution.\n\n## Discussion\n\nDiscussion for this issue can be found at  https://github.com/dotnet/diagnostics/issues/5319\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\n### <a name=\"\">WinDbg</a> WinDbg\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[dotnet-sos](https://www.nuget.org/packages/dotnet-sos) | < 9.0.607501 | 9.0.607501\n[dotnet-dump](https://www.nuget.org/packages/dotnet-dump) | < 9.0.557512 | 9.0.607501\n[dotnet-debugger-extensions](https://www.nuget.org/packages/dotnet-debugger-extensions) | 9.0.557512 | 9.0.607601\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you you are using the affected version listed in [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of [WinDbg](https://aka.ms/windbg/download).\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. \n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-24043]( https://www.cve.org/CVERecord?id=CVE-2025-24043)\n\n### Revisions\n\nV1.0 (March 06, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2025-03-06_","Url":"https://github.com/dotnet/announcements/issues/346","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability\" (#346)"},{"Id":"2887961894","IsPullRequest":false,"CreatedAt":"2025-02-28T19:58:38","Actor":"missymessa","Number":"345","RawContent":null,"Title":"dotnetfeed deprecation","State":"open","Body":"> This issue is a locked mirror of [dotnet/core #9773](https://github.com/dotnet/core/issues/9773). See that issue for discussion.\n\nThe feature using `dotnetfeed.blob.core.windows.net` was deprecated some years ago. The storage account using this is now being decommissioned. The storage account has hosted packages for a long time, but most packages from the feed are now either out of support, were only previews of now publicly-available versions, or have been migrated to nightly feeds or [nuget.org](http://nuget.org/).\n\n## User Remediation\n\nIf the package is publicly supported, look for the package in [nuget.org](http://nuget.org/).","Url":"https://github.com/dotnet/announcements/issues/345","RelatedDescription":"Open issue \"dotnetfeed deprecation\" (#345)"},{"Id":"2879374264","IsPullRequest":false,"CreatedAt":"2025-02-25T19:32:44","Actor":"jamesmontemagno","Number":"344","RawContent":null,"Title":".NET 10 Preview 1","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/discussions/9763. See that thread for discussion.\n\nWe are pleased to announce the release of .NET 10 Preview 1. Follow the main announcement and discussion at [dotnet/core](https://aka.ms/dotnet/10/preview1).\n\nBrowse the release notes for a full list of improvements in this release:\n\n- [.NET MAUI](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/dotnetmaui.md)\n- [ASP.NET Core](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/aspnetcore.md)\n- [C#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/csharp.md)\n- [F#](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/fsharp.md)\n- [Container images](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/containers.md)\n- [Libraries](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/libraries.md)\n- [Runtime](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/runtime.md)\n- [SDK](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/sdk.md)\n- [Visual Basic](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/visualbasic.md)\n- [Windows Forms](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/winforms.md)\n- [WPF](https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/wpf.md)\n\n## Get started\n\nTo get started with .NET 10, [install the .NET 10 SDK](https://dotnet.microsoft.com/download/dotnet/10.0).\n\nIf you're on Windows using Visual Studio, we recommend installing the latest [Visual Studio 2022 preview](https://visualstudio.microsoft.com/vs/preview/). You can also use Visual Studio Code and the [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit) extension with .NET 10.\n\n## Stay up-to-date with .NET 10\n\nYou can stay up-to-date with all the features of .NET 10 with:\n\n- [What's new in .NET 10](https://learn.microsoft.com/dotnet/core/whats-new/dotnet-10/overview)\n- [What's new in C# 14](https://learn.microsoft.com/dotnet/csharp/whats-new/csharp-14)\n- [What's new in .NET MAUI](https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-10)\n- [What's new in ASP.NET Core](https://learn.microsoft.com/aspnet/core/release-notes/aspnetcore-10.0)\n- [What's new in Entity Framework Core](https://learn.microsoft.com/ef/core/what-is-new/ef-core-10.0/whatsnew)\n- [What's new in Windows Forms](https://learn.microsoft.com/dotnet/desktop/winforms/whats-new/net100)\n- [What's new in WPF](https://learn.microsoft.com/dotnet/desktop/wpf/whats-new/net100)\n- [Breaking Changes in .NET 10](https://learn.microsoft.com/dotnet/core/compatibility/10.0)\n- [.NET 10 Releases](https://github.com/dotnet/core/blob/main/release-notes/10.0/README.md)","Url":"https://github.com/dotnet/announcements/issues/344","RelatedDescription":"Open issue \".NET 10 Preview 1\" (#344)"},{"Id":"2846650585","IsPullRequest":false,"CreatedAt":"2025-02-11T22:11:09","Actor":"victorisr","Number":"343","RawContent":null,"Title":".NET February 2025 Updates","State":"open","Body":"# .NET February 2025 Updates\n\nToday, we are releasing .NET 9.0.2, .NET 8.0.12 updates.\n\n* https://github.com/dotnet/core/discussions/9726\n* [.NET 8.0.13 and .NET SDK 8.0.406](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.13/8.0.13.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.2 and .NET SDK 9.0.200](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.2/9.0.2.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in February 2025](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-february-2025-servicing-updates/).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/343","RelatedDescription":"Open issue \".NET February 2025 Updates\" (#343)"},{"Id":"2805501883","IsPullRequest":false,"CreatedAt":"2025-01-22T22:50:27","Actor":"terrajobst","Number":"342","RawContent":null,"Title":"ASP.NET Core starts streaming API reviews","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/aspnetcore/issues/60003. See that issue for discussion.\n\nWe'll be streaming our weekly API reviews for ASP.NET Core, just like we already do for the core libraries (BCL). We're using an alternative schedule (Monday morning, Thursday afternoon, Pacific) in order to accommodate more time zones.\n\n* You can find the backlog at [apireviews.net][backlog]\n* You can find the schedule [apireviews.net/schedule][schedule]\n* You can find the published videos on [.NET Foundation YouTube channel][YouTube]\n* We'll publish the notes as comments on the individual issues as well as summaries in [dotnet/apireviews]\n\n[backlog]: https://apireview.net/?g=aspnetcore\n[schedule]: https://apireview.net/schedule\n[YouTube]: https://www.youtube.com/@NETFoundation/search?query=api%20review\n[dotnet/apireviews]: https://github.com/dotnet/apireviews\n","Url":"https://github.com/dotnet/announcements/issues/342","RelatedDescription":"Open issue \"ASP.NET Core starts streaming API reviews\" (#342)"},{"Id":"2788169624","IsPullRequest":false,"CreatedAt":"2025-01-14T19:56:45","Actor":"rbhanda","Number":"341","RawContent":null,"Title":".NET January 2025 Updates","State":"open","Body":"# .NET January 2025 Updates\n\nToday, we are releasing .NET 9.0.1, .NET 8.0.12 updates.\n\n* https://github.com/dotnet/core/discussions/9691\n* [.NET 8.0.12 and .NET SDK 8.0.405](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.12/8.0.12.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 9.0.1 and .NET SDK 9.0.102](https://github.com/dotnet/core/blob/main/release-notes/9.0/9.0.1/9.0.1.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/9.0))\n\nAlso announced at [.NET Updates in January 2025](https://devblogs.microsoft.com/dotnet/net-and-net-framework-january-2025-servicing-releases-updates//).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/341","RelatedDescription":"Open issue \".NET January 2025 Updates\" (#341)"},{"Id":"2787957645","IsPullRequest":false,"CreatedAt":"2025-01-14T18:06:39","Actor":"leecow","Number":"340","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn attacker could exploit this vulnerability by sending a specially crafted request to the vulnerable web server.\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/runtime/issues/111423\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 9.0 application running on .NET 9.0.0 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\n\nThe vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 9\"></a>.NET 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 9.0 please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-21171]( https://www.cve.org/CVERecord?id=CVE-2025-21171)\n\n### Revisions\n\nV1.0 (January 14, 2024): Advisory published.","Url":"https://github.com/dotnet/announcements/issues/340","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability\" (#340)"},{"Id":"2787957073","IsPullRequest":false,"CreatedAt":"2025-01-14T18:06:29","Actor":"leecow","Number":"339","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 and .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn attacker could exploit this vulnerability by loading a specially crafted file in Visual Studio.\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/runtime/issues/111424\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 8.0 application running on .NET 8.0.11 or earlier.\n* Any .NET 9.0 application running on .NET 9.0.0 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 9\"></a>.NET 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n\n### <a name=\".NET 8\"></a>.NET 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 8.0 or .NET 9.0, as appropriate. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-21172]( https://www.cve.org/CVERecord?id=CVE-2025-21172)\n\n### Revisions\n\nV1.0 (January 14, 2024): Advisory published.","Url":"https://github.com/dotnet/announcements/issues/339","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability\" (#339)"},{"Id":"2787956748","IsPullRequest":false,"CreatedAt":"2025-01-14T18:06:17","Actor":"leecow","Number":"338","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 and .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn attacker could exploit this vulnerability by loading a specially crafted file in Visual Studio.\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/runtime/issues/111425\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 8.0 application running on .NET 8.0.11 or earlier.\n* Any .NET 9.0 application running on .NET 9.0.0 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 9\"></a>.NET 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 9.0.0, < 9.0.0 | 9.0.1\n\n### <a name=\".NET 8\"></a>.NET 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 8.0.0, < 8.0.11 | 8.0.12\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0 or .NET 8.0, as appropriate. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 9.0 or .NET 8.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-21176]( https://www.cve.org/CVERecord?id=CVE-2025-21176)\n\n### Revisions\n\nV1.0 (January 14, 2024): Advisory published.","Url":"https://github.com/dotnet/announcements/issues/338","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability\" (#338)"},{"Id":"2787955835","IsPullRequest":false,"CreatedAt":"2025-01-14T18:05:56","Actor":"leecow","Number":"337","RawContent":null,"Title":"Microsoft Security Advisory CVE-2025-21173 | .NET Elevation of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2025-21173 | .NET Elevation of Privilege Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0, and .NET 9.0. This advisory also provides guidance on what developers can do to update their environments to remove this vulnerability.\n\nAn attacker could exploit this vulnerability to writing a specially crafted file in the security context of the local system. This only affects .NET on Linux operating systems. \n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/sdk/issues/45959\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* .NET 8.0 SDK\n\n| Affected versions | Patched versions |\n|-------------------|------------------|\n|  >=8.0.100, <=8.0.111     |   8.0.112                |\n|  >=8.0.300, <=8.0.307   |   8.0.308              |\n\n* .NET 9.0 SDK\n\n| Affected versions | Patched versions |\n|-------------------|------------------|\n| >=9.0.100, <=9.0.101        |   9.0.102               |\n\n## <a name=\"affected-packages\"></a>Affected Packages\n\nThe vulnerability does not affect Microsoft .NET packages.\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have an SDK with a version listed, you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 8.0 SDK or .NET 9.0 SDK, as appropriate.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\nOnce you have installed the updated SDK, restart your apps for the update to take effect.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2025-21173]( https://www.cve.org/CVERecord?id=CVE-2025-21173)\n\n### Revisions\n\nV1.1 (May 30, 2025): Added specific SDK version information.\nV1.0 (January 14, 2024): Advisory published.\n","Url":"https://github.com/dotnet/announcements/issues/337","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2025-21173 | .NET Elevation of Privilege Vulnerability\" (#337)"},{"Id":"2757065880","IsPullRequest":false,"CreatedAt":"2024-12-24T02:37:46","Actor":"richlander","Number":"336","RawContent":null,"Title":"Critical: .NET install domains and URLs are changing","State":"open","Body":"> This issue is a locked mirror of https://github.com/dotnet/core/issues/9671. See that issue for discussion.\n\n.NET binaries and installers have moved to a new domain -- `builds.dotnet.microsoft.com` -- backed by a new Content Delivery Network (CDN). You may need to make changes to adjust.\n\nTracking issue: https://github.com/dotnet/core/issues/9674\n\n> .NET Team Status:\n> - azureedge.net scream tests are starting\n> - See: https://github.com/dotnet/core/issues/9676\n\n>  \n> Recommended action:\n> - Read [Critical: .NET Install links are changing](https://devblogs.microsoft.com/dotnet/critical-dotnet-install-links-are-changing/) for an overview.\n> - Update `azureedge.net` references\n> - Update local copies of install script\n> - Update pinned references to [actions/setup-dotnet](https://github.com/actions/setup-dotnet/issues/570)\n> - Validate that firewall rules are resilient to using new domains.\n> \n> Last update: 2025.01.23\n> Next update: 2025.02.04\n\n## Context\n\nSome .NET binaries and installers have been hosted on Azure Content Delivery Network (CDN) domains that end in `.azureedge.net`. These domains were hosted by [edg.io](https://edg.io/), which has [ceased operations](https://learn.microsoft.com/en-us/azure/cdn/edgio-retirement-faq) due to bankruptcy. We [migrated to a new CDN](https://learn.microsoft.com/azure/frontdoor/migrate-cdn-to-front-door) and will be using new domains going forward. \n\nWe expect`azureedge.net` domains to cease by 5/31 (at latest).\n\n## .NET Team Remediation\n\nNew domains were created:\n\n- `builds.dotnet.microsoft.com` for signed official builds\n- `ci.dot.net` for unsigned builds\n\nTest links for new CDN:\n\n- https://builds.dotnet.microsoft.com/dotnet/health.txt\n- https://builds.dotnet.microsoft.com/dotnet/release-metadata/releases-index.json\n\nTest links for old CDN:\n\n- https://dotnetcli.azureedge.net/dotnet/health.txt\n- https://dotnetcli.azureedge.net/dotnet/release-metadata/releases-index.json\n\nThe following resources have been updated to use new domains.\n\n- [`releases-index.json`](https://builds.dotnet.microsoft.com/dotnet/release-metadata/releases-index.json)\n- [.NET install script](https://github.com/dotnet/install-scripts/)\n- [actions/setup-dotnet](https://github.com/actions/setup-dotnet/issues/570)\n- [CI short links](https://github.com/dotnet/arcade/pull/15365)\n\nOther changes are in progress.\n\n## User Remediation\n\nPlease make the following replacements:\n\n- `dotnetcli.azureedge.net` -> `builds.dotnet.microsoft.com`\n- `dotnetcli.blob.core.windows.net` -> `builds.dotnet.microsoft.com`\n- `dotnetbuilds.azureedge.net` -> `ci.dot.net`\n- `dotnetbuilds.blob.core.windows.net` -> `ci.dot.net`\n\nAll the new domains are path-compatible with old domains, as they share the same origin.\n\nPlease also make the following changes:\n\n- Update local copies of the install script\n- Update setup-dotnet Action references\n- Validate that firewall rules work with the new domains\n\n## Install script\n\nThe [.NET install script](https://learn.microsoft.com/dotnet/core/tools/dotnet-install-script) is used to install .NET from our CDN. We are changing CDNs (documented in a following section), which requires us to change the install script to use the new CDN.\n\nUpdated scripts:\n\n- `https://dot.net/v1/dotnet-install.sh`\n- `https://dot.net/v1/dotnet-install.ps1`\n\nNotes: \n\n- Users who have local copies of these scripts will need to update their copies.\n- Users who rely on the remote copy (at the URLs above) do not need to do anything other than validate no observed change in behavior (due to new domains and CDNs being used).\n\nTracking PRs:\n\n- [dotnet/install-scripts #554](https://github.com/dotnet/install-scripts/pull/554)\n- [dotnet/install-scripts #555](https://github.com/dotnet/install-scripts/pull/555)\n- [dotnet/install-scripts/issues #558](https://github.com/dotnet/install-scripts/issues/558)\n- [dotnet/install-scripts #564](https://github.com/dotnet/install-scripts/pull/564)\n- [dotnet/docs #44052](https://github.com/dotnet/docs/pull/44052)\n\n## Official builds\n\nOfficial builds and JSON files are hosted via a CDN, available for use by the install script and other installers.\n\n- New: https://builds.dotnet.microsoft.com\n- Old: https://dotnetcli.azureedge.net\n\nNotes:\n\n- Official builds are tested and signed by Microsoft. A `microsoft.com` domain was chosen to reflect that.\n- We also [plan to stop using dowload.visualstudio.microsoft.com](https://github.com/dotnet/core/issues/9675) for new content. That CDN will continue to function.\n- [Microsoft.Deployment.DotNet.Releases](https://www.nuget.org/packages/Microsoft.Deployment.DotNet.Releases) has been [updated](https://github.com/dotnet/deployment-tools/pull/423)\n\nYou can change from old to new domains by changing the domain section of the URL. The other parts of the URL do not need to change.\n\nExample URLs:\n\n- New: https://builds.dotnet.microsoft.com/dotnet/Runtime/8.0.11/dotnet-runtime-8.0.11-linux-x64.tar.gz\n- Old: https://dotnetcli.azureedge.net/dotnet/Runtime/8.0.11/dotnet-runtime-8.0.11-linux-x64.tar.gz\n- New: https://builds.dotnet.microsoft.com/dotnet/release-metadata/releases-index.json\n- Old: https://dotnetcli.azureedge.net/dotnet/release-metadata/releases-index.json\n\nA set of short links are available for official builds.\n\nLink pattern:`https://aka.ms/dotnet/[x.y]/[package]`.\n\nExample URLs:\n\n- https://aka.ms/dotnet/9.0/dotnet-sdk-win-x64.zip\n- https://aka.ms/dotnet/8.0/aspnetcore-runtime-linux-x64.tar.gz\n \nThese links produce`301` HTTP results that forward to our CDN.\n\n- Currently forward to:  https://dotnetcli.azureedge.net.\n- Will be changed to forward to: https://build.dotnet.microsoft.com.\n\nWe expect these links to be changed in mid January.\n\nTracking PR:\n\n- [dotnet/core #9683](https://github.com/dotnet/core/issues/9683)\n\n## CI builds\n\nContinuous integration (CI) builds are hosted via a CDN, available via the install script and GitHub README files.\n\n- New: https://ci.dot.net\n- Old: https://dotnetbuilds.azureedge.net\n\nNote: CI builds include a mix of tested and untested builds, signed and unsigned builds.\n\nExample URLs:\n\n- New: https://ci.dot.net/public/Runtime/9.0.1-servicing.24610.11/dotnet-runtime-9.0.1-win-x64.exe\n- Old: https://dotnetbuilds.azureedge.net/public/Runtime/9.0.1-servicing.24610.11/dotnet-runtime-9.0.1-win-x64.exe\n\nA set of short links are available for CI builds.\n\nLink pattern:`https://aka.ms/dotnet/[x.y]/daily/[package]`.\n\nExample URLs:\n\n- https://aka.ms/dotnet/9.0/daily/dotnet-runtime-win-x64.exe\n- https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-arm.tar.gz\n- https://aka.ms/dotnet/10.0.1xx/daily/dotnet-sdk-osx-arm64.pkg\n\nThese links produce`301` HTTP results that forward to our CDN.\n\n- New builds now forward to: https://ci.dot.net\n- Old builds forward to:  https://dotnetbuilds.azureedge.net.\n\nWe expect these links to be changed in mid January.\n\nTracking PR:\n\n- [dotnet/core #9683](https://github.com/dotnet/core/issues/9683)\n\nCI build pages use the CI short links.\n\nExample build pages:\n\n- [dotnet/runtime](https://github.com/dotnet/runtime/blob/main/docs/project/dogfooding.md#daily-builds-table)\n- [dotnet/aspnetcore](https://github.com/dotnet/aspnetcore/blob/main/README.md#nightly-builds)\n- [dotnet/sdk](https://github.com/dotnet/sdk/blob/main/documentation/package-table.md)\n\n## Azure DevOps and GitHub Actions\n\n- Major versions tags for [actions/setup-dotnet](https://github.com/actions/setup-dotnet/issues/570) have been updated. References to pinned versions will require updating to the most recent version.\n- We expect that GitHub Enterprise Server will be addressed in January.\n- Azure DevOps [`UseDotnetTask`](https://learn.microsoft.com/azure/devops/pipelines/tasks/reference/use-dotnet-v2?view=azure-pipelines) will be updated in January\n- We do not yet have a date for updating [Azure DevOps Server](https://learn.microsoft.com/azure/devops/server/).\n","Url":"https://github.com/dotnet/announcements/issues/336","RelatedDescription":"Open issue \"Critical: .NET install domains and URLs are changing\" (#336)"},{"Id":"2653140062","IsPullRequest":false,"CreatedAt":"2024-11-12T19:35:17","Actor":"rbhanda","Number":"335","RawContent":null,"Title":".NET November 2024 Updates","State":"open","Body":"# .NET November 2024 Updates\n\nToday, we are releasing .NET 9 , .NET 8.0.11, and .NET 6.0.36 updates.\n\n* https://github.com/dotnet/core/discussions/9599 \n* [.NET 9.0 Download](https://dotnet.microsoft.com/download/dotnet-core/9.0)\n* [.NET 8.0.11 and .NET SDK 8.0.404](https://github.com/dotnet/core/blob/main/release-notes/8.0/8.0.11/8.0.11.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/8.0))\n* [.NET 6.0.36 and .NET SDK 6.0.427](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.36/6.0.36.md) ([Download](https://dotnet.microsoft.com/download/dotnet-core/6.0))\n\nAlso announced at [.NET Updates in November 2024](https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-november-2024-servicing-updates/).\n\nThis issue will be updated if there are any additional releases during the month.","Url":"https://github.com/dotnet/announcements/issues/335","RelatedDescription":"Open issue \".NET November 2024 Updates\" (#335)"},{"Id":"2653127024","IsPullRequest":false,"CreatedAt":"2024-11-12T19:27:36","Actor":"rbhanda","Number":"334","RawContent":null,"Title":"Microsoft Security Advisory CVE-2024-43498 | .NET Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2024-43498 | .NET Remote Code Execution Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA remote unauthenticated attacker could exploit this vulnerability by sending specially crafted requests to a .NET vulnerable webapp or loading a specially crafted file into a vulnerable application.\n\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/109740\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nApplications that do not use the NrbfDecoder component are not affected by this vulnerability. By default, .NET console apps and web apps do not reference this component.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 9.0 application running on .NET 9.0.0.RC.2 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 9\"></a>.NET 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[System.Formats.Nrbf](https://www.nuget.org/packages/System.Formats.Nrbf)               |  <9.0.0 | 9.0.0\n\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0 . If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\nNote: You may need to take both actions. Upgrading to 9.0 GA is not by itself sufficient to resolve the vulnerability, since you could still be pulling in the vulnerable package by reference.\n\n* If you have .NET 8.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n\n Version:   8.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 8.0.3\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.NetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NetCore.App]\n  Microsoft.AspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.WindowsDesktop.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 9.0 or .NET 8.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2024-43498]( https://www.cve.org/CVERecord?id=CVE-2024-43498)\n\n### Revisions\n\nV1.0 (November 12, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-11-12_","Url":"https://github.com/dotnet/announcements/issues/334","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2024-43498 | .NET Remote Code Execution Vulnerability\" (#334)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-07-30T03:30:17.2488438Z","RunDurationInMilliseconds":6936}