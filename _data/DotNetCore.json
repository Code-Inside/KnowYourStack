{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework November 2021 Cumulative Update","PublishedOn":"2021-11-09T22:01:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2021 Cumulative Update for .NET Framework.\nSecurity\nThe November Security and Quality Rollup Update does not contain any new security fixes. See February 2021...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2021-cumulative-update/","RawContent":null},{"Title":"F# 6 is officially here!","PublishedOn":"2021-11-09T16:04:26+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"F# 6 is now released as part of .NET 6. You&#8217;ll find new task based async, pipeline debugging, and many features to make your code simpler and more performant.\nYou can find the full list of...","Href":"https://devblogs.microsoft.com/dotnet/fsharp-6-is-officially-here/","RawContent":null},{"Title":"Announcing YARP 1.0 Release","PublishedOn":"2021-11-09T15:00:32+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today we announce the release of YARP 1.0, which can be downloaded from NuGet. YARP (Yet Another Reverse Proxy) is a highly customizable reverse proxy built using .NET. The biggest differentiator...","Href":"https://devblogs.microsoft.com/dotnet/announcing-yarp-1-0-release/","RawContent":null},{"Title":"Announcing .NET MAUI Preview 10","PublishedOn":"2021-11-08T19:24:51+00:00","CommentsCount":17,"FacebookCount":0,"Summary":".NET Multi-platform App UI (MAUI) Preview 10 is now available atop the stable release of .NET 6, and you can acquire it today in the preview channel of Visual Studio 2022. This new release includes...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-10/","RawContent":null},{"Title":".NET November 2021 Updates – 5.0.12 and 3.1.21","PublishedOn":"2021-11-08T18:20:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET November 2021 Updates. These updates contains reliability and other improvements. See the individual release notes for details on updated packages.\nYou can...","Href":"https://devblogs.microsoft.com/dotnet/november-2021-updates/","RawContent":null},{"Title":"Announcing .NET 6 — The Fastest .NET Yet","PublishedOn":"2021-11-08T16:03:44+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"Welcome to .NET 6. Today&#8217;s release is the result of just over a year&#8217;s worth of effort by the .NET Team and community. C# 10 and F# 6 deliver language improvements that make your code...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-6/","RawContent":null},{"Title":"What’s New for Visual Basic in Visual Studio 2022","PublishedOn":"2021-11-08T15:00:41+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Visual Studio 2022 and .NET 6.0 have some great new features for Visual Basic developers. Some of these features can affect the way you write code every day. Many of the productivity features covered...","Href":"https://devblogs.microsoft.com/dotnet/whats-new-for-visual-basic-in-visual-studio-2022/","RawContent":null},{"Title":"Welcome to C# 10","PublishedOn":"2021-11-08T15:00:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of C# 10 as part of .NET 6 and Visual Studio 2022. In this post, we&#8217;re covering a lot of the new C# 10 features that make your code prettier, more...","Href":"https://devblogs.microsoft.com/dotnet/welcome-to-csharp-10/","RawContent":null},{"Title":"Announcing ASP.NET Core in .NET 6","PublishedOn":"2021-11-08T08:50:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":".NET 6 is now released! ASP.NET Core in .NET 6 includes everything you need to build rich modern web UI and powerful back-end services.\nWhat&#8217;s new?\nHere&#8217;s a sampling of the great new...","Href":"https://devblogs.microsoft.com/dotnet/announcing-asp-net-core-in-net-6/","RawContent":null},{"Title":"Introducing the .NET Tech Community Forums","PublishedOn":"2021-11-04T14:32:17+00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET is a unified platform enabling developers to build world class applications across operating systems and platforms. There is a global community of millions of developers building apps with .NET...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-net-tech-community-forums/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"18790926746","Type":"IssuesEvent","CreatedAt":"2021-11-08T16:42:32","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/204","RelatedDescription":"Opened issue \"November 2021 .NET Updates\" (#204) at dotnet/announcements","RelatedBody":"The following .NET updates were released in November 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET November 2021 Updates – 6.0](https://devblogs.microsoft.com/dotnet/announcing-net-6/)\r\n  * .NET 6.0.0 and .NET SDK 6.0.100  ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.0/6.0.0.md) | [Download](https://dotnet.microsoft.com/download/dotnet/6.0))\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"18401713273","Type":"IssuesEvent","CreatedAt":"2021-10-12T17:04:01","Actor":"kalaskarsanket","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/203","RelatedDescription":"Opened issue \"October 2021 .NET Updates\" (#203) at dotnet/announcements","RelatedBody":"The following .NET updates were released in October 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET October 2021 Updates – 5.0.11 and 3.1.20](https://devblogs.microsoft.com/dotnet/october-2021-updates/)\r\n  * .NET 5.0.11 and .NET SDK 5.0.402 and .NET SDK 5.0.208 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.11/5.0.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.20 and .NET SDK 3.1.414 and NET SDK 3.1.120 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.20/3.1.20.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"18401669189","Type":"IssuesEvent","CreatedAt":"2021-10-12T17:01:05","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/202","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2021-41355 | .NET Core Information Disclosure Vulnerability\" (#202) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2021-41355 | .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA Information Disclosure vulnerability exists in .NET where System.DirectoryServices.Protocols.LdapConnection may send credentials in plain text on Linux.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET application that uses `System.DirectoryServices.Protocols` with a vulnerable version listed below on system based on Linux.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.DirectoryServices.Protocols | 5.0.0 or lower | 5.0.1\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n\r\nIf you are using a package version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please [update to the latest version](https://aka.ms/install_update_net_packages) of the [affected software](#affected-software).\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-41355](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41355)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 12, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-10-12_\r\n"},{"Id":"18065354484","Type":"IssuesEvent","CreatedAt":"2021-09-20T18:27:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/201","RelatedDescription":"Opened issue \"Replacing explicit read access for external contributors with team membership\" (#201) at dotnet/announcements","RelatedBody":"We're moving away from using individual permissions to our repos in favor of teams. In the past, we've given external contributors explicit read access, for two reasons:\r\n\r\n1. To assign them issues they would like to work on\r\n2. To give them access to CI logs in Azure DevOps pipelines\r\n\r\nThe first one is no longer necessary as GitHub has made a change that allows anyone to be assigned an issue so long they either have explicit permissions or have commented on the issue. The second one is still important so that contributors who submitted PRs can access the detailed logs in order to figure out why their PR didn't pass CI.\r\n\r\nIn order to make our lives easier, we decided to move the individual read permissions to team memberships. This requires the users to accept the invitation to the dotnet org. To ensure the impacted users are aware of this, we have tagged them in the [corresponding discussion][disc]. Please note that we only grant read access on a case-by-case basis, usually for non-trivial PRs.\r\n\r\n### Discussion\r\n\r\nFor a discussion, please see the corresponding [discussion issue][disc].\r\n\r\n[disc]: https://github.com/dotnet/core/issues/6722"},{"Id":"17984589040","Type":"IssuesEvent","CreatedAt":"2021-09-14T18:28:22","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/200","RelatedDescription":"Opened issue \"September 2021 .NET Updates\" (#200) at dotnet/announcements","RelatedBody":"The following .NET updates were released in September 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET September 2021 Updates – 5.0.10 and 3.1.19](https://devblogs.microsoft.com/dotnet/net-september-2021/)\r\n  * .NET 5.0.10 and .NET SDK 5.0.401 and .NET SDK 5.0.207 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.10/5.0.10.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.19 and .NET SDK 3.1.413 and NET SDK 3.1.119 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.19/3.1.19.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"17808105920","Type":"IssuesEvent","CreatedAt":"2021-09-01T14:49:56","Actor":"rbhanda","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/199","RelatedDescription":"Opened issue \".NET Core 2.1 has reached end of life\" (#199) at dotnet/announcements","RelatedBody":"[.NET Core 2.1 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-1-will-reach-end-of-support-on-august-21-2021/) on **August 21, 2021**. This means [.NET Core 2.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-1/) is no longer supported and updates will no longer be provided. If your application uses NET Core 2.1, we strongly recommend you migrate your application to a supported version – .NET 3.1 or later. You can download these versions from the [.NET website](https://dotnet.microsoft.com/download/dotnet).\r\n\r\n- [Download .NET Core 3.1](https://dotnet.microsoft.com/download/dotnet/3.1)\r\n- [Download .NET 5.0](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET Core 2.1 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-1-will-reach-end-of-support-on-august-21-2021/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.1 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-1/) was shipped in May 30, 2018 and was declared an LTS release with the 2.1.3 update in August 2018. The 3-year lifecycle for the 2.1 release has come to an end on August 21, 2021.\r\n\r\n## .NET Core 2.1 Downloads\r\n\r\n.NET Core 2.1 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.1, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n"},{"Id":"17626040527","Type":"IssuesEvent","CreatedAt":"2021-08-18T21:49:10","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/198","RelatedDescription":"Opened issue \"Main is now targeting .NET 7\" (#198) at dotnet/announcements","RelatedBody":"This is a heads up that the primary repos of the stack have branched for .NET 6 GA/servicing/RCs, and that the `main` branch for those repos has become .NET 7.\r\n\r\n## Anything special to note about .NET 7?\r\n\r\nThe biggest difference between .NET 6 and .NET 7 flow is that the SDK repos will have their own channel (.NET 7.0.1xx SDK) from the very beginning. While .NET 6 had this channel, we never used it in development. For .NET 7 we will have a runtime and SDK channel from the beginning. Having this split also makes it easier to identify potentially problematic stack dependencies.\r\n\r\n## What does this mean for the repos I'm using?\r\n\r\nIf you're using any of the repos below, then: the `main` branch has been updated to target .NET 7 or .NET 7.0.1xx (for SDK repos).\r\n\r\n| Repo                                                              | Channel          |\r\n| ----------------------------------------------------------------- | ---------------- |\r\n| [dotnet/aspnetcore](https://github.com/dotnet/aspnetcore)         | .NET 7           |\r\n| [dotnet/efcore](https://github.com/dotnet/efcore)                 | .NET 7           |\r\n| [dotnet/emsdk](https://github.com/dotnet/emsdk)                   | .NET 7           |\r\n| [dotnet/icu](https://github.com/dotnet/icu)                       | .NET 7           |\r\n| [dotnet/runtime](https://github.com/dotnet/runtime)               | .NET 7           |\r\n| [dotnet/windowsdesktop](https://github.com/dotnet/windowsdesktop) | .NET 7           |\r\n| [dotnet/winforms](https://github.com/dotnet/winforms)             | .NET 7           |\r\n| [dotnet/wpf](https://github.com/dotnet/wpf)                       | .NET 7           |\r\n| [mono/linker](https://github.com/mono/linker)                     | .NET 7           |\r\n| [dotnet/installer](https://github.com/dotnet/installer)           | .NET 7.0.1xx SDK |\r\n| [dotnet/roslyn](https://github.com/dotnet/roslyn)                 | .NET 7.0.1xx SDK |\r\n| [dotnet/sdk](https://github.com/dotnet/sdk)                       | .NET 7.0.1xx SDK |\r\n| [dotnet/templating](https://github.com/dotnet/templating)         | .NET 7.0.1xx SDK |\r\n\r\nThere are quite a few other repos that were targeting .NET 6 that are not part of the main product flow. Their config might need to be tweaked by the repo owners to do the right thing depending on their development schedules:\r\n\r\n* [aspnet/AspLabs](https://github.com/aspnet/AspLabs)\r\n* [dotnet/command-line-api](https://github.com/dotnet/command-line-api)\r\n* [dotnet/format](https://github.com/dotnet/format)\r\n* [dotnet/hotreload-utils](https://github.com/dotnet/hotreload-utils)\r\n* [dotnet/iot](https://github.com/dotnet/iot)\r\n* [dotnet/llvm-project](https://github.com/dotnet/llvm-project)\r\n* [dotnet/msquic](https://github.com/dotnet/msquic)\r\n* [dotnet/runtime-assets](https://github.com/dotnet/runtime-assets)\r\n* [dotnet/scaffolding](https://github.com/dotnet/scaffolding)\r\n* [dotnet/test-templates](https://github.com/dotnet/test-templates)\r\n* [dotnet/wcf](https://github.com/dotnet/wcf)\r\n* [microsoft/vstest](https://github.com/microsoft/vstest)\r\n* [xamarin/xamarin-android](https://github.com/xamarin/xamarin-android)\r\n* [xamarin/xamarin-macios](https://github.com/xamarin/xamarin-macios)\r\n\r\n.NET 7 and .NET 6 RC 2 info will be added soon to [dotnet/installer](https://github.com/dotnet/installer).\r\n\r\n## Discussion\r\n\r\nFor a discussion, please comment on issue [dotnet/core#6604](https://github.com/dotnet/core/issues/6604)."},{"Id":"17595742024","Type":"IssuesEvent","CreatedAt":"2021-08-17T04:40:55","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/197","RelatedDescription":"Opened issue \".NET Core 2.1 container images will be deleted from Docker Hub\" (#197) at dotnet/announcements","RelatedBody":"# .NET Core 2.1 container images will be deleted from Docker Hub\r\n\r\nStarting on August 21st, .NET Core 2.1 Docker container images will no longer be available on Docker Hub, but exclusively on Microsoft Container Registry (MCR). This change was previously announced with https://github.com/dotnet/dotnet-docker/issues/2848. If you are reliant on .NET Core 2.1 images on Docker Hub, you should switch to using MCR immediately. Please reach out at dotnet@microsoft.com if this change is a problem for you / your organization.\r\n\r\n.NET Blog: https://devblogs.microsoft.com/dotnet/net-core-2-1-container-images-will-be-deleted-from-docker-hub/\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/dotnet-docker #3052](https://github.com/dotnet/dotnet-docker/issues/3052)\r\n\r\n## Details\r\n\r\n[.NET images](https://hub.docker.com/_/microsoft-dotnet) are available on MCR from the following repos:\r\n\r\n- `mcr.microsoft.com/dotnet/runtime-deps`\r\n- `mcr.microsoft.com/dotnet/runtime`\r\n- `mcr.microsoft.com/dotnet/aspnet`\r\n- `mcr.microsoft.com/dotnet/sdk`\r\n\r\nYou need to make the following transformations to pull .NET Core 2.1 images from MCR instead of Docker Hub.\r\n\r\nFor the SDK:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-sdk -> mcr.microsoft.com/dotnet/sdk:2.1\r\nmicrosoft/dotnet:2-sdk -> mcr.microsoft.com/dotnet/sdk:2.1\r\nmicrosoft/dotnet:2.1-sdk-stretch -> mcr.microsoft.com/dotnet/sdk:2.1-stretch\r\nmicrosoft/dotnet:2.1-sdk-stretch-arm32v7 -> mcr.microsoft.com/dotnet/sdk:2.1-stretch-arm32v7\r\nmicrosoft/dotnet:2.1-sdk-nanoserver-1809 -> mcr.microsoft.com/dotnet/sdk:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-sdk-alpine -> mcr.microsoft.com/dotnet/sdk:2.1-alpine\r\nmicrosoft/dotnet:2.1-sdk-bionic -> mcr.microsoft.com/dotnet/sdk:2.1-bionic\r\nmicrosoft/dotnet:2.1-sdk-bionic-arm32v7 -> mcr.microsoft.com/dotnet/sdk:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:latest -> mcr.microsoft.com/dotnet/sdk:2.1\r\n```\r\n\r\nFor the ASP.NET Core:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime -> mcr.microsoft.com/dotnet/aspnet:2.1\r\nmicrosoft/dotnet:2-aspnetcore-runtime-> mcr.microsoft.com/dotnet/aspnet:2.1\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-stretch-slim -> mcr.microsoft.com/dotnet/aspnet:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/aspnet:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-nanoserver-1809 -> mcr.microsoft.com/dotnet/aspnet:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-alpine -> mcr.microsoft.com/dotnet/aspnet:2.1-alpine\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-bionic -> mcr.microsoft.com/dotnet/aspnet:2.1-bionic\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-bionic-arm32v7 -> mcr.microsoft.com/dotnet/aspnet:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:aspnetcore-runtime-> mcr.microsoft.com/dotnet/aspnet:2.1\r\n```\r\n\r\nFor .NET Runtime:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\nmicrosoft/dotnet:2-runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\nmicrosoft/dotnet:2.1-runtime-stretch-slim -> mcr.microsoft.com/dotnet/runtime:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-runtime-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/runtime:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-runtime-nanoserver-1809 -> mcr.microsoft.com/dotnet/runtime:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-runtime-alpine -> mcr.microsoft.com/dotnet/runtime:2.1-alpine\r\nmicrosoft/dotnet:2.1-runtime-bionic -> mcr.microsoft.com/dotnet/runtime:2.1-bionic\r\nmicrosoft/dotnet:2.1-runtime-bionic-arm32v7 -> mcr.microsoft.com/dotnet/runtime:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\n```\r\n\r\nFor .NET Runtime dependencies:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-runtime-deps -> mcr.microsoft.com/dotnet/runtime-deps:2.1\r\nmicrosoft/dotnet:2.1-runtime-deps-stretch-slim -> mcr.microsoft.com/dotnet/runtime-deps:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-runtime-deps-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/runtime-deps:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-runtime-deps-alpine -> mcr.microsoft.com/dotnet/runtime-deps:2.1-alpine\r\nmicrosoft/dotnet:2.1-runtime-deps-bionic -> mcr.microsoft.com/dotnet/runtime-deps:2.1-bionic\r\nmicrosoft/dotnet:2.1-runtime-deps-bionic-arm32v7 -> mcr.microsoft.com/dotnet/runtime-deps:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:runtime-deps -> mcr.microsoft.com/dotnet/runtime-deps:2.1\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"18822627278","Type":"PullRequestEvent","CreatedAt":"2021-11-10T10:01:05","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28218","RelatedDescription":"Merged pull request \"Fix deps\" (#28218) at dotnet/coreclr","RelatedBody":""},{"Id":"18822623822","Type":"PullRequestEvent","CreatedAt":"2021-11-10T10:00:52","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28218","RelatedDescription":"Opened pull request \"Fix deps\" (#28218) at dotnet/coreclr","RelatedBody":""},{"Id":"18817520393","Type":"PullRequestEvent","CreatedAt":"2021-11-10T02:09:37","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28217","RelatedDescription":"Merged pull request \"Merge 3.1.21 changes to crossdac\" (#28217) at dotnet/coreclr","RelatedBody":""},{"Id":"18817516260","Type":"PullRequestEvent","CreatedAt":"2021-11-10T02:09:08","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28217","RelatedDescription":"Opened pull request \"Merge 3.1.21 changes to crossdac\" (#28217) at dotnet/coreclr","RelatedBody":""},{"Id":"18811302204","Type":"PullRequestEvent","CreatedAt":"2021-11-09T17:34:52","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28216","RelatedDescription":"Merged pull request \"Merging internal commits for release/3.1\" (#28216) at dotnet/coreclr","RelatedBody":""},{"Id":"18811257745","Type":"PullRequestEvent","CreatedAt":"2021-11-09T17:32:01","Actor":"vseanreesermsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28216","RelatedDescription":"Opened pull request \"Merging internal commits for release/3.1\" (#28216) at dotnet/coreclr","RelatedBody":""},{"Id":"18791580970","Type":"PullRequestEvent","CreatedAt":"2021-11-08T17:19:53","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28215","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#28215) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21427.4 to 2.2.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21427.4 to 2.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n"},{"Id":"18748880637","Type":"PullRequestEvent","CreatedAt":"2021-11-04T21:52:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28215","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#28215) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21427.4 to 2.2.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21427.4 to 2.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n"},{"Id":"18727509932","Type":"PullRequestEvent","CreatedAt":"2021-11-03T17:46:38","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28214","RelatedDescription":"Merged pull request \"Update branding for 3.1.22\" (#28214) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"18817169138","Type":"PullRequestEvent","CreatedAt":"2021-11-10T01:28:52","Actor":"vseanreesermsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13805","RelatedDescription":"Merged pull request \"Merging internal commits for release/3.1.4xx\" (#13805) at dotnet/cli","RelatedBody":""},{"Id":"18814839936","Type":"PullRequestEvent","CreatedAt":"2021-11-09T21:42:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13803","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13803) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n"},{"Id":"18811247676","Type":"PullRequestEvent","CreatedAt":"2021-11-09T17:31:22","Actor":"vseanreesermsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13805","RelatedDescription":"Opened pull request \"Merging internal commits for release/3.1.4xx\" (#13805) at dotnet/cli","RelatedBody":""},{"Id":"18755284526","Type":"PullRequestEvent","CreatedAt":"2021-11-05T09:56:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13804","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13804) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"18748890597","Type":"PullRequestEvent","CreatedAt":"2021-11-04T21:53:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13804","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13804) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"18748807564","Type":"PullRequestEvent","CreatedAt":"2021-11-04T21:46:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13803","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13803) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n"},{"Id":"18746908525","Type":"PullRequestEvent","CreatedAt":"2021-11-04T19:26:51","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13802","RelatedDescription":"Merged pull request \"Update branding for 3.1.416\" (#13802) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"18847671151","Type":"IssuesEvent","CreatedAt":"2021-11-11T16:40:33","Actor":"Xyncgas","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1797","RelatedDescription":"Closed issue \"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?\" (#1797) at dotnet/standard","RelatedBody":"In the example :\r\n```\r\nPublic class ClassA{\r\n    string a = \"A2\";\r\n}\r\npublic class ClassB : ClassA{//ClassB derive from Class A\r\n    string b = \"2B\";\r\n}\r\nPublic ClassA TestSample()\r\n{\r\n    classB I_Have_A_Pen = new ClassB();\r\n    Return I_Have_A_Pen;\r\n}\r\nvoid Main()\r\n{\r\n    var I_Have_A_Pineapple = TestSample(); //Ref:{7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}\r\n}\r\n```\r\nSo, at {7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}, I have two questions :\r\nI_Have_A_Pineapple is now ClassA but does the standard say it's actually still ClassB or I_Have_A_Pineapple.GetType()==typeof(ClassB) ?\r\n\r\nI_Have_A_Pineapple now doesn't have access to string b which value is \"2B\", because it's casted to ClassA and 2B only existed as Class B member, so a while later would gc be collecting this reference and 2B is gone forever while it might only exist at this moment?"},{"Id":"18835829174","Type":"IssuesEvent","CreatedAt":"2021-11-11T00:41:24","Actor":"Xyncgas","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1797","RelatedDescription":"Opened issue \"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?\" (#1797) at dotnet/standard","RelatedBody":"In the example :\r\n```\r\nPublic classA{\r\n    string a = \"A2\";\r\n}\r\npublic classB : ClassA{//ClassB derive from Class A\r\n    string b = \"2B\";\r\n}\r\nPublic ClassA TestSample()\r\n{\r\n    classB I_Have_A_Pen = new ClassB();\r\n    Return I_Have_A_Pen;\r\n}\r\nvoid Main()\r\n{\r\n    var I_Have_A_Pineapple = TestSample(); //Ref:{7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}\r\n}\r\n```\r\nSo, at {7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}, I have two questions :\r\nI_Have_A_Pineapple is now ClassA but does the standard say it's actually still ClassB or I_Have_A_Pineapple.GetType()==typeof(ClassB) ?\r\n\r\nI_Have_A_Pineapple now doesn't have access to string b which value is \"2B\", because it's casted to ClassA and 2B only existed as Class B member, so a while later would gc be collecting this reference and 2B is gone forever while it might only exist at this moment?"},{"Id":"18832207713","Type":"IssuesEvent","CreatedAt":"2021-11-10T19:31:41","Actor":"Xyncgas","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1796","RelatedDescription":"Opened issue \"[Feature Request] Allow Static Method In Interface\" (#1796) at dotnet/standard","RelatedBody":"Because in serialization workflow you usually call obj.export() or something, but when you are importing the object with custom business logic you don't do obj.import() --but usually--> typeof(object).import() which is a static method that returns an object.\r\n\r\nFailure in defining static method in interface makes it hard to implement a contract for me."},{"Id":"18777609691","Type":"IssuesEvent","CreatedAt":"2021-11-07T22:40:15","Actor":"jacseychell","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1795","RelatedDescription":"Opened issue \"w3wp.exe Faulting Application Exception Code 0xc0000409\" (#1795) at dotnet/standard","RelatedBody":"We are having an issue with our application when it is installed within an environment and it is displaying unusual behavior we have not experienced before. \r\n\r\nThe application will run successfully on initial load and successfully poll to an external site when someone is logged onto the server where the application is running from. But when you log off the server and let it poll on it's own, it will throw an application error, and the only information it provides is w3wp.exe Faulting Application Exception Code 0xc0000409. \r\n\r\nNo logs are logged by the application to say something has occurred, the application simply just stops it's process, then will restart it's polling at it's next scheduled time. And after it throws this fault once, it will continue to fault each round of polling. \r\n\r\nWe have taken the crash dumps from the process, and ran the dumps within DebugDiag but need some help decoding what might be faulting within the application / or environment to prevent the polling service from continuing. \r\n\r\nWe have tried:\r\n* Setting the application on its own app pool\r\n* Updated and installed the latest C++ Redistributables \r\n* Re-registering the urctbas.dll using Regsver32\r\n* Copy the OCX into SystWow64 folder \r\n* Updated the Windows 10 SDK to the latest version \r\n\r\nThis is the DebugDiag that was created from the crash dumps, the dump files are too big to post here. \r\n[MultipleDumps_MultipleRules.zip](https://github.com/dotnet/standard/files/7493262/MultipleDumps_MultipleRules.zip)\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"18831411586","Type":"PullRequestEvent","CreatedAt":"2021-11-10T18:35:29","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43123","RelatedDescription":"Merged pull request \"Merging internal commits for release/3.1\" (#43123) at dotnet/corefx","RelatedBody":""},{"Id":"18811254963","Type":"PullRequestEvent","CreatedAt":"2021-11-09T17:31:50","Actor":"vseanreesermsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/43123","RelatedDescription":"Opened pull request \"Merging internal commits for release/3.1\" (#43123) at dotnet/corefx","RelatedBody":""},{"Id":"18791554579","Type":"PullRequestEvent","CreatedAt":"2021-11-08T17:18:20","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43122","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#43122) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21427.4 to 2.4.1-beta.21552.6][1]\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: [from 2.5.1-beta.21427.4 to 2.5.1-beta.21552.6][1]\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21427.4 to 2.2.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.CoreFxTesting**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21427.4 to 2.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n"},{"Id":"18791546196","Type":"PullRequestEvent","CreatedAt":"2021-11-08T17:17:51","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43117","RelatedDescription":"Merged pull request \"[release/3.1] Fix linux pipeline\" (#43117) at dotnet/corefx","RelatedBody":"Getting this error when building the internal pipeline:\r\n```\r\n[warning]An image label with the label Ubuntu16 does not exist.\r\n```\r\n\r\nThis is an attempt to fix this, based on @safern suggestion."},{"Id":"18763515961","Type":"PullRequestEvent","CreatedAt":"2021-11-05T19:36:49","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/43118","RelatedDescription":"Merged pull request \"Update branding for 3.1.22\" (#43118) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"18849275305","Type":"PullRequestEvent","CreatedAt":"2021-11-11T18:34:38","Actor":"allisonchou","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/57711","RelatedDescription":"Opened pull request \"Modify timeout to avoid flaky integration tests\" (#57711) at dotnet/roslyn","RelatedBody":"Sam found that the timeout was reduced back in September but is too short. This PR restores the timeout to its original value."},{"Id":"18849156494","Type":"PullRequestEvent","CreatedAt":"2021-11-11T18:25:24","Actor":"allisonchou","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/57702","RelatedDescription":"Closed pull request \"Skip flaky test WorkspaceClearedAfterReset\" (#57702) at dotnet/roslyn","RelatedBody":"This test is consistently flaky and is tracked by https://github.com/dotnet/roslyn/issues/57701."},{"Id":"18848496559","Type":"IssuesEvent","CreatedAt":"2021-11-11T17:35:53","Actor":"siegfriedpammer","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/57704","RelatedDescription":"Closed issue \"Cascadia Code/Mono crashes VS 2022 Editor\" (#57704) at dotnet/roslyn","RelatedBody":"See https://github.com/dotnet/roslyn/pull/56530#issuecomment-966149617\r\n\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.0.0\r\nVisualStudio.17.Release/17.0.0+31903.59\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Community\r\n\r\nAzure App Service Tools v3.0.0   17.0.789.48259\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   4.0.0-6.21526.21+c7d6f9fab845ffd943216da465022744e7d35f22\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nNuGet Package Manager   6.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   4.0.0-6.21526.21+c7d6f9fab845ffd943216da465022744e7d35f22\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nCurrently I am experiencing a few issues when trying to work with Roslyn.sln. VS 2019 won't run unit tests anymore and VS 2022 refuses to show any editor windows.\r\n\r\n![image](https://user-images.githubusercontent.com/344204/141274352-c480eb99-3ff1-4829-9e88-1710518ee53b.png)\r\n\r\nNow it finally displays the tests, in the pane to the left, but also printed this exception to the output.\r\n\r\n```\r\nLog level is set to Informational (Default).\r\nSystem.UnauthorizedAccessException: Attempted to perform an unauthorized operation. ---> System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.FontList.get_Item(UInt32 A_0)\r\n   at MS.Internal.FontFace.PhysicalFontFamily.MapGlyphTypeface(FontStyle style, FontWeight weight, FontStretch stretch, CharacterBufferRange charString, CultureInfo digitCulture, Int32& advance, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFaceFamily(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, IFontFamily fontFamily, FontStyle canonicalStyle, FontWeight canonicalWeight, FontStretch canonicalStretch, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Boolean nullFont, Double scaleInEm, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Boolean ignoreMissing, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFamily(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, IFontFamily fontFamily, CanonicalFontFamilyReference canonicalFamilyReference, FontStyle canonicalStyle, FontWeight canonicalWeight, FontStretch canonicalStretch, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapOnceByFontFamilyList(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, FontFamily[] familyList, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFamilyList(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, FontFamily[] familyList, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapItem(CharacterBufferRange unicodeString, CultureInfo culture, Span itemSpan, SpanVector`1& cachedScaledTypefaceIndexSpans, Int32 ichItem)\r\n   at MS.Internal.Shaping.TypefaceMap.GetShapeableText(CharacterBufferReference characterBufferReference, Int32 stringLength, TextRunProperties textRunProperties, CultureInfo digitCulture, Boolean isRightToLeftParagraph, IList`1 shapeableList, IShapeableTextCollector collector, TextFormattingMode textFormattingMode)\r\n   at MS.Internal.Shaping.GlyphingCache.GetShapeableText(Typeface typeface, CharacterBufferReference characterBufferReference, Int32 stringLength, TextRunProperties textRunProperties, CultureInfo digitCulture, Boolean isRightToLeftParagraph, IList`1 shapeableList, IShapeableTextCollector collector, TextFormattingMode textFormattingMode)\r\n   at System.Windows.Media.TextFormatting.TextCharacters.MS.Internal.TextFormatting.ITextSymbols.GetTextShapeableSymbols(GlyphingCache glyphingCache, CharacterBufferReference characterBufferReference, Int32 length, Boolean rightToLeft, Boolean isRightToLeftParagraph, CultureInfo digitCulture, TextModifierScope textModifierScope, TextFormattingMode textFormattingMode, Boolean isSideways)\r\n   at MS.Internal.TextFormatting.TextStore.CreateTextLSRuns(TextRunInfo runInfo, IList`1 textEffects, CultureInfo digitCulture, Int32 offsetToFirstChar, Int32 stringLength, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel)\r\n   at MS.Internal.TextFormatting.TextStore.CreateLSRuns(TextRunInfo runInfo, IList`1 textEffects, CultureInfo digitCulture, Int32 offsetToFirstChar, Int32 stringLength, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel, Int32& textRunLength)\r\n   at MS.Internal.TextFormatting.TextStore.CreateLSRunsUniformBidiLevel(SpanVector runInfoVector, SpanVector textEffectsVector, Int32 runInfoFirstCp, Int32 ichUniform, Int32 cchUniform, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel)\r\n   at MS.Internal.TextFormatting.TextStore.FetchLSRun(Int32 lscpFetch, TextFormattingMode textFormattingMode, Boolean isSideways, Plsrun& plsrun, Int32& lsrunOffset, Int32& lsrunLength)\r\n   at MS.Internal.TextFormatting.LineServicesCallbacks.FetchRunRedefined(IntPtr pols, Int32 lscpFetch, Int32 fIsStyle, IntPtr pstyle, Char* pwchTextBuffer, Int32 cchTextBuffer, Int32& fIsBufferUsed, Char*& pwchText, Int32& cchText, Int32& fIsHidden, LsChp& lschp, IntPtr& lsplsrun)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.TextFormatting.TextMetrics.FullTextLine.FormatLine(FullTextState fullText, Int32 cpFirst, Int32 lineLength, Int32 formatWidth, Int32 finiteFormatWidth, Int32 paragraphWidth, LineFlags lineFlags, FormattedTextSymbols collapsingSymbol)\r\n   at MS.Internal.TextFormatting.TextMetrics.FullTextLine..ctor(FormatSettings settings, Int32 cpFirst, Int32 lineLength, Int32 paragraphWidth, LineFlags lineFlags)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLineInternal(TextSource textSource, Int32 firstCharIndex, Int32 lineLength, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak, TextRunCache textRunCache)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLine(TextSource textSource, Int32 firstCharIndex, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak)\r\n   at System.Windows.Media.FormattedText.LineEnumerator.FormatLine(TextSource textSource, Int32 textSourcePosition, Double maxLineLength, TextParagraphProperties paraProps, TextLineBreak lineBreak)\r\n   at System.Windows.Media.FormattedText.LineEnumerator.MoveNext()\r\n   at System.Windows.Media.FormattedText.DrawAndCalculateMetrics(DrawingContext dc, Point drawingOffset, Boolean getBlackBoxMetrics)\r\n   at System.Windows.Media.FormattedText.get_Metrics()\r\n   at Microsoft.VisualStudio.Text.Formatting.Implementation.TextInfoCache.GetTextInfo(TextRunProperties key)\r\n   at Microsoft.VisualStudio.Text.Formatting.Implementation.FormattedTextSourceFactoryService.Create(ITextSnapshot sourceTextSnapshot, ITextSnapshot visualBufferSnapshot, Int32 tabSize, Double lineSpacing, Double baseIndentation, Double wordWrapWidth, Double maxAutoIndent, Boolean useDisplayMode, IClassifier aggregateClassifier, ITextAndAdornmentSequencer sequencer, IClassificationFormatMap classificationFormatMap, Boolean isViewWrapEnabled)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.PreLayout(LayoutLineCache lineCache)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.PerformLayout(SnapshotPoint anchorPosition, Double verticalDistance, ViewRelativePosition relativeTo, Double effectiveViewportWidth, Double effectiveViewportHeight, Boolean preserveViewportTop, Nullable`1 cancel)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.Initialize()\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.InitializeTextView(IWpfTextView view)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.CreateAndTrackTextView(ITextDataModel dataModel, ITextViewRoleSet roles, IEditorOptions parentOptions, Boolean initialize)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.CreateTextView(ITextBuffer textBuffer, ITextViewRoleSet roles, IEditorOptions parentOptions)\r\n   at Microsoft.VisualStudio.TestWindow.Internal.UI.Summary.SummaryBuilder.InitializeTextView()\r\n   at Microsoft.VisualStudio.TestWindow.Internal.UI.Summary.SummaryControl.<InitializeControlContentAsync>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.TestWindow.Logging.ILoggerExtensions.<CallWithCatchAsync>d__11`1.MoveNext()\r\nConnected to test environment '< Local Windows Environment >'\r\nTest data store opened in 81,904 sec.\r\n```"},{"Id":"18848063743","Type":"IssuesEvent","CreatedAt":"2021-11-11T17:05:59","Actor":"mqudsi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/57710","RelatedDescription":"Opened issue \"Type vs Name resolution breaks when value type is a nullable value type\" (#57710) at dotnet/roslyn","RelatedBody":"*I don't know if this behavior is intentional to address some corner case, if it is, please forgive this erroneous bug report*\r\n\r\nChanging only the type of a property from a simple struct to a nullable version of the same struct either changes (if this isn't a bug) or breaks (if this is a bug) same-name type resolution. This is inconsistent with the behavior observed when the property is a regular value type, a reference type, or a nullable reference type.\r\n\r\n**Version Used**: \r\n\r\nVisual Studio 17.0.0 Preview 5.0 with a C# 10 project.\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\npublic class Foo {\r\n    public TimeSpan? TimeSpan => TimeSpan.FromDays(7);\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe compiler will be able to deduce that in `TimeSpan.FromDays()` the token `TimeSpan` refers to a type and not the instance by the same name.\r\n\r\n**Actual Behavior**:\r\n\r\nAn error is observed as `TimeSpan` is resolved to the property by that name and not the type with that name, and an instance of `TimeSpan` does not have a `FromDays()` function.\r\n\r\nNote that this behavior only occurs for a nullable value type, and is not observed with any of the other possible combinations. The following all compile OK:\r\n\r\n```csharp\r\npublic class Foo {\r\n    public TimeSpan TimeSpan => TimeSpan.FromDays(7);\r\n    public string String => String.IsNullOrEmpty(null) ? \"foo\" : \"bar\";\r\n    public Array? Array => Array.BinarySearch(new object[] { }, null) == 0 ? new object[] { } : new object[] { };\r\n}\r\n```\r\n\r\nThe above are all able to correctly resolve a non-namespaced reference to a type by the same name as the property to the type (yielding access to the static method within)."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"18849139686","Type":"PullRequestEvent","CreatedAt":"2021-11-11T18:24:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/22553","RelatedDescription":"Merged pull request \"[main] Update dependencies from dotnet/aspnetcore\" (#22553) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211111.2\r\n- **Date Produced**: November 11, 2021 3:55:38 PM UTC\r\n- **Commit**: cb90cdc893f8f731606fbe88c826a7eb3027f35e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/a3f3fcf...cb90cdc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n"},{"Id":"18847553129","Type":"PullRequestEvent","CreatedAt":"2021-11-11T16:33:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/22553","RelatedDescription":"Opened pull request \"[main] Update dependencies from dotnet/aspnetcore\" (#22553) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211111.2\r\n- **Date Produced**: November 11, 2021 3:55:38 PM UTC\r\n- **Commit**: cb90cdc893f8f731606fbe88c826a7eb3027f35e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/a3f3fcf...cb90cdc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-05-07T13:22:05","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/182","RelatedDescription":"Closed or merged PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"611683931","IsPullRequest":true,"CreatedAt":"2020-05-07T13:21:08","Actor":"MarcoRossignoli","Number":"192","RawContent":null,"Title":"Update coverlet links","State":"closed","Body":"Update repo links\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet-foundation/foundation/pull/192","RelatedDescription":"Closed or merged PR \"Update coverlet links\" (#192)"},{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"nxtn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"nxtn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"nxtn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"nxtn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet-foundation/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"nxtn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"nxtn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"nxtn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet-foundation/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet-foundation/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet-foundation/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet-foundation/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet-foundation/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet-foundation/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet-foundation/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet-foundation/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet-foundation/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet-foundation/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet-foundation/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"1049622647","IsPullRequest":true,"CreatedAt":"2021-11-10T10:01:04","Actor":"hoyosjs","Number":"28218","RawContent":null,"Title":"Fix deps","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28218","RelatedDescription":"Closed or merged PR \"Fix deps\" (#28218)"},{"Id":"1049322707","IsPullRequest":true,"CreatedAt":"2021-11-10T02:09:37","Actor":"hoyosjs","Number":"28217","RawContent":null,"Title":"Merge 3.1.21 changes to crossdac","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28217","RelatedDescription":"Closed or merged PR \"Merge 3.1.21 changes to crossdac\" (#28217)"},{"Id":"1048884864","IsPullRequest":true,"CreatedAt":"2021-11-09T17:34:51","Actor":"vseanreesermsft","Number":"28216","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28216","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28216)"},{"Id":"1045244799","IsPullRequest":true,"CreatedAt":"2021-11-08T17:19:52","Actor":"dotnet-maestro[bot]","Number":"28215","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21427.4 to 2.2.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21427.4 to 2.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28215","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28215)"},{"Id":"1042679219","IsPullRequest":true,"CreatedAt":"2021-11-03T17:46:38","Actor":"vseanreesermsft","Number":"28214","RawContent":null,"Title":"Update branding for 3.1.22","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28214","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.22\" (#28214)"},{"Id":"1026598316","IsPullRequest":true,"CreatedAt":"2021-10-14T18:24:44","Actor":"vseanreesermsft","Number":"28213","RawContent":null,"Title":"Build/platform matrix remove redhat.6 from dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28213","RelatedDescription":"Closed or merged PR \"Build/platform matrix remove redhat.6 from dependencies\" (#28213)"},{"Id":"1025822747","IsPullRequest":true,"CreatedAt":"2021-10-14T14:10:16","Actor":"vseanreesermsft","Number":"28212","RawContent":null,"Title":"eng/platform-matrix.yml remove RedHat.6.Amd64","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28212","RelatedDescription":"Closed or merged PR \"eng/platform-matrix.yml remove RedHat.6.Amd64\" (#28212)"},{"Id":"1024669605","IsPullRequest":true,"CreatedAt":"2021-10-13T01:35:13","Actor":"hoyosjs","Number":"28211","RawContent":null,"Title":"Release/3.1 crossdac v3.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28211","RelatedDescription":"Closed or merged PR \"Release/3.1 crossdac v3.1.20\" (#28211)"},{"Id":"1024513482","IsPullRequest":true,"CreatedAt":"2021-10-12T23:03:48","Actor":"vseanreesermsft","Number":"28210","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28210","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28210)"},{"Id":"1021089239","IsPullRequest":true,"CreatedAt":"2021-10-08T16:36:16","Actor":"aik-jahoda","Number":"28209","RawContent":null,"Title":"Update branding to 3.1.22","State":"closed","Body":"Prepare branch for 3.1.22 release. After merge, the servising branch is considered open.","Url":"https://github.com/dotnet/coreclr/pull/28209","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.22\" (#28209)"},{"Id":"1016538114","IsPullRequest":true,"CreatedAt":"2021-10-05T18:41:46","Actor":"vseanreesermsft","Number":"28208","RawContent":null,"Title":"Update branding for 3.1.21","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28208","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.21\" (#28208)"},{"Id":"1010061315","IsPullRequest":true,"CreatedAt":"2021-09-29T18:04:35","Actor":"jonfortescue","Number":"28207","RawContent":null,"Title":"Switch to 1ES servicing pools on release/3.1-crossdac","State":"closed","Body":"Same as https://github.com/dotnet/coreclr/pull/28206 but for the `release/3.1-crossdac` branch.","Url":"https://github.com/dotnet/coreclr/pull/28207","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/3.1-crossdac\" (#28207)"},{"Id":"1005851743","IsPullRequest":true,"CreatedAt":"2021-09-28T18:04:56","Actor":"jonfortescue","Number":"28206","RawContent":null,"Title":"Switch to 1ES servicing pools on release/3.1","State":"closed","Body":"Tracking issue: https://github.com/dotnet/core-eng/issues/14276","Url":"https://github.com/dotnet/coreclr/pull/28206","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/3.1\" (#28206)"},{"Id":"996569329","IsPullRequest":true,"CreatedAt":"2021-09-15T22:19:09","Actor":"kouvel","Number":"28205","RawContent":null,"Title":"[release/3.1] Harden native gate thread against affinity mask growth","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/59133\r\n\r\nHardened ThreadpoolMgr::GateThreadStart against the possibility that the observed group-local affinity mask contains set bits at positions higher than the total group-local CPU count that was captured during earlier initialization.\r\n\r\nThis fixes customer-reported crashes which have occurred on multi-group machines with heterogenous CPU counts across groups (but the same crash can probably also occur on single-group VMs if CPUs are hot-added and are then manually added to the process affinity mask).\r\n\r\n## Customer Impact\r\n\r\nWhen the thread pool is used after being idle for a short duration, the system's logical processor count and the process' affinity have increased since the start of the process, and the process is not configured to use all CPU groups, the process may crash. This can potentially happen on multi-CPU-group systems with heterogenous CPU counts across groups where the process may be moved to a different CPU group with more processors, or in systems where CPUs may be hot-added.\r\n\r\n## Testing\r\n\r\n- Verified in the debugger that increases to the affinity mask behave as expected after the change\r\n- A customer was able to verify a similar fix in .NET Framework\r\n\r\n## Risk\r\n\r\nLow. The change may only increase and not decrease the size of an array, up to a max of 64 elements. I have not seen many of these crashes so far in .NET Core.","Url":"https://github.com/dotnet/coreclr/pull/28205","RelatedDescription":"Closed or merged PR \"[release/3.1] Harden native gate thread against affinity mask growth\" (#28205)"},{"Id":"996474522","IsPullRequest":true,"CreatedAt":"2021-09-15T01:17:16","Actor":"vseanreesermsft","Number":"28203","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28203","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28203)"},{"Id":"996548021","IsPullRequest":true,"CreatedAt":"2021-09-15T00:40:47","Actor":"hoyosjs","Number":"28204","RawContent":null,"Title":"Merge 3.1.19 to crossdac branch","State":"closed","Body":"- Update branding to 3.1.17 (#28173)\n- Port from 5.0: Fix Position Independent Code in CMake files (#28143)\n- Merged PR 15832: Port from 5.0: Fix Position Independent Code in CMake files (#28143)\n- Fix System.Globalization.Native build on Big Sur (#28181)\n- [release/3.1] Handle Counter Polling Interval of 0 (#28180)\n- update branding to 3.1.18 (#28182)\n- Update dependencies from https://github.com/dotnet/core-setup build 20210609.1 (#28178)\n- Merged PR 15716: [release/3.1] Use user read+write access for coredump file descriptor open\n- [release/3.1] #28183 Fix OSX native dependency installation\n- [release/3.1] Update dependencies from dotnet/corefx (#28179)\n- Update branding for 3.1.19 (#28193)\n- [release/3.1] Update dependencies from dotnet/arcade (#28175)\n- Remove blob feeds (#28177)\n","Url":"https://github.com/dotnet/coreclr/pull/28204","RelatedDescription":"Closed or merged PR \"Merge 3.1.19 to crossdac branch\" (#28204)"},{"Id":"991653183","IsPullRequest":true,"CreatedAt":"2021-09-13T17:14:36","Actor":"GrabYourPitchforks","Number":"28202","RawContent":null,"Title":"[release/3.1] Reduce lock contentions in GetCultureInfoHelper","State":"closed","Body":"Reduces lock contentions in `CultureInfo.GetCulture` and related APIs when many threads are calling this API simultaneously.\r\n\r\n## Customer impact\r\n\r\nThe method family `CultureInfo.GetCulture` takes a global lock when searching for already-created CultureInfo instances. This can cause lock contention in high-traffic applications if multiple threads call these methods concurrently. We discovered this contention issue while investigating the contention issue described in https://github.com/dotnet/coreclr/pull/28201.\r\n\r\nThis fix does not remove the lock outright, but it shrinks the window in which any given thread holds the lock. Previously, the logic was:\r\n\r\n1. Acquire the lock.\r\n2. Compute the key which will be used to query the dictionary. (Computing the key is string concatenation.)\r\n3. Query the dictionary.\r\n4. Release the lock.\r\n\r\nWith this change, the key is computed (2) _before_ the lock is taken (1). This means that the only operation which takes place within the lock is a dictionary lookup - not a string concatenation - and such lookups are expected to be very fast.\r\n\r\n## Regression\r\n\r\nNo. This is a perf improvement compared to 3.1 RTM. Aside from the perf improvement, no behavioral changes should be observed.\r\n\r\n## Risk\r\n\r\nLow. This does not change the logical flow of this method, as all string components are already floating around within the method as locals. We're not introducing any new method calls (aside from the string allocation itself) outside the lock.\r\n\r\nAnother alternative is to port https://github.com/dotnet/coreclr/pull/26567 in its entirety. That PR fixes some race conditions in this code in addition to moving the string concatenation before the lock acquisition. That PR has been baking in the product since 5.0 RTM and we have not received any complaints about it, so it should be considered stable if we'd instead prefer to bring that along. However, it is larger than the absolute minimum necessary to solve the lock contention issue the customer is seeing.","Url":"https://github.com/dotnet/coreclr/pull/28202","RelatedDescription":"Closed or merged PR \"[release/3.1] Reduce lock contentions in GetCultureInfoHelper\" (#28202)"},{"Id":"991644745","IsPullRequest":true,"CreatedAt":"2021-09-13T17:14:20","Actor":"GrabYourPitchforks","Number":"28201","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#40116 (MemberInfo lock contention) to 3.1","State":"closed","Body":"Ports the fix for https://github.com/dotnet/runtime/issues/35851 from 5.0 to 3.1 per customer request.\r\n\r\n## Customer impact\r\n\r\nThe methods `Type.GetMethod` and `Type.GetField` take a per-Type lock while searching for the target member. This can cause lock contention in high-traffic applications if multiple threads call these methods concurrently on the same Type instance. We've received reports of customers' applications impacted by this contention and their RPS dropping precipitiously.\r\n\r\nThe fix avoids the lock entirely in the common case where all MemberInfo instances have already been cached. Multiple threads can walk this cache concurrently without contention.\r\n\r\n## Regression\r\n\r\nNo. This is a perf improvement compared to 3.1 RTM. Aside from the perf improvement, no behavioral changes should be observed.\r\n\r\n## Risk\r\n\r\nLow. This change originally went in to 5.0, and we've received no bug reports for these code paths since 5.0 RTM shipped. The code path also \"fails safe\", meaning that if the cache appears to be improperly initialized (perhaps because another thread is currently in the process of updating it) the method will fall back down the slower \"take the lock\" code path. This failsafe also shipped in 5.0 RTM.","Url":"https://github.com/dotnet/coreclr/pull/28201","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#40116 (MemberInfo lock contention) to 3.1\" (#28201)"},{"Id":"991578402","IsPullRequest":true,"CreatedAt":"2021-09-09T16:29:45","Actor":"dotnet-maestro[bot]","Number":"28200","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20210827.4\r\n- **Date Produced**: 8/27/2021 5:44 PM\r\n- **Commit**: 98e2fbaad9f2f7bbe091bb0b9dd37d03206becc9\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21376.2 to 2.2.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21376.2 to 2.0.0-beta.21427.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c444d79...98e2fba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28200","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28200)"},{"Id":"990171588","IsPullRequest":true,"CreatedAt":"2021-09-07T21:46:36","Actor":"vseanreesermsft","Number":"28198","RawContent":null,"Title":"Update branding for 3.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28198","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.20\" (#28198)"},{"Id":"990183431","IsPullRequest":true,"CreatedAt":"2021-09-07T20:55:11","Actor":"vseanreesermsft","Number":"28199","RawContent":null,"Title":"Update branding for 3.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28199","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.20\" (#28199)"},{"Id":"967801542","IsPullRequest":true,"CreatedAt":"2021-08-12T18:49:54","Actor":"crummel","Number":"28197","RawContent":null,"Title":"Merge internal 2.1.19 commits","State":"closed","Body":"@aik-jahoda @Anipik @vseanreesermsft @wtgodbe I thought this was merged with https://github.com/dotnet/coreclr/pull/28196 but it's missing the actual 2.1 commit.  Source-build will need this to release 2.1.19.","Url":"https://github.com/dotnet/coreclr/pull/28197","RelatedDescription":"Closed or merged PR \"Merge internal 2.1.19 commits\" (#28197)"},{"Id":"967128954","IsPullRequest":true,"CreatedAt":"2021-08-11T17:49:44","Actor":"Anipik","Number":"28196","RawContent":null,"Title":"update branding 2.1.30","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28196","RelatedDescription":"Closed or merged PR \"update branding 2.1.30\" (#28196)"},{"Id":"965731921","IsPullRequest":true,"CreatedAt":"2021-08-11T02:32:21","Actor":"hoyosjs","Number":"28195","RawContent":null,"Title":"Crossdac v3.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28195","RelatedDescription":"Closed or merged PR \"Crossdac v3.1.18\" (#28195)"},{"Id":"965342165","IsPullRequest":true,"CreatedAt":"2021-08-10T22:53:53","Actor":"vseanreesermsft","Number":"28194","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28194","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#28194)"},{"Id":"958557205","IsPullRequest":true,"CreatedAt":"2021-08-04T17:46:02","Actor":"vseanreesermsft","Number":"28193","RawContent":null,"Title":"Update branding for 3.1.19","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28193","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.19\" (#28193)"},{"Id":"949907273","IsPullRequest":true,"CreatedAt":"2021-07-21T17:20:46","Actor":"vseanreesermsft","Number":"28192","RawContent":null,"Title":"Replace master with main","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28192","RelatedDescription":"Closed or merged PR \"Replace master with main\" (#28192)"},{"Id":"949195196","IsPullRequest":true,"CreatedAt":"2021-07-20T23:58:14","Actor":"vseanreesermsft","Number":"28191","RawContent":null,"Title":"Target new machine","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28191","RelatedDescription":"Closed or merged PR \"Target new machine\" (#28191)"},{"Id":"949151994","IsPullRequest":true,"CreatedAt":"2021-07-20T22:22:38","Actor":"vseanreesermsft","Number":"28190","RawContent":null,"Title":"Revert \"Switch agent pool and demand specific agent. (#28189)\"","State":"closed","Body":"This reverts commit eb16d70c24acd54453dd6e248f13349c6f022a21.","Url":"https://github.com/dotnet/coreclr/pull/28190","RelatedDescription":"Closed or merged PR \"Revert \"Switch agent pool and demand specific agent. (#28189)\"\" (#28190)"},{"Id":"949000984","IsPullRequest":true,"CreatedAt":"2021-07-20T19:32:08","Actor":"vseanreesermsft","Number":"28189","RawContent":null,"Title":"Switch agent pool and demand specific agent.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28189","RelatedDescription":"Closed or merged PR \"Switch agent pool and demand specific agent.\" (#28189)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"1048884281","IsPullRequest":true,"CreatedAt":"2021-11-10T01:28:51","Actor":"vseanreesermsft","Number":"13805","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13805","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13805)"},{"Id":"1045240416","IsPullRequest":true,"CreatedAt":"2021-11-09T21:42:31","Actor":"dotnet-maestro[bot]","Number":"13803","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13803","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13803)"},{"Id":"1045245482","IsPullRequest":true,"CreatedAt":"2021-11-05T09:56:50","Actor":"dotnet-maestro[bot]","Number":"13804","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13804","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13804)"},{"Id":"1042678996","IsPullRequest":true,"CreatedAt":"2021-11-04T19:26:50","Actor":"vseanreesermsft","Number":"13802","RawContent":null,"Title":"Update branding for 3.1.416","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13802","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.416\" (#13802)"},{"Id":"1024515155","IsPullRequest":true,"CreatedAt":"2021-10-13T18:10:36","Actor":"vseanreesermsft","Number":"13801","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13801","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13801)"},{"Id":"1024512573","IsPullRequest":true,"CreatedAt":"2021-10-13T17:21:00","Actor":"vseanreesermsft","Number":"13800","RawContent":null,"Title":"Merging internal commits for release/3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13800","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.1xx\" (#13800)"},{"Id":"1012648569","IsPullRequest":true,"CreatedAt":"2021-10-12T22:22:59","Actor":"jonfortescue","Number":"13795","RawContent":null,"Title":"Switch to 1ES servicing pools on release/2.1.8xx","State":"closed","Body":"Same as https://github.com/dotnet/cli/pull/13793 but for `release/2.1.8xx`.","Url":"https://github.com/dotnet/cli/pull/13795","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/2.1.8xx\" (#13795)"},{"Id":"1012633589","IsPullRequest":true,"CreatedAt":"2021-10-12T21:10:05","Actor":"jonfortescue","Number":"13794","RawContent":null,"Title":"Switch to 1ES servicing pools on release/2.1.5xx","State":"closed","Body":"Same as https://github.com/dotnet/cli/pull/13793 but for `release/2.1.5xx`.","Url":"https://github.com/dotnet/cli/pull/13794","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/2.1.5xx\" (#13794)"},{"Id":"1016537937","IsPullRequest":true,"CreatedAt":"2021-10-05T23:00:26","Actor":"vseanreesermsft","Number":"13799","RawContent":null,"Title":"Update branding for 3.1.415","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13799","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.415\" (#13799)"},{"Id":"1016537877","IsPullRequest":true,"CreatedAt":"2021-10-05T17:26:58","Actor":"vseanreesermsft","Number":"13798","RawContent":null,"Title":"Update branding for 3.1.121","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13798","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.121\" (#13798)"},{"Id":"1014088273","IsPullRequest":true,"CreatedAt":"2021-10-02T15:53:24","Actor":"ericmutta","Number":"13797","RawContent":null,"Title":"Remove dead link in runtime-configuration-file.md","State":"closed","Body":"The following line:\r\n\r\n> Full list of [configuration properties](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/clr-configuration-knobs.md) for CoreCLR.\r\n\r\n...links to the `clr-configuration-knobs.md` file which was deleted by @jkotas on Nov/2019 via this [commit](https://github.com/dotnet/runtime/commit/fa25aeaca87d9d37324cd27d7341b6c201179f06). The commit message says `The officially supported settings are documented in https://github.com/dotnet/docs` but I couldn't find a specific file under `dotnet/docs` to link to, so I have tentatively deleted the link altogether but it would be nice to find an alternative link and use that :+1:","Url":"https://github.com/dotnet/cli/pull/13797","RelatedDescription":"Closed or merged PR \"Remove dead link in runtime-configuration-file.md\" (#13797)"},{"Id":"1012652167","IsPullRequest":true,"CreatedAt":"2021-10-01T22:50:24","Actor":"jonfortescue","Number":"13796","RawContent":null,"Title":"Switch to 1ES servicing pools on release/3.1.1xx","State":"closed","Body":"Same as https://github.com/dotnet/cli/pull/13793 but for `release/3.1.1xx`.","Url":"https://github.com/dotnet/cli/pull/13796","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/3.1.1xx\" (#13796)"},{"Id":"1005840799","IsPullRequest":true,"CreatedAt":"2021-09-30T18:08:39","Actor":"jonfortescue","Number":"13793","RawContent":null,"Title":"Switch to 1ES servicing pools on release/3.1.4xx","State":"closed","Body":"Tracking issue: https://github.com/dotnet/core-eng/issues/14276","Url":"https://github.com/dotnet/cli/pull/13793","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/3.1.4xx\" (#13793)"},{"Id":"998777316","IsPullRequest":true,"CreatedAt":"2021-09-17T00:06:37","Actor":"vseanreesermsft","Number":"13791","RawContent":null,"Title":"Update branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13791","RelatedDescription":"Closed or merged PR \"Update branding\" (#13791)"},{"Id":"998777343","IsPullRequest":true,"CreatedAt":"2021-09-17T00:06:30","Actor":"vseanreesermsft","Number":"13792","RawContent":null,"Title":"Update branding","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13792","RelatedDescription":"Closed or merged PR \"Update branding\" (#13792)"},{"Id":"996475221","IsPullRequest":true,"CreatedAt":"2021-09-15T02:12:46","Actor":"vseanreesermsft","Number":"13790","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13790","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#13790)"},{"Id":"996474220","IsPullRequest":true,"CreatedAt":"2021-09-15T01:17:24","Actor":"vseanreesermsft","Number":"13789","RawContent":null,"Title":"Merging internal commits for release/3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13789","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.1xx\" (#13789)"},{"Id":"991580431","IsPullRequest":true,"CreatedAt":"2021-09-09T03:31:23","Actor":"dotnet-maestro[bot]","Number":"13788","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20210827.4\r\n- **Date Produced**: 8/27/2021 5:44 PM\r\n- **Commit**: 98e2fbaad9f2f7bbe091bb0b9dd37d03206becc9\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c444d79...98e2fba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13788","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13788)"},{"Id":"991573857","IsPullRequest":true,"CreatedAt":"2021-09-08T23:47:17","Actor":"dotnet-maestro[bot]","Number":"13787","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20210827.4\r\n- **Date Produced**: 8/27/2021 5:44 PM\r\n- **Commit**: 98e2fbaad9f2f7bbe091bb0b9dd37d03206becc9\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c444d79...98e2fba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13787","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13787)"},{"Id":"990170476","IsPullRequest":true,"CreatedAt":"2021-09-08T16:48:32","Actor":"vseanreesermsft","Number":"13784","RawContent":null,"Title":"Update branding for 3.1.414","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13784","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.414\" (#13784)"},{"Id":"990170413","IsPullRequest":true,"CreatedAt":"2021-09-07T21:09:23","Actor":"vseanreesermsft","Number":"13783","RawContent":null,"Title":"Update branding for 3.1.120","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13783","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.120\" (#13783)"},{"Id":"990183037","IsPullRequest":true,"CreatedAt":"2021-09-07T20:55:47","Actor":"vseanreesermsft","Number":"13785","RawContent":null,"Title":"Update branding for 3.1.120","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13785","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.120\" (#13785)"},{"Id":"990183103","IsPullRequest":true,"CreatedAt":"2021-09-07T20:55:41","Actor":"vseanreesermsft","Number":"13786","RawContent":null,"Title":"Update branding for 3.1.414","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13786","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.414\" (#13786)"},{"Id":"984329828","IsPullRequest":true,"CreatedAt":"2021-09-02T18:19:00","Actor":"wli3","Number":"13782","RawContent":null,"Title":"Fix missing packaged shim after update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13782","RelatedDescription":"Closed or merged PR \"Fix missing packaged shim after update\" (#13782)"},{"Id":"984329610","IsPullRequest":true,"CreatedAt":"2021-09-02T18:18:50","Actor":"wli3","Number":"13781","RawContent":null,"Title":"Fix missing packaged shim after update","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13781","RelatedDescription":"Closed or merged PR \"Fix missing packaged shim after update\" (#13781)"},{"Id":"975739594","IsPullRequest":true,"CreatedAt":"2021-08-24T20:43:18","Actor":"dotnet-maestro-bot","Number":"13778","RawContent":null,"Title":"Update coresetup to servicing-30411-01 (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13778","RelatedDescription":"Closed or merged PR \"Update coresetup to servicing-30411-01 (release/2.1.8xx)\" (#13778)"},{"Id":"977358371","IsPullRequest":true,"CreatedAt":"2021-08-24T19:43:27","Actor":"crummel","Number":"13779","RawContent":null,"Title":"Merge internal commits for 2.1.526.","State":"closed","Body":"This is blocking the source-build 2.1.526 release.","Url":"https://github.com/dotnet/cli/pull/13779","RelatedDescription":"Closed or merged PR \"Merge internal commits for 2.1.526.\" (#13779)"},{"Id":"977406095","IsPullRequest":true,"CreatedAt":"2021-08-24T06:00:44","Actor":"wli3","Number":"13780","RawContent":null,"Title":"Remove macos leg","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13780","RelatedDescription":"Closed or merged PR \"Remove macos leg\" (#13780)"},{"Id":"975739498","IsPullRequest":true,"CreatedAt":"2021-08-23T09:37:06","Actor":"dotnet-maestro-bot","Number":"13777","RawContent":null,"Title":"Update coresetup to servicing-30411-01 (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13777","RelatedDescription":"Closed or merged PR \"Update coresetup to servicing-30411-01 (release/2.1.6xx)\" (#13777)"},{"Id":"969598189","IsPullRequest":true,"CreatedAt":"2021-08-19T22:22:38","Actor":"dotnet-maestro-bot","Number":"13776","RawContent":null,"Title":"Update coresetup to servicing-30323-03 (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13776","RelatedDescription":"Closed or merged PR \"Update coresetup to servicing-30323-03 (release/2.1.8xx)\" (#13776)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"1050457478","IsPullRequest":false,"CreatedAt":"2021-11-11T16:40:32","Actor":"Xyncgas","Number":"1797","RawContent":null,"Title":"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?","State":"closed","Body":"In the example :\r\n```\r\nPublic class ClassA{\r\n    string a = \"A2\";\r\n}\r\npublic class ClassB : ClassA{//ClassB derive from Class A\r\n    string b = \"2B\";\r\n}\r\nPublic ClassA TestSample()\r\n{\r\n    classB I_Have_A_Pen = new ClassB();\r\n    Return I_Have_A_Pen;\r\n}\r\nvoid Main()\r\n{\r\n    var I_Have_A_Pineapple = TestSample(); //Ref:{7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}\r\n}\r\n```\r\nSo, at {7ED6CC5A-15F9-49F7-A762-C8B3B0B7A7F2}, I have two questions :\r\nI_Have_A_Pineapple is now ClassA but does the standard say it's actually still ClassB or I_Have_A_Pineapple.GetType()==typeof(ClassB) ?\r\n\r\nI_Have_A_Pineapple now doesn't have access to string b which value is \"2B\", because it's casted to ClassA and 2B only existed as Class B member, so a while later would gc be collecting this reference and 2B is gone forever while it might only exist at this moment?","Url":"https://github.com/dotnet/standard/issues/1797","RelatedDescription":"Closed issue \"[question] Will Garbage Collector Collect Memebers, When Object Is Casted To Parent Type, That Is Now Inaccessible On The Type Of Reference?\" (#1797)"},{"Id":"1050222761","IsPullRequest":false,"CreatedAt":"2021-11-10T19:31:40","Actor":"Xyncgas","Number":"1796","RawContent":null,"Title":"[Feature Request] Allow Static Method In Interface","State":"open","Body":"Because in serialization workflow you usually call obj.export() or something, but when you are importing the object with custom business logic you don't do obj.import() --but usually--> typeof(object).import() which is a static method that returns an object.\r\n\r\nFailure in defining static method in interface makes it hard to implement a contract for me.","Url":"https://github.com/dotnet/standard/issues/1796","RelatedDescription":"Open issue \"[Feature Request] Allow Static Method In Interface\" (#1796)"},{"Id":"1046868954","IsPullRequest":false,"CreatedAt":"2021-11-07T22:40:15","Actor":"jacseychell","Number":"1795","RawContent":null,"Title":"w3wp.exe Faulting Application Exception Code 0xc0000409","State":"open","Body":"We are having an issue with our application when it is installed within an environment and it is displaying unusual behavior we have not experienced before. \r\n\r\nThe application will run successfully on initial load and successfully poll to an external site when someone is logged onto the server where the application is running from. But when you log off the server and let it poll on it's own, it will throw an application error, and the only information it provides is w3wp.exe Faulting Application Exception Code 0xc0000409. \r\n\r\nNo logs are logged by the application to say something has occurred, the application simply just stops it's process, then will restart it's polling at it's next scheduled time. And after it throws this fault once, it will continue to fault each round of polling. \r\n\r\nWe have taken the crash dumps from the process, and ran the dumps within DebugDiag but need some help decoding what might be faulting within the application / or environment to prevent the polling service from continuing. \r\n\r\nWe are also receiving an error from the ucrtbase.dll, but that is also not providing any additional information regarding what's faulting, see below \r\n \r\n![image](https://user-images.githubusercontent.com/55416852/140665385-978e6d01-a4b8-4175-9b92-d4b57e543aec.png)\r\n\r\n\r\nWe have tried:\r\n* Setting the application on its own app pool\r\n* Updated and installed the latest C++ Redistributables \r\n* Re-registering the urctbas.dll using Regsver32\r\n* Copy the OCX into SystWow64 folder \r\n* Updated the Windows 10 SDK to the latest version \r\n\r\nAttached is the debugdiag file that was generated from the crash dumps\r\n[MultipleDumps_MultipleRules.zip](https://github.com/dotnet/standard/files/7493398/MultipleDumps_MultipleRules.zip)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1795","RelatedDescription":"Open issue \"w3wp.exe Faulting Application Exception Code 0xc0000409\" (#1795)"},{"Id":"987085034","IsPullRequest":false,"CreatedAt":"2021-09-02T19:27:09","Actor":"Coder3333","Number":"1793","RawContent":null,"Title":"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken","State":"open","Body":"I also reported this issue at https://github.com/dotnet/runtime/issues/58583, in case that is a more appropriate place.\r\n\r\n\r\nI am witnessing this behavior in packages\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\netstandard.dll when running from a .Net Core 3.1 application.  \r\n\r\nWhen I call DbCommand.ExecuteReaderAsync with a CancellationToken and cancel it before it finishes, an exception is thrown that contains a TaskCanceledException buried down in the InnerExceptions.  I expect that behavior, but the issue is that the TaskCanceledException.CancellationToken is not the CancellationToken that I provided to ExecuteReaderAsync.  I do not know where this other CancellationToken is coming from, but I thought we were only supposed to suppress TaskCanceledException in our applications if it is for the provided CancellationToken, so I end up with a lot more unhandled exceptions than I want.  \r\n\r\nIs it safe to suppress any TaskCanceledException, no matter what CancellationToken it contains?  Where does this mystery CancellationToken come from, and could ExecuteReaderAsync just return the CancellationToken given to it?\r\n\r\n```c#\r\n                using (var cts = new CancellationTokenSource())\r\n                {\r\n                    using (var cmd = db.GetSqlStringCommand(queryString))\r\n                    {\r\n                        cts.Cancel();\r\n                        try\r\n                        {\r\n                            using (var rdr = cmd.ExecuteReaderAsync(cts.Token).Result)\r\n                            {\r\n                            }\r\n                        }\r\n                        catch (Exception ex3)\r\n                        {\r\n//  if you inspect ex3, you will find a TaskCanceledException buried in InnerExceptions, but its CancellationToken is not cts.Token\r\n                            throw;\r\n                        }\r\n                    }\r\n                }\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1793","RelatedDescription":"Open issue \"DbCommand.ExecuteReaderAsync throws TaskCanceledException with wrong CancellationToken\" (#1793)"},{"Id":"980465227","IsPullRequest":false,"CreatedAt":"2021-08-26T17:45:34","Actor":"petrosmm","Number":"1792","RawContent":null,"Title":"linq using GetValueOrDefault  in Where clause problem","State":"closed","Body":"Hello,\r\n\r\nI am currently using .NET core 2.2.x and EF Core. 2.2.6. I have a function that returns a List<Animal> from the database with no issue. It returns 11 results. However, when I try to use `.Where(p => p.DeletedAt.GetValueOrDefault(DateTime.Now) => DateTime.Now).ToList()`, it still should return 11 results, however it returns 0. I also eliminated the possibility that there is something wrong with my where clause (logic) because it works perfectly on 4.6.1 EF Core 2.2.6. Furthermore, I confirmed that it is only where I am comparing a nullable type using that function and I am guessing that I missed a thread someone opened on this issue. I am aware .NET core 2.2 is not LTS. I also thought this goes here because it's not AFAIK, an EF core issue but rather an Ienumerable/Linq issue.\r\n\r\nUpdate: As it turns out your notion of `DateTime.Now` getting evaluated twice is true. To rectify that, I will now be using `DateTime.Now.Date`. This is odd because this exact code works on 4.6.1. You're probably right. SMH. Thank you @GrabYourPitchforks! You may now close.","Url":"https://github.com/dotnet/standard/issues/1792","RelatedDescription":"Closed issue \"linq using GetValueOrDefault  in Where clause problem\" (#1792)"},{"Id":"894396747","IsPullRequest":false,"CreatedAt":"2021-07-28T22:25:27","Actor":"SiberaIndustries","Number":"1789","RawContent":null,"Title":"Strong name signature not valid","State":"closed","Body":"Since I've ported a ClickOnce application from .NET Framework 4.6.1 to .NET Standard 2.0, the message _\"Strong assembly name signature not valid for **Microsoft.SqlServer.Assessment.Types.dll**\"_ appears when trying to install or update the application. So the next step was to verify the assembly strong name by using the [Strong Name Tool](https://docs.microsoft.com/dotnet/framework/tools/sn-exe-strong-name-tool) to make sure, that everything is fine, but:\r\n\r\n```sh\r\n> sn.exe -v Microsoft.SqlServer.Assessment.Types.dll\r\n\r\nMicrosoft (R) .NET Framework Strong Name Utility Version 4.0.30319.0\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nMicrosoft.SqlServer.Assessment.Types.dll is a delay-signed or test-signed assembly\r\n```\r\n\r\nAdditional information:\r\n\r\n- The assembly versions `161.46041.41` and `161.46367.54` ended up in the same result\r\n- This issue looks very similar to [this](https://www.damirscorner.com/blog/posts/20140502-StrongNameValidationFailedSecurityException.html)\r\n- @markingmyname / @olprod: The root package, which is required for [Server Management Objects (SMOs)](https://docs.microsoft.com/sql/relational-databases/server-management-objects-smo/overview-smo?view=sql-server-ver15), is:\r\n  - [Microsoft.SqlServer.SqlManagementObjects](https://www.nuget.org/packages/Microsoft.SqlServer.SqlManagementObjects)\r\n    - Microsoft.SqlServer.Assessment\r\n      - Microsoft.SqlServer.Assessment.Authoring\r\n        - **Microsoft.SqlServer.Assessment.Types.dll**\r\n- This issue appears on windows server machines but the software runs on different machines and I would like to avoid temporary workarounds such as editing the registry and activate the strong name bypass feature because of the forced validation on windows server machines","Url":"https://github.com/dotnet/standard/issues/1789","RelatedDescription":"Closed issue \"Strong name signature not valid\" (#1789)"},{"Id":"950167090","IsPullRequest":false,"CreatedAt":"2021-07-21T22:53:44","Actor":"ericstj","Number":"1791","RawContent":null,"Title":"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy","State":"open","Body":"Create a new `netstandard2.1` library.\r\nAdd a reference to `<PackageReference Include=\"System.Reflection.DispatchProxy\" Version=\"4.7.1\" />`\r\nTry to use `DispatchProxy`\r\n\r\nExpected: \r\n`DispatchProxy` is resolved from `netstandard.dll`\r\n\r\nActual:\r\n```\r\nerror CS0433: The type 'DispatchProxy' exists in both 'System.Reflection.DispatchProxy, Version=4.0.6.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n```\r\n\r\n\r\nBuild contains conflict message:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' and 'Runtime:C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\System.Reflection.DispatchProxy.dll'. Choosing 'CopyLocal:C:\\src\\dotnet\\runtime\\artifacts\\bin\\testPackages\\cache\\system.reflection.dispatchproxy\\4.7.1\\lib\\netstandard2.0\\System.Reflection.DispatchProxy.dll' because AssemblyVersion '4.0.6.0' is greater than '4.0.5.0'.\r\n```\r\n\r\nOther shims avoid this by setting the AssemblyVersion higher than that which was previously shipped.","Url":"https://github.com/dotnet/standard/issues/1791","RelatedDescription":"Open issue \"Assembly version for DispatchProxy shim is too low resulting in duplicate types for DispatchProxy\" (#1791)"},{"Id":"918918189","IsPullRequest":false,"CreatedAt":"2021-06-11T15:52:19","Actor":"andy1547","Number":"1790","RawContent":null,"Title":"Provide DbProviderFactories as NuGet Package for .NET Standard 2.0","State":"open","Body":"We're beginning the adventure of migrating a large .NET Framework 4.7.2 application (200+ projects) to .NET 5. The plan is to migrate as many projects as possible to .NET Standard 2.0 before jumping to .NET 5.\r\n\r\nA large quantity of our utility projects make an indirect reference to `DbProviderFactories` for fetching a database factory, \r\nunfortunately this class isn't available in .NET Standard 2.0. I understand that it was added in .NET Standard 2.1 with some additional programmatic methods for registering providers (as there was no equivalent of the machine.config provider configuration in .NET Core).\r\n\r\nWe could potentially migrate to the same consumption pattern as .NET Core, having the ability to register providers programmatically with `DbProviderFactories.RegisterFactory(string providerInvariantName, string factoryTypeAssemblyQualifiedName)` in .NET Framework projects. Any providers declared in machine.config / app.config would be ignored (only the programmatic registration would apply). \r\n\r\nIs there a workaround while we migrate our application to .NET 5?\r\n","Url":"https://github.com/dotnet/standard/issues/1790","RelatedDescription":"Open issue \"Provide DbProviderFactories as NuGet Package for .NET Standard 2.0\" (#1790)"},{"Id":"852541719","IsPullRequest":false,"CreatedAt":"2021-04-07T15:50:35","Actor":"vsfeedback","Number":"1788","RawContent":null,"Title":"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Class-ValueTask-has-different-definition/1384249)._\n\n---\nClass ValueTask has different definitions between .Net Standard 2.1 and .Net 5: \nstatic property ValueTask.CompletedTask and static methods ValueTask.FromResult, ValueTask.FromCanceled and ValueTask.FromException are not available in .Net Standard 2.1.\n\nRegards,\nPaco.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 10:45 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/standard/issues/1788","RelatedDescription":"Closed issue \"Class ValueTask has different definitions between .Net Standard 2.1 and .Net 5\" (#1788)"},{"Id":"841566004","IsPullRequest":false,"CreatedAt":"2021-03-26T03:55:14","Actor":"rexcfnghk","Number":"1787","RawContent":null,"Title":"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1","State":"open","Body":"# Summary\r\n\r\n.NET Standard version is not resolved correctly when a transitive dependency targets multiple .NET Standard versions.\r\n\r\n# Environment\r\n\r\n- Windows 10 (19042.746)\r\n- .NET 5 SDK 5.0.201\r\n\r\n# Minimal reproducible example\r\n[bug.zip](https://github.com/dotnet/standard/files/6209239/bug.zip)\r\n\r\nThis is a three-project solution:\r\n- `TestProject1` targeting `netcoreapp3.1`\r\n- `ClassProject1` targeting `netstandard2.0`\r\n- `ClassProject2` targeting *both* `netstandard2.0` and `netstandard2.1`\r\n\r\nThe project dependency chain is: `TestProject1 -> ClassProject1 -> ClassProject2`\r\n\r\nA method (`ClassProject2Test1`) on `ClassProject2` is hidden behind a `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n# The issue\r\n\r\nThe unit test failed with a `MissingMethodException`\r\n\r\n```\r\n[xUnit.net 00:00:00.38]     TestProject1.UnitTest1.Test1 [FAIL]\r\n  Failed TestProject1.UnitTest1.Test1 [2 ms]\r\n  Error Message:\r\n   System.MissingMethodException : Method not found: 'Void ClassLibrary2.Class2.Class2Test1()'.\r\n  Stack Trace:\r\n     at ClassLibrary1.Class1.Class1Test1()\r\n   at TestProject1.UnitTest1.Test1() in C:\\Users\\rex\\source\\netstandard-bug-repro\\TestProject1\\UnitTest1.cs:line 12\r\n```\r\n\r\n# Expected result\r\n\r\nThe compiler should have resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.0)*` \r\n\r\n# Actual result\r\n\r\nThe compiler resolved the chain as:\r\n\r\n`TestProject1 (.NET Core 3.1) -> ClassProject1 (.NET Standard 2.0) -> *ClassProject2 (.NET Standard 2.1)*` \r\n\r\nWhich causes the exception because the offending method, `ClassProject2Test1`, was hidden by the `#if NETSTANDARD2_0` preprocessor directive.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1787","RelatedDescription":"Open issue \"Issue with resolving between .NET Standard 2.0 and .NET Standard 2.1\" (#1787)"},{"Id":"773128444","IsPullRequest":false,"CreatedAt":"2020-12-22T17:42:11","Actor":"rathnagiri","Number":"1786","RawContent":null,"Title":"Security Vulnerability due to System.Text.RegularExpressions","State":"open","Body":"### Problem\r\nThere is a security vulnerability with the version of System.Text.RegularExpressions that is used by dotnet standard. The vulnerable version of System.Text.RegularExpressions is 4.3.0. Please see links below for the vulnerability documentation or discussion:\r\n\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-0820\r\nhttps://github.com/dotnet/announcements/issues/111\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820\r\nhttps://snyk.io/vuln/SNYK-DOTNET-SYSTEMTEXTREGULAREXPRESSIONS-174708\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2019-0820\r\n\r\nThe dotnet commit that fixed the vulnerability is https://github.com/dotnet/corefx/commit/19d4b1163d8a03dd90ff5fd1785eea6305112545\r\n\r\n### Issue:\r\nWe use whitesource and it has caught this issue with high severity. We don't consume System.Text.RegularExpressions directly but packages that use this. Therefore as a transitive dependency due to NetStandard library, which is being used by several other dotnet packages like Castle Windsor, MassTransit etc., Once an update is available the others could followup and update.\r\n\r\n### Code:\r\n\r\n[The latest version 2.0.3 of Net standard ](https://www.nuget.org/packages/NETStandard.Library/) still seem to be using System.Text.RegularExpressions version 4.3.0 as per https://github.com/dotnet/standard/blob/master/src/apicompat/netstandard/netstandard.depproj\r\n\r\n### Fix\r\nPlease update[ library](https://www.nuget.org/packages/NETStandard.Library/) targeting .netStandard 1.6 to update System.Text.RegularExpression package to latest secured version 4.3.1 to fix the security issue or kindly suggest alternatives.\r\n","Url":"https://github.com/dotnet/standard/issues/1786","RelatedDescription":"Open issue \"Security Vulnerability due to System.Text.RegularExpressions\" (#1786)"},{"Id":"761600986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:17:30","Actor":"tmds","Number":"1785","RawContent":null,"Title":"mono and .NET5+","State":"closed","Body":"hi @migueldeicaza @terrajobst \r\n\r\nWill there be a version of mono that supports `net5.0`?\r\nOr is mono skipping `net5.0`, and is it a goal to support `net6.0`?","Url":"https://github.com/dotnet/standard/issues/1785","RelatedDescription":"Closed issue \"mono and .NET5+\" (#1785)"},{"Id":"757516698","IsPullRequest":false,"CreatedAt":"2020-12-05T02:37:36","Actor":"Nilotaviano","Number":"1784","RawContent":null,"Title":"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()","State":"open","Body":"The code below works perfectly on Windows, but doesn't work when deployed on Ubuntu 16.10. The `configuration` is initially loaded, but is never reloaded afterwards when `appsettings.json` is modified on Ubuntu (it works on Windows and I get to see the `App Settings reloaded` log message).\r\n\r\n```\r\nprivate static AppSettings GetAppSettings()\r\n{\r\n    var configuration = new ConfigurationBuilder()\r\n        .AddJsonFile(Path.Combine(System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName, \"..\", \"appsettings.json\"), optional: false, reloadOnChange: true)\r\n        .Build();\r\n\r\n    ChangeToken.OnChange(() => configuration.GetReloadToken(), () =>\r\n    {\r\n        Logger.LogMessage(\"App Settings reloaded\");\r\n    });\r\n\r\n    return appSettings;\r\n}\r\n```\r\n\r\n.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;ubuntu.16.10-x64</RuntimeIdentifiers>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNet.SignalR.Client\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"RestSharp\" Version=\"106.11.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nPublish profile:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\nhttps://go.microsoft.com/fwlink/?LinkID=208121. \r\n-->\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <Configuration>Release</Configuration>\r\n    <Platform>Any CPU</Platform>\r\n    <PublishDir>bin\\Release\\netcoreapp3.1\\publish\\</PublishDir>\r\n    <PublishProtocol>FileSystem</PublishProtocol>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <RuntimeIdentifier>ubuntu.16.10-x64</RuntimeIdentifier>\r\n    <SelfContained>true</SelfContained>\r\n    <PublishSingleFile>True</PublishSingleFile>\r\n    <PublishTrimmed>True</PublishTrimmed>\r\n  </PropertyGroup>\r\n</Project>\r\n```","Url":"https://github.com/dotnet/standard/issues/1784","RelatedDescription":"Open issue \"ChangeToken.OnChange consumer callback isn't being triggered on Ubuntu when used in conjunction with IConfiguration.GetReloadToken()\" (#1784)"},{"Id":"751999481","IsPullRequest":false,"CreatedAt":"2020-11-27T05:51:08","Actor":"Meenakshise","Number":"1783","RawContent":null,"Title":"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, ","State":"open","Body":"[tuple-not-loading-log.txt](https://github.com/dotnet/standard/files/5606091/tuple-not-loading-log.txt)\r\n\r\nI have  web project which is targeted to 4.6.2 .net framework. This project is calling a framework library which is targeted to the same .net framework 4.6.2. But in the framework library project it is referencing the system.valuetuple of 4.3.0 via the nuget package. \r\n  <package id=\"System.ValueTuple\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n\r\nThis valuetuple 4.3.0 targets .net standard 1.0 and .net framework 4.5. But our UI project is targeting 4.6.2. And we are getting this valuetuple not able to load. Could you please tell me why so ? \r\n\r\nSo if i am referencing a library that targets .net standard and .net framework of which the referencing project doesnt target to . How does the dll assemblies work here ? Really confused. Please help us\r\n\r\nBasically I am getting this error. The detailed log is attached in tuple-not-loading file. \r\n_message: \"ReflectionTypeLoadException: Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\n VS 2017 IDE is used to build the project ","Url":"https://github.com/dotnet/standard/issues/1783","RelatedDescription":"Open issue \"Value Tuple Could not load file or assembly 'System.ValueTuple, Version=4.0.1.0, \" (#1783)"},{"Id":"748223490","IsPullRequest":false,"CreatedAt":"2020-11-22T11:34:20","Actor":"kyurkchyan","Number":"1782","RawContent":null,"Title":"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP","State":"open","Body":"# Summary\r\nI was trying to access Embedded resources on UWP. Something like this\r\n\r\n```C#\r\nmanifestResourceInfo = typeof(App).Assembly.GetManifestResourceInfo(\"UwpEmbeddedResourceBug.appsettings.json\");\r\n```\r\nHowever, this doesn't work on UWP, even though it works like a charm on iOS for instance. \r\nFurther, when you try to use this in UWP debug mode, it will return non-null `manifestResourceInfo`, however internally the `FileName` property will be null. But if you try to use the same on Release build, instead you will get an exception\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Func`1.BeginInvoke(AsyncCallback, Object) + 0x1f\r\n   at SharedLibrary!<BaseAddress>+0x9f17d7\r\n   at UwpEmbeddedResourceBug.MainPage..ctor() + 0x3e\r\n```\r\n## Sample project\r\n[UwpEmbeddedResourceBug.zip](https://github.com/dotnet/standard/files/5579379/UwpEmbeddedResourceBug.zip)\r\n\r\n## Version info\r\n``` \r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.1\r\nVisualStudio.16.Release/16.8.1+30711.63\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA497\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.550.19892\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.550.19892\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.550.19892\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.550.19892\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJetBrains ReSharper 2020.2.4   Build 202.0.20200925.65451\r\nJetBrains ReSharper package for Microsoft Visual Studio. For more information about ReSharper, visit http://www.jetbrains.com/resharper. Copyright © 2020 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20519.18+4c195c3ac1974edcefa76774d7a59a2350ec55fa\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Foo   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.8.000.255 (d16-8@d002176)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.4.1.3 (e30c41de3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```","Url":"https://github.com/dotnet/standard/issues/1782","RelatedDescription":"Open issue \"[BUG] [UWP] GetManifestResourceInfo doesn't work on UWP\" (#1782)"},{"Id":"741918893","IsPullRequest":false,"CreatedAt":"2020-11-16T21:03:55","Actor":"viralmodi","Number":"1780","RawContent":null,"Title":"How to build .NET Standard based library for ARM architecture","State":"closed","Body":"We currently own a .NET Standard based library. We would like to make it work on ARM platform as well. Is there some documentation which can help understand how to go about achieving that?\r\nI searched up on MSFT docs and found a few pages but it is not clear to me all the steps needed to achieve the above based on those docs. Any help is appreciated. I would like to know ways to compile cross platform, using IDEs like Visual Studio/Rider, code/metadata modifications required to project (.csproj) files and anywhere else to achieve this?","Url":"https://github.com/dotnet/standard/issues/1780","RelatedDescription":"Closed issue \"How to build .NET Standard based library for ARM architecture\" (#1780)"},{"Id":"743421464","IsPullRequest":false,"CreatedAt":"2020-11-16T02:36:27","Actor":"ishepherd","Number":"1781","RawContent":null,"Title":"Update docs to reflect the status of .NET Standard in 2020","State":"open","Body":"My understanding is, .NET Standard isn't the plan for standard .NET anymore. [The plan is now .NET 5.](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/)\r\n\r\nThat isn't at all clear from the docs here which seem to be frozen in time. Suggest you make some slight edits to [faq.md](https://github.com/dotnet/standard/blob/master/docs/faq.md) and [README.md](https://github.com/dotnet/standard/blob/master/README.md) to reflect the new status of .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1781","RelatedDescription":"Open issue \"Update docs to reflect the status of .NET Standard in 2020\" (#1781)"},{"Id":"741314211","IsPullRequest":false,"CreatedAt":"2020-11-12T06:18:45","Actor":"amitagrawalhyd","Number":"1779","RawContent":null,"Title":"Support with Universal Windows Platform","State":"open","Body":".Net Standard 2.1 is not supporting Universal Windows Platform and when we see the following doc \"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\" it is showing TBD, need your help on finalizing few things for our project, by when we can see support with UWP and which version of UWP will be supported. Early response will be helpful.","Url":"https://github.com/dotnet/standard/issues/1779","RelatedDescription":"Open issue \"Support with Universal Windows Platform\" (#1779)"},{"Id":"736344890","IsPullRequest":false,"CreatedAt":"2020-11-04T18:49:53","Actor":"vsfeedback","Number":"1778","RawContent":null,"Title":"System.Drawing.Printing.PrinterSettings slow","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemDrawingPrintingPrinterSettings-/890524)._\n\n---\nHello\n\nI'm debugging a problem with the printer settings. Some calls are significant slower if the default printer is a network printer, even if I explicit set a local printer name.\n\nAfter studying referencesource I think I found the culprit.\n\nI call:\n\nvar printerSettings = new System.Drawing.Printing.PrinterSettings();\n\nprinterSettings.PrinterName = &quot;LOCALPRINTER&quot;;\n\n// the next call is slow if the OS default printer is a network printer\nvar res = printerSettings.DefaultPageSettings.PrinterResolution\n\nInternally FastDeviceCapabilities is called.\n\nFastDeviceCapabilities calls GetOutputPort. But GetOutput port return the port of the default printer and not the port of the given printer!\n\nIn addition, DeviceCapabilities is then called with a wrong combination of printer name and port, don't know if this could lead to additional problems.\n\nResolution: GetOutputPort should return the port of the given printer and not accessing the default printer at all.\n\nBest Regards,\nRaphael\n\n---\n### Original Comments\n\n#### Raphael Affolter on 1/20/2020, 04:03 AM: \n\n<p>I forgot to mention: .Net Framework 4.6.1</p>\n\n#### Feedback Bot on 1/20/2020, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Raphael Affolter on 2/7/2020, 08:39 AM: \n\n<p>Because we print a lot, we really suffer from this performance penalty.</p><p>Also reading PaperSizes and PaperSources from the printer settings is slow caused by the same problem.</p><p>Could you please inform me about a possible fix?</p><p>Best Regards,</p><p>Raphael</p>\n\n#### Raphael Affolter on 2/7/2020, 10:33 AM: \n\n<p>In my opinion the fix is easy: replace GetOutputPort by OutputPort in the call to </p><p>FastDeviceCapabilities.</p><p>Done.</p>\n\n#### Feedback Bot on 2/27/2020, 05:40 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Dada Huo [MSFT] on 10/20/2020, 01:57 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Raphael Affolter on 10/20/2020, 02:28 AM: \n\n<p>Thanks for answering.</p><p>The issue is not about Visual Studio, the problem is in the .Net Framework (at least 4.6.1).</p><p>By studying the source code on referencesource.microsoft.com I spotted calls to the default printer, even if I print on another printer. If the default printer is a network printer, this slows down the printing process significantly.</p><p>Please have a look if you can fix this in the .Net Framework(s).</p><p>PrinterResolution, PaperSizes and PaperSources of System.Drawing.Printing.PrinterSettings are affected.</p><p>I also mentioned a fix: replace GetOutputPort by OutputPort in the call to FastDeviceCapabilities...done.</p><p>I you need a repro project, I can provide one.</p>\n\n\n---\n### Original Solutions\n\n#### Raphael Affolter solved on 3/19/2020, 07:18 AM, 0 votes: \n\n<p>I would be helpful if at least somebody reacts on this issue. I even told you how to fix the problem...</p>\n","Url":"https://github.com/dotnet/standard/issues/1778","RelatedDescription":"Closed issue \"System.Drawing.Printing.PrinterSettings slow\" (#1778)"},{"Id":"727588709","IsPullRequest":false,"CreatedAt":"2020-10-22T17:34:59","Actor":"Joe-Sewell-PreEmptive","Number":"1777","RawContent":null,"Title":"Questions about tagging within this repository / future versions","State":"open","Body":"I was looking through this repository to determine if .NET Standard 2.1 libraries support default interface methods - it looks like they do, given the presence of `System.Runtime.CompilerServices.RuntimeFeature.DefaultImplementationsOfInterfaces`, as well as my own experimenting in VS 2019. It seems I was mistaken when thinking that this was not the case, so I'm glad this repository is easily accessible to determine this.\r\n\r\nBut while doing this, I found it difficult to determine what commits were included in this particular .NET Standard version. I see that there's a tag `v2.1.0-prerelease.19126.1`, as well as branches `release/2.0.0`, `release/3.0`, and `release/3.0-preview9`. One of the machines I tested VS 2019 on had a `netstandard.dll` assembly, itself targeting .NETStandard v2.1.0, with AssemblyInformationalVersion `1.1.0+a5b5f2e1e369972c8ff1e2183979fab6099f52ef`; this commit is part of the `release/3.0` branch. However, another machine had a same-named assembly, targeting .NETCoreApp v3.0 and AssemblyInformationalVersion `3.0.0+4ac4c0367003fe3973a3648eb0715ddb0e3bbcea`, and I don't see that commit hash in this repository.\r\n\r\nAdditionally, [this blog post](https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/) states that 2.1 will be the last version, but there is another prerelease tag `v2.2.0-prerelease.19564.1` and [on GitHub](https://github.com/dotnet/standard/releases/tag/v2.2.0-prerelease.19564.1) it's labelled .NET 5.0 Preview 2.\r\n\r\nSo I have a few questions for understanding this repository:\r\n\r\n1. Since .NET Standard 2.1 is released, are there plans to continue development in this repository for e.g. the shared BCL going forward with .NET 5+?\r\n2. Are there multiple kinds of `netstandard.dll` for a single .NET Standard version? E.g. are there separate versions for .NET Framework to reference and for .NET Core / .NET 5+ to reference?\r\n3. Do the tags / branch names in this repository correspond to a .NET Standard version or something else?\r\n4. It looks like there are patch releases; are there patch versions of a single .NET Standard version?\r\n5. Are there other repositories which are being used to create `netstandard.dll`?\r\n6. Is there a way to determine, from the repository, which commit is the one used for a given release?\r\n\r\nThank you for your consideration.","Url":"https://github.com/dotnet/standard/issues/1777","RelatedDescription":"Open issue \"Questions about tagging within this repository / future versions\" (#1777)"},{"Id":"722134943","IsPullRequest":false,"CreatedAt":"2020-10-16T08:15:08","Actor":"AksTheNerd","Number":"1776","RawContent":null,"Title":"Build issues when referencing project that targets multiple frameworks C# WPF","State":"closed","Body":"I'm working on converting a large WPF solution's projects to SDK style and ran into some issues.\r\n\r\nThe solution is large with multiple projects(old style) all targeting .net452 and some nugets(some made by me) installed, targeting both .net452 and .netstandard2.1 This all seems to work fine, somehow the nuget manages to install the correct version targeting .net452.\r\n\r\nI have decided to slowly convert the projects inside the solution to SDK style targeting .net452 and .netstandard2.1 just like the nugets.\r\n\r\nThis is where the problem starts, one project was converted so far that is referenced by multiple other projects. Localy everything seems to build and run fine, however when Azure DevOps(VS version 2019) is used to build the solution there are 2 scenarios:\r\n\r\n1. The famous error message is shown:\r\n\r\n                \"Error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly \r\n                 'netstandard, Version=2.1.0.0\"\r\n\r\n2. It builds fine but on app launch it crashes with:\r\n\r\n                 \"Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' \r\n                 or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nI'm suspecting that the problem is related to referencing the SDK project, it looks like that somehow it references the .netstandard2.1 instead of the .net452.\r\n\r\nThe reason this is my suspicion is that if targetframework is set to only .net452 on the referenced project everything works fine. Google has led me to two possible solutions to tell the project what framework to use from the reference:\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\"\r\n                  AdditionalProperties=\"TargetFramework=net452\">\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nand\r\n\r\n```\r\n<ProjectReference Include=\"..\\..\\..\\..\\foo\\foo.csproj\">\r\n      <SetTargetFramework>TargetFramework=net452</SetTargetFramework>\r\n      <Project>{xxxxxx-xxxxxx-xxxxx-xxxxx-xxxxxxx}</Project>\r\n      <<Name>foo</Name>\r\n</ProjectReference>\r\n```\r\nThis doesn't look like it's doing anything and the problem still persists. At the moment I ran out of ideas and I'm here asking for help. Please let me know what I'm doing wrong or what else I can try.","Url":"https://github.com/dotnet/standard/issues/1776","RelatedDescription":"Closed issue \"Build issues when referencing project that targets multiple frameworks C# WPF\" (#1776)"},{"Id":"705166145","IsPullRequest":false,"CreatedAt":"2020-09-20T19:05:41","Actor":"Korporal","Number":"1775","RawContent":null,"Title":"Confusing behavior when using AssemblyInfo.cs ","State":"open","Body":"I'm completely perplexed.\r\n\r\nI created a .Net Standard 2.0 library project.\r\n\r\nI explicity added an AssemblyInfo.cs file, we need this because we use this utility to \"stamp\" our assemblies when we build them:\r\n\r\nhttps://github.com/ygoe/NetRevisionTool\r\n\r\nThat utility is run as a pre/post build event and temporarily replaces placeholders in the AssemblyInformationalVersion attribute with runtime values (like repo folder name, commit ID, branch etc etc).\r\n\r\nThe completed assembly then has this info \"burned\" into it as we go forward.\r\n\r\n.Net Standard is not working with this.\r\n\r\n1. It seems to populatethe Package Version (in the project's Package section) with whatever we put into AssemblyInfo.cs for AssemblyInformationalVersion.\r\n2. The version of the generated nuget package is always set as 1.0.0.\r\n\r\nThis is just mind blowing, is there no way we can do this seemingly simple operation any more if adopt .Net Standard?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1775","RelatedDescription":"Open issue \"Confusing behavior when using AssemblyInfo.cs \" (#1775)"},{"Id":"702426498","IsPullRequest":false,"CreatedAt":"2020-09-16T06:07:11","Actor":"billvenhaus","Number":"1774","RawContent":null,"Title":"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC","State":"closed","Body":"Just recently I found that my UWP app can no longer connect with Digest authentication on Windows 10 PCs. I'm seeing the same issue this individual posted the other day on the Microsoft Docs website.\r\nhttps://docs.microsoft.com/en-us/answers/questions/93105/httpclienthandler-does-not-work-for-authentication.html\r\n\r\nThe same code works fine on my Android, iOS, & Windows 10 Mobile devices. To take it a step further, the exact same UWP appxbundle that works on my Windows 10 Mobile Phone, does not work on my Windows 10 PC.\r\n\r\nThis is specific to only the UWP HttpClientHandler. On my Windows 10 PC, the HttpClientHandler in .NET Framework 4.8 still works fine.\r\n\r\nLike I said, this is a new issue. The System.Net.Http.HttpClientHandler on UWP definitely did support Digest up until about a week ago.\r\n\r\nMy appxbundle was built with Target version 10.0.17134, Min version 10.0.15063.\r\n\r\nI also tested with the latest & the problem still persists; Target version 10.0.18362, Min version 10.0.18362.\r\n\r\nDOES NOT WORK\r\n-------------------\r\nUWP on Windows 10 Pro 2004 19041.508\r\n\r\nWORKS\r\n--------\r\nUWP on Windows 10 Mobile 1709 10.0.15254.556\r\n.NET Framework 4.8 on Windows 10 Pro 2004 19041.508\r\nAndroid\r\niOS\r\n\r\n\r\nHere's the return response I get:\r\n\r\n{StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\r\n{\r\n  Server: lighttpd/1.4.35\r\n  Date: Wed, 16 Sep 2020 03:38:24 GMT\r\n  WWW-Authenticate: Digest realm=\"iPolis_00:16:6C:7A:A3:80\", nonce=\"e2f7fe3344e6b521c2b83c56aa48fc17\", qop=\"auth\"\r\n  Content-Length: 351\r\n  Content-Type: text/html\r\n}}\r\n","Url":"https://github.com/dotnet/standard/issues/1774","RelatedDescription":"Closed issue \"[UWP] HttpClientHandler - Digest Authentication Broken on Windows 10 PC\" (#1774)"},{"Id":"690833525","IsPullRequest":false,"CreatedAt":"2020-09-02T08:39:21","Actor":"kongnhin","Number":"1773","RawContent":null,"Title":"DispatchOperation.ParameterInspectors is not available in netstandard2.0","State":"open","Body":"I created a class that implement from IOperationBehavior, in the method ApplyDispatchBehavior I cannot use dispatchOperation.ParameterInspectors, it's telling that this collection is not available in netstandard2.0.\r\nI have no idea about this, can someone advice me? If there are no solution for this, I think I need to downgrade to use .net framework instead.\r\n![image](https://user-images.githubusercontent.com/10347829/91959103-6660f780-ed32-11ea-9a7e-15a5482e7b71.png)\r\n","Url":"https://github.com/dotnet/standard/issues/1773","RelatedDescription":"Open issue \"DispatchOperation.ParameterInspectors is not available in netstandard2.0\" (#1773)"},{"Id":"637700672","IsPullRequest":true,"CreatedAt":"2020-08-23T14:50:16","Actor":"dotnet-maestro[bot]","Number":"1766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200819.21\r\n- **Date Produced**: 8/19/2020 11:31 PM\r\n- **Commit**: 56a95cc477558c1ccdf16d7abe962849ea970ba4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20419.21\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1766","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1766)"},{"Id":"676597548","IsPullRequest":false,"CreatedAt":"2020-08-11T16:13:40","Actor":"snakorse","Number":"1772","RawContent":null,"Title":"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib","State":"closed","Body":"I can't find the TypeForward definition for ICloneable in the facade lib System.Runtime.dll, does this is missing and should add it, or not include for some particular reason?","Url":"https://github.com/dotnet/standard/issues/1772","RelatedDescription":"Closed issue \"Facade lib 'System.Runtime.dll' in .Net Framework 4.7.2 do not forward ICloneable type to mscorelib\" (#1772)"},{"Id":"674703614","IsPullRequest":false,"CreatedAt":"2020-08-07T02:04:45","Actor":"gregpakes","Number":"1771","RawContent":null,"Title":"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8","State":"open","Body":"I am having an issue referencing packages that target .NetStandard 2.0 from my webSITE (not application) project which targets .Net 4.8.\r\n\r\nI see the following error:\r\n\r\n\r\n> warning MSB3268: The primary reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.8\". To resolve this problem, either remove the reference \"D:\\a\\1\\s\\iSAMS.Web.Controls\\bin\\Release\\net48\\iSAMS.Web.Controls.dll\" or retarget your application to a framework version which contains \"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".\r\n\r\n\r\nI have already added an assembly reference to the web.config as follows but it doesn't work:\r\n\r\n```\r\n<assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n....\r\n```\r\n\r\nWhat am I doing wrong?\r\n","Url":"https://github.com/dotnet/standard/issues/1771","RelatedDescription":"Open issue \"Referencing netstandard 2.0 from WebSITE targeting .Net 4.8\" (#1771)"},{"Id":"659921624","IsPullRequest":false,"CreatedAt":"2020-07-18T05:12:47","Actor":"alexkeh","Number":"1769","RawContent":null,"Title":"Add the TCP KeepAlive APIs to .NET Standard","State":"open","Body":"These 3 options are not in .netstandard 2.1 right now, do you have a plan to add them into netstandard?\r\n- TcpKeepAliveInterval\r\n- TcpKeepAliveRetryCount\r\n- TcpKeepAliveCount\r\n\r\n_Originally posted by @kerryjiang in https://github.com/dotnet/runtime/issues/24041#issuecomment-554154891_","Url":"https://github.com/dotnet/standard/issues/1769","RelatedDescription":"Open issue \"Add the TCP KeepAlive APIs to .NET Standard\" (#1769)"},{"Id":"638861635","IsPullRequest":false,"CreatedAt":"2020-06-15T13:38:04","Actor":"Pentadome","Number":"1768","RawContent":null,"Title":"AllowNullAttribute missing for EqualityComparer<T>.Equals","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1768","RelatedDescription":"Open issue \"AllowNullAttribute missing for EqualityComparer<T>.Equals\" (#1768)"},{"Id":"638622538","IsPullRequest":false,"CreatedAt":"2020-06-15T07:45:29","Actor":"Pentadome","Number":"1767","RawContent":null,"Title":"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1","State":"open","Body":"See title ;)","Url":"https://github.com/dotnet/standard/issues/1767","RelatedDescription":"Open issue \"Nullable attributes have XML comments in .net core, but are missing in .Net standard 2.1\" (#1767)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"1048884703","IsPullRequest":true,"CreatedAt":"2021-11-10T18:35:28","Actor":"vseanreesermsft","Number":"43123","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43123","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43123)"},{"Id":"1045242089","IsPullRequest":true,"CreatedAt":"2021-11-08T17:18:20","Actor":"dotnet-maestro[bot]","Number":"43122","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20211102.6\r\n- **Date Produced**: November 2, 2021 4:44:09 PM UTC\r\n- **Commit**: afb79612f8e0b62603d9c1a614d7e4cf3f54a1e7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21427.4 to 2.4.1-beta.21552.6][1]\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: [from 2.5.1-beta.21427.4 to 2.5.1-beta.21552.6][1]\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21427.4 to 2.2.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.CoreFxTesting**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21427.4 to 2.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21427.4 to 1.0.0-beta.21552.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/98e2fba...afb7961\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43122","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#43122)"},{"Id":"1032458493","IsPullRequest":true,"CreatedAt":"2021-11-08T17:17:50","Actor":"ManickaP","Number":"43117","RawContent":null,"Title":"[release/3.1] Fix linux pipeline","State":"closed","Body":"Getting this error when building the internal pipeline:\r\n```\r\n[warning]An image label with the label Ubuntu16 does not exist.\r\n```\r\n\r\nThis is an attempt to fix this, based on @safern suggestion.","Url":"https://github.com/dotnet/corefx/pull/43117","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix linux pipeline\" (#43117)"},{"Id":"1042679359","IsPullRequest":true,"CreatedAt":"2021-11-05T19:36:49","Actor":"vseanreesermsft","Number":"43118","RawContent":null,"Title":"Update branding for 3.1.22","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43118","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.22\" (#43118)"},{"Id":"1044151430","IsPullRequest":true,"CreatedAt":"2021-11-04T16:51:15","Actor":"safern","Number":"43120","RawContent":null,"Title":"Disable PenTests on Windows","State":"closed","Body":"cc: @Anipik ","Url":"https://github.com/dotnet/corefx/pull/43120","RelatedDescription":"Closed or merged PR \"Disable PenTests on Windows\" (#43120)"},{"Id":"1044276148","IsPullRequest":true,"CreatedAt":"2021-11-04T04:01:04","Actor":"jorgeluisrdz16","Number":"43121","RawContent":null,"Title":"Update and rename Documentation/project-docs/contributing.md …","State":"closed","Body":"…entación/project-docs/contributing.md\r\n\r\nAcceso","Url":"https://github.com/dotnet/corefx/pull/43121","RelatedDescription":"Closed or merged PR \"Update and rename Documentation/project-docs/contributing.md …\" (#43121)"},{"Id":"1044142108","IsPullRequest":true,"CreatedAt":"2021-11-03T21:44:01","Actor":"safern","Number":"43119","RawContent":null,"Title":"Disable PenTests on release/3.1 on Windows","State":"closed","Body":"cc: @Anipik ","Url":"https://github.com/dotnet/corefx/pull/43119","RelatedDescription":"Closed or merged PR \"Disable PenTests on release/3.1 on Windows\" (#43119)"},{"Id":"1026951020","IsPullRequest":true,"CreatedAt":"2021-10-15T14:28:58","Actor":"vseanreesermsft","Number":"43115","RawContent":null,"Title":"remove rhel6","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43115","RelatedDescription":"Closed or merged PR \"remove rhel6\" (#43115)"},{"Id":"1027406235","IsPullRequest":true,"CreatedAt":"2021-10-15T12:45:14","Actor":"ManickaP","Number":"43116","RawContent":null,"Title":"[H/2] Split lock to prevent deadlock in WindowUpdate processing","State":"open","Body":"Fixes https://github.com/dotnet/runtime/issues/48220 also in 3.1\r\n\r\n### Description\r\n\r\nDeadlock in HTTP/2 - when a window update (WINDOW_UPDATE frame) is received at the same time as the HTTP/2 request is being completed.\r\nWe saw the very same problem in 5.0 in https://github.com/dotnet/runtime/issues/48220 (reported by customer) and fixed it in https://github.com/dotnet/runtime/pull/47769 for .NET 5.0.\r\n\r\nThe problem lies in firstly locking connection sync object and then stream's (window update) while request completions attempts to lock stream and than connection.\r\n\r\nIn 5.0 (https://github.com/dotnet/runtime/pull/47769), we've split `Http2Stream` lock into 2 objects, one for the stream itself (used for completion etc.) and other for credit handling (window updates and sent bytes counting).\r\nIn 3.1, `Http2Stream` looks slightly different and uses credit manager's sync object as stream's sync object. So redefining stream's sync object to lock over `this` achieves the same thing as the fix in 5.0 since operations over `Http2Stream` are guarded with stream's lock and operations with credit lock credit manager itself (separate sync object for window updates and sent bytes counting).\r\n\r\n### Customer Impact\r\n\r\nReliability problem.\r\nReported by customer using YARP. They are hitting it for specific backend server (likely due to timing). Temporary workaround is to disable HTTP/2 for the endpoint - such solution does not scale for larger number of backends and might not be acceptable for other backends.\r\n\r\n### Regression\r\n\r\nNo\r\n\r\n### Risk\r\n\r\nLow.\r\n\r\nLocal test run for 3.1.\r\nWhen we fixed the issue in 5.0, we got a confirmation from the reporting customer that the fix helped and that it didn't break anything.\r\nYARP customer needing the 3.1 fix is unable to verify the fix on unsigned binaries.\r\n\r\n### Link to PR / issue in main\r\n\r\nIssue: https://github.com/dotnet/runtime/issues/48220\r\n6.0 (main) PR: https://github.com/dotnet/runtime/pull/47769\r\n5.0.5 servicing PR: https://github.com/dotnet/runtime/pull/47921\r\n\r\n### Is there a packaging impact?\r\n\r\nNo","Url":"https://github.com/dotnet/corefx/pull/43116","RelatedDescription":"Open PR \"[H/2] Split lock to prevent deadlock in WindowUpdate processing\" (#43116)"},{"Id":"1005855962","IsPullRequest":true,"CreatedAt":"2021-10-14T20:50:03","Actor":"jonfortescue","Number":"43109","RawContent":null,"Title":"Switch to 1ES servicing pools on release/3.1","State":"closed","Body":"Tracking issue: https://github.com/dotnet/core-eng/issues/14276","Url":"https://github.com/dotnet/corefx/pull/43109","RelatedDescription":"Closed or merged PR \"Switch to 1ES servicing pools on release/3.1\" (#43109)"},{"Id":"1024511482","IsPullRequest":true,"CreatedAt":"2021-10-13T17:20:09","Actor":"vseanreesermsft","Number":"43113","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43113","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43113)"},{"Id":"1024513240","IsPullRequest":true,"CreatedAt":"2021-10-12T23:03:10","Actor":"vseanreesermsft","Number":"43114","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43114","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43114)"},{"Id":"1021364082","IsPullRequest":true,"CreatedAt":"2021-10-12T23:02:00","Actor":"safern","Number":"43112","RawContent":null,"Title":"Add SetLastError to Gdiplus PInvokes","State":"closed","Body":"Given that the files are very different on the 6.0/7.0 branch because we did some cleanup, I had to do a manual port of the changes in: https://github.com/dotnet/runtime/commit/ca74e9a05558533827369b14ee507da46bdc0fd8\r\n\r\n## Customer Impact\r\n\r\nRegression from .NETFramework and .NETCore causing a unexpected `ExternalException` related to session transitions (sleep/wake, Remote Desktop, etc)\r\n\r\n## Testing\r\n\r\nUnit tests.\r\n\r\n## Risk\r\n\r\nVery low. Adds back SetLastError to only those PINvokes which require it. ","Url":"https://github.com/dotnet/corefx/pull/43112","RelatedDescription":"Closed or merged PR \"Add SetLastError to Gdiplus PInvokes\" (#43112)"},{"Id":"1021086539","IsPullRequest":true,"CreatedAt":"2021-10-11T21:05:30","Actor":"aik-jahoda","Number":"43111","RawContent":null,"Title":"Update branding to 3.1.22","State":"closed","Body":"Prepare branch for 3.1.22 release. After merge, the servising branch is considered open.","Url":"https://github.com/dotnet/corefx/pull/43111","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.22\" (#43111)"},{"Id":"975262468","IsPullRequest":true,"CreatedAt":"2021-10-11T17:08:46","Actor":"adamsitnik","Number":"43102","RawContent":null,"Title":"[release/3.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/57479 to release/3.1\r\n\r\nThe following description is a copy of the port to 5.0 description (https://github.com/dotnet/runtime/pull/57562)\r\n\r\n<details>\r\n\r\n## Customer Impact\r\n\r\nCustomers who create `ReadOnlySequence<T>` out of sliced `Memory` owned by any `MemoryManager` are seeing invalid end position and length. This issue was reported by a customer and the fix was provided by them as well.\r\n\r\nDepending on the input (how many elements of the original `Memory` were sliced) iteration over `ReadOnlySequence<T>` can result in returning incomplete data or throwing `ArgumentOutOfRangeException`. These conditions can lead to data loss or data corruption that would be difficult to diagnose in a production application.\r\n\r\n```cs\r\nusing System;\r\nusing System.Buffers;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic class Program\r\n{\r\n    public static void Main()\r\n    {\r\n        MemoryManager<byte> memoryManager = new CustomMemoryManager<byte>(4);\r\n        ReadOnlySequence<byte> ros = new ReadOnlySequence<byte>(memoryManager.Memory.Slice(1));\r\n        Console.WriteLine(ros.Length); // prints 2 instead of 3\r\n\r\n        foreach (var item in ros)\r\n        {\r\n            Console.WriteLine(item.Length); // prints 2 instead of 3\r\n        }\r\n\r\n        memoryManager = new CustomMemoryManager<byte>(3);\r\n        ros = new ReadOnlySequence<byte>(memoryManager.Memory.Slice(2));\r\n        Console.WriteLine(ros.Length); // prints -1 instead of 1\r\n\r\n        foreach (var item in ros) // throws System.ArgumentOutOfRangeException\r\n        {\r\n            Console.WriteLine(item.Length); // never gets printed\r\n        }\r\n    }\r\n}\r\n\r\npublic unsafe class CustomMemoryManager<T> : MemoryManager<T>\r\n{\r\n    private readonly T[] _buffer;\r\n\r\n    public CustomMemoryManager(int size) => _buffer = new T[size];\r\n\r\n    public unsafe override Span<T> GetSpan() => _buffer;\r\n\r\n    public override unsafe MemoryHandle Pin(int elementIndex = 0)\r\n    {\r\n        if ((uint)elementIndex > (uint)_buffer.Length)\r\n        {\r\n            throw new ArgumentOutOfRangeException(nameof(elementIndex));\r\n        }\r\n\r\n        var handle = GCHandle.Alloc(_buffer, GCHandleType.Pinned);\r\n        return new MemoryHandle(Unsafe.Add<T>((void*)handle.AddrOfPinnedObject(), elementIndex), handle, this);\r\n    }\r\n\r\n    public override void Unpin() { }\r\n\r\n    protected override void Dispose(bool disposing) { }\r\n}\r\n```\r\n\r\n## Testing\r\n\r\nFailing test has been added in this PR.\r\n\r\n![image](https://user-images.githubusercontent.com/6011991/130180884-ca0b35a0-ee09-4c23-933c-b189d67c771f.png)\r\n\r\n## Risk\r\n\r\nLow, as the change is very simple and obvious when you look at `ReadOnlySequence<T>` ctor that accepts `ReadOnlyMemory<T>` :\r\n\r\nhttps://github.com/dotnet/corefx/blob/646a2190f7685ece82b7cbb7ccf7d44ba4cfbefa/src/System.Memory/src/System/Buffers/ReadOnlySequence.cs#L165\r\nhttps://github.com/dotnet/corefx/blob/646a2190f7685ece82b7cbb7ccf7d44ba4cfbefa/src/System.Memory/src/System/Buffers/ReadOnlySequence.cs#L175\r\n\r\n## Regression\r\n\r\nThis is not a regression.\r\n\r\n</details>","Url":"https://github.com/dotnet/corefx/pull/43102","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix ReadOnlySequence created out of sliced Memory owned by MemoryManager\" (#43102)"},{"Id":"1016538264","IsPullRequest":true,"CreatedAt":"2021-10-07T17:33:02","Actor":"vseanreesermsft","Number":"43110","RawContent":null,"Title":"Update branding for 3.1.21","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43110","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.21\" (#43110)"},{"Id":"996473672","IsPullRequest":true,"CreatedAt":"2021-09-15T01:17:47","Actor":"vseanreesermsft","Number":"43108","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43108","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43108)"},{"Id":"974679430","IsPullRequest":true,"CreatedAt":"2021-09-14T18:59:22","Actor":"omajid","Number":"43101","RawContent":null,"Title":"[release/3.1] Add Fedora 36 to the RID graph","State":"closed","Body":"    $ podman run -it registry.fedoraproject.org/fedora:rawhide /bin/cat /etc/os-release\r\n    NAME=\"Fedora Linux\"\r\n    VERSION=\"36 (Container Image Prerelease)\"\r\n    ID=fedora\r\n    VERSION_ID=36\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f36\"\r\n    PRETTY_NAME=\"Fedora Linux 36 (Container Image Prerelease)\"\r\n    ANSI_COLOR=\"0;38;2;60;110;180\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:36\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container","Url":"https://github.com/dotnet/corefx/pull/43101","RelatedDescription":"Closed or merged PR \"[release/3.1] Add Fedora 36 to the RID graph\" (#43101)"},{"Id":"991576016","IsPullRequest":true,"CreatedAt":"2021-09-09T16:29:54","Actor":"dotnet-maestro[bot]","Number":"43107","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20210827.4\r\n- **Date Produced**: 8/27/2021 5:44 PM\r\n- **Commit**: 98e2fbaad9f2f7bbe091bb0b9dd37d03206becc9\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21376.2 to 2.4.1-beta.21427.4][1]\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: [from 2.5.1-beta.21376.2 to 2.5.1-beta.21427.4][1]\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21376.2 to 2.2.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.CoreFxTesting**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21376.2 to 2.0.0-beta.21427.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 1.0.0-beta.21376.2 to 1.0.0-beta.21427.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c444d79...98e2fba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43107","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#43107)"},{"Id":"990183636","IsPullRequest":true,"CreatedAt":"2021-09-07T22:48:25","Actor":"vseanreesermsft","Number":"43106","RawContent":null,"Title":"Update branding for 3.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43106","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.20\" (#43106)"},{"Id":"990172524","IsPullRequest":true,"CreatedAt":"2021-09-07T20:54:41","Actor":"vseanreesermsft","Number":"43105","RawContent":null,"Title":"Update branding for 3.1.20","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43105","RelatedDescription":"Closed or merged PR \"Update branding for 3.1.20\" (#43105)"},{"Id":"985837980","IsPullRequest":true,"CreatedAt":"2021-09-01T23:39:08","Actor":"omajid","Number":"43104","RawContent":null,"Title":"[release/3.1] Fix building with clang 13","State":"open","Body":"Clang now enables cast-function-type warning which results in build\r\nerrors that look like this:\r\n\r\n    /corefx/src/Native/Unix/System.Native/pal_process.c(382,76): error G39B05358: cast from 'void (*)(int, siginfo_t *, void *)' to 'void (*)(int)' converts to incompatible function type [-Werror,-Wcast-function-type] [/corefx/src/Native/build-native.proj]\r\n    void (*oldhandler)(int) = (sa_old.sa_flags & SA_SIGINFO) ? (void (*)(int))sa_old.sa_sigaction : sa_old.sa_handler;\r\n                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nDisable this warning using -Wno-cast-function-type warning. That seems\r\nlower-risk than any functional code change.\r\n\r\nClang 13 also enables reserved-identifier warning which results in build errors\r\nlike this:\r\n\r\n    /corefx/src/Native/Unix/System.Native/pal_process.c(819,17): error GA61F72A6: identifier '__cpu' is reserved because it starts with '__' [-Werror,-Wreserved-identifier] [/corefx/src/Native/build-native.proj]\r\n                      if (CPU_ISSET(cpu, &set))\r\n                          ^\r\n    /usr/include/sched.h:94:34: note: expanded from macro 'CPU_ISSET'\r\n    # define CPU_ISSET(cpu, cpusetp) __CPU_ISSET_S (cpu, sizeof (cpu_set_t), \\\r\n                                     ^\r\n\r\nThis really seems like a bug in clang that it's complaiing about code in\r\nsystem libraries that we are using via wrapper-macros. But there are\r\nother instances of this warning that are speciifc to our code too, such\r\nas `__padding` in\r\nsrc/Native/Unix/System.Native/pal_interfaceaddresses.h. Disable this\r\nwarning too.\r\n\r\nTested with Clang 13 rc1","Url":"https://github.com/dotnet/corefx/pull/43104","RelatedDescription":"Open PR \"[release/3.1] Fix building with clang 13\" (#43104)"},{"Id":"978363745","IsPullRequest":true,"CreatedAt":"2021-08-24T19:32:05","Actor":"Anipik","Number":"43103","RawContent":null,"Title":"update dependencies for 2.1.30","State":"closed","Body":"Auto-update flow is broken, so manually updating these. These are required for dependency tags.\r\n\r\ncc @aik-jahoda @mmitche ","Url":"https://github.com/dotnet/corefx/pull/43103","RelatedDescription":"Closed or merged PR \"update dependencies for 2.1.30\" (#43103)"},{"Id":"969740401","IsPullRequest":true,"CreatedAt":"2021-08-16T18:41:19","Actor":"Anipik","Number":"43099","RawContent":null,"Title":"add Debian 11 and Alpine 3.14 RID ","State":"closed","Body":"Merge after https://github.com/dotnet/corefx/pull/43097\r\nReview only the last commit","Url":"https://github.com/dotnet/corefx/pull/43099","RelatedDescription":"Closed or merged PR \"add Debian 11 and Alpine 3.14 RID \" (#43099)"},{"Id":"969364073","IsPullRequest":true,"CreatedAt":"2021-08-16T17:14:40","Actor":"Anipik","Number":"43097","RawContent":null,"Title":"adding packaging for sqlClient","State":"closed","Body":"change similar to https://github.com/dotnet/corefx/pull/42952\r\n\r\nWe updated the policy of always updating the baseline version.  AssemblyVersionInPackageVersion change is not therefore required but keeping it for consistency purposes\r\n\r\nAssociated code change https://github.com/dotnet/corefx/pull/43070\r\n","Url":"https://github.com/dotnet/corefx/pull/43097","RelatedDescription":"Closed or merged PR \"adding packaging for sqlClient\" (#43097)"},{"Id":"970641180","IsPullRequest":true,"CreatedAt":"2021-08-13T18:57:00","Actor":"mmitche","Number":"43100","RawContent":null,"Title":"[release/3.1] Remove the use of dotnet-core","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/43100","RelatedDescription":"Open PR \"[release/3.1] Remove the use of dotnet-core\" (#43100)"},{"Id":"969614086","IsPullRequest":true,"CreatedAt":"2021-08-12T23:37:30","Actor":"dotnet-maestro-bot","Number":"43098","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-06014-01, servicing-30321-06, servicing-30322-04, servicing-30323-03, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/43098","RelatedDescription":"Closed or merged PR \"Update BuildTools, CoreClr, CoreFx, CoreSetup to rc1-06014-01, servicing-30321-06, servicing-30322-04, servicing-30323-03, respectively (release/2.1)\" (#43098)"},{"Id":"967505164","IsPullRequest":true,"CreatedAt":"2021-08-12T01:03:34","Actor":"crummel","Number":"43096","RawContent":null,"Title":"Merge internal commits from 2.1.29","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43096","RelatedDescription":"Closed or merged PR \"Merge internal commits from 2.1.29\" (#43096)"},{"Id":"965341980","IsPullRequest":true,"CreatedAt":"2021-08-10T22:51:54","Actor":"vseanreesermsft","Number":"43095","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/43095","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#43095)"},{"Id":"959514045","IsPullRequest":true,"CreatedAt":"2021-08-03T22:34:09","Actor":"dotnet-maestro[bot]","Number":"43094","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20210726.2\r\n- **Date Produced**: 7/26/2021 4:20 PM\r\n- **Commit**: c444d7967c5b79d16f2150370504368591883268\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21359.1 to 2.4.1-beta.21376.2][1]\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: [from 2.5.1-beta.21359.1 to 2.5.1-beta.21376.2][1]\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 2.2.0-beta.21359.1 to 2.2.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.CoreFxTesting**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21359.1 to 2.0.0-beta.21376.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 1.0.0-beta.21359.1 to 1.0.0-beta.21376.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1b4ae2c...c444d79\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/43094","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#43094)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"1051254963","IsPullRequest":true,"CreatedAt":"2021-11-11T18:34:38","Actor":"allisonchou","Number":"57711","RawContent":null,"Title":"Modify timeout to avoid flaky integration tests","State":"open","Body":"Sam found that the timeout was reduced back in September but is too short. This PR restores the timeout to its original value.","Url":"https://github.com/dotnet/roslyn/pull/57711","RelatedDescription":"Open PR \"Modify timeout to avoid flaky integration tests\" (#57711)"},{"Id":"1050590760","IsPullRequest":true,"CreatedAt":"2021-11-11T18:25:23","Actor":"allisonchou","Number":"57702","RawContent":null,"Title":"Skip flaky test WorkspaceClearedAfterReset","State":"closed","Body":"This test is consistently flaky and is tracked by https://github.com/dotnet/roslyn/issues/57701.","Url":"https://github.com/dotnet/roslyn/pull/57702","RelatedDescription":"Closed or merged PR \"Skip flaky test WorkspaceClearedAfterReset\" (#57702)"},{"Id":"1050796084","IsPullRequest":false,"CreatedAt":"2021-11-11T17:35:53","Actor":"siegfriedpammer","Number":"57704","RawContent":null,"Title":"Cascadia Code/Mono crashes VS 2022 Editor","State":"closed","Body":"See https://github.com/dotnet/roslyn/pull/56530#issuecomment-966149617\r\n\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.0.0\r\nVisualStudio.17.Release/17.0.0+31903.59\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Community\r\n\r\nAzure App Service Tools v3.0.0   17.0.789.48259\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   4.0.0-6.21526.21+c7d6f9fab845ffd943216da465022744e7d35f22\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nNuGet Package Manager   6.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   4.0.0-6.21526.21+c7d6f9fab845ffd943216da465022744e7d35f22\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nCurrently I am experiencing a few issues when trying to work with Roslyn.sln. VS 2019 won't run unit tests anymore and VS 2022 refuses to show any editor windows.\r\n\r\n![image](https://user-images.githubusercontent.com/344204/141274352-c480eb99-3ff1-4829-9e88-1710518ee53b.png)\r\n\r\nNow it finally displays the tests, in the pane to the left, but also printed this exception to the output.\r\n\r\n```\r\nLog level is set to Informational (Default).\r\nSystem.UnauthorizedAccessException: Attempted to perform an unauthorized operation. ---> System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.FontList.get_Item(UInt32 A_0)\r\n   at MS.Internal.FontFace.PhysicalFontFamily.MapGlyphTypeface(FontStyle style, FontWeight weight, FontStretch stretch, CharacterBufferRange charString, CultureInfo digitCulture, Int32& advance, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFaceFamily(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, IFontFamily fontFamily, FontStyle canonicalStyle, FontWeight canonicalWeight, FontStretch canonicalStretch, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Boolean nullFont, Double scaleInEm, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Boolean ignoreMissing, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFamily(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, IFontFamily fontFamily, CanonicalFontFamilyReference canonicalFamilyReference, FontStyle canonicalStyle, FontWeight canonicalWeight, FontStretch canonicalStretch, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapOnceByFontFamilyList(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, FontFamily[] familyList, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapByFontFamilyList(CharacterBufferRange unicodeString, CultureInfo culture, CultureInfo digitCulture, FontFamily[] familyList, PhysicalFontFamily& firstValidFamily, Int32& firstValidLength, IDeviceFont deviceFont, Double scaleInEm, Int32 recursionDepth, SpanVector scaledTypefaceSpans, Int32 firstCharIndex, Int32& nextValid)\r\n   at MS.Internal.Shaping.TypefaceMap.MapItem(CharacterBufferRange unicodeString, CultureInfo culture, Span itemSpan, SpanVector`1& cachedScaledTypefaceIndexSpans, Int32 ichItem)\r\n   at MS.Internal.Shaping.TypefaceMap.GetShapeableText(CharacterBufferReference characterBufferReference, Int32 stringLength, TextRunProperties textRunProperties, CultureInfo digitCulture, Boolean isRightToLeftParagraph, IList`1 shapeableList, IShapeableTextCollector collector, TextFormattingMode textFormattingMode)\r\n   at MS.Internal.Shaping.GlyphingCache.GetShapeableText(Typeface typeface, CharacterBufferReference characterBufferReference, Int32 stringLength, TextRunProperties textRunProperties, CultureInfo digitCulture, Boolean isRightToLeftParagraph, IList`1 shapeableList, IShapeableTextCollector collector, TextFormattingMode textFormattingMode)\r\n   at System.Windows.Media.TextFormatting.TextCharacters.MS.Internal.TextFormatting.ITextSymbols.GetTextShapeableSymbols(GlyphingCache glyphingCache, CharacterBufferReference characterBufferReference, Int32 length, Boolean rightToLeft, Boolean isRightToLeftParagraph, CultureInfo digitCulture, TextModifierScope textModifierScope, TextFormattingMode textFormattingMode, Boolean isSideways)\r\n   at MS.Internal.TextFormatting.TextStore.CreateTextLSRuns(TextRunInfo runInfo, IList`1 textEffects, CultureInfo digitCulture, Int32 offsetToFirstChar, Int32 stringLength, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel)\r\n   at MS.Internal.TextFormatting.TextStore.CreateLSRuns(TextRunInfo runInfo, IList`1 textEffects, CultureInfo digitCulture, Int32 offsetToFirstChar, Int32 stringLength, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel, Int32& textRunLength)\r\n   at MS.Internal.TextFormatting.TextStore.CreateLSRunsUniformBidiLevel(SpanVector runInfoVector, SpanVector textEffectsVector, Int32 runInfoFirstCp, Int32 ichUniform, Int32 cchUniform, Int32 uniformBidiLevel, TextFormattingMode textFormattingMode, Boolean isSideways, Int32& lastBidiLevel)\r\n   at MS.Internal.TextFormatting.TextStore.FetchLSRun(Int32 lscpFetch, TextFormattingMode textFormattingMode, Boolean isSideways, Plsrun& plsrun, Int32& lsrunOffset, Int32& lsrunLength)\r\n   at MS.Internal.TextFormatting.LineServicesCallbacks.FetchRunRedefined(IntPtr pols, Int32 lscpFetch, Int32 fIsStyle, IntPtr pstyle, Char* pwchTextBuffer, Int32 cchTextBuffer, Int32& fIsBufferUsed, Char*& pwchText, Int32& cchText, Int32& fIsHidden, LsChp& lschp, IntPtr& lsplsrun)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.TextFormatting.TextMetrics.FullTextLine.FormatLine(FullTextState fullText, Int32 cpFirst, Int32 lineLength, Int32 formatWidth, Int32 finiteFormatWidth, Int32 paragraphWidth, LineFlags lineFlags, FormattedTextSymbols collapsingSymbol)\r\n   at MS.Internal.TextFormatting.TextMetrics.FullTextLine..ctor(FormatSettings settings, Int32 cpFirst, Int32 lineLength, Int32 paragraphWidth, LineFlags lineFlags)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLineInternal(TextSource textSource, Int32 firstCharIndex, Int32 lineLength, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak, TextRunCache textRunCache)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLine(TextSource textSource, Int32 firstCharIndex, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak)\r\n   at System.Windows.Media.FormattedText.LineEnumerator.FormatLine(TextSource textSource, Int32 textSourcePosition, Double maxLineLength, TextParagraphProperties paraProps, TextLineBreak lineBreak)\r\n   at System.Windows.Media.FormattedText.LineEnumerator.MoveNext()\r\n   at System.Windows.Media.FormattedText.DrawAndCalculateMetrics(DrawingContext dc, Point drawingOffset, Boolean getBlackBoxMetrics)\r\n   at System.Windows.Media.FormattedText.get_Metrics()\r\n   at Microsoft.VisualStudio.Text.Formatting.Implementation.TextInfoCache.GetTextInfo(TextRunProperties key)\r\n   at Microsoft.VisualStudio.Text.Formatting.Implementation.FormattedTextSourceFactoryService.Create(ITextSnapshot sourceTextSnapshot, ITextSnapshot visualBufferSnapshot, Int32 tabSize, Double lineSpacing, Double baseIndentation, Double wordWrapWidth, Double maxAutoIndent, Boolean useDisplayMode, IClassifier aggregateClassifier, ITextAndAdornmentSequencer sequencer, IClassificationFormatMap classificationFormatMap, Boolean isViewWrapEnabled)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.PreLayout(LayoutLineCache lineCache)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.PerformLayout(SnapshotPoint anchorPosition, Double verticalDistance, ViewRelativePosition relativeTo, Double effectiveViewportWidth, Double effectiveViewportHeight, Boolean preserveViewportTop, Nullable`1 cancel)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView.Initialize()\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.InitializeTextView(IWpfTextView view)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.CreateAndTrackTextView(ITextDataModel dataModel, ITextViewRoleSet roles, IEditorOptions parentOptions, Boolean initialize)\r\n   at Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextEditorFactoryService.CreateTextView(ITextBuffer textBuffer, ITextViewRoleSet roles, IEditorOptions parentOptions)\r\n   at Microsoft.VisualStudio.TestWindow.Internal.UI.Summary.SummaryBuilder.InitializeTextView()\r\n   at Microsoft.VisualStudio.TestWindow.Internal.UI.Summary.SummaryControl.<InitializeControlContentAsync>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.TestWindow.Logging.ILoggerExtensions.<CallWithCatchAsync>d__11`1.MoveNext()\r\nConnected to test environment '< Local Windows Environment >'\r\nTest data store opened in 81,904 sec.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/57704","RelatedDescription":"Closed issue \"Cascadia Code/Mono crashes VS 2022 Editor\" (#57704)"},{"Id":"1051186924","IsPullRequest":false,"CreatedAt":"2021-11-11T17:05:58","Actor":"mqudsi","Number":"57710","RawContent":null,"Title":"Type vs Name resolution breaks when type is a nullable value type","State":"open","Body":"*I don't know if this behavior is intentional to address some corner case I'm not seeing; if it is, please forgive this erroneous bug report*\r\n\r\nChanging only the type of a property from a simple struct to a nullable version of the same struct either changes (if this isn't a bug) or breaks (if this is a bug) same-name type resolution. This is inconsistent with the behavior observed when the property is a regular value type, a reference type, or a nullable reference type.\r\n\r\n**Version Used**: \r\n\r\nVisual Studio 17.0.0 Preview 5.0 with a C# 10 project.\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\npublic class Foo {\r\n    public TimeSpan? TimeSpan => TimeSpan.FromDays(7);\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe compiler will be able to deduce that in `TimeSpan.FromDays()` the token `TimeSpan` refers to a type and not the instance by the same name.\r\n\r\n**Actual Behavior**:\r\n\r\nAn error is observed as `TimeSpan` is resolved to the property by that name and not the type with that name, and an instance of `TimeSpan` does not have a `FromDays()` function.\r\n\r\nNote that this behavior only occurs for a nullable value type, and is not observed with any of the other possible combinations. The following all compile OK:\r\n\r\n```csharp\r\npublic class Foo {\r\n    public TimeSpan TimeSpan => TimeSpan.FromDays(7);\r\n    public string String => String.IsNullOrEmpty(null) ? \"foo\" : \"bar\";\r\n    public Array? Array => Array.BinarySearch(new object[] { }, null) == 0 ? new object[] { } : new object[] { };\r\n}\r\n```\r\n\r\nThe above are all able to correctly resolve a non-namespaced reference to a type by the same name as the property to the type (yielding access to the static method within).","Url":"https://github.com/dotnet/roslyn/issues/57710","RelatedDescription":"Open issue \"Type vs Name resolution breaks when type is a nullable value type\" (#57710)"},{"Id":"1051007185","IsPullRequest":false,"CreatedAt":"2021-11-11T13:57:45","Actor":"twurm","Number":"57708","RawContent":null,"Title":"Microsoft.CodeAnalysis v4.0.1 Causes Dependency Issues","State":"open","Body":"Package: Microsoft.CodeAnalysis\r\nVersion with Issue: 4.0.1\r\nLast Working Version 4.0.0\r\n\r\nWhen upgrading to Microsoft.CodeAnalysis v4.0.1 on a .Net 6 project we are seeing package dependency issues.  \r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1107\tVersion conflict detected for Microsoft.CodeAnalysis.Common. Install/reference Microsoft.CodeAnalysis.Common 4.0.1 directly to project TelerikAspNetCoreApp1 to resolve this issue. \r\n TelerikAspNetCoreApp1 -> Microsoft.CodeAnalysis 4.0.1 -> Microsoft.CodeAnalysis.VisualBasic.Workspaces 4.0.1 -> Microsoft.CodeAnalysis.Common (= 4.0.1) \r\n TelerikAspNetCoreApp1 -> Microsoft.VisualStudio.Web.CodeGeneration.Design 6.0.0 -> Microsoft.DotNet.Scaffolding.Shared 6.0.0 -> Microsoft.CodeAnalysis.CSharp.Features 4.0.0 -> Microsoft.CodeAnalysis.Common (= 4.0.0).\tTelerikAspNetCoreApp1\tC:\\Users\\TWurm\\source\\repos\\TelerikAspNetCoreApp1\\TelerikAspNetCoreApp1\\TelerikAspNetCoreApp1.csproj\t1\t\r\n```\r\nDowngrading to v4.0.0 works just fine.\r\n\r\nBelow are the package references we are using for this example project, please note this was just to show Telerik the issue when we thought it was their issue.  This project doesn't actually do anything.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\" ToolsVersion=\"15.0\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ApplicationInsights.AspNetCore\" Version=\"2.19.0\" />\r\n    <PackageReference Include=\"Microsoft.Identity.Web\" Version=\"1.20.0\" />\r\n    <PackageReference Include=\"Microsoft.Identity.Web.UI\" Version=\"1.20.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.EntityFrameworkCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity.UI\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"6.0.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.UserSecrets\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.OpenApi\" Version=\"1.2.3\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Azure.Containers.Tools.Targets\" Version=\"1.11.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis\" Version=\"4.0.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"6.0.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(Configuration)' == 'Release' \">\r\n    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Remove=\"Templates\\**\" />\r\n    <Content Remove=\"Templates\\**\" />\r\n    <EmbeddedResource Remove=\"Templates\\**\" />\r\n    <None Remove=\"Templates\\**\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nI've attached a sample example project you can take a look with.\r\n[TelerikAspNetCoreApp1.zip](https://github.com/dotnet/roslyn/files/7520873/TelerikAspNetCoreApp1.zip)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/57708","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis v4.0.1 Causes Dependency Issues\" (#57708)"},{"Id":"1050973096","IsPullRequest":true,"CreatedAt":"2021-11-11T13:19:53","Actor":"dotnet-maestro[bot]","Number":"57707","RawContent":null,"Title":"[main] Update dependencies from dotnet/source-build","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cf93f77-b43f-4032-fa6b-08d9301a7519)\r\n## From https://github.com/dotnet/source-build\r\n- **Subscription**: 1cf93f77-b43f-4032-fa6b-08d9301a7519\r\n- **Build**: 20211110.1\r\n- **Date Produced**: November 10, 2021 1:39:56 PM UTC\r\n- **Commit**: cb5ea6d0da3c637b506b1beac24d1b61494b04c5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.SourceBuild.Intermediate.source-build**: [from 0.1.0-alpha.1.21558.1 to 0.1.0-alpha.1.21560.1][1]\r\n\r\n[1]: https://github.com/dotnet/source-build/compare/50f26e9...cb5ea6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1cf93f77-b43f-4032-fa6b-08d9301a7519)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/57707","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/source-build\" (#57707)"},{"Id":"1050884420","IsPullRequest":false,"CreatedAt":"2021-11-11T11:35:22","Actor":"canton7","Number":"57706","RawContent":null,"Title":"EditorConfig Code style with all_upper does not allow names starting with M_, S_ or T_","State":"open","Body":"**Version Used**: \r\n\r\n3.8.0-5.20604.10 (9ed4b774) in VS 16.8.3.\r\n\r\n**Steps to Reproduce**:\r\n\r\n .editorconfig:\r\n\r\n```\r\ndotnet_naming_rule.constant_should_be_capslock.severity = warning\r\ndotnet_naming_rule.constant_should_be_capslock.symbols = constant\r\ndotnet_naming_rule.constant_should_be_capslock.style = capslock\r\n\r\ndotnet_naming_symbols.constant.applicable_kinds = *\r\ndotnet_naming_symbols.constant.applicable_accessibilities = *\r\ndotnet_naming_symbols.constant.required_modifiers = const\r\n\r\ndotnet_naming_style.capslock.capitalization = all_upper\r\n```\r\n\r\n(The exact capitisation doesn't matter)\r\n\r\nCode:\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    public const string T_STR = \"\";\r\n    public const string U_STR = \"\";\r\n\r\n    public static void Main(string[] args) { }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo naming rule violations.\r\n\r\n**Actual Behavior**:\r\n\r\nIDE1006\tNaming rule violation: Prefix 'T_' is not expected.\r\n\r\nThis only complains about names starting with M_, S_ or T_.\r\n\r\n[This code](https://github.com/dotnet/roslyn/blob/5a2d72621afba6286cc7922435c09cce882fc0b8/src/Workspaces/SharedUtilitiesAndExtensions/Compiler/Core/NamingStyles/NamingStyle.cs#L181) seems to be at fault: it's calling [`StripCommonPrefixes`](https://github.com/dotnet/roslyn/blob/5a2d72621afba6286cc7922435c09cce882fc0b8/src/Workspaces/SharedUtilitiesAndExtensions/Compiler/Core/NamingStyles/NamingStyle.cs#L377) which is finding and removing the prefixes `m_`, `s_` and `t_`, and then because it found a prefix, it's complaining that we didn't configure one.\r\n\r\nI can see the sense of this, when the variable name isn't expected to contain underscores. If it does, I don't think we can reliably determine what is a prefix and what isn't.\r\n\r\nThis behaviour was introduced in #32549.\r\n\r\nOriginally from [this StackOverflow question](https://stackoverflow.com/questions/69926484/visual-studio-warning-prefix-s-or-t-is-not-expected).","Url":"https://github.com/dotnet/roslyn/issues/57706","RelatedDescription":"Open issue \"EditorConfig Code style with all_upper does not allow names starting with M_, S_ or T_\" (#57706)"},{"Id":"1050870724","IsPullRequest":false,"CreatedAt":"2021-11-11T11:33:02","Actor":"Erikvdv","Number":"57705","RawContent":null,"Title":"Implicit namespace based on folder structure ","State":"closed","Body":"I would love to have the option to not needing to define a namespace in my project files anymore.\r\nThe root namespace can be defined in the csproj file.\r\nThen all file namespaces should be derived from the underlying filesystem folder structure relative to my csproj file\r\n","Url":"https://github.com/dotnet/roslyn/issues/57705","RelatedDescription":"Closed issue \"Implicit namespace based on folder structure \" (#57705)"},{"Id":"1051022925","IsPullRequest":false,"CreatedAt":"2021-11-11T10:52:57","Actor":"BehroozAmoozad","Number":"57709","RawContent":null,"Title":"Microsoft.CodeAnalysis.Project has no documentation on how the Documents are populated.","State":"open","Body":"`Microsoft.CodeAnalysis.Project` has no documentation on how the `Documents` are populated.   \r\nAre we supposed to `AddDocument` Manually?  \r\nIs a bug preventing them from being loaded automatically?  \r\nIf we're supposed to load them manually, is there a helper class to filter file extensions with?   \r\nIf it's not intended to be loaded automatically then why are Solution's Projects loaded automatically?  \r\n\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 518c2d2f-da6a-cf64-0efd-d9b10d9bf192\r\n* Version Independent ID: 8f774c6c-c309-032c-27bd-1f589a362036\r\n* Content: [Project.Documents Property (Microsoft.CodeAnalysis)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.codeanalysis.project.documents?view=roslyn-dotnet-4.0.1#Microsoft_CodeAnalysis_Project_Documents)\r\n* Content Source: [dotnet/xml/Microsoft.CodeAnalysis/Project.xml](https://github.com/dotnet/roslyn-api-docs/blob/live/dotnet/xml/Microsoft.CodeAnalysis/Project.xml)\r\n* Product: **dotnet-roslyn-api**\r\n* Technology: **microsoft.codeanalysis**\r\n* GitHub Login: @dotnet-bot\r\n* Microsoft Alias: **dotnetcontent**","Url":"https://github.com/dotnet/roslyn/issues/57709","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis.Project has no documentation on how the Documents are populated.\" (#57709)"},{"Id":"1050629448","IsPullRequest":true,"CreatedAt":"2021-11-11T06:42:40","Actor":"dibarbet","Number":"57703","RawContent":null,"Title":"Update stream jsonrpc version to enable workspace diagnostics","State":"open","Body":"DRAFT\r\nTODO - verify VS works with buffered progress changes\r\nTODO - get new streamjsonrpc version for https://github.com/microsoft/vs-streamjsonrpc/pull/734\r\nTODO - filter out hidden diagnostics with no messages when not returning VS diagnostics","Url":"https://github.com/dotnet/roslyn/pull/57703","RelatedDescription":"Open PR \"Update stream jsonrpc version to enable workspace diagnostics\" (#57703)"},{"Id":"1050587399","IsPullRequest":false,"CreatedAt":"2021-11-11T05:23:47","Actor":"allisonchou","Number":"57701","RawContent":null,"Title":"[Flaky Test] Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpInteractiveDirectives.WorkspaceClearedAfterReset","State":"open","Body":"Example run: https://runfo.azurewebsites.net/view/build/?number=1464500\r\n\r\nMessage:\r\n```\r\nSystem.AggregateException : One or more errors occurred. ---- System.Threading.Tasks.TaskCanceledException : A task was canceled.\r\nServer stack trace: \r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.InteractiveWindow_InProc.SubmitText(String text) in /_/src/VisualStudio/IntegrationTest/TestUtilities/InProcess/InteractiveWindow_InProc.cs:line 186\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs)\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)\r\n\r\nException rethrown at [0]: \r\n   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\r\n   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\r\n   at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.InteractiveWindow_InProc.SubmitText(String text)\r\n   at Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpInteractiveDirectives.WorkspaceClearedAfterReset() in /_/src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveDirectives.cs:line 265\r\n```\r\n<!-- runfo report start -->\r\nRunfo Tracking Issue: [Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpInteractiveDirectives.WorkspaceClearedAfterReset](https://runfo.azurewebsites.net/tracking/issue/214)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[1464500](https://dev.azure.com/dnceng/public/_build/results?buildId=1464500)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57698](https://github.com/dotnet/roslyn/pull/57698)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1464500](https://dev.azure.com/dnceng/public/_build/results?buildId=1464500)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57698](https://github.com/dotnet/roslyn/pull/57698)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1464500](https://dev.azure.com/dnceng/public/_build/results?buildId=1464500)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57698](https://github.com/dotnet/roslyn/pull/57698)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1464500](https://dev.azure.com/dnceng/public/_build/results?buildId=1464500)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57698](https://github.com/dotnet/roslyn/pull/57698)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1464497](https://dev.azure.com/dnceng/public/_build/results?buildId=1464497)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57697](https://github.com/dotnet/roslyn/pull/57697)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1464497](https://dev.azure.com/dnceng/public/_build/results?buildId=1464497)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57697](https://github.com/dotnet/roslyn/pull/57697)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1464497](https://dev.azure.com/dnceng/public/_build/results?buildId=1464497)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57697](https://github.com/dotnet/roslyn/pull/57697)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1464487](https://dev.azure.com/dnceng/public/_build/results?buildId=1464487)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57696](https://github.com/dotnet/roslyn/pull/57696)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1464481](https://dev.azure.com/dnceng/public/_build/results?buildId=1464481)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57695](https://github.com/dotnet/roslyn/pull/57695)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1464474](https://dev.azure.com/dnceng/public/_build/results?buildId=1464474)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57693](https://github.com/dotnet/roslyn/pull/57693)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1464465](https://dev.azure.com/dnceng/public/_build/results?buildId=1464465)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57692](https://github.com/dotnet/roslyn/pull/57692)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1464465](https://dev.azure.com/dnceng/public/_build/results?buildId=1464465)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57692](https://github.com/dotnet/roslyn/pull/57692)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1464465](https://dev.azure.com/dnceng/public/_build/results?buildId=1464465)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57692](https://github.com/dotnet/roslyn/pull/57692)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1464465](https://dev.azure.com/dnceng/public/_build/results?buildId=1464465)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57692](https://github.com/dotnet/roslyn/pull/57692)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1464338](https://dev.azure.com/dnceng/public/_build/results?buildId=1464338)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57689](https://github.com/dotnet/roslyn/pull/57689)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1464338](https://dev.azure.com/dnceng/public/_build/results?buildId=1464338)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57689](https://github.com/dotnet/roslyn/pull/57689)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1464338](https://dev.azure.com/dnceng/public/_build/results?buildId=1464338)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57689](https://github.com/dotnet/roslyn/pull/57689)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1463505](https://dev.azure.com/dnceng/public/_build/results?buildId=1463505)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|2-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1463505](https://dev.azure.com/dnceng/public/_build/results?buildId=1463505)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|2-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1463505](https://dev.azure.com/dnceng/public/_build/results?buildId=1463505)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|2-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1463505](https://dev.azure.com/dnceng/public/_build/results?buildId=1463505)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|2-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1463186](https://dev.azure.com/dnceng/public/_build/results?buildId=1463186)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1462274](https://dev.azure.com/dnceng/public/_build/results?buildId=1462274)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1461102](https://dev.azure.com/dnceng/public/_build/results?buildId=1461102)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1459771](https://dev.azure.com/dnceng/public/_build/results?buildId=1459771)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|Rolling|2-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|1-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|2-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_true OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Release OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_false OOPCoreClr_false|\r\n|[1459756](https://dev.azure.com/dnceng/public/_build/results?buildId=1459756)|[roslyn-integration-CI](https://dnceng.visualstudio.com/public/_build?definitionId=245)|[PR 57635](https://github.com/dotnet/roslyn/pull/57635)|3-Integration Debug OOP64_true OOPCoreClr_false|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|8|13|13|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/57701","RelatedDescription":"Open issue \"[Flaky Test] Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpInteractiveDirectives.WorkspaceClearedAfterReset\" (#57701)"},{"Id":"1050465087","IsPullRequest":true,"CreatedAt":"2021-11-11T05:19:08","Actor":"jcouv","Number":"57690","RawContent":null,"Title":"Merge `main` branch into `list-patterns`","State":"closed","Body":"Only the usual additive conflicts (easy to resolve)","Url":"https://github.com/dotnet/roslyn/pull/57690","RelatedDescription":"Closed or merged PR \"Merge `main` branch into `list-patterns`\" (#57690)"},{"Id":"1050483078","IsPullRequest":true,"CreatedAt":"2021-11-11T05:17:15","Actor":"allisonchou","Number":"57692","RawContent":null,"Title":"[do not merge] Test insert #57481 into main-vs-deps","State":"closed","Body":"Switch to 1ES R&D pools on main","Url":"https://github.com/dotnet/roslyn/pull/57692","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #57481 into main-vs-deps\" (#57692)"},{"Id":"1050484644","IsPullRequest":true,"CreatedAt":"2021-11-11T05:17:09","Actor":"allisonchou","Number":"57693","RawContent":null,"Title":"[do not merge] Test insert #57588 into main-vs-deps","State":"closed","Body":"[LSP]Re-enable information level logging in loghub now that VS supports de…","Url":"https://github.com/dotnet/roslyn/pull/57693","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #57588 into main-vs-deps\" (#57693)"},{"Id":"1050487661","IsPullRequest":true,"CreatedAt":"2021-11-11T05:17:02","Actor":"allisonchou","Number":"57695","RawContent":null,"Title":"[do not merge] Test insert #57601 into main-vs-deps","State":"closed","Body":"Update VS editor package version","Url":"https://github.com/dotnet/roslyn/pull/57695","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #57601 into main-vs-deps\" (#57695)"},{"Id":"1050489195","IsPullRequest":true,"CreatedAt":"2021-11-11T05:16:38","Actor":"allisonchou","Number":"57697","RawContent":null,"Title":"[do not merge] Test insert #57584 into main-vs-deps","State":"closed","Body":"[main] Update dependencies from dotnet/roslyn","Url":"https://github.com/dotnet/roslyn/pull/57697","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #57584 into main-vs-deps\" (#57697)"},{"Id":"1050490643","IsPullRequest":true,"CreatedAt":"2021-11-11T05:16:25","Actor":"allisonchou","Number":"57698","RawContent":null,"Title":"[do not merge] Test insert #54559 into main-vs-deps","State":"closed","Body":"Initial fix for issue \"VB Formatting of LineContinuation Wrong after _ ' Comment\"","Url":"https://github.com/dotnet/roslyn/pull/57698","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #54559 into main-vs-deps\" (#57698)"},{"Id":"1050488503","IsPullRequest":true,"CreatedAt":"2021-11-11T05:16:13","Actor":"allisonchou","Number":"57696","RawContent":null,"Title":"[do not merge] Test insert #57584 into main-vs-deps","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/57696","RelatedDescription":"Closed or merged PR \"[do not merge] Test insert #57584 into main-vs-deps\" (#57696)"},{"Id":"1050544289","IsPullRequest":false,"CreatedAt":"2021-11-11T03:52:49","Actor":"lonix1","Number":"57700","RawContent":null,"Title":"Config for IDE0002 to ignore `base`","State":"open","Body":"**Brief description:**\r\n\r\n`IDE0002` : \"Name can be simplified\"\r\n\r\nThis recommends to convert `base.Foo` to `Foo`.\r\n\r\nIn many cases, I find `base` reduces confusion and increases clarity, especially in complicated classes.\r\n\r\nIt would be very helpful to have a config option for this rule, so we can disable it for `base`.\r\n\r\n**Languages applicable:**\r\n\r\nC#\r\n\r\n**Code example that the analyzer should report:**\r\nNo - the recommendation is to *not* report in certain cases, if the config option is toggled.\r\n\r\n**Additional information:**\r\n\r\nNo\r\n\r\n**Documentation requirements:**\r\n\r\nWhen this analyzer is implemented, it must be documented by following the steps at [Documentation for IDE CodeStyle analyzers](https://github.com/dotnet/roslyn/blob/main/docs/contributing/Documentation%20for%20IDE%20CodeStyle%20analyzers.md).\r\n","Url":"https://github.com/dotnet/roslyn/issues/57700","RelatedDescription":"Open issue \"Config for IDE0002 to ignore `base`\" (#57700)"},{"Id":"1050527412","IsPullRequest":false,"CreatedAt":"2021-11-11T03:13:48","Actor":"jasonmalinowski","Number":"57699","RawContent":null,"Title":"Allow non-fatal error reports to include FaultSeverity","State":"open","Body":"In the fault creation there is `FaultSeverity.Diagnostic`. Ideally what we do is pass https://sourceroslyn.io/#Microsoft.CodeAnalysis.CodeStyle/LogLevel.cs,13 and then translate that to a `FaultSeverity`. Then we can also use that severity to determine if we capture logs (or even other information). It would also report differently in the telemetry which could be helpful\r\n\r\n_Originally posted by @ryzngard in https://github.com/dotnet/roslyn/pull/57680#discussion_r746999647_","Url":"https://github.com/dotnet/roslyn/issues/57699","RelatedDescription":"Open issue \"Allow non-fatal error reports to include FaultSeverity\" (#57699)"},{"Id":"1050486296","IsPullRequest":true,"CreatedAt":"2021-11-11T01:42:03","Actor":"davidwengier","Number":"57694","RawContent":null,"Title":"[17.0] Fix line delta calculation for top-level code (#57556)","State":"open","Body":"Port Fix line delta calculation for top-level code (#57556) to 17.0\r\n\r\nFixes dev.azure.com/devdiv/DevDiv/_workitems/edit/1426286\r\n\r\n/cc @jinujoseph ","Url":"https://github.com/dotnet/roslyn/pull/57694","RelatedDescription":"Open PR \"[17.0] Fix line delta calculation for top-level code (#57556)\" (#57694)"},{"Id":"1050480652","IsPullRequest":true,"CreatedAt":"2021-11-11T01:28:25","Actor":"sharwell","Number":"57691","RawContent":null,"Title":"Stabilize test ChangeToRemoveAllGeneratedDocumentsUpdatesListCorrectly","State":"open","Body":"Fixes #56826","Url":"https://github.com/dotnet/roslyn/pull/57691","RelatedDescription":"Open PR \"Stabilize test ChangeToRemoveAllGeneratedDocumentsUpdatesListCorrectly\" (#57691)"},{"Id":"1050446990","IsPullRequest":true,"CreatedAt":"2021-11-11T00:18:48","Actor":"ryzngard","Number":"57689","RawContent":null,"Title":"Upgrade Microsoft.VisualStudio.Validation to 17.0.34","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/57689","RelatedDescription":"Open PR \"Upgrade Microsoft.VisualStudio.Validation to 17.0.34\" (#57689)"},{"Id":"1050416619","IsPullRequest":true,"CreatedAt":"2021-11-10T23:40:09","Actor":"333fred","Number":"57688","RawContent":null,"Title":"Move Default VB Version to 16.9","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/57093.\n","Url":"https://github.com/dotnet/roslyn/pull/57688","RelatedDescription":"Open PR \"Move Default VB Version to 16.9\" (#57688)"},{"Id":"1050415102","IsPullRequest":true,"CreatedAt":"2021-11-10T23:36:53","Actor":"allisonchou","Number":"57687","RawContent":null,"Title":"Revert \"Re-enable BuildWithCommandLine test\"","State":"open","Body":"It looks like BuildWithCommandLine still isn't working after being re-enabled in https://github.com/dotnet/roslyn/pull/57584.\r\nWe should disable it for the time being to prevent the test from blocking the pipeline.","Url":"https://github.com/dotnet/roslyn/pull/57687","RelatedDescription":"Open PR \"Revert \"Re-enable BuildWithCommandLine test\"\" (#57687)"},{"Id":"1050408235","IsPullRequest":true,"CreatedAt":"2021-11-10T23:25:21","Actor":"ryzngard","Number":"57686","RawContent":null,"Title":"Add basic implementation of new UI","State":"open","Body":"⚠️ DRAFT ⚠️\r\n\r\nThis adds the most basic implementation of the new rename UI. Will add screenshots and more details. ","Url":"https://github.com/dotnet/roslyn/pull/57686","RelatedDescription":"Open PR \"Add basic implementation of new UI\" (#57686)"},{"Id":"1050388524","IsPullRequest":true,"CreatedAt":"2021-11-10T22:58:43","Actor":"genlu","Number":"57685","RawContent":null,"Title":"Handling defaults provided by IAsyncCompletionDefaultsSource ","State":"open","Body":"The handling logic is based on the original implementation in VS (see [this](https://devdiv.visualstudio.com/DevDiv/_git/VS-Platform/pullrequest/353067)), with the additional change to fix [this bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1397440) and some general cleanup","Url":"https://github.com/dotnet/roslyn/pull/57685","RelatedDescription":"Open PR \"Handling defaults provided by IAsyncCompletionDefaultsSource \" (#57685)"},{"Id":"1050380386","IsPullRequest":true,"CreatedAt":"2021-11-10T22:44:16","Actor":"sharwell","Number":"57684","RawContent":null,"Title":"Remove the hang mitigating timeout from BuildWithCommandLine","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/57684","RelatedDescription":"Open PR \"Remove the hang mitigating timeout from BuildWithCommandLine\" (#57684)"},{"Id":"1050365623","IsPullRequest":true,"CreatedAt":"2021-11-10T22:19:21","Actor":"davidwengier","Number":"57683","RawContent":null,"Title":"[SourceLink] Use correct encoding for embedded text","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/57350\r\n\r\nThere is a minor code move here, so commit-by-commit is probably easiest.","Url":"https://github.com/dotnet/roslyn/pull/57683","RelatedDescription":"Open PR \"[SourceLink] Use correct encoding for embedded text\" (#57683)"},{"Id":"1050363626","IsPullRequest":false,"CreatedAt":"2021-11-10T22:16:21","Actor":"TessenR","Number":"57682","RawContent":null,"Title":"Roslyn fails to verify nullabilty after an equality expression with non-lifted struct operator accepting nullable values","State":"open","Body":"**Version Used**: \r\n```\r\nBranch main (9 Nov 2021)\r\nLatest commit 973b3aa by CyrusNajmabadi:\r\nMerge pull request #57632 from CyrusNajmabadi/depProjectChecksum\r\n\r\nMove hte dependent checksum computation directly into the CompilationTracker component\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code:\r\n```cs\r\n#nullable enable\r\nstruct S\r\n{\r\n    public static bool operator ==(S? left, S? right) => false;\r\n    public static bool operator !=(S? left, S? right) => false;\r\n    public override bool Equals(object? obj) => false;\r\n    public override int GetHashCode() => 0;\r\n\r\n    public S M0(out object x) { x = 42; return this; }\r\n\r\n    static void Main()\r\n    {\r\n        M1(null, null);\r\n    }\r\n    public static void M1(S? s, object? x)\r\n    {\r\n        _ = s?.M0(out x) != new S()\r\n            ? \"\"\r\n            : x.ToString();\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n`CS8602: Dereference of a possibly null reference.` warning reported for `x.ToString` in `M1`\r\n\r\n**Actual Behavior**:\r\nNo warnings at all in the program above. It crashes with a `NullReferenceException` at runtime.\r\n\r\n**Notes**:\r\nIt looks like Roslyn fails to differentiate lifted operators from explicitly provided user-defined operators that accept nullable values. \r\n\r\nRoslyn behavior would have been correct for an operator that accepts parameters of type `S` since such operator would've been lifted to accept `null` values.\r\n\r\nHowever, the operator used in this code sample is user defined which means that it can return anything e.g. based on whether a developer wants to treat an empty struct the same as null values or not. If a developer deemed it necessary to explicitly override the default lifted operator behavior by providing an operator that explicitly deals with nullable values it's not safe to assume anything about the operator's behavior.","Url":"https://github.com/dotnet/roslyn/issues/57682","RelatedDescription":"Open issue \"Roslyn fails to verify nullabilty after an equality expression with non-lifted struct operator accepting nullable values\" (#57682)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"705078013","IsPullRequest":true,"CreatedAt":"2020-11-01T06:31:20","Actor":"RalfKornmannEnvision","Number":"8345","RawContent":null,"Title":"ARM64&Unix: New unwinder","State":"closed","Body":"Implements a custom unwinder for ARM64 that does not need the generic CFI based libunwind functions. This way we only need to loop just once over all used registers instead of doing the complicated CFI process.This will improve the performances for everything that needs a stack walk.\r\n\r\nAdditional unwind data are generated and stored as part of the LSDA. \r\n-4 byte for a relative offset\r\n-3 byte for the CFA\r\n-3 byte for each register that is part of the prolog save\r\n-1 byte end marker\r\n\r\nWe still keep the CFI data for the debugger. Maybe the could be removed for a build without debug information.\r\n\r\nA possible future optimization would be to introduce a compact format for the information used by the most common cases. This could be stored in the relative offset. But compared to the replacement of libunwind the wins would be rather small.\r\n\r\nThe same can be done for any  other supported architecture but each one will require a custom unwind function","Url":"https://github.com/dotnet/corert/pull/8345","RelatedDescription":"Closed or merged PR \"ARM64&Unix: New unwinder\" (#8345)"},{"Id":"727422211","IsPullRequest":true,"CreatedAt":"2020-10-30T17:18:29","Actor":"tonerdo","Number":"8370","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"Opening this here, since I don't yet have a branch in the runtimelabs repo.\r\n\r\nThis PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass DynamicClass1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n    public Random Field4 = new Random();\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    static DynamicClass1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    DynamicClass1 class1 = new DynamicClass1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n    Console.WriteLine(class1.Field4);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(DynamicClass1.StaticField1);\r\n    Console.WriteLine(string.Empty);\r\n    Console.WriteLine(DynamicClass1.StaticField2);\r\n    Console.WriteLine(DynamicClass1.StaticField3);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n\r\n_Note: Thread statics on dynamically loaded types are currently unsupported_\r\n\r\ncc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/8370","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8370)"},{"Id":"729561793","IsPullRequest":false,"CreatedAt":"2020-10-26T13:26:47","Actor":"itpleb","Number":"8371","RawContent":null,"Title":"how run it on openwrt arm v7?","State":"open","Body":"how run it on openwrt arm v7?","Url":"https://github.com/dotnet/corert/issues/8371","RelatedDescription":"Open issue \"how run it on openwrt arm v7?\" (#8371)"},{"Id":"725550980","IsPullRequest":false,"CreatedAt":"2020-10-20T12:48:05","Actor":"unlimitedcoder2","Number":"8369","RawContent":null,"Title":"Fails to dotnet publish.","State":"open","Body":"I folowwed the instructons from [Here](https://github.com/dotnet/corert/tree/master/samples/WebApi) It fails to build because it cannot find objwriter\r\nThere is a `libobjwriter.so` in `.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/` and I copied it to the same dir but with the name `objwriter.so` and it did not resolve the issue.\r\n\r\n```\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/alex/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/build/Microsoft.NETCore.Native.targets(231,5): error MSB3073: The command \"\"/home/alex/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29408-02/tools/ilc\" @\"obj/Release/netcoreapp3.1/linux-x64/native/robloxility.ilc.rsp\"\" exited with code 1. [/home/alex/source/repos/robloxility/robloxility.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/8369","RelatedDescription":"Open issue \"Fails to dotnet publish.\" (#8369)"},{"Id":"706262388","IsPullRequest":false,"CreatedAt":"2020-10-17T14:39:00","Actor":"teobugslayer","Number":"8347","RawContent":null,"Title":"Missing implementation of System.OperatingSystem.IsWindows","State":"closed","Body":"Hi all,\r\n\r\nI am trying to write cross-platform code and my attempt to use `IsWindows` and `IsWindowsVersionAtLeast` fails:\r\n\r\n```\r\n  Generating native code\r\nEXEC : warning : Method `[ZX]ZX.ConsoleDisplay.Init(int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindows() [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\nEXEC : warning : Method `[ZX]ZX.Program.ValidateCanRun()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Boolean System.OperatingSystem.IsWindowsVersionAtLeast(Int32, Int32, Int32, Int32) [C:\\Dev\\ZX\\ZX\\ZX.csproj]\r\n```\r\n\r\nWhat are my options to rectify the problem?","Url":"https://github.com/dotnet/corert/issues/8347","RelatedDescription":"Closed issue \"Missing implementation of System.OperatingSystem.IsWindows\" (#8347)"},{"Id":"723206180","IsPullRequest":false,"CreatedAt":"2020-10-16T14:53:15","Actor":"atErik","Number":"8368","RawContent":null,"Title":"Great Project","State":"closed","Body":"Hi,  \r\nthis transpiler should be improved further.\r\ni have Starred this project.\r\n\r\nBTW , i have mentioned it here in SO(StackOverflow) site , would you please upvote it [here](https://stackoverflow.com/questions/64180191/) ( please upvote my Question+Answer, both ) if you find it useful or if you think it will be helpful for other users related to this type of transpiler projects.  \r\n( and please downvote user Caleb's answer, as that is incorrect answer . Correct-answer must answer my questions first , My question is about \"Transpiler\" tools & which \"transpiler\" tool can keep high-level algorithms/structures intact , Question/article is NOT about language learning, when to transpile & when-not, etc.  \r\nIn SO site, user Flimzy (and Caleb) doesn't give advice When \"C/C++\",etc to \"Go\" conversion related question is posted or when \"C/C++\" is criticized , But when \"Go\"-to-\"C/C++\",etc conversion Question is posted or when Google based products (like \"Go\"-language) are criticized , then those users, especially Flimzy \"Close\" the question & downvotes, & gives many un-asked advices, etc, Because those users are Google PUSHERS & google based product (like \"Go\") PUSHERS . Google Crimes<sup>[1](https://en.wikipedia.org/wiki/Criticism_of_Google), [2](https://en.wikipedia.org/wiki/Google_litigation), [3](https://www.bbc.com/news/business-52887340), [4](https://www.reuters.com/article/us-alphabet-google-privacy-lawsuit-idUSKBN23933H), [5](https://www.nytimes.com/2020/09/21/technology/google-antitrust-justice-department.html), [6](https://www.nationalreview.com/news/department-of-justice-state-attorneys-general-to-sue-google-for-antitrust-violations-report/)</sup>. Problems in \"Go\"<sup>[1](https://bravenewgeek.com/go-is-unapologetically-flawed-heres-why-we-use-it/)</sup>. )\r\n\r\nThanks.\r\n\r\nEDIT : added a line that i have Starred this project.","Url":"https://github.com/dotnet/corert/issues/8368","RelatedDescription":"Closed issue \"Great Project\" (#8368)"},{"Id":"723040495","IsPullRequest":false,"CreatedAt":"2020-10-16T09:07:22","Actor":"andreakarasho","Number":"8367","RawContent":null,"Title":"GitHub actions - clang fails on Ubuntu","State":"closed","Body":"I'm playing a little bit with gh actions.\r\nTo compile the application i need to setup 3 envs [windows, macOS, linux].\r\n\r\nOn Ubuntu i get this error when publishing the file:\r\n\r\n```\r\n/usr/bin/clang\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\n```","Url":"https://github.com/dotnet/corert/issues/8367","RelatedDescription":"Closed issue \"GitHub actions - clang fails on Ubuntu\" (#8367)"},{"Id":"719590628","IsPullRequest":true,"CreatedAt":"2020-10-16T02:54:11","Actor":"Rattenkrieg","Number":"8364","RawContent":null,"Title":"prevent runtime shutdown while foreground threads keep running","State":"closed","Body":"- [x] hack code\r\n- [x] make `GC_Scenarios._BinTree_thdtree_thdtree_._BinTree_thdtree_thdtree_sh`, `GC_Scenarios._BinTree_thdtreegrowingobj_thdtreegrowingobj_._BinTree_thdtreegrowingobj_thdtreegrowingobj_sh`, `GC_Scenarios._BinTree_thdtreelivingobj_thdtreelivingobj_._BinTree_thdtreelivingobj_thdtreelivingobj_sh` green\r\nI have issues with `./tests/runtest.sh release -coreclr Top200` either hanging on these three or exiting with 134 code.\r\nWhen I run it manually by `CORE_ROOT=./tests_downloaded/CoreCLR/Tests/Core_Root ./tests_downloaded/CoreCLR/GC/Scenarios/BinTree/thdtreegrowingobj/thdtreegrowingobj.sh` everithing works fine. I guess I've introduced some threading issue to xUnit runners.\r\n- [x] find some tests for foreground threads in CoreCLR or make our own \r\n\r\n\r\nSimplified logic adopted from CoreCLR with no additional states like `m_UnstartedThreadCount`, `m_PendingThreadCount` etc.\r\n","Url":"https://github.com/dotnet/corert/pull/8364","RelatedDescription":"Closed or merged PR \"prevent runtime shutdown while foreground threads keep running\" (#8364)"},{"Id":"714300525","IsPullRequest":true,"CreatedAt":"2020-10-15T00:10:17","Actor":"kant2002","Number":"8355","RawContent":null,"Title":"Display which type providing compiler helper is missing","State":"closed","Body":"I add these changes when I attempt to troubleshoot custom runtime and it failed that type was missing without indication why it want that type in first place. Have to know method which compiler want to use helps me troubleshoot what I should do.","Url":"https://github.com/dotnet/corert/pull/8355","RelatedDescription":"Closed or merged PR \"Display which type providing compiler helper is missing\" (#8355)"},{"Id":"721081874","IsPullRequest":false,"CreatedAt":"2020-10-14T02:25:12","Actor":"jkotas","Number":"8366","RawContent":null,"Title":"This repo is going to be archived on October 31, 2020","State":"open","Body":"We are centralizing all experimental projects based on dotnet/runtime in a new https://github.com/dotnet/runtimelab repo. More details about this effort are in https://github.com/dotnet/runtime/issues/35609 .\r\n\r\nRuntime optimized for AOT and RyuJIT codegen backend that were the two largest and most mature CoreRT components have been moved to their new place at https://github.com/dotnet/runtimelab/tree/feature/NativeAOT . The engineering infrastructure is setup, the packages are being published to a new NuGet feed and we are ready to start taking contributions. As with any new developer workflow, we know that there will be rough edges. Please help us smooth them out!\r\n\r\nCoreRT is dead, long live NativeAOT!\r\n\r\nWe would like to keep the experiments in dotnet/runtimelab more focused. Let’s use this issue to discuss what else would make sense to move over and in what form. I will be happy to sponsor experiments with significant interest. This includes the wasm target that @yowl has been relentlessly working on.","Url":"https://github.com/dotnet/corert/issues/8366","RelatedDescription":"Open issue \"This repo is going to be archived on October 31, 2020\" (#8366)"},{"Id":"718828491","IsPullRequest":false,"CreatedAt":"2020-10-13T13:40:40","Actor":"ryancheung","Number":"8363","RawContent":null,"Title":"Ubuntu 20.04 dotnet publish failed","State":"closed","Body":"Command: `dotnet publish -r linux-x64 -c Release`\r\nCoreRT publish failed in ubuntu 20.04 with the following build error:\r\n\r\n***\r\n  /usr/bin/clang\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  /usr/bin/ld: cannot find ***-lgssapi_krb5***\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n/home/ryan/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/build/Microsoft.NETCore.Native.targets(327,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL.o\" -o \"bin/Release/netcoreapp3.1/linux-x64/native/Client.DesktopGL\" /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libbootstrapper.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libRuntime.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.CoreLib.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/sdk/libSystem.Private.TypeLoader.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Globalization.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.IO.Compression.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Net.Security.Native.a /home/ryan/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-29228-02/framework/libSystem.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -Wl,--discard-all -Wl,--gc-sections\" exited with code 1. [/home/ryan/XXX/XXX_Client/Client.DesktopGL/Client.DesktopGL.csproj]\r\n***\r\n\r\nTemporary workaround I found:\r\n1. `cd /usr/lib/x86_64-linux-gnu`\r\n2. `sudo ln -s libgssapi_krb5.so.2.2 libgssapi_krb5.so`","Url":"https://github.com/dotnet/corert/issues/8363","RelatedDescription":"Closed issue \"Ubuntu 20.04 dotnet publish failed\" (#8363)"},{"Id":"720044433","IsPullRequest":false,"CreatedAt":"2020-10-13T10:03:24","Actor":"darderik","Number":"8365","RawContent":null,"Title":"Question about Marshalling of data structures across C++/C#","State":"closed","Body":"Hello, following the solution provided to the issue [#6984 ](https://github.com/dotnet/corert/issues/6984) , I tried playing around with the return of data structures from C++ to C#, as i couldn't find an issue related to this kind of operation, I thought about opening one in order to receive a few heads-up on the topic.\r\n\r\n\r\nC++ Code\r\n```\r\nstruct myStruct {\r\n    int ok;\r\n    string testStr;\r\n} ;\r\nextern \"C\" myStruct entry() {\r\n    myStruct myStu;\r\n    myStu.ok = 1;\r\n    myStu.testStr = \"hello\";\r\n    return myStu;\r\n}\r\n```\r\n\r\nC# Code\r\n```\r\nnamespace CppInterop\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic ok = entry();\r\n        }\r\n        [DllImport(\"*\")]\r\n        public extern static dynamic entry();\r\n    }\r\n}\r\n```\r\n\r\n\r\nAs expected, i get this error\r\n```\r\nUnhandled Exception: System.Exception: Method '[CppInterop]CppInterop.Program.entry()' requires marshalling that is not yet supported by this compiler.\r\n   at CppInterop.Program.entry() + 0x30\r\n   at CppInterop!<BaseAddress>+0x1e9b2d\r\nAborted\r\n```\r\n\r\nI was wondering if there was another way (as I know that dynamic isn't  aot friendly at all) to pass data structures (or objects) back from cpp , in the particular case that i know exactly how is the passed object structured.\r\nThank you for the help 👍 ","Url":"https://github.com/dotnet/corert/issues/8365","RelatedDescription":"Closed issue \"Question about Marshalling of data structures across C++/C#\" (#8365)"},{"Id":"718717259","IsPullRequest":false,"CreatedAt":"2020-10-10T22:48:19","Actor":"Rattenkrieg","Number":"8362","RawContent":null,"Title":"Error on tests/runtest.sh -coreclr All","State":"open","Body":"Tested on Fedora 32, as per `runtest.cmd` should affect Windows as well.\r\nOn \"all\" selection `-test_filter_path` parameter for `tests/CoreCLR/runtest.py` is omitted and we getting into this branch:\r\nhttps://github.com/dotnet/corert/blob/b06c72e12f24523dfe58717328a3de1b9f37a397/tests/CoreCLR/runtest.py#L1873-L1874\r\nThere is no `tests/issues.targets` file. Probably [this one](https://github.com/dotnet/runtime/blob/master/src/tests/issues.targets) meant to be used but somehow wasn't added. Git history gives no clue.\r\nI see this wasn't detected because `tests/runtest.sh -coreclr` defaults to Top200.","Url":"https://github.com/dotnet/corert/issues/8362","RelatedDescription":"Open issue \"Error on tests/runtest.sh -coreclr All\" (#8362)"},{"Id":"718107191","IsPullRequest":false,"CreatedAt":"2020-10-09T13:41:43","Actor":"maikebing","Number":"8361","RawContent":null,"Title":"What's the difference between corert  and   runtimelab‘s  NativeAOT ？","State":"closed","Body":" ","Url":"https://github.com/dotnet/corert/issues/8361","RelatedDescription":"Closed issue \"What's the difference between corert  and   runtimelab‘s  NativeAOT ？\" (#8361)"},{"Id":"715288580","IsPullRequest":true,"CreatedAt":"2020-10-09T12:23:48","Actor":"drvoss","Number":"8358","RawContent":null,"Title":"Update LoadLibrary.c","State":"closed","Body":"Support Visual C++ compiler","Url":"https://github.com/dotnet/corert/pull/8358","RelatedDescription":"Closed or merged PR \"Update LoadLibrary.c\" (#8358)"},{"Id":"717888122","IsPullRequest":false,"CreatedAt":"2020-10-09T06:24:33","Actor":"DenMpei","Number":"8360","RawContent":null,"Title":"Generating native code with Grpc.Core","State":"open","Body":"Good day!\r\n\r\nI hit the following issue:\r\ndotnet publish -r win-x64 leads to numerous compilation errors\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95550016-e56fdc80-0a10-11eb-86f1-3de6b52cbe58.png)\r\n\r\nInside the package is used Grpc.Core 2.28.1\r\n\r\n![image](https://user-images.githubusercontent.com/7982187/95549756-85793600-0a10-11eb-8411-a9149078d7ea.png)\r\n\r\nСompile with Microsoft.DotNet.ILCompiler 1.0.0-alpha-29408-02\r\n\r\nAdding code from [this issue](https://github.com/dotnet/corert/issues/6375) doesn't help\r\n\r\nI ask to give advice to solve the problem.\r\nRegards.","Url":"https://github.com/dotnet/corert/issues/8360","RelatedDescription":"Open issue \"Generating native code with Grpc.Core\" (#8360)"},{"Id":"715809353","IsPullRequest":false,"CreatedAt":"2020-10-06T15:48:07","Actor":"kant2002","Number":"8359","RawContent":null,"Title":"\"The input line is too long\" during build","State":"open","Body":"When I build CoreRT from command line in x64 dev command line there error after some time\r\n\r\n```\r\n>build.cmd\r\nDoing a clean build\r\n\r\nCould Not Find D:\\d\\kant\\GitHub\\dotnet\\corert\\bin\\Logs\\*_Windows_NT__x64__Debug.*\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\nThe input line is too long.\r\nThe syntax of the command is incorrect.\r\n```\r\n\r\nMy prior experience suggest that this is happens during call of \r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n```\r\n\r\nThis is happens IIRC due to long PATH variable.","Url":"https://github.com/dotnet/corert/issues/8359","RelatedDescription":"Open issue \"\"The input line is too long\" during build\" (#8359)"},{"Id":"713872400","IsPullRequest":true,"CreatedAt":"2020-10-05T13:52:47","Actor":"yowl","Number":"8352","RawContent":null,"Title":"Wasm: dont `RhpAssignRef` static fields","State":"closed","Body":"This PR changes the implementation of `stsfld` so that `RhpAssignRef` is not called when storing a gc  pointer in a static field.  For example, previous to this change, https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/System.Private.CoreLib/shared/System/AttributeUsageAttribute.cs#L23 resulted in a call to `RhpAssignRef` in the cctor.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/8352","RelatedDescription":"Closed or merged PR \"Wasm: dont `RhpAssignRef` static fields\" (#8352)"},{"Id":"709808614","IsPullRequest":true,"CreatedAt":"2020-10-05T03:15:02","Actor":"yowl","Number":"8350","RawContent":null,"Title":"Wasm: add support for most of the conv_ovf operations","State":"closed","Body":"This PR adds support for overflow checking for Wasm for most of the Conv_Ovf opcodes. Still to do are two of native int: `Conv_Ovf_I`, `Conv_Ovf_I_Un` . (`Conv_Ovf_U` is included here).  Was going to wait until c#9 was available to do the missing ones.","Url":"https://github.com/dotnet/corert/pull/8350","RelatedDescription":"Closed or merged PR \"Wasm: add support for most of the conv_ovf operations\" (#8350)"},{"Id":"714361340","IsPullRequest":true,"CreatedAt":"2020-10-05T02:02:26","Actor":"yowl","Number":"8357","RawContent":null,"Title":"Wasm: clean up ovf switch for floats.","State":"closed","Body":"This PR removes the TODO and switches for the add/sub/mul _ovf op codes for floats as they dont apply.","Url":"https://github.com/dotnet/corert/pull/8357","RelatedDescription":"Closed or merged PR \"Wasm: clean up ovf switch for floats.\" (#8357)"},{"Id":"714319950","IsPullRequest":false,"CreatedAt":"2020-10-04T13:58:23","Actor":"kengwang","Number":"8356","RawContent":null,"Title":"\"Segmentation fault\" on CentOS 7.8","State":"open","Body":"When I tried to start the program, it echoed `Segmentation fault`\r\nIt is alright running on Ubuntu.\r\n\r\n> Build on ubuntu-16.04\r\n> Run on CentOS Linux release 7.8.2003 (Core)\r\n\r\nHow could i deal with it","Url":"https://github.com/dotnet/corert/issues/8356","RelatedDescription":"Open issue \"\"Segmentation fault\" on CentOS 7.8\" (#8356)"},{"Id":"714296090","IsPullRequest":false,"CreatedAt":"2020-10-04T11:45:29","Actor":"kant2002","Number":"8354","RawContent":null,"Title":"CoreRT slower then regular .NET","State":"open","Body":"I thinking about checking how CoreRT works for the Wavelets and decide to use https://github.com/codeprof/TurboWavelets.Net as starting point.\r\n\r\nI migrate project to new SDK format and add Benchmarks.Net using samples provided.\r\n\r\nTo my disappointment regular .NET seems to be faster then CoreRT. \r\n\r\n```\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.12.1.1420-nightly, OS=Windows 10.0.18363.1082 (1909/November2019Update/19H2)\r\nIntel Core i7-6700HQ CPU 2.60GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET SDK=5.0.100-rc.1.20452.10\r\n  [Host]     : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  .NET 5.0   : .NET 5.0.0 (5.0.20.45114), X64 RyuJIT\r\n  CoreRt 5.0 : .NET 5.0.29330.02 @BuiltBy: dlab14-DDVSOWINAGE075 @Branch: master @Commit: 145402e00724acbc9e7636739140fb84f7d64845, X64 AOT\r\n\r\n\r\n|                Method |        Job |    Runtime |      Mean |    Error |   StdDev | Ratio | RatioSD |\r\n|---------------------- |----------- |----------- |----------:|---------:|---------:|------:|--------:|\r\n| Waveletimageupscaling |   .NET 5.0 |   .NET 5.0 | 155.72 ms | 3.267 ms | 9.426 ms |  1.00 |    0.00 |\r\n| Waveletimageupscaling | CoreRt 5.0 | CoreRt 5.0 | 167.68 ms | 3.303 ms | 9.478 ms |  1.08 |    0.09 |\r\n|                       |            |            |           |          |          |       |         |\r\n|      AdaptiveDeadzone |   .NET 5.0 |   .NET 5.0 |  30.40 ms | 0.588 ms | 0.764 ms |  1.00 |    0.00 |\r\n|      AdaptiveDeadzone | CoreRt 5.0 | CoreRt 5.0 |  33.79 ms | 0.683 ms | 1.763 ms |  1.14 |    0.08 |\r\n```\r\n\r\nSo I have generic questions.\r\n1. Does this results expected with CPU-bound workloads.\r\n2. What can I do to look more closely on this particular case.","Url":"https://github.com/dotnet/corert/issues/8354","RelatedDescription":"Open issue \"CoreRT slower then regular .NET\" (#8354)"},{"Id":"713880348","IsPullRequest":true,"CreatedAt":"2020-10-02T22:17:06","Actor":"yowl","Number":"8353","RawContent":null,"Title":"Wasm: Use the property for ShadowStackTop to ensure global exists","State":"closed","Body":"Depending on input, the first call to a RawPInvoke could occur before the shadow stack global was added.  This change requests the global via the property getter to ensure it is created before use.","Url":"https://github.com/dotnet/corert/pull/8353","RelatedDescription":"Closed or merged PR \"Wasm: Use the property for ShadowStackTop to ensure global exists\" (#8353)"},{"Id":"710664867","IsPullRequest":true,"CreatedAt":"2020-09-29T11:40:22","Actor":"tonerdo","Number":"8351","RawContent":null,"Title":"[Interpreter] Static constructors and field access","State":"closed","Body":"This PR adds support for instance and static fields on a reference type. It interprets the following opcodes:\r\n* `ldfld`\r\n* `ldsfld`\r\n* `stfld`\r\n* `stsfld`\r\n\r\nAs a consequence of adding static field support, I also added support for interpreting static constructors on dynamically loaded types. The following scenario is now supported:\r\n\r\n```csharp\r\nclass Class1\r\n{\r\n    public string Field1;\r\n    public int Field2;\r\n    public float Field3;\r\n\r\n    public static string StaticField1;\r\n    public static int StaticField2;\r\n    public static float StaticField3;\r\n\r\n    [ThreadStatic]\r\n    public static int ThreadStaticField1;\r\n\r\n    static Class1()\r\n    {\r\n        StaticField1 = \"statically nice!\";\r\n        StaticField2 = 10;\r\n        StaticField3 = 3.56f;\r\n        ThreadStaticField1 = 56;\r\n    }\r\n}\r\n\r\n.....\r\n\r\npublic static void DoFields()\r\n{\r\n    Class1 class1 = new Class1();\r\n    class1.Field1 = \"nice\";\r\n    class1.Field2 = 23;\r\n    class1.Field3 = 2.5f;\r\n\r\n    Console.WriteLine(class1.Field1);\r\n    Console.WriteLine(class1.Field2);\r\n    Console.WriteLine(class1.Field3);\r\n}\r\n\r\npublic static void DoStaticFields()\r\n{\r\n    Console.WriteLine(Class1.StaticField1);\r\n    Console.WriteLine(String.Empty);\r\n    Console.WriteLine(Class1.StaticField2);\r\n    Console.WriteLine(Class1.StaticField3);\r\n    Console.WriteLine(Class1.ThreadStaticField1);\r\n}\r\n```\r\n\r\nThe interpreter will happily load instance and static fields on both dynamically loaded types and types compiled into the native executable, while ensuring that static constructors have been run in both cases.\r\n","Url":"https://github.com/dotnet/corert/pull/8351","RelatedDescription":"Closed or merged PR \"[Interpreter] Static constructors and field access\" (#8351)"},{"Id":"709649946","IsPullRequest":false,"CreatedAt":"2020-09-27T02:19:00","Actor":"yowl","Number":"8349","RawContent":null,"Title":"Wasm: conv_r_un/4 should set to postive or negative infinity when too large","State":"open","Body":"","Url":"https://github.com/dotnet/corert/issues/8349","RelatedDescription":"Open issue \"Wasm: conv_r_un/4 should set to postive or negative infinity when too large\" (#8349)"},{"Id":"709582502","IsPullRequest":false,"CreatedAt":"2020-09-26T17:59:41","Actor":"yowl","Number":"8348","RawContent":null,"Title":"Question: ImportConvert unsigned parameter is always false","State":"open","Body":"`ImportConvert` in https://github.com/dotnet/corert/blob/145402e00724acbc9e7636739140fb84f7d64845/src/Common/src/TypeSystem/IL/ILImporter.cs#L745-L766 is always passed `false` for the `unsigned` parameter (the last parameter), even on the unsigned conversions, `conv_ovf_u1`  Is there a reason for that?","Url":"https://github.com/dotnet/corert/issues/8348","RelatedDescription":"Open issue \"Question: ImportConvert unsigned parameter is always false\" (#8348)"},{"Id":"704206710","IsPullRequest":true,"CreatedAt":"2020-09-22T00:29:41","Actor":"RalfKornmannEnvision","Number":"8343","RawContent":null,"Title":"ARM64: RhpGcPoll","State":"closed","Body":"- Initial port of GCProbe.S for ARM64\r\n- Ensure RhpGcPoll & RhpGcPollRare are working","Url":"https://github.com/dotnet/corert/pull/8343","RelatedDescription":"Closed or merged PR \"ARM64: RhpGcPoll\" (#8343)"},{"Id":"705253015","IsPullRequest":false,"CreatedAt":"2020-09-21T03:12:25","Actor":"Powerlated","Number":"8346","RawContent":null,"Title":"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method ","State":"open","Body":"```\r\nUnhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception: Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception:\r\n  Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,ShaderType,string&,int32*)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,ShaderType,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(uint32,All,string&,int32[])'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()ILCompiler.CodeGenerationFailedException: Code generation failed for method '[OpenTK]OpenTK.Graphics.ES30.GL+Qcom.ExtGetProgramBinarySource(int32,All,string&,int32&)'\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nI am attempting to `dotnet publish -r win-x64 -c Release` a program and I receieve this error after the `Generating compatible native code.` message.","Url":"https://github.com/dotnet/corert/issues/8346","RelatedDescription":"Open issue \"Unhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed for method \" (#8346)"},{"Id":"704803194","IsPullRequest":true,"CreatedAt":"2020-09-19T05:02:42","Actor":"toddsharpe","Number":"8344","RawContent":null,"Title":"Merge pull request #1 from dotnet/master","State":"closed","Body":"Updating CoreRT","Url":"https://github.com/dotnet/corert/pull/8344","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from dotnet/master\" (#8344)"},{"Id":"704118291","IsPullRequest":true,"CreatedAt":"2020-09-18T14:58:08","Actor":"RalfKornmannEnvision","Number":"8342","RawContent":null,"Title":"ARM64: Additional debug checks during exception handling","State":"closed","Body":"- Reenable stored register trashing as the debugger has no issues with it.\r\n- Implement missing call to RhpValidateExInfoPop","Url":"https://github.com/dotnet/corert/pull/8342","RelatedDescription":"Closed or merged PR \"ARM64: Additional debug checks during exception handling\" (#8342)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"1051158536","IsPullRequest":true,"CreatedAt":"2021-11-11T18:24:08","Actor":"dotnet-maestro[bot]","Number":"22553","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211111.2\r\n- **Date Produced**: November 11, 2021 3:55:38 PM UTC\r\n- **Commit**: cb90cdc893f8f731606fbe88c826a7eb3027f35e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.2][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/a3f3fcf...cb90cdc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22553","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#22553)"},{"Id":"1050966838","IsPullRequest":true,"CreatedAt":"2021-11-11T16:14:57","Actor":"dotnet-maestro[bot]","Number":"22550","RawContent":null,"Title":"[main] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 7.0.0-alpha.1.21528.4 to 7.0.0-alpha.1.21560.1 (parent: Microsoft.WindowsDesktop.App.Ref)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 43b77b68-0b3c-49dd-3915-08d8e9750bf8\r\n- **Build**: 20211110.2\r\n- **Date Produced**: November 10, 2021 3:58:01 PM UTC\r\n- **Commit**: 2b1999f024ca946d3122ec1edf7f471e45570ed2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **VS.Redist.Common.WindowsDesktop.TargetingPack.x64.7.0**: [from 7.0.0-alpha.1.21556.1 to 7.0.0-alpha.1.21560.2][1]\r\n  - **VS.Redist.Common.WindowsDesktop.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21556.1 to 7.0.0-alpha.1.21560.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21556.1 to 7.0.0-alpha.1.21560.2][1]\r\n  - **Microsoft.WindowsDesktop.App.Ref**: [from 7.0.0-alpha.1.21556.1 to 7.0.0-alpha.1.21560.2][1]\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: [from 7.0.0-alpha.1.21528.4 to 7.0.0-alpha.1.21560.1][2]\r\n\r\n[1]: https://github.com/dotnet/windowsdesktop/compare/fe520cc...2b1999f\r\n[2]: https://github.com/dotnet/wpf/compare/a74926d...bf34d2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:43b77b68-0b3c-49dd-3915-08d8e9750bf8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22550","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/windowsdesktop\" (#22550)"},{"Id":"1051115875","IsPullRequest":false,"CreatedAt":"2021-11-11T15:47:51","Actor":"KannanKrish","Number":"22552","RawContent":null,"Title":"Automatically import usings for References","State":"open","Body":"### To Reduce the Using Include line for using `<ImplicitUsings>enable</ImplicitUsings>`\r\n\r\n### Description\r\nCurrently I am using `<ImplicitUsings>enable</ImplicitUsings>`\r\n\r\nIn **ItemGroup** I have mulitple Package references & Project Refrences for example\r\n\r\n`<PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"5.0.12\" />`\r\n\r\nThen I am using \r\n\r\n`<Using Include=\"Microsoft.EntityFrameworkCore\" />`\r\n\r\nSo I have enabled the ImplicitUsings then option for automatically include the Usings for Project Reference & Package Reference to avoid extra line.\r\n\r\n<del>`<Using Include=\"Microsoft.EntityFrameworkCore\" />`</del>","Url":"https://github.com/dotnet/sdk/issues/22552","RelatedDescription":"Open issue \"Automatically import usings for References\" (#22552)"},{"Id":"1050550418","IsPullRequest":true,"CreatedAt":"2021-11-11T14:42:32","Actor":"dotnet-maestro[bot]","Number":"22543","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211111.1\r\n- **Date Produced**: November 11, 2021 12:28:41 PM UTC\r\n- **Commit**: a3f3fcf394e10d8ce25599cce12b5889db52a7b5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21560.10 to 7.0.0-alpha.1.21561.1][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/0c840a1...a3f3fcf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22543","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#22543)"},{"Id":"1050992427","IsPullRequest":false,"CreatedAt":"2021-11-11T13:41:43","Actor":"eduherminio","Number":"22551","RawContent":null,"Title":"Uninstall .NET 6 SDK preview versions in Windows","State":"open","Body":"According to `dotnet info` I have .NET 6 preview-7 and rc-1 installed on my machine, but nor Windows or `dotnet-core-uninstall` can find them, so I'm not sure how to get rid of them.\r\n\r\nI currently only have VS 2019 and 2022 installed, no 2022-preview any more.\r\n\r\n![image](https://user-images.githubusercontent.com/11148519/141308012-55e795c5-35fb-4895-a63e-137d53a80332.png)\r\n ","Url":"https://github.com/dotnet/sdk/issues/22551","RelatedDescription":"Open issue \"Uninstall .NET 6 SDK preview versions in Windows\" (#22551)"},{"Id":"1050818061","IsPullRequest":true,"CreatedAt":"2021-11-11T11:54:33","Actor":"dotnet-maestro[bot]","Number":"22548","RawContent":null,"Title":"[main] Update dependencies from dotnet/roslyn","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 03acf5d2-59bd-494b-c390-08d8e9750d9d\r\n- **Build**: 20211110.6\r\n- **Date Produced**: November 11, 2021 9:41:02 AM UTC\r\n- **Commit**: ac39185dbee0e1c4ba09282eb69ce75cccf7654a\r\n- **Branch**: refs/heads/release/dev17.0-vs-deps\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.CodeAnalysis.CSharp.Workspaces**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n  - **Microsoft.CodeAnalysis.CSharp.Features**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n  - **Microsoft.CodeAnalysis.CSharp**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n  - **Microsoft.CodeAnalysis**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n  - **Microsoft.CodeAnalysis.Workspaces.MSBuild**: [from 4.0.1-1.21558.15 to 4.0.1-1.21560.6][1]\r\n\r\n[1]: https://github.com/dotnet/roslyn/compare/b3e6910...ac39185\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:03acf5d2-59bd-494b-c390-08d8e9750d9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22548","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/roslyn\" (#22548)"},{"Id":"1050867264","IsPullRequest":false,"CreatedAt":"2021-11-11T11:14:42","Actor":"87Alex","Number":"22549","RawContent":null,"Title":"Icon.Save(stream) each time returns different results","State":"open","Body":"We use the following code to compare two icons:\r\n```\r\nprivate static bool IconEquals(Icon icon1, Icon icon2) {\r\n                var stream1 = new System.IO.MemoryStream();\r\n                icon1.Save(stream1);\r\n                var stream2 = new System.IO.MemoryStream();\r\n                icon2.Save(stream2);\r\n                return System.Linq.Enumerable.SequenceEqual(stream1.ToArray(), stream2.ToArray());\r\n        }\r\n```\r\nWith the net6.0 release the stream.ToArray() method each time returns different results for the same Icon.\r\nYou can modify the IconEquals as follows and it will return false:\r\n```\r\nprivate static bool IconEquals(Icon icon1) {\r\n                var stream1 = new System.IO.MemoryStream();\r\n                icon1.Save(stream1);\r\n                var stream2 = new System.IO.MemoryStream();\r\n                icon1.Save(stream2);\r\n                return System.Linq.Enumerable.SequenceEqual(stream1.ToArray(), stream2.ToArray());\r\n        }\r\n```","Url":"https://github.com/dotnet/sdk/issues/22549","RelatedDescription":"Open issue \"Icon.Save(stream) each time returns different results\" (#22549)"},{"Id":"1050745179","IsPullRequest":false,"CreatedAt":"2021-11-11T09:01:36","Actor":"sangeethnandakumar","Number":"22547","RawContent":null,"Title":"Improvising The HotReload Feature","State":"open","Body":"I was trying to write a huge REST API project and I thought hot reload could make me so much more productive.\r\n### As an evolving API requires lot of DTO changes, Model changes, Property modifications, Request/Response changes etc.. dotnet hot reload isn't good for any of these code evolving change scenarios.\r\n\r\n_I certainly know and understand the underlying issues for not be able to use hot reload for everything but without these I believe most uses cases aren't covered._\r\n\r\n**It would be awesome to be able to change models, properties & function attributes on the go with hot reload.**\r\n\r\nTo my use case dotnet hot reload is simply an extended version of **\"changing code while debugging line by line\"**, That already on dotnet for years. Would love to see it became more useful.","Url":"https://github.com/dotnet/sdk/issues/22547","RelatedDescription":"Open issue \"Improvising The HotReload Feature\" (#22547)"},{"Id":"1050681899","IsPullRequest":false,"CreatedAt":"2021-11-11T08:04:04","Actor":"laurentkempe","Number":"22546","RawContent":null,"Title":".NET SDK 5.0.402 to .NET SDK 5.0.403 compilation failure with CA1416: Validate platform compatibility","State":"open","Body":"### Describe the bug\r\n\r\nOur solution build without errors on .NET SDK 5.0.402 but fails when we update it to .NET SDK 5.0.403 with CA1416: Validate platform compatibility.\r\n\r\nWe are using our own `AssemblyInfo.cs` as described in [TFM target platforms / Note](https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1416#tfm-target-platforms) with the attribute `[assembly: SupportedOSPlatform(\"windows10.0.19041\")]`.\r\n\r\nWe use \r\n\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n    <!-- Fail build when there is warnings -->\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n\r\nand following `global.json`\r\n\r\n    {\r\n      \"sdk\": {\r\n        \"version\": \"5.0.403\",\r\n        \"allowPrerelease\": false,\r\n        \"rollForward\": \"disable\"\r\n      }\r\n    }\r\n\r\n### To Reproduce\r\n\r\nHere is a repo to reproduce the issue https://github.com/laurentkempe/dotnetsdk5.0.403\r\n\r\nAfter cloning, compile the solution, you will get the following issue\r\n\r\n![image](https://user-images.githubusercontent.com/272612/141260464-444d5201-6762-45ec-a43e-f9c4503fd13c.png)\r\n\r\nChange `global.json` to 5.0.402\r\n\r\n    {\r\n      \"sdk\": {\r\n        \"version\": \"5.0.402\",\r\n        \"allowPrerelease\": false,\r\n        \"rollForward\": \"disable\"\r\n      }\r\n    }\r\n\r\nCompile \r\n\r\n![image](https://user-images.githubusercontent.com/272612/141260582-a0834eb0-34e4-47dc-be13-6c339132191e.png)\r\n\r\n### Further technical details\r\n- output of `dotnet --info`\r\n\r\n    .NET SDK (reflecting any global.json):\r\n     Version:   5.0.402\r\n     Commit:    e9d3381880\r\n    \r\n    Runtime Environment:\r\n     OS Name:     Windows\r\n     OS Version:  10.0.19043\r\n     OS Platform: Windows\r\n     RID:         win10-x64\r\n     Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.402\\\r\n    \r\n    Host (useful for support):\r\n      Version: 6.0.0\r\n      Commit:  4822e3c3aa\r\n    \r\n    .NET SDKs installed:\r\n      2.1.526 [C:\\Program Files\\dotnet\\sdk]\r\n      2.1.818 [C:\\Program Files\\dotnet\\sdk]\r\n      2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n      3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n      3.1.414 [C:\\Program Files\\dotnet\\sdk]\r\n      3.1.415 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.104 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.209 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.302 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.303 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.402 [C:\\Program Files\\dotnet\\sdk]\r\n      5.0.403 [C:\\Program Files\\dotnet\\sdk]\r\n      6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n    \r\n    .NET runtimes installed:\r\n      Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n      Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.AspNetCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n      Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.NETCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n      Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n      Microsoft.WindowsDesktop.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n- IDE and its version\r\n\r\nVisual Studio 2022\r\nMicrosoft Visual Studio Enterprise 2022\r\nVersion 17.0.0\r\nVisualStudio.17.Release/17.0.0+31903.59\r\n\r\n![image](https://user-images.githubusercontent.com/272612/141261250-d2955dd3-41ad-4da1-996b-8823c487a76a.png)\r\n\r\ndotnet build \r\n\r\n![image](https://user-images.githubusercontent.com/272612/141261524-d72c33ff-4f64-432c-bf61-788f59148aad.png)\r\n\r\nRider 2021.2.2\r\n\r\n![image](https://user-images.githubusercontent.com/272612/141260464-444d5201-6762-45ec-a43e-f9c4503fd13c.png)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/22546","RelatedDescription":"Open issue \".NET SDK 5.0.402 to .NET SDK 5.0.403 compilation failure with CA1416: Validate platform compatibility\" (#22546)"},{"Id":"1050649446","IsPullRequest":false,"CreatedAt":"2021-11-11T07:14:38","Actor":"stebueh","Number":"22545","RawContent":null,"Title":"dotnet run option '--no-dependencies' is passed on as argument to application","State":"open","Body":"<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nWhen running an application from the CLI using 'dotnet run', the '--no-dependencies' option is passed on as argument to the application. This seems to be a regression in .NET 6 - using a global.json file to reference SDKs 5.0.x or 3.1.x, the option is not passed on to the application.\r\n\r\n### To Reproduce\r\nRun the following code from the command line using 'dotnet run', setting the '--no-dependencies' option, e.g. 'dotnet run --no-dependencies -- Lorem ipsum dolor'.\r\n\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApp2\r\n{\r\n    internal class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine($\"args.Length: {args?.Length ?? 0}\");\r\n            if (args != null)\r\n            {\r\n                for (int i = 0; i < args.Length; i++)\r\n                {\r\n                    Console.WriteLine($\"args[{i}]: {args[i]}\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\n### Exceptions (if any)\r\n<!-- \r\nInclude the exception you get when facing this issue\r\n-->\r\n\r\n### Further technical details\r\n```\r\n.NET SDK (gemäß \"global.json\"):\r\n Version:   6.0.100\r\n Commit:    9e8b04bbff\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.22000\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0\r\n  Commit:  4822e3c3aa\r\n\r\n.NET SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.526 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.415 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.104 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.303 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.402 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.403 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/22545","RelatedDescription":"Open issue \"dotnet run option '--no-dependencies' is passed on as argument to application\" (#22545)"},{"Id":"1050587621","IsPullRequest":false,"CreatedAt":"2021-11-11T05:24:18","Actor":"DamianEdwards","Number":"22544","RawContent":null,"Title":"`dotnet run` of a newly created ASP.NET Core project on MacOS prompts for password to allow keychain access","State":"open","Body":"Feedback from https://twitter.com/leastprivilege/status/1458505534093643776\r\n\r\n## Problem\r\nWhen using `dotnet run` on a newly created ASP.NET Core project on MacOS, the user is prompted by the OS to allow access to the Keychain so that the app can access the HTTPS developer certificate. After entering their password and clicking \"Allow\" or \"Always Allow\" the app starts. This process must be repeated for every new ASP.NET Core project created.\r\n\r\n*MacOS prompt showing message \"Host6 wants to access key \"tmpE4viKq\" in your keychain.\"\r\nA textbox for the password and three buttons are also shown: Always Allow, Deny, Allow.*\r\n\r\n![image](https://user-images.githubusercontent.com/249088/141239495-4b526dae-0342-4d17-90d3-210e29d7dc44.png)\r\n\r\n## Details\r\nIn .NET 6 `dotnet run` was changed to launch the app via the AppHost executable rather than via `dotnet MyApp.dll`. While this has advantages (e.g. support for cross-architecture app launching, the process name being the project name, etc.) it results in every new project being a new executable from the OS's security point-of-view, and thus requires each new web app to explicitly be granted access to the Keychain.\r\n\r\nNote the issue doesn't occur when launching via Visual Studio for Mac 2022 as it doesn't use `dotnet run` to launch the app.\r\n\r\n## Workaround\r\nTo workaround this issue the [`<UseAppHost>` MSBuild property](https://docs.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#useapphost) can be set in the project file to `false`, e.g.:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <UseAppHost>false</UseAppHost>\r\n</PropertyGroup>\r\n```\r\n\r\nYou can also pass this property as part of the `dotnet run` command itself:\r\n\r\n```command\r\n> dotnet run -p:UseAppHost=true\r\n```\r\n\r\nNote that this property completely disables a native executable being created for the project during build, not just in the context of launching the project via `dotnet run`.\r\n\r\n## Proposed Changes\r\nWe should ensure users are not faced with this prompt as part of the default experience for creating and running ASP.NET Core apps on MacOS.\r\n\r\nTo that end, we could consider changing the default value for the `<UseAppHost>` MSBuild property to `false` when a project uses the `Microsoft.NET.Sdk.Web` SDK. As noted above however this would actually disable the production of a native executable during build, and so has side-effects beyond the scope of launching the project via `dotnet run`. For that reason we should likely consider alternate approaches:\r\n- We could consider adding support to `dotnet run` for controlling this behavior via a new environment variable, e.g. `DOTNET_USE_APP_HOST`, such that it could be set in the scope of the machine, profile, session, or process launch.\r\n- We could also consider adding a new property to `launchSettings.json` under the `\"profiles\"` section, placed on a profile, that controls whether the project is launched via the AppHost or not when launched from `dotnet run` or an IDE (i.e. this property should also be honored in environments that launch the project using the AppHost today, like Visual Studio).\r\n  - Note that while `launchSettings.json` supports setting environment variables for the launched app process, attempting to use that to set the variable proposed above (`DOTNET_USE_APP_HOST`) would not work as that variable needs to be set in the context of `dotnet run` itself, not the app subsequently being launched).\r\n","Url":"https://github.com/dotnet/sdk/issues/22544","RelatedDescription":"Open issue \"`dotnet run` of a newly created ASP.NET Core project on MacOS prompts for password to allow keychain access\" (#22544)"},{"Id":"1050355952","IsPullRequest":true,"CreatedAt":"2021-11-11T04:03:52","Actor":"dotnet-maestro[bot]","Number":"22541","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211110.10\r\n- **Date Produced**: November 10, 2021 9:55:25 PM UTC\r\n- **Commit**: 0c840a17fd42bc00cd379eb8ce4006eb5ba6dab1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21560.6 to 7.0.0-alpha.1.21560.10][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/0607481...0c840a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22541","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#22541)"},{"Id":"1050402045","IsPullRequest":true,"CreatedAt":"2021-11-10T23:15:05","Actor":"pranavkm","Number":"22542","RawContent":null,"Title":"Ensure references added using \"Reference\" are correctly copied in BlazorWASM projects","State":"open","Body":"As part of .NET6, we rely on OriginalItemSpec to copy items around. Unfortunately there is an issue with RAR where references\r\nadded using `Reference` have an incorrect ItemSpec (intentionally so). This change works around this case by special casing references from projects where the OriginalItemSpec differs from it's full path.\r\n\r\nFixes https://github.com/dotnet/aspnetcore/issues/37574\r\n\r\n--- ---\r\n\r\n\r\n### Description / Customer impact\r\n\r\nConsider a 6.0 Blazor WebAssembly project that references a class library (ClassLibrary1) with a binary added via `Reference` / `HintPath` (MyReferencedBinary.dll). In 6.0, running this project results in a runtime failure. Turns out the SDK does something to effect of:\r\n\r\n```\r\ncp ClassLibrary.dll $BlazorWebAppPath/bin/Debug/MyReferencedBinary.dll\r\n```\r\n\r\nThe root cause is a odd behavior with `ResolveAssemblyReference` that records the `OriginalItemSpec` for `MyReferencedBinary.dll` as `ClassLibrary.dll` which is what Blazor's SDK uses to copy files around. The workaround is to ignore the `OriginalItemSpec` for assemblies resolved as project references and use their actual `ItemSpec` instead.\r\n\r\nWe had a customer reach out to us since it blocks them from upgrading to 6.0.\r\n\r\n### Regression\r\n[x] Yes - .NET 6 RC1\r\n[ ] No\r\n\r\n### Testing\r\n* [x] Manual (Verified the user submitted repro is fixed) \r\n* [x] Automated (added SDK tests to verify this is fixed)\r\n\r\n### Risk\r\n* [ ] High\r\n* [ ] Medium\r\n* [x] Low\r\n\r\nThe workaround is fairly narrow and reasonable, and we have reasonable e2e test coverage, but there's a small risk it regresses another esoteric project configuration we haven't thought about / have tests for. ","Url":"https://github.com/dotnet/sdk/pull/22542","RelatedDescription":"Open PR \"Ensure references added using \"Reference\" are correctly copied in BlazorWASM projects\" (#22542)"},{"Id":"1050345145","IsPullRequest":true,"CreatedAt":"2021-11-10T21:50:46","Actor":"dotnet-maestro[bot]","Number":"22540","RawContent":null,"Title":"[release/6.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.DotNet.XliffTasks**: from 1.0.0-beta.21514.1 to 1.0.0-beta.21431.1 (parent: Microsoft.DotNet.Arcade.Sdk)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:d0f0eb7b-5dae-4e5d-39b2-08d960f4ca81)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: d0f0eb7b-5dae-4e5d-39b2-08d960f4ca81\r\n- **Build**: 20211110.2\r\n- **Date Produced**: November 10, 2021 5:15:38 PM UTC\r\n- **Commit**: ee9b7f19853685805c612103282c8d9486c7db86\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 1.0.0-beta.21514.1 to 1.0.0-beta.21431.1][2]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/8d4cde5...ee9b7f1\r\n[2]: https://github.com/dotnet/xliff-tasks/compare/7c0f471...bc32331\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 6.0.100\r\n\r\n[marker]: <> (End:d0f0eb7b-5dae-4e5d-39b2-08d960f4ca81)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22540","RelatedDescription":"Open PR \"[release/6.0.1xx] Update dependencies from dotnet/arcade\" (#22540)"},{"Id":"1050337066","IsPullRequest":true,"CreatedAt":"2021-11-10T21:39:42","Actor":"dotnet-maestro[bot]","Number":"22539","RawContent":null,"Title":"[release/6.0.2xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.DotNet.XliffTasks**: from 1.0.0-beta.21514.1 to 1.0.0-beta.21431.1 (parent: Microsoft.DotNet.Arcade.Sdk)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:f664eaf3-9cfe-40d4-2b1b-08d99e508e9d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: f664eaf3-9cfe-40d4-2b1b-08d99e508e9d\r\n- **Build**: 20211110.2\r\n- **Date Produced**: November 10, 2021 5:15:38 PM UTC\r\n- **Commit**: ee9b7f19853685805c612103282c8d9486c7db86\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21515.2 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 1.0.0-beta.21514.1 to 1.0.0-beta.21431.1][2]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/8d4cde5...ee9b7f1\r\n[2]: https://github.com/dotnet/xliff-tasks/compare/7c0f471...bc32331\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 6.0.100\r\n\r\n[marker]: <> (End:f664eaf3-9cfe-40d4-2b1b-08d99e508e9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22539","RelatedDescription":"Open PR \"[release/6.0.2xx] Update dependencies from dotnet/arcade\" (#22539)"},{"Id":"1050125242","IsPullRequest":true,"CreatedAt":"2021-11-10T21:10:01","Actor":"dotnet-maestro[bot]","Number":"22537","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211110.6\r\n- **Date Produced**: November 10, 2021 6:49:55 PM UTC\r\n- **Commit**: 0607481b7e88ed5c88a997f47fb63ec52e6f7154\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21559.16 to 7.0.0-alpha.1.21560.6][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/dc8f45c...0607481\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22537","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#22537)"},{"Id":"1050135335","IsPullRequest":false,"CreatedAt":"2021-11-10T17:57:52","Actor":"dfederm","Number":"22538","RawContent":null,"Title":"Race condition in ResolvePackageAssets leading to InvalidDataException","State":"open","Body":"### Describe the bug\r\n`ResolvePackageAssets` throws a `InvalidDataException` in certain race conditions.\r\n\r\n### To Reproduce\r\nAssume there are 3 projects: `src\\A\\A.csproj` (A), `src\\B\\B.csproj` (B), and `src\\C\\C.csproj` (C).\r\n\r\nA and B both depend on C, but via different directory symlinks. A references C via some `ASandbox\\C\\C.csproj` (`ASandbox\\` is a directory symlink to `src\\`) and similarly B references C via `BSandbox\\C\\C.csproj` (`BSandbox\\` is a directory symlink to `src\\`)\r\n\r\nIntermittently we'll see the following when building both A and B at the same time:\r\n```\r\nThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.IO.InvalidDataException: Found invalid data while decoding.\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ValidateHeader(BinaryReader reader, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.OpenCacheStream(Stream stream, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nIt seems like the race specifically is on the second read of the cache file. On first read the cache file, the exception is caught. Then the cache file is written to disk and the re-read from disk. If that 2nd read fails, the exception is not caught and fails the build. The race condition seems to be if there are two of these \"write+2nd reads\" at the same time. I believe the symlinks are important here since the project's path is part of the \"settings hash\" used in the cache file's header.\r\n\r\n### Further technical details\r\nThis is a CloudBuild scenario","Url":"https://github.com/dotnet/sdk/issues/22538","RelatedDescription":"Open issue \"Race condition in ResolvePackageAssets leading to InvalidDataException\" (#22538)"},{"Id":"1049828613","IsPullRequest":true,"CreatedAt":"2021-11-10T16:39:58","Actor":"dotnet-maestro[bot]","Number":"22533","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3d9043af-0e17-4eb5-f3e3-08d8e97c775d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3d9043af-0e17-4eb5-f3e3-08d8e97c775d\r\n- **Build**: 20211109.3\r\n- **Date Produced**: November 9, 2021 7:25:36 PM UTC\r\n- **Commit**: fecf65bedcee9036b8ba9d8d7feef5413f294914\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a7c57ab...fecf65b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3d9043af-0e17-4eb5-f3e3-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22533","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#22533)"},{"Id":"1049839713","IsPullRequest":true,"CreatedAt":"2021-11-10T15:18:23","Actor":"dotnet-maestro[bot]","Number":"22534","RawContent":null,"Title":"[main] Update dependencies from dotnet/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b131a13-5680-48d9-6266-08d98389174c)\r\n## From https://github.com/dotnet/msbuild\r\n- **Subscription**: 1b131a13-5680-48d9-6266-08d98389174c\r\n- **Build**: 20211109.3\r\n- **Date Produced**: November 9, 2021 6:58:02 PM UTC\r\n- **Commit**: 2b604c3a38772f7d70b369e0ad0da32257ed1b35\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: [from 17.1.0-preview-21555-01 to 17.1.0-preview-21559-03][1]\r\n  - **Microsoft.Build**: [from 17.1.0-preview-21555-01 to 17.1.0-preview-21559-03][1]\r\n\r\n[1]: https://github.com/dotnet/msbuild/compare/6278211...2b604c3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1b131a13-5680-48d9-6266-08d98389174c)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22534","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/msbuild\" (#22534)"},{"Id":"1049879143","IsPullRequest":true,"CreatedAt":"2021-11-10T14:10:35","Actor":"dotnet-maestro[bot]","Number":"22536","RawContent":null,"Title":"[main] Update dependencies from dotnet/format","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n## From https://github.com/dotnet/format\r\n- **Subscription**: 2a60b6fb-ac35-4f56-2b1d-08d99e508e9d\r\n- **Build**: 20211110.1\r\n- **Date Produced**: November 10, 2021 1:56:11 PM UTC\r\n- **Commit**: d5368bbca5799800d047bcf40a48b0c53fe1fe79\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-format**: [from 7.0.255901 to 7.0.256001][1]\r\n\r\n[1]: https://github.com/dotnet/format/compare/dd8ea46...d5368bb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22536","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/format\" (#22536)"},{"Id":"1049847160","IsPullRequest":false,"CreatedAt":"2021-11-10T13:39:31","Actor":"WeihanLi","Number":"22535","RawContent":null,"Title":"Include `$(RootNamespace)` by default for a project with implicit usings enabled","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\n\r\nI used the implicit usings among many projects, each project, I would add `<Using Include=\"$(RootNamespace)\"/>` to include the project default namespace, I'm wondering if we could make it included into the default usings if the project is enabled implicit usings.\r\n\r\n``` xml\r\n  <ItemGroup>\r\n    <Using Include=\"$(RootNamespace)\"/>\r\n  </ItemGroup>\r\n```\r\n\r\n### Describe the solution you'd like\r\n\r\nWhen the project is enabled the implicit usings, include the `$(RootNamespace)` into the usings also. \r\n\r\n### Additional context\r\n\r\nIt would be great for using the members inside the default namespace.\r\n","Url":"https://github.com/dotnet/sdk/issues/22535","RelatedDescription":"Open issue \"Include `$(RootNamespace)` by default for a project with implicit usings enabled\" (#22535)"},{"Id":"1049662082","IsPullRequest":true,"CreatedAt":"2021-11-10T10:39:21","Actor":"v-wuzhai","Number":"22532","RawContent":null,"Title":"Update Test project x64SolutionBuild to current framework","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/22532","RelatedDescription":"Open PR \"Update Test project x64SolutionBuild to current framework\" (#22532)"},{"Id":"1049512039","IsPullRequest":true,"CreatedAt":"2021-11-10T10:30:21","Actor":"v-wuzhai","Number":"22528","RawContent":null,"Title":"Update the hardcoded TFM to the current framework","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/22528","RelatedDescription":"Closed or merged PR \"Update the hardcoded TFM to the current framework\" (#22528)"},{"Id":"1049594652","IsPullRequest":false,"CreatedAt":"2021-11-10T09:32:17","Actor":"mikyjo","Number":"22531","RawContent":null,"Title":"Inconsistent profile selection. `dotnet watch` selects different launch profile when `--no-hot-reload` is given","State":"open","Body":"I'm using the stable .NET 6.0.100 version.\r\n\r\nI have a project with the following structure:\r\n\r\n```\r\nmy-project\r\n    └── src\r\n        ├── appsettings.Development.json\r\n        ├── appsettings.json\r\n        ├── Controllers\r\n        │         └── WeatherForecastController.cs\r\n        ├── Program.cs\r\n        ├── Properties\r\n        │         └── launchSettings.json\r\n        ├── src.csproj\r\n        └── WeatherForecast.cs\r\n```\r\n\r\nWhen I start my project from the `my-project` directory using `dotnet watch`, different launch profiles get picked up depending on whether the `--no-hot-reload` flag is passed.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a new directory `my-project/src`\r\n    ```\r\n    mkdir -p my-project/src\r\n    ```\r\n2. Go to `my-project/src` and start a new project\r\n    ```\r\n    cd my-project/src\r\n    dotnet new webapi\r\n    ```\r\n3. Open `Properties/launchSettings.json` file and change the `ASPNETCORE_ENVIRONMENT` value to `Production` for the `IIS Express` profile. It should look like this:\r\n    ```\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"swagger\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Production\"\r\n      }\r\n    }\r\n    ```\r\n4. Navigate back to `my-project`  directory and start the project from there\r\n    ```\r\n    cd ..\r\n    dotnet watch run --project src/\r\n    ```\r\n5. Upon inspecting the output of the command, we see that the `IIS Express` profile has been selected (`Production`)\r\n    ```\r\n    info: Microsoft.Hosting.Lifetime[0]\r\n    Hosting environment: Production\r\n    ```\r\n6. Now let's start the project with the `--no-hot-reload` flag\r\n    ```\r\n    dotnet watch run --project src/ --no-hot-reload\r\n    ```\r\n7. Upon inspecting the output of the command, we see that the `src` profile has been selected (`Development`)\r\n    ```\r\n    info: Microsoft.Hosting.Lifetime[0]\r\n    Hosting environment: Development\r\n    ```\r\n\r\n### Expected behavior\r\n\r\nThe `dotnet watch` command should consistently select the same launch profile, regardless of the command flags given.\r\n\r\n### Behavior in .NET 5\r\n\r\n.NET 5 always selected the first profile in `launchSettings.json` thus making it easier to expect consistent behavior.","Url":"https://github.com/dotnet/sdk/issues/22531","RelatedDescription":"Open issue \"Inconsistent profile selection. `dotnet watch` selects different launch profile when `--no-hot-reload` is given\" (#22531)"},{"Id":"1049549559","IsPullRequest":false,"CreatedAt":"2021-11-10T08:46:32","Actor":"khteh","Number":"22530","RawContent":null,"Title":"Ubuntu 21.10 wget URL not found!","State":"open","Body":"https://github.com/dotnet/docs/issues/26908\r\n\r\n<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\n### Exceptions (if any)\r\n<!-- \r\nInclude the exception you get when facing this issue\r\n-->\r\n\r\n### Further technical details\r\n- Include the output of `dotnet --info`\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version","Url":"https://github.com/dotnet/sdk/issues/22530","RelatedDescription":"Open issue \"Ubuntu 21.10 wget URL not found!\" (#22530)"},{"Id":"1049544541","IsPullRequest":false,"CreatedAt":"2021-11-10T08:40:33","Actor":"Gigas002","Number":"22529","RawContent":null,"Title":"Unable to run net6.0 apps built with snap package on ubuntu 21.10","State":"open","Body":"<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\n\r\nAs title says, I'm unable to run net6.0 programs on Ubuntu 21.10, built using official snap package. The programs builds fine, but when trying to run it says:\r\n\r\n```text\r\nuser@user-pc:~/test$ dotnet run\r\n/home/user/test/bin/Debug/net6.0/test: relocation error: /home/user/test/bin/Debug/net6.0/test: symbol __pthread_key_create version GLIBC_2.2.5 not defined in file libpthread.so.0 with link time reference\r\n```\r\n\r\nTo be sure it's not my os's configuration error, I've also tested this behavior on clean Ubuntu 21.10 VM and got the same results as above. Sorry, if this issue doesn't belong to dotnet/sdk repo, I'm not sure, where to place it.\r\n\r\n### To Reproduce\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\nFollowing the official instructions (https://docs.microsoft.com/en-us/dotnet/core/install/linux-snap):\r\n\r\n```text\r\nsudo snap install dotnet-sdk --classic\r\ndotnet new console -o test && cd test\r\ndotnet run\r\n```\r\n\r\n### Further technical details\r\n\r\n`dotnet --info` output:\r\n\r\n```text\r\nuser@user-pc:~$ dotnet --info\r\nПакет SDK для .NET (отражающий любой global.json):\r\n Version:   6.0.100\r\n Commit:    9e8b04bbff\r\n\r\nСреда выполнения:\r\n OS Name:     ubuntu\r\n OS Version:  21.10\r\n OS Platform: Linux\r\n RID:         ubuntu.21.10-x64\r\n Base Path:   /snap/dotnet-sdk/150/sdk/6.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0\r\n  Commit:  4822e3c3aa\r\n\r\n.NET SDKs installed:\r\n  6.0.100 [/snap/dotnet-sdk/150/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.0 [/snap/dotnet-sdk/150/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.0 [/snap/dotnet-sdk/150/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/22529","RelatedDescription":"Open issue \"Unable to run net6.0 apps built with snap package on ubuntu 21.10\" (#22529)"},{"Id":"1048949499","IsPullRequest":true,"CreatedAt":"2021-11-10T08:16:11","Actor":"dotnet-maestro[bot]","Number":"22525","RawContent":null,"Title":"[main] Update dependencies from dotnet/format","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n## From https://github.com/dotnet/format\r\n- **Subscription**: 2a60b6fb-ac35-4f56-2b1d-08d99e508e9d\r\n- **Build**: 20211109.1\r\n- **Date Produced**: November 9, 2021 6:21:40 PM UTC\r\n- **Commit**: dd8ea4600cf3d5fa7193520795472c9407ae4175\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-format**: [from 7.0.255802 to 7.0.255901][1]\r\n\r\n[1]: https://github.com/dotnet/format/compare/c7b527a...dd8ea46\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2a60b6fb-ac35-4f56-2b1d-08d99e508e9d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22525","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/format\" (#22525)"},{"Id":"1049446106","IsPullRequest":true,"CreatedAt":"2021-11-10T07:04:40","Actor":"v-wuzhai","Number":"22527","RawContent":null,"Title":"Remove unused test project","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/22527","RelatedDescription":"Closed or merged PR \"Remove unused test project\" (#22527)"},{"Id":"1049346122","IsPullRequest":true,"CreatedAt":"2021-11-10T04:53:35","Actor":"dotnet-maestro[bot]","Number":"22526","RawContent":null,"Title":"[main] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 4491d9a4-839d-4af5-f3e4-08d8e97c775d\r\n- **Build**: 20211109.16\r\n- **Date Produced**: November 10, 2021 2:31:20 AM UTC\r\n- **Commit**: dc8f45c7010b057eb5c34d0c5c89d656ab6ec7f3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.App.Ref.Internal**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.App.Ref**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **dotnet-user-secrets**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **dotnet-dev-certs**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Analyzers**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.CodeAnalysis.Razor**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.TestHost**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **VS.Redist.Common.AspNetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.JSInterop**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.Extensions.FileProviders.Embedded**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Razor.Language**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Razor.Internal.SourceGenerator.Transport**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Components.Web**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Authorization**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Components.Analyzers**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Mvc.Api.Analyzers**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.Mvc.Analyzers**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: [from 7.0.0-alpha.1.21557.1 to 7.0.0-alpha.1.21559.16][1]\r\n\r\n[1]: https://github.com/dotnet/aspnetcore/compare/c1e0c2f...dc8f45c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4491d9a4-839d-4af5-f3e4-08d8e97c775d)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/22526","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/aspnetcore\" (#22526)"},{"Id":"1048884135","IsPullRequest":true,"CreatedAt":"2021-11-10T01:28:52","Actor":"vseanreesermsft","Number":"22524","RawContent":null,"Title":"Merging internal commits for release/3.1.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/22524","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1.4xx\" (#22524)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"1047670643","IsPullRequest":false,"CreatedAt":"2021-11-08T16:42:32","Actor":"rbhanda","Number":"204","RawContent":null,"Title":"November 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in November 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET November 2021 Updates – 6.0](https://devblogs.microsoft.com/dotnet/announcing-net-6/)\r\n  * .NET 6.0.0 and .NET SDK 6.0.100  ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/6.0/6.0.0/6.0.0.md) | [Download](https://dotnet.microsoft.com/download/dotnet/6.0))\r\n  \r\n* [.NET November 2021 Updates – 5.0.12 and 3.1.21](https://devblogs.microsoft.com/dotnet/november-2021-updates/)\r\n  * .NET 5.0.12 and .NET SDK 5.0.403 and .NET SDK 5.0.209 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.12/5.0.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.21 and .NET SDK 3.1.415 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.21/3.1.21.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [.NET November 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2021-cumulative-update/)\r\n* [.NET Framework 4.8 Container Improvements (November 2021 Update)](https://github.com/microsoft/dotnet-framework-docker/issues/849)\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/204","RelatedDescription":"Open issue \"November 2021 .NET Updates\" (#204)"},{"Id":"1024047080","IsPullRequest":false,"CreatedAt":"2021-10-12T17:04:01","Actor":"kalaskarsanket","Number":"203","RawContent":null,"Title":"October 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in October 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET October 2021 Updates – 5.0.11 and 3.1.20](https://devblogs.microsoft.com/dotnet/october-2021-updates/)\r\n  * .NET 5.0.11 and .NET SDK 5.0.402 and .NET SDK 5.0.208 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.11/5.0.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.20 and .NET SDK 3.1.414 and NET SDK 3.1.120 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.20/3.1.20.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Framework </h2>\r\n\r\n* [October 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2021-security-and-quality-rollup/)\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/203","RelatedDescription":"Open issue \"October 2021 .NET Updates\" (#203)"},{"Id":"1024044384","IsPullRequest":false,"CreatedAt":"2021-10-12T17:01:04","Actor":"rbhanda","Number":"202","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-41355 | .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-41355 | .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nAn Information Disclosure vulnerability exists in .NET where System.DirectoryServices.Protocols.LdapConnection may send credentials in plain text on Linux and macOS.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/60301\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET application that uses `System.DirectoryServices.Protocols` with a vulnerable version listed below on system based on Linux.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.DirectoryServices.Protocols | 5.0.0 | 5.0.1\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n\r\nIf you are using a package version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please [update to the latest version](https://aka.ms/install_update_net_packages) of the [affected software](#affected-software).\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-41355](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41355)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 12, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-10-12_\r\n","Url":"https://github.com/dotnet/announcements/issues/202","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-41355 | .NET Core Information Disclosure Vulnerability\" (#202)"},{"Id":"1001267992","IsPullRequest":false,"CreatedAt":"2021-09-20T18:27:07","Actor":"terrajobst","Number":"201","RawContent":null,"Title":"Replacing explicit read access for external contributors with team membership","State":"open","Body":"We're moving away from using individual permissions to our repos in favor of teams. In the past, we've given external contributors explicit read access, for two reasons:\r\n\r\n1. To assign them issues they would like to work on\r\n2. To give them access to CI logs in Azure DevOps pipelines\r\n\r\nThe first one is no longer necessary as GitHub has made a change that allows anyone to be assigned an issue so long they either have explicit permissions or have commented on the issue. The second one is still important so that contributors who submitted PRs can access the detailed logs in order to figure out why their PR didn't pass CI.\r\n\r\nIn order to make our lives easier, we decided to move the individual read permissions to team memberships. This requires the users to accept the invitation to the dotnet org. To ensure the impacted users are aware of this, we have tagged them in the [corresponding discussion][disc]. Please note that we only grant read access on a case-by-case basis, usually for non-trivial PRs.\r\n\r\n### Discussion\r\n\r\nFor a discussion, please see the corresponding [discussion issue][disc].\r\n\r\n[disc]: https://github.com/dotnet/core/issues/6722","Url":"https://github.com/dotnet/announcements/issues/201","RelatedDescription":"Open issue \"Replacing explicit read access for external contributors with team membership\" (#201)"},{"Id":"996313575","IsPullRequest":false,"CreatedAt":"2021-09-14T18:28:22","Actor":"rbhanda","Number":"200","RawContent":null,"Title":"September 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in September 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET September 2021 Updates – 5.0.10 and 3.1.19](https://devblogs.microsoft.com/dotnet/september-2021-updates/)\r\n  * .NET 5.0.10 and .NET SDK 5.0.401 and .NET SDK 5.0.207 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.10/5.0.10.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.19 and .NET SDK 3.1.413 and NET SDK 3.1.119 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.19/3.1.19.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/200","RelatedDescription":"Open issue \"September 2021 .NET Updates\" (#200)"},{"Id":"985250438","IsPullRequest":false,"CreatedAt":"2021-09-01T14:49:55","Actor":"rbhanda","Number":"199","RawContent":null,"Title":".NET Core 2.1 has reached end of life","State":"open","Body":"[.NET Core 2.1 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-1-will-reach-end-of-support-on-august-21-2021/) on **August 21, 2021**. This means [.NET Core 2.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-1/) is no longer supported and updates will no longer be provided. If your application uses NET Core 2.1, we strongly recommend you migrate your application to a supported version – .NET Core 3.1 or later. You can download these versions from the [.NET website](https://dotnet.microsoft.com/download/dotnet).\r\n\r\n- [Download .NET Core 3.1](https://dotnet.microsoft.com/download/dotnet/3.1)\r\n- [Download .NET 5.0](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET Core 2.1 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-1-will-reach-end-of-support-on-august-21-2021/)\r\n\r\nWe've created an issue at [dotnet/core#6640](https://github.com/dotnet/core/issues/6640) for your questions and comments.\r\n\r\n## .NET Core 2.1 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-1/) was shipped in May 30, 2018 and was declared an LTS release with the 2.1.3 update in August 2018. The 3-year lifecycle for the 2.1 release has come to an end on August 21, 2021.\r\n\r\n## .NET Core 2.1 Downloads\r\n\r\n.NET Core 2.1 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.1, will be accessible through the [.NET Downloads](https://dotnet.microsoft.com/download/dotnet) page. \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://dotnet.microsoft.com/platform/support/policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/main/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/main/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/199","RelatedDescription":"Open issue \".NET Core 2.1 has reached end of life\" (#199)"},{"Id":"974082248","IsPullRequest":false,"CreatedAt":"2021-08-18T21:49:10","Actor":"terrajobst","Number":"198","RawContent":null,"Title":"Main is now targeting .NET 7","State":"open","Body":"This is a heads up that the primary repos of the stack have branched for .NET 6 GA/servicing/RCs, and that the `main` branch for those repos has become .NET 7.\r\n\r\n## Anything special to note about .NET 7?\r\n\r\nThe biggest difference between .NET 6 and .NET 7 flow is that the SDK repos will have their own channel (.NET 7.0.1xx SDK) from the very beginning. While .NET 6 had this channel, we never used it in development. For .NET 7 we will have a runtime and SDK channel from the beginning. Having this split also makes it easier to identify potentially problematic stack dependencies.\r\n\r\n## What does this mean for the repos I'm using?\r\n\r\nIf you're using any of the repos below, then: the `main` branch has been updated to target .NET 7 or .NET 7.0.1xx (for SDK repos).\r\n\r\n| Repo                                                              | Channel          |\r\n| ----------------------------------------------------------------- | ---------------- |\r\n| [dotnet/aspnetcore](https://github.com/dotnet/aspnetcore)         | .NET 7           |\r\n| [dotnet/efcore](https://github.com/dotnet/efcore)                 | .NET 7           |\r\n| [dotnet/emsdk](https://github.com/dotnet/emsdk)                   | .NET 7           |\r\n| [dotnet/icu](https://github.com/dotnet/icu)                       | .NET 7           |\r\n| [dotnet/runtime](https://github.com/dotnet/runtime)               | .NET 7           |\r\n| [dotnet/windowsdesktop](https://github.com/dotnet/windowsdesktop) | .NET 7           |\r\n| [dotnet/winforms](https://github.com/dotnet/winforms)             | .NET 7           |\r\n| [dotnet/wpf](https://github.com/dotnet/wpf)                       | .NET 7           |\r\n| [mono/linker](https://github.com/mono/linker)                     | .NET 7           |\r\n| [dotnet/installer](https://github.com/dotnet/installer)           | .NET 7.0.1xx SDK |\r\n| [dotnet/roslyn](https://github.com/dotnet/roslyn)                 | .NET 7.0.1xx SDK |\r\n| [dotnet/sdk](https://github.com/dotnet/sdk)                       | .NET 7.0.1xx SDK |\r\n| [dotnet/templating](https://github.com/dotnet/templating)         | .NET 7.0.1xx SDK |\r\n\r\nThere are quite a few other repos that were targeting .NET 6 that are not part of the main product flow. Their config might need to be tweaked by the repo owners to do the right thing depending on their development schedules:\r\n\r\n* [aspnet/AspLabs](https://github.com/aspnet/AspLabs)\r\n* [dotnet/command-line-api](https://github.com/dotnet/command-line-api)\r\n* [dotnet/format](https://github.com/dotnet/format)\r\n* [dotnet/hotreload-utils](https://github.com/dotnet/hotreload-utils)\r\n* [dotnet/iot](https://github.com/dotnet/iot)\r\n* [dotnet/llvm-project](https://github.com/dotnet/llvm-project)\r\n* [dotnet/msquic](https://github.com/dotnet/msquic)\r\n* [dotnet/runtime-assets](https://github.com/dotnet/runtime-assets)\r\n* [dotnet/scaffolding](https://github.com/dotnet/scaffolding)\r\n* [dotnet/test-templates](https://github.com/dotnet/test-templates)\r\n* [dotnet/wcf](https://github.com/dotnet/wcf)\r\n* [microsoft/vstest](https://github.com/microsoft/vstest)\r\n* [xamarin/xamarin-android](https://github.com/xamarin/xamarin-android)\r\n* [xamarin/xamarin-macios](https://github.com/xamarin/xamarin-macios)\r\n\r\n.NET 7 and .NET 6 RC 2 info will be added soon to [dotnet/installer](https://github.com/dotnet/installer).\r\n\r\n## Discussion\r\n\r\nFor a discussion, please comment on issue [dotnet/core#6604](https://github.com/dotnet/core/issues/6604).","Url":"https://github.com/dotnet/announcements/issues/198","RelatedDescription":"Open issue \"Main is now targeting .NET 7\" (#198)"},{"Id":"972295023","IsPullRequest":false,"CreatedAt":"2021-08-17T04:40:54","Actor":"richlander","Number":"197","RawContent":null,"Title":".NET Core 2.1 container images will be deleted from Docker Hub","State":"open","Body":"# .NET Core 2.1 container images will be deleted from Docker Hub\r\n\r\nStarting on August 21st, .NET Core 2.1 Docker container images will no longer be available on Docker Hub, but exclusively on Microsoft Container Registry (MCR). This change was previously announced with https://github.com/dotnet/dotnet-docker/issues/2848. If you are reliant on .NET Core 2.1 images on Docker Hub, you should switch to using MCR immediately. Please reach out at dotnet@microsoft.com if this change is a problem for you / your organization.\r\n\r\n.NET Blog: https://devblogs.microsoft.com/dotnet/net-core-2-1-container-images-will-be-deleted-from-docker-hub/\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/dotnet-docker #3052](https://github.com/dotnet/dotnet-docker/issues/3052)\r\n\r\n## Details\r\n\r\n[.NET images](https://hub.docker.com/_/microsoft-dotnet) are available on MCR from the following repos:\r\n\r\n- `mcr.microsoft.com/dotnet/runtime-deps`\r\n- `mcr.microsoft.com/dotnet/runtime`\r\n- `mcr.microsoft.com/dotnet/aspnet`\r\n- `mcr.microsoft.com/dotnet/sdk`\r\n\r\nYou need to make the following transformations to pull .NET Core 2.1 images from MCR instead of Docker Hub.\r\n\r\nFor the SDK:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-sdk -> mcr.microsoft.com/dotnet/sdk:2.1\r\nmicrosoft/dotnet:2-sdk -> mcr.microsoft.com/dotnet/sdk:2.1\r\nmicrosoft/dotnet:2.1-sdk-stretch -> mcr.microsoft.com/dotnet/sdk:2.1-stretch\r\nmicrosoft/dotnet:2.1-sdk-stretch-arm32v7 -> mcr.microsoft.com/dotnet/sdk:2.1-stretch-arm32v7\r\nmicrosoft/dotnet:2.1-sdk-nanoserver-1809 -> mcr.microsoft.com/dotnet/sdk:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-sdk-alpine -> mcr.microsoft.com/dotnet/sdk:2.1-alpine\r\nmicrosoft/dotnet:2.1-sdk-bionic -> mcr.microsoft.com/dotnet/sdk:2.1-bionic\r\nmicrosoft/dotnet:2.1-sdk-bionic-arm32v7 -> mcr.microsoft.com/dotnet/sdk:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:latest -> mcr.microsoft.com/dotnet/sdk:2.1\r\n```\r\n\r\nFor the ASP.NET Core:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime -> mcr.microsoft.com/dotnet/aspnet:2.1\r\nmicrosoft/dotnet:2-aspnetcore-runtime-> mcr.microsoft.com/dotnet/aspnet:2.1\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-stretch-slim -> mcr.microsoft.com/dotnet/aspnet:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/aspnet:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-nanoserver-1809 -> mcr.microsoft.com/dotnet/aspnet:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-alpine -> mcr.microsoft.com/dotnet/aspnet:2.1-alpine\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-bionic -> mcr.microsoft.com/dotnet/aspnet:2.1-bionic\r\nmicrosoft/dotnet:2.1-aspnetcore-runtime-bionic-arm32v7 -> mcr.microsoft.com/dotnet/aspnet:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:aspnetcore-runtime-> mcr.microsoft.com/dotnet/aspnet:2.1\r\n```\r\n\r\nFor .NET Runtime:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\nmicrosoft/dotnet:2-runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\nmicrosoft/dotnet:2.1-runtime-stretch-slim -> mcr.microsoft.com/dotnet/runtime:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-runtime-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/runtime:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-runtime-nanoserver-1809 -> mcr.microsoft.com/dotnet/runtime:2.1-nanoserver-1809\r\nmicrosoft/dotnet:2.1-runtime-alpine -> mcr.microsoft.com/dotnet/runtime:2.1-alpine\r\nmicrosoft/dotnet:2.1-runtime-bionic -> mcr.microsoft.com/dotnet/runtime:2.1-bionic\r\nmicrosoft/dotnet:2.1-runtime-bionic-arm32v7 -> mcr.microsoft.com/dotnet/runtime:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:runtime -> mcr.microsoft.com/dotnet/runtime:2.1\r\n```\r\n\r\nFor .NET Runtime dependencies:\r\n\r\n```Dockerfile\r\nmicrosoft/dotnet:2.1-runtime-deps -> mcr.microsoft.com/dotnet/runtime-deps:2.1\r\nmicrosoft/dotnet:2.1-runtime-deps-stretch-slim -> mcr.microsoft.com/dotnet/runtime-deps:2.1-stretch-slim\r\nmicrosoft/dotnet:2.1-runtime-deps-stretch-slim-arm32v7 -> mcr.microsoft.com/dotnet/runtime-deps:2.1-stretch-slim-arm32v7\r\nmicrosoft/dotnet:2.1-runtime-deps-alpine -> mcr.microsoft.com/dotnet/runtime-deps:2.1-alpine\r\nmicrosoft/dotnet:2.1-runtime-deps-bionic -> mcr.microsoft.com/dotnet/runtime-deps:2.1-bionic\r\nmicrosoft/dotnet:2.1-runtime-deps-bionic-arm32v7 -> mcr.microsoft.com/dotnet/runtime-deps:2.1-bionic-arm32v7\r\nmicrosoft/dotnet:runtime-deps -> mcr.microsoft.com/dotnet/runtime-deps:2.1\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/197","RelatedDescription":"Open issue \".NET Core 2.1 container images will be deleted from Docker Hub\" (#197)"},{"Id":"965438078","IsPullRequest":false,"CreatedAt":"2021-08-10T21:53:06","Actor":"rbhanda","Number":"196","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-34485 | .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-34485 | .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1 and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nAn information disclosure vulnerability exists in .NET 5.0, .NET Core 3.1 and .NET Core 2.1 when dumps created by the tool to collect crash dumps and dumps on demand are created with global read permissions on Linux and macOS.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/57174\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0 application running on .NET 5.0.8 or lower\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.17 or lower\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.28 or lower\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.9 or SDK 5.0.206 (for Visual Studio 2019 v16.8) or SDK 5.0.303 (for Visual Studio 2019 V16.10) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.18 or SDK 3.1.118 (for Visual Studio 2019 v16.4) or 3.1.412 (for Visual Studio 2019 v16.7 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.29 or SDK 2.1.525 (for Visual Studio 2019 v15.9) or 2.1.817 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-34485](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34485)\r\n\r\nV1.0 (August 10, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-08-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/196","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-34485 | .NET Core Information Disclosure Vulnerability\" (#196)"},{"Id":"965437579","IsPullRequest":false,"CreatedAt":"2021-08-10T21:52:38","Actor":"rbhanda","Number":"195","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-34532 | ASP.NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-34532 | ASP.NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1 and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nAn information disclosure vulnerability exists in .NET 5.0, .NET Core 3.1 and .NET Core 2.1 where a JWT token is logged if it cannot be parsed.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/35246\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## Important Update\r\n\r\nThe .NET Core 2.1.29 August update did not include the correct fix for [CVE-2021-34532](https://msrc.microsoft.com/update-guide/en-us/vulnerability/CVE-2021-34532). To resolve this, we are re-releasing the August security update for .NET Core 2.1 as 2.1.30. If you have installed .NET Core 2.1.29 previously you need to install the .NET Core 2.1.30 update in order to be fully protected.\r\n\r\n_Note: .NET Core 3.1 and .NET 5.0 August updates are not affected and therefore not being re-released._\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses `Microsoft.AspNetCore.Authentication.JwtBearer` with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Authentication.JwtBearer | 2.1.2 or lower | 2.1.30 \r\nMicrosoft.AspNetCore.Authentication.JwtBearer | 3.1.17 or lower | 3.1.18 \r\nMicrosoft.AspNetCore.Authentication.JwtBearer | 5.0.8 or lower  | 5.0.9 \r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.9 or SDK 5.0.206 (for Visual Studio 2019 v16.8) or SDK 5.0.303 (for Visual Studio 2019 V16.10) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.18 or SDK 3.1.118 (for Visual Studio 2019 v16.4) or 3.1.412 (for Visual Studio 2019 v16.7 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.30 or SDK 2.1.526 (for Visual Studio 2019 v15.9) or 2.1.818 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\nIf your application is using .NET Core 2.1 running on .NET Framework see the [Updating .NET Core 2.1 on .NET Framework](#updating-2.1) section below.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"updating-2.1\"></a> Updating .NET Core 2.1 on .NET Framework\r\nIf you are running .NET Core 2.1 on .NET Framework you need to check your projects for dependencies and update them accordingly.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, search for `Microsoft.AspNetCore.Authentication.JwtBearer` and update the package to the latest version\r\n\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Authentication.JwtBearer/2.1.0` is a reference to version 2.1.1 of `Microsoft.AspNetCore.Authentication.JwtBearer`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.1 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.App` version 2.1.1\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.App` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.30\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\n* If your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.SpaServices` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.1.30\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n* We service .NET Core 2.1 incrementally. This means that users who reference the `Microsoft.AspNetCore.Authentication.AzureAD.UI` or `Microsoft.AspNetCore.Authentication.AzureADB2C.UI` package must add a reference to `Microsoft.AspNetCore.Authentication.JwtBearer`.\r\n\r\n* The shared framework for .NET Core 3.1 and later does not include `Microsoft.AspNetCore.Authentication.JwtBearer.dll`. Users targeting netcoreapp3.1 or later must also update their `Microsoft.AspNetCore.Authentication.JwtBearer` package version.\r\n\r\n* We service .NET Core 3.1 and later completely. This means users who reference `Microsoft.AspNetCore.Authentication.AzureAD.UI` or `Microsoft.AspNetCore.Authentication.AzureADB2C.UI` can bump that version to 2.1.30. They don't need a new `Microsoft.AspNetCore.Authentication.JwtBearer` reference.\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-34532](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34532)\r\n\r\n### Revisions\r\n\r\nV1.1 (August 19, 2021): Advisory Updated.\r\n\r\n_Version 1.1_\r\n\r\nV1.0 (August 10, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-08-19_\r\n","Url":"https://github.com/dotnet/announcements/issues/195","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-34532 | ASP.NET Core Information Disclosure Vulnerability\" (#195)"},{"Id":"965435425","IsPullRequest":false,"CreatedAt":"2021-08-10T21:50:27","Actor":"rbhanda","Number":"194","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-26423 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-26423 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1 and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists in .NET 5.0, .NET Core 3.1 and .NET Core 2.1 where .NET (Core) server applications providing WebSocket endpoints could be tricked into endlessly looping while trying to read a single WebSocket frame. \r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/57175\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0 application running on .NET 5.0.8 or lower\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.17 or lower\r\n\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.28 or lower\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.9 or SDK 5.0.206 (for Visual Studio 2019 v16.8) or SDK 5.0.303 (for Visual Studio 2019 V16.10) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.18 or SDK 3.1.118 (for Visual Studio 2019 v16.4) or 3.1.412 (for Visual Studio 2019 v16.7 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.29 or SDK 2.1.525 (for Visual Studio 2019 v15.9) or 2.1.817 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n[Peter Stöckli](https://twitter.com/ulldma)\r\n\r\n### External Links\r\n\r\n[CVE-2021-26423](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26423)\r\n\r\n### Revisions\r\n\r\nV1.1 (August 13, 2021): Added acknowledgement\r\nV1.0 (August 10, 2021): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2021-08-13_\r\n","Url":"https://github.com/dotnet/announcements/issues/194","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-26423 | .NET Core Denial of Service Vulnerability\" (#194)"},{"Id":"965367779","IsPullRequest":false,"CreatedAt":"2021-08-10T20:42:31","Actor":"TaraOverfield","Number":"193","RawContent":null,"Title":"August 2021 .NET Updates ","State":"open","Body":"The following .NET updates were released in August 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET August 2021 Updates – 5.0.9, 3.1.17 and 2.1.29 ](https://devblogs.microsoft.com/dotnet/net-august-2021/)\r\n  * .NET 5.0.9 and .NET SDK 5.0.400, .NET SDK 5.0.302 and .NET SDK 5.0.205 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/5.0/5.0.9/5.0.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.18 and .NET SDK 3.1.412 and NET SDK 3.1.118 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/3.1/3.1.18/3.1.18.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.30 and .NET SDK 2.1.526 and NET SDK 2.1.818 ([Release Notes](https://github.com/dotnet/core/blob/main/release-notes/2.1/2.1.30/2.1.30.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n**Update**\r\nThe .NET Core 2.1.29 August update did not include the correct fix for [CVE-2021-34532](https://msrc.microsoft.com/update-guide/en-us/vulnerability/CVE-2021-34532). \r\nTo resolve this, we are re-releasing the August security update for .NET Core 2.1 as 2.1.30. If you have installed .NET Core 2.1.29 previously you need to install the .NET Core 2.1.30 update in order to be fully protected.\r\n\r\n\r\n_Note: .NET Core 3.1 and .NET 5.0 August updates are not affected and therefore not being re-released._\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [August 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-august-2021-security-and-quality-rollup/)\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/193","RelatedDescription":"Open issue \"August 2021 .NET Updates \" (#193)"},{"Id":"953355207","IsPullRequest":false,"CreatedAt":"2021-07-27T21:48:47","Actor":"richlander","Number":"192","RawContent":null,"Title":".NET Download Site Outage","State":"closed","Body":"## .NET Download Site Outage\r\n\r\nThe .NET download site -- download.visualstudio.microsoft.com -- is currently experiencing a partial outage. There are reports from users from around the world who are experiencing 404 responses when downloading .NET installers (`.msi`, `.tar.gz`, ...). This includes downloading the .NET SDK with the [.NET Core Task](https://docs.microsoft.com/azure/devops/pipelines/tasks/tool/dotnet-core-tool-installer) in Azure DevOps. The problem appears to be with the content delivery network (CDN) that we use. We are working closely with our CDN team to resolve the issue.\r\n\r\nWe will continue to update this issue until it is resolved. We're sorry about the inconvenience that this outage has caused.\r\n\r\n**Update at 6:40 PM PDT:** The outage appears resolved. Please share any continued download failures.\r\n\r\n## Discuss\r\n\r\nYou can report your experience downloading .NET at https://github.com/dotnet/core/issues/6509.\r\n\r\n## Details\r\n\r\nWe [first saw this issue](https://github.com/jellyfin/jellyfin/pull/6338#issuecomment-885821344) on Friday morning (July 23) with an Azure DevOps instance in Europe. Since then, we have seen this issue in India and US regions as well.\r\n\r\nWith Azure DevOps, you will see an [error message](https://github.com/jellyfin/jellyfin/pull/6338/checks?check_run_id=3146818385) like the following:\r\n\r\n```\r\nFailed while installing version: 5.0.103 at path: /opt/hostedtoolcache/dotnet with error: Could not download installation package from this URL: https://download.visualstudio.microsoft.com/download/pr/a2052604-de46-4cd4-8256-9bc222537d32/a798771950904eaf91c0c37c58f516e1/dotnet-sdk-5.0.103-linux-x64.tar.gz Error: Error: Unexpected HTTP response: 404\r\n```\r\n\r\nWe have seen similar reports for multiple .NET versions, including .NET 5 and .NET Core 3.1.\r\n\r\n## Workaround\r\n\r\nIf you are having trouble downloading .NET installers to your local machine, you may try downloading using a VPN set to a different region. It appears that the issue is sensitive to the user region.\r\n\r\nThere is no workaround using Azure DevOps.\r\n","Url":"https://github.com/dotnet/announcements/issues/192","RelatedDescription":"Closed issue \".NET Download Site Outage\" (#192)"},{"Id":"943640203","IsPullRequest":false,"CreatedAt":"2021-07-13T17:00:51","Actor":"rbhanda","Number":"191","RawContent":null,"Title":"July 2021 .NET Updates ","State":"open","Body":"The following .NET updates were released in July 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET July 2021 Updates – 5.0.8 and 3.1.17](https://devblogs.microsoft.com/dotnet/net-july-2021/)\r\n  * .NET 5.0.8 and .NET SDK 5.0.302 and .NET SDK 5.0.205 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.8/5.0.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.17 and .NET SDK 3.1.411. and NET SDK 3.1.117 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.17/3.1.17.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [July 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-july-2021-security-and-quality-rollup/)\r\n* [July 2021 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-july-2021-cumulative-update-preview/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/191","RelatedDescription":"Open issue \"July 2021 .NET Updates \" (#191)"},{"Id":"924339422","IsPullRequest":false,"CreatedAt":"2021-06-17T21:14:47","Actor":"terrajobst","Number":"190","RawContent":null,"Title":"Dropping older framework versions","State":"open","Body":"Our packages drop support for frameworks older than .NET Framework 4.6.1, .NET Core 3.1, or .NET Standard 2.0.\r\n\r\n## Reason\r\n\r\nDropping a framework from a package is a source breaking change. At the same time, continuing to build for all frameworks we ever shipped increases the complexity and size of a package. In the past, we've solved this issue by *harvesting*, which basically means:\r\n \r\n1. We build only for \"current\" frameworks\r\n2. During build, we download the earlier version of the package and \"harvest\" the binaries for earlier frameworks we no longer build for\r\n \r\nWhile this means that you can always update without worrying that we drop a framework it also means that you'll never get any bug fixes or new features if you consume a harvested binary. In other words, harvested assets can't be serviced which is now hidden because from your point of view you're able to keep updating the package to a later version even thought you're consuming the same old binary that we're no longer updating.\r\n \r\nFor .NET 6, we plan to no longer perform any form of harvesting to ensure that all assets we ship can be serviced. This means we're dropping anything older than:\r\n\r\n* .NET Framework 4.6.1\r\n* .NET Core 3.1\r\n* .NET Standard 2.0\r\n\r\nIf you're currently referencing an impacted package from an earlier framework, you'll no longer be able to update the referenced package to a later version. Your choice is to either retarget your project to a later version or not updating the referenced package (which is generally not a huge take back because you're already consuming a frozen binary anyways).\r\n \r\n## Affected packages\r\n\r\nThese packages no longer ship old frameworks:\r\n\r\n* `Microsoft.Extensions.DependencyModel`\r\n* `Microsoft.Win32.Registry.AccessControl`\r\n* `Microsoft.Win32.SystemEvents`\r\n* `System.ComponentModel.Annotations`\r\n* `System.ComponentModel.Composition`\r\n* `System.ComponentModel.Composition.Registration`\r\n* `System.Composition.AttributedModel`\r\n* `System.Composition.Convention`\r\n* `System.Composition.Hosting`\r\n* `System.Composition.Runtime`\r\n* `System.Composition.TypedParts`\r\n* `System.Data.Odbc`\r\n* `System.Diagnostics.DiagnosticSource`\r\n* `System.Diagnostics.EventLog`\r\n* `System.Diagnostics.PerformanceCounter`\r\n* `System.DirectoryServices`\r\n* `System.DirectoryServices.AccountManagement`\r\n* `System.DirectoryServices.Protocols`\r\n* `System.Drawing.Common`\r\n* `System.IO.Packaging`\r\n* `System.IO.Pipelines`\r\n* `System.Management`\r\n* `System.Net.Http.WinHttpHandler`\r\n* `System.Reflection.Context`\r\n* `System.Runtime.Caching`\r\n* `System.Runtime.CompilerServices.Unsafe`\r\n* `System.Security.Cryptography.Cng`\r\n* `System.Security.Cryptography.OpenSsl`\r\n* `System.Security.Cryptography.Pkcs`\r\n* `System.Security.Cryptography.ProtectedData`\r\n* `System.ServiceProcess.ServiceController`\r\n* `System.Speech`\r\n* `System.Text.Encoding.CodePages`\r\n* `System.Text.Encodings.Web`\r\n* `System.Threading.AccessControl`\r\n* `System.Threading.Channels`\r\n\r\nThese packages will no longer be updated because their implementation is now part of the .NET 6 platform:\r\n\r\n* `Microsoft.Win32.Registry`\r\n* `System.ComponentModel.Annotations`\r\n* `System.IO.FileSystem.AccessControl`\r\n* `System.IO.Pipes.AccessControl`\r\n* `System.Security.AccessControl`\r\n* `System.Security.Cryptography.Cng`\r\n* `System.Security.Cryptography.OpenSsl`\r\n* `System.Security.Principal.Windows`\r\n\r\n## Timelines\r\n\r\nMany of these changes are shipping in .NET 6 Preview 5 while some will ship in .NET 6 Preview 6.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please comment in https://github.com/dotnet/runtime/issues/54365.","Url":"https://github.com/dotnet/announcements/issues/190","RelatedDescription":"Open issue \"Dropping older framework versions\" (#190)"},{"Id":"915260827","IsPullRequest":false,"CreatedAt":"2021-06-08T17:03:51","Actor":"rbhanda","Number":"189","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-31957 | ASP.NET Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-31957 | ASP.NET Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0 and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles client disconnect.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/33369\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0 application running on .NET 5.0.6 or lower\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.15 or lower\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0 or .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.7 or SDK 5.0.204 (for Visual Studio 2019 v16.8) or 5.0.301 (for Visual Studio 2019 v16.10) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.16 or SDK 3.1.116 (for Visual Studio 2019 v16.4) or 3.1.410 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n\r\n.NET 5.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-31957](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31957)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 08, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-06-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/189","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-31957 | ASP.NET Denial of Service Vulnerability\" (#189)"},{"Id":"915259528","IsPullRequest":false,"CreatedAt":"2021-06-08T17:02:07","Actor":"rbhanda","Number":"188","RawContent":null,"Title":"June 2021 .NET Updates ","State":"open","Body":"The following .NET updates were released in June 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET June 2021 Updates – 5.0.7 and3.1.16](https://devblogs.microsoft.com/dotnet/net-june-2021/)\r\n  * .NET 5.0.7 and .NET SDK 5.0.301 and .NET SDK 5.0.204 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.7/5.0.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.16 and .NET SDK 3.1.410. and NET SDK 3.1.116 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.16/3.1.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [.NET Framework June 2021 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-june-2021-security-and-quality-rollup-updates/)\r\n* [.NET Framework June 2021 Cumulative Update Preview for Windows 10, version 1809, Windows Server 2019, and Windows 10, version 1909](https://devblogs.microsoft.com/dotnet/net-framework-june-2021-cumulative-update-preview/)\r\n* [.NET Framework June 2021 Cumulative Update Preview for Windows 10, version 2004, Windows Server 2004 and newer versions](https://devblogs.microsoft.com/dotnet/net-framework-june-2021-cumulative-update-preview-2/)\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/188","RelatedDescription":"Open issue \"June 2021 .NET Updates \" (#188)"},{"Id":"913977699","IsPullRequest":false,"CreatedAt":"2021-06-07T21:41:08","Actor":"TanayParikh","Number":"187","RawContent":null,"Title":"Byte Array Interop in .NET 6.0 Preview 6","State":"open","Body":"### Summary\r\nBlazor Server & WebAssembly now supports optimized byte array interop which avoids encoding/decoding byte arrays into Base64, facilitating a more efficient interop process.\r\n\r\n### Breaking Change\r\n#### Receiving Byte Arrays in JS\r\n```js\r\nfunction ReceivesByteArray(data)\r\n{\r\n\t// Previously data was a Base 64 encoded string representing the byte array\r\n\t// 6.0 Preview 6 and beyond, it'll be a Uint8Array (no longer requires processing the Base 64 encoding)\r\n}\r\n```\r\n\r\nwhich can be invoked by the following C# code:\r\n```csharp\r\nvar bytes = new byte[] { 1, 5, 7 };\r\nawait _jsRuntime.InvokeVoidAsync(\"ReceivesByteArray\", bytes);\r\n```\r\n\r\n#### Sending Byte Arrays from JS\r\nIf .NET is expecting a `byte[]` JS must provide a `Uint8Array`. Previously, it was possible to provide a Base64 encoded array using `btoa`.\r\n\r\nFor example, if you have something like this:\r\n```csharp\r\nvar bytes = await _jsRuntime.InvokeAsync<byte[]>(\"someJSMethodReturningAByteArray\");\r\n```\r\n\r\nthen you _must_ provide a `Uint8Array` from JS (must _not_ be Base 64 encoded).\r\n\r\n**Before:**\r\n```js\r\nfunction someJSMethodReturningAByteArray() {\r\n    const data = new Uint8Array([ 1, 2, 3 ]);\r\n    const base64EncodedData = btoa(String.fromCharCode.apply(null, data as unknown as number[]));\r\n    return base64EncodedData;\r\n}\r\n```\r\n\r\n**After:**\r\n```js\r\nfunction someJSMethodReturningAByteArray() {\r\n    const data = new Uint8Array([ 1, 2, 3 ]);\r\n    return data;\r\n}\r\n```\r\n\r\n\r\nPR: https://github.com/dotnet/aspnetcore/pull/33015\r\nIssue: https://github.com/dotnet/aspnetcore/issues/21877\r\n","Url":"https://github.com/dotnet/announcements/issues/187","RelatedDescription":"Open issue \"Byte Array Interop in .NET 6.0 Preview 6\" (#187)"},{"Id":"887964131","IsPullRequest":false,"CreatedAt":"2021-05-11T17:28:23","Actor":"rbhanda","Number":"186","RawContent":null,"Title":"May 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in May 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET May 2021 Updates – 5.0.6](https://devblogs.microsoft.com/dotnet/net-may-2021/)\r\n  * .NET 5.0.6 and .NET SDK 5.0.203 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.6/5.0.6.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.15 and .NET SDK 3.1.115 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.15/3.1.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.28 and .NET SDK 2.1.524 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.28/2.1.28.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Framework</h2>\r\n\r\n* [.NET Framework May 2021 Security and Quality Rollup Update](https://devblogs.microsoft.com/dotnet/net-framework-may-2021-security-and-quality-rollup-updates/)\r\n* [.NET Framework May 2021 Cumulative Update Preview](https://devblogs.microsoft.com/dotnet/net-framework-may-2021-cumulative-update-preview/)\r\n*  [.NET Framework May 2021 Cumulative Update Preview for Windows 10, versions 2004, 20H2, 21H1](https://devblogs.microsoft.com/dotnet/net-framework-may-2021-cumulative-update-preview-for-windows-10-versions-2004-20h2-21h1/)\r\n\r\n\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/186","RelatedDescription":"Open issue \"May 2021 .NET Updates\" (#186)"},{"Id":"887903672","IsPullRequest":false,"CreatedAt":"2021-05-11T17:05:35","Actor":"rbhanda","Number":"185","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-31204 | .NET Core Elevation of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-31204 | .NET Core Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0 and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nAn elevation of privilege vulnerability exists in .NET 5.0 and .NET Core 3.1 when a user runs a single file application on Operating Systems based on Linux or macOS.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/52608\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0 application running on .NET 5.0.5 or lower\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.14 or lower\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0 or .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.6 or SDK 5.0.203 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.15 or SDK 3.1.115 (for Visual Studio 2019 v16.4) or 3.1.409 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n\r\n.NET 5.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-31204](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31204)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 11, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-05-11_","Url":"https://github.com/dotnet/announcements/issues/185","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-31204 | .NET Core Elevation of Privilege Vulnerability\" (#185)"},{"Id":"869369627","IsPullRequest":false,"CreatedAt":"2021-04-28T00:12:05","Actor":"mmitche","Number":"184","RawContent":null,"Title":".NET 6 will shift to a new signing certificate for some components","State":"open","Body":".NET 6 will shift to a new signing certificate for many of its core binaries. This shift is intended to make it easier for Windows Defender Application Control (WDAC) customers to choose whether to allow .NET 6 and beyond on their environments, without the side effects a key shared between multiple products might have.\r\n\r\n## Details\r\n\r\nToday Microsoft signs .NET artifacts with a variety of certificates. For example, NuGet packages, 3rd party binaries redistributed with .NET, Visual Studio extension packages, and some specialized debugging related binaries all have different certificates. The most common certificate is **Microsoft Corporation**, with issuer **Microsoft Code Signing PCA 2011** and thumbprint **abdca79af9dd48a0ea702ad45260b3c03093fb4b**, used to sign most executable files. .NET is switching to **.NET**, with issuer **Microsoft Code Signing PCA 2011** and thumbprint **60ff375e5669b98d43ea0e2328e618cf73c0f91d**.\r\n\r\nNot all binaries signed with **Microsoft Corporation** are shifting to the new certificate. .NET repackages a variety of assets from previous releases (e.g. targeting packs), and those will not change. Only newly built .NET 6 binaries will get the new certificate. Some tooling utilized in Visual Studio will remain on the existing cert.\r\n\r\n## Discussion\r\n\r\nQuestions or concerns? Please discuss at https://github.com/dotnet/runtime/issues/51967","Url":"https://github.com/dotnet/announcements/issues/184","RelatedDescription":"Open issue \".NET 6 will shift to a new signing certificate for some components\" (#184)"},{"Id":"868291321","IsPullRequest":false,"CreatedAt":"2021-04-27T00:03:51","Actor":"jamshedd","Number":"183","RawContent":null,"Title":".NET Framework retiring SHA-1 content","State":"open","Body":"The .NET team is taking steps that will affect previously shipped .NET Framework releases and updates currently available for download from Microsoft. \r\n\r\nSee these for more information:\r\n\r\n[SHA-1 Retirement Statement](https://aka.ms/framework-sha1-retirement)\r\n[.NET Framework 4.5.2, 4.6, 4.6.1 End of Support announcement](https://aka.ms/framework-452-46-461-eos-blog)","Url":"https://github.com/dotnet/announcements/issues/183","RelatedDescription":"Open issue \".NET Framework retiring SHA-1 content\" (#183)"},{"Id":"860019790","IsPullRequest":false,"CreatedAt":"2021-04-16T17:28:32","Actor":"terrajobst","Number":"182","RawContent":null,"Title":"Migration to main completed","State":"open","Body":"As [previously announced](https://github.com/dotnet/announcements/issues/172), we have standardized the branch naming and use `main` as the default branch for all new repos moving forward. We have just completed the migration of all existing repos to `main` in the `dotnet` and `aspnet` organizations.\r\n\r\n![Migration status](https://user-images.githubusercontent.com/5169960/115061413-03296d00-9e9e-11eb-9c17-631237172cdb.png)\r\n\r\n## What about non-Microsoft owned repos?\r\n\r\nThere are other repos in the `dotnet` organization that aren't owned by Microsoft. It's up to the project maintainers to decide whether or not they want to rename their default branch as well. We decided that there is a value in having a unified naming convention across all our repos as opposed to having a split like \"new repos use `main`, existing repos use what they currently have\". But renaming the default branch is work and there is a reason it took as couple of months to complete the migration to `main`.\r\n\r\nIn case you're curious, [here are the steps we followed](https://aka.ms/m2m-dotnet).\r\n\r\n## What do I need to do?\r\n\r\n**You don't need to update your PRs**. If you submitted a PR against the old default branch, the GitHub tooling has automatically retargeted your PR against the new default branch (`main`).\r\n\r\nFor sanity, **you should rename the default branch in your fork as well**. When you go to your fork, GitHub will guide you through this experience:\r\n\r\n![Rename branch in fork](https://user-images.githubusercontent.com/5169960/105210186-92bdba80-5aff-11eb-99c9-0beb708fcf3f.png)\r\n\r\n**You will need to update the repos you cloned to your hard drive**. When you go to the original repository, GitHub will guide you through this experience:\r\n\r\n![Update local repo](https://user-images.githubusercontent.com/5169960/105210184-92bdba80-5aff-11eb-93a8-2b13dbbf74c8.png)\r\n\r\nFor a discussion, please use https://github.com/dotnet/arcade/issues/6825.","Url":"https://github.com/dotnet/announcements/issues/182","RelatedDescription":"Open issue \"Migration to main completed\" (#182)"},{"Id":"851621247","IsPullRequest":false,"CreatedAt":"2021-04-06T17:01:00","Actor":"rbhanda","Number":"181","RawContent":null,"Title":"April 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in April 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET April 2021 Updates – 5.0.5](https://devblogs.microsoft.com/dotnet/net-april-2021/)\r\n  * .NET 5.0.5 and .NET SDK 5.0.202 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.5/5.0.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.14 and .NET SDK 3.1.114 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.14/3.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.27 and .NET SDK 2.1.523 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.27/2.1.27.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/181","RelatedDescription":"Open issue \"April 2021 .NET Updates\" (#181)"},{"Id":"850601710","IsPullRequest":false,"CreatedAt":"2021-04-05T19:26:22","Actor":"richlander","Number":"180","RawContent":null,"Title":"NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA","State":"open","Body":"# NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA\r\n\r\n[NuGet package signing verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference) relies on the `VeriSign Universal Root Certification Authority` as part of establishing a chain-of-trust for NuGet packages. `VeriSign Universal Root Certification Authority` was recently removed from [NSS](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) and `ca-certificates` packages. This removal effectively breaks NuGet package signing verification, which has the result of breaking the ability to restore NuGet packages.\r\n\r\nThis break in behavior is only observed with .NET 5 and .NET 6, which have NuGet package verification enabled (and it cannot be disabled). [NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) has been observed on some distros already and we expect it to become pervasive quickly as more distros are updated to include more recent version of `NSS` and `ca-certificates` (with the VeriSign CA removed). We are in the process of releasing updated builds of .NET 5 and .NET 6 that have NuGet package verification disabled on Linux and macOS.\r\n\r\nWe need developers, companies, and commercial providers to install (or otherwise use) updated builds of .NET 5 and .NET 6 if you rely on those .NET versions on Linux. If you adopt the updated .NET versions soon, you should not observe a break in functional behavior, and will be able to confidently update to newer versions of `NSS` and `ca-certificates` packages.\r\n\r\nUpdates: \r\n- [NuGet repository signature certificate will expire on April 14th, 2021](https://github.com/NuGet/Announcements/issues/58)\r\n- [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/) (NuGet blog)\r\n- [.NET April 2021 Updates – 5.0.5](https://devblogs.microsoft.com/dotnet/net-april-2021-updates/) (.NET blog)\r\n- [.NET 6 Preview 3](https://devblogs.microsoft.com/dotnet/announcing-net-6-preview-3/)\r\n\r\n## Discussion\r\n\r\nPlease share your feedback on this topic and see what others are saying at:\r\n\r\nhttps://github.com/NuGet/Home/issues/10712\r\n\r\n## Updated .NET builds\r\n\r\nNew .NET builds will be provided with NuGet package verification disabled on Linux and macOS. The following are the expected release dates:\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0) -- April 6, 2021.\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0) -- April 8, 2021.\r\n\r\nNew [container images](https://hub.docker.com/_/microsoft-dotnet) will be published for Alpine, Debian, and Ubuntu on both of these dates, for the respective releases.\r\n\r\nThese builds include significant additional functionality beyond disabling NuGet package verification. We originally planned to release these builds as regular releases for all supported operating systems and architectures, targeting April 13th. We made two changes from our original release plan: earlier release dates and include the change in NuGet functionality for Linux and macOS.\r\n\r\n## Who is affected\r\n\r\n.NET 5+ users will be affected on any operating system that has removed the `VeriSign Universal Root Certification Authority`. We are maintaining a list of [Linux distros that are known to be affected](https://github.com/NuGet/Announcements/issues/56).\r\n\r\n`nuget.exe` is sometimes used on Linux with Mono. This scenario is not affected.\r\n\r\nThere has been an [industry-wide movement to distrust the VeriSign root CA](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/), including companies like Apple, Google, Microsoft, and Mozilla. This may mean that at anytime in the future, [Apple](https://support.apple.com/en-us/HT212140) and [Microsoft](https://ccadb-public.secure.force.com/microsoft/IncludedCACertificateReportForMSFT) can remove `VeriSign Universal Root Certification Authority` from their trusted root CA list.\r\n\r\n## Solution\r\n\r\nThe NuGet team has [disabled the package verification feature](https://github.com/NuGet/NuGet.Client/pull/3979) for macOS and Linux. If needed, we will disable the feature for Windows at a later time. This change will be available in the updated .NET builds covered earlier.\r\n\r\nWe are also [talking to some Linux distro package maintainers](https://gitlab.alpinelinux.org/alpine/ca-certificates/-/issues/1) to ask them to delay the removal of the `VeriSign Universal Root Certification Authority` (for code signing only). Even a month of grace would help a lot, to enable .NET users on Linux to adopt the newer .NET 5 and .NET 6 builds.\r\n\r\nTo clarify, this change does not affect .NET Core 3.1 and earlier versions. It does not affect .NET Framework. It does not affect any .NET functionality on Windows, at least not at this time.\r\n\r\n## More Context\r\n\r\nWe observed [NuGet Restore Issues on Debian Family Linux Distros](https://github.com/NuGet/Announcements/issues/49) in January, 2021. This led us to discover that there has been an industry-wide movement to remove the `VeriSign Universal Root Certification Authority`.\r\n\r\nNuGet has historically relied on two key certificates:\r\n\r\n- NuGet Microsoft Author Signing Certificate Update - Expired January 27th, 2021\r\n- NuGet.org Repository Signing Certificate Update - Expires April 14th, 2021\r\n\r\nAfter those certificates expire, the NuGet client falls back to [timestamp verification](https://docs.microsoft.com/nuget/reference/signed-packages-reference), which enables package verification to still function. The timestamp verification relies on VeriSign root certificate authority. The absence of this root certificate authority being available on a machine means that timestamp verification is no longer functional, which causes package signature verification to fail.\r\n\r\nSecurity is very important to us. We are putting together a plan to use a new system that will allow us to re-enable package signing verification on all supported operating systems. We will have more to share on our future plans once we are sure that all systems are once again functional.\r\n\r\n[.NET 5 NuGet Restore Failures on Linux distributions](https://github.com/NuGet/Announcements/issues/56) provides more details on error messages, affected environments, and solutions.","Url":"https://github.com/dotnet/announcements/issues/180","RelatedDescription":"Open issue \"NuGet package restore broken on .NET 5+ with Removal of Trust of VeriSign CA\" (#180)"},{"Id":"837071846","IsPullRequest":false,"CreatedAt":"2021-03-30T21:15:03","Actor":"Nirmal4G","Number":"179","RawContent":null,"Title":"Preserve git refspec to local patches and branches after renamed origin's master","State":"closed","Body":"For all those who can't pull `master`, it should have renamed to `main`.\r\n\r\nTo preserve refspec to patches and branches, just changing the `heads/master` to `heads/main` should work.\r\n\r\n```diff\r\n[remote \"origin\"]\r\n\turl = https://github.com/dotnet/your-repo\r\n-\tfetch = +refs/heads/master:refs/remotes/origin/master\r\n+\tfetch = +refs/heads/main:refs/remotes/origin/master\r\n\ttagopt = --no-tags\r\n[branch \"master\"]\r\n\tremote = origin\r\n-\tmerge = refs/heads/master\r\n+\tmerge = refs/heads/main\r\n```\r\n\r\n> Putting this out there, if anyone else facing similar issue with git.","Url":"https://github.com/dotnet/announcements/issues/179","RelatedDescription":"Closed issue \"Preserve git refspec to local patches and branches after renamed origin's master\" (#179)"},{"Id":"826383777","IsPullRequest":false,"CreatedAt":"2021-03-09T18:01:29","Actor":"rbhanda","Number":"178","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/49377\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerable package is [System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/) . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\r\n\r\nVulnerable package versions:\r\n\r\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web  package with a vulnerable version listed below.\r\n\r\nPackage Name| Vulnerable Versions| Secure Versions\r\n:----- | :----: | -----:\r\n[System.Text.Encodings.Web](https://www.nuget.org/packages/System.Text.Encodings.Web/)| 4.0.0 - 4.5.0 <br> 4.6.0-4.7.1 <br> 5.0.0  | 4.5.1 <br>4.7.2 <br>5.0.1\r\n\r\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for [supported .NET versions](https://github.com/dotnet/core/blob/main/releases.md).\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.4 or SDK 5.0.104 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.13 or SDK 3.1.113 (for Visual Studio 2019 v16.4) or 3.1.407 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.26 or SDK 2.1.522 (for Visual Studio 2019 v15.9) or 2.1.814 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-26701](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26701)\r\n\r\n### Revisions\r\n\r\nV1.0 (March 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-03-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/178","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-26701 | .NET Core Remote Code Execution Vulnerability\" (#178)"},{"Id":"826382587","IsPullRequest":false,"CreatedAt":"2021-03-09T18:00:38","Actor":"rbhanda","Number":"177","RawContent":null,"Title":"March 2021 .NET Updates","State":"open","Body":"The following .NET updates were released in March 2021. This issue will be updated if there are any additional releases during the month.\r\n\r\n<h2>.NET </h2>\r\n\r\n* [.NET March 2021 Updates – 5.0.4, 3.1.13, 2.1.26](https://devblogs.microsoft.com/dotnet/net-march-2021/)\r\n  * .NET 5.0.4 and .NET SDK 5.0.104 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.4/5.0.4.md) | [Download](https://dotnet.microsoft.com/download/dotnet/5.0))\r\n  *    .NET Core 3.1.13 and .NET SDK 3.1.113 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.13/3.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.1))\r\n  *    .NET Core 2.1.26 and .NET SDK 2.1.522 ([Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.26/2.1.26.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1))\r\n\r\n<h2>.NET Support Policies</h2>\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://dotnet.microsoft.com/platform/support/policy/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/177","RelatedDescription":"Open issue \"March 2021 .NET Updates\" (#177)"},{"Id":"804795571","IsPullRequest":false,"CreatedAt":"2021-02-09T18:17:29","Actor":"rbhanda","Number":"176","RawContent":null,"Title":"Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA remote code execution vulnerability exists when parsing certain types of graphics files. This vulnerability only exists on systems running on MacOS or Linux.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/48066\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0, .NET Core 3.1, or .NET Core 2.1 application running on .NET 5.0.2, .NET Core 3.1.11, or .NET Core 2.1.24 or lower, respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.3 or SDK 5.0.103 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.12 or SDK 3.1.112 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.25 or SDK 2.1.521 (for Visual Studio 2019 v15.9) or 2.1.813 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-24112](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24112)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-02-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/176","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2021-24112 | .NET 5 and .NET Core Remote Code Execution Vulnerability\" (#176)"},{"Id":"804794018","IsPullRequest":false,"CreatedAt":"2021-02-09T18:15:20","Actor":"rbhanda","Number":"175","RawContent":null,"Title":" Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists when creating HTTPS web request during X509 certificate chain building.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/48067\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET 5.0, .NET Core 3.1, or .NET Core 2.1 application running on .NET 5.0.2, .NET Core 3.1.11, or .NET Core 2.1.24 or lower, respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 5.0, .NET Core 3.1 or .NET Core 2.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* If you're using .NET 5.0, you should download and install Runtime 5.0.3 or SDK 5.0.103 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\r\n\r\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.12 or SDK 3.1.112 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\n* If you're using .NET Core 2.1, you should download and install Runtime 2.1.25 or SDK 2.1.521 (for Visual Studio 2019 v15.9) or 2.1.813 from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n\r\n.NET 5.0, .NET Core 3.1 and .NET Core 2.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core or .NET 5, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-1721](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-1721)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 09, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-02-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/175","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2021-1721 | .NET Core Denial of Service Vulnerability\" (#175)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458863353233879041","CreatedAt":"2021-11-11T18:25:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Machine Learning for .NET developers with @veronika_dev1.\n\nJoin us now ➡️… https://t.co/4VEwpDp1Sv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":6,"FavoriteCount":0,"RawContent":null},{"Id":"1458855802345820163","CreatedAt":"2021-11-11T17:55:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: OSS NuGet Package Explorer - From WPF to WinUI and running in the Browser with… https://t.co/DFjbXMZR4d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":7,"FavoriteCount":0,"RawContent":null},{"Id":"1458848249599639553","CreatedAt":"2021-11-11T17:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Clean Architecture with #ASPNET Core 6 with @ardalis.\n\nJoin us now ➡️… https://t.co/uG17PDDak9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"1458840698749440005","CreatedAt":"2021-11-11T16:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Responsive and Adaptive Tactics for Blazor 🔥 Applications with @edcharbeneau.\n\nJoin u… https://t.co/16EBzTbyDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"1458833148956004353","CreatedAt":"2021-11-11T16:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Learn Live | Build your first microservice with .NET - @codemillmatt and @nishanil.… https://t.co/vb3TLjho7c","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1458825601054392321","CreatedAt":"2021-11-11T15:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Learn Live | Create a web UI with #ASPNET Core with @jongalloway and @mairacw.\n\nJoin… https://t.co/sU7cNft2hT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"1458818050669649923","CreatedAt":"2021-11-11T15:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Raspberry-Pi hand sanitizer controlled by Mobile Apps with @saamerm.\n\nJoin us now ➡️… https://t.co/k2soNDGhyd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1458810503845851138","CreatedAt":"2021-11-11T14:55:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Azure Percept, #IoT and AI at the Edge with @careypayette.\n\nJoin us now ➡️… https://t.co/gsc5JRacd3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1458802951510765571","CreatedAt":"2021-11-11T14:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Zero to Hero with #GitHub CodeSpaces with @rorypreddy.\n\nJoin us now ➡️… https://t.co/kj8FefauPd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"1458795401629343750","CreatedAt":"2021-11-11T13:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Modern .NET Messaging using MassTransit with @PhatBoyG.\n\nJoin us now ➡️… https://t.co/MN9t2IaL4P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1458787853215928321","CreatedAt":"2021-11-11T13:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: 30 minutes of Testing in .NET with @michaeldera.\n\nJoin us now ➡️… https://t.co/Xu465O68UV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1458780301333778432","CreatedAt":"2021-11-11T12:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Creating NFT with .NET with @sebaleoperez.\n\nJoin us now ➡️ https://t.co/lsrb9oPaY3 https://t.co/slkrfldsZr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":8,"RawContent":null},{"Id":"1458772754921148416","CreatedAt":"2021-11-11T12:25:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Understanding Microservices - a guide for the monolithic developer with @aylacodesit.… https://t.co/Dam7OADkvd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1458765205396238336","CreatedAt":"2021-11-11T11:55:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Blazor 🔥 and GraphQL with @PoornimaNayar.\n\nJoin us now ➡️ https://t.co/XUV0CWbMt2 https://t.co/ucE42sR4Ql","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":16,"FavoriteCount":0,"RawContent":null},{"Id":"1458757656626311172","CreatedAt":"2021-11-11T11:25:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Welcome to Maui Community Toolkit with @pj_souz and @jfversluis.\n\nJoin us now ➡️… https://t.co/YlahJXudhS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":17,"FavoriteCount":2,"RawContent":null},{"Id":"1458750103334887424","CreatedAt":"2021-11-11T10:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: OpenTelemetry with Minimal APIs in .NET 6 with Andrea Tosato and Marco Minerva.\n\nJoin… https://t.co/VoBicBWuSq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1458742554703319045","CreatedAt":"2021-11-11T10:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: JavaScript front-end development with #ASPNET Core in .NET 6 with Javier Calvarro Nel… https://t.co/xOUXuf9Efj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":18,"FavoriteCount":0,"RawContent":null},{"Id":"1458735006491332615","CreatedAt":"2021-11-11T09:55:02+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: Drawn controls in #dotNETMAUI with https://t.co/RpRCK69OKq.\n\nJoin us now ➡️… https://t.co/kxW86xasLj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":12,"FavoriteCount":1,"RawContent":null},{"Id":"1458727455125082115","CreatedAt":"2021-11-11T09:25:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: SAFE Stack - The Pit of Success for Functional Web Programming with @isaac_abraham.… https://t.co/V5EABoSxlc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1458719905881202689","CreatedAt":"2021-11-11T08:55:01+00:00","UserScreenname":"dotnet","Text":"Streaming live @ #dotNETConf: What’s new in bUnit for .NET 6 with @egilhansen.\n\nJoin us now: ➡️… https://t.co/OMEjgUeSN0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null}]}},"RunOn":"2021-11-11T18:46:37.2889673Z","RunDurationInMilliseconds":12060}