{"Data":{"Vue-Issues":{"Issues":[{"Id":"802951144","IsPullRequest":false,"CreatedAt":"2021-02-07T13:31:52","Actor":"vbarbarosh","Number":"11903","RawContent":null,"Title":"$refs might contain values in incorrect order when using with template","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/vb-bannernow/pen/LYbNrqL](https://codepen.io/vb-bannernow/pen/LYbNrqL)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust open a codepen and click on a silver area.\r\n\r\n### What is expected?\r\n[ \"1\", \"1.5\", \"2\", \"3\" ]\r\n\r\n### What is actually happening?\r\n[ \"1\", \"1.5\", \"3\", \"2\" ]\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11903","RelatedDescription":"Closed issue \"$refs might contain values in incorrect order when using with template\" (#11903)"},{"Id":"801721168","IsPullRequest":false,"CreatedAt":"2021-02-06T14:29:49","Actor":"tbhaxor","Number":"11900","RawContent":null,"Title":"Lifecycle hooks typings not showing","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://null](https://null) \r\n\r\n_Its more of typing issue than functionality bug_\r\n\r\n### Steps to reproduce\r\n1. Setup a typescript project\r\n2. Create class component using vue-property-decorator\r\n3. In class enter `crea` and invoke completions in vscode (use the CTRL   SPACE)\r\n4. Erase `crea` and again invoke completions\r\n\r\n### What is expected?\r\nIt should list all the list of lifecycle hooks when requested completions like other functions `$forceUpdate`..\r\n\r\n### What is actually happening?\r\nNo typings for lifecycle hooks\r\n\r\n---\r\nHere the typings of external package vue-toast is being shown in vue class but not of vue lifecycle hooks\r\n\r\n![](https://i.imgur.com/ZIp2BUr.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11900","RelatedDescription":"Closed issue \"Lifecycle hooks typings not showing\" (#11900)"},{"Id":"802596228","IsPullRequest":false,"CreatedAt":"2021-02-06T08:56:35","Actor":"wenfangdu","Number":"11902","RawContent":null,"Title":"[Bug] :class=\"false\" causes class being rendered","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Steps to reproduce\r\n```html\r\n<template>\r\n  <div :style=\"false\" :class=\"false\" :foo=\"false\">\r\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laudantium modi\r\n    repudiandae, illum sequi nemo est deleniti optio distinctio quaerat quasi\r\n    dolores vitae aspernatur quisquam, voluptatibus quibusdam ullam, ipsum aut\r\n    amet?\r\n  </div>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nPer\r\n> [... If isButtonDisabled has the value of null, undefined, or false, the disabled attribute will not even be included in the rendered <button> element.](https://vuejs.org/v2/guide/syntax.html#Attributes).\r\n\r\nNone of `foo`, `class`, `style` should be rendered.\r\n\r\n### What is actually happening?\r\n`class` is rendered.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11902","RelatedDescription":"Closed issue \"[Bug] :class=\"false\" causes class being rendered\" (#11902)"},{"Id":"802113075","IsPullRequest":false,"CreatedAt":"2021-02-05T14:36:35","Actor":"ruojianll","Number":"11901","RawContent":null,"Title":"Keep-alive filter by slot's key.","State":"closed","Body":"### What problem does this feature solve?\r\nKeep-alive filter by slot instance.\r\n\r\nI need to use it to filter my route component in `router-view` by `:key=\"$route.fullPath\"`\r\n\r\n### What does the proposed API look like?\r\n```\r\n<keep-alive :include-keys=\"function(keyOfSlot:string) or regex or string\">\r\n  <component :key=\"myKey\"/>\r\n</keep-alive>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11901","RelatedDescription":"Closed issue \"Keep-alive filter by slot's key.\" (#11901)"},{"Id":"800396162","IsPullRequest":false,"CreatedAt":"2021-02-04T06:50:03","Actor":"Alymbek","Number":"11899","RawContent":null,"Title":"lifetime of Vue JS 2","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/intlify/vue-i18n-next/issues/331](https://github.com/intlify/vue-i18n-next/issues/331)\r\n\r\n### Steps to reproduce\r\ncan't find any info about life term and LTS version\r\n\r\n### What is expected?\r\nlong life the King!\r\n\r\n### What is actually happening?\r\nI worried about the life term and  long term support after.\r\n\r\n---\r\nI just start project on VueJS 3, but facing more problems with some of the library.\r\nEspecially IE support for most of library(even **Vue JS version 3 not work in IE now and other library in Edge**).\r\n\r\nSo, my question is - how long time you'll support Vue JS version 2?\r\nWhen you planned to close maintain version 2?\r\n\r\nIs version 2 support IE? As well Edge?\r\n\r\nIs version 2 still actual for modern web-development?\r\nDo you have any benchmark to compare between version 2 and 3?\r\n\r\nPS. My project is small now and I hope that I can easily migrate to version 3 if I start now with version 2.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11899","RelatedDescription":"Closed issue \"lifetime of Vue JS 2\" (#11899)"},{"Id":"797631318","IsPullRequest":false,"CreatedAt":"2021-01-31T13:18:55","Actor":"HashemGo","Number":"11898","RawContent":null,"Title":"Vue with Blazor","State":"closed","Body":"### What problem does this feature solve?\r\nI need to use Vue js with Blazor is there any steps, please\r\n\r\n### What does the proposed API look like?\r\n.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11898","RelatedDescription":"Closed issue \"Vue with Blazor\" (#11898)"},{"Id":"797366829","IsPullRequest":false,"CreatedAt":"2021-01-30T09:52:37","Actor":"yuwu9145","Number":"11897","RawContent":null,"Title":"v-model.number incorrectly handles of negative numbers between 0 and -1 when manually emit @input event","State":"closed","Body":"### Version\r\n2.6.12\r\n\r\n### Reproduction link\r\n[https://codepen.io/yuchaosydney/pen/oNYNJad](https://codepen.io/yuchaosydney/pen/oNYNJad)\r\n\r\n\r\n\r\n\r\n\r\n### Scenario\r\nWhen making a custom input component (lets call it `customInput` & use it as `<customInput v-model.number=\"[a property]\">`). When `customInput` manually does `this.$emit('input', value)`. Then `v-model.number` is not able to correctly handle a negative number between 0 and -1. But any other negative numbers (e.g. `-1.3`) are ok.\r\n\r\n### Steps to reproduce\r\n1. Load CodePen link\r\n2. Try to input \"-0.3\"\r\n\r\n### What is expected?\r\nThe input box should allow \"-0.3\"\r\n\r\n### What is actually happening?\r\nThe input box displays \"0.3\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11897","RelatedDescription":"Closed issue \"v-model.number incorrectly handles of negative numbers between 0 and -1 when manually emit @input event\" (#11897)"},{"Id":"796128861","IsPullRequest":false,"CreatedAt":"2021-01-28T15:57:58","Actor":"songmengda","Number":"11896","RawContent":null,"Title":"Using 'in mobile devices' window.orientation ' exception","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/songmengda/pen/PobYxqJ](https://codepen.io/songmengda/pen/PobYxqJ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.1. Use the code in the recurrence link to start a Vue cli project through NPM, and use the mobile device to scan the code to access the page\r\n2. When the mobile phone switches between horizontal screen and vertical screen, the 'onreset' function is triggered. At this time, the 'text' value on the mobile phone screen does not match the real scene，For example, the mobile phone is in horizontal screen mode, but the vertical screen mode is displayed on the screen\r\n3.By printing the window object with vconsole, we find that its orientation value is correct, but through the window.orientation 'the value is wrong\r\n\r\n### What is expected?\r\nUsing Vue judgment in mobile terminal window.orientation The correct result can be obtained with the value of\r\n\r\n### What is actually happening?\r\nUse in Vue window.orientation The value obtained is inconsistent with the real orientation in window\r\n\r\n---\r\nUsing Vue to develop a need to switch the horizontal screen vertical screen state of the page, using the window.orientation Get the right results, not the wrong ones\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n\r\n`\r\n<template>\r\n  <div class=\"vue-template\">\r\n    {{text}}-{{orientation}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      text: '默认',\r\n      orientation: 0\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.orientation = window.orientation\r\n    if(window.orientation === 180 || window.orientation === 0){ // 竖屏\r\n      this.text = '竖屏'\r\n    }\r\n\r\n    if (window.orientation === 90 || window.orientation === -90) { //横屏\r\n      this.text = '横屏'\r\n    }\r\n\r\n    let _this = this\r\n    window.onresize = function (){\r\n      _this.orientation = window.orientation\r\n      if(window.orientation === 180 || window.orientation === 0){ // 竖屏\r\n        _this.text = '竖屏'\r\n      }\r\n\r\n      if (window.orientation === 90 || window.orientation === -90) { //横屏\r\n        _this.text = '横屏'\r\n      }\r\n      console.log(window)\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\nAfter repeatedly rotating the phone：\r\n`\r\n\r\n![image](https://user-images.githubusercontent.com/35358253/106162768-6c64e280-61c3-11eb-8b09-6f27fa1ec9a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/35358253/106162797-771f7780-61c3-11eb-8ac0-80532b91be36.png)\r\n\r\n![image](https://user-images.githubusercontent.com/35358253/106162846-8272a300-61c3-11eb-8192-55469930a605.png)\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11896","RelatedDescription":"Closed issue \"Using 'in mobile devices' window.orientation ' exception\" (#11896)"},{"Id":"795792050","IsPullRequest":false,"CreatedAt":"2021-01-28T08:40:02","Actor":"jiclivi","Number":"11895","RawContent":null,"Title":"Hello! Does vim have nodejs vue smart (such as: coc-html) code completion","State":"closed","Body":"### What problem does this feature solve?\r\nsuch as: coc-html\r\n\r\n### What does the proposed API look like?\r\nvim Plugin\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11895","RelatedDescription":"Closed issue \"Hello! Does vim have nodejs vue smart (such as: coc-html) code completion\" (#11895)"},{"Id":"795383322","IsPullRequest":false,"CreatedAt":"2021-01-27T19:31:28","Actor":"adamsol","Number":"11894","RawContent":null,"Title":"Checking whether v-on handler is a function invocation is broken","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/adamsol/pknr8dae/](https://jsfiddle.net/adamsol/pknr8dae/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the buttons.\r\n\r\n### What is expected?\r\nAll the buttons should behave in the same way: a message should appear below.\r\n\r\n### What is actually happening?\r\nOnly the first button works correctly.\r\n\r\n---\r\nSee #11893 for the origin of the issue.\r\n\r\nThe problem lies probably here: https://github.com/vuejs/vue/blob/5255841aaff441d275122b4abfb099b881de7cb5/packages/vue-template-compiler/build.js#L3801\r\n\r\nThe regexes used do not take into account cases such as additional spaces, parentheses, or chained function invocations. As a result, a promise is correctly returned only in the first case in the repro, and in all the other cases `errorHandler` won't capture the exception thrown in the async method.\r\n\r\nThe difference in the generated code (`return` is present only in the first case): https://template-explorer.vuejs.org/#%3Cdiv%20id%3D%22app%22%3E%0A%20%20%3Cbutton%20%40click%3D%22click(1)%22%3E%0A%20%20%20%20click(1)%0A%20%20%3C%2Fbutton%3E%0A%20%20%3Cbutton%20%40click%3D%22click%20(2)%22%3E%0A%20%20%20%20click%20(2)%0A%20%20%3C%2Fbutton%3E%0A%20%20%3Cbutton%20%40click%3D%22click((3))%22%3E%0A%20%20%20%20click((3))%0A%20%20%3C%2Fbutton%3E%0A%20%20%3Cbutton%20%40click%3D%22(click(4))%22%3E%0A%20%20%20%20(click(4))%0A%20%20%3C%2Fbutton%3E%0A%20%20%3Cbutton%20%40click%3D%22click(5).then()%22%3E%0A%20%20%20%20click(5).then()%0A%20%20%3C%2Fbutton%3E%0A%3C%2Fdiv%3E\r\n\r\nSuggested solution: either add `return` in every case, or don't add it at all, so that the behaviour is consistent. If checking for the function invocation is crucial, then the code must be parsed in some other way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11894","RelatedDescription":"Open issue \"Checking whether v-on handler is a function invocation is broken\" (#11894)"},{"Id":"795276317","IsPullRequest":false,"CreatedAt":"2021-01-27T17:25:57","Actor":"adamsol","Number":"11893","RawContent":null,"Title":"errorHandler not catching exceptions in promises with .then() inside v-on","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/adamsol/hj6q32v0/](https://jsfiddle.net/adamsol/hj6q32v0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the three buttons.\r\n\r\n### What is expected?\r\nExceptions for all the buttons should be captured and displayed below.\r\n\r\n### What is actually happening?\r\nException for the second button isn't captured.\r\n\r\n---\r\nRelated to #7653.\r\n\r\nI'm using `@click=\"doAction().then(close)\"` for closing modal windows after successfully finishing async actions. A workaround for exceptions in `doAction` to be captured by `errorHandler` is to add `() =>` in the event handler, but it's not obvious.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11893","RelatedDescription":"Closed issue \"errorHandler not catching exceptions in promises with .then() inside v-on\" (#11893)"},{"Id":"795246880","IsPullRequest":false,"CreatedAt":"2021-01-27T17:22:15","Actor":"0x78f1935","Number":"11892","RawContent":null,"Title":"Walrus operator within v-if statement","State":"closed","Body":"### What problem does this feature solve?\r\nAllow us to use the value of an v-if statement to be used in children elements. Perhaps by [imitating the Python walrus operator](https://docs.python.org/3/whatsnew/3.8.html#assignment-expressions).\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n<div v-if=\"result in foo(bar)\">\r\n    <label :class=\"result\">Test</label>\r\n</div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nEDIT: I guess returning an array would work\r\nEDIT2:\r\n\r\nPerhaps more like\r\n```\r\n<div v-if=\"result in foo(bar) if result != 'foo'\">\r\n    <label :class=\"result\">Test</label>\r\n</div>\r\n```","Url":"https://github.com/vuejs/vue/issues/11892","RelatedDescription":"Closed issue \"Walrus operator within v-if statement\" (#11892)"},{"Id":"794980846","IsPullRequest":false,"CreatedAt":"2021-01-27T10:42:10","Actor":"huang-weijian","Number":"11891","RawContent":null,"Title":"In 2.6.12 too, the vm's $off can not remove callback defined in vm's methods","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://github.com/huang-weijian/vue--off](https://github.com/huang-weijian/vue--off)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue source code:\r\n// cb.fn is undefined\r\nif (cb === fn || cb.fn === fn) {\r\n    cbs.splice(i$1, 1);\r\n    break\r\n}\r\nIn fact:\r\nIn vm._events[eventName][fn defined in vm's methods], There is no fn attribute, only fns attribute\r\n\r\n### What is expected?\r\ncan remove cb defined vm'methods\r\n\r\n### What is actually happening?\r\ncan not\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11891","RelatedDescription":"Closed issue \"In 2.6.12 too, the vm's $off can not remove callback defined in vm's methods\" (#11891)"},{"Id":"794679550","IsPullRequest":true,"CreatedAt":"2021-01-27T01:08:14","Actor":"JodieShi","Number":"11890","RawContent":null,"Title":"update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11890","RelatedDescription":"Closed or merged PR \"update\" (#11890)"},{"Id":"793426181","IsPullRequest":false,"CreatedAt":"2021-01-25T14:41:37","Actor":"016","Number":"11889","RawContent":null,"Title":"is it possible set value silence in VUE?","State":"closed","Body":"### What problem does this feature solve?\r\n set value silence in VUE\r\n\r\n### What does the proposed API look like?\r\nI just need code like this\r\nthis.$set(this, 'buildCnt', dataObj.buildCnt, false) // not trigger watch, \r\nthis.$set(this, 'buildCnt', dataObj.buildCnt) //trigger watch\r\n\r\nit's very useful for some one time value set, and don't need trigger anything .\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11889","RelatedDescription":"Closed issue \"is it possible set value silence in VUE?\" (#11889)"},{"Id":"793169219","IsPullRequest":false,"CreatedAt":"2021-01-25T09:49:29","Actor":"wangziling","Number":"11888","RawContent":null,"Title":"Why v-bind=\"$attrs\" cannot replace the declared same name props in front of itself?","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/cocky-brahmagupta-ejn2z](https://codesandbox.io/s/cocky-brahmagupta-ejn2z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee the codesandbox result~\r\n\r\n### What is expected?\r\nIn my opinion and normal thoughts, if `v-bind=\"$attrs\"` or `v-bind=\"$props\"` is behind a declared and in same name property, it should replace the property value ahead.\r\n\r\n```js\r\n<a href=\"https://qq.com\" v-bind=\"$attrs\">Test</a>\r\n```\r\nif `$attrs` contain the property named 'href', In the normal thoughts, it should replace the data ahead.\r\n\r\n### What is actually happening?\r\nCannot replace.\r\n\r\n---\r\nAm I wrong?\r\nOr Hmmm... `v-bind=\"$attrs\"` take the lower priority of the normal `v-bind:href=\"__\"`?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11888","RelatedDescription":"Closed issue \"Why v-bind=\"$attrs\" cannot replace the declared same name props in front of itself?\" (#11888)"},{"Id":"792758139","IsPullRequest":true,"CreatedAt":"2021-01-24T10:03:26","Actor":"CodeDeli","Number":"11887","RawContent":null,"Title":"秦得力","State":"closed","Body":"秦得力的提交\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11887","RelatedDescription":"Closed or merged PR \"秦得力\" (#11887)"},{"Id":"792279859","IsPullRequest":false,"CreatedAt":"2021-01-23T12:39:48","Actor":"marcel-dancak","Number":"11884","RawContent":null,"Title":"Unnecessary update of computed property and watcher call, triggered by update of dependent computed property, even when it is evaluated to the same primitive value","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/marcel_dancak/xr2q40Lp/19/](https://jsfiddle.net/marcel_dancak/xr2q40Lp/19/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen console output in demo example. Click on UPDATE button and watch log messages in console.\r\n\r\n### What is expected?\r\nAfter each click on UPDATE button, computed property 'c' is updated, but it's value is still the same number value. Computed property 'params' doesn't need to be updated, because it depends only on property 'c', which always has the same primitive value. Watcher on property 'c' is not triggered, and I would expect watcher on 'params' property to be not triggered as well.\r\n\r\n### What is actually happening?\r\nComputed property 'params' is updated on each click.\r\n\r\n---\r\nI understand why 'c' watcher function is not called, and why watcher function on computed property returning 'the same' complex object is called, but I didn't expect computed property with the same primitive value result to cause updates of other computed properties.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11884","RelatedDescription":"Closed issue \"Unnecessary update of computed property and watcher call, triggered by update of dependent computed property, even when it is evaluated to the same primitive value\" (#11884)"},{"Id":"792537019","IsPullRequest":false,"CreatedAt":"2021-01-23T11:40:11","Actor":"ranemihir","Number":"11886","RawContent":null,"Title":"test","State":"closed","Body":"### What problem does this feature solve?\r\ntest\r\n\r\n### What does the proposed API look like?\r\ntest\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11886","RelatedDescription":"Closed issue \"test\" (#11886)"},{"Id":"792536892","IsPullRequest":false,"CreatedAt":"2021-01-23T11:39:03","Actor":"ranemihir","Number":"11885","RawContent":null,"Title":"h","State":"closed","Body":"h","Url":"https://github.com/vuejs/vue/issues/11885","RelatedDescription":"Closed issue \"h\" (#11885)"},{"Id":"791429188","IsPullRequest":true,"CreatedAt":"2021-01-21T19:25:35","Actor":"vue-bot","Number":"11883","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11883","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11883)"},{"Id":"791296787","IsPullRequest":true,"CreatedAt":"2021-01-21T16:26:41","Actor":"JerryYuanJ","Number":"11882","RawContent":null,"Title":"fix: fix #11881","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11882","RelatedDescription":"Open PR \"fix: fix #11881\" (#11882)"},{"Id":"791290731","IsPullRequest":false,"CreatedAt":"2021-01-21T16:21:21","Actor":"JerryYuanJ","Number":"11881","RawContent":null,"Title":"keep-alive component's `include` prop cannot trim blank space if there's any","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n\r\n### Steps to reproduce\r\n\r\nfollowing code makes a simple example:\r\n```\r\n<keep-alive include=\"a,    b,c\">\r\n    <router-view> </router-view>\r\n</keep-alive>\r\n```\r\n\r\n### What is expected?\r\ncomponent a, b, c should all be cached.\r\n\r\n### What is actually happening?\r\n`a` and `c` are fine except `b` with blank is failed to be kept alive.\r\n\r\n---\r\nWhen do the matching, should consider this situation because some devs like to add a space between words or formatted by some tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11881","RelatedDescription":"Open issue \"keep-alive component's `include` prop cannot trim blank space if there's any\" (#11881)"},{"Id":"790988918","IsPullRequest":false,"CreatedAt":"2021-01-21T11:43:24","Actor":"smohring","Number":"11880","RawContent":null,"Title":"How to use custom <script> blocks within root component","State":"closed","Body":"Hi guys, \r\n\r\nI'am using vue3 together with the contao cms.\r\nTherefore, my \"#app\" anchor is directly after the body and contains all html content within, created by contao cms. \r\nMy idea was, to use vue-components through the cms backend, and vue recognizes them only, if they are within the \"#app\" element.\r\n\r\nNow i have some \"custom\" scripts, that come along with contao cms e.g. Slider, Tabs etc. They put short custom scripts blocks right after the generated html to provide js functionallity.\r\n\r\nBut now vue3 \"sees\" those script blocks within its root-scope and puts a warning into the console. If i collect al <script> blocks with php and append them after the \"#app\" anchor, vue doesn't complain - but the scripts work only partially.\r\nIt seems, that vue3 prevents them from putting their own eventhandlers etc. to the html elements within vue's root-scope.\r\n\r\nIs there any way, that i can tell vue3 to only process vue-3 components within the root-scope and nothing else?\r\nWhat would be the best practice to use vue3 with a \"classic\" cms?\r\n\r\nKind regards,\r\nSteffen","Url":"https://github.com/vuejs/vue/issues/11880","RelatedDescription":"Closed issue \"How to use custom <script> blocks within root component\" (#11880)"},{"Id":"790708448","IsPullRequest":false,"CreatedAt":"2021-01-21T09:38:15","Actor":"kumaresan-subramani","Number":"11878","RawContent":null,"Title":"Vue3 migration not works as expected","State":"closed","Body":"### Version\r\n3.0.5\r\n\r\n### Reproduction link\r\n[https://github.com/kumaresan-subramani/vue3-suport](https://github.com/kumaresan-subramani/vue3-suport)\r\n\r\n### Steps to reproduce\r\n\r\n- clone above mentioned smple\r\n\r\n- then `npm i`\r\n\r\n- finally npm run serve\r\n\r\n- browser throws script error, but the same working fine in `vue2`\r\n\r\n### working sample\r\n\r\nsample with `\"vue\": \"^2.6.11` works fine without any error\r\n\r\n**Working sample** - https://github.com/Saranya13/vue-sample/\r\n\r\n### Environment info\r\n```\r\n\"vue\": \"^3.0.5\"\r\n\"@vue/cli-plugin-babel\": \"^4.5.10\",\r\n    \"@vue/cli-plugin-eslint\": \"^4.5.10\",\r\n    \"@vue/cli-service\": \"^4.5.10\",\r\n    \"@vue/compiler-sfc\": \"^3.0.5\",\r\n    \"babel-eslint\": \"^10.1.0\",\r\n    \"eslint\": \"^6.8.0\",\r\n    \"eslint-plugin-vue\": \"^7.4.1\",\r\n```\r\n\r\n### What is expected?\r\ncomponent gets rendered without script error\r\n\r\n### What is actually happening?\r\nthrows script error\r\n\r\n```\r\ncomponent-base.js?5981:6 Uncaught TypeError: Object prototype may only be an Object or null: undefined\r\n    at setPrototypeOf (<anonymous>)\r\n    at extendStatics (component-base.js?5981:6)\r\n    at __extends (component-base.js?5981:9)\r\n    at eval (component-base.js?5981:20)\r\n    at eval (component-base.js?5981:195)\r\n    at Module../node_modules/@syncfusion/ej2-vue-base/src/component-base.js (chunk-vendors.js:575)\r\n    at __webpack_require__ (app.js:849)\r\n    at fn (app.js:151)\r\n    at eval (index.js?4867:1)\r\n    at Module../node_modules/@syncfusion/ej2-vue-base/src/index.js (chunk-vendors.js:599)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11878","RelatedDescription":"Closed issue \"Vue3 migration not works as expected\" (#11878)"},{"Id":"790689489","IsPullRequest":false,"CreatedAt":"2021-01-21T09:36:10","Actor":"aljabr","Number":"11877","RawContent":null,"Title":"Scroll issue with navigation","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/#html](https://router.vuejs.org/guide/#html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNavigate after scrolling between pages  on ios\r\n\r\n### What is expected?\r\nWhile swiping between pages it should show the page not blank\r\n\r\n### What is actually happening?\r\nWhen the scroll position not matches between pages it will show blank page\r\n\r\n![ezgif com-video-to-gif](https://user-images.githubusercontent.com/15986585/105281098-69af2f80-5bbc-11eb-98b8-2b92c34ad618.gif)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11877","RelatedDescription":"Closed issue \"Scroll issue with navigation\" (#11877)"},{"Id":"790754489","IsPullRequest":false,"CreatedAt":"2021-01-21T07:16:17","Actor":"GeTOUO","Number":"11879","RawContent":null,"Title":"在html模板的正文中，对data里面的属性读取时，若有计算操作，结果是错误的","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/team/Vue/pen/rNVqYvM](https://codepen.io/team/Vue/pen/rNVqYvM)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n我正在学习vue，当我跟随教程打开组件部分的如下示例时：\r\n\r\n[Component basics: reusing components](https://codepen.io/team/Vue/pen/rNVqYvM)\r\n\r\n我修改了 template 部分的内容为： \r\n```\r\n    <button v-on:click=\"count++\">\r\n      You clicked me {{ ++count }} times.\r\n    </button>\r\n```\r\n\r\n然后 count 每次递增的值变成了102？\r\n\r\n### What is expected?\r\n期望计算是正确的 `++count === count+=1`\r\n\r\n### What is actually happening?\r\n`++count === count+=102`\r\n\r\n---\r\n目前我还不清楚vue解析模板的逻辑。但看起来这应该是一个bug\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11879","RelatedDescription":"Closed issue \"在html模板的正文中，对data里面的属性读取时，若有计算操作，结果是错误的\" (#11879)"},{"Id":"790684010","IsPullRequest":false,"CreatedAt":"2021-01-21T04:32:26","Actor":"aljabr","Number":"11876","RawContent":null,"Title":"Scroll issue with navigation","State":"closed","Body":"\r\nHi,\r\n\r\nthis issue only happens with vuejs apps!\r\nIf the scroll position of the current page not match the next or previous page it will show blank!\r\n\r\nthank you.\r\n\r\n@ @\r\n![ezgif com-video-to-gif](https://user-images.githubusercontent.com/15986585/105280400-bb56ba80-5bba-11eb-8bb4-dba909072f29.gif)\r\n","Url":"https://github.com/vuejs/vue/issues/11876","RelatedDescription":"Closed issue \"Scroll issue with navigation\" (#11876)"},{"Id":"789824315","IsPullRequest":false,"CreatedAt":"2021-01-20T09:57:10","Actor":"aStanleyLiang","Number":"11875","RawContent":null,"Title":" Is it anti-pattern to create component 100% by composition api #822 ","State":"closed","Body":"\r\nRecently I start my first vue3 project and I found the new feature Composition API. I wonders whether it is anti-pattern or not to 100% adopt Composition API to implement component? Because originally I think the purpose of Composition API is to encapsulate logic and can be imported by components. I searched a lot and cannot determine: lots of articles introduce the comparison between Composition API and Options API that looks like I even can implement through Composition API 100% without Options API.\r\n\r\nI know it's working and many voices on internet suggest so. Just wondering is it anti-pattern or not? I don't wanna abuse Composition API if originally it's not design to implement a view component.\r\n\r\nAppreciate in advance, stay safe🤙\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11875","RelatedDescription":"Closed issue \" Is it anti-pattern to create component 100% by composition api #822 \" (#11875)"},{"Id":"789691666","IsPullRequest":false,"CreatedAt":"2021-01-20T07:52:32","Actor":"Duanzihuang","Number":"11874","RawContent":null,"Title":"父组件条件渲染的时候加了class样式，导致子组件中无法接收到父组件传递的值","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、在父组件渲染的时候，加了一个条件渲染，并且多加了一个class\r\n2、父组件里面使用到了子组件，并且给子组件传值\r\n3、在子组件中监听父组件传递过来的值\r\n4、在子组件中监听父组件值的时候，无法获取传递过来的值\r\n\r\n### What is expected?\r\n期待能正常在子组件中，继续监听父组件传递过来的值。\r\n\r\n### What is actually happening?\r\n实际发生就是在子组件的watch中，无法获得父组件传递过来的值\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11874","RelatedDescription":"Closed issue \"父组件条件渲染的时候加了class样式，导致子组件中无法接收到父组件传递的值\" (#11874)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"803512563","IsPullRequest":false,"CreatedAt":"2021-02-08T15:03:21","Actor":"flyinmind","Number":"3471","RawContent":null,"Title":"android webview中使用loadDataWithBaseURL打开首页，打开页面后，不能回退到首页。同样的代码，浏览器中正常","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle/无](http://jsfiddle/无)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、android webview中使用loadDataWithBaseURL打开首页index.html，router采用hash模式；\r\n2、在首页index.html的created函数中，使用router.push打开一个页面A，OK；\r\n3、在A中，点击按钮后，使用router.push打开一个页面B，在B中点击按钮，调用router.back或go(-1)，无法返回，提示Not allowed to navigate top frame to data URL: data:text/html;charset=utf-8;charset=utf-8;base64,#/；\r\n4、如果使用history模式，返回后呈现空白页。\r\n试过再加一重跳转，index.html->A->B->C，都无法返回，日志提示是一样的。\r\n### What is expected?\r\n返回页面A\r\n\r\n### What is actually happening?\r\n页面无变化，日志中提示Not allowed to navigate top frame to data URL: data:text/html;charset=utf-8;charset=utf-8;base64,#/；\r\nsource: http://app.njhx.com/assets/builtin/vue-router-src_3.5.1.js (1994)\r\n应该是这一行，window.location[replace ? 'replace' : 'assign'](url);\r\n\r\n---\r\n我猜测可能因为loadDataWithBaseURL，index.html是data url，所以不能返回，\r\n但是进入index.html后，就立刻router.push(A)了，按理在B中调用router.back()时，应该回到A才对。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3471","RelatedDescription":"Closed issue \"android webview中使用loadDataWithBaseURL打开首页，打开页面后，不能回退到首页。同样的代码，浏览器中正常\" (#3471)"},{"Id":"799526451","IsPullRequest":true,"CreatedAt":"2021-02-07T14:16:22","Actor":"ashleahhill","Number":"3470","RawContent":null,"Title":"docs(link): add `custom` prop to samples","State":"closed","Body":"The `tag` prop of `<router-link>` has been removed in v4.0.0+\r\n\r\nhttps://github.com/vuejs/rfcs/blob/master/active-rfcs/0021-router-link-scoped-slot.md\r\n\r\nThe `custom` prop is functional, however it is not mentioned anywhere in the docs.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3470","RelatedDescription":"Closed or merged PR \"docs(link): add `custom` prop to samples\" (#3470)"},{"Id":"794862827","IsPullRequest":false,"CreatedAt":"2021-02-04T21:39:37","Actor":"rhysburnie","Number":"3462","RawContent":null,"Title":"There needs to be a way to disable scroll savedPosition","State":"closed","Body":"### What problem does this feature solve?\r\nThere needs to be a way to disable scroll savedPosition\r\n\r\nIt causes a style recalc and is slowing our app down (we see its the cause in profiler)\r\n\r\nWe dont use this feature and it seems like something that should be optional\r\n\r\n### What does the proposed API look like?\r\nRouter init option\r\n```\r\n{\r\n  saveScrollPosition: false, // or similar\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3462","RelatedDescription":"Closed issue \"There needs to be a way to disable scroll savedPosition\" (#3462)"},{"Id":"799417823","IsPullRequest":false,"CreatedAt":"2021-02-04T21:32:50","Actor":"AbrahemAlhofe","Number":"3469","RawContent":null,"Title":"Add 'active' and 'exact-active' events to ( router-link ) component","State":"closed","Body":"### What problem does this feature solve?\r\nI want to change position of ( link pointer ) to position of exact match link element \r\n```vue\r\n<template lang=\"pug\">\r\n    div.menu\r\n        Logo.menu__logo( :full='true' )\r\n        ul.menu__list\r\n          template( v-for='(path, localeKey) in links' )\r\n            li.menu__item( @mouseleave='hoverdLink = null' @mouseover='hoverdLink = $event.target' )\r\n              router-link.menu__link( :to=' `#${path.slice(1)}` ' ) {{ $t(`links.${localeKey}`) }}\r\n          span.menu__pointer( ref='pointer' )\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      hoverdLink: null,\r\n      activeLink: null,\r\n      links: { ... }\r\n    }\r\n  },\r\n  watch: {\r\n    hoverdLink (hoverdLink) {\r\n      const setWidth = (width) => { this.$refs.pointer.style.width = width   'px' }\r\n      const setPosition = (position) => { this.$refs.pointer.style.left = position   'px' }\r\n      if (!hoverdLink) {\r\n        setWidth(0)\r\n      } else {\r\n        setWidth(hoverdLink.getBoundingClientRect().width)\r\n        setPosition(hoverdLink.offsetLeft)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What does the proposed API look like?\r\nSo i want to add an listener to 'active' event or 'exact-active' event to make it\r\n```vue\r\n<template lang=\"pug\">\r\n    div.menu\r\n        Logo.menu__logo( :full='true' )\r\n        ul.menu__list\r\n          template( v-for='(path, localeKey) in links' )\r\n            li.menu__item( @mouseleave='hoverdLink = null' @mouseover='hoverdLink = $event.target' )\r\n              router-link.menu__link( :to=' `#${path.slice(1)}` '  @exact-active='activeLink = $event.target' ) {{ $t(`links.${localeKey}`) }}\r\n          span.menu__pointer( ref='pointer' :class='{ \"menu__pointer--active\" : !!activeLink }' )\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      hoverdLink: null,\r\n      activeLink: null,\r\n      links: { ... }\r\n    }\r\n  },\r\n watch: {\r\n    hoverdLink (hoverdLink) {\r\n      // don't move pointer\r\n      if ( this.activeLink ) return\r\n      const setWidth = (width) => { this.$refs.pointer.style.width = width   'px' }\r\n      const setPosition = (position) => { this.$refs.pointer.style.left = position   'px' }\r\n      if (!hoverdLink) {\r\n        setWidth(0)\r\n      } else {\r\n        setWidth(hoverdLink.getBoundingClientRect().width)\r\n        setPosition(hoverdLink.offsetLeft)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3469","RelatedDescription":"Closed issue \"Add 'active' and 'exact-active' events to ( router-link ) component\" (#3469)"},{"Id":"799412830","IsPullRequest":false,"CreatedAt":"2021-02-02T16:00:26","Actor":"AbrahemAlhofe","Number":"3468","RawContent":null,"Title":"Add 'active' and 'exact-active' events to ( router-link ) component","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n### Is your feature request related to a problem? Please describe.\r\nI want to change position of ( link pointer ) to position of exact match link element \r\n```vue\r\n<template lang=\"pug\">\r\n    div.menu\r\n        Logo.menu__logo( :full='true' )\r\n        ul.menu__list\r\n          template( v-for='(path, localeKey) in links' )\r\n            li.menu__item( @mouseleave='hoverdLink = null' @mouseover='hoverdLink = $event.target' )\r\n              router-link.menu__link( :to=' `#${path.slice(1)}` ' ) {{ $t(`links.${localeKey}`) }}\r\n          span.menu__pointer( ref='pointer' )\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      hoverdLink: null,\r\n      activeLink: null,\r\n      links: { ... }\r\n    }\r\n  },\r\n  watch: {\r\n    hoverdLink (hoverdLink) {\r\n      const setWidth = (width) => { this.$refs.pointer.style.width = width + 'px' }\r\n      const setPosition = (position) => { this.$refs.pointer.style.left = position + 'px' }\r\n      if (!hoverdLink) {\r\n        setWidth(0)\r\n      } else {\r\n        setWidth(hoverdLink.getBoundingClientRect().width)\r\n        setPosition(hoverdLink.offsetLeft)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n### Describe the solution you'd like\r\nSo i want to add an listener to 'active' event or 'exact-active' event to make it\r\n```vue\r\n<template lang=\"pug\">\r\n    div.menu\r\n        Logo.menu__logo( :full='true' )\r\n        ul.menu__list\r\n          template( v-for='(path, localeKey) in links' )\r\n            li.menu__item( @mouseleave='hoverdLink = null' @mouseover='hoverdLink = $event.target' )\r\n              router-link.menu__link( :to=' `#${path.slice(1)}` '  @exact-active='activeLink = $event.target' ) {{ $t(`links.${localeKey}`) }}\r\n          span.menu__pointer( ref='pointer' :class='{ \"menu__pointer--active\" : !!activeLink }' )\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      hoverdLink: null,\r\n      activeLink: null,\r\n      links: { ... }\r\n    }\r\n  },\r\n watch: {\r\n    hoverdLink (hoverdLink) {\r\n      // don't move pointer\r\n      if ( this.activeLink ) return\r\n      const setWidth = (width) => { this.$refs.pointer.style.width = width + 'px' }\r\n      const setPosition = (position) => { this.$refs.pointer.style.left = position + 'px' }\r\n      if (!hoverdLink) {\r\n        setWidth(0)\r\n      } else {\r\n        setWidth(hoverdLink.getBoundingClientRect().width)\r\n        setPosition(hoverdLink.offsetLeft)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n```","Url":"https://github.com/vuejs/vue-router/issues/3468","RelatedDescription":"Closed issue \"Add 'active' and 'exact-active' events to ( router-link ) component\" (#3468)"},{"Id":"799094701","IsPullRequest":false,"CreatedAt":"2021-02-02T09:22:43","Actor":"chenguzhen87","Number":"3467","RawContent":null,"Title":"刷新页面name为什么null，不是layout?","State":"closed","Body":"version: 3.3.2\r\n\r\n![image](https://user-images.githubusercontent.com/28331609/106578868-fa055100-657a-11eb-980a-17d5ff7a48c4.png)\r\n\r\n![image](https://user-images.githubusercontent.com/28331609/106578814-e8bc4480-657a-11eb-8944-9a8d8944cfd4.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3467","RelatedDescription":"Closed issue \"刷新页面name为什么null，不是layout?\" (#3467)"},{"Id":"798405269","IsPullRequest":false,"CreatedAt":"2021-02-01T14:31:44","Actor":"sebamarynissen","Number":"3466","RawContent":null,"Title":"Export RouterLink component","State":"closed","Body":"### What problem does this feature solve?\r\nI have a use case where I want to implement a custom `<nav-link>` component that builds on top of `<router-link>`. While this is perfectly possible, it requires me to replace all my `<router-link>` references with `<nav-link>` (and I have about 200 of them). Therefore it would be useful to be able to explicitly reference Vue Router's `<router-link>` in the `<nav-link>` component so that I can globally register my component as\r\n```js\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport NavLink from './nav-link.vue';\r\n\r\nVue.install(Router);\r\nVue.component('router-link', NavLink);\r\n```\r\n\r\n### What does the proposed API look like?\r\nI propose to explicitly export the `<router-link>` component (and perhaps `<router-view>` as well) so it can be imported like this:\r\n```vue\r\n// # nav-link.vue\r\n<template>\r\n  <router-link>\r\n    <slot></slot>\r\n  </router-link>\r\n</template>\r\n\r\n<script>\r\nimport { RouterLink } from 'vue-router';\r\n\r\nexport default {\r\n  components: {\r\n    RouterLink,\r\n  },\r\n};\r\n</script>\r\n```\r\n\r\nI will file a PR for this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3466","RelatedDescription":"Closed issue \"Export RouterLink component\" (#3466)"},{"Id":"797423226","IsPullRequest":false,"CreatedAt":"2021-01-31T13:27:49","Actor":"ockba-a","Number":"3464","RawContent":null,"Title":"Vue Route 4 can’t read the Arabic link when refresh browser","State":"closed","Body":"### What problem does this feature solve?\r\nVue Route can’t read the link when Refresh Browser in hexadecimal\r\n\r\nThe route is Arabic language in alias and route\r\n\r\nEx:\r\n[jmbz0.csb.app/تواصل](https://jmbz0.csb.app/%D8%AA%D9%88%D8%A7%D8%B5%D9%84)\r\n\r\nDependecy\r\nVue 3\r\nVue Route 4.0.3\r\n\r\nYou can visit sandbox\r\n[Vue Route](https://codesandbox.io/s/intelligent-feynman-jmbz0?file=/src/main.js)\r\n\r\n\r\nI Open The Issue In:\r\n\r\n[StackOverFlow](https://stackoverflow.com/questions/65942595/vue-route-4-can-t-read-the-link-when-refresh-browser-in-vue-3)\r\n\r\nAnd\r\n\r\n[Vuejs Forum](https://forum.vuejs.org/t/vue-route-4-cant-read-the-link-when-refresh-browser/110703)\r\n\r\nregard\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3464","RelatedDescription":"Closed issue \"Vue Route 4 can’t read the Arabic link when refresh browser\" (#3464)"},{"Id":"797421928","IsPullRequest":false,"CreatedAt":"2021-01-30T13:51:18","Actor":"ockba-a","Number":"3463","RawContent":null,"Title":"Vue Route 4 can’t read the Arabic link when refresh browser","State":"closed","Body":"Vue Route can’t read the link when Refresh Browser in hexadecimal\r\n\r\nThe route is Arabic language in alias and route\r\n\r\nEx:\r\n[jmbz0.csb.app/تواصل](https://jmbz0.csb.app/%D8%AA%D9%88%D8%A7%D8%B5%D9%84)\r\n\r\nDependecy\r\nVue 3\r\nVue Route 4.0.3\r\n\r\nYou can visit sandbox\r\n[Vue Route](https://codesandbox.io/s/intelligent-feynman-jmbz0?file=/src/main.js)\r\n\r\n\r\nI Open The Issue In:\r\n\r\n[StackOverFlow](https://stackoverflow.com/questions/65942595/vue-route-4-can-t-read-the-link-when-refresh-browser-in-vue-3)\r\n\r\nAnd\r\n\r\n[Vuejs Forum](https://forum.vuejs.org/t/vue-route-4-cant-read-the-link-when-refresh-browser/110703)\r\n\r\nregard","Url":"https://github.com/vuejs/vue-router/issues/3463","RelatedDescription":"Closed issue \"Vue Route 4 can’t read the Arabic link when refresh browser\" (#3463)"},{"Id":"794726947","IsPullRequest":true,"CreatedAt":"2021-01-28T09:48:36","Actor":"FAKER-A","Number":"3460","RawContent":null,"Title":"docs: add type to the code of some md files","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nAdd type to the code of some md files","Url":"https://github.com/vuejs/vue-router/pull/3460","RelatedDescription":"Closed or merged PR \"docs: add type to the code of some md files\" (#3460)"},{"Id":"794858718","IsPullRequest":false,"CreatedAt":"2021-01-27T07:46:05","Actor":"rhysburnie","Number":"3461","RawContent":null,"Title":"Is there a way to disable scroll savedPosition?","State":"closed","Body":"Is there a way to disable scroll savedPosition?\r\n\r\nWe don't need the functionality and its slowing our app down by triggering style recalc","Url":"https://github.com/vuejs/vue-router/issues/3461","RelatedDescription":"Closed issue \"Is there a way to disable scroll savedPosition?\" (#3461)"},{"Id":"794137131","IsPullRequest":false,"CreatedAt":"2021-01-26T10:59:28","Actor":"NguyenThanh1995","Number":"3459","RawContent":null,"Title":"Warning vue-router@3.5.0: [vue-router] <router-link>'s tag prop is deprecated and has been removed in Vue Router 4","State":"closed","Body":"Hello I am using vue-router@3.5.0 together with vue@2.5 but I got a warning moving to vue-router 4. what happened?","Url":"https://github.com/vuejs/vue-router/issues/3459","RelatedDescription":"Closed issue \"Warning vue-router@3.5.0: [vue-router] <router-link>'s tag prop is deprecated and has been removed in Vue Router 4\" (#3459)"},{"Id":"793889893","IsPullRequest":true,"CreatedAt":"2021-01-26T09:19:31","Actor":"jonaskuske","Number":"3458","RawContent":null,"Title":"fix(warn): only warn if  \"tag\" or \"event\"  is used","State":"closed","Body":"closes #3457\r\nOnly show deprecation warning if the props \"tag\" or \"event\" are actually passed by the consumer (key exists in `$options.propsData`, figured this out by experimenting 😅), not if they have any value at all (they always have a value since a default is specified in the props definition)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3458","RelatedDescription":"Closed or merged PR \"fix(warn): only warn if  \"tag\" or \"event\"  is used\" (#3458)"},{"Id":"793633529","IsPullRequest":false,"CreatedAt":"2021-01-26T09:19:31","Actor":"719media","Number":"3457","RawContent":null,"Title":"v-router warning about using v-slot","State":"closed","Body":"### Version\r\n3.5.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/commit/d2cb951#diff-d69779a774d18aab6696dcf281454982a329104177c1a5f885089da9fefefd94R134-R148](https://github.com/vuejs/vue-router/commit/d2cb951#diff-d69779a774d18aab6696dcf281454982a329104177c1a5f885089da9fefefd94R134-R148)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee the conditions for firing the warning:\r\n\r\nhttps://github.com/vuejs/vue-router/commit/d2cb951#diff-d69779a774d18aab6696dcf281454982a329104177c1a5f885089da9fefefd94R134-R148\r\n\r\n### What is expected?\r\nYou should only get the warning about using v-slot if you are actually using `tag` or `event` props\r\n\r\n### What is actually happening?\r\nSince `tag` and `event` have non-falsey default values, the warning will always fire with any use of router-link.\r\n\r\n---\r\nPerhaps you should just compare if the values for `tag` or `event` are non-default and fire the warning, even though this doesn't cover the edge case that `tag` or `event` are actually being passed in with a value that matches the default.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3457","RelatedDescription":"Closed issue \"v-router warning about using v-slot\" (#3457)"},{"Id":"792848544","IsPullRequest":false,"CreatedAt":"2021-01-24T17:24:13","Actor":"Rasul1996","Number":"3456","RawContent":null,"Title":"this.$router.addRoute(...) and this.$router.getRoutes()","State":"closed","Body":"Hi, \r\n\r\n![image](https://user-images.githubusercontent.com/50964099/105638080-e4f53780-5e81-11eb-87a6-8351c050136f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/50964099/105638097-f3dbea00-5e81-11eb-95f9-d57c0da2b884.png)\r\n\r\nusing vue-router 3.4.9 version\r\n\r\n![image](https://user-images.githubusercontent.com/50964099/105638117-07875080-5e82-11eb-80e0-a0f168ee7c43.png)\r\n\r\n\r\nGetting following error:\r\n![image](https://user-images.githubusercontent.com/50964099/105638128-166e0300-5e82-11eb-9a63-662cf1a30b34.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3456","RelatedDescription":"Closed issue \"this.$router.addRoute(...) and this.$router.getRoutes()\" (#3456)"},{"Id":"792810742","IsPullRequest":true,"CreatedAt":"2021-01-24T14:40:20","Actor":"wxwzl","Number":"3455","RawContent":null,"Title":"feat: optimize method to determine whether the two path are the same …","State":"open","Body":"for https://github.com/vuejs/vue-router/issues/3447 , optimize method to determine whether the two path are the same in ensureUrl methods\r\n","Url":"https://github.com/vuejs/vue-router/pull/3455","RelatedDescription":"Open PR \"feat: optimize method to determine whether the two path are the same …\" (#3455)"},{"Id":"792758935","IsPullRequest":true,"CreatedAt":"2021-01-24T14:33:20","Actor":"wxwzl","Number":"3454","RawContent":null,"Title":"feat: improve method to determine whether the two path are the same i…","State":"closed","Body":"for the issue: https://github.com/vuejs/vue-router/issues/3447,improve method to determine whether the two path are the same in ensureUrl methods\r\n","Url":"https://github.com/vuejs/vue-router/pull/3454","RelatedDescription":"Closed or merged PR \"feat: improve method to determine whether the two path are the same i…\" (#3454)"},{"Id":"784819112","IsPullRequest":true,"CreatedAt":"2021-01-24T10:03:49","Actor":"huzhengen","Number":"3446","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"add note about push\r\nexpose START_LOCATION\r\naddRoute, getRoutes\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3446","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#3446)"},{"Id":"792113004","IsPullRequest":false,"CreatedAt":"2021-01-23T17:07:48","Actor":"hezedu","Number":"3452","RawContent":null,"Title":"New feature: Data Store(before PR)","State":"closed","Body":"### What problem does this feature solve?\r\n [#3445: vue-router positionStore memory leak](https://github.com/vuejs/vue-router/issues/3445)\r\n####  reconstruct `util/state-key`\r\nused `window.performance.now()` as the state key will reset when localtion reload, It may conflict with other hisotories\r\n\r\n### What does the proposed API look like?\r\n### router.setData(key, data)\r\n  - `key` ___string___\r\n  - `data` ___any___\r\n### router.getData(key)\r\n  - `key` ___string___ \r\n  - Returns: ___any___\r\n### router.removeData(key)\r\n  - `key` ___string___\r\n\r\n### Online Demo:\r\nhttps://hezedu.github.io/SomethingBoring/vue-router-positionstore-memory-leak/pr-demo.html#/\r\n\r\n## Why adding these new features?\r\n\r\nUnlike [window.history](https://developer.mozilla.org/en-US/docs/Web/API/History), vue-router has no API to change history.state.\r\n\r\nBut sometimes we need it to store some unique keys, like the `positionStore`. <br>\r\nSo I replaced `positionStore` with `dataStore`. This way you can store more things. <br>\r\nAnd there is no need to develop `state` related APIs in the future.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3452","RelatedDescription":"Closed issue \"New feature: Data Store(before PR)\" (#3452)"},{"Id":"792607246","IsPullRequest":false,"CreatedAt":"2021-01-23T17:07:13","Actor":"posva","Number":"3453","RawContent":null,"Title":"Detect `popstate` vs `push`/`replace` in navigation guards","State":"open","Body":"It would be useful to detect if navigation comes from interaction within the app (`router.push()`) or outside of it (`history.back()`).\r\n\r\nThe API is still to be decided and should be the same on v4 and v3, probably something inside of the `to` parameter of navigation guards\r\n\r\n```js\r\nrouter.beforeEach((to, from, next) => {\r\n  to.navigation.type // 'pop' | 'push'\r\n  to.replace // true | false\r\n  to.navigation.direction // number\r\n```\r\n\r\nRelated #1620","Url":"https://github.com/vuejs/vue-router/issues/3453","RelatedDescription":"Open issue \"Detect `popstate` vs `push`/`replace` in navigation guards\" (#3453)"},{"Id":"791908010","IsPullRequest":false,"CreatedAt":"2021-01-22T10:57:09","Actor":"Manubi","Number":"3451","RawContent":null,"Title":"vue router doesn't scroll to top","State":"closed","Body":"Hi,\r\nIf I am correct, the following code should make the router to scroll to the top on every component change - right?\r\n\r\n```\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes,\r\n  scrollBehavior: (to, from, savedPosition) => {\r\n    return { x: 0, y: 0 }\r\n  }\r\n})\r\n```\r\nBut unfortunately it still keeps the same scroll position if I change the component. It's not scrolling to 0,0.\r\n\r\nThanks!","Url":"https://github.com/vuejs/vue-router/issues/3451","RelatedDescription":"Closed issue \"vue router doesn't scroll to top\" (#3451)"},{"Id":"789059132","IsPullRequest":false,"CreatedAt":"2021-01-19T14:24:22","Actor":"phlegx","Number":"3450","RawContent":null,"Title":"Call this.$route.path causes this.$route to get undefined.","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\nno reproduction link.\r\n\r\n### Steps to reproduce\r\nI have the following method in a child component:\r\n\r\n```\r\nexport default {\r\n  name: 'my-child-comp',\r\n  methods: {\r\n    checkPath() {\r\n      console.log(this.$route)\r\n      return true //this.$route.path === '/test'\r\n    },\r\n  },\r\n}\r\n```\r\n\r\nIf I output `console.log(this.$route)` in `checkPath` method, the object is present with all route data. If I output `console.log(this.$route.path)` I get the error `TypeError: Cannot read property 'path' of undefined`\r\n\r\n### What is expected?\r\nAccess `this.$route.path` should return the current route path.\r\n\r\n### What is actually happening?\r\nAccess `path` from `this.$route` object, clears `this.$route` object to undefined.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3450","RelatedDescription":"Closed issue \"Call this.$route.path causes this.$route to get undefined.\" (#3450)"},{"Id":"788144832","IsPullRequest":false,"CreatedAt":"2021-01-18T10:53:31","Actor":"fango256","Number":"3449","RawContent":null,"Title":"Props function re-evaluates when router-view component updates","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/broken-morning-oy16n](https://codesandbox.io/s/broken-morning-oy16n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a props function for a route, update the component that contains \"router-view\" and the props function re-evaluates.\r\n\r\n### What is expected?\r\nThe documentation states that the props function is only evaluated on route change.\r\n\r\n### What is actually happening?\r\nIt seems to re-evaluate when App.vue (router-view parent i presume) updates as well.\r\n\r\n---\r\nWe use simple stateless props function to convert url string segments into our custom Guid objects and pass them through as Object props to route components. A common pattern for us is to watch for prop changes in our route components and call vuex methods that might cause updates to App.vue (e.g. a loading dialog) - as the props function refires it is causing an infinite loop as we detect a prop change and load again...\r\n\r\nIs it expected that the props function re evaluates in this scenario?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3449","RelatedDescription":"Closed issue \"Props function re-evaluates when router-view component updates\" (#3449)"},{"Id":"785973078","IsPullRequest":true,"CreatedAt":"2021-01-14T13:05:45","Actor":"simon-hayden","Number":"3448","RawContent":null,"Title":"Add 'RewriteRule' to Apache subfolder setup note","State":"open","Body":"'RewriteRule' path needs to be modified as well as 'RewriteBase' path when using a subfolder in Apache\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3448","RelatedDescription":"Open PR \"Add 'RewriteRule' to Apache subfolder setup note\" (#3448)"},{"Id":"785779816","IsPullRequest":false,"CreatedAt":"2021-01-14T08:14:25","Actor":"wxwzl","Number":"3447","RawContent":null,"Title":"Why is it designed as below? it will cause history.replaceState method to be called","State":"open","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://vesaas.com/?a=1&b=2&a=2](https://vesaas.com/?a=1&b=2&a=2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ninput https://vesaas.com/?a=1&b=2&a=2 into webBroswer . then it becomes to https://vesaas.com/?a=1&a=2&b=2\r\n\r\n### What is expected?\r\ndo not trigger history.replaceState called \r\n\r\n### What is actually happening?\r\nhistory.replaceState was called.\r\n\r\n---\r\n\r\nsrc/history/html5.js\r\n`ensureURL (push?: boolean) {\r\n    if (getLocation(this.base) !== this.current.fullPath) {\r\n      const current = cleanPath(this.base   this.current.fullPath)\r\n      push ? pushState(current) : replaceState(current)\r\n    }\r\n  }`\r\n\r\nsrc/util/query.js\r\n`function parseQuery (query: string): Dictionary<string> {\r\n  const res = {}\r\n\r\n  query = query.trim().replace(/^(\\?|#|&)/, '')\r\n\r\n  if (!query) {\r\n    return res\r\n  }\r\n\r\n  query.split('&').forEach(param => {\r\n    const parts = param.replace(/\\ /g, ' ').split('=')\r\n    const key = decode(parts.shift())\r\n    const val = parts.length > 0\r\n      ? decode(parts.join('='))\r\n      : null\r\n\r\n    if (res[key] === undefined) {\r\n      res[key] = val\r\n    } else if (Array.isArray(res[key])) {\r\n      res[key].push(val)\r\n    } else {\r\n      res[key] = [res[key], val]\r\n    }\r\n  })\r\n\r\n  return res\r\n}`\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3447","RelatedDescription":"Open issue \"Why is it designed as below? it will cause history.replaceState method to be called\" (#3447)"},{"Id":"783498534","IsPullRequest":false,"CreatedAt":"2021-01-11T16:17:55","Actor":"hezedu","Number":"3445","RawContent":null,"Title":"vue-router positionStore memory leak","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://hezedu.github.io/SomethingBoring/vue-router-positionstore-memory-leak/index.html](https://hezedu.github.io/SomethingBoring/vue-router-positionstore-memory-leak/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI read the source code and found that positionStore has only set, not deleted.\r\n\r\n### What is expected?\r\nThe data in positionStore should be cleared on history.push() or history.replace().\r\n\r\n### What is actually happening?\r\nThe memory haspmap:positionStore will continue to grow.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3445","RelatedDescription":"Closed issue \"vue-router positionStore memory leak\" (#3445)"},{"Id":"783173780","IsPullRequest":false,"CreatedAt":"2021-01-11T08:36:32","Actor":"hezedu","Number":"3444","RawContent":null,"Title":"The data in positionStore is never cleared","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/6d030f5c54dbb482d22a147b5a154f082b71e0a0/dist/vue-router.js#L1810](https://github.com/vuejs/vue-router/blob/6d030f5c54dbb482d22a147b5a154f082b71e0a0/dist/vue-router.js#L1810)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI read the source code and found that positionStore has only set, not deleted.\r\n\r\n### What is expected?\r\nThe data in positionStore should be cleared on history.back().\r\n\r\n### What is actually happening?\r\nThe memory haspmap:positionStore will continue to grow.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3444","RelatedDescription":"Closed issue \"The data in positionStore is never cleared\" (#3444)"},{"Id":"781916147","IsPullRequest":false,"CreatedAt":"2021-01-08T07:34:08","Actor":"jiu-you","Number":"3443","RawContent":null,"Title":"How to import methods in src/util without flow?","State":"closed","Body":"How to import methods  in src/util  and import RouterLink Component without flow?\r\n","Url":"https://github.com/vuejs/vue-router/issues/3443","RelatedDescription":"Closed issue \"How to import methods in src/util without flow?\" (#3443)"},{"Id":"781242438","IsPullRequest":true,"CreatedAt":"2021-01-07T13:55:47","Actor":"dependabot[bot]","Number":"3442","RawContent":null,"Title":"build(deps): bump ini from 1.3.5 to 1.3.8","State":"closed","Body":"Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.8.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/a2c5da86604bc2238fe393c5ff083bf23a9910eb\"><code>a2c5da8</code></a> 1.3.8</li>\n<li><a href=\"https://github.com/npm/ini/commit/af5c6bb5dca6f0248c153aa87e25bddfc515ff6e\"><code>af5c6bb</code></a> Do not use Object.create(null)</li>\n<li><a href=\"https://github.com/npm/ini/commit/8b648a1ac49e1b3b7686ea957e0b95e544bc6ec1\"><code>8b648a1</code></a> don't test where our devdeps don't even work</li>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.8\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vue-router/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vue-router/pull/3442","RelatedDescription":"Closed or merged PR \"build(deps): bump ini from 1.3.5 to 1.3.8\" (#3442)"},{"Id":"780511748","IsPullRequest":false,"CreatedAt":"2021-01-06T12:20:20","Actor":"furylee","Number":"3441","RawContent":null,"Title":"addRoutes 的使用请教","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vue-router](https://new-issue.vuejs.org/?repo=vuejs/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n   router.addRoutes([{\r\n    path: '/',\r\n    name: 'index',\r\n    component: BasicLayout,\r\n    meta: { title: '首页' },\r\n    redirect: '/home',\r\n    children: [\r\n      {\r\n        path: '/home',\r\n        name: 'home',\r\n        meta: { title: '欢迎' },\r\n        hidden: true,\r\n        component: () => import('@/views/home')\r\n      },\r\n     {\r\n  meta: {\r\n    title: '404',\r\n  },\r\n  name: '404',\r\n  hidden: true,\r\n  path: '/404',\r\n  component: constantRouterComponents['404'],\r\n},\r\n...\r\n]}])\r\n```\r\n\r\nasync addRoutes success,push('/'),to 404, why???\r\n\r\naddRoutes成功后,跳转根目录重定向到404,为什么?能解答下吗,还是不能搞根目录的路由?\r\n\r\n### What is expected?\r\nto home\r\n去首页\r\n\r\n### What is actually happening?\r\nredirect 404\r\n重定向到了404\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3441","RelatedDescription":"Closed issue \"addRoutes 的使用请教\" (#3441)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"797698129","IsPullRequest":true,"CreatedAt":"2021-02-05T20:30:35","Actor":"jeremybatesDC","Number":"1930","RawContent":null,"Title":"Update forms.md","State":"closed","Body":"the two-way computed property solution is SO much simpler that maybe it should be the first suggestion (unless it's really not a best practice)","Url":"https://github.com/vuejs/vuex/pull/1930","RelatedDescription":"Closed or merged PR \"Update forms.md\" (#1930)"},{"Id":"801510561","IsPullRequest":false,"CreatedAt":"2021-02-04T17:55:39","Actor":"Pixdigit","Number":"1932","RawContent":null,"Title":"Private Mutations","State":"open","Body":"### What problem does this feature solve?\r\nI am faced with the problem that I have a change in state that might cause that state to become inconsistent. Let's say I have a city name and a zip code in my state. I do not want to change the zip code if the city is not within the area of that zip code. If I do that in a mutation I have no way to reject that change or to catch an error. However if I do it in an action I still need a mutation since actions cannot modify the state directly. Now my colleague is new to our huge project and doesn't notice that one must use the action instead of the mutation and causes the state to become inconsistent. Hence I propose mutations that may only be called from an action. This would enable developers to restrict changes in state to only non-breaking changes.\r\n\r\n### What does the proposed API look like?\r\nSince I use TypeScript the obvious way to do it seems a decorator. However to maintain consistency with the api and to be pure js compatible one might introduce a whole different category (e.g. \"setters\"). If backward compatibility were not an issue this may also become the default behavior as use-cases for mutations directly in components are rare anyhow, since most data needs validation. \r\n![Infographic from the official documentation](https://vuex.vuejs.org/vuex.png)\r\n\r\nThis infographic at  seems to imply this also. However these are just proposals off the top of my head and any implementation would need careful consideration as they would deeply impact the vuex api.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1932","RelatedDescription":"Open issue \"Private Mutations\" (#1932)"},{"Id":"800878738","IsPullRequest":false,"CreatedAt":"2021-02-04T06:24:36","Actor":"silite","Number":"1931","RawContent":null,"Title":"Its why?","State":"closed","Body":"### Version\r\n3.6.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/nice-lamport-kkg9k?file=/src/App.vue](https://codesandbox.io/s/nice-lamport-kkg9k?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```vue\r\n<template>\r\n  <a-button @click=\"click\"></a-button>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex'\r\nexport default {\r\n  computed: {\r\n    ...mapState('test', ['res'])\r\n  },\r\n  created() {\r\n    this.change({})\r\n  },\r\n  methods: {\r\n    ...mapMutations('test', { change: 'EMMM' }),\r\n    click() {\r\n      const res = this.res\r\n      console.log(this.res, 'before click'); // { a: '123' }\r\n      // debugger  ↑ {}\r\n      res.a = Object.assign(res.a || {}, { a: '123' })\r\n      this.change(res)\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nWhether or not have debugger, log is `{}`.\r\n\r\n### What is actually happening?\r\nWhen there is no debugger, log is `{ a: '123' }`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1931","RelatedDescription":"Closed issue \"Its why?\" (#1931)"},{"Id":"794267784","IsPullRequest":false,"CreatedAt":"2021-01-26T14:37:18","Actor":"Daniel4Digital","Number":"1929","RawContent":null,"Title":"Blank page after vuex upgrade to 3.6.1","State":"closed","Body":"### Version\r\n3.6.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue) (Sorry I dont know how to recreate the issue here, and don't have time, at the moment, to figure out how that works)\r\n\r\n### Steps to reproduce\r\nI am using vuex, without vue-router just so you know, and after updating 3.6.0 to 3.6.1 the page becomes blank, and the console has an error:\r\n\r\n```\r\nvuex.esm-bundler.js?16b2:589 Uncaught TypeError: (0 , vue__WEBPACK_IMPORTED_MODULE_0__.reactive) is not a function\r\n    at resetStoreState (vuex.esm-bundler.js?16b2:589)\r\n    at new Store (vuex.esm-bundler.js?16b2:332)\r\n    at eval (index.js?4129:122)\r\n    at Module../resources/assets/js/store/index.js (app.js:1200)\r\n    at __webpack_require__ (manifest.js:30)\r\n    at eval (app.js:19)\r\n    at Module../resources/assets/js/app.js (app.js:914)\r\n    at __webpack_require__ (manifest.js:30)\r\n    at checkDeferredModulesImpl (manifest.js:187)\r\n    at webpackJsonpCallback (manifest.js:169)\r\n```\r\n\r\nDo I really need to create an resetState from now on?\r\n\r\n### What is expected?\r\nSince it is a minor version I wasn't expecting my page to crash\r\n\r\n### What is actually happening?\r\nThe pages crashes with the error mentioned.\r\n\r\n---\r\nI don't have any way to have a code sandbox for this... would not be easy to recreate. But the error itself should be explanatory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1929","RelatedDescription":"Closed issue \"Blank page after vuex upgrade to 3.6.1\" (#1929)"},{"Id":"791799924","IsPullRequest":false,"CreatedAt":"2021-01-26T10:11:23","Actor":"dengyizhenfeng","Number":"1928","RawContent":null,"Title":"The data obtained through Computed vuex is undefined in onUnmounted","State":"closed","Body":"### Version\r\n4.0.0-rc.2\r\n\r\n### Reproduction link\r\n[https://github.com/dengyizhenfeng/vue3-getters-undefined](https://github.com/dengyizhenfeng/vue3-getters-undefined)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a new project with the `vue create` command, select `vuex`, create a new variable {} in the state of vuex, and return a variable associated with this variable in the getters. This variable is obtained by computed in a concrete page. Under this variable it is fine if it is printed, but it is undefined if it is printed in onUnmounted\r\n\r\n### What is expected?\r\ndata from Vuex obtained through Computed can be correctly retrieved during onUnmounted\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe data in Vuex obtained through computed onUnmounted is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1928","RelatedDescription":"Closed issue \"The data obtained through Computed vuex is undefined in onUnmounted\" (#1928)"},{"Id":"778507833","IsPullRequest":false,"CreatedAt":"2021-01-26T09:10:46","Actor":"jlgoff3","Number":"1921","RawContent":null,"Title":"Expose storeKey for unit test mocking when using useStore","State":"closed","Body":"### What problem does this feature solve?\r\nWhen unit testing Composition API style components, the developer may want to mock the Vuex store for testing purposes. However, due to the Vue instance not being available at setup() time, the useStore method is used in place of this.$store. This requires the developer to inject their Vuex mock, rather than using the traditional instance mocking option of the vue-test-utils mount function. Provide/inject requires a key, which, unlike $store, is not visible to the end user.\r\n\r\n### What does the proposed API look like?\r\nExport the default storeKey. For devs who use the default storeKey rather than providing a custom key on plugin installation, this will provide a more durable testing solution. While the key is currently the string \"store\", this could change in the future, leaving end users with unexpected failing tests. Vue-router has similarly exported their provide keys. I'm willing to create a PR for this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1921","RelatedDescription":"Closed issue \"Expose storeKey for unit test mocking when using useStore\" (#1921)"},{"Id":"781773580","IsPullRequest":true,"CreatedAt":"2021-01-25T03:39:47","Actor":"Alanscut","Number":"1922","RawContent":null,"Title":"fix: eslint warning","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1922","RelatedDescription":"Closed or merged PR \"fix: eslint warning\" (#1922)"},{"Id":"770995445","IsPullRequest":false,"CreatedAt":"2021-01-25T03:37:03","Actor":"fangbinwei","Number":"1906","RawContent":null,"Title":"tree shaking not work because of vuex.mjs","State":"closed","Body":"### Version\r\n4.0.0-rc.2\r\n\r\n### Reproduction link\r\n[https://github.com/fangbinwei/vuex-next-issue](https://github.com/fangbinwei/vuex-next-issue)\r\n\r\n### Steps to reproduce\r\n1. yarn build\r\n2. search `prev state` in dist/main.js to validate if bundle contains `createLogger`\r\n\r\nhttps://github.com/vuejs/vuex/blob/bb7885700d7bd7afd4d12fc8be7f5b3eeaa58b0e/src/plugins/logger.js#L33\r\n\r\n**main.js**\r\n```js\r\n// tree shaking not work because of vuex.mjs\r\nimport {Store} from 'vuex'\r\n\r\nconsole.log(Store)\r\n```\r\noutput(external vue)\r\n```bash\r\n[webpack-cli] Compilation finished\r\nasset main.js 12.1 KiB [emitted] [minimized] (name: main) 2 related assets\r\norphan modules 400 bytes [orphan] 1 module\r\nruntime modules 221 bytes 1 module\r\nbuilt modules 35.6 KiB [built]\r\n  ./src/index.js   1 modules 567 bytes [built] [code generated]\r\n  ./node_modules/vuex/dist/vuex.cjs.js 35 KiB [built] [code generated]\r\n  external \"Vue\" 42 bytes [built] [code generated]\r\nwebpack 5.11.0 compiled successfully in 713 ms\r\n✨  Done in 3.59s.\r\n```\r\n\r\n**main.js**\r\n```js\r\n// tree shaking work\r\nimport {Store} from 'vuex/dist/vuex.esm-bundler.js'\r\n\r\nconsole.log(Store)\r\n```\r\noutput(external vue)\r\n\r\n```bash\r\n[webpack-cli] Compilation finished\r\nasset main.js 9.8 KiB [emitted] [minimized] (name: main) 2 related assets\r\norphan modules 35.1 KiB [orphan] 2 modules\r\nruntime modules 221 bytes 1 module\r\n./src/index.js   2 modules 35.3 KiB [not cacheable] [built] [code generated]\r\nwebpack 5.11.0 compiled successfully in 797 ms\r\n✨  Done in 2.47s.\r\n```\r\n\r\n### What is expected?\r\n drop `createLogger` from the bundle\r\n\r\n### What is actually happening?\r\nbundle contains `createLogger`\r\n\r\n---\r\nI think tree shaking not work because of  two reasons, (I know vuex.mjs wrap vuex.cjs.js because of some rules in node)\r\n\r\n1. vuex.mjs use `default import`\r\n2. vuex.mjs import CommonJS(vuex.cjs.js) \r\n\r\nMaybe we can do like below\r\n```diff\r\n  \"exports\": {\r\n    \".\": {\r\n+      \"module\": \"./dist/vuex.esm-bundler.js\",\r\n      \"require\": \"./dist/vuex.cjs.js\",\r\n      \"import\": \"./dist/vuex.mjs\"\r\n    },\r\n    \"./\": \"./\"\r\n  },\r\n```\r\n\r\nnodejs don't support `module` in `exports`, so it can execute `dist/vuex.mjs`\r\n\r\n[webpack support `module` in `exports`](https://webpack.js.org/guides/package-exports/#conditions), it will use `dist/vuex.esm-bundler.js` first if it is valid, since the order of `\"module\"` is in front of the `\"import\"`\r\n\r\n### Moreover\r\nsince `vuex.mjs` wrap CommonJS which contains `require('vue')` and it let vuex doesn't compatiable with [webpack externals script](https://webpack.js.org/configuration/externals/#script), check [this issue](https://github.com/vuejs/vue-cli/issues/6149). [Reproduction link](https://github.com/fangbinwei/vuex-next-issue-external-script)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1906","RelatedDescription":"Closed issue \"tree shaking not work because of vuex.mjs\" (#1906)"},{"Id":"771006334","IsPullRequest":true,"CreatedAt":"2021-01-25T03:35:38","Actor":"fangbinwei","Number":"1907","RawContent":null,"Title":"fix: webpack bundle with 'vuex.esm-bundler.js' (#1906)","State":"closed","Body":"fixes #1906","Url":"https://github.com/vuejs/vuex/pull/1907","RelatedDescription":"Closed or merged PR \"fix: webpack bundle with 'vuex.esm-bundler.js' (#1906)\" (#1907)"},{"Id":"789147883","IsPullRequest":false,"CreatedAt":"2021-01-19T16:01:03","Actor":"wz-china","Number":"1927","RawContent":null,"Title":"[Vue3.0] watch the store.state.xxx in the setup run just one time ","State":"closed","Body":"example:\r\n\r\nVuex.state code:\r\n`\r\n{\r\n    panelSize:{\r\n        x:0,y:0\r\n    }\r\n}\r\n`\r\n\r\n\r\ncomponents code : \r\n`\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n    name: \"RenderPanel\",\r\n    setup(props) {\r\n        const count = ref(0);\r\n        const store = useStore();\r\n        // the problem\r\n        watch(\"store.state.panelSize\",() => {\r\n                count.value++;\r\n                console.log(\"just run one time when component mounted\");\r\n            },\r\n            { deep: true, immediate: true }\r\n        );\r\n        return { count };\r\n    },\r\n}\r\n`\r\n\r\nAfter component mounted , event if store.state.panelSize change ,it doesn't matter ","Url":"https://github.com/vuejs/vuex/issues/1927","RelatedDescription":"Closed issue \"[Vue3.0] watch the store.state.xxx in the setup run just one time \" (#1927)"},{"Id":"788398135","IsPullRequest":false,"CreatedAt":"2021-01-18T16:22:06","Actor":"LifeIsStrange","Number":"1926","RawContent":null,"Title":"Immutable references state properties should NOT warn of `do not mutate vuex store state outside mutation handlers.`","State":"open","Body":"### What problem does this feature solve?\r\nIn a lot of contexts, we want to store _reference_ of objects in the store that come from a _library_. \r\nThis means that the reference come from _outside_ the store and is managed (mutated) outside of the store too.\r\n\r\nVuex will by default, rightfully throw a warning because the object is mutated oustide of the store mutations.\r\nHowever in some cases it is useful to store such references in the stores as _immutable references_, in order to persists them and to use them through getters and actions.\r\nThe warning should _not_ be thrown IF and only IF the reference is Immutable. The only known way of ensuring this is to wrap the reference with this Type: \r\n```Typescript\r\ntype Immutable<T> = {\r\n  readonly [K in keyof T]: Immutable<T[K]>;\r\n};\r\n```\r\n\r\nfor example the state could have a [tiptap](https://github.com/ueberdosis/tiptap) Editor reference:\r\n```Typescript \r\neditor!: Immutable<Editor> = getTipTapEditorInstance();\r\n```\r\n\r\nWhere the Editor properties setting is managed by the library.\r\nWhich is a much needed pattern.\r\n\r\n\r\n### What does the proposed API look like?\r\nVuex needs either to propose an Annotation that we would put above the immutable reference declaration in order to silence the warning *just* for this reference.\r\nOR to detect at runtime to not throw the warning if all keys of the object are immutable/const\r\nOR to detect if the reference is wrapped by the type Immutable<T>, type which could be provided by Vuex or even Vue.ts because it is generally useful\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1926","RelatedDescription":"Open issue \"Immutable references state properties should NOT warn of `do not mutate vuex store state outside mutation handlers.`\" (#1926)"},{"Id":"788393727","IsPullRequest":false,"CreatedAt":"2021-01-18T16:16:02","Actor":"LifeIsStrange","Number":"1925","RawContent":null,"Title":"Immutable references state properties should NOT warn of `do not mutate vuex store state outside mutation handlers.`","State":"closed","Body":"In a lot of contexts, we want to store _reference_ of objects in the store that come from a _library_. \r\nThis means that the reference come from _outside_ the store and is managed (mutated) outside of the store too.\r\n\r\nVuex will by default, rightfully throw a warning because the object is mutated oustide of the store mutations.\r\nHowever in some cases it is useful to store such references in the stores as _immutable references_, in order to persists them and to use them through getters and actions.\r\nThe warning should _not_ be thrown IF and only IF the reference is Immutable. The only known way of ensuring this is to wrap the reference with this Type: \r\n```Typescript\r\ntype Immutable<T> = {\r\n  readonly [K in keyof T]: Immutable<T[K]>;\r\n};\r\n```\r\n\r\nfor example the state could have a [tiptap](https://github.com/ueberdosis/tiptap) Editor reference:\r\n```Typescript \r\neditor!: Immutable<Editor> = getTipTapEditorInstance();\r\n```\r\n\r\nWhere the Editor properties setting is managed by the library.\r\nWhich is a much needed pattern.\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1925","RelatedDescription":"Closed issue \"Immutable references state properties should NOT warn of `do not mutate vuex store state outside mutation handlers.`\" (#1925)"},{"Id":"783261579","IsPullRequest":true,"CreatedAt":"2021-01-11T10:46:54","Actor":"peoplenarthax","Number":"1924","RawContent":null,"Title":"fix: Add optional to getter arguments","State":"open","Body":"As mentioned in: https://github.com/vuejs/vuex/issues/1467 \r\n\r\nJust making sure the arguments on getters are aligned with the actual usage, otherwise any typescript user is enquire to pass all arguments even if they are not really required:\r\n\r\nExample:\r\n`getters.bar(state, getters, state, {})` => `getters.bar(state)` works equally for Vuex module level","Url":"https://github.com/vuejs/vuex/pull/1924","RelatedDescription":"Open PR \"fix: Add optional to getter arguments\" (#1924)"},{"Id":"782626742","IsPullRequest":false,"CreatedAt":"2021-01-09T15:16:10","Actor":"soerenmartius","Number":"1923","RawContent":null,"Title":"Best Practice: Should we throw errors in getters if the state is undefined? ","State":"closed","Body":"Quite often we are handling situations that require an optional state. \r\n\r\nE.g., my state might look like this\r\n\r\n```\r\nexport type State = {\r\n  isAuthenticated: boolean\r\n  account?: Account\r\n}\r\n```\r\n\r\nThe initial state will always be initialized with `isAuthenticated: false`. However, we assume that account will always be set in case a user logs in to our system. The user gets fetched during the login process.\r\n\r\nAt the moment, we are writing getters in a very simple an lean way, e.G.\r\n\r\n```\r\n  getAccount(state: State): Account | undefined\r\n```\r\n\r\nHowever, this approach would require us to either check if the return value of getAccount is `Account` or `undefined` in our consuming components, or we would need to use type assertion ( `const account = store.getters.getAccount as Account` ) which I think is a very bad practice.\r\n\r\nMy current approach would validate inside the getter if  the state is set and throw an error if it isn't, e.g.:\r\n\r\n```\r\ngetAccount: (state) => {\r\n  if(!state.account) {\r\n    throw new Error(\"Account isn't set\")\r\n  }\r\n  return state.account\r\n}\r\n```\r\n\r\nWhich would enable me to globally catch errors that occurre in getters rather than handling it in every single component.\r\n\r\nWhat are the best practices of handling optional state in getters? Am I going down the wrong path?\r\n\r\nThank you","Url":"https://github.com/vuejs/vuex/issues/1923","RelatedDescription":"Closed issue \"Best Practice: Should we throw errors in getters if the state is undefined? \" (#1923)"},{"Id":"773061201","IsPullRequest":true,"CreatedAt":"2021-01-05T10:09:24","Actor":"Xenonym","Number":"1912","RawContent":null,"Title":"docs: fix broken anchor link","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1912","RelatedDescription":"Closed or merged PR \"docs: fix broken anchor link\" (#1912)"},{"Id":"772127042","IsPullRequest":true,"CreatedAt":"2021-01-05T10:05:30","Actor":"Alanscut","Number":"1908","RawContent":null,"Title":"test: todomvc case failed in windows and some linux os (#1899)","State":"closed","Body":"As `clear-completed button`  is part of `footer`, although we expect `await click('footer')` will trigger the `footer` element, however it actually triggered the `clear-completed button`, so the next asserts will failed. 4.0 branch has the same problem.\r\nhttps://github.com/vuejs/vuex/blob/c9dbb13d4138d0e7d82d103dd3275fc18fa72d28/test/e2e/todomvc.spec.js#L123-L125\r\n\r\nchange click `footer` to `.todo-count` will make sure test cases pass, which could fix #1899.","Url":"https://github.com/vuejs/vuex/pull/1908","RelatedDescription":"Closed or merged PR \"test: todomvc case failed in windows and some linux os (#1899)\" (#1908)"},{"Id":"773567409","IsPullRequest":true,"CreatedAt":"2021-01-04T10:52:03","Actor":"peter50216","Number":"1916","RawContent":null,"Title":"docs(typescript-support): fix .js in comment","State":"closed","Body":"The extension should be .ts instead of .js, since the file is in TypeScript.","Url":"https://github.com/vuejs/vuex/pull/1916","RelatedDescription":"Closed or merged PR \"docs(typescript-support): fix .js in comment\" (#1916)"},{"Id":"772135636","IsPullRequest":true,"CreatedAt":"2021-01-04T10:04:06","Actor":"Alanscut","Number":"1910","RawContent":null,"Title":"fix #1909: single quotes cannot be identified in package.json of the Windows OS","State":"closed","Body":"Fix #1909 ","Url":"https://github.com/vuejs/vuex/pull/1910","RelatedDescription":"Closed or merged PR \"fix #1909: single quotes cannot be identified in package.json of the Windows OS\" (#1910)"},{"Id":"772133480","IsPullRequest":false,"CreatedAt":"2021-01-04T10:04:06","Actor":"Alanscut","Number":"1909","RawContent":null,"Title":"Single quotes cannot be identified in package.json of the Windows operating system.","State":"closed","Body":"### Version\r\n4.0.0-rc.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/c9dbb13d4138d0e7d82d103dd3275fc18fa72d28/package.json#L33](https://github.com/vuejs/vuex/blob/c9dbb13d4138d0e7d82d103dd3275fc18fa72d28/package.json#L33)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run test:e2e\r\n\r\n### What is expected?\r\nAll tests pass\r\n\r\n### What is actually happening?\r\nConsoling an error: ''jest' is not an internal or external command, nor is it an executable program or batch.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1909","RelatedDescription":"Closed issue \"Single quotes cannot be identified in package.json of the Windows operating system.\" (#1909)"},{"Id":"773211434","IsPullRequest":true,"CreatedAt":"2021-01-04T09:50:08","Actor":"dependabot[bot]","Number":"1913","RawContent":null,"Title":"build(deps): bump node-notifier from 8.0.0 to 8.0.1","State":"closed","Body":"Bumps [node-notifier](https://github.com/mikaelbr/node-notifier) from 8.0.0 to 8.0.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/mikaelbr/node-notifier/blob/v8.0.1/CHANGELOG.md\">node-notifier's changelog</a>.</em></p>\n<blockquote>\n<h3><code>v8.0.1</code></h3>\n<ul>\n<li>fixes possible injection issue for notify-send</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/5d62799dab88505a709cd032653b2320c5813fce\"><code>5d62799</code></a> v8.0.1</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/0c4a80df9a3b5015cd1e1ab858e008be3fece082\"><code>0c4a80d</code></a> chore: adds changelog</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/f5a7bc647589fc89ac64b0f1d259a853fcf057bc\"><code>f5a7bc6</code></a> fix: test cases</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/b9d148d697d3db807f653e2e6953c3de57dfeb8a\"><code>b9d148d</code></a> patch: fixes possible injection issue for notify-send</li>\n<li>See full diff in <a href=\"https://github.com/mikaelbr/node-notifier/compare/v8.0.0...v8.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=node-notifier&package-manager=npm_and_yarn&previous-version=8.0.0&new-version=8.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vuex/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vuex/pull/1913","RelatedDescription":"Closed or merged PR \"build(deps): bump node-notifier from 8.0.0 to 8.0.1\" (#1913)"},{"Id":"769824040","IsPullRequest":true,"CreatedAt":"2021-01-04T09:47:28","Actor":"JASONPANGGO","Number":"1904","RawContent":null,"Title":"fix a little typo in the comment","State":"closed","Body":"anthor params => another params","Url":"https://github.com/vuejs/vuex/pull/1904","RelatedDescription":"Closed or merged PR \"fix a little typo in the comment\" (#1904)"},{"Id":"772728492","IsPullRequest":true,"CreatedAt":"2021-01-04T09:42:32","Actor":"evan-lin9","Number":"1911","RawContent":null,"Title":"Update .gitignore","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1911","RelatedDescription":"Closed or merged PR \"Update .gitignore\" (#1911)"},{"Id":"777541192","IsPullRequest":true,"CreatedAt":"2021-01-02T23:21:02","Actor":"filips123","Number":"1920","RawContent":null,"Title":"Add support for preserveState options","State":"open","Body":"This adds support for specifying options to `preserveState`, allowing to only skip default module state registration when the state already exists or to merge the existing state with the state from the module. It closes #1675.","Url":"https://github.com/vuejs/vuex/pull/1920","RelatedDescription":"Open PR \"Add support for preserveState options\" (#1920)"},{"Id":"775436056","IsPullRequest":false,"CreatedAt":"2020-12-28T14:48:40","Actor":"jddxf","Number":"1919","RawContent":null,"Title":"Make overloads of commit/dispatch method interchangeable","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, there're two ways to commit a mutation. But they are not interchangeable. To be more specific, the following mutations cannot be committed conveniently using the object-style commit:\r\n```\r\n// To use the object-style commit we'll have to rename the 'type' property in the payload\r\n// and change the logic in the mutation handler.\r\ncommit('foo', { type: 'bar' });\r\n\r\n// To use the object-style commit we'll have to give the payload a name\r\n// and change the logic in the mutation handler.\r\ncommit('foo', 1);\r\n```\r\nEven when they seem interchangeable, the payloads received in the mutation handler are not exactly the same:\r\n```\r\nconst mutations = {\r\n  foo(state, payload) {\r\n    console.log(payload);\r\n  }\r\n};\r\n\r\ncommit('foo', { bar: 1 }); // logs { bar: 1 }\r\ncommit({ type: 'foo', bar: 1 }); // logs { type: 'foo', bar: 1 }\r\n```\r\nThe same is true of dispatching an action.\r\n\r\n### What does the proposed API look like?\r\nLet `commit(type, payload)` be exactly the same as `commit({ type, payload })` and let `dispatch(type, payload)` be exactly the same as `dispatch({ type, payload })`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1919","RelatedDescription":"Open issue \"Make overloads of commit/dispatch method interchangeable\" (#1919)"},{"Id":"774914362","IsPullRequest":false,"CreatedAt":"2020-12-26T18:22:25","Actor":"jguillod","Number":"1918","RawContent":null,"Title":"ShoppingCart.vue : incorrect usage of :key attribute","State":"open","Body":"### What problem does this feature solve?\r\nThis following correction will help developers better understand your example and eliminates confusion.\r\n\r\n### What does the proposed API look like?\r\nLine 6 to 8 of `ShoppingCart.vue` file is :\r\n\r\n```\r\n      <li\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\">\r\n```\r\n\r\nbut since `product.id` is undefined in result of computed getters `cartProducts` the `:key` attribute should be dropped. Code should simply be written:\r\n\r\n```\r\n      <li\r\n        v-for=\"product in products\">\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1918","RelatedDescription":"Open issue \"ShoppingCart.vue : incorrect usage of :key attribute\" (#1918)"},{"Id":"774493405","IsPullRequest":false,"CreatedAt":"2020-12-24T15:44:41","Actor":"utnaf","Number":"1917","RawContent":null,"Title":"No idea why this is open...","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1917","RelatedDescription":"Closed issue \"No idea why this is open...\" (#1917)"},{"Id":"773516514","IsPullRequest":true,"CreatedAt":"2020-12-23T12:28:31","Actor":"tongtannan","Number":"1915","RawContent":null,"Title":"1.js","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1915","RelatedDescription":"Closed or merged PR \"1.js\" (#1915)"},{"Id":"773358093","IsPullRequest":false,"CreatedAt":"2020-12-23T01:46:07","Actor":"Alanscut","Number":"1914","RawContent":null,"Title":"When not in the ci environment, puppeteerOptions will be set to empty, causing the test case to fail under Windows.","State":"open","Body":"### Version\r\n3.6.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex](https://github.com/vuejs/vuex)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install<br >\r\nnpm run test:e2e\r\n\r\n### What is expected?\r\nTest case of e2e passed.\r\n\r\n### What is actually happening?\r\nshow error like this:\r\n```shell\r\n FAIL  test/e2e/chat.spec.js (13.559 s)\r\n  ● e2e/chat › chat app\r\n\r\n    Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.\r\n\r\n      at mapper (node_modules/jest-jasmine2/build/queueRunner.js:27:45)\r\n\r\n  ● e2e/chat › chat app\r\n\r\n    TypeError: Cannot read property 'goto' of undefined\r\n\r\n       5 | \r\n       6 |   test('chat app', async () => {\r\n    >  7 |     await page().goto('http://localhost:8080/chat/')\r\n         |               ^\r\n       8 | \r\n       9 |     expect(await text('.thread-count')).toContain('Unread threads: 2')\r\n      10 |     expect(await count('.thread-list-item')).toBe(3)\r\n\r\n      at _callee$ (test/e2e/chat.spec.js:7:15)\r\n      at tryCatch (node_modules/regenerator-runtime/runtime.js:63:40)\r\n      at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:293:22)     \r\n      at Generator.next (node_modules/regenerator-runtime/runtime.js:118:21)\r\n      at asyncGeneratorStep (test/e2e/chat.spec.js:5:103)\r\n      at _next (test/e2e/chat.spec.js:7:194)\r\n      at test/e2e/chat.spec.js:7:364\r\n      at Object.<anonymous> (test/e2e/chat.spec.js:7:97)\r\n...\r\n```\r\n\r\n---\r\nIf `puppeteerOptions` is set to `{ args: ['--no-sandbox', '--disable-setuid-sandbox'] }` in the local environment, the test cases of e2e can pass.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1914","RelatedDescription":"Open issue \"When not in the ci environment, puppeteerOptions will be set to empty, causing the test case to fail under Windows.\" (#1914)"},{"Id":"769800857","IsPullRequest":false,"CreatedAt":"2020-12-18T02:19:37","Actor":"uinio","Number":"1903","RawContent":null,"Title":"StoreApp and Namespace","State":"closed","Body":"### What problem does this feature solve?\r\nstoreApp\r\n```ts\r\nimport { App } from 'vue';\r\nimport { Store } from 'vuex';\r\n\r\nexport interface StoreAppOptions<S = any> {\r\n  stores: Store<S>[];\r\n}\r\n\r\nexport class StoreApp<S = any> {\r\n  readonly stores: Store<S>[];\r\n\r\n  constructor(stores: StoreAppOptions) {\r\n    this.stores = stores.stores;\r\n  }\r\n  install(app: App): void {\r\n    this.stores.forEach((store) => store.install(app));\r\n  }\r\n}\r\n\r\nexport function createStoreApp(app: StoreAppOptions): StoreApp {\r\n  return new StoreApp(app);\r\n}\r\n\r\n```\r\nnamespace\r\n```ts\r\nexport function createNamespace<S>(): InjectionKey<Store<S>> {\r\n  return Symbol('vuex');\r\n}\r\nexport interface StoreOptions<S> {\r\n  namespace: InjectionKey<Store<S>>;\r\n  state: S | (() => S);\r\n  getters?: GetterTree<S, S>;\r\n  actions?: ActionTree<S, S>;\r\n  mutations?: MutationTree<S>;\r\n  plugins?: Plugin<S>[];\r\n  strict?: boolean;\r\n  devtools?: boolean;\r\n}\r\n\r\nexport class Store<S> {\r\n   readonly namespace: InjectionKey<Store<S>>;\r\n   ...\r\n  install(app: App): void {\r\n    app.provide(this.namespace, this);\r\n  }\r\n}\r\n\r\nexport function useStore<S>(store: InjectionKey<Store<S>>): Store<S>;\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nstoreApp can be split into multiple independent stores (remove RootState)\r\nnamespace better ts inference\r\n\r\n```ts\r\nexport interface CountState {\r\n  count: boolean;\r\n}\r\nexport const  COUNT_STORE = createNamespace<CountState >();\r\n\r\nexport default createStore({\r\n  namespace: COUNT_STORE ,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions,\r\n});\r\n```\r\n\r\n```ts\r\nimport count from './count';\r\nimport { createStoreApp } from 'vuex';\r\n\r\nconst store = createStoreApp({\r\n  stores: [count],\r\n});\r\nexport default store;\r\n```\r\n```ts\r\nimport { useStore } from 'vuex';\r\nimport  {COUNT_STORE } from './count';\r\nconst store=useStore(COUNT_STORE);\r\nstore.useActions();\r\nstore.useState();\r\nstore.useGetter();\r\n....\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1903","RelatedDescription":"Closed issue \"StoreApp and Namespace\" (#1903)"},{"Id":"770361044","IsPullRequest":false,"CreatedAt":"2020-12-17T20:54:42","Actor":"hackel","Number":"1905","RawContent":null,"Title":"feat: Allow plugins in modules","State":"open","Body":"### What problem does this feature solve?\r\nCurrently plugins are only loaded in the root store instance and are silently ignored in modules.  It would be convenient and consistent to be able to register plugins within a module.  The plugin should receive a store with module-scoped state, getters, rootState, etc. just like an action.  This would allow for better separation of concerns and avoid having to modify the root store for things that are specific to a single module.\r\n\r\n### What does the proposed API look like?\r\nContrived example:\r\n```js\r\nconst store = new Vuex.Store({\r\n  modules: {\r\n    Module: {\r\n      namespaced: true,\r\n      state: { count: 0, countPlusOne: 1 },\r\n      mutations: {\r\n        setCountPlusOne: (state, count) => (state.countPlusOne = count),\r\n      },\r\n      plugins: [\r\n        store => {\r\n          store.watch(\r\n            (state, getters) => state.count,\r\n            (newVal, oldVal) => store.commit('setCountPlusOne', newVal)\r\n          );\r\n        },\r\n      ],\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1905","RelatedDescription":"Open issue \"feat: Allow plugins in modules\" (#1905)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-02-09T05:30:39.102149Z","RunDurationInMilliseconds":1534}