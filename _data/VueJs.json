{"Data":{"Vue-Issues":{"Issues":[{"Id":"723752573","IsPullRequest":true,"CreatedAt":"2020-10-17T12:55:47","Actor":"shadowings-zy","Number":"11726","RawContent":null,"Title":"fix(render): $scopedSlots shoud not empty in beforeMount (#11714)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nClose #11714 ","Url":"https://github.com/vuejs/vue/pull/11726","RelatedDescription":"Open PR \"fix(render): $scopedSlots shoud not empty in beforeMount (#11714)\" (#11726)"},{"Id":"723219270","IsPullRequest":true,"CreatedAt":"2020-10-16T13:22:14","Actor":"him2him2","Number":"11725","RawContent":null,"Title":"Update HTTP -> HTTPS","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ X ] Other, please describe:\r\nURLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ X ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11725","RelatedDescription":"Open PR \"Update HTTP -> HTTPS\" (#11725)"},{"Id":"722858836","IsPullRequest":true,"CreatedAt":"2020-10-16T12:17:27","Actor":"him2him2","Number":"11723","RawContent":null,"Title":"chore: update HTTP -> HTTPS","State":"closed","Body":"URLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [X ] Other, please describe:\r\nURLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ X ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11723","RelatedDescription":"Closed or merged PR \"chore: update HTTP -> HTTPS\" (#11723)"},{"Id":"721664848","IsPullRequest":false,"CreatedAt":"2020-10-14T18:08:27","Actor":"Yuriuh","Number":"11722","RawContent":null,"Title":"Scoped slot is not reactive","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-scopedslot-not-reactive-6otqn](https://codesandbox.io/s/vue-scopedslot-not-reactive-6otqn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the next button to switch to the next component\r\n2. It does not work\r\n\r\n### What is expected?\r\nShow CompTwo component\r\n\r\n### What is actually happening?\r\nStill show CompOne component\r\n\r\n---\r\n1. I tried to pass components by props\r\n2. I used dynamic component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11722","RelatedDescription":"Closed issue \"Scoped slot is not reactive\" (#11722)"},{"Id":"720009680","IsPullRequest":false,"CreatedAt":"2020-10-13T12:11:31","Actor":"kuanyui","Number":"11720","RawContent":null,"Title":"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via v-if","State":"closed","Body":"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via `v-if`.\r\n### Version\r\nConfirmed in:\r\n- 2.6.11\r\n- 2.6.12\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/upbeat-jepsen-fhw1r?file=/src/App.vue](https://codesandbox.io/s/upbeat-jepsen-fhw1r?file=/src/App.vue)\r\n\r\n### Steps to reproduce\r\n# `Parent.vue`\r\n```pug\r\n.parentRoot\r\n  div(v-if=\"showChild\")\r\n    Child(ref=\"child\")\r\n```\r\n```js\r\n{\r\n  computed: {\r\n     child () { return this.$refs.child },\r\n  },\r\n}\r\n```\r\n\r\n# `Child.vue`\r\n```pug\r\ndiv\r\n  input(ref=\"inputEl\")\r\n```\r\n\r\n```js\r\n{\r\n  methods: {\r\n    /** call from App.vue */\r\n    debug() {\r\n      console.log(\"[Child] v-if => this.$el ===\", this.$el);\r\n      console.log(\"[Child] v-if => this.$refs.inputEl ===\", this.$refs.inputEl);\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n### What is expected?\r\nCan always get correct `Child.$el` and `Child.$refs.inputEl`\r\n\r\n### What is actually happening?\r\nAt the first time of `Child.mounted()`, everything goes OK.\r\n\r\nFrom the second time of `Child.mounted()`:\r\n`Child.$el` is printed, but detached from DOM.\r\n`Child.$refs.inputEl` becomes undefined.\r\n\r\n#### Console output:\r\n```\r\n# First time mounting of Child.vue\r\nv-if => this.$el === <DIV>…</DIV>\r\nv-if => this.$refs.inputEl === <INPUT></INPUT>\r\n# First time mounting of Child.vue\r\nv-if => this.$el === <DIV>…</DIV>     ### ← this is printable in console, but not found in DOM.\r\nv-if => this.$refs.inputEl === undefined    ### ← becomes undefined \r\n```\r\n---\r\n`v-show` also has some different strange behaviours under such context.\r\n\r\n# Why on Earth make a getter instead of access this.$refs.XXX directly?\r\nThis is very useful for making DRY type-awared `this.$refs.XXX`  in TypeScript:\r\n```ts\r\n{\r\n  computed: {\r\n    child (): InstanceType<typeof Child> {\r\n      // @ts-ignore\r\n      return this.$refs.child\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11720","RelatedDescription":"Closed issue \"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via v-if\" (#11720)"},{"Id":"720083502","IsPullRequest":true,"CreatedAt":"2020-10-13T10:43:27","Actor":"aka434112","Number":"11721","RawContent":null,"Title":"Using this PR to generate a build (DO NOT REVIEW/MERGE)","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/pull/11721","RelatedDescription":"Closed or merged PR \"Using this PR to generate a build (DO NOT REVIEW/MERGE)\" (#11721)"},{"Id":"719336829","IsPullRequest":false,"CreatedAt":"2020-10-12T20:36:58","Actor":"bastiantangedal","Number":"11719","RawContent":null,"Title":"Ctor.config is undefined","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Steps to reproduce\r\nStart the app with 'npm run serve'\r\n\r\n\r\n### What is expected?\r\nThe app/website should launch as normal\r\n\r\n### What is actually happening?\r\nThe website does not load, and the console has this error: Uncaught TypeError: Ctor.config is undefined.\r\n\r\nIt looks like the error is coming from a file named: **vue-composition-api.esm.js**: \r\n```\r\nfunction defineComponentInstance(Ctor, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var silent = Ctor.config.silent;\r\n    Ctor.config.silent = true;\r\n    var vm = new Ctor(options);\r\n    Ctor.config.silent = silent;\r\n    return vm;\r\n}\r\n```\r\n\r\nThis is the full error that I get in the console:\r\n```\r\nUncaught TypeError: Ctor.config is undefined\r\n    defineComponentInstance vue-composition-api.esm.js:123\r\n    observe vue-composition-api.esm.js:475\r\n    reactive vue-composition-api.esm.js:586\r\n    ref vue-composition-api.esm.js:290\r\n    <anonymous> dyi.js:3\r\n    js app.js:1521\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> cjs.js:3\r\n    ./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Login.vue?vue&type=script&lang=js& app.js:974\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> Login.vue:1\r\n    ./src/components/Login.vue?vue&type=script&lang=js& app.js:1317\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> Login.vue:1\r\n    vue app.js:1305\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> index.js:1\r\n    js app.js:1509\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> main.js:13\r\n    js app.js:1497\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    1 app.js:1534\r\n    __webpack_require__ app.js:849\r\n    checkDeferredModules app.js:46\r\n    <anonymous> app.js:925\r\n    <anonymous>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11719","RelatedDescription":"Closed issue \"Ctor.config is undefined\" (#11719)"},{"Id":"719257827","IsPullRequest":false,"CreatedAt":"2020-10-12T10:17:40","Actor":"borodadada","Number":"11718","RawContent":null,"Title":"vuejs/vue-ssr-webpack-plugin and webpack 5","State":"open","Body":"### What problem does this feature solve?\r\ngithub missing repository vuejs/vue-ssr-webpack-plugin, i update webpack to version 5 and have error\r\n[vue-server-renderer-webpack-plugin] webpack config `output.libraryTarget` should be \"commonjs2\".\r\n\r\n\r\n### What does the proposed API look like?\r\nin my output.libraryTarget is libraryTarget: 'commonjs2'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11718","RelatedDescription":"Open issue \"vuejs/vue-ssr-webpack-plugin and webpack 5\" (#11718)"},{"Id":"718919927","IsPullRequest":true,"CreatedAt":"2020-10-11T22:15:56","Actor":"SMAKSS","Number":"11717","RawContent":null,"Title":"docs(benchmark, dist, examples): modifying Readme.md files","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nI recently forked the project to read the codebase and get to know it better, when I just start reading README.md files I faced some grammar issues and thought modifying them will help future readers to read them better and easier.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n","Url":"https://github.com/vuejs/vue/pull/11717","RelatedDescription":"Closed or merged PR \"docs(benchmark, dist, examples): modifying Readme.md files\" (#11717)"},{"Id":"718036042","IsPullRequest":false,"CreatedAt":"2020-10-09T10:42:55","Actor":"1939108122","Number":"11716","RawContent":null,"Title":"vue3迁移指南文档文字错误","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref](https://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n文档错误链接如下：\r\nhttps://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref\r\n\r\n### What is expected?\r\n文档中，“在整个Composition API中，经常会使用使用引用的概念。”，这句话中“使用”一词使用了两次，应当使用一次。\r\n\r\n### What is actually happening?\r\n文字赘余\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11716","RelatedDescription":"Closed issue \"vue3迁移指南文档文字错误\" (#11716)"},{"Id":"717179941","IsPullRequest":false,"CreatedAt":"2020-10-08T09:31:43","Actor":"tstriker","Number":"11715","RawContent":null,"Title":"Warn about `this.` used in templates","State":"open","Body":"### What problem does this feature solve?\r\nSometimes when moving the code around, the `this.` can end up traveling with it. Or the finger memory will just type in the `this.` where none is required.\r\n\r\nDue to a side-effect, the `this` context is indeed present, but it breaks when it's used deeper in templates (haven't looked exactly, but i think it breaks in v-if's or somewhere around there.\r\n\r\nTo avoid inadvertent breakages, it would be nice if vue could warn about it.\r\n\r\n\r\n### What does the proposed API look like?\r\na `this.` spotted in javascript bits of template would show a warning in the javascript console\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11715","RelatedDescription":"Open issue \"Warn about `this.` used in templates\" (#11715)"},{"Id":"716696818","IsPullRequest":false,"CreatedAt":"2020-10-07T16:54:58","Actor":"KaelWD","Number":"11714","RawContent":null,"Title":"$scopedSlots is empty until render()","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/kaelwd/pen/rNLNYGL?editors=1011](https://codepen.io/kaelwd/pen/rNLNYGL?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the console\r\n\r\n### What is expected?\r\n`\"ScopedComponent beforeMount\" true` to be logged\r\n\r\n### What is actually happening?\r\n`\"ScopedComponent beforeMount\" false`\r\n\r\n---\r\nThis was discovered in vuetify: https://github.com/vuetifyjs/vuetify/issues/11533#issuecomment-705058227\r\n\r\nThe real setup is a watcher on a computed property that depends on `$slots`. The watcher is called before mount to get an initial value, causing the computed property to be executed and return an incorrect value. \r\n\r\nMinimal example with the watcher if that helps: https://codepen.io/kaelwd/pen/vYKYWbV?editors=1010\r\n\r\nThis works as expected in vue 3: https://codepen.io/kaelwd/pen/gOMOXoB?editors=1011\r\n\r\nThe bug seems to have existed since scoped slots were introduced in v2.1, but it wasn't a problem here until v2.6 when scoped slots started being used everywhere with `v-slot`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11714","RelatedDescription":"Open issue \"$scopedSlots is empty until render()\" (#11714)"},{"Id":"716382714","IsPullRequest":false,"CreatedAt":"2020-10-07T09:58:47","Actor":"awulkan","Number":"11713","RawContent":null,"Title":"Computed fields for named slots stop working if I add watchers to them","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/serene-thunder-0hxw2?file=/src/components/HelloWorld.vue](https://codesandbox.io/s/serene-thunder-0hxw2?file=/src/components/HelloWorld.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the buttons to see that the computed fields work.\r\n2. Uncomment the watcher.\r\n3. Click buttons again and notice that computed fields don't work, and the watcher is never triggered.\r\n\r\n### What is expected?\r\nComputed fields work and watcher is triggered.\r\n\r\n### What is actually happening?\r\nComputed fields don't work and watcher is never triggered.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n\r\n\r\n### Code\r\nApp.vue\r\n```vue\r\n<template>\r\n  <div id=\"app\">\r\n    <button @click=\"slotOneActive = !slotOneActive\">toggle slot</button>\r\n\r\n    <HelloWorld>\r\n      <template v-slot:one>\r\n        <span v-if=\"slotOneActive\">I am active</span>\r\n      </template>\r\n    </HelloWorld>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HelloWorld from \"./components/HelloWorld\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    HelloWorld,\r\n  },\r\n  data() {\r\n    return {\r\n      slotOneActive: true,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  text-align: center;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n```\r\nHelloWorld.vue\r\n```vue\r\n<template>\r\n  <div>\r\n    <slot name=\"one\" />\r\n    <p><strong>computedSlotValue:</strong> {{ computedSlotValue }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  computed: {\r\n    computedSlotValue() {\r\n      return !!this.$slots.one;\r\n    },\r\n  },\r\n  // watch: {\r\n  //   computedSlotValue() {\r\n  //     console.log(\"watch triggered\");\r\n  //   },\r\n  // },\r\n};\r\n</script>\r\n```\r\n\r\nEdit: I updated the code example to make it easier.","Url":"https://github.com/vuejs/vue/issues/11713","RelatedDescription":"Open issue \"Computed fields for named slots stop working if I add watchers to them\" (#11713)"},{"Id":"716254022","IsPullRequest":true,"CreatedAt":"2020-10-07T06:54:24","Actor":"gibkigonzo","Number":"11712","RawContent":null,"Title":"feat(ssr): add context to shouldPrefetch and shouldPreload","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nRight now `shouldPrefetch` and `shouldPreload` are triggered on each request and we don't have enough information to decide what should be filtered. For example when we create dynamic import \r\n```\r\nimport(/* webpackChunkName: \"somelib-locales-[lang]\" */ `somelib/locale/${lang}`)\r\n```\r\nthen we will get all files prefetched/preloaded. It would be great to filter those files that are not matching current lang in `shouldPrefetch/shouldPreload`. So I think adding `context` would give us information that is needed. \r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11712","RelatedDescription":"Open PR \"feat(ssr): add context to shouldPrefetch and shouldPreload\" (#11712)"},{"Id":"715763864","IsPullRequest":true,"CreatedAt":"2020-10-06T15:11:55","Actor":"bereketsemagn","Number":"11711","RawContent":null,"Title":"Updated README.md file","State":"closed","Body":"**What kind of change does this PR introduce?**\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nUpdated the README.md file (Added badges include: stars, forks, and issues)\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfils these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n","Url":"https://github.com/vuejs/vue/pull/11711","RelatedDescription":"Closed or merged PR \"Updated README.md file\" (#11711)"},{"Id":"715360419","IsPullRequest":false,"CreatedAt":"2020-10-06T07:21:59","Actor":"Epsilon-Rashmi","Number":"11710","RawContent":null,"Title":"Vuejs integrated with AEM through CDN is blank on IE11 ","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://10.226.185.144:4502/](http://10.226.185.144:4502/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIntegrated with AEM Sightly template\r\n <script type=\"text/x-template\" id=\"loader-template\" data-sly-include=\"partials/loading-screen.html\"></script>\r\n\r\nVuejs is included through <script> tag and initialised as below\r\nnew Vue({})\r\nVue.component('centerCard', {});\r\n\r\n### What is expected?\r\nTo render the vue component on IE11\r\n\r\n### What is actually happening?\r\nThe page which has the Vue component is blank on IE11\r\n\r\n---\r\nThis component is  in our internal development environment running on internal network. Hence the url shared would no work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11710","RelatedDescription":"Closed issue \"Vuejs integrated with AEM through CDN is blank on IE11 \" (#11710)"},{"Id":"715322516","IsPullRequest":false,"CreatedAt":"2020-10-06T04:18:44","Actor":"leandrobarroso","Number":"11709","RawContent":null,"Title":"Just a test","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://google.com](http://google.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHello world!\r\n\r\n### What is expected?\r\nSomething\r\n\r\n### What is actually happening?\r\nDont know\r\n\r\n---\r\nok ok ok ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11709","RelatedDescription":"Closed issue \"Just a test\" (#11709)"},{"Id":"715322384","IsPullRequest":false,"CreatedAt":"2020-10-06T04:18:13","Actor":"leandrobarroso","Number":"11708","RawContent":null,"Title":"Just a test","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://google.com](http://google.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHello world!\r\n\r\n### What is expected?\r\nSomething\r\n\r\n### What is actually happening?\r\nDont know\r\n\r\n---\r\nok ok ok ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11708","RelatedDescription":"Closed issue \"Just a test\" (#11708)"},{"Id":"715187021","IsPullRequest":true,"CreatedAt":"2020-10-05T21:52:21","Actor":"davestewart","Number":"11707","RawContent":null,"Title":"fix(transition component): fix transitions for 3d-transformed elements (fix #11376)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n\r\n**Other information:**\r\n\r\nThe issue contains a full demo of the problem\r\n\r\n- https://github.com/vuejs/vue/issues/11376","Url":"https://github.com/vuejs/vue/pull/11707","RelatedDescription":"Open PR \"fix(transition component): fix transitions for 3d-transformed elements (fix #11376)\" (#11707)"},{"Id":"715183556","IsPullRequest":true,"CreatedAt":"2020-10-05T21:45:31","Actor":"noreff","Number":"11706","RawContent":null,"Title":"fix(ssr): inheritAttrs false adds attributes to html (fix #11297)","State":"open","Body":"Fix [11297](https://github.com/vuejs/vue/issues/11297).\r\n\r\nAfter this fix inheritAttrs option works in a correct way and don't add attributes to html output.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11706","RelatedDescription":"Open PR \"fix(ssr): inheritAttrs false adds attributes to html (fix #11297)\" (#11706)"},{"Id":"714721370","IsPullRequest":true,"CreatedAt":"2020-10-05T14:57:25","Actor":"vue-bot","Number":"11705","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11705","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11705)"},{"Id":"714687652","IsPullRequest":true,"CreatedAt":"2020-10-05T10:09:10","Actor":"mitchellbryson","Number":"11704","RawContent":null,"Title":"build: unexpected token when running dev","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFixes https://github.com/vuejs/vue/issues/11703","Url":"https://github.com/vuejs/vue/pull/11704","RelatedDescription":"Closed or merged PR \"build: unexpected token when running dev\" (#11704)"},{"Id":"714681776","IsPullRequest":false,"CreatedAt":"2020-10-05T10:09:09","Actor":"mitchellbryson","Number":"11703","RawContent":null,"Title":"Unexpected token in createComponentInstanceForVnode when running dev","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/dist/vue.esm.browser.js#L3300](https://github.com/vuejs/vue/blob/dev/dist/vue.esm.browser.js#L3300)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repo\r\n2. Run `yarn install`\r\n3. Run `yarn run dev`\r\n\r\n### What is expected?\r\nShould bundle without errors\r\n\r\n### What is actually happening?\r\nError: Unexpected token\r\n\r\n---\r\n````\r\nsrc/core/vdom/create-component.js (214:4)\r\n212:   const options: InternalComponentOptions = {\r\n213:     _isComponent: true,\r\n214:     _parentVnode: vnode,\r\n         ^\r\n215:     parent\r\n216:   }\r\nError: Unexpected token\r\n    at error (/Users/mitchellbryson/Dropbox/personal/vue/node_modules/rollup/dist/rollup.js:3599:30)\r\n    at Module.error (/Users/mitchellbryson/Dropbox/personal/vue/node_modules/rollup/dist/rollup.js:14374:9)\r\n    at tryParse (/Users/mitchellbryson/Dropbox/personal/vue/node_modules/rollup/dist/rollup.js:14037:16)\r\n    at Module.setSource (/Users/mitchellbryson/Dropbox/personal/vue/node_modules/rollup/dist/rollup.js:14093:35)\r\n    at /Users/mitchellbryson/Dropbox/personal/vue/node_modules/rollup/dist/rollup.js:17456:20\r\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n    at async Promise.all (index 2)\r\n    at async Promise.all (index 1)\r\n    at async Promise.all (index 3)\r\n    at async Promise.all (index 0)\r\n````\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11703","RelatedDescription":"Closed issue \"Unexpected token in createComponentInstanceForVnode when running dev\" (#11703)"},{"Id":"714108713","IsPullRequest":true,"CreatedAt":"2020-10-03T15:03:22","Actor":"Thanarathanam","Number":"11702","RawContent":null,"Title":"feat(vdom): native modifier for props will add it as attribute of component's root element refer Issue:11601","State":"open","Body":"\r\nre #11601\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11702","RelatedDescription":"Open PR \"feat(vdom): native modifier for props will add it as attribute of component's root element refer Issue:11601\" (#11702)"},{"Id":"714091925","IsPullRequest":false,"CreatedAt":"2020-10-03T13:42:41","Actor":"cyanwin","Number":"11701","RawContent":null,"Title":"how to use createElement render data-* ","State":"closed","Body":"### What problem does this feature solve?\r\nhow to use createElement render data-* \r\n\r\n### What does the proposed API look like?\r\ncreateElement\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11701","RelatedDescription":"Closed issue \"how to use createElement render data-* \" (#11701)"},{"Id":"713655256","IsPullRequest":true,"CreatedAt":"2020-10-02T14:16:59","Actor":"takumu1011","Number":"11700","RawContent":null,"Title":"test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11700","RelatedDescription":"Closed or merged PR \"test\" (#11700)"},{"Id":"713641099","IsPullRequest":true,"CreatedAt":"2020-10-02T13:55:26","Actor":"markjszy","Number":"11699","RawContent":null,"Title":"fix: update karma and webpack dependencies for OS X builds on Node v12","State":"open","Body":"fix #11696\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11699","RelatedDescription":"Open PR \"fix: update karma and webpack dependencies for OS X builds on Node v12\" (#11699)"},{"Id":"713244409","IsPullRequest":true,"CreatedAt":"2020-10-02T07:07:04","Actor":"adityanjr","Number":"11698","RawContent":null,"Title":"one-time donation link","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11698","RelatedDescription":"Closed or merged PR \"one-time donation link\" (#11698)"},{"Id":"712891541","IsPullRequest":false,"CreatedAt":"2020-10-01T15:54:59","Actor":"MeisterTea","Number":"11697","RawContent":null,"Title":"Vue stripping out styles from inline SVG","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsbin.com/lurayuxofo/edit?html,js,console,output](https://jsbin.com/lurayuxofo/edit?html,js,console,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Include inline SVG with some styles within a Vue instance\r\n- Init vue instance\r\n\r\n### What is expected?\r\nSVG to be styled according to the style element\r\n\r\n### What is actually happening?\r\nVue is giving a warning \"[Vue warn]: Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <style>. \" and also stripping the style element so the SVG is appearing with no style.\r\n\r\n---\r\nI am opening the exact same issue as this [one](https://github.com/vuejs/vue/issues/4144) because it's been ignored and this should be fixed by now.\r\n\r\nIt's been plaguing vue since 2016.\r\n\r\n# The fix so far: \r\nIn the meantime, this can be fixed by adding this attribute `xmlns:svg=\"http://www.w3.org/2000/svg\"` to your `<svg>` tag and writing your style as this : `<svg:style type=\"text/css\">`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11697","RelatedDescription":"Closed issue \"Vue stripping out styles from inline SVG\" (#11697)"},{"Id":"712760753","IsPullRequest":false,"CreatedAt":"2020-10-01T11:39:10","Actor":"markjszy","Number":"11696","RawContent":null,"Title":"Build warnings in Mac OS and Node v12 (development)","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOn Mac OS Catalina (and probably prior versions), with Node v12 installed, follow the developer build instructions: \r\n\r\n* Clone the repository\r\n* Run `yarn`\r\n\r\n### What is expected?\r\nSuccessful report from `yarn` that all dependencies have been installed, with no warnings or errors\r\n\r\n### What is actually happening?\r\nThe following warning, followed by a slew of details (errors) concerning `fsevents` and one of its dependencies, `nan`\r\n\r\n`warning Error running install script for optional dependency: \"/Users/mark/dev/vue/node_modules/fsevents: Command failed.`\r\n\r\n---\r\nDev dependency installation works fine with Node v10. I think I understand the problem and am curious about the right solution. \r\nVue currently specifies `webpack` 4.x and `karma` 3.x as devDependencies, both of which ultimately bring in `chokidar` 2.x, which lists `fsevents` 1.2.x as an optional dependency. \r\n\r\nOld `fsevents` is really the problem, in two ways:\r\n* It references entities that have been removed in Node 12.x (e.g. v8::Handle; see https://github.com/fsevents/fsevents/blob/v1.2.2/fsevents.cc#L89) \r\n* It relies on `nan` 2.9.x, which also references deprecated/removed entities from the v8 API (e.g. `isNearDeath`). Newer versions of `nan` have addressed this issue. \r\n\r\nI imagine the easiest solution, assuming nothing else breaks, would be to update the `karma` and `webpack` dependencies to some minimal viable version that does away with reliance on these older libs without breaking other expectations. In the meantime, we could also put a note in the build instructions for Mac users noting that they may need to move down to Node v10 if they want to avoid this problem. I understand that this might be obvious to some audience that intends to pitch in with Vue development in the first place, but it might help some.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11696","RelatedDescription":"Open issue \"Build warnings in Mac OS and Node v12 (development)\" (#11696)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"723839235","IsPullRequest":true,"CreatedAt":"2020-10-17T20:12:52","Actor":"tristansokol","Number":"3348","RawContent":null,"Title":"Docs Add app engine to history mode docs","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nHi! I just finished moving my personal site to Vue3 and though that others might benefit from this addition to the history mode docs. \r\n\r\nLet me know if you have any feedback, and have a wonderful day. ","Url":"https://github.com/vuejs/vue-router/pull/3348","RelatedDescription":"Open PR \"Docs Add app engine to history mode docs\" (#3348)"},{"Id":"723106865","IsPullRequest":false,"CreatedAt":"2020-10-16T12:02:01","Actor":"FIGHTING-TOP","Number":"3347","RawContent":null,"Title":"Hash模式中location.search和location.hash的位置顺序使用有误","State":"closed","Body":"### Version\r\n3.4.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/naughty-sky-vj71h?file=/src/components/HelloWorld.vue](https://codesandbox.io/s/naughty-sky-vj71h?file=/src/components/HelloWorld.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n使用vue-router的Hash模式\r\n使用vm.$route.query获取url中location.search参数在以下情况获取不到，\r\neg:  http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument\r\n\r\n\r\n### What is expected?\r\n应该是：location.search 应该是排在 location.hash 前面时可以用vm.$route.query来获取location.search参数\r\n\r\n### What is actually happening?\r\n规范的url中，location.search 应该是排在 location.hash 前面的，但是在实际上，我们使用 vue-router却是在hash排在search之前时才能获取到\r\n\r\n---\r\n此外 $router.push() 和 $router.replace() 具有同样的问题\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3347","RelatedDescription":"Closed issue \"Hash模式中location.search和location.hash的位置顺序使用有误\" (#3347)"},{"Id":"723023697","IsPullRequest":false,"CreatedAt":"2020-10-16T08:57:51","Actor":"adamprocter","Number":"3346","RawContent":null,"Title":"iOS history mode triggers page refresh","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/vehbg57t/](http://jsfiddle.net/vehbg57t/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis issue is back. iOS 14.0.1\r\nI managed to stop it happening all the time but no reason I can fathom. Visit on iOS device (iPad / iPhone), must be actual device. https://alpha.nodenogg.in\r\n\r\n\r\nTap my lists\r\nGive you self a name (lowercase no spaces)\r\nTap store\r\nCreate a microcosm (lowercase no spaces)\r\nTwo Join\r\n\r\nNow without creating a node\r\nTap to another view such as cards\r\nScreen will hit refresh problem. \r\n\r\nNow a workaround seems to be to create a node on that view first. \r\n\r\nDoesnt effect Android or desktop\r\n\r\n\r\n### What is expected?\r\nShould load page \r\n\r\n### What is actually happening?\r\nGoes black / keep trying to refresh \r\n\r\n---\r\nLooks like this previous issue - https://github.com/vuejs/vue-router/issues/890\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3346","RelatedDescription":"Closed issue \"iOS history mode triggers page refresh\" (#3346)"},{"Id":"722397919","IsPullRequest":false,"CreatedAt":"2020-10-15T14:38:40","Actor":"saileshkush95","Number":"3345","RawContent":null,"Title":"Handle Layout design on the basis of hostname.","State":"closed","Body":"I'm using this code to distinguish routes of different hostname.\r\n```\r\nimport default_routes from \"./default\";\r\nimport tenantone from \"./tenantone\";\r\nimport tenanttwo from \"./tenanttwo\";\r\n\r\nconst currentHostName = window.location.hostname;\r\nlet router;\r\n\r\nif (currentHostName === \"127.0.0.1\") {\r\n  router = tenantone;\r\n} else if (currentHostName === \"localhost\") {\r\n  router = tenanttwo;\r\n} else {\r\n  router = default_routes;\r\n}\r\n\r\nexport default router;\r\n```\r\n and this is working properly but I've little bit issue. Since every hostname has completely different layout. for example when i'm using this code in App.vue\r\n```\r\n<template>\r\n    <div id=\"nav\">\r\n      <router-link to=\"/\">Home</router-link>\r\n      <router-link to=\"/about\">About</router-link>\r\n    </div>\r\n  <router-view />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"App\",\r\n\r\n  data: () => ({\r\n    //\r\n  }),\r\n};\r\n</script>\r\n```\r\nNavbar is available in all the tenant. and also this is the problem. How can I handle this situation properly. because, each and every tenant have its own navbar design and layout.  I didn't want to repeat myself. \r\n\r\nand here is my project layout.\r\n\r\n![Screenshot from 2020-10-15 20-23-14](https://user-images.githubusercontent.com/28560875/96144807-4a9d6380-0f24-11eb-925a-af34af583ef8.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3345","RelatedDescription":"Closed issue \"Handle Layout design on the basis of hostname.\" (#3345)"},{"Id":"722350967","IsPullRequest":false,"CreatedAt":"2020-10-15T13:44:50","Actor":"Glandos","Number":"3344","RawContent":null,"Title":"[Typescript] Location in Router.resolve should allow for undefined params to remove them","State":"open","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wr0ehvsd/2/](https://jsfiddle.net/wr0ehvsd/2/)\r\n\r\n\r\n### Steps to reproduce\r\nCall `router.resolve({ params: { id: undefined } })` to get the route for the same location with the `id` parameter.\r\n\r\nThe route is correctly defined with `/:id?` so `id` is optional.\r\n\r\n### What is expected?\r\nNo typescript compiler error.\r\n\r\n### What is actually happening?\r\nTypescript complains because `params` in Location is `Dictionary<string>` and not `Dictionary<string | undefined>`\r\n\r\nHowever, the behavior from vue-router is correct.\r\n\r\n---\r\nMaybe there is a workaround, but I didn't find it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3344","RelatedDescription":"Open issue \"[Typescript] Location in Router.resolve should allow for undefined params to remove them\" (#3344)"},{"Id":"722180595","IsPullRequest":false,"CreatedAt":"2020-10-15T10:01:43","Actor":"SergeiPleshkov","Number":"3343","RawContent":null,"Title":"Nuxt-link and router-link don't create href attribute","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/SergeiPleshkov/create-nuxt-app](https://github.com/SergeiPleshkov/create-nuxt-app)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nServe reproduction repo, inspect the source code.\r\n\r\n![image](https://user-images.githubusercontent.com/29925191/95989736-55c49680-0e33-11eb-959b-bb39625e24f7.png)\r\n\r\nsource code from devtools' network tab\r\n![image](https://user-images.githubusercontent.com/29925191/95989883-8278ae00-0e33-11eb-8c4b-dd5940c365d9.png)\r\n\r\ndocument ready\r\n![image](https://user-images.githubusercontent.com/29925191/95989982-a1774000-0e33-11eb-9057-39a8ba700b8f.png)\r\n\r\n\r\n\r\n### What is expected?\r\nPassing not defined dynamic prop to `<n-link>` or `<router-link>'`should not cause href loss in SSR mode.\r\n\r\n\r\n### What is actually happening?\r\nHref attribute appears after browser render.\r\n\r\n\r\n---\r\nI also created an [issue](https://github.com/nuxt/nuxt.js/issues/8204) in nuxt repo, but i think this is mainly vue-router problem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3343","RelatedDescription":"Closed issue \"Nuxt-link and router-link don't create href attribute\" (#3343)"},{"Id":"721361303","IsPullRequest":false,"CreatedAt":"2020-10-15T08:27:05","Actor":"laomu1988","Number":"3341","RawContent":null,"Title":"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/laomu1988/pen/QWEjezL?editors=1011](https://codepen.io/laomu1988/pen/QWEjezL?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick jump button\r\n\r\n### What is expected?\r\nrouter changed\r\n\r\n### What is actually happening?\r\nrouter not change and the console has error info.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3341","RelatedDescription":"Closed issue \"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}\" (#3341)"},{"Id":"721945887","IsPullRequest":false,"CreatedAt":"2020-10-15T03:39:56","Actor":"710898293","Number":"3342","RawContent":null,"Title":"处理加载状态会导致组件内的守卫失效","State":"closed","Body":"在https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%A4%84%E7%90%86%E5%8A%A0%E8%BD%BD%E7%8A%B6%E6%80%81\r\n在这处理路由懒加载状态\r\n但会导致组件内的守卫失效\r\nhttps://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB","Url":"https://github.com/vuejs/vue-router/issues/3342","RelatedDescription":"Closed issue \"处理加载状态会导致组件内的守卫失效\" (#3342)"},{"Id":"721357963","IsPullRequest":false,"CreatedAt":"2020-10-14T10:59:17","Actor":"laomu1988","Number":"3340","RawContent":null,"Title":"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}","State":"closed","Body":"**Version**\r\n3.4.6\r\n\r\n**Reproduction link**\r\nhttps://codepen.io/laomu1988/pen/QWEjezL?editors=1011\r\n\r\n**Steps to reproduce**\r\nclick jump button\r\n\r\n**What is expected?**\r\nrouter changed\r\n\r\n**What is actually happening?**\r\nrouter not change  and the console has error info.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3340","RelatedDescription":"Closed issue \"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}\" (#3340)"},{"Id":"720686178","IsPullRequest":false,"CreatedAt":"2020-10-13T18:57:51","Actor":"philippkuehn","Number":"3339","RawContent":null,"Title":"\"scroll-margin-top\" not working","State":"closed","Body":"edit: sorry wrong repo","Url":"https://github.com/vuejs/vue-router/issues/3339","RelatedDescription":"Closed issue \"\"scroll-margin-top\" not working\" (#3339)"},{"Id":"720051384","IsPullRequest":false,"CreatedAt":"2020-10-13T10:31:14","Actor":"muety","Number":"3338","RawContent":null,"Title":"History mode config example for Caddy 2 webserver","State":"closed","Body":"### What problem does this feature solve?\r\n[!1555](https://github.com/vuejs/vue-router/pull/1555) has introduced a snippet to configure the Caddy web server to be compatible with vue-router's history mode. However, for version 2 of Caddy, the config directives' syntax has changed. \r\n\r\n### What does the proposed API look like?\r\nOne might either use [`try_files`](https://caddyserver.com/docs/caddyfile/directives/try_files) or [`rewrite`](https://caddyserver.com/docs/caddyfile/directives/rewrite).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3338","RelatedDescription":"Closed issue \"History mode config example for Caddy 2 webserver\" (#3338)"},{"Id":"718817027","IsPullRequest":false,"CreatedAt":"2020-10-11T11:35:38","Actor":"posva","Number":"3337","RawContent":null,"Title":"Slashes are not decoded (%2F -> /) when directly navigating to a url","State":"open","Body":"Repro: https://jsfiddle.net/c61xvkym/\r\n\r\nParams should be decoded. It worked on 3.4.5\r\n\r\nRef https://github.com/vuejs/vue-router/pull/3323","Url":"https://github.com/vuejs/vue-router/issues/3337","RelatedDescription":"Open issue \"Slashes are not decoded (%2F -> /) when directly navigating to a url\" (#3337)"},{"Id":"718505520","IsPullRequest":false,"CreatedAt":"2020-10-10T08:56:42","Actor":"yuhonyon","Number":"3336","RawContent":null,"Title":"Resource loading failed, hash route lost","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://vux.li/demos/v2/? x-page=github#/component/alert](https://vux.li/demos/v2/? x-page=github#/component/alert)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA page URL is xxx.com#/ A Load a.hunk.js on demand\r\n\u2028If a.hunk.js fails to load, the vue-Router resets the URL to xxx.com#/\u2028\r\nThen the user refreshes the page and goes to the wrong page\r\nReal scene:\u2028\r\nOpen the URL https://vux.li/demos/v2 #/component/alert? x-page=github\u2028\r\nBreakpoint static resources 108 .De037dbd118e6ee543e8. Js\r\n\u2028Refresh the page and the URL will change to https://vux.li/demos/v2 #/\r\n\u2028Unbreakpoint refresh page to home page\r\n\r\n### What is expected?\r\nDo not change the page address if the resource failed to load\r\n\r\n### What is actually happening?\r\nResource loading failed, isError(to)=== true in hook mode, ensureURL was called to modify the page URL\r\n\r\n\r\n---\r\nDo not understand why such a design, weak network is very easy to lead to page jump error or parameter loss, resulting in multiple serious online failure\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3336","RelatedDescription":"Closed issue \"Resource loading failed, hash route lost\" (#3336)"},{"Id":"718504948","IsPullRequest":false,"CreatedAt":"2020-10-10T01:58:48","Actor":"yuhonyon","Number":"3335","RawContent":null,"Title":"Resource loading failed, hash route lost","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n###  Reproduction link\r\nhttps://vux.li/demos/v2/? x-page=github#/component/alert\r\n\r\n###  Steps to reproduce\r\nA page URL is xxx.com#/ A Load a.hunk.js on demand\r\nIf a.hunk.js fails to load, the vue-Router resets the URL to xxx.com#/\r\nThen the user refreshes the page and goes to the wrong page\r\n\r\nReal scene:\r\nOpen the URL https://vux.li/demos/v2 #/component/alert? x-page=github\r\nBreakpoint static resources 108 .De037dbd118e6ee543e8. Js\r\nRefresh the page and the URL will change to https://vux.li/demos/v2 #/\r\nUnbreakpoint refresh page to home page\r\n\r\n###  What is expected?\r\nDo not change the page address if the resource failed to load\r\n\r\n###  What is actually happening?\r\nResource loading failed, isError(to)=== true in hook mode, ensureURL was called to modify the page URL\r\n\r\nDo not understand why such a design, weak network is very easy to lead to page jump error or parameter loss, resulting in multiple serious online failure","Url":"https://github.com/vuejs/vue-router/issues/3335","RelatedDescription":"Closed issue \"Resource loading failed, hash route lost\" (#3335)"},{"Id":"718073277","IsPullRequest":false,"CreatedAt":"2020-10-09T11:41:57","Actor":"yuhonyon","Number":"3334","RawContent":null,"Title":"路由丢失","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://vux.li/demos/v2/?x-page=github#/component/alert](https://vux.li/demos/v2/?x-page=github#/component/alert)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA页面 地址是xxx.com#/a  按需加载a.chunk.js\r\n如果a.chunk.js加载失败, vue-router会把地址重置成xxx.com#/\r\n接下来用户刷新网页就会去到错误的页面\r\n\r\n真实场景:\r\n打开地址https://vux.li/demos/v2/#/component/alert?x-page=github\r\n断点静态资源108.de037dbd118e6ee543e8.js\r\n刷新页面,地址会变成https://vux.li/demos/v2/#/\r\n取消断点刷新页面 页面跳转到了首页\r\n\r\n### What is expected?\r\n资源加载失败 不要修改页面地址\r\n\r\n### What is actually happening?\r\n资源加载失败 , hook方式里判断isError(to)===ture 则调用ensureURL修改了页面地址\r\n\r\n---\r\n不理解为什么这么设计, 弱网就非常容易导致页面跳转错误或者参数丢失, 多次导致严重的线上故障\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3334","RelatedDescription":"Closed issue \"路由丢失\" (#3334)"},{"Id":"713134684","IsPullRequest":false,"CreatedAt":"2020-10-01T20:37:59","Actor":"phlegx","Number":"3333","RawContent":null,"Title":"On beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.4.5\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to Vuex. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3333","RelatedDescription":"Closed issue \"On beforeEach Vuex store lost state after call next()\" (#3333)"},{"Id":"701939393","IsPullRequest":true,"CreatedAt":"2020-09-29T13:15:29","Actor":"mestevezdeister","Number":"3323","RawContent":null,"Title":"fix: remove duplicated decodeURIComponent","State":"closed","Body":"As it is mentioned by @claudiocastro I proposed the change made at #3268 adding some e2e tests, in order to get the fix merged. This change is a fix for the #2725 issue. \r\n\r\nBefore this change the URL such as:\r\n- /query/%25\r\n- /query;q=%25\r\n\r\nProduced an initial error: \r\n- URIError: URI malformed at decodeURIComponent (<anonymous>)\r\n\r\nAnd recursive errors:\r\n- TypeError: Cannot read property 'path' of undefined\r\n\r\nFix change fix the issue and other test cases still pass.\r\n\r\nBest regards\r\n\r\nClose #2725 \r\nClose #3268 \r\nClose #3138","Url":"https://github.com/vuejs/vue-router/pull/3323","RelatedDescription":"Closed or merged PR \"fix: remove duplicated decodeURIComponent\" (#3323)"},{"Id":"708937207","IsPullRequest":false,"CreatedAt":"2020-09-26T14:56:47","Actor":"j0Shi82","Number":"3331","RawContent":null,"Title":"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior","State":"closed","Body":"### Version\r\n3.4.4\r\n\r\n### Reproduction link\r\n[https://github.com/j0Shi82/vue-router-issue-3329](https://github.com/j0Shi82/vue-router-issue-3329)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- pull [repo](https://github.com/j0Shi82/vue-router-issue-3329)\r\n- install [nodejs](https://nodejs.org/en/)\r\n- run `npm install` or `yarn install`\r\n- run `npm run-script start` or `yarn run start`\r\n- navigate to `http://localhost:8085/one`\r\n\r\n### What is expected?\r\nShows `http://localhost:8085/two`\r\n\r\n### What is actually happening?\r\nServer Error 500\r\n\r\n---\r\nThis is a follow-up to https://github.com/vuejs/vue-router/issues/3329 with a working reproduction and a little more information about what is actually causing the issue. \r\n\r\nI'm not sure this is a bug or just an edge case that you have to work around yourself. It's caused by combining SSR, async route components, and redirects within navigation guards. I tried dodging async routes on the server and only using them on the client bundle (to still get the benefit of code-splitting), but that led to hydration errors. \r\n\r\nPossible workarounds are switching to static route components, avoiding redirects within navigation guards, or using the `router.push` api instead of `next`. In our own application we went for the third choice on the server, but had to add additional logic to prevent hydration errors and handle the history mode correctly.\r\n\r\nEither way it might make sense to go over the [official SSR guide](https://ssr.vuejs.org/guide/routing.html#routing-with-vue-router) to better communicate this issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3331","RelatedDescription":"Closed issue \"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior\" (#3331)"},{"Id":"709404466","IsPullRequest":false,"CreatedAt":"2020-09-26T07:27:45","Actor":"greenpdx","Number":"3332","RawContent":null,"Title":"How to route into a page directly from browser","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/haoqtnsc/](https://jsfiddle.net/haoqtnsc/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have a verification page after signup. /validate?token=XXXX .  Now I get a 404  as stated in API history-mode server configs. I would like to go to that page directly.  It worked in development using \"npm run serve\" but not on live site.  /validate is a single static page.\r\n\r\n### What is expected?\r\nThe API states the that /user/id where id is some value, does not work.  I can understand that. but a single page with no extra route on the end, I think should work.\r\n\r\n### What is actually happening?\r\n404\r\n\r\n---\r\nIs there a way to jump to a static page in the app?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3332","RelatedDescription":"Closed issue \"How to route into a page directly from browser\" (#3332)"},{"Id":"708578594","IsPullRequest":true,"CreatedAt":"2020-09-25T07:11:17","Actor":"lixx3000","Number":"3330","RawContent":null,"Title":"docs(zh): use html extension","State":"closed","Body":"html书写成htm\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3330","RelatedDescription":"Closed or merged PR \"docs(zh): use html extension\" (#3330)"},{"Id":"707945699","IsPullRequest":false,"CreatedAt":"2020-09-24T13:36:49","Actor":"j0Shi82","Number":"3329","RawContent":null,"Title":"Allow Suppressing (Redirect) Errors in Programmatic Navigation / Navigation Guards","State":"closed","Body":"### What problem does this feature solve?\r\nOn SSR applications there's currently a scenario in which `onReady` is called too early and either the wrong route is rendered, or worse a server error is thrown (depending on your SSR code).\r\n\r\nHere's the scenario:\r\n\r\n- User navigates to route A\r\n- route A has navigation guards that at some point call next('/routeB') to redirect\r\n- onReady fires (https://github.com/vuejs/vue-router/issues/3225), telling the SSR to render route A, the redirect never completes\r\n\r\nThis comes with multiple issues. I have not tested it, but since route A is rendered on the server and route B is rendered on the client, you might run into hydration issues. More than that, in case route A does not match any component, the SSR might unnecessarily return an error based on how you handle routes with no matched components.\r\n\r\nYou can circumvent this issue by using the `router.push` API, but I guess this is not the intended way to navigate within navigation guards?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnext({\r\n  path: '/routeB',\r\n  ignoreRedirectErrors: true\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3329","RelatedDescription":"Closed issue \"Allow Suppressing (Redirect) Errors in Programmatic Navigation / Navigation Guards\" (#3329)"},{"Id":"707641477","IsPullRequest":false,"CreatedAt":"2020-09-23T21:08:21","Actor":"lewandy","Number":"3328","RawContent":null,"Title":"Add amazon web service s3 redirect rules in the docs","State":"closed","Body":"### What problem does this feature solve?\r\nHi dudes!,\r\n\r\nI am configuring an aws s3 bucket with a vue app using vue router in history mode and the docs does not have the example explaining it, would be great that it appear an example about it.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nOn bucket configuration in the section \"Properties/static web hosting\" in the field \"Redirection rules\"\r\n\r\n``` \r\n<RoutingRules>\r\n  <RoutingRule>\r\n    <Condition>\r\n      <HttpErrorCodeReturnedEquals>404</HttpErrorCodeReturnedEquals>\r\n    </Condition>\r\n    <Redirect>\r\n      <ReplaceKeyWith></ReplaceKeyWith>\r\n    </Redirect>\r\n  </RoutingRule>\r\n</RoutingRules>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3328","RelatedDescription":"Closed issue \"Add amazon web service s3 redirect rules in the docs\" (#3328)"},{"Id":"706268555","IsPullRequest":true,"CreatedAt":"2020-09-22T11:10:19","Actor":"fanhualu","Number":"3327","RawContent":null,"Title":"docs: typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3327","RelatedDescription":"Closed or merged PR \"docs: typo\" (#3327)"},{"Id":"703580165","IsPullRequest":false,"CreatedAt":"2020-09-17T13:21:48","Actor":"nek4life","Number":"3326","RawContent":null,"Title":"Async components do not render loading component","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/lucid-haze-mr425](https://codesandbox.io/s/lucid-haze-mr425)\r\n\r\n### Steps to reproduce\r\n```\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nCreate a route with an Async component as showed in the documentation.\r\n\r\nconst AsyncComponent = () => ({\r\n  // The component to load (should be a Promise)\r\n  component: import('./MyComponent.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComponent,\r\n  // A component to use if the load fails\r\n  error: ErrorComponent,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000\r\n})\r\n\r\nReload page.\r\n\r\nLoading component is never rendered.\r\n\r\n```\r\n\r\n\r\n\r\n### What is expected?\r\nLoading component should load while chunk is being fetched\r\n\r\n### What is actually happening?\r\nLoading component does not render\r\n\r\n---\r\nThis functionality is needed for the initial render of the app when using code splitting. Otherwise there is a blank screen while the partial downloads. I tried putting a loader behind the Vue app, but as soon as the app renders the router the page blanks out again so I'd like to have a loader for the actual route itself.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3326","RelatedDescription":"Closed issue \"Async components do not render loading component\" (#3326)"},{"Id":"703483503","IsPullRequest":false,"CreatedAt":"2020-09-17T11:16:02","Actor":"McPo","Number":"3325","RawContent":null,"Title":"Replace is ignored by beforeRouteEnter","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/emcpoland/xb4kqLug/58/](https://jsfiddle.net/emcpoland/xb4kqLug/58/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click Items (The latest item id is \"fetched from the server\" and the user redirected to that items page)\r\n\r\n\r\n2. Click delete (A dialog appears)\r\n\r\n\r\n3. Click ok (The dialog is \"dismissed\" and the user is redirected to the next items page. Replace is used so that when the user clicks back, they don't see the dialog again [they would see the deleted item again, but in a real world situation it would say the item has been deleted])\r\n\r\n\r\n\r\nIt appears the fact that the navigation was meant to be a \"replace\" is dropped because of the navigation guard. Either \"replace\" should naturally be inherited or navigation guards should provide extra context and state that the navigation was meant to be a \"replace\". For now you can workaround this by passing `replace:true` in the props but its quite nasty IMO\r\n\r\n\r\n### What is expected?\r\nPressing back after deleting an item should present with the previous item, not the previous item delete dialog.\r\n\r\n### What is actually happening?\r\nThe delete dialog of the previous item is being shown. This is because despite the dialog using a `replace` navigation, this isnt carried over into the navigation guard. The guard also lacks context as to whether it should have been a replace or not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3325","RelatedDescription":"Closed issue \"Replace is ignored by beforeRouteEnter\" (#3325)"},{"Id":"702136036","IsPullRequest":false,"CreatedAt":"2020-09-15T18:24:12","Actor":"JessicaSachs","Number":"3324","RawContent":null,"Title":"When using abstract router, <router-view> doesn't match the default component on initial render (within iframe/Cypress)","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://github.com/JessicaSachs/cypress-abstract-router/](https://github.com/JessicaSachs/cypress-abstract-router/)\r\n\r\n### Steps to reproduce\r\nWe're trying to use abstract router to make components using Router testable within Cypress. It's almost working. The initial mount fails to match the default `Home` component, and so the `<router-view>` is empty.\r\n\r\nSubsequent clicks on `<router-link>` cause `<router-view>` to render fine.\r\n\r\n1. Clone repo & yarn install\r\n2. `npm run test:components`\r\n3. open `App.spec.js`\r\n\r\n### What is expected?\r\nInitial mount of App component should render the `<router-view>`\r\n\r\n### What is actually happening?\r\nNothing is being mounted inside of `<router-view>`\r\n\r\nIf you manually interact with the About & Home links, the `<router-view>` will properly find the components for About & Home. It's only the initial render that isn't working correctly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3324","RelatedDescription":"Closed issue \"When using abstract router, <router-view> doesn't match the default component on initial render (within iframe/Cypress)\" (#3324)"},{"Id":"701021657","IsPullRequest":true,"CreatedAt":"2020-09-14T14:48:43","Actor":"Jawtoch","Number":"3322","RawContent":null,"Title":"docs(fr): correction of nested routes and components","State":"closed","Body":"Posts route did not match with the above documentation route path.\r\nUserHome and UserProfile were used for the same route, correction of UserHome to UserProfile\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3322","RelatedDescription":"Closed or merged PR \"docs(fr): correction of nested routes and components\" (#3322)"},{"Id":"700993591","IsPullRequest":false,"CreatedAt":"2020-09-14T10:58:55","Actor":"Spirit04eK","Number":"3321","RawContent":null,"Title":"DOM nodes are being hold by router links in nested views","State":"open","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://unpkg.com/vue@2.6.12/dist/vue.min.js\"></script>\r\n    <script src=\"https://unpkg.com/vue-router@3.4.3/dist/vue-router.min.js\"></script>\r\n\r\n    <div id=\"app\">\r\n      <router-link :to=\"{name: 'memory_leak'}\">Go to Memory Leak</router-link>\r\n      <router-link to=\"/\">home (using this link won't hold memory)</router-link>\r\n      <router-view></router-view>\r\n    </div>\r\n\r\n    <script>\r\n      const leak = {\r\n        template: `\r\n        <div style=\"word-break: break-all;\">\r\n    <router-link to=\"/\">Back</router-link>\r\n    <br>\r\n    <span v-for=\"span in spans\" :key=\"span.id\">{{ span.text }}</span>\r\n  </div>\r\n        `,\r\n        data() {\r\n          return {\r\n            spans: [],\r\n          }\r\n        },\r\n        created() {\r\n          for (let i = 1; i <= 10; i++) {\r\n            let obj = {\r\n              id: i,\r\n              text: Array(10).fill('a').join(''),\r\n            }\r\n            this.spans.push(obj)\r\n          }\r\n        },\r\n      }\r\n\r\n      const ParentMemoryLeak = {\r\n        template: `\r\n    <div>\r\n        <h1>Parent Memory leak</h1>\r\n        <br>\r\n        <router-view></router-view>\r\n    </div>\r\n    `,\r\n\r\n        name: 'ParentMemoryLeak',\r\n      }\r\n\r\n      const routes = [\r\n        {\r\n          path: '/parent-memory-leak',\r\n          component: ParentMemoryLeak,\r\n          children: [\r\n            {\r\n              path: 'memory-leak',\r\n              name: 'memory_leak',\r\n              component: leak,\r\n            },\r\n          ],\r\n        },\r\n        { path: '/', component: ParentMemoryLeak },\r\n      ]\r\n\r\n      const router = new VueRouter({\r\n        routes,\r\n      })\r\n\r\n      new Vue({\r\n        el: '#app',\r\n        router,\r\n      })\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Follow this link for open project\r\n2. Open in new window with codesandbox  \r\n3. Open performance monitor in Google Chrome (emphasize on quantity DOM nodes)  \r\n4. Click on the link \"Go to Memory Leak\" (pay attention to how it has changed quantity DOM nodes)  \r\n5. Click on the link \"Back\" (not the home link)\r\n6. Amount DOM nodes not changed.  \r\n\r\nP.S. If you do this procedure several times amount DOM nodes should changed, but the original will remain forever.  \r\n\r\n\r\n### What is expected?\r\nit is expected that after each click on the link \"back\" DOM nodes will be cleared.  \r\n\r\n### What is actually happening?\r\nNow, they are cleared only after the first transition, but still remain in the memory DOM nodes for the first transition.  \r\n\r\n---\r\nhttps://youtu.be/bjz1N0BD_2c\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3321","RelatedDescription":"Open issue \"DOM nodes are being hold by router links in nested views\" (#3321)"},{"Id":"699538268","IsPullRequest":false,"CreatedAt":"2020-09-11T17:09:41","Actor":"martinmckenna","Number":"3320","RawContent":null,"Title":"[Request] Remove Redundant Navigation Errors ","State":"closed","Body":"### What problem does this feature solve?\r\nThese console errors are unnecessary. Vue Router knows itself whether or not something is redundant, so why not just silently return early with no error? Seems like a pointless error\r\n\r\nEspecially annoying when you have error reporting like Sentry (and even more annoying when you're paying for it) and getting thousands of reports and having to intentionally ignore them\r\n\r\n### What does the proposed API look like?\r\nNo console logging\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3320","RelatedDescription":"Closed issue \"[Request] Remove Redundant Navigation Errors \" (#3320)"},{"Id":"698911220","IsPullRequest":true,"CreatedAt":"2020-09-11T07:56:58","Actor":"Tubbebubbe","Number":"3319","RawContent":null,"Title":"Allow objects to be passed in as params in Location","State":"closed","Body":"Objects can be passed on as parameters to `this.$router.push(Location)`. This PR prevents linter from emitting errors.","Url":"https://github.com/vuejs/vue-router/pull/3319","RelatedDescription":"Closed or merged PR \"Allow objects to be passed in as params in Location\" (#3319)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"723557867","IsPullRequest":true,"CreatedAt":"2020-10-16T22:05:48","Actor":"urbnjamesmi1","Number":"1851","RawContent":null,"Title":"Check existence of module parent in isRegistered (fix #1850)","State":"open","Body":"This PR fixes issue #1850 .\r\n\r\nIf you call `store.hasModule()` with an array where none of the modules or submodules are registered in the store, an error is thrown instead of returning false:\r\n\r\n```\r\nTypeError: Cannot read property 'hasChild' of undefined\r\n        at ModuleCollection.isRegistered (/node_modules/vuex/dist/vuex.common.js:291:17)\r\n        at Store.hasModule (/node_modules/vuex/dist/vuex.common.js:611:24)\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vuex/pull/1851","RelatedDescription":"Open PR \"Check existence of module parent in isRegistered (fix #1850)\" (#1851)"},{"Id":"723551121","IsPullRequest":false,"CreatedAt":"2020-10-16T21:48:46","Actor":"urbnjamesmi1","Number":"1850","RawContent":null,"Title":"TypeError: Cannot read property 'hasChild' of undefined","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xkLh4njp/](https://jsfiddle.net/xkLh4njp/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a Vuex store.\r\n2. Call store.hasModule() with an array of at least 2 elements where neither module has been registered to the store.\r\n\r\n### What is expected?\r\nstore.hasModule() to return false\r\n\r\n### What is actually happening?\r\nError \"TypeError: Cannot read property 'hasChild' of undefined\" is thrown\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1850","RelatedDescription":"Open issue \"TypeError: Cannot read property 'hasChild' of undefined\" (#1850)"},{"Id":"723500261","IsPullRequest":false,"CreatedAt":"2020-10-16T20:04:35","Actor":"goeh","Number":"1849","RawContent":null,"Title":"Try root module first, then namespaced module","State":"open","Body":"### What problem does this feature solve?\r\nWe're developing modularized application(s) for our customers with separate Vue projects for each module. Each customer have a custom main application with different sub-applications/modules in package.json. Each sub-application have their own namespaced Vuex store. We want to have a default implementation of some actions in the sub-applications, then be able to override the default action in the main application.\r\n\r\nOur current workaround/hack is to try them both:\r\n\r\n`this.$store.dispatch('actionName', payload, { root: true }) || this.$store.dispatch('moduleName/actionName', payload)`\r\n\r\nThat way Vuex will look for the action in root module first, and if not found there it will look in the namespaced module and use that (default) action. It works but in dev mode we get a console error  about module not found if we don't have an action in root.\r\n\r\n### What does the proposed API look like?\r\nIt would be nice to have an option that tells Vuex to look in root module first (without namespace) and then in local module if the action is not found in root module. I can't come up with a good name for the option. When the option is true Vuex should remove the module name and try to find the actionName in root module. If not found there it should do as normal use the full actionName as specified.\r\n\r\n`this.$store.dispatch('moduleName/actionName', payload, { namespaced: false  }`\r\n\r\nAnother way would be to allow for an array of actions and Vuex would try each action in order.\r\n\r\n`this.$store.dispatch(['actionName', 'moduleName/actionName'], payload, { root: true  }`\r\n\r\nThat would actually be a more flexible solution because I could specify as many action names as I want.\r\n\r\n`this.$store.dispatch(['tryThisFirst', 'moduleA/thenThis', 'moduleB/andFinallyThis'], payload, { root: true  }`\r\n\r\nOr is there another way to solve this problem? We want a default implementation in imported module, but possible to override action in the main application.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1849","RelatedDescription":"Open issue \"Try root module first, then namespaced module\" (#1849)"},{"Id":"723083515","IsPullRequest":false,"CreatedAt":"2020-10-16T10:02:59","Actor":"lihaotian0607","Number":"1848","RawContent":null,"Title":"Property  does not exist on type","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\nthe console can print, but the compilation fails the check!!!\r\n\r\n```ts\r\n<script lang=\"ts\">\r\nimport {Vue} from \"vue-class-component\";\r\nimport {useStore} from 'vuex'\r\nimport {AppState} from \"@/types/state\";\r\n\r\nexport default class Test extends Vue {\r\n\r\n  private store = useStore<AppState>();\r\n\r\n  public mounted(): void {\r\n    console.log(this.store.state);\r\n    console.log(this.store.state.app.count);\r\n  }\r\n}\r\n</script>\r\n```\r\n![image](https://user-images.githubusercontent.com/32523475/96245306-63b01e00-0fd1-11eb-995d-3c9d4ee87b34.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/32523475/96245145-36637000-0fd1-11eb-82cb-a7ade8cb831c.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1848","RelatedDescription":"Open issue \"Property  does not exist on type\" (#1848)"},{"Id":"721548115","IsPullRequest":false,"CreatedAt":"2020-10-14T15:12:39","Actor":"mannok","Number":"1847","RawContent":null,"Title":"Vue 3 markRaw / shallowRef is not working in Vuex","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/mannok/vuex-traverse](https://github.com/mannok/vuex-traverse)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. clone from minimal reproduction link\r\n2. npm install\r\n3. open App.vue to see code\r\n4. npm run dev\r\n5. Open browser and watch console log\r\n6-a. You will see a log msg `THIS MSG IS SHOWN WHEN IT WAS SET ON STATE!` even I have marked raw to the object.  i.e. log msg shouldn't be shown, as `markRaw(obj)`'s properties shouldn't be traversed down when it was set to state.\r\n6-b. Comment line 30 and comment line 31 and refresh the browser again. You will no longer see the log msg as Vue won't traverse down `markRaw(obj)`.\r\n\r\n### What is expected?\r\nWhen I call markRaw() for any object. It shouldn't be traversed in any scenario. (Vue or Vuex)\r\n\r\n### What is actually happening?\r\nIt is acutally traversing when the marked raw object is set on Vuex state.\r\n\r\n---\r\nMaybe you will think this problem doesn't matter, but currently I am using a big library which comprises of many complex object. I just want to store them inside state as raw object / shallowRef, but I have no way to do it... It keeps traversing deeply for me and the performance is really bad... Please help me out! Thanks in advance!\r\n\r\n**UPDATE**\r\nSeems that my problem is that I have no way to stop Vuex to run `traverse()` inside `vue\\dist\\vue.runtime.global.js`. FYR:\r\n```\r\n  function traverse(value, seen = new Set()) {\r\n      if (!isObject(value) || seen.has(value)) {\r\n          return value;\r\n      }\r\n      seen.add(value);\r\n      if (isRef(value)) {\r\n          traverse(value.value, seen);\r\n      }\r\n      else if (isArray(value)) {\r\n          for (let i = 0; i < value.length; i++) {\r\n              traverse(value[i], seen);\r\n          }\r\n      }\r\n      else if (isMap(value)) {\r\n          value.forEach((_, key) => {\r\n              traverse(value.get(key), seen);\r\n          });\r\n      }\r\n      else if (isSet(value)) {\r\n          value.forEach(v => {\r\n              traverse(v, seen);\r\n          });\r\n      }\r\n      else {\r\n          for (const key in value) {\r\n              traverse(value[key], seen);  // Vuex recursively loop all my raw object properties in this line\r\n          }\r\n      }\r\n      return value;\r\n  }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1847","RelatedDescription":"Open issue \"Vue 3 markRaw / shallowRef is not working in Vuex\" (#1847)"},{"Id":"721402871","IsPullRequest":false,"CreatedAt":"2020-10-14T12:10:00","Actor":"zenHeart","Number":"1846","RawContent":null,"Title":"dynamic register same module,  will trigger multi times","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/zenheart/pen/oNLbvJO](https://codepen.io/zenheart/pen/oNLbvJO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nsee demo <https://codepen.io/zenheart/pen/oNLbvJO>\r\n\r\n### What is expected?\r\nWhy registerModule  call the same path multi times, will replace old path, but push handle to `_mutations`, see demo <https://codepen.io/zenheart/pen/oNLbvJO> \r\n\r\n### What is actually happening?\r\nthis will make add run twice. It's weird, I think we should replace all,  this feature is expected, why?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1846","RelatedDescription":"Open issue \"dynamic register same module,  will trigger multi times\" (#1846)"},{"Id":"719418535","IsPullRequest":true,"CreatedAt":"2020-10-12T14:19:04","Actor":"kiaking","Number":"1845","RawContent":null,"Title":"docs: add v4 docs","State":"open","Body":"This PR adds docs for Vuex 4. It uses VitePress as a builder.\r\n\r\n**TODOS**\r\n- [x] Update existing code example to use new API such as `createStore`.\r\n- [x] Add new APIs to the API Reference page.\r\n- [x] Add Composition API page.\r\n- [x] Add TypeScript page.\r\n- [ ] Add migration guide from Vuex 3.\r\n- [ ] Setup domain for the v4 docs and Netlify integration.","Url":"https://github.com/vuejs/vuex/pull/1845","RelatedDescription":"Open PR \"docs: add v4 docs\" (#1845)"},{"Id":"716601175","IsPullRequest":false,"CreatedAt":"2020-10-09T15:50:38","Actor":"12120290x1","Number":"1844","RawContent":null,"Title":"vue3 template ref   vuex => wrong reactive system","State":"closed","Body":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://github.com/12120290x1/error](https://github.com/12120290x1/error)\r\n\r\n### Steps to reproduce\r\nstep1: click aaaa button\r\nstep2: click menu button\r\n\r\n### What is expected?\r\ntag nav have fixed-left-0 like this:\r\n\r\n```html\r\n<nav id=\"nav1\" class=\"bg-primary fixed-left-0\">\r\n```\r\n\r\n### What is actually happening?\r\nthis is actually happening:\r\n\r\n```html\r\n<nav id=\"nav1\" class=\"bg-primary\">\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1844","RelatedDescription":"Closed issue \"vue3 template ref   vuex => wrong reactive system\" (#1844)"},{"Id":"712049161","IsPullRequest":true,"CreatedAt":"2020-10-09T09:35:55","Actor":"anschwa","Number":"1838","RawContent":null,"Title":"docs: warn about calling unsubscribe (fix #1050)","State":"closed","Body":"I added a warning text to the docs about remembering to call `unsubscribe` when subscribing to the store.","Url":"https://github.com/vuejs/vuex/pull/1838","RelatedDescription":"Closed or merged PR \"docs: warn about calling unsubscribe (fix #1050)\" (#1838)"},{"Id":"713664085","IsPullRequest":false,"CreatedAt":"2020-10-02T14:27:08","Actor":"leerw4","Number":"1843","RawContent":null,"Title":"Offer types for `getters` on the Store instance","State":"open","Body":"### What problem does this feature solve?\r\nThe `getters` key of the Store instance has type `any` which is not useful. While type casting can be used, it's just a pain to have to do every single place you would want to reference a getter.\r\n\r\n### What does the proposed API look like?\r\nOne solution would be to offer a second (optional) generic type of the `Store` type that would default to `any`, and have that value be used for the type of the `getters` key.\r\n\r\n```\r\nexport declare class Store<S, G = any> {\r\n  constructor(options: StoreOptions<S>);\r\n\r\n  readonly state: S;\r\n  readonly getters: G;\r\n\r\n  ...\r\n}\r\n```\r\n\r\nI've tested the above solution and it works and should also be backwards compatible.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1843","RelatedDescription":"Open issue \"Offer types for `getters` on the Store instance\" (#1843)"},{"Id":"706256945","IsPullRequest":false,"CreatedAt":"2020-10-02T07:17:54","Actor":"DeeDab","Number":"1836","RawContent":null,"Title":"Error in VuexLogger on splice array","State":"closed","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\nnone\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnable Logger for Vuex (createLogger)\r\n\r\n1. Add to store param with an array value (list)\r\n2. Create a mutation to change param above (list.splice(0,1))\r\n3. Call mutation\r\n4. Got error\r\n\r\n### What is expected?\r\nNo errors\r\n\r\n### What is actually happening?\r\n```\r\n TypeError: Cannot convert a Symbol value to a number\r\n    at vue.js:431\r\n    at Map.forEach (<anonymous>)\r\n    at trigger (vue.js:430)\r\n    at Object.set (vue.js:592)\r\n    at Proxy.splice (<anonymous>)\r\n    at Proxy.arrayInstrumentations.<computed> (vue.js:522)\r\n    at Store.REMOVE_CALCULATION (C:\\Users\\denva\\WebstormProjects\\agenta.web\\src\\store\\modules\\Claculator\\Calculator.ts:54)\r\n    at wrappedMutationHandler (vuex.esm-bundler.js:802)\r\n    at commitIterator (vuex.esm-bundler.js:434)\r\n    at Array.forEach (<anonymous>)\r\n```\r\n\r\n---\r\nIf I disable Logger no errors will\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1836","RelatedDescription":"Closed issue \"Error in VuexLogger on splice array\" (#1836)"},{"Id":"712149753","IsPullRequest":false,"CreatedAt":"2020-10-02T07:14:47","Actor":"JanDevDE","Number":"1839","RawContent":null,"Title":"State changes not being rerendered when updating object","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q32df9tj/45/](https://jsfiddle.net/q32df9tj/45/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOverwrite object with new object using state.object = newObject -> No rerender\r\n\r\nOverwrite object with state.user = Object.assign({}, user) ->  Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is expected?\r\nstate.user = user <- Should rerender, but apparently it doesn't because it's passing the value apparently.\r\n\r\nstate.user = Object.assign({}, user) <- Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is actually happening?\r\nOnly Object.assign({state.user}, user) assigns the value and causes Profile.vue to refresh\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1839","RelatedDescription":"Closed issue \"State changes not being rerendered when updating object\" (#1839)"},{"Id":"713137452","IsPullRequest":false,"CreatedAt":"2020-10-02T07:11:09","Actor":"phlegx","Number":"1842","RawContent":null,"Title":"On vue-router beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to vue-router. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1842","RelatedDescription":"Closed issue \"On vue-router beforeEach Vuex store lost state after call next()\" (#1842)"},{"Id":"712730669","IsPullRequest":false,"CreatedAt":"2020-10-01T10:55:47","Actor":"uncodable","Number":"1841","RawContent":null,"Title":"Access store within a router (non-component)","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1841","RelatedDescription":"Closed issue \"Access store within a router (non-component)\" (#1841)"},{"Id":"712729512","IsPullRequest":false,"CreatedAt":"2020-10-01T10:54:05","Actor":"uncodable","Number":"1840","RawContent":null,"Title":"Access store within vue-router","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1840","RelatedDescription":"Closed issue \"Access store within vue-router\" (#1840)"},{"Id":"709900554","IsPullRequest":false,"CreatedAt":"2020-09-28T03:26:47","Actor":"zhoufanglu","Number":"1837","RawContent":null,"Title":"关于取state里面参数的方式问题","State":"closed","Body":"我看有的项目取vuex内的state的值是用getters取的，请问这种方式正确吗？代码如下\r\n```js\r\nconst getters = {\r\n  getChangeWidth: (state) => state.app.changeWidth,\r\n  getTheme: (state) => state.app.theme,\r\n  getDark: (state) => state.app.dark,\r\n}\r\n```\r\n而我自己取state内的值我会用`this.$state.theme`方式来取，或者用辅助函数\r\n\r\n请问哪种方式更好呢？","Url":"https://github.com/vuejs/vuex/issues/1837","RelatedDescription":"Closed issue \"关于取state里面参数的方式问题\" (#1837)"},{"Id":"705696437","IsPullRequest":false,"CreatedAt":"2020-09-21T15:19:59","Actor":"alexccc333","Number":"1835","RawContent":null,"Title":"Modules not working","State":"closed","Body":"Modules namespace not working getters and actions ,but they work state why?\r\n","Url":"https://github.com/vuejs/vuex/issues/1835","RelatedDescription":"Closed issue \"Modules not working\" (#1835)"},{"Id":"704896986","IsPullRequest":true,"CreatedAt":"2020-09-20T12:28:26","Actor":"abhineet97","Number":"1834","RawContent":null,"Title":"docs: show mutations in 4.x example also","State":"closed","Body":"In the example for Vuex 3.x, mutations have been illustrated. I've added them to the example for 4.x too for consistency.","Url":"https://github.com/vuejs/vuex/pull/1834","RelatedDescription":"Closed or merged PR \"docs: show mutations in 4.x example also\" (#1834)"},{"Id":"704578213","IsPullRequest":false,"CreatedAt":"2020-09-18T18:37:14","Actor":"devin-huang","Number":"1833","RawContent":null,"Title":"how to use modules in vuex4.0","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n```\r\nimport { createStore } from 'vuex'\r\nimport * as types from './mutation-type'\r\n\r\nexport default createStore({\r\n  modules: {\r\n    common: {\r\n      namespaced: true,\r\n      state: {\r\n        device: '',\r\n      },\r\n      mutation: {\r\n        [types.SET_DEVICE_LIST](state: any, device: string) {\r\n          state.device = device\r\n        },\r\n      },\r\n      actions: {\r\n        findDeviceList: findDeviceList({commit}, params) {\r\n            commit(types.SET_DEVICE_LIST, 'success')\r\n        }\r\n      },\r\n   }\r\n  },\r\n})\r\n\r\n```\r\n\r\n### output errpr: \r\n` [vuex] unknown local mutation type: SET_DEVICE_LIST, global type: common/SET_DEVICE_LIST`\r\n\r\n### Steps to reproduce\r\nwhen use vuex3.0 is ok, but vue4.0 use moduels is error, not to find commit path\r\n\r\n### What is expected?\r\nhow to vuex4.0 use modules  the commit  of  mutation \r\n","Url":"https://github.com/vuejs/vuex/issues/1833","RelatedDescription":"Open issue \"how to use modules in vuex4.0\" (#1833)"},{"Id":"704573678","IsPullRequest":false,"CreatedAt":"2020-09-18T18:28:03","Actor":"devin-huang","Number":"1832","RawContent":null,"Title":"when vuex4.0 use modules  the commit  of  mutation was error ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nVuex.createStore({\r\n  modules ： {\r\n     namespaced:true,\r\n     test: state: {\r\n        name: \"test\",\r\n     },\r\n     mutations: {\r\n        changeTest(state, name ) {\r\n          state.name = name ;\r\n        },\r\n    },\r\n    actions: {\r\n       findTest({commit}) {\r\n         commit('changeTest', 'sss')\r\n       }\r\n     }\r\n  },\r\n});\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1832","RelatedDescription":"Closed issue \"when vuex4.0 use modules  the commit  of  mutation was error \" (#1832)"},{"Id":"704534547","IsPullRequest":false,"CreatedAt":"2020-09-18T17:17:39","Actor":"ClickerMonkey","Number":"1831","RawContent":null,"Title":"Plans for complete TypeScript support with TS 4.1.0","State":"open","Body":"### What problem does this feature solve?\r\nWith the introduction of inference from template strings in TS 4.1.0 it will finally be possible to make Vuex completely type safe (validating all types, paths for commit/dispatch/modules/getters, etc).\r\n\r\nAre there existing plans to add complete type support with the release of Vuex 4?\r\n\r\nFor reference, I've created the following project:\r\n\r\nhttps://github.com/ClickerMonkey/vuex-typescript-interface\r\n\r\nThe only adjustment to the existing type system is that it would require an interface for each module and the root state - so that the modules and root state are aware of each others types. It could be optional like it currently is.\r\n\r\nHere's how the new TS feature would solve the remaining challenge with complete type support with Vuex:\r\n\r\n```\r\ntype GetEmbeddedType<O, Path extends string> = \r\n    Path extends `${infer A}/${infer B}` \r\n    ? A extends keyof O\r\n        ? B extends keyof O[A]\r\n            ? O[A][B]\r\n            : never\r\n        : never\r\n    : never;\r\n\r\n\r\ninterface State {\r\n    prop: {\r\n        innerProp: number;\r\n    }\r\n};\r\n\r\ntype InnerPropType = GetEmbeddedType<State, 'prop/innerProp'>; // number!!\r\n```\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nSimilar to what exists now, just full type support to validate types, the existence of all mutations and dispatches, and communications between the root store and it' modules.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1831","RelatedDescription":"Open issue \"Plans for complete TypeScript support with TS 4.1.0\" (#1831)"},{"Id":"691798814","IsPullRequest":false,"CreatedAt":"2020-09-14T08:10:50","Actor":"so-diao","Number":"1824","RawContent":null,"Title":" Is v3.5.1 incompatible with v3.0.1? ","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/so-diao/pen/oNxGVvW](https://codepen.io/so-diao/pen/oNxGVvW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://codepen.io/so-diao/pen/oNxGVvW\r\n\r\n### What is expected?\r\n-\r\n\r\n### What is actually happening?\r\nI modified an old project  `package.json -> vuex: '^3.0.1'` , `npm i` automatically downloaded the latest version (3.5.1) for me, but they are not compatible.\r\n\r\nWhy are incompatible changes occurring?\r\n\r\n```js\r\n//  return jquery promise\r\nactions: {\r\n    fetch() {\r\n        const Deferred = jQuery.Deferred()\r\n        setTimeout(() =>{\r\n            Deferred.resolve()\r\n\t}, 1500)\r\n\treturn Deferred.promise()\r\n    }\r\n}\r\n\r\n// v3.0.1 success\r\n// v3.5.1 error\r\nthis.$store.dispatch('fetch').done(res =>{xxxxx})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1824","RelatedDescription":"Closed issue \" Is v3.5.1 incompatible with v3.0.1? \" (#1824)"},{"Id":"700729528","IsPullRequest":false,"CreatedAt":"2020-09-14T03:26:17","Actor":"zhengbaofeng","Number":"1830","RawContent":null,"Title":"watch $store vuex actions 参数undefined","State":"closed","Body":"`js\r\n//  js\r\nwatch: {\r\n  '$store.state.name' () {\r\n    that.$store.dispatch('funName', { name: '1' }).then((res) => {})\r\n  }\r\n}\r\n\r\n//  vuex\r\nactions: {\r\n  funName ({ commit }, prams) {\r\n    //  prams undefined\r\n  }\r\n}\r\n`\r\nI don't know if the grammar is standard\r\n\r\nconsole undefined","Url":"https://github.com/vuejs/vuex/issues/1830","RelatedDescription":"Closed issue \"watch $store vuex actions 参数undefined\" (#1830)"},{"Id":"700573332","IsPullRequest":false,"CreatedAt":"2020-09-13T13:48:06","Actor":"Mitch-i","Number":"1829","RawContent":null,"Title":"registerModule + serverPrefetch + unregisterModule","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/Mitch-i/vue-ssr](https://github.com/Mitch-i/vue-ssr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNavigate from one to another page.\r\n\r\n`\r\n\r\n      serverPrefetch () {\r\n            // return the Promise from the action\r\n            // so that the component waits before rendering\r\n            this.$store.registerModule('Locale', Locale);\r\n            return this.getUsers();\r\n        },\r\n        // Client-side only\r\n        // beforeMount() {\r\n        //     this.$store.registerModule('Locale', Locale, { preserveState: true });\r\n        // },\r\n        mounted () {alert('bm home');\r\n            this.$store.registerModule('Locale', Locale, { preserveState: true });\r\n            // If we didn't already do it on the server, we fetch the users\r\n            if (!this.users.length) {\r\n                this.getUsers();\r\n            }\r\n        },\r\n        methods: {\r\n            getUsers () {\r\n                return this.$store.dispatch('getUsers');\r\n            }\r\n        },\r\n        destroyed() {alert('destroyed home');\r\n          this.$store.unregisterModule('Locale');\r\n        },\r\n\r\n\r\n`\r\n\r\nCannot read property 'locale' of undefined\r\n\r\nI try different hooks and get different errors.\r\n\r\n### What is expected?\r\ncan use registered module.\r\n\r\n### What is actually happening?\r\n\r\nModule is registered after is destroyed on navigation to other page and not reloaded (Cannot read property 'locale' of undefined)in the best situation, now and that not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1829","RelatedDescription":"Open issue \"registerModule + serverPrefetch + unregisterModule\" (#1829)"},{"Id":"700572161","IsPullRequest":false,"CreatedAt":"2020-09-13T13:41:11","Actor":"Mitch-i","Number":"1828","RawContent":null,"Title":"registerModule + unregisterModule + serverPrefetch","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1828","RelatedDescription":"Closed issue \"registerModule + unregisterModule + serverPrefetch\" (#1828)"},{"Id":"697749424","IsPullRequest":false,"CreatedAt":"2020-09-10T10:40:28","Actor":"vickyksingh","Number":"1827","RawContent":null,"Title":"Mutation executing multiple times","State":"closed","Body":"Hi,\r\n\r\nI have created local store and registered in my component and it it working fine.\r\n\r\nbut the problem is when i reload my app and navigate to that component where i register and using local store mutation gets called once. when i navigate back to home page and again navigation to that component mutation executing 4 times.\r\nAll the times mutation execution getting increases in format(1x1, 2x2, 3x3, 4x4......)","Url":"https://github.com/vuejs/vuex/issues/1827","RelatedDescription":"Closed issue \"Mutation executing multiple times\" (#1827)"},{"Id":"697674369","IsPullRequest":false,"CreatedAt":"2020-09-10T10:04:33","Actor":"petervmeijgaard","Number":"1826","RawContent":null,"Title":"Add a useModule composable","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, the only way to use the store using the composition API is by creating a store with `useStore`. Using modules this way, results in messier code than it should be. I would like to introduce a `useModule` hook, which will export `commit`, `dispatch`, `getters` and `state` the same way as `useStore` does.\r\n\r\n### What does the proposed API look like?\r\n#### Basic example\r\nCurrent situation\r\n```javascript\r\n// useAuth.js\r\nimport { useStore } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const store = useStore();\r\n  const isAuthenticated = computed(() => store.state.auth.isAuthenticated));\r\n  const login = (payload) => {\r\n    store.commit('auth/login', payload);\r\n  };\r\n  const logout = () => {\r\n    store.dispatch('auth/logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\nProposed situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const auth = useModule('auth');\r\n  const isAuthenticated = computed(() => auth.state.isAuthenticated));\r\n  const login = (payload) => {\r\n    auth.commit('login', payload);\r\n  };\r\n  const logout = () => {\r\n    auth.dispatch('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\n#### Multiple store modules with nested modules\r\nCurrent situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const store = useStore();\r\n\r\n  const isAuthenticated = computed(() => store.state.auth.isAuthenticated);\r\n  const myDetailsInformation = computed(() => store.state.account.myDetails.information);\r\n\r\n  const login = async (payload) => {\r\n    await auth.dispatch('auth/login', payload);\r\n    await myDetails.dispatch('account/my-details/fetch-information');\r\n  };\r\n  const logout = () => {\r\n    store.commit('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    myDetailsInformation,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\nProposed situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const auth = useModule('auth');\r\n  const myDetails = useModule('account/my-details');\r\n\r\n  const isAuthenticated = computed(() => auth.state.isAuthenticated);\r\n  const myDetailsInformation = computed(() => myDetails.state.information);\r\n\r\n  const login = async (payload) => {\r\n    await auth.dispatch('login', payload);\r\n    await myDetails.dispatch('fetch-information');\r\n  };\r\n  const logout = () => {\r\n    store.commit('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    myDetailsInformation,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1826","RelatedDescription":"Closed issue \"Add a useModule composable\" (#1826)"},{"Id":"692661779","IsPullRequest":true,"CreatedAt":"2020-09-04T03:42:24","Actor":"version-1","Number":"1825","RawContent":null,"Title":"docs(typo): fix incorrect createNamespacedHelpers name in ja","State":"closed","Body":"\r\nThe \"d\" did not exist at the heading of `createNamespacedHelpers` in ja doc.","Url":"https://github.com/vuejs/vuex/pull/1825","RelatedDescription":"Closed or merged PR \"docs(typo): fix incorrect createNamespacedHelpers name in ja\" (#1825)"},{"Id":"688861213","IsPullRequest":false,"CreatedAt":"2020-08-31T09:47:50","Actor":"Fuzzyma","Number":"1822","RawContent":null,"Title":"mapGetters use \"this\" in unbound function definition","State":"closed","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/83bc26fe55417692f386db9b76634eb58794282e/src/helpers.js#L81](https://github.com/vuejs/vuex/blob/83bc26fe55417692f386db9b76634eb58794282e/src/helpers.js#L81)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe code uses `this` in the specified line and in next lines in a classic function definition and is therefore not what is expected here.\r\n\r\n\r\n### What is expected?\r\nGood question. An arrow function does not solve the problem since the function in a whole is unbound. However, it would atleast enable us to use `mapGetters.call(ctc.root.$store, ...)` in the setup function. Atm it doesnt work at all\r\n\r\n### What is actually happening?\r\nAn error is thrown because `this.$store` is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1822","RelatedDescription":"Closed issue \"mapGetters use \"this\" in unbound function definition\" (#1822)"},{"Id":"688874791","IsPullRequest":false,"CreatedAt":"2020-08-31T03:44:38","Actor":"Fuzzyma","Number":"1823","RawContent":null,"Title":"Getters are re-evaluated on every access","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/hopeful-sanne-kv7r2?file=/src/main.js](https://codesandbox.io/s/hopeful-sanne-kv7r2?file=/src/main.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the link and open your console to see \"recomputed getter\" every second\r\n\r\n### What is expected?\r\n\"recomputed getter\" should print once and never again\r\n\r\n### What is actually happening?\r\nIt prints every second\r\n\r\n---\r\nIn vuex 3 getters were cached. Isn't that a thing anymore?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1823","RelatedDescription":"Open issue \"Getters are re-evaluated on every access\" (#1823)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-18T05:30:42.6363885Z","RunDurationInMilliseconds":1886}