{"Data":{"Vue-Issues":{"Issues":[{"Id":"635931591","IsPullRequest":false,"CreatedAt":"2020-06-10T05:07:20","Actor":"PT-github","Number":"11447","RawContent":null,"Title":"keep-alive","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ecstatic-lumiere-mmr44](https://codesandbox.io/s/ecstatic-lumiere-mmr44)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n多级路由嵌套缓存问题（keep-alive嵌套keep-alive）\r\n1.假如这边有二级路由（Parent1（下有Child1和Child2）、Parent2（下有Child3和Child4））\r\n  \r\n2.除了Child2不缓存，其他界面都需要缓存。通过路由的meta中keepAlive来判断是否缓存，并且通过keep-alive中的exclude排除了Child2的组件name\r\n\r\n页面在Child1和Child2进行切换时，Child2不会缓存\r\n但是当从Child2跳转到Child3时，Child2会被缓存，当然原因是父组件Parent1被缓存了，render渲染时会获取cache中对应的vnode节点\r\n\r\n### What is expected?\r\n希望能够对上述这种情况处理，或者可以提供对应的API能够删除父组件中不需要缓存的子组件\r\n\r\n### What is actually happening?\r\n实际父组件缓存了 子组件无法清除缓存\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11447","RelatedDescription":"Open issue \"keep-alive\" (#11447)"},{"Id":"635924075","IsPullRequest":false,"CreatedAt":"2020-06-10T04:47:20","Actor":"KUBOTAfumiya","Number":"11446","RawContent":null,"Title":"Line breaks in textarea are excessively removed.","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/kubotafumiya/pen/qBOwEOV](https://codepen.io/kubotafumiya/pen/qBOwEOV)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Set the el option to an element that contains a textarea (or pre) with a newline at the beginning, and  create a Vue instance.\r\n\r\n\r\n```html\r\n<div id=\"app\">\r\n<textarea>\r\n\r\n\r\nThree line breaks are ignored.\r\n</textarea>\r\n</div>\r\n```\r\n\r\n```javascript\r\nnew Vue({\r\n  el: '#app',\r\n});\r\n```\r\n\r\n### What is expected?\r\nThe line breaks are removed.\r\n\r\n\r\n### What is actually happening?\r\nLine breaks are not deleted.\r\n\r\n---\r\nhttps://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\r\n\r\nI think it's okay for a single line break to be ignored according to this specification.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11446","RelatedDescription":"Open issue \"Line breaks in textarea are excessively removed.\" (#11446)"},{"Id":"635429930","IsPullRequest":false,"CreatedAt":"2020-06-09T15:21:08","Actor":"panteparak","Number":"11445","RawContent":null,"Title":"Expose Props to Prop validation","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently Prop Validation take a function that received the value of that specific prop. The problem with that, there is no way to cross validate other prop values and raised errors when they do not meet the condition. By passing in the entire component props, it would also allow the requested feature to be fulfilled. \r\n\r\nReact also supports this out of the box (https://reactjs.org/docs/typechecking-with-proptypes.html)\r\nTheir api is as follows\r\n```\r\n  customProp: function(props, propName, componentName) {\r\n    if (!/matchme/.test(props[propName])) {\r\n      return new Error(\r\n        'Invalid prop `'   propName   '` supplied to'  \r\n        ' `'   componentName   '`. Validation failed.'\r\n      );\r\n    }\r\n  },\r\n```\r\n\r\n### What does the proposed API look like?\r\nCurrently the api is as follows, \r\n```\r\nvalidator: function (value) {\r\n...\r\n}\r\n```\r\n\r\nMy proposed api\r\n```\r\nvalidator: function (value, props) {\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11445","RelatedDescription":"Closed issue \"Expose Props to Prop validation\" (#11445)"},{"Id":"634180022","IsPullRequest":false,"CreatedAt":"2020-06-08T05:45:54","Actor":"despire1119","Number":"11444","RawContent":null,"Title":"seed.js: TypeError: Cannot read property 'resolve' of undefined","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://agent.dejipay.com](http://agent.dejipay.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n使用vue-cli创建项目并运行(使用yarn安装依赖和启动项目)\r\n\r\n### What is expected?\r\n不报错，正常启动。\r\n\r\n### What is actually happening?\r\n启动正常但报错\r\n\r\nseed.js:2 TypeError: Cannot read property 'resolve' of undefined\r\n\r\nseed.js:2 Uncaught TypeError: Cannot read property 'resolve' of undefined\r\n\r\nError handling response: TypeError: Cannot read property '1' of null\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11444","RelatedDescription":"Closed issue \"seed.js: TypeError: Cannot read property 'resolve' of undefined\" (#11444)"},{"Id":"634085413","IsPullRequest":false,"CreatedAt":"2020-06-08T04:11:34","Actor":"lisiyizu","Number":"11443","RawContent":null,"Title":"紧急！！！出现了Cannot find module 'typescript'的问题，vue项目都受影响了","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n\r\n### Steps to reproduce\r\nnpm run build 报错如下:\r\n![image](https://user-images.githubusercontent.com/12014252/83991265-ce47b200-a97e-11ea-82c8-b92241fc1195.png)\r\n\r\n\r\n### What is expected?\r\nsuccess\r\n\r\n### What is actually happening?\r\nerror\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11443","RelatedDescription":"Closed issue \"紧急！！！出现了Cannot find module 'typescript'的问题，vue项目都受影响了\" (#11443)"},{"Id":"631534352","IsPullRequest":false,"CreatedAt":"2020-06-05T11:56:37","Actor":"alfredriesen","Number":"11442","RawContent":null,"Title":"Snyk reports vue-server-renderer@2.6.11 > serialize-javascript@2.1.2 security issue","State":"closed","Body":"### What problem does this feature solve?\r\nPlease update a dependency serialize-javascript@2.1.2 from vue-server-renderer@2.6.11 for security reasons.\r\n\r\n### What does the proposed API look like?\r\nNo API. Just an update.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11442","RelatedDescription":"Closed issue \"Snyk reports vue-server-renderer@2.6.11 > serialize-javascript@2.1.2 security issue\" (#11442)"},{"Id":"631451940","IsPullRequest":false,"CreatedAt":"2020-06-05T10:05:37","Actor":"CongAn","Number":"11441","RawContent":null,"Title":"®在 <slot> 上使用 v-if 没有效果不工作","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/anker/27nwbr84/2/](https://jsfiddle.net/anker/27nwbr84/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在`html`中使用`slot v-if`没有任何效果，但是在`js`中使用`template`的`slot v-if`是正常。\r\n\r\n无法使用v-if的例子\r\n```\r\n<template>\r\n  <div>\r\n    <slot v-if=\"render\"></slot>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      render: false,\r\n    }\r\n  },\r\n</script>\r\n```\r\n可以使用 v-if 的例子\r\n```\r\n<script>\r\nexport default {\r\n  template: '<div><slot v-if=\"render\"/></div>',\r\n  data () {\r\n    return {\r\n      render: false,\r\n    }\r\n  },\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nv-if 正常的使用\r\n\r\n### What is actually happening?\r\nv-if 无法工作\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11441","RelatedDescription":"Closed issue \"®在 <slot> 上使用 v-if 没有效果不工作\" (#11441)"},{"Id":"631440475","IsPullRequest":false,"CreatedAt":"2020-06-05T09:18:50","Actor":"clone-git","Number":"11440","RawContent":null,"Title":"src/compiler/codegen/index.js","State":"closed","Body":"### What problem does this feature solve?\r\nfunction hash(str) {\r\n  let hash = 5381\r\n  let i = str.length\r\n  while(i) {\r\n    hash = (hash * 33) ^ str.charCodeAt(--i)\r\n  }\r\n  return hash >>> 0\r\n}\r\n\r\n### What does the proposed API look like?\r\nfunction hash(str) {\r\n  let hash = 5381\r\n  let i = str.length\r\n  while(i) {\r\n    --i\r\n    hash = (hash * 33) ^ str.charCodeAt(i)\r\n  }\r\n  return hash >>> 0\r\n}\r\n不建议在方法调用中或与其他算术运算符结合使用递增和递减运算符\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11440","RelatedDescription":"Closed issue \"src/compiler/codegen/index.js\" (#11440)"},{"Id":"631215082","IsPullRequest":false,"CreatedAt":"2020-06-05T06:40:42","Actor":"azhai2016","Number":"11437","RawContent":null,"Title":"safari :   TypeError: null is not an object (evaluating 't.salt')","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://www.enhwa.com/home](http://www.enhwa.com/home)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnvironment Info:\r\n\r\n  System:\r\n    OS: macOS 10.15.5\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz\r\n  Binaries:\r\n    Node: 12.8.1 - /usr/local/bin/node\r\n    Yarn: 1.17.3 - /usr/local/bin/yarn\r\n    npm: 6.14.4 - /usr/local/bin/npm\r\n  Browsers:\r\n    Chrome: Not Found\r\n    Edge: Not Found\r\n    Firefox: Not Found\r\n    Safari: Not Found\r\n  npmPackages:\r\n    @vue/babel-helper-vue-jsx-merge-props:  1.0.0 \r\n    @vue/babel-plugin-transform-vue-jsx:  1.1.2 \r\n    @vue/babel-preset-app:  4.2.3 \r\n    @vue/babel-preset-jsx:  1.1.2 \r\n    @vue/babel-sugar-functional-vue:  1.1.2 \r\n    @vue/babel-sugar-inject-h:  1.1.2 \r\n    @vue/babel-sugar-v-model:  1.1.2 \r\n    @vue/babel-sugar-v-on:  1.1.2 \r\n    @vue/cli-overlay:  4.2.3 \r\n    @vue/cli-plugin-babel: ^4.2.0 => 4.2.3 \r\n    @vue/cli-plugin-eslint: ^4.2.0 => 4.2.3 \r\n    @vue/cli-plugin-router:  4.2.3 \r\n    @vue/cli-plugin-vuex:  4.2.3 \r\n    @vue/cli-service: ^4.2.0 => 4.2.3 \r\n    @vue/cli-shared-utils:  4.2.3 \r\n    @vue/component-compiler-utils:  3.1.1 \r\n    @vue/preload-webpack-plugin:  1.1.1 \r\n    @vue/web-component-wrapper:  1.2.0 \r\n    eslint-plugin-vue: ^6.1.2 => 6.2.2 \r\n    vue: ^2.6.11 => 2.6.11 \r\n    vue-eslint-parser:  7.0.0 \r\n    vue-hot-reload-api:  2.3.4 \r\n    vue-i18n: ^8.15.5 => 8.15.5 \r\n    vue-infinite-scroll: ^2.0.2 => 2.0.2 \r\n    vue-loader:  15.9.0 \r\n    vue-qr: ^2.2.1 => 2.2.1 \r\n    vue-route: ^1.5.1 => 1.5.1 \r\n    vue-router: ^3.1.6 => 3.1.6 \r\n    vue-style-loader:  4.1.2 \r\n    vue-template-compiler: ^2.6.11 => 2.6.11 \r\n    vue-template-es2015-compiler:  1.9.1 \r\n    vuex: ^3.1.3 => 3.1.3 \r\n  npmGlobalPackages:\r\n    @vue/cli: 4.3.1\r\n\r\n### What is expected?\r\n\r\n\r\nsafari : \r\nTypeError: null is not an object (evaluating 't.salt')\r\n\r\n\r\n### What is actually happening?\r\n... \r\n\r\nS = r.PasswordBasedCipher = _.extend({\r\n                        cfg: _.cfg.extend({\r\n                            kdf: x\r\n                        }),\r\n                        encrypt: function(e, t, n, r) {\r\n                            r = this.cfg.extend(r);\r\n                            var i = r.kdf.execute(n, e.keySize, e.ivSize);\r\n                            r.iv = i.iv;\r\n                            var a = _.encrypt.call(this, e, t, i.key, r);\r\n                            return a.mixIn(i), a\r\n                        },\r\n                        decrypt: function(e, t, n, r) {\r\n                            r = this.cfg.extend(r), t = this._parse(t, r.format);\r\n                            var i = r.kdf.execute(n, e.keySize, e.ivSize, t.salt);  --there\r\n                            r.iv = i.iv;\r\n                            var a = _.decrypt.call(this, e, t, i.key, r);\r\n                            return a\r\n                        }\r\n                    })\r\n\r\n...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11437","RelatedDescription":"Closed issue \"safari :   TypeError: null is not an object (evaluating 't.salt')\" (#11437)"},{"Id":"631312787","IsPullRequest":true,"CreatedAt":"2020-06-05T05:00:42","Actor":"vue-bot","Number":"11439","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11439","RelatedDescription":"Open PR \"[automated] Patreon sponsors update\" (#11439)"},{"Id":"631312712","IsPullRequest":true,"CreatedAt":"2020-06-05T05:00:28","Actor":"vue-bot","Number":"11438","RawContent":null,"Title":"[automated] Patreon backers update (Jun 2020","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11438","RelatedDescription":"Open PR \"[automated] Patreon backers update (Jun 2020\" (#11438)"},{"Id":"631201090","IsPullRequest":true,"CreatedAt":"2020-06-04T23:09:02","Actor":"mpawelski","Number":"11436","RawContent":null,"Title":"chore(warning): Add \"symbol\" and \"boolean\" for \"key\" warning","State":"open","Body":"Booleans as keys are supported since #6127 and symbols since #7271.\r\nThe warning should reflect that.\r\nI created PR as suggested [here](https://github.com/vuejs/vue/issues/7936#issuecomment-636984051). There is separat PR for [docs](https://github.com/vuejs/vuejs.org/pull/2614)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: changes warning text in devtools console\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11436","RelatedDescription":"Open PR \"chore(warning): Add \"symbol\" and \"boolean\" for \"key\" warning\" (#11436)"},{"Id":"630300639","IsPullRequest":true,"CreatedAt":"2020-06-03T20:26:11","Actor":"vue-bot","Number":"11435","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11435","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11435)"},{"Id":"629486738","IsPullRequest":true,"CreatedAt":"2020-06-03T20:25:48","Actor":"vue-bot","Number":"11431","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11431","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11431)"},{"Id":"629725783","IsPullRequest":true,"CreatedAt":"2020-06-03T20:25:34","Actor":"vue-bot","Number":"11433","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11433","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11433)"},{"Id":"627979043","IsPullRequest":true,"CreatedAt":"2020-06-03T20:25:15","Actor":"vue-bot","Number":"11420","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11420","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11420)"},{"Id":"629997105","IsPullRequest":true,"CreatedAt":"2020-06-03T13:31:32","Actor":"posva","Number":"11434","RawContent":null,"Title":"chore: upgrade serialize-javascript","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\nSecurity update from https://github.com/vuejs/vue/issues/11427 and https://app.snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062\r\n\r\nBreaking changes listed at https://github.com/yahoo/serialize-javascript/releases\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Security bump\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11434","RelatedDescription":"Open PR \"chore: upgrade serialize-javascript\" (#11434)"},{"Id":"629623962","IsPullRequest":false,"CreatedAt":"2020-06-03T01:33:37","Actor":"johlug","Number":"11432","RawContent":null,"Title":"Detect modifiers order in custom directives","State":"open","Body":"### What problem does this feature solve?\r\nThe guide says that the order of the modifiers in event directive matters (https://vuejs.org/v2/guide/events.html).  \r\n\r\nIn custom directives I get the modifiers by the modifiers object (s. https://vuejs.org/v2/guide/custom-directive.html 1). So there it’s not possible to detect the order.  \r\n\r\nI have already made an \"Get help\" issue (https://forum.vuejs.org/t/custom-directives-detect-modifiers-order/96587) and got no answer.  \r\n\r\nWith this feature I would have more control over modifiers in custom directives.\r\n\r\n### What does the proposed API look like?\r\nmodifiers could be simply put in an array, like\r\n['modifier1', 'modifier2']\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11432","RelatedDescription":"Open issue \"Detect modifiers order in custom directives\" (#11432)"},{"Id":"629162060","IsPullRequest":false,"CreatedAt":"2020-06-02T12:42:04","Actor":"kamilzielinskidev","Number":"11430","RawContent":null,"Title":"BeforeDestroy and Destroy hooks are not emitted once Web Component Vue component is out of DOM","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/reqfy064/](https://jsfiddle.net/reqfy064/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create Vue Web Component using Vue Cli with destroy and beforeDestroy hooks which console logs 123.\r\n2. Use the component in Angular with angular-extension/elements.\r\n3. Render the site with component\r\n4. Switch to another route\r\n\r\n### What is expected?\r\nTo console log 123\r\n\r\n### What is actually happening?\r\nComponent still exists besides removing it from DOM/ no 123 logged.\r\n\r\n---\r\nSame implementation works with native solution and lit-element disconnectedCallback\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11430","RelatedDescription":"Closed issue \"BeforeDestroy and Destroy hooks are not emitted once Web Component Vue component is out of DOM\" (#11430)"},{"Id":"629159450","IsPullRequest":false,"CreatedAt":"2020-06-02T12:38:58","Actor":"yangdan8","Number":"11429","RawContent":null,"Title":"Checkbox check state is incorrect","State":"closed","Body":"### Version\r\n2.6.0~2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/yangdan8/pen/XWXrQGW](https://codepen.io/yangdan8/pen/XWXrQGW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n反复点击复选框,发现复选框选中状态和显示的选中状态值不一致\r\nClick the checkbox repeatedly, and find that the checkbox selected state and the displayed selected state value are inconsistent\r\n\r\n### What is expected?\r\n复选框选中状态和显示的选中状态值相同\r\nThe check box selected state is the same as the displayed selected state value\r\n\r\n### What is actually happening?\r\n复选框选中状态和显示的选中状态值不一致\r\nCheck box selection status and displayed selection status value are inconsistent\r\n\r\n---\r\n由于2.6.0修复chebox的bug引起的新的问题\r\n在2.0.x～2.5.x都没有这个问题\r\nNew problems caused by bug fixing chebox in 2.6.0\r\nThere is no such problem in 2.0.x~2.5.x\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11429","RelatedDescription":"Closed issue \"Checkbox check state is incorrect\" (#11429)"},{"Id":"628970938","IsPullRequest":false,"CreatedAt":"2020-06-02T08:16:56","Actor":"StarkDevelopers","Number":"11428","RawContent":null,"Title":"createBundleRenderer throws an error: Cannot find module 'middleware.js'","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n**I have provided an empty link to minimal reproduction because this requires Nuxt to build. I have provided reproduction steps using nuxt**\r\n\r\n\r\nI have created Vue Application using: **npm create nuxt-app nuxt-ssr**\r\n\r\nThen inside nuxt-ssr, I executed **npm run dev** which generates server.js inside .nuxt directory which is the server-side bundle.\r\n\r\nThen I executed following NodeJS code to render the template using the above-generated **server.js**\r\n\r\n\r\n    const vueRenderer = require('vue-server-renderer')\r\n\r\n    try {\r\n      const renderer = vueRenderer.createBundleRenderer('[ABSOLUTE_PATH]/nuxt-ssr/.nuxt/server.js', {\r\n        runInNewContext: false\r\n      });\r\n      renderer.renderToString().then(x => console.log(x)).catch(e => console.error(e));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\nWhich is not working. Because server.js is using ES6 Import syntax. I tried the following things to make it work.\r\n\r\n1. I tried to use version < 13.0 with --experimental-modules flag while running node\r\n2. version > 13.0 with type: module in package.json or with extension .mjs\r\n3. I tried to convert server.js to ES5 using Babel and then used it\r\n4. Also, tried to use dynamic import\r\n\r\nNone of them are working.\r\n\r\nCan anyone please help me with this? Let me know if you need more information.\r\n\r\n### What is expected?\r\nThe server-side bundle should get rendered without any errors.\r\n\r\n### What is actually happening?\r\nIt is not able to find modules like: Cannot find module 'middleware.js' from '[ABSOLUTE_PATH]/nuxt-ssr/.nuxt'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11428","RelatedDescription":"Closed issue \"createBundleRenderer throws an error: Cannot find module 'middleware.js'\" (#11428)"},{"Id":"628828536","IsPullRequest":false,"CreatedAt":"2020-06-02T06:16:46","Actor":"dargmuesli","Number":"11427","RawContent":null,"Title":"Arbitrary Code Injection In \"serialize-javascript\" For \"vue-server-renderer\"","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://app.snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062](https://app.snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nn/a\r\n\r\n### What is expected?\r\n> **Remediation**\r\n> Upgrade serialize-javascript to version 3.1.0 or higher.\r\n\r\n### What is actually happening?\r\nn/a\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11427","RelatedDescription":"Closed issue \"Arbitrary Code Injection In \"serialize-javascript\" For \"vue-server-renderer\"\" (#11427)"},{"Id":"628827722","IsPullRequest":false,"CreatedAt":"2020-06-02T01:14:04","Actor":"dargmuesli","Number":"11426","RawContent":null,"Title":"Arbitrary Code Injection In \"serialize-javascript\" For \"vue-server-renderer\"","State":"closed","Body":"https://app.snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062\r\n\r\n> **Remediation**\r\n> Upgrade serialize-javascript to version 3.1.0 or higher.","Url":"https://github.com/vuejs/vue/issues/11426","RelatedDescription":"Closed issue \"Arbitrary Code Injection In \"serialize-javascript\" For \"vue-server-renderer\"\" (#11426)"},{"Id":"628633421","IsPullRequest":true,"CreatedAt":"2020-06-01T19:46:11","Actor":"nguyenyou","Number":"11425","RawContent":null,"Title":"dist/README.md : small Webpack sample code fix","State":"closed","Body":"This PR fixs the sample code for Webpack configuration, following the note in the [define-plugin#usage](https://webpack.js.org/plugins/define-plugin/#usage) documention:\r\n\r\n> When defining values for process prefer 'process.env.NODE_ENV': JSON.stringify('production') over process: { env: { NODE_ENV: JSON.stringify('production') } }. Using the latter will overwrite the process object which can break compatibility with some modules that expect other values on the process object to be defined.","Url":"https://github.com/vuejs/vue/pull/11425","RelatedDescription":"Closed or merged PR \"dist/README.md : small Webpack sample code fix\" (#11425)"},{"Id":"628296154","IsPullRequest":false,"CreatedAt":"2020-06-01T10:25:12","Actor":"thomaslwq","Number":"11424","RawContent":null,"Title":":max parameter dosn't work when its value is 1 ","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/thomaslwq/pen/abdoZXM](https://codepen.io/thomaslwq/pen/abdoZXM)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n            1. use the component keep-alive\r\n            2. set the max(1) component for cache\r\n            3. the max parameter dosen't work\r\n\r\n\r\n### What is expected?\r\nwhen the max parameter is 1,it works\r\n\r\n### What is actually happening?\r\nit doesn't work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11424","RelatedDescription":"Closed issue \":max parameter dosn't work when its value is 1 \" (#11424)"},{"Id":"628196330","IsPullRequest":false,"CreatedAt":"2020-06-01T09:04:29","Actor":"zl7261","Number":"11423","RawContent":null,"Title":"Should add try-catch block on setProp methods","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/zl7261/vue-set-prop/blob/master/index.html](https://github.com/zl7261/vue-set-prop/blob/master/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick 'switch color' button\r\n\r\n### What is expected?\r\nswitch color by every click\r\n\r\n### What is actually happening?\r\nworks once, then get an error on ie11\r\n\r\n---\r\n```javascript\r\n document.querySelector('#test').style['height']='calc(100% - 0)' \r\n```\r\n\r\ncausing an error on ie11\r\n\r\nShould setProp function better with try-catch block and throw error info?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11423","RelatedDescription":"Closed issue \"Should add try-catch block on setProp methods\" (#11423)"},{"Id":"628168354","IsPullRequest":true,"CreatedAt":"2020-06-01T05:41:06","Actor":"dyu","Number":"11422","RawContent":null,"Title":"fix keep-alive memory leak","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nCompares the component instance, not the tag\r\n","Url":"https://github.com/vuejs/vue/pull/11422","RelatedDescription":"Open PR \"fix keep-alive memory leak\" (#11422)"},{"Id":"627800842","IsPullRequest":true,"CreatedAt":"2020-05-30T19:20:30","Actor":"Warinyourself","Number":"11419","RawContent":null,"Title":"Add 'is' key in VNodeData for dynamic components.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/vuejs/vue/pull/11419","RelatedDescription":"Open PR \"Add 'is' key in VNodeData for dynamic components.\" (#11419)"},{"Id":"627374402","IsPullRequest":false,"CreatedAt":"2020-05-29T21:04:16","Actor":"ryanburnette","Number":"11418","RawContent":null,"Title":"two-way binding lost on object attribute when bound to textarea with v-model","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/ryanburnette/pen/pojMoZK](https://codepen.io/ryanburnette/pen/pojMoZK)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHead over to this codepen\r\n\r\nhttps://codepen.io/ryanburnette/pen/pojMoZK\r\n\r\nFirst, enter some text into the textarea to see that v-model is working, then click 'fill default text' and you'll see that the function can update info.message\r\n\r\nSecond, reload the page to start fresh, then click 'fill default text', it won't work, then try editing the text, click 'fill default text', and it never works\r\n\r\nOnly tested in chrome 83.0.4103.61\r\n\r\n### What is expected?\r\ntwo-way data binding even if this.message.info is set first\r\n\r\n### What is actually happening?\r\ntwo-way data binding only works if text is entered into the textarea first\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11418","RelatedDescription":"Closed issue \"two-way binding lost on object attribute when bound to textarea with v-model\" (#11418)"},{"Id":"626667490","IsPullRequest":false,"CreatedAt":"2020-05-28T18:15:29","Actor":"ccleve","Number":"11417","RawContent":null,"Title":"True dynamic single-file components","State":"closed","Body":"### What problem does this feature solve?\r\nI've got an app where third parties can create plugins. I'd like them to be able to create those plugins as single file components, which get pulled in and displayed just like built-in components. Right now, the only way for them to do it is to create a component in this form:\r\n\r\n```\r\n{\r\ntemplate: \"<div>stuff</div>\",\r\nprops: ...\r\netc.\r\n}\r\n```\r\n\r\nThis is awkward, plus there is no easy way to include styles.\r\n\r\nMore details: https://stackoverflow.com/questions/62035019/load-vue-single-file-component-dynamically-at-runtime\r\n\r\nI think that the logic to do this exists, but it's in vue-loader, and really intended for use with Webpack. Webpack is not designed for use at runtime.\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n<template>\r\n  <div>\r\n    The component goes here:\r\n    <component :is=\"pluginComponent\"></component>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { compileSFC } from \"vue-template-compiler\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      pluginComponent: null\r\n    };\r\n  },\r\n  mounted() {\r\n    // fetch code from some external source here\r\n    let code = \"<template><div>hello</div></template><style>some styles</style><script>some code</script>\";\r\n    let comp = compileSFC(code);\r\n    this.pluginComponent = comp;\r\n  }\r\n};\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11417","RelatedDescription":"Closed issue \"True dynamic single-file components\" (#11417)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"627335700","IsPullRequest":true,"CreatedAt":"2020-06-07T11:07:58","Actor":"kazupon","Number":"3214","RawContent":null,"Title":"fix: update ja docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3214","RelatedDescription":"Closed or merged PR \"fix: update ja docs\" (#3214)"},{"Id":"632404909","IsPullRequest":false,"CreatedAt":"2020-06-06T12:57:26","Actor":"bitquality","Number":"3222","RawContent":null,"Title":"hounour routes of a plugin in main or parent component app","State":"closed","Body":"### Version\r\n3.3.2\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vue-router](https://new-issue.vuejs.org/?repo=vuejs/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have developed a plugin and i am able to load it in my main app. And install method looks like below and following is its routes.\r\n\r\nmy plugin has one main component i am exporting as pplugin:\r\n\r\n```\r\n<template>\r\n\r\n<div id=\"profile\">\r\n  <p>\r\n    <router-link to=\"/profileinfo/updateEmail\">updateEmail</router-link>\r\n    <router-link to=\"/profileinfo/updatePassword\">updatePassword</router-link>\r\n   \r\n  </p>\r\n  <router-view></router-view>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProfileInfoComponent ',\r\n}\r\n</script>\r\n```\r\n\r\nmy plugin ProfileInfo has following router:\r\n\r\n```\r\n\r\nimport ProfileInfoComponent from '.ProfileInfo.vue';\r\n\r\n//components\r\nconst UpdateEmail = { template: `<div class=\"foo\"><h1>foo</h1></div>` }\r\nconst UpdatePassword = { template: `<div class=\"bar\"><h1>bar</h1></div>` }\r\n\r\n\r\nconst router= new VueRouter({\r\n  mode:history,\r\n  routes: {\r\n   path: '/ProfileInfo', component: ProfileInfoComponent ,\r\n\r\n children:  [\r\n    { path: '/updateEmail', component: UpdateEmail },\r\n    { path: '/updatePassword', component: UpdatePassword  }\r\n  ]\r\n}\r\n})\r\n\r\n//lib.ts\r\nimport ProfileInfoComponent from '.ProfileInfo.vue';\r\n\r\nconst MyProfilePlugin= {\r\n  install(Vue, options) {\r\n        Vue.component('ProfileInfoComponent', ProfileInfoComponent)\r\n  }\r\n}\r\n\r\nexport default MyProfilePlugin;\r\n```\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nWhen i register a plugin , i was expecting all its routes will act in main app without any issue.\r\n\r\nIn my main app's main.ts file:\r\n\r\n```\r\nimport ProfileInfoPlugin from 'ProfileInfoPlugin';\r\n\r\nVue.use(ProfileInfoPlugin , { testmsg:'hello world'});\r\n```\r\n\r\nThe following link has code which is exactly what my plugin code looks like.. And i am trying to achieve this behaviour in any app which uses it .\r\n\r\nhttps://jsfiddle.net/yyx990803/L7hscd8h/\r\n\r\n### What is actually happening?\r\nBut my main app is not aware of my plguin's routes and it throws below error when i click on 'updateEmail' link from my main app ProfileInfo page where it used my ProfileInfoComponent:\r\n\r\n[vue-router] Route with name 'UpdateEmail' does not exist\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3222","RelatedDescription":"Closed issue \"hounour routes of a plugin in main or parent component app\" (#3222)"},{"Id":"632396571","IsPullRequest":false,"CreatedAt":"2020-06-06T11:31:03","Actor":"jasonlfunk","Number":"3221","RawContent":null,"Title":"Error: Redirected from X to Y via a navigation guard.","State":"closed","Body":"Version: 3.3.2\r\n\r\nhttps://github.com/vuejs/vue-router/blob/1f3aea660804bd9dfba3020e2d112d9bd510e518/src/history/base.js#L178\r\n\r\nI have a Navigation Guard that does some various checks and redirects when necessary. Vue-router is not throwing this error when I do. Though everything is still working fine.\r\n\r\nIs there a reason why this error is being thrown? What is the \"correct\" way to redirect via a navigation guard?\r\n","Url":"https://github.com/vuejs/vue-router/issues/3221","RelatedDescription":"Closed issue \"Error: Redirected from X to Y via a navigation guard.\" (#3221)"},{"Id":"631843269","IsPullRequest":true,"CreatedAt":"2020-06-05T18:45:07","Actor":"posva","Number":"3220","RawContent":null,"Title":"docs: add navigation failures","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3220","RelatedDescription":"Open PR \"docs: add navigation failures\" (#3220)"},{"Id":"629404467","IsPullRequest":true,"CreatedAt":"2020-06-04T10:31:03","Actor":"javiertury","Number":"3218","RawContent":null,"Title":"feat(types): RouterConfig for multiple components (#3217)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nCloses #3217\r\n\r\nThe test demonstrates that with correct typings, typescript is able to infer that route is of type `Route` on its own.\r\n```\r\n             abc: route => route.params,\r\n```","Url":"https://github.com/vuejs/vue-router/pull/3218","RelatedDescription":"Closed or merged PR \"feat(types): RouterConfig for multiple components (#3217)\" (#3218)"},{"Id":"629401510","IsPullRequest":false,"CreatedAt":"2020-06-04T10:31:02","Actor":"javiertury","Number":"3217","RawContent":null,"Title":"Accurate typings for Routeconfig: component, components, props","State":"closed","Body":"### What problem does this feature solve?\r\nThe typings have the following problems\r\n- A configuration can have both `component` and `components`\r\n- When multiple named components are used, props should be a `Dictionary` of the regular props typings. Right now it doesn't complain because `Object` is among the regular props typings, however it cannot infer the accurate typing of each of the props, it just uses `any`.\r\n\r\n### What does the proposed API look like?\r\nThere is no API\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3217","RelatedDescription":"Closed issue \"Accurate typings for Routeconfig: component, components, props\" (#3217)"},{"Id":"630498786","IsPullRequest":false,"CreatedAt":"2020-06-04T06:02:59","Actor":"HuberTRoy","Number":"3219","RawContent":null,"Title":"$route will change before component destroied.","State":"closed","Body":"### Version\r\n3.3.2\r\n\r\n### Reproduction link\r\n[https://jsbin.com/](https://jsbin.com/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIf I had a page A that router is `test?backTo=456` and another pageB that router is `main/:id/test`。\r\n\r\nThe page A set a button with click event that will push to page B:\r\n\r\n```\r\nclickTo() {\r\n    this.$router.push({\r\n        name: 'main',\r\n        params: { id: this.$route.query.backTo }\r\n    })\r\n}\r\n```\r\n\r\nWhen I click the button frequently it will lost the `$router.query.backTo` in some cases because the current page has been in pageB but the pageA has not destroied and I can click the button continually.\r\n\r\nWe can fix it by set the `this.$route.query.backTo`  to `data () { return { backId: this.$route.query.backTo } }`，Is it better to have a warning there?\r\n\r\n### What is expected?\r\nGet a warning in this case.\r\n\r\n### What is actually happening?\r\nNot a hint at all.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3219","RelatedDescription":"Closed issue \"$route will change before component destroied.\" (#3219)"},{"Id":"629177191","IsPullRequest":false,"CreatedAt":"2020-06-02T12:50:41","Actor":"cropr","Number":"3216","RawContent":null,"Title":"NavigationDuplicated Error after addRoute","State":"open","Body":"### Version\r\n3.3.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cropr/86vnLj4k/](https://jsfiddle.net/cropr/86vnLj4k/)\r\n\r\n### Steps to reproduce\r\nFollowing scenario fails with NavigationDuplicated\r\n 1. Have a router wildcard and navigating to an non existing url e.g. /aroute\r\n 2. Doing a addRoute in the handling component of the wildcard, resulting in an updated  routing table with a matching /aroute \r\n 3. Trying to navigate to new /aroute either via  $router.push or $router.replace\r\n\r\nWhile the url does not change, the Navigation changes and thus the NavigationDuplicated error is incorrect\r\n\r\n### What is expected?\r\nThe router is changed to the new component matching /aroute\r\n\r\n### What is actually happening?\r\nNavigationDuplicated error raised\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3216","RelatedDescription":"Open issue \"NavigationDuplicated Error after addRoute\" (#3216)"},{"Id":"627455375","IsPullRequest":true,"CreatedAt":"2020-05-29T18:23:14","Actor":"francislavoie","Number":"3215","RawContent":null,"Title":"docs: Update Caddy example","State":"open","Body":"Caddy v2 was released recently. This updates the https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations page with an example that will work for Caddy v2, and adds the `v1` suffix for the old example.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3215","RelatedDescription":"Open PR \"docs: Update Caddy example\" (#3215)"},{"Id":"627315659","IsPullRequest":true,"CreatedAt":"2020-05-29T14:34:09","Actor":"aradjdi","Number":"3213","RawContent":null,"Title":"Catch URI malformed error (fix #2725)","State":"open","Body":"Fix url decoding when we have a percentage character in URL\r\n","Url":"https://github.com/vuejs/vue-router/pull/3213","RelatedDescription":"Open PR \"Catch URI malformed error (fix #2725)\" (#3213)"},{"Id":"627002968","IsPullRequest":true,"CreatedAt":"2020-05-29T13:34:55","Actor":"lbwa","Number":"3211","RawContent":null,"Title":"fix(errors): NavigationCanceled with async components","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nCanceled behavior should always throw a same canceled error, instead of `undefined`\r\n\r\nSame as these codes:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/c8a4cefcb1a570245040e80bbec20cfe476a1c85/src/history/base.js#L160-L162\r\n\r\n\r\nRelated PR:\r\n\r\n- https://github.com/vuejs/vue-router/pull/3047","Url":"https://github.com/vuejs/vue-router/pull/3211","RelatedDescription":"Closed or merged PR \"fix(errors): NavigationCanceled with async components\" (#3211)"},{"Id":"627024051","IsPullRequest":true,"CreatedAt":"2020-05-29T07:03:39","Actor":"hareku","Number":"3212","RawContent":null,"Title":"fix: error.stack is possibly null","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nIn unsupported `Error.stack` browsers, that throws `TypeError(Unable to get property 'split' of undefined or null reference)`.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3212","RelatedDescription":"Closed or merged PR \"fix: error.stack is possibly null\" (#3212)"},{"Id":"625849188","IsPullRequest":true,"CreatedAt":"2020-05-27T16:34:25","Actor":"posva","Number":"3210","RawContent":null,"Title":"feat(scroll): allow behavior in scrollBehavior","State":"open","Body":"Closes #2069\r\nCloses #3008 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3210","RelatedDescription":"Open PR \"feat(scroll): allow behavior in scrollBehavior\" (#3210)"},{"Id":"624586581","IsPullRequest":false,"CreatedAt":"2020-05-26T06:47:12","Actor":"pikadun","Number":"3209","RawContent":null,"Title":"Modify the beforeRouteUpdate parameter to be optional","State":"closed","Body":"### What problem does this feature solve?\r\nThe `to`,`from`  is unnecessary in `Navigation Guards`,  so consider making them optional parameters\r\n\r\n### What does the proposed API look like?\r\nexport type NavigationGuard<V extends Vue = Vue> = (\r\n  next: (to?: RawLocation | false | ((vm: V) => any) | void) => void, \r\n  to?: Route,\r\n  from?: Route\r\n) => any\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3209","RelatedDescription":"Closed issue \"Modify the beforeRouteUpdate parameter to be optional\" (#3209)"},{"Id":"622790858","IsPullRequest":false,"CreatedAt":"2020-05-22T08:20:30","Actor":"nicky1038","Number":"3208","RawContent":null,"Title":"Pass components into slots in router config","State":"closed","Body":"### What problem does this feature solve?\r\nAt present users are able to pass props into components inside router config via [props](https://router.vuejs.org/api/#routes) property. But there is also another kind of input information that components accept as well: slots.\r\n\r\nIt would be cool if users could configure passing something into slots in router config. The simpliest and the most intuitive idea is to specify components to be displayed instead of slots.\r\n\r\nThis feature can **incredibly** _reduce code coupling_ and _raise configuration flexibility_.\r\n\r\nTo be honest, I was sure this feature already exists, and was very surprised when I didn't find it in the documentation.\r\n\r\n### What does the proposed API look like?\r\nThis could be done with the new `slots` variable that does the thing, for example:\r\n\r\n```javascript\r\n{\r\n  path: '/foo',\r\n  component: Foo,\r\n  slots: { // object of slot names to slot configs\r\n    default: { // default slot of Foo\r\n      component: Bar, // a component to display instead of the default slot of Foo\r\n      props: { // props to pass into Bar component\r\n        a: 1,\r\n        b: 'hey'\r\n      }\r\n      // maybe allow passing slots into Bar component via nested 'slots' property here?\r\n    },\r\n    customSlotName: Baz // only component can be specified is no props are needed to be passed\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3208","RelatedDescription":"Closed issue \"Pass components into slots in router config\" (#3208)"},{"Id":"622211116","IsPullRequest":false,"CreatedAt":"2020-05-21T06:39:20","Actor":"phpexpert00784","Number":"3207","RawContent":null,"Title":"Vue Router not works on Firefox, Works perfect on Chrome and Safari","State":"closed","Body":"### Version\r\n3.2.0\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI just setup the Laravel 7 with Latest Vuejs. I Just setup simple sampleComponent.Vue\r\n\r\n### What is expected?\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath : '/example',\r\n\t\tcomponent : require('./components/ExampleComponent.vue').default\r\n\t}\r\n];\r\n\r\nconst router = new VueRouter({\r\n\troutes\r\n});\r\n\r\nconst app = new Vue({\r\n    el: '#app',\r\n    router : router\r\n});\r\n\r\nThat is my code. What is wrong in that\r\n\r\n### What is actually happening?\r\n[Vue warn]: Unknown custom element: <router-link> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\n(found in <Root>) \r\n\r\n\r\n[Vue warn]: Unknown custom element: <router-view> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\n(found in <Root>)\r\n\r\nIn firefox, It will me that error.\r\n\r\n---\r\nPlease ignore mimimal reprodoction link\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3207","RelatedDescription":"Closed issue \"Vue Router not works on Firefox, Works perfect on Chrome and Safari\" (#3207)"},{"Id":"621403593","IsPullRequest":true,"CreatedAt":"2020-05-20T11:39:56","Actor":"Steven-Chang1114","Number":"3205","RawContent":null,"Title":"docs: typo in node.js example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nIt appears in https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations as the index.html is mistyped as index.htm in the Native Node.js section\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/3205","RelatedDescription":"Closed or merged PR \"docs: typo in node.js example\" (#3205)"},{"Id":"621631811","IsPullRequest":true,"CreatedAt":"2020-05-20T10:32:36","Actor":"gtsiolis","Number":"3206","RawContent":null,"Title":"docs: add installation instructions using Vue CLI","State":"closed","Body":"Minor reference on how to install using Vue CLI. Feel free to close if you think this is not needed.","Url":"https://github.com/vuejs/vue-router/pull/3206","RelatedDescription":"Closed or merged PR \"docs: add installation instructions using Vue CLI\" (#3206)"},{"Id":"620985539","IsPullRequest":true,"CreatedAt":"2020-05-19T13:44:26","Actor":"lmichelin","Number":"3204","RawContent":null,"Title":"fix: Missing renaming","State":"closed","Body":"This PR fixes a missing renaming in #3047 \r\n\r\nSee this comment for more details: https://github.com/vuejs/vue-router/pull/3047#pullrequestreview-414419587","Url":"https://github.com/vuejs/vue-router/pull/3204","RelatedDescription":"Closed or merged PR \"fix: Missing renaming\" (#3204)"},{"Id":"620010920","IsPullRequest":false,"CreatedAt":"2020-05-18T08:27:42","Actor":"changshunxu520","Number":"3203","RawContent":null,"Title":"In a nested route","State":"closed","Body":"How to refresh only child routes without refreshing parent routes。\r\nlike this \r\n```html\r\n<div id=\"app\">\r\n  <router-view></router-view>\r\n  <div id=\"second\">\r\n       <router-view></router-view>\r\n </div>\r\n  <div id=\"other\">\r\n       <router-view></router-view>\r\n </div>\r\n</div>\r\n```\r\nwhen i use this code in div(second)\r\n```javascript\r\n this.$router.push('aaaaa')\r\n```\r\nI just want to refresh div(second) ，At the same time do not want to refresh its parent（app）\r\n","Url":"https://github.com/vuejs/vue-router/issues/3203","RelatedDescription":"Closed issue \"In a nested route\" (#3203)"},{"Id":"619879536","IsPullRequest":false,"CreatedAt":"2020-05-18T03:22:15","Actor":"qzd1989","Number":"3202","RawContent":null,"Title":"部分网址格式在使用router.push跳转后,网址格式错误","State":"closed","Body":"这里是我的实际网址\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101#/free\r\n进行跳转到result并且带上参数 from=xxx\r\n实际跳转的地址为(有两个?号了)\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101#/result?from=xxx\r\n而不是期望的\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101&from=xxx#/result\r\n\r\n不知道这是不是BUG?","Url":"https://github.com/vuejs/vue-router/issues/3202","RelatedDescription":"Closed issue \"部分网址格式在使用router.push跳转后,网址格式错误\" (#3202)"},{"Id":"618571944","IsPullRequest":true,"CreatedAt":"2020-05-16T09:04:27","Actor":"CoolCyberBrain","Number":"3200","RawContent":null,"Title":"refactor(scroll-behavior): clean up scroll-behavior tests","State":"closed","Body":"Cleaned up scroll-behavior tests while working on #3199 \r\n\r\n- `history.scrollRestoration = 'manual'` is no longer needed with #1814 \r\n- replaced some `execute` functions that can be replaced with `click`","Url":"https://github.com/vuejs/vue-router/pull/3200","RelatedDescription":"Closed or merged PR \"refactor(scroll-behavior): clean up scroll-behavior tests\" (#3200)"},{"Id":"618700934","IsPullRequest":false,"CreatedAt":"2020-05-15T05:06:38","Actor":"trainiac","Number":"3201","RawContent":null,"Title":"onError does not capture errors thrown in redirect callback","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/trainiac/pen/rNOZvRO?editors=1112](https://codepen.io/trainiac/pen/rNOZvRO?editors=1112)\r\n\r\n### Steps to reproduce\r\n1. create route config like\r\n\r\n```ts  \r\n{\r\n    path: '/oldpath/:part',\r\n    redirect: (to: Route) => {\r\n      if(to.ooopsmistake.part) {\r\n        return `/newpath/${to.params.part}`\r\n      }\r\n      return '/newpath/'\r\n    },\r\n  }\r\n```\r\n\r\n### What is expected?\r\nWhen router.push('/oldpath/test'). an error is throw becuase there is no oopsmistake property on the to route.  This should be caught in router.onError.\r\n\r\n### What is actually happening?\r\nIt's only caught in router.push('/oldpath/test').catch(err is here)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3201","RelatedDescription":"Open issue \"onError does not capture errors thrown in redirect callback\" (#3201)"},{"Id":"617705668","IsPullRequest":true,"CreatedAt":"2020-05-13T19:40:59","Actor":"CoolCyberBrain","Number":"3199","RawContent":null,"Title":"fix(scroll): run scrollBehavior on initial load (fix #3196)","State":"open","Body":"fix #3196 by adding handleScroll to the callback of the first call to history.transitionTo","Url":"https://github.com/vuejs/vue-router/pull/3199","RelatedDescription":"Open PR \"fix(scroll): run scrollBehavior on initial load (fix #3196)\" (#3199)"},{"Id":"617230590","IsPullRequest":false,"CreatedAt":"2020-05-13T08:10:21","Actor":"lang1427","Number":"3198","RawContent":null,"Title":"Change query, the address bar will not change","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://github.com/lang1427/vue-typescript-music/blob/master/src/views/test.vue](https://github.com/lang1427/vue-typescript-music/blob/master/src/views/test.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen there is query in the route and the attribute is name value XXX, you want to change the value of name,\r\n\r\nThe following code:\r\n```\r\nthis.$route.query.name = '更新数据'\r\n```\r\n\r\n### What is expected?\r\nChange the value of name in the address bar while changing the value of name\r\n\r\n### What is actually happening?\r\nThe name value has changed, but the name value in the address bar has not changed. What can I do?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3198","RelatedDescription":"Closed issue \"Change query, the address bar will not change\" (#3198)"},{"Id":"617221082","IsPullRequest":false,"CreatedAt":"2020-05-13T07:42:41","Actor":"lang1427","Number":"3197","RawContent":null,"Title":"Change query, the address bar will not change","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nWhen there is query in the route and the attribute is name value XXX, you want to change the value of name,\r\n\r\nThe following code:\r\n```\r\nthis.$route.query.name = '更新数据'\r\n```\r\nThe name value has changed, but the name value in the address bar has not changed. What can I do?\r\n","Url":"https://github.com/vuejs/vue-router/issues/3197","RelatedDescription":"Closed issue \"Change query, the address bar will not change\" (#3197)"},{"Id":"617100050","IsPullRequest":false,"CreatedAt":"2020-05-13T02:53:36","Actor":"CoolCyberBrain","Number":"3196","RawContent":null,"Title":"scrollBehavior does not run on load","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-pk4q2](https://codesandbox.io/s/vue-routing-example-pk4q2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nLoad page\r\n\r\n### What is expected?\r\nscrollBehavior always return `{ x: 0, y: 200 }` so the scroll position should always be 200 pixels from the top\r\n\r\n### What is actually happening?\r\nscrollBehavior always return `{ x: 0, y: 200 }` but scroll position y is always 0 when first loaded\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3196","RelatedDescription":"Open issue \"scrollBehavior does not run on load\" (#3196)"},{"Id":"616072738","IsPullRequest":false,"CreatedAt":"2020-05-11T18:00:03","Actor":"davidmoser","Number":"3195","RawContent":null,"Title":"Nested routes with keep-alive creates child on hidden branch","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/7v8hje5d/8/](https://jsfiddle.net/7v8hje5d/8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Click on link /A/1\r\n- Click on link /B/1\r\n\r\n### What is expected?\r\n- First click creates child with parent A\r\n- Second click creates child with parent B\r\n\r\n### What is actually happening?\r\n- First click works as expected\r\n- Second click creates two children, one with parent A and one with parent B\r\n\r\n---\r\nI used a key in the router view to make sure children with the same parent get cached independently:\r\n:key=\"$route.fullPath\"\r\n\r\nThe setup works correctly if the router views have no keys and different child component types.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3195","RelatedDescription":"Open issue \"Nested routes with keep-alive creates child on hidden branch\" (#3195)"},{"Id":"615563881","IsPullRequest":false,"CreatedAt":"2020-05-11T06:41:54","Actor":"showtan001","Number":"3194","RawContent":null,"Title":"在百度APP中，router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://gitee.com/showtan/h5.git](https://gitee.com/showtan/h5.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在百度APP中，使用router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面，效果是直接退出程序（a标签可以返回上一页面）。但是我把router-link渲染成a标签也不能返回，然后我监听“popstate”，使用$router.back()，在百度浏览器中可以返回，然而在百度APP还是不能返回，它直接退出H5了。\r\n\r\n### What is expected?\r\n在进入下一页后点击浏览器自带返回或者Android物理返回或者侧滑返回能返回上一页面。\r\n\r\n### What is actually happening?\r\n直接退出程序。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3194","RelatedDescription":"Closed issue \"在百度APP中，router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面\" (#3194)"},{"Id":"615555893","IsPullRequest":false,"CreatedAt":"2020-05-11T03:10:21","Actor":"showtan001","Number":"3193","RawContent":null,"Title":"router-link在百度APP中点击返回不能从下一页面返回上一页面","State":"closed","Body":"使用router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面，效果是直接退出程序（a标签可以返回上一页面）。但是我把router-link渲染成a标签也不能返回，然后我监听“popstate”，使用$router.back()，在百度浏览器中可以返回，然而在百度APP还是不能返回，它直接退出H5了。你们可以看看是怎么回事吗？蟹蟹！","Url":"https://github.com/vuejs/vue-router/issues/3193","RelatedDescription":"Closed issue \"router-link在百度APP中点击返回不能从下一页面返回上一页面\" (#3193)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"634471311","IsPullRequest":true,"CreatedAt":"2020-06-08T12:49:59","Actor":"NathanBnm","Number":"1773","RawContent":null,"Title":"Fix \"Release Notes\" French translation","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1773","RelatedDescription":"Closed or merged PR \"Fix \"Release Notes\" French translation\" (#1773)"},{"Id":"623880132","IsPullRequest":false,"CreatedAt":"2020-06-08T09:18:06","Actor":"evgeniyPP","Number":"1762","RawContent":null,"Title":"Auto-creating getters & actions","State":"closed","Body":"### What problem does this feature solve?\r\nA popular practice is to create getters for each value in the state, and actions for each mutation. This eliminates the confusion in the components. Now you can use only mapGetters for properties, and mapActions & dispatch for methods.\r\n\r\nHowever, this makes the store very verbose. You need to create useless getters and actions that simply return a value from a state/commit a mutation.\r\n\r\nIt would be convenient if Vuex, in case it does not find a suitable getter, looked for a value in the state and returned it. Or, if it doesn’t find action with the given name, he finds a mutation with that name and commits it.\r\n\r\nIn this case, it would be possible to use only mapGetters and mapActions in the components and at the same time not to write extra code in the store.\r\n\r\nI know that this is probably not solving a problem that cannot be easily dealt with using existing APIs. But IMHO that would be a great improvement to the user experience, and I wanted to share this idea with the development team.\r\n\r\n### What does the proposed API look like?\r\n<em>store.js</em>\r\n```js\r\nexport default new Vuex.Store({\r\n    state: {\r\n        count: 0\r\n    },\r\n    mutations: {\r\n        increment (state) {\r\n            state.count;\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n<em>component.vue</em>\r\n```html\r\n<template>\r\n  <div>\r\n    <p>{{ count }}</p>\r\n    <button @click=\"increment\"> </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\n\r\nexport default ({\r\n    computed: mapGetters(['count']),\r\n    methods: mapActions(['increment'])\r\n});\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1762","RelatedDescription":"Closed issue \"Auto-creating getters & actions\" (#1762)"},{"Id":"631333066","IsPullRequest":true,"CreatedAt":"2020-06-08T09:11:55","Actor":"imsunhao","Number":"1771","RawContent":null,"Title":"fix: typescript enhancement type Store<any>","State":"closed","Body":"https://github.com/vuejs/vuex/issues/1769","Url":"https://github.com/vuejs/vuex/pull/1771","RelatedDescription":"Closed or merged PR \"fix: typescript enhancement type Store<any>\" (#1771)"},{"Id":"631297411","IsPullRequest":false,"CreatedAt":"2020-06-08T09:10:54","Actor":"imsunhao","Number":"1769","RawContent":null,"Title":"typescript enhancement type Store<any>","State":"closed","Body":"### What problem does this feature solve?\r\nwhen i use vue-property-decorator & vue 2 & typescript, my this.$store always is `Store<any>`，I found a solution\r\n\r\n### What does the proposed API look like?\r\neg:\r\n``` \r\nthis.$store.state.user => (property) user?: Pick<Schema.TUser, \"ID\" | \"name\" | \"class\" | \"role\">\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1769","RelatedDescription":"Closed issue \"typescript enhancement type Store<any>\" (#1769)"},{"Id":"630178085","IsPullRequest":true,"CreatedAt":"2020-06-08T08:50:20","Actor":"mprevdelta","Number":"1766","RawContent":null,"Title":"Add example for getters when using modules.","State":"closed","Body":"The notation becomes different for getters when a module is present and I believe an example would be very benefical.","Url":"https://github.com/vuejs/vuex/pull/1766","RelatedDescription":"Closed or merged PR \"Add example for getters when using modules.\" (#1766)"},{"Id":"629246779","IsPullRequest":false,"CreatedAt":"2020-06-08T08:46:27","Actor":"vks-financial-com","Number":"1765","RawContent":null,"Title":"Reactivity trigger on store.registerModule","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-dynamic-module-re-render-kju2b](https://codesandbox.io/s/vuex-dynamic-module-re-render-kju2b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Initialize store\r\n2. Add/register a module \"x\"\r\n3. Register module \"y1\" within module \"x\". Module \"y1\" should contain a property \"z\" in its state\r\n4. Create a computed property \"c\" in the app, which returns an object containing property \"z\" from module \"y1\" state\r\n5. Create a watcher \"w\" for the computed property \"c\" with a logging function\r\n6. Register module \"y2\" within module \"x\"\r\n7. Observe watcher \"w\" being triggered\r\n\r\nReproduction is best described by the code in the provided test-case\r\n\r\n### What is expected?\r\nThere should be no triggered getter reactivity for the properties in the state of a vuex module after a sibling module has been registered\r\n\r\n### What is actually happening?\r\nUpon registering a vuex module, getters for properties in the state of already registered sibling vuex modules are being triggered\r\n\r\n---\r\nComputed properties in the app, which do complex computations with values coming from the vuex modules, are being unnecessarily reexecuted on vuex module registration, substantially slowing down a complex application\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1765","RelatedDescription":"Closed issue \"Reactivity trigger on store.registerModule\" (#1765)"},{"Id":"632599793","IsPullRequest":true,"CreatedAt":"2020-06-07T14:20:26","Actor":"Jinjiang","Number":"1772","RawContent":null,"Title":"docs(zh): update b40ee5d...7409ad4","State":"closed","Body":"https://github.com/vuejs/vuex/compare/b40ee5dce715a3ba20ba5589453d0a9715825f19...7409ad489f39091e2f73a9f1b92165ae0190ca64\r\n/cc @Justineo Thanks.","Url":"https://github.com/vuejs/vuex/pull/1772","RelatedDescription":"Closed or merged PR \"docs(zh): update b40ee5d...7409ad4\" (#1772)"},{"Id":"631299023","IsPullRequest":true,"CreatedAt":"2020-06-05T04:43:12","Actor":"imsunhao","Number":"1770","RawContent":null,"Title":"fix: typescript enhancement type Store<any>","State":"closed","Body":"i have a simple case. \r\n\r\nhttps://github.com/imsunhao/student-management-system/tree/feature/vuex-pr","Url":"https://github.com/vuejs/vuex/pull/1770","RelatedDescription":"Closed or merged PR \"fix: typescript enhancement type Store<any>\" (#1770)"},{"Id":"630562744","IsPullRequest":true,"CreatedAt":"2020-06-04T06:59:08","Actor":"RyotaBannai","Number":"1768","RawContent":null,"Title":"docs(ja): fixed few translations","State":"open","Body":"Fixed couples of Japanese translations where are a little bit vague or somewhat wrongly translated.","Url":"https://github.com/vuejs/vuex/pull/1768","RelatedDescription":"Open PR \"docs(ja): fixed few translations\" (#1768)"},{"Id":"630270917","IsPullRequest":false,"CreatedAt":"2020-06-03T19:36:47","Actor":"kanteankit","Number":"1767","RawContent":null,"Title":"Calls to mutations and  actions don't get cancelled when a module is unregistered using `unregisterModule`","State":"open","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mutation-call-after-unregistermodule-v4n3z](https://codesandbox.io/s/mutation-call-after-unregistermodule-v4n3z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Make sure the first page you see is the `Home` page.\r\n2. Click on `Contact` button and immediately click on `Home`\r\n3. Observe the Console.\r\n\r\n\r\n\r\n### What is expected?\r\nNo errors. When the module is unregistered, any running action or mutation calls should also be cancelled.\r\n\r\n### What is actually happening?\r\nThe action/mutation code keeps executing and user sees errors in the Console stating that the module does not exist.\r\n`[vuex] unknown local mutation type: setContact, global type: contact/setContact`\r\n\r\n---\r\nThere are 2 components: `Home.vue` and `Contact.vue`. `Contact.vue` calls an action in it's `mounted` callback. The action `changeContact` mimics the behaviour of an API call and commits a mutation after a delay of 1 second.\r\n\r\nWhat I am trying to do is that when user navigates from one page to another, the modules of the first route should be unregistered. This can be done easily using the `unregisterModule` method. The problem is that any action or mutation calls executed before the unregistering are not removed and they throw errors in the browser Console.\r\n\r\nIn the above sandbox, when user switches from Contact to Home immediately, following things happen:\r\n- `Contact.vue` loads and it's mounted callback is called.\r\n- Inside the `mounted` callback, the `changeContact` action is called\r\n- User goes back to Home. This calls `beforeDestroy` of `Contact.vue` that un-registers the `contact` module.\r\n- The `changeContact` tries to call the `setContact` mutation, but, since the module does not exist, an error message is thrown in the Console `[vuex] unknown local mutation type: setContact, global type: contact/setContact`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1767","RelatedDescription":"Open issue \"Calls to mutations and  actions don't get cancelled when a module is unregistered using `unregisterModule`\" (#1767)"},{"Id":"623548186","IsPullRequest":true,"CreatedAt":"2020-05-29T07:04:19","Actor":"progresivoJS","Number":"1761","RawContent":null,"Title":"docs: Add a translation of an example in actions.md of guide docs","State":"closed","Body":"This PR updates KR translation for actions.md in guide docs.","Url":"https://github.com/vuejs/vuex/pull/1761","RelatedDescription":"Closed or merged PR \"docs: Add a translation of an example in actions.md of guide docs\" (#1761)"},{"Id":"625732572","IsPullRequest":false,"CreatedAt":"2020-05-27T14:13:55","Actor":"uroybd","Number":"1764","RawContent":null,"Title":"mapXXX functions with Vue 3","State":"closed","Body":"How to use mapXXX functions with Vue 3? I've tried but failed.","Url":"https://github.com/vuejs/vuex/issues/1764","RelatedDescription":"Closed issue \"mapXXX functions with Vue 3\" (#1764)"},{"Id":"625075861","IsPullRequest":false,"CreatedAt":"2020-05-26T17:57:22","Actor":"paleo","Number":"1763","RawContent":null,"Title":"Proposal for Vuex 5","State":"open","Body":"### What problem does this feature solve?\r\n\r\n1. It would be convenient if, from the outside, the difference between getters and state's properties were not visible. Getters should act as state properties in the same way that views act as read-only tables in RDBMS.\r\n2. It would be nice if part of a store, including a state and its mutations, could be provided to components as a standalone object, in the same way that we provide an object with methods in OOP programming.\r\n3. Accessing the root store from a Vuex module is a kind of recursive programming, and recursive programming is bad. Additionally, \"namespaced modules\" are a boring non-JS way to think.\r\n4. We need type inference with TypeScript.\r\n5. After trying the composition API, we love composing, and we want to compose.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n\r\n_Notice: I haven't implemented a prototype but I have implemented [the types of a prototype](https://github.com/paleo/vuex5-proposal). I am therefore able to guarantee that all the ideas below are understandable by TypeScript and can produce fully typed stores._\r\n\r\n## Solution to 1: Vuex 3 _state_ is replaced by _innerState_, then now _state_ means something else\r\n\r\nHere is a first store using a brand new `createStore` API:\r\n\r\n```ts\r\nconst category1 = createStore(() => {\r\n  const innerState = {\r\n    id: \"1\",\r\n    name: \"Flowers\"\r\n  }\r\n\r\n  const getters = {\r\n    double: () => innerState.name + innerState.name,\r\n  }\r\n\r\n  const mutations = {\r\n    SET_NAME(name) {\r\n      innerState.name = name\r\n    },\r\n  }\r\n\r\n  return {\r\n    innerState,\r\n    getters,\r\n    mutations,\r\n  }\r\n})\r\n```\r\n\r\nThe `createStore` API takes a builder function as a parameter, which takes no parameter and returns the implementation of a store object. After this function is called by `createStore`, a store object is generated from the implementation.\r\n\r\nIn our store, the **state** property is now a read-only object composed by `innerState` and `getters`:\r\n\r\n```ts\r\nconsole.log(category1.state)\r\n// {\r\n//   id: \"1\"\r\n//   name: \"Flowers\"\r\n//   double: \"FlowersFlowers\"\r\n// }\r\n\r\ncategory1.commit.SET_NAME(\"New name\")\r\n\r\nconsole.log(category1.state)\r\n// {\r\n//   id: \"1\"\r\n//   name: \"New name\"\r\n//   double: \"New nameNew name\"\r\n// }\r\n\r\ncategory1.state.name = \"Other name\" // ERROR: readonly property 'name'\r\n```\r\n\r\n## Solution to 2: Multiple stores can be easily instantiated using a _store builder_\r\n\r\nIf multiple stores need to be created from the same model, then use `createStoreBuilder`. With `createStoreBuilder`, the inner builder function can take any parameters. Here is an example:\r\n\r\n```ts\r\nexport interface CategoryPayload {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport const categoryBuilder = createStoreBuilder((payload: CategoryPayload) => {\r\n  const innerState = payload\r\n\r\n  const getters = {\r\n    double: () => innerState.name + innerState.name,\r\n  }\r\n\r\n  const mutations = {\r\n    SET_NAME(name: string) {\r\n      innerState.name = name\r\n    },\r\n  }\r\n\r\n  return {\r\n    innerState,\r\n    getters,\r\n    mutations,\r\n  }\r\n})\r\n```\r\n\r\nNow, here is how to create the same `category1` as above:\r\n\r\n```ts\r\nconst category1 = categoryBuilder({\r\n  id: \"1\",\r\n  name: \"Flowers\"\r\n})\r\n```\r\n\r\nThe generated builder function simply passes all its parameters to our inner builder function. \r\n\r\n## Solution to 3: _Modules_ and _Root Store_ are replaced by _References_ to _Stores_\r\n\r\nA store is no longer a tree but a node in a network. The parent-child relationship is replaced by **references**: each store can be referenced by zero or several stores.\r\n\r\nFor example, here is how to create a store builder for blog posts, with a reference to a category store:\r\n\r\n```ts\r\nexport interface PostPayload {\r\n  id: string\r\n  title: string\r\n  body?: string\r\n  categoryId?: string\r\n}\r\n\r\nconst postBuilder = createStoreBuilder((payload: PostPayload, category?: CategoryStore) => {\r\n  const innerState = payload\r\n  const references = { category }\r\n\r\n  return {\r\n    innerState,\r\n    getters: {\r\n      fullTitle: () => `${innerState.title} - ${references.category?.state.name}`\r\n    },\r\n    mutations: {\r\n      SET_CATEGORY(category: CategoryStore) {\r\n        innerState.categoryId = category.state.id\r\n        references.category = category\r\n      },\r\n      SET_BODY(body: string) {\r\n        payload.body = body\r\n      },\r\n    },\r\n    references\r\n  }\r\n})\r\n```\r\n\r\nThen, here is how to create a store named `post1` that has a reference to `category1`:\r\n\r\n```ts\r\nconst post1 = postBuilder(\r\n  {\r\n    id: \"1\",\r\n    title: \"Post #1\",\r\n    categoryId: \"1\"\r\n  },\r\n  category1\r\n)\r\n```\r\n\r\nIn the store `post1`, the reference to `category1` is directly accessible as a read-only property `category`:\r\n\r\n```ts\r\nconsole.log(post1.category?.state) // Show the content of the category1 state\r\n\r\nconst category2 = categoryBuilder(/* ... */)\r\npost1.category = category2 // ERROR: readonly property 'category'\r\n\r\npost1.commit.SET_CATEGORY(category2)\r\n\r\nconsole.log(post1.category?.state) // Show the content of the category2 state\r\n```\r\n\r\n## Solution to 3 (bis): References can be single stores, but also: lists, maps, and sets of stores\r\n\r\nTo illustrate that, let's create a single store `globalData` that references all the existing categories in a `Map`:\r\n\r\n```ts\r\nexport const globalData = createStore(() => {\r\n  const categories = new Map([\r\n    {\r\n      id: \"1\",\r\n      name: \"Flowers\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"Animals\"\r\n    },\r\n  ].map(item => ([item.id, categoryBuilder(item)])))\r\n\r\n  const mutations = {\r\n    ADD_CATEGORY(payload: CategoryPayload) {\r\n      categories.set(payload.id, categoryBuilder(payload))\r\n    },\r\n  }\r\n\r\n  return {\r\n    mutations,\r\n    references: { categories },\r\n  }\r\n})\r\n```\r\n\r\nThen, our previous `postBuilder` can be improved using `globalData` and `payload.categoryId` to get rid of its second parameter:\r\n\r\n```ts\r\nconst postBuilder = createStoreBuilder((payload: PostPayload) => {\r\n  const innerState = payload\r\n\r\n  const references = {\r\n    category: payload.categoryId !== undefined\r\n      ? globalData.categories.get(payload.categoryId)\r\n      : undefined\r\n  }\r\n\r\n  // … Same implementation as before …\r\n}\r\n```\r\n\r\nNote: A Map, Set or Array of references that is exposed by a store, is in fact a `ReadonlyMap`, a `ReadonlySet` or a `readonly array[]`. It shouldn't be possible to mutate these collections from outside the store implementation. Only store's mutations can mutate the collections in `references`.\r\n\r\n## Solution to 4: Types with TypeScript\r\n\r\nTyping is provided by inference:\r\n\r\n```ts\r\nexport type CategoryStore = ReturnType<typeof categoryBuilder>\r\nexport type PostStore = ReturnType<typeof postBuilder>\r\nexport type GlobalDataStore = typeof globalData\r\n```\r\n\r\nMutations are called and typed in the same way as [direct-vuex](https://github.com/paleo/direct-vuex):\r\n\r\n```ts\r\ncategory1.commit.SET_NAME(\"New name\")\r\n```\r\n\r\nTyping can be tested by cloning [this repo](https://github.com/paleo/vuex5-proposal).\r\n\r\n## Solution to 5: The type of the implementation object\r\n\r\nAs you may have noticed, the build function passed to `createStore` or `createStoreBuilder` must return an implementation object that follows a determined structure. Here is this structure in TypeScript syntax:\r\n\r\n```ts\r\ninterface StoreImplementation {\r\n  innerState?: object\r\n  getters?: { [name: string]: () => any }\r\n  mutations?: { [name: string]: (payload?: any) => void }\r\n  references?: { [name: string]: AnyStore | Array<AnyStore> | Map<any, AnyStore> | Set<AnyStore> | undefined }\r\n}\r\n```\r\n\r\nThe properties are all optional. The properties `getters`, `mutations`, `references` are dictionary (key-value) objects.\r\n\r\n## Other points to discuss\r\n\r\n### _Actions_ are moved out of the store\r\n\r\nI suggest removing actions from Vuex because they don't need to have access to the store's internal implementation. By convention, we can call **action** a function that takes a store as the first parameter, and an optional payload as the second parameter.\r\n\r\n```ts\r\nexport async function savePostBody({ commit, state }: PostStore, body: string) {\r\n  await httpSendSomewhere({ id: state.id, body })\r\n  commit.SET_BODY(body)\r\n}\r\n```\r\n\r\nIt is then not necessary to have a `dispatch` API. Just call the function using the correct store as a parameter when you need it.\r\n\r\n### API that are attached to the store, like `watch`\r\n\r\nI suggest that additional API that have to be attached to a store, can be grouped in a `st` property (store tools). Then, a store has the following structure:\r\n\r\n```\r\n{\r\n  ... readonly references to other stores ...\r\n  state: {\r\n    ... readonly innerState's properties ...\r\n    ... getters ...\r\n  },\r\n  commit: {\r\n    ... mutations ...\r\n  },\r\n  st: {\r\n    watch: // Here an attached API provided by Vuex\r\n  },\r\n  readonly: // see the next section\r\n}\r\n```\r\n\r\nIn the types of my proposal, I currently provide the typing of a `watch` object that contains a way to subscribe to each mutation. Maybe not useful.\r\n\r\n### A _read-only_ version of the store\r\n\r\nI suggest that each store provides a `readonly` property, which contains a version of the same store but without the ability to `commit`. Its structure could be:\r\n\r\n```\r\n{\r\n  ... readonly references to the 'readonly' property of stores ...\r\n  state: {\r\n    ... readonly innerState's properties ...\r\n    ... getters ...\r\n  }\r\n}\r\n```\r\n\r\n### But what if I need the root state somewhere?\r\n\r\nNo, you don't need the whole state of your application. When you need to access the state of a particular store, just reference that store from your store.\r\n\r\n### Memory and performance\r\n\r\nAn implementation with a builder function has a trade-off: it doesn't allow to use JS prototypes, and each function (mutation, getter) has to be created for each instance of a store. I guess there is a similar issue with the Vue composition API…\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1763","RelatedDescription":"Open issue \"Proposal for Vuex 5\" (#1763)"},{"Id":"622331507","IsPullRequest":false,"CreatedAt":"2020-05-21T10:40:44","Actor":"yeyaolong","Number":"1760","RawContent":null,"Title":"When the ref variable changes, the vuex variable is changed synchronously","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm sorry to fill a random link in `Link to minimal reproduction` , because I can't access to these pages.\r\n\r\n\r\n\r\n### issue description\r\n everything is normal until I call `updateVuex()` 。\r\n\r\nafter calling `updateVuex()` , then I call the `add()` to change variable `count`, the computed variable `computedByVuex` is changed synchronously.\r\n\r\n```\r\n// /store/indexjs\r\nimport Vuex from 'vuex'\r\n\r\nexport default Vuex.createStore({\r\n  state: {\r\n    test: {\r\n      a: 1\r\n    }\r\n  },\r\n  mutations: {\r\n    setTestA(state, value) {\r\n      console.log('mutations setTestA is called')\r\n      state.test.a = value;\r\n    }\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n});\r\n```\r\n```\r\n// test.vue\r\n<template>\r\n    <div class=\"test-vuex\">\r\n        <h1>test page: {{count}}</h1>\r\n        <h1>computedByVuex: {{computedByVuex}}</h1>\r\n        <button @click=\"add\">add</button>\r\n        <button @click=\"updateVuex\">updateVuex</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watchEffect, getCurrentInstance, computed } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const count = ref(0);\r\n        const add = () => {\r\n            count.value  \r\n        }\r\n        \r\n        const { ctx } = getCurrentInstance();  // 获取当前实例\r\n        const computedByVuex = computed(() => ctx.$store.state.test.a);\r\n\r\n        watchEffect(() => {\r\n            console.log('computedByVuex',  ctx.$store.state.test.a);\r\n        }, {\r\n            flush: 'pre'\r\n        })\r\n\r\n        const updateVuex = () => {\r\n            ctx.$store.commit('setTestA', count);\r\n        }\r\n\r\n        return {\r\n            count,\r\n            computedByVuex,\r\n            add,\r\n            updateVuex\r\n        }\r\n    }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nwhen `add` function is called the vuex variable won't changed \r\n\r\n### What is actually happening?\r\nWhen the ref variable changes, the vuex variable is changed synchronously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1760","RelatedDescription":"Closed issue \"When the ref variable changes, the vuex variable is changed synchronously\" (#1760)"},{"Id":"622319316","IsPullRequest":false,"CreatedAt":"2020-05-21T07:51:25","Actor":"yeyaolong","Number":"1759","RawContent":null,"Title":"When the ref variable changes, the vuex variable is changed synchronously","State":"closed","Body":"\r\nmy project is created by @vue/cli 4.3.1\r\n\r\n## description\r\nbefore I call `updateVuex` function, everything is normal。\r\n\r\nbut after  calling `updateVuex`function, then  I call the `add` function to change `count` variable, the vuex variable is changed synchronously.\r\n\r\n```\r\n\r\n// /store/indexjs\r\nimport Vuex from 'vuex'\r\n\r\nexport default Vuex.createStore({\r\n  state: {\r\n    test: {\r\n      a: 1\r\n    }\r\n  },\r\n  mutations: {\r\n    setTestA(state, value) {\r\n      console.log('mutations setTestA is called')\r\n      state.test.a = value;\r\n    }\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n});\r\n```\r\n\r\n```\r\n// test.vue\r\n<template>\r\n    <div class=\"test-vuex\">\r\n        <h1>test page: {{count}}</h1>\r\n        <h1>computedByVuex: {{computedByVuex}}</h1>\r\n        <button @click=\"add\">add</button>\r\n        <button @click=\"updateVuex\">updateVuex</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watchEffect, getCurrentInstance, computed } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const count = ref(0);\r\n        const add = () => {\r\n            count.value++\r\n        }\r\n        \r\n        const { ctx } = getCurrentInstance();  // 获取当前实例\r\n        const computedByVuex = computed(() => ctx.$store.state.test.a);\r\n\r\n        watchEffect(() => {\r\n            console.log('computedByVuex',  ctx.$store.state.test.a);\r\n        }, {\r\n            flush: 'pre'\r\n        })\r\n\r\n        const updateVuex = () => {\r\n            ctx.$store.commit('setTestA', count);\r\n        }\r\n\r\n        return {\r\n            count,\r\n            computedByVuex,\r\n            add,\r\n            updateVuex\r\n        }\r\n    }\r\n}\r\n</script>\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1759","RelatedDescription":"Closed issue \"When the ref variable changes, the vuex variable is changed synchronously\" (#1759)"},{"Id":"621504825","IsPullRequest":false,"CreatedAt":"2020-05-21T04:35:50","Actor":"zzcong","Number":"1758","RawContent":null,"Title":"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods","State":"closed","Body":"### What problem does this feature solve?\r\nIn strict mode, when you make a deep copy of an object inside 'state', the 'dep' in the object will be copied as well, and an error will be reported: 'do not mutate vuex store state outside mutation handlers.'\r\n\r\n### What does the proposed API look like?\r\nfunction deepCopy (name) { return JSON.parse(JSON.stringify(state[name])) }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1758","RelatedDescription":"Closed issue \"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods\" (#1758)"},{"Id":"621451926","IsPullRequest":false,"CreatedAt":"2020-05-20T12:40:03","Actor":"karel-3d","Number":"1756","RawContent":null,"Title":"Vuex getters are not type checked in typescript","State":"closed","Body":"### What problem does this feature solve?\r\nThis feature will correctly check types of store getters.\r\n\r\nCurrently, getters have type `getters: any`.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nvuex getters are defined (maybe) correctly in https://github.com/ClickerMonkey/vuex-typescript-interface/blob/master/index.d.ts\r\n\r\n```ts\r\nexport type GetterKeys<T> = {\r\n  [P in keyof T]-?: IfEquals<{ [Q in P]: T[P] }, { -readonly [Q in P]: T[P] }, never, P>\r\n}[keyof T];\r\n\r\n\r\nexport type GetterInputFor<T> = {\r\n  [K in GetterKeys<T>]: T[K];\r\n};\r\n\r\nexport type MergedGettersFor<T> = {\r\n  [M in MergedModuleKeys<T>]: \r\n    T extends { modules: { [P in M]: infer E } } \r\n      ? GettersFor<E> \r\n      : never;\r\n};\r\n\r\nexport type GettersFor<T> = \r\n  GetterInputFor<T> & \r\n  Flatten<MergedGettersFor<T>>;\r\n```\r\n\r\n~I am not sure if this is actually correct. I can try it and make a PR if there is interest.~\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1756","RelatedDescription":"Closed issue \"Vuex getters are not type checked in typescript\" (#1756)"},{"Id":"621502991","IsPullRequest":false,"CreatedAt":"2020-05-20T06:44:13","Actor":"zzcong","Number":"1757","RawContent":null,"Title":"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods","State":"closed","Body":"In strict mode, when you make a deep copy of an object inside 'state', the 'dep' in the object will be copied as well, and an error will be reported: 'do not mutate vuex store state outside mutation handlers.'","Url":"https://github.com/vuejs/vuex/issues/1757","RelatedDescription":"Closed issue \"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods\" (#1757)"},{"Id":"621411568","IsPullRequest":false,"CreatedAt":"2020-05-20T02:28:56","Actor":"ssly","Number":"1755","RawContent":null,"Title":"Vuex.createStore throw TS2339 in production with vue-cli and vue add vue-next","State":"closed","Body":"1. vue create vue-template(typescript with no class-style)\r\n2. vue add vue-next\r\n3. npm run serve\r\n\r\nsome errors:\r\n1. TS2339: Property 'createStore' does not exist on type \r\n2. main.ts createApp(App) throw TS2345: Argument of type 'typeof import","Url":"https://github.com/vuejs/vuex/issues/1755","RelatedDescription":"Closed issue \"Vuex.createStore throw TS2339 in production with vue-cli and vue add vue-next\" (#1755)"},{"Id":"620153634","IsPullRequest":false,"CreatedAt":"2020-05-18T13:29:44","Actor":"Ewelina436","Number":"1754","RawContent":null,"Title":"lazy load doesn't for registerModule ","State":"closed","Body":"### Version\r\n3.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-load-module-d2tss?file=/src/main.js](https://codesandbox.io/s/vuex-load-module-d2tss?file=/src/main.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. click button 'check' - open Console\r\n\r\n### What is expected?\r\n\r\naccess to the newly registered module\r\n\r\n### What is actually happening?\r\nI get the answer 'undefined'\r\n\r\n---\r\n\r\nWhen I try to import statically everything works ... However, it is very important for me to be lazy. Please help ...\r\n\r\nIn Vue.js devtools  - I see information that the module has been registered but is empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1754","RelatedDescription":"Closed issue \"lazy load doesn't for registerModule \" (#1754)"},{"Id":"620139044","IsPullRequest":false,"CreatedAt":"2020-05-18T11:40:28","Actor":"Ewelina436","Number":"1753","RawContent":null,"Title":"Lazy load  doesn't  work for registerModule","State":"closed","Body":"\r\nI try lazy load module vuex by registerModule, however, when it gets called \"undefined\". \r\nI found an example that had to work here, but don't work [here at the end](https://itnext.io/vue-js-app-performance-optimization-part-3-lazy-loading-vuex-modules-ed67cf555976) - \r\nMy code:\r\n```\r\ncreated(){\r\n   const state = () => import('./state');\r\n   this.$store.registerModule(\"testowa\", state);\r\n}\r\n```\r\n\r\nWhen I try to import statically everything works... However, it is very important for me to be lazy. Please help...\r\n","Url":"https://github.com/vuejs/vuex/issues/1753","RelatedDescription":"Closed issue \"Lazy load  doesn't  work for registerModule\" (#1753)"},{"Id":"619941381","IsPullRequest":false,"CreatedAt":"2020-05-18T06:20:56","Actor":"xiaodel","Number":"1752","RawContent":null,"Title":"[Vue warn]: Failed to mount component: template or render function not defined. ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n(found in <Root>)","Url":"https://github.com/vuejs/vuex/issues/1752","RelatedDescription":"Closed issue \"[Vue warn]: Failed to mount component: template or render function not defined. \" (#1752)"},{"Id":"618733815","IsPullRequest":true,"CreatedAt":"2020-05-17T05:10:22","Actor":"kiaking","Number":"1750","RawContent":null,"Title":"docs(ja): update the latest changes","State":"closed","Body":"This PR adds JA translation for the latest updates.","Url":"https://github.com/vuejs/vuex/pull/1750","RelatedDescription":"Closed or merged PR \"docs(ja): update the latest changes\" (#1750)"},{"Id":"619147216","IsPullRequest":false,"CreatedAt":"2020-05-15T18:26:15","Actor":"SumNeuron","Number":"1751","RawContent":null,"Title":"State undefined and Duplicate registration for unclear reasons?","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://gitlab.com/SumNeuron/v-focus](https://gitlab.com/SumNeuron/v-focus)\r\n\r\n### Steps to reproduce\r\nnpm i \r\nnpm run dev\r\nhover over card\r\n\r\n### What is expected?\r\nmodule only registered once\r\nstate is not undefined\r\n\r\n### What is actually happening?\r\nmodule registered many times\r\nstate is undefined\r\n\r\n---\r\nI have a very simple Vue component and Vuex Module (that I developed in Nuxt but intend to rollup https://gitlab.com/SumNeuron/v-focus). However I am getting some crazy weird issues. \r\n\r\n1st the module (https://gitlab.com/SumNeuron/v-focus/-/blob/master/modules/v-focus.js),\r\n\r\n```js\r\nfocusMode ({ commit, state }) {\r\n  if (state._focusTimeout) {\r\n    return\r\n  }\r\n  commit('setFocusTimeout', setTimeout(() => commit('setFocusMode', true), state.focusTime))\r\n},\r\n```\r\n\r\nI get:\r\n\"state is undefined\"\r\n\r\nAs for the component (https://gitlab.com/SumNeuron/v-focus/-/blob/master/components/VFocus.vue)\r\nwhere I have the these two methods\r\n\r\n```js\r\nhasModule() {\r\n  let vuexHasModule = this.$store.hasModule(this.$moduleName) === true\r\n  let doubleCheck = (this.$store.state && this.$store.state[this.$moduleName] !== undefined)\r\n  return vuexHasModule && doubleCheck\r\n},\r\nregister() {\r\n  if (!this.hasModule()) {\r\n    try {\r\n      if (!this.hasModule()) {\r\n        this.$store.registerModule(this.$moduleName, VFocusModule)\r\n      }\r\n    } catch (e) {\r\n      if (!this.isSilent) {\r\n        console.error(e)\r\n      }\r\n    } finally {\r\n      this.$emit('register:v-focus')\r\n    }\r\n  }\r\n},\r\n```\r\nI am getting vuex warnings of duplicate registration. How? Does store.hasModule try to register the module itself?\r\n\r\n(This is based off nuxtjs's store)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1751","RelatedDescription":"Closed issue \"State undefined and Duplicate registration for unclear reasons?\" (#1751)"},{"Id":"617823731","IsPullRequest":true,"CreatedAt":"2020-05-14T02:44:46","Actor":"cuebit","Number":"1749","RawContent":null,"Title":"refactor: remove node env flag","State":"closed","Body":"Replaces the orphaned `process.env.NODE_ENV` with the new global `__DEV__`.\r\n","Url":"https://github.com/vuejs/vuex/pull/1749","RelatedDescription":"Closed or merged PR \"refactor: remove node env flag\" (#1749)"},{"Id":"617654141","IsPullRequest":false,"CreatedAt":"2020-05-14T01:49:15","Actor":"bitquality","Number":"1748","RawContent":null,"Title":"Uncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vuex](https://new-issue.vuejs.org/?repo=vuejs/vuex)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nI get the following error while i try to import the plugin component with vuex modules in another vue project.\r\n\r\n```\r\nUncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.\r\nFollowing is my plugin code with vuex modules\r\n```\r\n\r\n        //mystore/mod1/index.ts:\r\n\r\n        import { actions } from \"./actions\"\r\n        import { getters } from \"./getters\"\r\n        import { mutations } from \"./mutations\"\r\n        import { state } from \"./state\"\r\n\r\n        export default {\r\n          state,\r\n          mutations,\r\n          getters,\r\n          actions\r\n        }\r\n\r\n        //mystore/index.js:\r\n\r\n        import Vue from 'vue';\r\n        import Vuex from 'vuex';\r\n        import countermod  from './countermod';\r\n\r\n\r\n        Vue.use(Vuex);\r\n\r\n        export default new Vuex.Store({\r\n          modules: {\r\n            countermod\r\n          },\r\n        });\r\n\r\n\r\n     ","Url":"https://github.com/vuejs/vuex/issues/1748","RelatedDescription":"Closed issue \"Uncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.\" (#1748)"},{"Id":"615979664","IsPullRequest":true,"CreatedAt":"2020-05-11T15:58:16","Actor":"Alex-Sokolov","Number":"1747","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1747","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1747)"},{"Id":"612713367","IsPullRequest":true,"CreatedAt":"2020-05-11T10:09:11","Actor":"caugner","Number":"1744","RawContent":null,"Title":"docs: add Dynamic module hot reloading example","State":"closed","Body":"I have looked for a way to load and hot reload Vuex modules systematically, rather than specifying them explictly.\r\n\r\nAdapted from: https://github.com/kazupon/vue-i18n/pull/865","Url":"https://github.com/vuejs/vuex/pull/1744","RelatedDescription":"Closed or merged PR \"docs: add Dynamic module hot reloading example\" (#1744)"},{"Id":"614612132","IsPullRequest":true,"CreatedAt":"2020-05-09T06:19:24","Actor":"kiaking","Number":"1746","RawContent":null,"Title":"docs: add docs for the new `error` option for `subscribeAction` method","State":"closed","Body":"Add API docs for the new `error` option added to the `subscribeAction` method via #1740.","Url":"https://github.com/vuejs/vuex/pull/1746","RelatedDescription":"Closed or merged PR \"docs: add docs for the new `error` option for `subscribeAction` method\" (#1746)"},{"Id":"613757291","IsPullRequest":false,"CreatedAt":"2020-05-08T09:18:04","Actor":"noozzz","Number":"1745","RawContent":null,"Title":"Adding mutateAction","State":"closed","Body":"### What problem does this feature solve?\r\nThere are confusion about action vs commit among developers.\r\n\r\nMany developers suggest to use only dispatch() in components and call commits() only in actions in order to separate responsibilities and to make code reusable. However, someone suggests that it's okay to use commit directly in components when it is so obvious.\r\n\r\nIn order to take the benefits of both approach, I suggests a simple mutateAction, which can mutate state directly like mutations and called by components in a same way as normal actions. In summary, the mutateAction is an action from the component's point of view, while it is similar to mutation in the store.\r\n\r\nWith this feature implemented, I think it is safe to insist to use only dispatch() in components.\r\n\r\n### What does the proposed API look like?\r\nIn the store:\r\n```javascript\r\nmutateActions: {\r\n   setSomeState (state, payload) {\r\n     state.some = payload\r\n  }\r\n}\r\n```\r\nIn the components:\r\n```javascript\r\nthis.$store.dispatch('setSomeState', payload)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1745","RelatedDescription":"Closed issue \"Adding mutateAction\" (#1745)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-10T05:30:47.3850372Z","RunDurationInMilliseconds":1834}