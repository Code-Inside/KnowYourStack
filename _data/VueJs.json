{"Data":{"Vue-Issues":{"Issues":[{"Id":"751784300","IsPullRequest":false,"CreatedAt":"2020-11-26T19:01:20","Actor":"dszymon","Number":"11794","RawContent":null,"Title":"SSR \"context.styles\" is not defined on webpack 4","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://github.com/Szymon-D/VueSsrStylesReproduction](https://github.com/Szymon-D/VueSsrStylesReproduction)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repository\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm start`\r\n5. Open http://localhost:8080\r\n6. Check `head` tag, there are no inline styles from the current route\r\n\r\n### What is expected?\r\nThere should be `style` tags with data-vue-ssr-id attribute\r\n\r\n### What is actually happening?\r\nOutput includes only `link` tags to external CSS files\r\n\r\n---\r\nThe issue is related to replacement of `extract-text-webpack-plugin` with `extract-css-chunks-webpack-plugin`. \r\nIt seems that with newer plugins, `vue-style-loader` doesn't get called in all cases where it would as the value of the `fallback` option to the legacy plugin.\r\nThere is no `styles` field on the context after rendering the app, as you can see here\r\nhttps://github.com/vuejs/vue/blob/4f81b5db9ab553ca0abe0706ac55ceb861344330/packages/vue-server-renderer/build.dev.js#L9397\r\nit's defined only in case if there's a `_renderStyles` function, which comes from the `vue-style-loader`\r\nhttps://github.com/vuejs/vue-style-loader/blob/477c25e1a506c54e18cb443f7981aed6d4e80e65/lib/addStylesServer.js#L16\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11794","RelatedDescription":"Open issue \"SSR \"context.styles\" is not defined on webpack 4\" (#11794)"},{"Id":"750048827","IsPullRequest":true,"CreatedAt":"2020-11-24T22:11:19","Actor":"HoldYourWaffle","Number":"11793","RawContent":null,"Title":"types: Change Element types to HTMLElement","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: typings update\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No, `HTMLElement` extends `Element`\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**(Hopefully) convincing reason:**\r\nThere are a lot of properties missing in the plain `Element` interface that are perfectly available when referencing these properties (in my case it was `offsetHeight`).\r\n_As far as I know_ there is no reason why these values can't be typed as the more elaborate `HTMLElement`, but I'm by no means a Vue-expert.\r\n\r\nSince this change is trivial I opted to directly create a PR instead of waiting for a response on an issue.","Url":"https://github.com/vuejs/vue/pull/11793","RelatedDescription":"Closed or merged PR \"types: Change Element types to HTMLElement\" (#11793)"},{"Id":"749853180","IsPullRequest":false,"CreatedAt":"2020-11-24T17:18:05","Actor":"mixxor","Number":"11792","RawContent":null,"Title":"Binding to Bracket Attributes in AMP.","State":"closed","Body":"### What problem does this feature solve?\r\nIf i want to bind something to a bracket Attribute, used in AMP e.g.:\r\n\r\nhttps://amp.dev/documentation/examples/components/amp-bind/#basic-usage\r\n\r\n:[hidden]=\"'initalState.inputFieldCount > '   index\"\r\n\r\nit will not work. \r\n\r\nI am using Vue.js2    nuxt to render my AMP content. Any Ideas about this?\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n:[hidden]=\"'initalState.inputFieldCount > '   index\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11792","RelatedDescription":"Closed issue \"Binding to Bracket Attributes in AMP.\" (#11792)"},{"Id":"749722469","IsPullRequest":true,"CreatedAt":"2020-11-24T14:51:13","Actor":"vue-bot","Number":"11791","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11791","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11791)"},{"Id":"749486160","IsPullRequest":true,"CreatedAt":"2020-11-24T08:20:57","Actor":"posva","Number":"11790","RawContent":null,"Title":"fix(runtime): use key variable for svg innerHTML","State":"open","Body":"Close #11787\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11790","RelatedDescription":"Open PR \"fix(runtime): use key variable for svg innerHTML\" (#11790)"},{"Id":"749184680","IsPullRequest":false,"CreatedAt":"2020-11-24T08:13:31","Actor":"lchrennew","Number":"11788","RawContent":null,"Title":"DIRECTLY inject grandsons' slots to grand parent component","State":"closed","Body":"### What problem does this feature solve?\r\nslots in the grand son that need to be exposed in its grand parent component must be expose to its parent components and then be handed off to its grand parents components by its parent components.\r\n\r\n### What does the proposed API look like?\r\nin grandson component:\r\n```\r\n<slot provide name=\"slotOfGrandson\"/>\r\n```\r\nin grandparent component:\r\n```\r\n<template inject #slotOfGrandson/>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11788","RelatedDescription":"Closed issue \"DIRECTLY inject grandsons' slots to grand parent component\" (#11788)"},{"Id":"749282345","IsPullRequest":false,"CreatedAt":"2020-11-24T08:12:24","Actor":"hainee","Number":"11789","RawContent":null,"Title":"bind async property","State":"closed","Body":"### What problem does this feature solve?\r\nCan vuejs support binding of asynchronous properties?\r\n\r\n### What does the proposed API look like?\r\nvar data = {}\r\nObject.defineProperty(data, 'asyncProperty', {\r\n  async get() {\r\n    // async network or database query\r\n    return true;\r\n  }\r\n});\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11789","RelatedDescription":"Closed issue \"bind async property\" (#11789)"},{"Id":"748994491","IsPullRequest":false,"CreatedAt":"2020-11-23T17:33:34","Actor":"blimmer","Number":"11787","RawContent":null,"Title":"Remove IE11 support for v-html SVGs when IE support is not needed","State":"open","Body":"### What problem does this feature solve?\r\nI'm a developer working on a browser extension that uses Vue.js. I'm currently working on porting my extension over to Firefox. Mozilla has an automated validation process that determines whether or not your extension requires manual review before the extension is released to users.\r\n\r\nOne issue I'm running into is that the Vue runtime bundle includes assignment to innerHTML ([src](https://github.com/vuejs/vue/blob/v2.6.12/src/platforms/web/runtime/modules/dom-props.js#L54)), which generates this warning:\r\n\r\n![Screen Shot 2020-11-23 at 10 32 47 AM](https://user-images.githubusercontent.com/630449/99995198-452f0680-2d77-11eb-8fef-3372f612d1f6.png)\r\n\r\nFrom what I can tell from the [code comment](https://github.com/vuejs/vue/blob/v2.6.12/src/platforms/web/runtime/modules/dom-props.js#L52) and the [PR where this logic was added](https://github.com/vuejs/vue/pull/8652), it's only there for IE11 support.\r\n\r\nIt would be nice if there were a way for us to opt-out of this behavior since our browser extension doesn't support IE11. What I mean by \"opt-out\" is that the `innerHTML` assignment would not be included in the `vue-cli-service build` output.\r\n\r\n### What does the proposed API look like?\r\nIdeally, this switch could be based on the browsers we have configured in our `.browserslistrc`. We currently only support the last 5 versions of Firefox and Chrome, so we don't need any IE11 fallbacks. Though, I'm not sure if any introspection/updating of the Vue distfiles are done at build-time, so that might be a challenge.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11787","RelatedDescription":"Open issue \"Remove IE11 support for v-html SVGs when IE support is not needed\" (#11787)"},{"Id":"748178851","IsPullRequest":false,"CreatedAt":"2020-11-22T09:32:24","Actor":"chenguzhen87","Number":"11786","RawContent":null,"Title":"在函数式组件中，在options对象中设置为functional= true报错，在template 设置为functional正常","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://xxx](http://xxx)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```html\r\n<template>\r\n  <div class=\"loadall\">\r\n    {{ text }}\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"LoadAllTips\",\r\n  functional: true,\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      default: \"我也是有底线的\"\r\n    }\r\n  }\r\n};\r\n</script>\r\n```\r\n### What is expected?\r\n不报错，能正常展示数据\r\n\r\n### What is actually happening?\r\nvue.runtime.esm.js?2b0e:619 [Vue warn]: Error in render: \"TypeError: Cannot read property '$createElement' of undefined\"\r\n\r\nfound in\r\n```javascript\r\n---> <GoHoosheha> at src/views/GoHoosheha/index.vue\r\n       <App> at src/App.vue\r\n         <Root>\r\nwarn @ vue.runtime.esm.js?2b0e:619\r\nlogError @ vue.runtime.esm.js?2b0e:1884\r\nglobalHandleError @ vue.runtime.esm.js?2b0e:1879\r\nhandleError @ vue.runtime.esm.js?2b0e:1839\r\nVue._render @ vue.runtime.esm.js?2b0e:3550\r\nupdateComponent @ vue.runtime.esm.js?2b0e:4066\r\nget @ vue.runtime.esm.js?2b0e:4479\r\nrun @ vue.runtime.esm.js?2b0e:4554\r\nflushSchedulerQueue @ vue.runtime.esm.js?2b0e:4310\r\neval @ vue.runtime.esm.js?2b0e:1980\r\nflushCallbacks @ vue.runtime.esm.js?2b0e:1906\r\nPromise.then (async)\r\ntimerFunc @ vue.runtime.esm.js?2b0e:1933\r\nnextTick @ vue.runtime.esm.js?2b0e:1990\r\nqueueWatcher @ vue.runtime.esm.js?2b0e:4402\r\nupdate @ vue.runtime.esm.js?2b0e:4544\r\nnotify @ vue.runtime.esm.js?2b0e:730\r\nreactiveSetter @ vue.runtime.esm.js?2b0e:1055\r\nproxySetter @ vue.runtime.esm.js?2b0e:4631\r\neval @ index.vue?6ced:203\r\nPromise.then (async)\r\nactivityList @ index.vue?6ced:197\r\nmounted @ index.vue?6ced:167\r\ninvokeWithErrorHandling @ vue.runtime.esm.js?2b0e:1854\r\ncallHook @ vue.runtime.esm.js?2b0e:4219\r\ninsert @ vue.runtime.esm.js?2b0e:3139\r\ninvokeInsertHook @ vue.runtime.esm.js?2b0e:6346\r\npatch @ vue.runtime.esm.js?2b0e:6565\r\nVue._update @ vue.runtime.esm.js?2b0e:3945\r\nupdateComponent @ vue.runtime.esm.js?2b0e:4066\r\nget @ vue.runtime.esm.js?2b0e:4479\r\nWatcher @ vue.runtime.esm.js?2b0e:4468\r\nmountComponent @ vue.runtime.esm.js?2b0e:4073\r\nVue.$mount @ vue.runtime.esm.js?2b0e:8415\r\neval @ main.js?56d7:64\r\n./src/main.js @ app.js:2412\r\n__webpack_require__ @ app.js:854\r\nfn @ app.js:151\r\n1 @ app.js:2784\r\n__webpack_require__ @ app.js:854\r\ncheckDeferredModules @ app.js:46\r\n(anonymous) @ app.js:994\r\n(anonymous) @ app.js:997\r\nvue.runtime.esm.js?2b0e:1888 TypeError: Cannot read property '$createElement' of undefined\r\n    at render (eval at ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"de1e4f2c-vue-loader-template\"}!./node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js?!./src/components/LoadAllTips.vue?vue&type=template&id=22dcd933&scoped=true& (app.js:1402), <anonymous>:6:16)\r\n    at options.render (index.js?6435:83)\r\n    at createFunctionalComponent (vue.runtime.esm.js?2b0e:3058)\r\n    at createComponent (vue.runtime.esm.js?2b0e:3231)\r\n    at _createElement (vue.runtime.esm.js?2b0e:3422)\r\n    at createElement (vue.runtime.esm.js?2b0e:3353)\r\n    at vm._c (vue.runtime.esm.js?2b0e:3491)\r\n    at Proxy.render (eval at ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"de1e4f2c-vue-loader-template\"}!./node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js?!./src/views/GoHoosheha/index.vue?vue&type=template&id=63325634&scoped=true& (app.js:1462), <anonymous>:142:51)\r\n    at VueComponent.Vue._render (vue.runtime.esm.js?2b0e:3548)\r\n    at VueComponent.updateComponent (vue.runtime.esm.js?2b0e:4066)\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11786","RelatedDescription":"Closed issue \"在函数式组件中，在options对象中设置为functional= true报错，在template 设置为functional正常\" (#11786)"},{"Id":"747988178","IsPullRequest":true,"CreatedAt":"2020-11-21T10:00:44","Actor":"posva","Number":"11785","RawContent":null,"Title":"chore: up yarn.lock","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11785","RelatedDescription":"Closed or merged PR \"chore: up yarn.lock\" (#11785)"},{"Id":"747970826","IsPullRequest":true,"CreatedAt":"2020-11-21T09:53:10","Actor":"ygj6","Number":"11784","RawContent":null,"Title":"chore: fix npm test on Windows","State":"closed","Body":"close vuejs#11782\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11784","RelatedDescription":"Closed or merged PR \"chore: fix npm test on Windows\" (#11784)"},{"Id":"747126413","IsPullRequest":false,"CreatedAt":"2020-11-21T09:53:10","Actor":"ygj6","Number":"11782","RawContent":null,"Title":"npm test fails on Windows","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/package.json](https://github.com/vuejs/vue/blob/dev/package.json)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nAfter cloning the vue repo, run the following command\r\n```\r\nyarn\r\nnpm test\r\n```\r\n\r\n### What is expected?\r\nAll the test cases passed\r\n\r\n### What is actually happening?\r\nFailed at the vue@2.6.12 test:e2e script.\r\n```\r\nRunning:  commits\r\n × Timed out while waiting for element <li> to be present for 5000 milliseconds.  - expected \"visible\" but got: \"not found\"\r\n    at Object.commits (D:\\git\\vue\\test\\e2e\\specs\\commits.js:5:8)\r\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)\r\n\r\nFAILED:  1 assertions failed (8.121s)\r\n```\r\n\r\n---\r\nMy OS version is windows 10 and node version is v12.16.1\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11782","RelatedDescription":"Closed issue \"npm test fails on Windows\" (#11782)"},{"Id":"747957796","IsPullRequest":true,"CreatedAt":"2020-11-21T06:23:10","Actor":"teach-tian","Number":"11783","RawContent":null,"Title":"高祥的推送","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11783","RelatedDescription":"Closed or merged PR \"高祥的推送\" (#11783)"},{"Id":"746771551","IsPullRequest":false,"CreatedAt":"2020-11-19T18:41:17","Actor":"ThomasLandauer","Number":"11781","RawContent":null,"Title":"Unchecking a radiobutton not working with `v-on:click.prevent` on another radiobutton with same `name`","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0vxoaz75/](https://jsfiddle.net/0vxoaz75/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the \"Unset\" radiobutton.\r\n\r\n### What is expected?\r\nThe checked radiobutton (top row) should be unchecked.\r\n\r\n### What is actually happening?\r\nNothing.\r\n\r\n---\r\n* Vue DevTools are showing me that the value is actually being set to `null`. But the view isn't updated.\r\n* If I do the value change inside DevTools(i.e. without clicking), it works as expected.\r\n* Or when I remove the `name` from the \"Unset\" radiobutton, it works too.\r\n* Or when I remove `.prevent`, it works too. From my understanding, `.prevent` in this case should only prevent the clicked radiobutton from getting checked; not prevent the others from being unchecked.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11781","RelatedDescription":"Closed issue \"Unchecking a radiobutton not working with `v-on:click.prevent` on another radiobutton with same `name`\" (#11781)"},{"Id":"746383458","IsPullRequest":false,"CreatedAt":"2020-11-19T09:04:14","Actor":"maoberlehner","Number":"11780","RawContent":null,"Title":"staticClass on wrapped async component not rendered on the server by vue-server-renderer","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-issue-staticclass-on-wrapped-async-component-not-rendered-on-the-server-by-vue-server-renderer-nur3o?file=/_LOOK_HERE/test.html](https://codesandbox.io/s/vue-issue-staticclass-on-wrapped-async-component-not-rendered-on-the-server-by-vue-server-renderer-nur3o?file=/_LOOK_HERE/test.html)\r\n\r\n### Steps to reproduce\r\n0. Ignore all the Nuxt.js stuff in the repo. I needed a Container CodeSandbox, so I started with a Nuxt.js template. Only focus on the files I mention in the following steps. The error has nothing to do with Nuxt.js! Also ignore the browser output of the CodeSandbox! It is only about the HTML in `./_LOOK_HERE/test.html`!\r\n1. In the `./_LOOK_HERE/test.html` file you can see `<div class=\"AsyncDiv\"></div>` does not have `test-class` but `<div class=\"SyncDiv test-class\"></div>` does. **Both should have `test-class`.**\r\n2. In `./main.js` you can see the `AsyncDiv` and `SyncDiv` components. They are almost the same but **the first one is an async factory component.**\r\n3. The `WrapperAsync` and `WrapperSync` components are exactly the same but rendering the two respective components. This is important; **if I render `AsyncDiv` directly without the wrapper, everything works as expected.**\r\n4. In `App` we render both wrappers with the same `staticClass`.\r\n5. In`./render.js` you can see the code that produces `./_LOOK_HERE/test.html`. You can run it in the terminal with `node render.js` but it is a little buggy on CodeSandbox if you have opened `test.html` before. Close the `test.html` tab before running the script. Or just believe me that it produces `./_LOOK_HERE/test.html`.\r\n6. Not in the reproduction: If the server rendered code is hydrated client-side, `test-class` is appended to `AsyncDiv`. So it seems as if on the client-side this case is handled correctly.\r\n\r\n### What is expected?\r\nIn `test.html` both components should be rendered with the `test-class`.\r\n\r\n```html\r\n<div class=\"AsyncDiv test-class\"></div>\r\n<div class=\"SyncDiv test-class\"></div>\r\n```\r\n\r\n### What is actually happening?\r\nOnly the `SyncDiv` component correctly renders `test-class`.\r\n\r\n```html\r\n<div class=\"AsyncDiv\"></div>\r\n<div class=\"SyncDiv test-class\"></div>\r\n```\r\n\r\n---\r\nI ran into this problem working on [vue-lazy-hydration](https://github.com/maoberlehner/vue-lazy-hydration). There I use a wrapper around an async component to delay the hydration of the async component.\r\nI realize that this is an edge-case and I can and will work around it in `vue-lazy-hydration` (by resolving the async component and rendering the resolved sync component) but I thought this maybe can be valuable for others.\r\nI also realize that there is probably not a lot of focus on v2 currently but I think this is still important because there will be huge legacy projects running on v2 for years to come.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11780","RelatedDescription":"Open issue \"staticClass on wrapped async component not rendered on the server by vue-server-renderer\" (#11780)"},{"Id":"745823843","IsPullRequest":false,"CreatedAt":"2020-11-18T18:27:56","Actor":"borodadada","Number":"11779","RawContent":null,"Title":"vue SSR webfontloader = font cache","State":"closed","Body":"### What problem does this feature solve?\r\nHello, i don't can started webfontloader   vue ssr, any body know how it work? I need CACHE for fonts. \r\n\r\n### What does the proposed API look like?\r\nerror\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11779","RelatedDescription":"Closed issue \"vue SSR webfontloader = font cache\" (#11779)"},{"Id":"744941570","IsPullRequest":false,"CreatedAt":"2020-11-17T17:41:41","Actor":"VorobiovKir","Number":"11778","RawContent":null,"Title":"Web component in Vue: 'is' attribute doesn't work for web component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/tender-wave-kcu39?file=/src/App.vue](https://codesandbox.io/s/tender-wave-kcu39?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create webComponent which is extended from HTMLButtonElement\r\n2. Try to use it in Vue project\r\n\r\n### What is expected?\r\nVue Api provides for developers the opportunity to ignore some attribute like 'is'\r\n\r\n### What is actually happening?\r\nVue renders element as a dynamic component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11778","RelatedDescription":"Closed issue \"Web component in Vue: 'is' attribute doesn't work for web component\" (#11778)"},{"Id":"744890787","IsPullRequest":true,"CreatedAt":"2020-11-17T16:29:35","Actor":"amkamn","Number":"11777","RawContent":null,"Title":"remove valueless code","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11777","RelatedDescription":"Open PR \"remove valueless code\" (#11777)"},{"Id":"744337597","IsPullRequest":true,"CreatedAt":"2020-11-17T16:02:38","Actor":"IjtihadIslamEmon","Number":"11774","RawContent":null,"Title":"Create vue js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11774","RelatedDescription":"Closed or merged PR \"Create vue js\" (#11774)"},{"Id":"744841826","IsPullRequest":true,"CreatedAt":"2020-11-17T15:31:08","Actor":"vegerot","Number":"11776","RawContent":null,"Title":"fix(dev): allow performance marking in production (fix #11775)","State":"open","Body":"close #11775\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Developer-related improvement\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nTo quote #11775 : \r\n\r\n### What problem does this feature solve?\r\nSimilar to devtools, `Vue.config.devtools` is enabled by default for development and disabled by default for production.  However, the developer can choose to override that behavior (for example, for debugging) by manually setting `Vue.config.devtools = true`.  However, this same lenience is not afforded to `Vue.config.performance`.  Even if explicitly enabling it, the developer's setting will be overridden by Vue in production.\r\n\r\n### What does the proposed API look like?\r\nThis commit brings `Vue.config.performance` in line with `Vue.config.devtools`, by disabling it by default in production, but gives the developer the ability to explicitly enable it; for example, for debugging performance issues.\r\n\r\n## Questions for reviewer:\r\n\r\n* I changed a couple of files, but truth is I'm not sure what the change in `packages/` and `src/platforms` does.  Advisement there would be appreciated\r\n","Url":"https://github.com/vuejs/vue/pull/11776","RelatedDescription":"Open PR \"fix(dev): allow performance marking in production (fix #11775)\" (#11776)"},{"Id":"744830442","IsPullRequest":false,"CreatedAt":"2020-11-17T15:18:14","Actor":"vegerot","Number":"11775","RawContent":null,"Title":"Enable performance measuring in production, at the user's request","State":"open","Body":"### What problem does this feature solve?\r\nSimilar to devtools, `Vue.config.devtools` is enabled by default for development and disabled by default for production.  However, the developer can choose to override that behavior (for example, for debugging) by manually setting `Vue.config.devtools = true`.  However, this same lenience is not afforded to `Vue.config.performance`.  Even if explicitly enabling it, the developer's setting will be overridden by Vue in production.\r\n\r\n### What does the proposed API look like?\r\nThis proposed solution brings `Vue.config.performance` in line with `Vue.config.devtools`, by disabling it by default in production, but gives the developer the ability to explicitly enable it; for example, for debugging performance issues.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11775","RelatedDescription":"Open issue \"Enable performance measuring in production, at the user's request\" (#11775)"},{"Id":"743790301","IsPullRequest":false,"CreatedAt":"2020-11-16T15:48:00","Actor":"kumaresan-subramani","Number":"11773","RawContent":null,"Title":"vue with sass throws error","State":"closed","Body":"### Version\r\n2.6.11\r\n\"@vue/cli-plugin-babel\": \"^4.5.0\",\r\n    \"@vue/cli-plugin-eslint\": \"^4.5.0\",\r\n    \"@vue/cli-service\": \"^4.5.0\",\r\n\r\n### Reproduction link\r\n[https://flaviocopes.com/vue-cli/](https://flaviocopes.com/vue-cli/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n**Sample** - https://github.com/kumaresan-subramani/vue-sass\r\n\r\n- create vue sample using below blog\r\n\r\n    https://flaviocopes.com/vue-cli/\r\n\r\n- then add required sass plugin by following below blog\r\n\r\n   https://vinceumo.github.io/devNotes/Javascript/vue-scss-setup/\r\n\r\n- Then start your application, i get below error:\r\n\r\n```\r\n error  in ./src/components/HelloWorld.vue?vue&type=style&index=0&lang=scss&\r\n\r\nModule build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nValidationError: Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.\r\n - options has an unknown property 'includePaths'. These properties are valid:\r\n   object { implementation?, sassOptions?, prependData?, sourceMap?, webpackImporter? }\r\n    at validate (D:\\today\\example\\node_modules\\schema-utils\\dist\\validate.js:98:11)\r\n    at Object.loader (D:\\today\\example\\node_modules\\sass-loader\\dist\\index.js:36:28)\r\n\r\n @ ./node_modules/vue-style-loader??ref--8-oneOf-1-0!./node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-2!./node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/HelloWorld.vue?vue&type=style&index=0&lang=scss& 4:14-441 14:3-18:5 15:22-449\r\n @ ./src/components/HelloWorld.vue?vue&type=style&index=0&lang=scss&\r\n @ ./src/components/HelloWorld.vue\r\n @ ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=script&lang=js&\r\n @ ./src/App.vue?vue&type=script&lang=js&\r\n @ ./src/App.vue\r\n @ ./src/main.js\r\n @ mult\r\n\r\n```\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\nthrows error\r\n\r\n---\r\nit will work when i add `includepaths` attribute but in latest `vue-cli` i dont know where to add this property\r\n\r\nhttps://ej2.syncfusion.com/vue/documentation/getting-started/vue-sass/#adding-includepaths-option\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11773","RelatedDescription":"Closed issue \"vue with sass throws error\" (#11773)"},{"Id":"743018518","IsPullRequest":false,"CreatedAt":"2020-11-14T14:59:58","Actor":"sebamarynissen","Number":"11772","RawContent":null,"Title":"Consider detecting browser environment just-in-time","State":"open","Body":"### What problem does this feature solve?\r\nWhen testing Vue components on Node with [@vue/test-utils](https://www.npmjs.com/package/@vue/test-utils), it is important that you mock a browser environment with [jsdom-global](https://www.npmjs.com/package/jsdom-global) *before* vue is loaded. If you fail to do this, you get a `TypeError: Cannot read property 'child' of undefined` (see https://github.com/vuejs/vue-test-utils/issues/1192) when trying to mount your component.\r\n\r\nThe reason is that when Vue is loaded, it checks the environment as\r\n```js\r\nconst inBrowser = typeof window !== 'undefined';\r\n```\r\nIt would be useful - at least for the mounting of components - if this check is performed just in time so that the order of loading is not important here.\r\n\r\nWhile one could argue that this is not a problem if you simply get the loading order correct, there is actually a problem when trying to load `.vue` files natively in Node. I've written an experimental library for this, call [vue-esm-loader](https://www.npmjs.com/package/vue-esm-loader). The problem I had when trying to get this to work with [@vue/test-utils](https://www.npmjs.com/package/@vue/test-utils) is that there's a cyclic problem: [vue-esm-loader](https://www.npmjs.com/package/vue-esm-loader) needs [vue-template-compiler](https://www.npmjs.com/package/vue-template-compiler), which in turn loads Vue first to check for a version mismatch. However, as the loader is loaded as the very first file, this means it's impossible to mock the browser environment before vue is loaded the first time.\r\n\r\nI was able to bypass this by directly requiring the build of vue-template-compiler which does not provide the version check, but this is not a good solution (see https://github.com/sebamarynissen/vue-esm-loader/commit/252f1df2337684613346373727f0f6203ac6aea9#diff-5dfe38baf287dcf756a17c2dd63483781b53bf4b669e10efdd01e74bcd8e780aR7). Therefore it would be useful if the environment check in Vue is done on the fly.\r\n\r\n### What does the proposed API look like?\r\nI propose to replace the `inBrowser` constant by an `env` object, which can look like\r\n```js\r\nconst env = {\r\n  get inBrowser() {\r\n    return typeof window === 'undefined';\r\n  }\r\n};\r\n```\r\nSubsequently the `$mount` method can use this as \r\n```js\r\nVue.prototype.$mount = function (\r\n  el,\r\n  hydrating\r\n) {\r\n  el = el && env.inBrowser ? query(el) : undefined;\r\n  return mountComponent(this, el, hydrating)\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11772","RelatedDescription":"Open issue \"Consider detecting browser environment just-in-time\" (#11772)"},{"Id":"742801700","IsPullRequest":false,"CreatedAt":"2020-11-13T21:33:16","Actor":"TrueCarry","Number":"11771","RawContent":null,"Title":"Strange ssr behavior in v-for loop with if-else and v-text","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/TrueCarry/linktest](https://github.com/TrueCarry/linktest)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun server, open localhost:8080. Problem is in components/textWrapper.vue file. I've used some vue ssr template and removed almost everything unneeded. Same error as before.\r\n\r\n### What is expected?\r\nssr and client side versions are the same. It works if we don't use v-text on span. I changed it to v-text1, to test.\r\nNo hydration errors with v-text1\r\n![image](https://user-images.githubusercontent.com/5431520/99122979-58700280-2610-11eb-8b5c-0952d78fe951.png)\r\n\r\n\r\n### What is actually happening?\r\nServer doesn't render custom element.\r\nConsole output: \r\n![image](https://user-images.githubusercontent.com/5431520/99123015-70e01d00-2610-11eb-8196-28840adbdfc8.png)\r\nServer generated html:\r\n![image](https://user-images.githubusercontent.com/5431520/99123039-7b9ab200-2610-11eb-85e4-2fcce636ae34.png)\r\n\r\n\r\n---\r\nCan you give me few hours to respond next time you decide to close issue please? \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11771","RelatedDescription":"Open issue \"Strange ssr behavior in v-for loop with if-else and v-text\" (#11771)"},{"Id":"742637465","IsPullRequest":false,"CreatedAt":"2020-11-13T17:44:19","Actor":"TrueCarry","Number":"11770","RawContent":null,"Title":"Strange ssr behavior in v-for loop with if-else and v-text","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/TrueCarry/linktest](https://github.com/TrueCarry/linktest)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n### What is expected?\r\n\r\n\r\n### What is actually happening?\r\n\r\nThis is a duplicate of https://github.com/vuejs/vue/issues/1176, can we reopen it please?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11770","RelatedDescription":"Closed issue \"Strange ssr behavior in v-for loop with if-else and v-text\" (#11770)"},{"Id":"742219503","IsPullRequest":false,"CreatedAt":"2020-11-13T08:26:03","Actor":"Tzdy","Number":"11769","RawContent":null,"Title":"Bigint should be included when checking whether the value is primitive","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/Tsdy/pen/mdEaYzL](https://codepen.io/Tsdy/pen/mdEaYzL)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nsrc/shared/util.js\r\n```\r\n/**\r\n * Check if value is primitive.\r\n */\r\nfunction isPrimitive (value){\r\n  return (\r\n    typeof value === 'string' ||\r\n    typeof value === 'number' ||\r\n    // $flow-disable-line\r\n    typeof value === 'symbol' ||\r\n    typeof value === 'boolean'\r\n  )\r\n}\r\nconsole.log(isPrimitive(100n));\r\n// false\r\n```\r\n\r\n### What is expected?\r\nBigint should be included in the primitive type\r\n\r\n### What is actually happening?\r\nconsole.log(isPrimitive(100n));\r\n// false\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11769","RelatedDescription":"Closed issue \"Bigint should be included when checking whether the value is primitive\" (#11769)"},{"Id":"741673997","IsPullRequest":false,"CreatedAt":"2020-11-12T15:51:33","Actor":"SchmidtDawid","Number":"11768","RawContent":null,"Title":"simple render conditionals","State":"closed","Body":"### What problem does this feature solve?\r\nLong structure using template elements. I know it could be hard to implement but for simple text element it will be so cool.\r\n\r\n### What does the proposed API look like?\r\n        {v-if=\"emptyTableInfo\"{ emptyTableInfo }}\r\n        {v-else{ $t('TABLE.EMPTY') }}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11768","RelatedDescription":"Closed issue \"simple render conditionals\" (#11768)"},{"Id":"741074667","IsPullRequest":false,"CreatedAt":"2020-11-11T21:23:16","Actor":"TrueCarry","Number":"11766","RawContent":null,"Title":"Strange ssr behavior in v-for loop with if-else and v-text","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/TrueCarry/linktest](https://github.com/TrueCarry/linktest)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInstall dependencies and run yarn dev, open in browser, there should be hydration error. Problem is in components/textWrapper.vue file.\r\n\r\n### What is expected?\r\nClient and server dom is the same\r\n\r\n### What is actually happening?\r\nIf inside v-for loop exists element with v-text, adjacent custom elements are not rendered on server and just printed in html as is(as custom-element in this case)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11766","RelatedDescription":"Closed issue \"Strange ssr behavior in v-for loop with if-else and v-text\" (#11766)"},{"Id":"740838240","IsPullRequest":true,"CreatedAt":"2020-11-11T15:06:25","Actor":"marcin-majewski-sonarsource","Number":"11765","RawContent":null,"Title":"Test pr","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11765","RelatedDescription":"Closed or merged PR \"Test pr\" (#11765)"},{"Id":"740045338","IsPullRequest":false,"CreatedAt":"2020-11-10T16:18:08","Actor":"wbbhacker","Number":"11764","RawContent":null,"Title":"vue/vue-server-renderer  vue-ssr-client-manifest.json  The initial property is an empty array times the bug","State":"closed","Body":"### What problem does this feature solve?\r\n1. When the initial attribute of the vUE - SSr-client-manifest.json file is an empty array\r\n\r\n2. Start the Node service and access the IP in the browser\r\n\r\n3. Build.dev. js file in the vue-server-renderer plugin reported a bug in line 9074sha\r\n\r\nTypeError: Cannot read property 'file' of undefined\r\n    at /Users/binbinwang/workspace/x-fe/vue-ssr/node_modules/vue-server-renderer/build.dev.js:9074:24\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nvue-ssr-client-manifest.json\r\n```javascript\r\n{\r\n  \"publicPath\": \"/dist/\",\r\n  \"all\": [\r\n    \"app.0178268b84efde12045b.js\"\r\n  ],\r\n  \"initial\": [],\r\n  \"async\": [\r\n    \"app.0178268b84efde12045b.js\"\r\n  ],\r\n  \"modules\": {\r\n    \"239adfd4\": [\r\n      0\r\n    ],\r\n    \"6fbc4fdc\": [\r\n      0\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11764","RelatedDescription":"Closed issue \"vue/vue-server-renderer  vue-ssr-client-manifest.json  The initial property is an empty array times the bug\" (#11764)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"751532182","IsPullRequest":true,"CreatedAt":"2020-11-26T14:45:41","Actor":"ylc395","Number":"3390","RawContent":null,"Title":"fix(type): use any for Location.params","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nWhen passing props to route components, params are props, and props can be \"any\" type. For example:\r\n\r\nin route config:\r\n```js\r\nconst routes = [{\r\n    name: 'a',\r\n    path: '/a',\r\n    props: true,\r\n    component: A, // component A has a `aPropObject` prop \r\n}];\r\n```\r\n\r\nin component:\r\n```js\r\nthis.$router.push({\r\n    name: 'xxxx',\r\n    params: {\r\n        aPropObject: {}, // an object or anything else\r\n    },\r\n});\r\n```","Url":"https://github.com/vuejs/vue-router/pull/3390","RelatedDescription":"Closed or merged PR \"fix(type): use any for Location.params\" (#3390)"},{"Id":"751218186","IsPullRequest":false,"CreatedAt":"2020-11-26T08:45:07","Actor":"sqcrh","Number":"3389","RawContent":null,"Title":"Add a clear before handler that is called any time url navigation matches a route (not a route resolution / component).","State":"closed","Body":"### What problem does this feature solve?\r\nIt is a common need to create a route guard that checks if a user or resource is authorized or authenticated activating a *route*.  This currently does not exist, and the existing per route beforeEnter handler really aligns with component activation not route activation.  I think it makes more sense to include auth type guards in the url/routing module and not the component because the guard logic is shared among some large percentage of the routes and doesn't have relate specifically to component logic.  And often you want this logic to apply to some routes not all routes. Currently to meet this need you have to:\r\n\r\n  1. Watch $route.  Not ideal, because you have to roll your own logic to match the guard to the route.  \r\n  2. Use the global beforeEach.  Again, not ideal because you have to roll your own logic to apply guard to selected routes.  \r\n  3. Use beforeRouteUpdate and beforeRouteEnter in the component.  This isn't ideal because the global auth guards should not be buried in a component and they don't use any component logic.  The guard is related to the route.  \r\n  4. Reach for the beforeEnter handler, which only activates when the route resolution is changed but many people expect it to be called when the the route is matched\r\n\r\nI think there is a need for this based the necessity of a call out in the documentation, a handful of issues in the repo, and questions on the forum.  The current route paradigm makes sense and has parity when you are talking about a component (enter, update, leave).  But when you talk about a **route** there is a parity mismatch.  You would expect a route handler to be called an time the route url changes and a route is matched.\r\n\r\nI see there is was a proposal to add a beforeUpdate, which I think was rightfully closed with an addition to the component.\r\nhttps://github.com/vuejs/vue-router/issues/1577\r\n\r\nThere was also a proposal to deprecate beforeEnter, which I think actually makes sense because again beforeEnter is confusing, but without a replacement i understand why it was closed. \r\nhttps://github.com/vuejs/vue-router/issues/2540\r\n\r\nSome more relevant issues and questions:\r\n  * https://github.com/vuejs/vue-router/issues/2600\r\n  * https://github.com/vuejs/vue-router/issues/1012\r\n  * https://forum.vuejs.org/t/beforeenter-doesnt-catch-param-changes/97451\r\n  * https://forum.vuejs.org/t/how-to-invoke-beforeenter-everytime-route-param-changes-in-the-same-path/97551\r\n  * https://forum.vuejs.org/t/vue-router-beforeenter-guard-not-working-on-url-change/42300\r\n  * https://forum.vuejs.org/t/vue-router-beforeenter-doesnt-work-properly-for-children-path/20019\r\n  * https://forum.vuejs.org/t/vue-router-trigger-beforeenter-in-all-segments-of-the-url/37462\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nDeprecate confusing beforeEnter that really aligns with the component not the route and create a handler called before, beforeNavigate, or beforeMatch that is called before a *route* is matched and pushed onto the stack.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3389","RelatedDescription":"Closed issue \"Add a clear before handler that is called any time url navigation matches a route (not a route resolution / component).\" (#3389)"},{"Id":"750912643","IsPullRequest":false,"CreatedAt":"2020-11-25T16:06:34","Actor":"AliAbuArab","Number":"3388","RawContent":null,"Title":"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://github.com/AliAbuArab/vue-router-test.git](https://github.com/AliAbuArab/vue-router-test.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHello.\r\nWe facing a problem with a vue router when it envloved with unencoded characters.\r\nPlease check our repository.\r\nhttps://github.com/AliAbuArab/vue-router-test.git\r\n\r\nThe problem occures when reload/refresh the page.\r\nIf the route in english its okay and working fine.\r\nBut when it comes to hebrew this not working and gives us\r\nThe client-side rendered virtual DOM tree is not matching server-rendered content....\r\n\r\n```\r\nexport default {\r\n  locales: [\r\n    { \r\n      code: 'he',\r\n      iso: 'he'\r\n    },\r\n    { \r\n      code: 'en',\r\n      iso: 'en'\r\n    }\r\n  ],\r\n  defaultLocale: 'he',\r\n  parsePages: false,\r\n  strategy: 'prefix_except_default',\r\n  pages: {\r\n    'categories/index': {\r\n      he: '/קטגוריות',\r\n      en: '/categories',\r\n    },\r\n    'categories/_id': {\r\n      he: '/קטגוריות/:id',\r\n      en: '/categories/:id',\r\n    },\r\n    search: {\r\n      he: '/חיפוש',\r\n      en: '/search'\r\n    },\r\n    promotions: {\r\n      he: '/מבצעים',\r\n      en: '/promotions'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nPage that rendered from the serve\r\n\r\n### What is actually happening?\r\nEmpty page\r\n\r\n---\r\nWe using:\r\nnuxtjs v^2.14.7.\r\nnuxt-i18n v\"^6.15.4\r\nMode: ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3388","RelatedDescription":"Closed issue \"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render\" (#3388)"},{"Id":"750901174","IsPullRequest":false,"CreatedAt":"2020-11-25T15:12:23","Actor":"AliAbuArab","Number":"3387","RawContent":null,"Title":"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render","State":"closed","Body":"Hello.\r\nWe facing a problem with a vue router when it envloved with unencoded characters.\r\nPlease check our repository.\r\nhttps://github.com/AliAbuArab/vue-router-test.git\r\n\r\nThe problem occures when reload/refresh the page.\r\nIf the route in english its okay and working fine.\r\nBut when it comes to hebrew this not working and gives us \r\nThe client-side rendered virtual DOM tree is not matching server-rendered content....\r\n<img width=\"904\" alt=\"Screen Shot 2020-11-25 at 17 10 08\" src=\"https://user-images.githubusercontent.com/20545572/100245808-21b7b780-2f41-11eb-9f3e-efc6357d80bf.png\">\r\n\r\n```\r\nexport default {\r\n  locales: [\r\n    { \r\n      code: 'he',\r\n      iso: 'he'\r\n    },\r\n    { \r\n      code: 'en',\r\n      iso: 'en'\r\n    }\r\n  ],\r\n  defaultLocale: 'he',\r\n  parsePages: false,\r\n  strategy: 'prefix_except_default',\r\n  pages: {\r\n    'categories/index': {\r\n      he: '/קטגוריות',\r\n      en: '/categories',\r\n    },\r\n    'categories/_id': {\r\n      he: '/קטגוריות/:id',\r\n      en: '/categories/:id',\r\n    },\r\n    search: {\r\n      he: '/חיפוש',\r\n      en: '/search'\r\n    },\r\n    promotions: {\r\n      he: '/מבצעים',\r\n      en: '/promotions'\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/3387","RelatedDescription":"Closed issue \"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render\" (#3387)"},{"Id":"749731765","IsPullRequest":true,"CreatedAt":"2020-11-24T14:01:33","Actor":"afoncatti","Number":"3386","RawContent":null,"Title":"Make sure scrollRestoration is writable","State":"open","Body":"I'm receiving this error\r\nTypeError · Cannot set property scrollRestoration of [object History] which has only a getter\r\n\r\nwith additional info:\r\nnode_modules/vue-router/dist/vue-router.esm.js:1694:39 setupScroll\r\nfunction setupScroll () {\r\n// Prevent browser scroll behavior on History popstate\r\nif ('scrollRestoration' in window.history) {\r\nwindow.history.scrollRestoration = 'manual';\r\n}\r\n\r\nI propose to add this try-catch to verify if scrollRestoration is really writable before trying to set it.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3386","RelatedDescription":"Open PR \"Make sure scrollRestoration is writable\" (#3386)"},{"Id":"749701918","IsPullRequest":true,"CreatedAt":"2020-11-24T13:55:41","Actor":"afoncatti","Number":"3384","RawContent":null,"Title":"Make sure scrollRestoration is writable.","State":"closed","Body":"I'm receiving this error\r\nTypeError · Cannot set property scrollRestoration of [object History] which has only a getter\r\n\r\nwith additional info:\r\nnode_modules/vue-router/dist/vue-router.esm.js:1694:39 setupScroll\t\r\nfunction setupScroll () {\r\n  // Prevent browser scroll behavior on History popstate\r\n  if ('scrollRestoration' in window.history) {\r\n    window.history.scrollRestoration = 'manual';\r\n  }\r\n\r\nI propose to add this try-catch to verify if scrollRestoration is really writable before trying to set it.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3384","RelatedDescription":"Closed or merged PR \"Make sure scrollRestoration is writable.\" (#3384)"},{"Id":"749717096","IsPullRequest":true,"CreatedAt":"2020-11-24T13:42:04","Actor":"HoldYourWaffle","Number":"3385","RawContent":null,"Title":"types: Add RouteMeta interface to enable module augmentation","State":"open","Body":"Close #3183\r\n\r\n\r\nI added a `RouteMeta` interface to the type declarations to allow for stronger type safety using [module augmentation](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation).\r\n\r\nFor example:\r\n```ts\r\ndeclare module 'vue-router/types/router' {\r\n    interface RouteMeta {\r\n        x: string;\r\n    }\r\n}\r\n```\r\nWould define `myRoute.meta.x` to be a `string`. Non-existent properties will show an error.\r\n\r\nUnfortunately this is a (minor) breaking change. As far as I know this can't be avoided without sacrificing the added type-safety.\r\nUsers can manually revert to the original \"`any`\" behavior using an augmentation like this:\r\n```ts\r\ndeclare module 'vue-router/types/router' {\r\n    interface RouteMeta {\r\n        [key: string]: any;\r\n    }\r\n}\r\n```\r\nI can't make this the default however, because it can't be _overwritten_ using module augmentation.\r\nIn other words: the \"`any`\"-index type would stay \"active\", thus defeating the purpose of added type-safety.\r\n\r\nI hope this suggestion can be considered nonetheless.","Url":"https://github.com/vuejs/vue-router/pull/3385","RelatedDescription":"Open PR \"types: Add RouteMeta interface to enable module augmentation\" (#3385)"},{"Id":"749646509","IsPullRequest":false,"CreatedAt":"2020-11-24T12:01:33","Actor":"WANZARGEN","Number":"3383","RawContent":null,"Title":"Custom stringifyQuery/parseQuery overrides the default","State":"open","Body":"### What problem does this feature solve?\r\nIn my web application, the format of the search information is very complex. \r\nAnd users share search information with uri. \r\nThe search format is the same on any page, so we need to parse the the query in the same way for search data on every page. \r\nIt is the same to make it a query string again. \r\nSo when I tried to create a custom stringifyQuery/parseQuery function for this, there are a lot of things the default function does. \r\nIt's terrible to have to write that logic hassle twice. \r\n\r\nLooking at the internal logic, it seems very easy to let the default function be reused. \r\nIf the default function is reusable, we can put only the logic we need to stringifyQuery or parseQuery function, excluding logic such as encoding or decoding it. \r\nI think there will be many developers who use it usefully compared to the effort that goes into it.\r\n\r\n### What does the proposed API look like?\r\n### routerOptions must be changed as follow: \r\n\r\n```typescript\r\nexport interface RouterOptions {\r\n  ...\r\n  parseQuery?: (query: string, defaultFunction: (query: string) => Object) => Object\r\n  stringifyQuery?: (query: Object, defaultFunction: (query: Object) => string) => string\r\n  ...\r\n}\r\n```\r\n\r\n### getFullPath in vue-router.js must be changed as follow:\r\n\r\n```javascript\r\nfunction getFullPath (\r\n    ref,\r\n    _stringifyQuery\r\n  ) {\r\n    var path = ref.path;\r\n    var query = ref.query; if ( query === void 0 ) query = {};\r\n    var hash = ref.hash; if ( hash === void 0 ) hash = '';\r\n\r\n    return _stringifyQuery ? (path || '/') +  _stringifyQuery(query, stringifyQuery) +  hash :  (path || '/') +  stringifyQuery(query) +  hash\r\n  }\r\n```\r\n\r\n### resolveQuery in vue-router.js must be changed as follow:\r\n\r\n```javascript\r\nfunction resolveQuery (\r\n    query,\r\n    extraQuery,\r\n    _parseQuery\r\n  ) {\r\n    if ( extraQuery === void 0 ) extraQuery = {};\r\n\r\n    var parsedQuery;\r\n    try {\r\n      parsedQuery = _parseQuery ? _parseQuery(query || ''), parseQuery) : parseQuery(query || '');\r\n    } catch (e) {\r\n       warn(false, e.message);\r\n      parsedQuery = {};\r\n    }\r\n    for (var key in extraQuery) {\r\n      var value = extraQuery[key];\r\n      parsedQuery[key] = Array.isArray(value)\r\n        ? value.map(castQueryParamValue)\r\n        : castQueryParamValue(value);\r\n    }\r\n    return parsedQuery\r\n  }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3383","RelatedDescription":"Open issue \"Custom stringifyQuery/parseQuery overrides the default\" (#3383)"},{"Id":"748219385","IsPullRequest":false,"CreatedAt":"2020-11-22T12:19:46","Actor":"olegbaturin","Number":"3382","RawContent":null,"Title":"Normalize URL before parse || add beforeParse navigation guard","State":"closed","Body":"### What problem does this feature solve?\r\nNormilize URL before parse it to Route object.\r\nURLs like \"https://example.com//page//\" became \"https://example.com/page/\" or \"https://example.com/page\" (trailing slash is removed) and run window.location.replace() with normalized URL. Removing repeated/trailing slashes can be optional.\r\n||OR||\r\nAdd a beforeParse() navigation guard to allow custom normilization of URLs.\r\n\r\n### What does the proposed API look like?\r\nbeforeParse(rawUrl: string) {\r\n return rawUrl.replace(/([^:]\\/)\\/ /g, \"$1\");\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3382","RelatedDescription":"Closed issue \"Normalize URL before parse || add beforeParse navigation guard\" (#3382)"},{"Id":"747678445","IsPullRequest":false,"CreatedAt":"2020-11-20T18:07:44","Actor":"fabianeichinger","Number":"3381","RawContent":null,"Title":"Redirecting from beforeEnter guard will push state during popstate handling","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwx6q3hc/4](https://jsfiddle.net/jwx6q3hc/4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n0. Create a router with\r\n```\r\n{\r\n  mode: 'history',\r\n  routes: [\r\n    { path: '/a' },\r\n    { path: '/b', beforeEnter: (to, from, next) => next({ name: 'redirect-target' }) },\r\n    //  { path: '/b', redirect: { name: 'redirect-target' } },\r\n    { name: 'redirect-target', path: '/b' }\r\n  ]\r\n}\r\n```\r\n1. Initially navigate to `/a`\r\n2. Navigate to `/b`\r\n3. Navigate to `/a`\r\n4. Hit the browser back button\r\n5. Hit the browser back button again\r\n\r\n\r\n\r\n### What is expected?\r\nAfter hitting the back button in step 5. we should be back on `/a`.\r\nThe forward button should be enabled.\r\nThe history should look like\r\n```\r\n/a --- pushed by 3.\r\n/b --- pushed by 2.\r\n/a <-- current, pushed by 1.\r\n```\r\n\r\n### What is actually happening?\r\nAfter hitting back in step 5., we stay on `/b`.\r\nThe forward button is disabled, browser history looks like this\r\n```\r\n/b <-- current, pushed by 4.\r\n/a --- pushed by 1.\r\n```\r\n\r\n---\r\nI hoped this setup would work for a proposal to simplify some dynamic routing in Vue Storefront (take a look at this [gist](https://gist.github.com/fabianeichinger/a3e9c75db522cdc5441ce1dc68eba8bb) if you're interested in the usecase and some more details). Essentially I want use beforeEnter as a substitute for `redirect` where I can do some async requests before returning the redirection target.\r\n \r\nThe issue here is that calling `next` with some redirection arguments is always handled by calling `router.push` or `router.replace` (in the case of `next({ replace: true, ... })`. But in this usecase there should be no change to the browser history during `popstate` handling.\r\n\r\nDoing the equivalent redirection with `redirect` works just fine (though I can't use it for my usecase, as I can't return asynchronously from the redirect function). I've marked this as a bug as from what I understand https://github.com/vuejs/rfcs/pull/150 has the goal that both should work the same way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3381","RelatedDescription":"Closed issue \"Redirecting from beforeEnter guard will push state during popstate handling\" (#3381)"},{"Id":"746379753","IsPullRequest":false,"CreatedAt":"2020-11-19T08:58:53","Actor":"chenguzhen87","Number":"3380","RawContent":null,"Title":"源码中是通过window.scrollTo()实现滚动的，怎么实现指定元素滚动？","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/3380","RelatedDescription":"Closed issue \"源码中是通过window.scrollTo()实现滚动的，怎么实现指定元素滚动？\" (#3380)"},{"Id":"745515475","IsPullRequest":false,"CreatedAt":"2020-11-18T10:04:39","Actor":"chris-zhu","Number":"3379","RawContent":null,"Title":"useRouter()   return  undefined","State":"closed","Body":"when i use `useRouter`  break away  vue hooks ,  it return `undefined`, but in the vue hooks, it return `Router`.\r\nso i dont know this reason, Please answer me how to use `useRouter` is normal js, because i want to use it in vuex\r\n![image](https://user-images.githubusercontent.com/42139754/99515882-7f3f8780-29c8-11eb-8260-a70a89fb9722.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3379","RelatedDescription":"Closed issue \"useRouter()   return  undefined\" (#3379)"},{"Id":"745480262","IsPullRequest":false,"CreatedAt":"2020-11-18T09:17:27","Actor":"zhang1024899756","Number":"3378","RawContent":null,"Title":"Router.beforeeach","State":"closed","Body":"Router.beforeeach must return Config when using the router.beforeeach method to allow the request to continue, and if I now want to abort the request and don't return config, an error will be reported. Is there any good way to do this?\r\n","Url":"https://github.com/vuejs/vue-router/issues/3378","RelatedDescription":"Closed issue \"Router.beforeeach\" (#3378)"},{"Id":"745365639","IsPullRequest":true,"CreatedAt":"2020-11-18T07:53:41","Actor":"Alanscut","Number":"3377","RawContent":null,"Title":"docs: add language-specific link","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nadd language-specific link.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3377","RelatedDescription":"Closed or merged PR \"docs: add language-specific link\" (#3377)"},{"Id":"745187253","IsPullRequest":true,"CreatedAt":"2020-11-18T07:53:00","Actor":"SchawnnDev","Number":"3376","RawContent":null,"Title":"docs: typo fix","State":"closed","Body":"Fixed bold typo\r\n","Url":"https://github.com/vuejs/vue-router/pull/3376","RelatedDescription":"Closed or merged PR \"docs: typo fix\" (#3376)"},{"Id":"744896805","IsPullRequest":false,"CreatedAt":"2020-11-17T17:37:23","Actor":"dxvladislavvolkov","Number":"3375","RawContent":null,"Title":"Router link lose class name","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1j4p3ewm/2/](https://jsfiddle.net/1j4p3ewm/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open a jsfiddle example\r\n2. Click on the second link\r\n\r\nClass disappears from the first link\r\n\r\n\r\n\r\n### What is expected?\r\nI have a component where slots are router-links. I need to get an element of router-link and add a class on it (not using binding)\r\nSo, I get children on the mounted hook and add class to the element\r\nStyles of the class applied and don't disappear after some actions on a page\r\n\r\n### What is actually happening?\r\nStyles of the class applied but after clicking on another link the class disappears\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3375","RelatedDescription":"Closed issue \"Router link lose class name\" (#3375)"},{"Id":"744492503","IsPullRequest":false,"CreatedAt":"2020-11-17T07:52:04","Actor":"darkylmnx","Number":"3374","RawContent":null,"Title":"Redirect with query string doest't work and removes query from URL : router.push({ redirect: '/path?query=value' })","State":"closed","Body":"### Version\r\n3.4.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/darkylmnx/yrosh76j/](https://jsfiddle.net/darkylmnx/yrosh76j/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Go to `/a`\r\n- Call `router.push({ redirect: '/b?query=value' })`\r\n\r\n### What is expected?\r\nURL to be: /b?query=value\r\n\r\n### What is actually happening?\r\nURL is: /b\r\n\r\n---\r\nYour question may be, why using a redirect when pushing a location object, the answer is that's what is done in a plugin I use, and I have no hand on the code.\r\nDespite that, it's a weird behaviour that:\r\n- `router.push('/b?query=value' )` works\r\n- and `router.push({ redirect: '/b?query=value' })` doesn't and removes the query from the URL\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3374","RelatedDescription":"Closed issue \"Redirect with query string doest't work and removes query from URL : router.push({ redirect: '/path?query=value' })\" (#3374)"},{"Id":"743960999","IsPullRequest":false,"CreatedAt":"2020-11-16T18:14:06","Actor":"nazarepiedady","Number":"3373","RawContent":null,"Title":"Docs: portuguese translation","State":"closed","Body":"I have translated the Vue Router documentation to portuguese, but it's 80 percent. Is it possible do a pull request or it's better to complete the translation and finally do a pull request once for all?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3373","RelatedDescription":"Closed issue \"Docs: portuguese translation\" (#3373)"},{"Id":"741190750","IsPullRequest":true,"CreatedAt":"2020-11-13T20:52:24","Actor":"stephahart","Number":"3370","RawContent":null,"Title":"feat(history): allow full base url","State":"closed","Body":"I'm working on a project that includes a <base> tag in the HTML so that all static assets are loaded through a CDN on a different domain. When you add a <base> tag, relative paths pushed to the history API use the href of the <base> instead of window.location.host.\r\n\r\nIn order to not direct the user to the CDN, I'd like to make a change to allow vue-router to accept full URLs. This only requires a minor change to two lines:\r\n1. To ensure that a leading slash is not added before the protocol of a full URL in `normalizeBase`.\r\n2. To keep double slashes after the protocol in `cleanPath`.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3370","RelatedDescription":"Closed or merged PR \"feat(history): allow full base url\" (#3370)"},{"Id":"742745448","IsPullRequest":false,"CreatedAt":"2020-11-13T20:51:26","Actor":"stephahart","Number":"3372","RawContent":null,"Title":"Allow Protocol and Host to be Included in Base","State":"closed","Body":"### What problem does this feature solve?\r\nWhen the html includes a `<base>` tag, a default target is specified for all links on the page. For the app I'm working on, this `<base>` tag is only inserted for the production environment so that static assets are loaded through our CDN (all static assets are referenced with relative paths). \r\n(Note: we currently only build our app once and promote the build artifacts through our different environments (development, staging, production, etc.). Adding the `<base>` tag only for production allows us to do this, otherwise we'd have to rebuild the app for production only, which we don't want to do.)\r\n\r\nThis causes a unique issue where vue-router works in all environments except production (the only environment where the `<base>` tag is included). This is because vue-router links are relative and follow the target set by the `<base>` tag, which is expected behavior in the browser.\r\n\r\n### What does the proposed API look like?\r\nTo work around this issue, I would instead like to include the protocol/domain in our base so that router links stay on the same domain (instead of directing the user to the CDN). For example, our router would be initialized as so:\r\n```\r\nconst pathBase = \"/some-base\"\r\nconst router = new VueRouter({\r\n  mode: \"history\",\r\n  base: window.location.protocol + \"//\" + window.location.host + pathBase,\r\n  routes,\r\n});\r\n```\r\nRight now, providing the protocol/domain in the base option does not work because the base is assumed to be the beginning of a relative path.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3372","RelatedDescription":"Closed issue \"Allow Protocol and Host to be Included in Base\" (#3372)"},{"Id":"741443582","IsPullRequest":false,"CreatedAt":"2020-11-12T09:52:59","Actor":"citrusjunoss","Number":"3371","RawContent":null,"Title":"router.back Can't work when the popstate listener is removed","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2016](https://github.com/vuejs/vue-router/issues/2016)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIt's a strange problem and it's hard to reproduce。\r\n\r\nI found that the problem may lie in` hook:destroyed `C through breakpoint debugging\r\n\r\n```\r\n    app.$once('hook:destroyed', () => {\r\n      // clean out app from this.apps array once destroyed\r\n      const index = this.apps.indexOf(app)\r\n      if (index > -1) this.apps.splice(index, 1)\r\n      // ensure we still have a main app or null if no apps\r\n      // we do not release the router so it can be reused\r\n      if (this.app === app) this.app = this.apps[0] || null\r\n\r\n      if (!this.app) this.history.teardown()\r\n    })\r\n```\r\n\r\n` this.app `Is set to null, when the app is destroyed for some reason\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nrouter.back ()  works\r\n\r\n### What is actually happening?\r\nthe page is normal, just router.back () or router.go (- 1) not working, which is strange\r\n\r\n---\r\nThe code fragment cannot be provided because it is not required\r\n\r\nThe secondary routing component uses the `keepAlive`\r\n\r\n```\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <keep-alive :max=\"2\" :exclude=\"excludeViews\" :include=\"includeViews\">\r\n        <router-view :key=\"key\"></router-view>\r\n      </keep-alive>\r\n    </transition>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3371","RelatedDescription":"Closed issue \"router.back Can't work when the popstate listener is removed\" (#3371)"},{"Id":"740008196","IsPullRequest":false,"CreatedAt":"2020-11-10T16:16:49","Actor":"jods4","Number":"3369","RawContent":null,"Title":"Async support and navigating prop","State":"closed","Body":"### What problem does this feature solve?\r\nIt'd be nice if the router was able to handle `async setup()` components.\r\nNavigation would start, and router would wait for setup to resolve before mounting the new route.\r\nI handled this before by having `<Suspense>` around the router view but with recent changes vuejs/vue-next#2099 this doesn't work anymore.\r\n\r\nYou can say that using `beforeRouteEnter` is an alternative, e.g. to load data, but it results in really convoluted/bad code because `setup` must return an object with all state within, so `beforeRouteEnter` must mutate everything because the state has to live in its outer scope.\r\n\r\nTo round up async support, it would also be nice if the router had a reactive property indicating a navigation is in progress. This enables us to easily show feedback in UI whenever async navigation happens, which includes async components loading, async router hooks, async setup.\r\n\r\n### What does the proposed API look like?\r\nFor async setup support: no API, it should just work.\r\nFor the property. `isNavigating` ref  property on the router.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3369","RelatedDescription":"Closed issue \"Async support and navigating prop\" (#3369)"},{"Id":"739555232","IsPullRequest":false,"CreatedAt":"2020-11-10T08:43:00","Actor":"wlf100220","Number":"3368","RawContent":null,"Title":"Type `Route` is not assignable to type `Location`","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/cranky-resonance-psvmb?file=/main.ts](https://codesandbox.io/s/cranky-resonance-psvmb?file=/main.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```ts\r\nimport Router from 'vue-router'\r\n\r\nconst router = new Router()\r\nrouter.beforeEach((to, from, next) => {\r\n  next(to) // errors at this line\r\n})\r\n```\r\n\r\n### What is expected?\r\nno type errors\r\n\r\n### What is actually happening?\r\nTS2345: Argument of type 'Route' is not assignable to parameter of type 'string | false | void | Location | ((vm: Vue) => any) | undefined'.   Type 'Route' is not assignable to type 'Location'.     Types of property 'name' are incompatible.       Type 'string | null | undefined' is not assignable to type 'string | undefined'.         Type 'null' is not assignable to type 'string | undefined'.\r\n\r\n---\r\nCan u remove `null` in properties of `name` in type of `Route` or add it to the one of `Location`\r\n```ts\r\n// router.d.ts\r\nexport interface Location {\r\n  name?: string\r\n  path?: string\r\n  hash?: string\r\n  query?: Dictionary<string | (string | null)[] | null | undefined>\r\n  params?: Dictionary<string>\r\n  append?: boolean\r\n  replace?: boolean\r\n}\r\n\r\nexport interface Route {\r\n  path: string\r\n  name?: string | null\r\n  hash: string\r\n  query: Dictionary<string | (string | null)[]>\r\n  params: Dictionary<string>\r\n  fullPath: string\r\n  matched: RouteRecord[]\r\n  redirectedFrom?: string\r\n  meta?: any\r\n}\r\n```\r\n\r\n=>\r\n```ts\r\nexport interface Route {\r\n  path: string\r\n  name?: string\r\n  hash: string\r\n  query: Dictionary<string | (string | null)[]>\r\n  params: Dictionary<string>\r\n  fullPath: string\r\n  matched: RouteRecord[]\r\n  redirectedFrom?: string\r\n  meta?: any\r\n}\r\n```\r\nor \r\n\r\n```ts\r\nexport interface Location {\r\n  name?: string | null\r\n  path?: string\r\n  hash?: string\r\n  query?: Dictionary<string | (string | null)[] | null | undefined>\r\n  params?: Dictionary<string>\r\n  append?: boolean\r\n  replace?: boolean\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3368","RelatedDescription":"Closed issue \"Type `Route` is not assignable to type `Location`\" (#3368)"},{"Id":"738931053","IsPullRequest":false,"CreatedAt":"2020-11-09T11:57:48","Actor":"Shinigami92","Number":"3367","RawContent":null,"Title":"Docs: \"named chunks\" link directs to page not found","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n\\-\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to https://router.vuejs.org/guide/advanced/lazy-loading.html#grouping-components-in-the-same-chunk\r\n2. Click on `named chunks`-link\r\n3. See `Page Not Found`\r\n\r\n### What is expected?\r\nDirect to correct page\r\n\r\n### What is actually happening?\r\nPage Not Found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3367","RelatedDescription":"Closed issue \"Docs: \"named chunks\" link directs to page not found\" (#3367)"},{"Id":"737357225","IsPullRequest":false,"CreatedAt":"2020-11-06T07:14:15","Actor":"gsccheng","Number":"3366","RawContent":null,"Title":"Conditionally Redirect","State":"closed","Body":"### What problem does this feature solve?\r\nAllow a developer to configure whether or not a redirect happens in the [redirect](https://new-issue.vuejs.org/?repo=vuejs/vue-router) function.\r\n\r\n\r\n### What does the proposed API look like?\r\nSomething to the effect of if `false` is passed, a redirect does not happen. Otherwise redirect to returned path.\r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    { path: '/a', redirect: () => {\r\n      if (userIsLoggedIn) {\r\n        return \"path/to/somewhere/else\";\r\n      }  \r\n      return false;\r\n    }}\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3366","RelatedDescription":"Closed issue \"Conditionally Redirect\" (#3366)"},{"Id":"736924642","IsPullRequest":false,"CreatedAt":"2020-11-05T14:11:21","Actor":"Jordi735","Number":"3365","RawContent":null,"Title":"Wrong component being rendered when nested 3 deep with both <keep-alive> and <transition>","State":"closed","Body":"### Version\r\n3.4.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/3q97L50m/](https://jsfiddle.net/3q97L50m/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIf you nest a route 3 deep. With the one on the second and third level wrapped in both a `<keep-alive>` and `<transition>`. The wrong component renders when switching from level 2 if that makes sense.\r\n\r\n### What is expected?\r\nThe router should load whichever component is defined in the routes array.\r\n\r\n### What is actually happening?\r\nWhen you click on the deepest nested component, the one loaded previously always shows instead of the one the `<router-link>` points to.\r\n\r\n---\r\nI'm having a hard time explaining by typing. I really hope my fiddle shows it properly. (https://jsfiddle.net/3q97L50m/)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3365","RelatedDescription":"Closed issue \"Wrong component being rendered when nested 3 deep with both <keep-alive> and <transition>\" (#3365)"},{"Id":"736653707","IsPullRequest":false,"CreatedAt":"2020-11-05T07:00:10","Actor":"abhion","Number":"3364","RawContent":null,"Title":"createRouter, createWebHistory is undefined","State":"closed","Body":"### Version\r\n3.3.4\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-dynamic-components-forked-xij8q](https://codesandbox.io/s/vue-dynamic-components-forked-xij8q)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nimport createWebHistory from vue-router\r\n\r\n### What is expected?\r\nI am trying to test vue-router. It mentions in this link https://vue-test-utils.vuejs.org/v2/guide/vue-router.html#with-a-real-router the steps to follow\r\n\r\n### What is actually happening?\r\nWhen I run the test I get typeerror: (01,\r\ncreateWebHistory\r\n), is not a function. I printed createWebHistory and it is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3364","RelatedDescription":"Closed issue \"createRouter, createWebHistory is undefined\" (#3364)"},{"Id":"735944074","IsPullRequest":false,"CreatedAt":"2020-11-04T09:12:41","Actor":"xianjing123","Number":"3363","RawContent":null,"Title":"vue3 vue-router Uncaught Error","State":"closed","Body":"Uncaught Error: Catch all routes (\"*\") must now be defined using a param with a custom regexp.","Url":"https://github.com/vuejs/vue-router/issues/3363","RelatedDescription":"Closed issue \"vue3 vue-router Uncaught Error\" (#3363)"},{"Id":"734405320","IsPullRequest":false,"CreatedAt":"2020-11-03T07:56:33","Actor":"beit46","Number":"3361","RawContent":null,"Title":"Before Hook guard and currentRoute fullPath","State":"closed","Body":"### Version\r\n3.4.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9oxdastu/](https://jsfiddle.net/9oxdastu/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Implement a beforeEach hook on the router\r\n- On the beforeHook use a next({ name: 'PageNotFound' })\r\n- Call a router.push() and expect that it use the previous line next()\r\n- Using a catch on the router.push that should be redirected, does not updates router.currentRoute.fullPath to match the PageNotFound URL\r\n- After the block execute router.push().then.catch, even if I sleep(500), the router.currentRoute.fullPath is not updated correctly. \r\n- When I use the afterHook on the router, I Can correctly see my router updated\r\n\r\n### What is expected?\r\nI expect the \"router.currentRoute.fullPath\" to match the route I redirect to in the beforeEach hook next() \r\n\r\n### What is actually happening?\r\nThe router.currentRoute.fullPath doesn't get updated, it reflects the endpoint prior to the redirected router.push()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3361","RelatedDescription":"Closed issue \"Before Hook guard and currentRoute fullPath\" (#3361)"},{"Id":"734510048","IsPullRequest":false,"CreatedAt":"2020-11-03T07:30:55","Actor":"ionesculiviucristian","Number":"3362","RawContent":null,"Title":"Router link error when pushing","State":"closed","Body":"### Version\r\n3.4.8\r\n\r\n### Steps to reproduce\r\nWhen navigating back and forth through the router view, I get this error when using this.$router.push:\r\n\r\n```html\r\n<router-link v-if=\"hasRoute\" @click.native=\"navigate\" :to=\"_route\" exact tag=\"li\">\r\n```\r\n\r\n```js\r\n  methods: {\r\n    navigate (route) {\r\n      this.$router.push(route).catch(failure => console.log(failure));\r\n    }\r\n  },\r\n```\r\n\r\n```js\r\nvue.runtime.esm.js?2b0e:1888 TypeError: relative.charAt is not a function\r\n    at resolvePath (vue-router.esm.js?8c4f:460)\r\n    at normalizeLocation (vue-router.esm.js?8c4f:1031)\r\n    at Object.match (vue-router.esm.js?8c4f:1523)\r\n    at VueRouter.match (vue-router.esm.js?8c4f:2867)\r\n    at HTML5History.transitionTo (vue-router.esm.js?8c4f:2194)\r\n    at HTML5History.push (vue-router.esm.js?8c4f:2544)\r\n    at VueRouter.push (vue-router.esm.js?8c4f:2966)\r\n    at VueComponent.nav (TextItem.vue?44a0:26)\r\n    at click (eval at ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"9a00ad72-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/pages/breadcrumbs/TextItem.vue?vue&type=template&id=553682da& (app.4f4bad17703210e3baf8.hot-update.js:11), <anonymous>:15:26)\r\n    at invokeWithErrorHandling (vue.runtime.esm.js?2b0e:1854)\r\n```\r\n\r\nWhen debugged, relative has the value of:\r\n\r\n```js\r\nrelative: Array(12)\r\n0: span\r\n1: a\r\n2: li.router-link-exact-active.router-link-active\r\n3: ul.v-breadcrumbs.theme--dark\r\n4: div.v-toolbar__content\r\n5: header.v-sheet.theme--dark.v-toolbar.v-toolbar--dense.v-app-bar.v-app-bar--clipped.v-app-bar--fixed\r\n6: div.v-application--wrap\r\n7: div#app.v-application.v-application--is-ltr.theme--dark\r\n8: body\r\n9: html\r\n10: document\r\n11: Window {window: Window, self: Window, document: document, name: \"\", location: Location, …}\r\nlength: 12\r\n__proto__: Array(0)\r\n```\r\n\r\n### What is expected?\r\nFor the navigation to actually happen correctly\r\n\r\n### What is actually happening?\r\nNavigates to a previous link and shows an error when pushing\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3362","RelatedDescription":"Closed issue \"Router link error when pushing\" (#3362)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"751525209","IsPullRequest":false,"CreatedAt":"2020-11-26T11:43:50","Actor":"songololo","Number":"1890","RawContent":null,"Title":"v4 reactive getters behaviour appears to have changed for nested methods?","State":"open","Body":"### What problem does this feature solve?\r\nI used to be able to apply a reactive getter to a nested method inside an object instance stored in my v3 `vuex` state, but this doesn't appear to work anymore in v4.\r\n\r\nIn my case it was a `mapbox` instance which was created and then stored inside the `vuex` v3 store's state. I could then share this instance amongst various components and could also watch the instance for changes via reactive getters.\r\n\r\nFor example:\r\n```js\r\nstate: {\r\n  mapInstance: null, // <- gets assigned with a mapbox instance\r\n  // mapInstance contains a method called \"getZoom()\"\r\n},\r\ngetters: {\r\n  zoom: (state) => (state.mapInstance ? state.mapInstance.getZoom() : null),\r\n}\r\n```\r\n\r\nThe same approach no longer works in `vuex` v4.\r\n\r\n### What does the proposed API look like?\r\nI'm assuming something has changed in the internals of `vuex` v3 vs. v4: is there a way to deliberately expose certain nested properties or methods to reactive getters in `vuex` v4? Or else to enable the previous functionality?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1890","RelatedDescription":"Open issue \"v4 reactive getters behaviour appears to have changed for nested methods?\" (#1890)"},{"Id":"751221578","IsPullRequest":false,"CreatedAt":"2020-11-26T08:16:27","Actor":"aleksey-hoffman","Number":"1889","RawContent":null,"Title":"Mutation handlers need some serious re-evaluation 🐒","State":"closed","Body":"### What problem does this feature solve?\r\nHey guys, can we discuss Vuex mutation handlers - arguably the most nonsensical thing in Vuex?\r\n\r\nI've been developing a big complex app for 2+ years with Vue and I still haven't found good reasons to keep using mutation handlers. According to Vuex docs and my experience, the only thing they do is make debugging a little bit easier in some situations, while over-complicating the codebase and making development process undoubtedly a lot more annoying for no good reason.\r\n\r\n### Examples: \r\nCompare the 2 examples demonstrated below, look at how much less code it takes to open a dialog and to change some of its properties by using the 1st method, compared to the 2nd method.\r\n\r\n🐒 icon points out the problematic areas\r\n\r\n## Method 1: direct mutation\r\nThis method achieves the same thing as the 2nd method, but requires **hundreds of times** less code (when app has a lot of components), which in itself makes code cleaner and less susceptible to bugs, which results in much more enjoyable development experience.\r\n\r\n### `App.vue`\r\n\r\n```html\r\n<v-btn @click=\"createNewItem({ type: 'file', extension: 'txt' })\">\r\n  Create new item\r\n</v-btn>\r\n```\r\n```js\r\nwatch: {\r\n  // Creating a global store watcher that handles actions, required for specific store properties\r\n  dialogs () {\r\n    handler (value) {\r\n      const propertyShouldBeWrittenToDrive = ...\r\n      if (propertyShouldBeWrittenToDrive) {\r\n        this.$store.dispatch('WRITE_TO_DRIVE', propertyShouldBeWrittenToDrive)\r\n      }\r\n    },\r\n    deep: true\r\n  }\r\n},\r\nmethods: {\r\n  createNewItem (params) {\r\n    // Set dialog data\r\n    this.$store.state.dialogs.createNewItemDialog.data = { \r\n      ...this.$store.state.dialogs.createNewItemDialog.data,\r\n      ...params \r\n    }\r\n    // Open dialog\r\n    this.$store.state.dialogs.createNewItemDialog.isOpened = true\r\n  }\r\n}\r\n```\r\n\r\n### `Dialogs.vue`\r\n```html\r\n<v-dialog v-model=\"$store.state.dialogs.createNewItemDialog.isOpened\">\r\n  <div class=\"title\">\r\n    Create new {{$store.state.dialogs.createNewItemDialog.data.type}}\r\n  </div>\r\n  <v-text-field\r\n    v-model=\"createNewItemDialog.data.name\"\r\n  />\r\n  <v-btn @click=\"$store.state.dialogs.createNewItemDialog.isOpened = false\">\r\n    close dialog\r\n  </v-btn>\r\n</v-dialog>\r\n```\r\n```js\r\n// NO COMPUTED PROPERTIES NEEDED\r\n```\r\n\r\n### `store.js`\r\n```js\r\nstate = {\r\n  dialogs: {\r\n    createNewItemDialog: {\r\n      value: false,\r\n      data: {\r\n        type: 'file',\r\n        name: '',\r\n        extension: ''\r\n      }\r\n    } \r\n  }\r\n}\r\n\r\n// NO MUTATIONS AND ACTIONS NEEDED\r\n```\r\n\r\nI know this method might, in theory, make it more difficult to track down the source of errors, but in practice, if there's only 3-5 functions that change a specific state property, it's pretty easy to determine which one of them caused the error by following the event logic. Mutations are always caused by some sort of known event (button press, input change, etc), so when an error appears during a specific event, it's not that difficult to track down the function that caused it, without using mutation handlers anyway.\r\n\r\n## Method 2: mutation handlers\r\n\r\nThis method is considered to be \"the best practice\" just because it improves debugging, while requiring a ton more work. Here's all the code you will need to set up the same dialog using this method.\r\n\r\nThis example is written with the official Vuex guidelines in mind (create getters, setters, create a separate action and mutation for each property, etc) to additionally demonstrate the absurdity of the current Vuex implementation.\r\n\r\n### `App.vue`\r\n\r\n```html\r\n<v-btn @click=\"createNewItem({ type: 'file', extension: 'txt' })\">\r\n  Create new item\r\n</v-btn>\r\n```\r\n\r\n```js\r\ncomputed: {\r\n  🐒createNewItemDialogIsOpened: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.isOpened\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    }\r\n  },\r\n  🐒createNewItemDialogData: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA', value)\r\n    }\r\n  },\r\n  // 🐒 100 more similar computed properties for all the baseline properties of the other 50 dialogs\r\n  // ... {1,000 lines of code} ...\r\n},\r\nmethods: {\r\n  createNewItem (params) {\r\n    // Set dialog data\r\n    this.createNewItemDialogData = { ...this.createNewItemDialogData, ...params }\r\n    // Open dialog\r\n    this.createNewItemDialogIsOpened = true\r\n  }\r\n}\r\n```\r\n\r\n### `Dialogs.vue`\r\n\r\n```html\r\n<v-dialog v-model=\"createNewItemDialogIsOpened\">\r\n  <div class=\"title\">\r\n    Create new {{createNewItemDialogDataType}}\r\n  </div>\r\n  <v-text-field\r\n    v-model=\"createNewItemDialogDataName\"\r\n  />\r\n  <v-text-field\r\n    v-model=\"createNewItemDialogDataExtension\"\r\n  />\r\n  <v-btn @click=\"createNewItemDialogIsOpened = false\">\r\n    close dialog\r\n  </v-btn>\r\n</v-dialog>\r\n```\r\n\r\n```js\r\ncomputed: {\r\n  🐒createNewItemDialogIsOpened: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.isOpened\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    }\r\n  },\r\n  🐒createNewItemDialogDataType: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.type\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE', value)    \r\n    }\r\n  },\r\n  🐒createNewItemDialogDataName: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.name\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME', value)\r\n    }\r\n  },\r\n  🐒createNewItemDialogDataExtension: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.extension\r\n    },\r\n    set (value) {\r\n       this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION', value)\r\n    }\r\n  },\r\n  // 🐒 300 more similar computed properties for all the properties of the other 50 dialogs\r\n  // ... {3,000 lines of code} ...\r\n}\r\n```\r\n\r\n### `store.js`\r\n```js\r\nconst state = {\r\n  dialogs: {\r\n    createNewItemDialog: {\r\n      value: false,\r\n      data: {\r\n        type: 'file',\r\n        name: '',\r\n        extension: ''\r\n      }\r\n    } \r\n  }\r\n}\r\n\r\nmutations: {\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED (state, value) {\r\n    state.dialogs.createNewItemDialog.isOpened = value\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA (state, value) {\r\n    state.dialogs.createNewItemDialog.data = value\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE (state, value) {\r\n    state.dialogs.createNewItemDialog.data.type = value\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME (state, value) {\r\n    state.dialogs.createNewItemDialog.data.name= value\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION (state, value) {\r\n    state.dialogs.createNewItemDialog.data.extension= value\r\n  },\r\n  // 🐒 5000 more similar Vuex mutations for all the properties of the other 50 dialogs and other components\r\n  // ... {50,000 lines of code} ...\r\n},\r\nactions: {\r\n  WRITE_TO_DRIVE (state, params) {\r\n    ...\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    dispatch('WRITE_TO_DRIVE', value)\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA', value)\r\n  },\r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE ', value)\r\n  }, \r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME ', value)\r\n  }, \r\n  🐒SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION', value)\r\n  }, \r\n  // 🐒 5000 more similar Vuex actions for all the properties of the other 50 dialogs and other components\r\n  // ... {50,000 lines of code} ...\r\n}\r\n```\r\n\r\nAnd you have to do this for every single component of the app.\r\n\r\nAdd to that the inability to mutate properties from within a Vuex action and the fact that direct mutations are 10 - 500 times faster than the mutation handlers in cases where properties is mutated rapidly (once every few milliseconds), e.g. a slider without a debouncer / throttle, and it becomes clear that this insanity needs a re-evaluation.\r\n\r\nIn the real code, I managed to reduce the amount of computed properties by generating them dynamically for every nested property in `beforeCreated` hook of every component, and reduced the amount of mutations by creating a single generalized custom mutation function that sets specified deep properties automatically from the specified `'dot.notation.property.path'` string. But if this kind of heavy lifting is supposed be implemented manually by every developer for every new project, Vuex shouldn't really be considered a library then.\r\n\r\n### What does the proposed API look like?\r\nAnything but this. Surely there is a better / smarter / simpler way to do traceable mutations.\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1889","RelatedDescription":"Closed issue \"Mutation handlers need some serious re-evaluation 🐒\" (#1889)"},{"Id":"748443435","IsPullRequest":true,"CreatedAt":"2020-11-25T15:19:22","Actor":"kiaking","Number":"1884","RawContent":null,"Title":"fix: fix getters stop working when component is destroyed","State":"closed","Body":"ref #1878 #1883\r\n\r\nThis PR temporarily fixes the issue where getters (`computed`) get destroyed when components get destroyed. The limitation is that with this fix, getters will get re-evaluated each time it gets accessed regardless of whether dependencies have got updated or not.\r\n\r\nIt's not an ideal fix, but we have to wait for Vue 3.1 release to fix this issue completely. Learn more at #1883.","Url":"https://github.com/vuejs/vuex/pull/1884","RelatedDescription":"Closed or merged PR \"fix: fix getters stop working when component is destroyed\" (#1884)"},{"Id":"744177745","IsPullRequest":false,"CreatedAt":"2020-11-25T15:15:00","Actor":"jmcooper","Number":"1874","RawContent":null,"Title":"Documentation Clarity for Getters in Vuex Modules","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/guide/modules.html#namespacing](https://vuex.vuejs.org/guide/modules.html#namespacing)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis is a problem with the documentation.\r\n\r\n### What is expected?\r\nGreater clarity on getters in Vuex modules\r\n\r\n### What is actually happening?\r\nIn the namespacing section there is this explanation for why getters, actions and mutations are not namespaced by default:\r\n\"By default, actions, mutations and getters inside modules are still registered under the global namespace - this allows multiple modules to react to the same mutation/action type.\"\r\n\r\nThat reasoning (allowing multiple modules to react) is true for mutations an actions, but it doesn't explain the purpose for getters. In fact, it feels inaccurate to be grouping getters into this reasoning since it's actually erroneous to suggest you can have getters with the same name in multiple non-namespaced modules (or root) when that, in fact, will produce an error.\r\n\r\n---\r\nWhat is the purpose for a module's getters being global by default? If there is a purpose, can it be included here in the documentation?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1874","RelatedDescription":"Closed issue \"Documentation Clarity for Getters in Vuex Modules\" (#1874)"},{"Id":"750605030","IsPullRequest":false,"CreatedAt":"2020-11-25T08:36:27","Actor":"maartenvanasperen","Number":"1888","RawContent":null,"Title":"add config to index types, this.$config from Nuxt is not recognised in the store (typescript).","State":"closed","Body":"### What problem does this feature solve?\r\nIn Vuex the config values from Nuxt are not recognised in Typescript: https://nuxtjs.org/blog/moving-from-nuxtjs-dotenv-to-runtime-config#using-your-config-values. So this.$config is available in the Vuex store and I can access the values, but it says property '$config' does not exist on type 'store'\r\n\r\nIn any vue component (with TS) it gets recognised and works as intended, but not in the Vuex store.\r\n\r\n### What does the proposed API look like?\r\nin vuex/types/index.d.ts add:\r\n`config: any;\r\n`\r\nThis resolves the problem and $config gets recognised in the Vuex store. Or is there a better way to extend the index.d.ts? I couldn't find how.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1888","RelatedDescription":"Closed issue \"add config to index types, this.$config from Nuxt is not recognised in the store (typescript).\" (#1888)"},{"Id":"750108597","IsPullRequest":true,"CreatedAt":"2020-11-24T22:28:09","Actor":"loongye","Number":"1887","RawContent":null,"Title":"Update index.md","State":"closed","Body":"Add missing mutation","Url":"https://github.com/vuejs/vuex/pull/1887","RelatedDescription":"Closed or merged PR \"Update index.md\" (#1887)"},{"Id":"749093713","IsPullRequest":true,"CreatedAt":"2020-11-24T02:17:28","Actor":"periscuelo","Number":"1885","RawContent":null,"Title":"(Some fixes for Vuex 3 ptbr docs)","State":"closed","Body":"@kiaking when you could merge I'll be glad. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1885","RelatedDescription":"Closed or merged PR \"(Some fixes for Vuex 3 ptbr docs)\" (#1885)"},{"Id":"749096916","IsPullRequest":true,"CreatedAt":"2020-11-24T02:16:21","Actor":"periscuelo","Number":"1886","RawContent":null,"Title":"(docs 4.0 ptbr fix)","State":"closed","Body":"A little translation fix\r\n\r\n@kiaking when you could merge I'll be glad. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1886","RelatedDescription":"Closed or merged PR \"(docs 4.0 ptbr fix)\" (#1886)"},{"Id":"741607945","IsPullRequest":false,"CreatedAt":"2020-11-23T03:17:15","Actor":"yaquawa","Number":"1870","RawContent":null,"Title":"How to create on-reactive item in the store?","State":"closed","Body":"### Version\r\nv4.0.0-rc.1\r\n\r\nAll item in the store are be converted into Proxy.\r\nBut the proxy object won't forward method call to the original one.\r\nI want to add an object as a on-reactive item so that I can call the methods on the object.\r\nOr is there any way to access the original object from the proxy object?\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1870","RelatedDescription":"Closed issue \"How to create on-reactive item in the store?\" (#1870)"},{"Id":"748309109","IsPullRequest":true,"CreatedAt":"2020-11-22T18:18:50","Actor":"kiaking","Number":"1883","RawContent":null,"Title":"fix: fix getters being destroyed on component destroy (#1878)","State":"open","Body":"fix #1878\r\n\r\nThis PR aims to fix #1878, but at the moment this is just adding failing test case.\r\n\r\nThe problem we have is that when component gets destroyed, the getters (`computed`) get's destroyed via Vue. Hence if we call `registerModule` inside a component, any newly registered `computed` will disappear when that component gets destroyed, for example, when switching route.\r\n\r\nThe issue: vuejs/vue-next#1532\r\nSolution RFC: vuejs/rfcs#212\r\n\r\nWe have to wait for Vue 3.1 to completely resolve this issue.","Url":"https://github.com/vuejs/vuex/pull/1883","RelatedDescription":"Open PR \"fix: fix getters being destroyed on component destroy (#1878)\" (#1883)"},{"Id":"748211412","IsPullRequest":true,"CreatedAt":"2020-11-22T13:43:36","Actor":"periscuelo","Number":"1882","RawContent":null,"Title":"(docs ptBR fixes 4.0)","State":"closed","Body":"Some fixes found\r\n\r\n@ktsn I'll make reviews of translation 3.0 after too.\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1882","RelatedDescription":"Closed or merged PR \"(docs ptBR fixes 4.0)\" (#1882)"},{"Id":"742844673","IsPullRequest":true,"CreatedAt":"2020-11-22T13:31:48","Actor":"sebamarynissen","Number":"1872","RawContent":null,"Title":"Add Node.js esm entry point","State":"closed","Body":"This PR adds a Node.js esm entry point for Vuex. Currently it is already possible to do\r\n```js\r\nimport Vuex from 'vuex'\r\n```\r\non Node 13.2 and up, but unfortunately it's not possible to do\r\n```js\r\nimport { mapGetters } from 'vuex';\r\n```\r\nbecause Node doesn't support named imports from CommonJS (note: it actually *does*, but only if the imported cjs file adheres to some rules, such as using `exports.mapGetters`). This PR adds support for named imports on Node as well.\r\n\r\nWhile it *is* possible to directly use `dist/vuex.esm.js`, this PR does not use that file but chooses to use an esm wrapper file as to avoid the [dual package hazard](https://nodejs.org/api/packages.html#packages_approach_1_use_an_es_module_wrapper).\r\n\r\n### Why?\r\n\r\nNode.js now fully supports esm so let's encourage the migration process by improving interoperability of the code we write. I've created this PR in the wake of writing [vue-esm-loader](https://www.npmjs.com/package/vue-esm-loader) which allows importing `.vue` single-file components on Node without a build step. I noticed that I was unable to test my Vue components because they were using\r\n```js\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState(['state']),\r\n  },\r\n};\r\n```\r\nand hence decided to add this functionality to Vuex.\r\n\r\nRelated: https://github.com/chaijs/chai/pull/1340","Url":"https://github.com/vuejs/vuex/pull/1872","RelatedDescription":"Closed or merged PR \"Add Node.js esm entry point\" (#1872)"},{"Id":"748201196","IsPullRequest":false,"CreatedAt":"2020-11-22T09:07:54","Actor":"weishijun14","Number":"1881","RawContent":null,"Title":"memory leak with socket.io and vue devtools ","State":"open","Body":"### Version\r\nvuex 4.0.0-beta.4\r\nvue 3.0.0\r\nsocket.io 2.3.1\r\n\r\n### Reproduction link\r\n\r\n**no links**\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm use socket.io , and I have a big Json data, more than 100kb per 3 second,\r\n```javascript\r\n socket.on('someEvent', function(data) {\r\n       // data almost 100kb -- 150kb\r\n       _this.$store.commit('someMutationsName', data);\r\n  })\r\n\r\n```\r\n\r\n### What is expected?\r\nChrome momery keep normal.\r\n\r\n### What is actually happening?\r\nChrome momery usage keep increasing.\r\n\r\n---\r\nWhen I **comment this code** :\r\n```javascript\r\nthis._subscribers\r\n    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\r\n    .forEach(function (sub) { return sub(mutation, this$1.state); });\r\n```\r\n\r\nor **uninstall Chrome vue devtool**  which I use this version:\r\n\r\n6.0.0 beta 2\r\n\r\nIt's back to normal.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1881","RelatedDescription":"Open issue \"memory leak with socket.io and vue devtools \" (#1881)"},{"Id":"746179166","IsPullRequest":false,"CreatedAt":"2020-11-22T07:54:22","Actor":"jessuni","Number":"1876","RawContent":null,"Title":"Documentation style bug","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://next.vuex.vuejs.org/#what-is-a-state-management-pattern](https://next.vuex.vuejs.org/#what-is-a-state-management-pattern)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nShrink viewport to less than 959px wide, there's an additional `margin-left` that squeezes the docs to the right and leave a blank block in the center. Same for viewport-width <= 719px, the left padding squeezes the whole docs.\r\n\r\n### What is expected?\r\nNormal article layout just like https://vuex.vuejs.org/\r\n\r\n### What is actually happening?\r\nStyling bug\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1876","RelatedDescription":"Closed issue \"Documentation style bug\" (#1876)"},{"Id":"748142257","IsPullRequest":true,"CreatedAt":"2020-11-22T07:47:25","Actor":"periscuelo","Number":"1880","RawContent":null,"Title":"(Add pt-br language) Vuex 4","State":"closed","Body":"Translated to Portuguese BR\r\nAdded config menu\r\n\r\n@ktsn Is it already possible to make the translation available? After a review of course?","Url":"https://github.com/vuejs/vuex/pull/1880","RelatedDescription":"Closed or merged PR \"(Add pt-br language) Vuex 4\" (#1880)"},{"Id":"747579521","IsPullRequest":false,"CreatedAt":"2020-11-20T16:33:10","Actor":"musashiM82","Number":"1879","RawContent":null,"Title":"try to add registerModule in router beforeEach","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://github.com/musashiM82/register-module-in-router](https://github.com/musashiM82/register-module-in-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* clone repo\r\n* execute `npm i && npm run serve`\r\n* open web app in browser\r\n* check console error ` [vuex] module namespace not found in mapGetters(): home/`\r\n* click on About link\r\n* check console error ` [vuex] module namespace not found in mapGetters(): about/`\r\n\r\n\r\n### What is expected?\r\nit is expected that store module is registered in correct way\r\n\r\n### What is actually happening?\r\nit is like that store module is not registered\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1879","RelatedDescription":"Closed issue \"try to add registerModule in router beforeEach\" (#1879)"},{"Id":"747574828","IsPullRequest":false,"CreatedAt":"2020-11-20T15:22:55","Actor":"musashiM82","Number":"1878","RawContent":null,"Title":"lost previous registered module during multiple registration","State":"open","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://github.com/musashiM82/register-module-in-before-create-page](https://github.com/musashiM82/register-module-in-before-create-page)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* clone repo\r\n* execute `npm i && npm run serve`\r\n* open web app in browser\r\n* in \"Home\" page you can see \"state.home.count 1\"\r\n* click on \"About\" link\r\n* click on \"Home\" link\r\n* in \"Home\" page you can see \"state.home.count\" now\r\n\r\n### What is expected?\r\nit is expected that the second time that I go into Home page I continue to see \"state.home.count 1\"\r\n\r\n### What is actually happening?\r\nit is happening that I see \"state.home.count\". it is like the previous registered module is lost\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1878","RelatedDescription":"Open issue \"lost previous registered module during multiple registration\" (#1878)"},{"Id":"746443039","IsPullRequest":false,"CreatedAt":"2020-11-19T10:36:49","Actor":"jaoord","Number":"1877","RawContent":null,"Title":"Which version of vuex should I use directly in the browser?","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tda81ybc/](https://jsfiddle.net/tda81ybc/)\r\n\r\n### Steps to reproduce\r\nhtml:\r\n`<script src=\"https://unpkg.com/vue@3.0.2/dist/vue.global.js\"></script>\r\n<script src=\"https://unpkg.com/vuex@3.5.1/dist/vuex.global.js\"></script>\r\n<div id=\"app\">\r\n  <p>{{ message }}</p>\r\n</div>\r\n`\r\n\r\njs:\r\n`\r\nconst store = new Vuex.Store({\r\n    state: function() {\r\n        return {\r\n            filter: {\r\n                roofType: ''\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst app = Vue.createApp({\r\n    data: function () {\r\n        return {\r\n           message: 'Hello World'\r\n        }\r\n    },\r\n    methods: {\r\n    }\r\n});\r\n\r\napp.use(store);\r\nconst mountedApp = app.mount('#app');\r\n`\r\n\r\n### What is expected?\r\nno reference to process\r\n\r\n### What is actually happening?\r\nreference to process:\r\n\r\nUncaught ReferenceError: process is not defined\r\n    at new Store (vuex.global.js:290)\r\n    at ?editor_console=true:120\r\n\r\n---\r\nthe naming of the builds is quite confusing. there is for example a vuex.esm-browser.js, a vuex.esm.browser.js file, and cjs and commonjs files.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1877","RelatedDescription":"Closed issue \"Which version of vuex should I use directly in the browser?\" (#1877)"},{"Id":"743677471","IsPullRequest":false,"CreatedAt":"2020-11-18T02:46:19","Actor":"ShenQingchuan","Number":"1873","RawContent":null,"Title":"How to access Vuex store in VueRouter.beforeEach in TypeScript?","State":"closed","Body":"### What problem does this feature solve?\r\nI want to set a guard in VueRouter.beforeEach(), it will redirect to the login page when the `loggedIn` state is `false`.\r\n\r\n### What does the proposed API look like?\r\nI want to achieve something this this:\r\n\r\n```typescript\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1873","RelatedDescription":"Closed issue \"How to access Vuex store in VueRouter.beforeEach in TypeScript?\" (#1873)"},{"Id":"744496081","IsPullRequest":false,"CreatedAt":"2020-11-17T07:48:43","Actor":"leeboo","Number":"1875","RawContent":null,"Title":"vue 3.0, vuex 4.0 能否采用数组语法动态的给state设置，比如state[name] = value","State":"closed","Body":"目前会报警告：Write operation failed: computed value is readonly\r\n但赋值是成功了的\r\n有什么影响，能否消除这个警告","Url":"https://github.com/vuejs/vuex/issues/1875","RelatedDescription":"Closed issue \"vue 3.0, vuex 4.0 能否采用数组语法动态的给state设置，比如state[name] = value\" (#1875)"},{"Id":"742256391","IsPullRequest":false,"CreatedAt":"2020-11-16T11:26:29","Actor":"yaquawa","Number":"1871","RawContent":null,"Title":"match getter signature to actions","State":"closed","Body":"### Version\r\nv4.0.0-rc.1\r\n\r\nThe current signature of getter\r\n```ts\r\ntype Getter<S, R> = (state: S, getters: any, rootState: R, rootGetters: any) => any;\r\n```\r\n\r\nif I want to use `rootState` and `state` only, I have to write the `getters` in the 2nd parameter even if I'll never use it. \r\n```\r\ngetFoo(state, getters, rootState) {\r\n}\r\n```\r\n\r\nI think this is better, just like the signature of action handlers.\r\n```\r\ngetFoo({state, rootState}) {\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1871","RelatedDescription":"Closed issue \"match getter signature to actions\" (#1871)"},{"Id":"741563909","IsPullRequest":true,"CreatedAt":"2020-11-16T11:08:06","Actor":"Alanscut","Number":"1869","RawContent":null,"Title":"docs(typo): fix typos in comment","State":"closed","Body":"comment didn't update with the code.","Url":"https://github.com/vuejs/vuex/pull/1869","RelatedDescription":"Closed or merged PR \"docs(typo): fix typos in comment\" (#1869)"},{"Id":"737161621","IsPullRequest":true,"CreatedAt":"2020-11-16T11:06:45","Actor":"altinselimi","Number":"1868","RawContent":null,"Title":"Include mutations in the Vuex 4.x example","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1868","RelatedDescription":"Closed or merged PR \"Include mutations in the Vuex 4.x example\" (#1868)"},{"Id":"733966418","IsPullRequest":false,"CreatedAt":"2020-11-01T13:29:02","Actor":"liRemons","Number":"1867","RawContent":null,"Title":"Vue3.0 如何在 setup 中使用 mapGetter","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nimport { mapGetters ,useStore } from \"vuex\";","Url":"https://github.com/vuejs/vuex/issues/1867","RelatedDescription":"Closed issue \"Vue3.0 如何在 setup 中使用 mapGetter\" (#1867)"},{"Id":"733965787","IsPullRequest":false,"CreatedAt":"2020-11-01T13:26:03","Actor":"liRemons","Number":"1866","RawContent":null,"Title":"Vue3.0 如何在 setup 中使用  mapGetters","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1866","RelatedDescription":"Closed issue \"Vue3.0 如何在 setup 中使用  mapGetters\" (#1866)"},{"Id":"733897281","IsPullRequest":false,"CreatedAt":"2020-11-01T06:46:36","Actor":"donPuerto","Number":"1865","RawContent":null,"Title":"How to modulize typescript in v4","State":"closed","Body":"I just check v4 docs, i could not able to find the module example? can you lead me the way?","Url":"https://github.com/vuejs/vuex/issues/1865","RelatedDescription":"Closed issue \"How to modulize typescript in v4\" (#1865)"},{"Id":"732491452","IsPullRequest":false,"CreatedAt":"2020-10-29T16:59:05","Actor":"StephenBeirlaen","Number":"1864","RawContent":null,"Title":"Devtools time travel always shows the most recent state (without new Vuex backend)","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/StephenBeirlaen/vuex-base-state-issue](https://github.com/StephenBeirlaen/vuex-base-state-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Install a fresh vue install via the latest Vue CLI but custom build (I just used Vue 2.x and Vuex selected)\r\n- add in a simple state in the vuex store (int: 0)\r\n- add in a simple commit (updateInt(state) {state.int = 1})\r\n- add in any component this.$store.commit('updateInt')\r\n- make sure you do not have the \"new vuex backend\" option enabled in devtools settings(default)\r\n- both your states in the vuex tab(base state and updateInt) will not show int as 1 instead of base state showing 0\r\n\r\nOR\r\nUse the provided repository and run:\r\n- yarn install\r\n- yarn serve\r\n- steps from above\r\n\r\n### What is expected?\r\nI expect time travel to work when jumping through the mutations history. A more recent mutation should not modify the mutations before that.\r\n\r\n### What is actually happening?\r\nWhen the \"new Vuex back-end\" option is disabled:\r\n\r\nWhen time traveling using the devtools to the different mutation states, the most recent state is always shown instead, even when jumping to the base state.\r\n\r\nThis int value should be 0 in the base state:\r\n![image](https://user-images.githubusercontent.com/11806615/99369167-63e75600-28bc-11eb-955b-5eeff707c890.png)\r\n\r\nReproduced on Chrome in Ubuntu 20.04 with devtools plugin 5.3.3 (latest)\r\n\r\n---\r\nThis issue is fixed when enabling the \"new Vuex back-end\" option. However, since this is a stable release, the old version should also still work when it is not deprecated.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1864","RelatedDescription":"Open issue \"Devtools time travel always shows the most recent state (without new Vuex backend)\" (#1864)"},{"Id":"731138810","IsPullRequest":false,"CreatedAt":"2020-10-28T06:19:13","Actor":"huhm","Number":"1863","RawContent":null,"Title":"typescript declaration for vuex","State":"closed","Body":"### What problem does this feature solve?\r\nI want to override the typescript declaration,but it throws errors, because the file(``vuex/types/vue.d.ts``) has defined.\r\nIs there any solution ?\r\nshim-vue.d.ts\r\n``` ts\r\nimport { Store } from 'vuex'\r\nimport { IStoreModules } from './store/modules/interface'\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $store: Store<IStoreModules>\r\n  }\r\n}\r\n```\r\n\r\nit throws an Error:\r\n```\r\nSubsequent property declarations must have the same type.  Property '$store' must be of type 'Store<any>', but here has type 'Store<IStoreModules>'.\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\n==\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1863","RelatedDescription":"Closed issue \"typescript declaration for vuex\" (#1863)"},{"Id":"731135749","IsPullRequest":false,"CreatedAt":"2020-10-28T06:12:13","Actor":"huhm","Number":"1862","RawContent":null,"Title":"typescript declaration for vuex","State":"closed","Body":"I want to override the typescript declaration,but it throws errors, because the file(``vuex/types/vue.d.ts``) has defined.\r\nIs there any solution ?\r\nshim-vue.d.ts\r\n``` ts\r\nimport { Store } from 'vuex'\r\nimport { IStoreModules } from './store/modules/interface'\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $store: Store<IStoreModules>\r\n  }\r\n}\r\n```\r\n\r\nit throws an Error:\r\n```\r\nSubsequent property declarations must have the same type.  Property '$store' must be of type 'Store<any>', but here has type 'Store<IStoreModules>'.\r\n```\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1862","RelatedDescription":"Closed issue \"typescript declaration for vuex\" (#1862)"},{"Id":"730593488","IsPullRequest":false,"CreatedAt":"2020-10-27T16:08:28","Actor":"jechazelle","Number":"1861","RawContent":null,"Title":"Update object in v-for from computed and view reactivity","State":"closed","Body":"I would like to know how can I develop a reactivity computed when I update a value in v-for from computed.\r\n\r\nWhen I modified the Input in the child component, the view isn't rendering. In vuex, the state is updated, but not the view.\r\n\r\n> view from child component :\r\n\r\n[![enter image description here][1]][1]\r\n\r\n - First Hello : data.content (props from parent)\r\n - Second hello : currentPost.content (computed on child)\r\n - Third hello : input\r\n\r\n\r\nCurrently, I have 2 components :\r\n\r\n> parent.vue\r\n\r\n    <template>\r\n    <div class=\"parent\">\r\n        <child v-for=\"(post, indexPost) in posts\" :key=\"indexPost\" :index-post=\"indexPost\" :data=\"post\" />\r\n    </div>\r\n    </template>\r\n\r\n    <script>\r\n    import { mapGetters } from 'vuex'\r\n    import Post from '../child'\r\n\r\n    export default {\r\n    name: 'Parent',\r\n    components: {\r\n        child: Child,\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            posts: 'feed/getFeed',\r\n        }),\r\n    },\r\n    }\r\n    </script>\r\n\r\n> child.vue\r\n\r\n    <template>\r\n        <div class=\"child\">\r\n            <span class=\"content\">{{ data.content }}</span>\r\n            <span class=\"content\">{{ currentPost.content }}</span>\r\n\r\n            <input :value=\"data.content\" type=\"text\" placeholder=\"Content...\" @input=\"updatePostContent($event)\" />\r\n        </div>\r\n    </template>\r\n\r\n    <script>\r\n    import { mapGetters } from 'vuex'\r\n\r\n    export default {\r\n        name: 'Child',\r\n        props: {\r\n            indexPost: {\r\n                type: Number,\r\n                default: null,\r\n            },\r\n            data: {\r\n                type: Object,\r\n                default: null,\r\n            },\r\n        },\r\n        computed: {\r\n            currentPost() {\r\n                return this.$store.getters['feed/getFeed'][this.indexPost]\r\n            },\r\n        },\r\n        methods: {\r\n            updatePostContent(event) {\r\n                this.$store.dispatch('feed/updateFeedPost', {\r\n                    indexPost: this.indexPost,\r\n                    payload: { content: event.target.value },\r\n        })\r\n        },\r\n    }\r\n    </script>\r\n\r\n> store/feed.js \r\n\r\n    export const state = () => ({\r\n        feed: [],\r\n    })\r\n\r\n    export const getters = {\r\n        getFeed(state) {\r\n            return state.feed\r\n        },\r\n    }\r\n\r\n    export const mutations = {\r\n        GET_FEED(state, payload) {\r\n            state.feed = payload\r\n        },\r\n\r\n        UPDATE_FEED_POST(state, { indexPost, payload }) {\r\n            // I try with this\r\n            // state.feed[indexPost] = { ...state.feed[indexPost], ...payload }\r\n\r\n            state.feed[indexPost] = Object.assign({}, state.feed[indexPost], payload)\r\n        },\r\n    }\r\n\r\n    export const actions = {\r\n        getFeed({ commit }, payload) {\r\n            ...\r\n        },\r\n\r\n        updateFeedPost({ commit }, params) {\r\n            commit('UPDATE_FEED_POST', params)\r\n        },\r\n    }\r\n\r\n\r\nAfter some researches, I fixed that with use [Ramda](https://ramdajs.com/) in the store :\r\n\r\n      import * as R from 'ramda'\r\n\r\n      ...\r\n\r\n      UPDATE_FEED_POST(state, { indexPost, payload }) {\r\n        state.feed = R.over(R.lensPath([indexPost]), R.mergeDeepLeft(payload), state.feed)\r\n      },\r\n\r\nDo you have an idea, why with simple Object.assign the reactivity doesn't work?\r\n\r\nThank you !\r\n\r\n  [1]: https://i.stack.imgur.com/xmB67.png","Url":"https://github.com/vuejs/vuex/issues/1861","RelatedDescription":"Closed issue \"Update object in v-for from computed and view reactivity\" (#1861)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-27T05:30:43.9472638Z","RunDurationInMilliseconds":2016}