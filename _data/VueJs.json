{"Data":{"Vue-Issues":{"Issues":[{"Id":"764553003","IsPullRequest":true,"CreatedAt":"2020-12-12T23:12:49","Actor":"kevinlens","Number":"11820","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11820","RelatedDescription":"Closed or merged PR \"Update README.md\" (#11820)"},{"Id":"762138159","IsPullRequest":true,"CreatedAt":"2020-12-11T09:29:12","Actor":"dependabot[bot]","Number":"11819","RawContent":null,"Title":"build(deps): bump ini from 1.3.5 to 1.3.7","State":"open","Body":"Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.7\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vue/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vue/pull/11819","RelatedDescription":"Open PR \"build(deps): bump ini from 1.3.5 to 1.3.7\" (#11819)"},{"Id":"761949613","IsPullRequest":true,"CreatedAt":"2020-12-11T08:42:37","Actor":"Pabitra-26","Number":"11818","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11818","RelatedDescription":"Closed or merged PR \"Update README.md\" (#11818)"},{"Id":"760515760","IsPullRequest":true,"CreatedAt":"2020-12-09T17:16:59","Actor":"vue-bot","Number":"11817","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11817","RelatedDescription":"Open PR \"[automated] Patreon sponsors update\" (#11817)"},{"Id":"760189668","IsPullRequest":false,"CreatedAt":"2020-12-09T11:28:45","Actor":"Jemory-git","Number":"11816","RawContent":null,"Title":"a bug for cached page instance or the component(keep-alive) --- $destory","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://thisIssueNeednotLink.com](http://thisIssueNeednotLink.com)\r\n\r\n\r\nthis is another same issue : https://github.com/vuejs/vue/issues/6509#issuecomment-347787474\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、use <keep-alive> cache pages \r\n2、click btn to close the page， and destory the instance\r\n3、when reopen the page ，it will never be cached\r\n\r\n### What is expected?\r\nit is the most elegant method to cache pages with tab-tags。\r\nbut can not achieve cause this bug\r\n\r\n### What is actually happening?\r\nrepair\r\n\r\n---\r\nrepair\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11816","RelatedDescription":"Closed issue \"a bug for cached page instance or the component(keep-alive) --- $destory\" (#11816)"},{"Id":"760166673","IsPullRequest":false,"CreatedAt":"2020-12-09T09:36:55","Actor":"Jemory-git","Number":"11815","RawContent":null,"Title":"after cached page instance exec $destory,the page will never be cached; this bug existing many years??","State":"closed","Body":"看到$destroy这个方法，我觉得这就是正确的用法，通过组件里不同的用户行为决定离开页面时是否缓存组件。\r\n（比如一个留言组件，留言提交成功后这个组件应该销毁，如果没有提交，则应该保留缓存，让用户下次进来继续。）\r\n然而，destroy之后，再次重复进入这个组件会出现奇怪的结果，组件不能再被缓存了，我觉得这是bug吧。\r\n\r\n_Originally posted by @wanyaxing in https://github.com/vuejs/vue/issues/6509#issuecomment-347787474_","Url":"https://github.com/vuejs/vue/issues/11815","RelatedDescription":"Closed issue \"after cached page instance exec $destory,the page will never be cached; this bug existing many years??\" (#11815)"},{"Id":"759946153","IsPullRequest":false,"CreatedAt":"2020-12-09T08:42:50","Actor":"lynn-Chin","Number":"11813","RawContent":null,"Title":"Get same value on several items in a v-for loop","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/lynn-chin/pen/xxEEZgR](https://codepen.io/lynn-chin/pen/xxEEZgR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have an object array like this: [ { name: '01.jpg', id: 1234, url: '/example/01.jpg' }, { name: '02.jpg', id: 2345, url: '/example/02.jpg' } ];\r\nWhen I use v-for to render HTML structure, items in the object got same value for item.id:\r\n\r\nMy HTML structure is:\r\n           <div\r\n                class=\"single_image\"\r\n                v-for=\"(item, index) in images\"\r\n                :key=\"index\"\r\n              >\r\n                <img :src=\"item.url\" alt=\"\" />\r\n                <div class=\"image_title\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    @change=\"checkboxChange($event, item)\"\r\n                    ref=\"imgCheckBox\"\r\n                  />\r\n                  {{ item.name }}\r\n                </div>\r\n              </div>\r\nThe result of console.log(item.id, item.name) for each item:\r\n          12345678987654324  \"02.jpg\"    (wrong id)\r\n          12345678987654324  \"03.jpg\"    (wrong id)\r\n          12345678987654324  \"04.jpg\"\r\n          12345678987654326  \"05.jpg\"\r\n          12345678987654328  \"06.jpg\"    (wrong id)\r\n          12345678987654328  \"07.jpg\"    (wrong id)\r\n\r\nIf I change item.id's type from Number to String, this will not happen.\r\nI wanna know what is happen and how can I avoid this situation.  Does that mean I cannot use Number values in a v-for loop?\r\n\r\n### What is expected?\r\nI expect each item got its right id value.\r\n\r\n### What is actually happening?\r\nMost values for item.id are wrong.\r\n\r\n---\r\nMy Vue version is 2.6.12, but there's not such a choice.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11813","RelatedDescription":"Closed issue \"Get same value on several items in a v-for loop\" (#11813)"},{"Id":"760028517","IsPullRequest":true,"CreatedAt":"2020-12-09T06:01:42","Actor":"lduoduo","Number":"11814","RawContent":null,"Title":"fix: make ssr-build-plugin compatible with webpack4/5 (fix #11718)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nfixed issue [here](https://github.com/vuejs/vue/issues/11718)\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11814","RelatedDescription":"Open PR \"fix: make ssr-build-plugin compatible with webpack4/5 (fix #11718)\" (#11814)"},{"Id":"759428039","IsPullRequest":false,"CreatedAt":"2020-12-08T14:25:53","Actor":"gh-xiaoxiao","Number":"11812","RawContent":null,"Title":"\"watch\" always listen for an unchanged array !","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/gh-xiaoxiao/pen/ExgyewZ](https://codepen.io/gh-xiaoxiao/pen/ExgyewZ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnter text1 or text2, and then view the print information\r\n\r\n### What is expected?\r\nPrint \"form.text1\" or \"form.text2\" only\r\n\r\n### What is actually happening?\r\n\"form.arr\" is also printed out\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11812","RelatedDescription":"Closed issue \"\"watch\" always listen for an unchanged array !\" (#11812)"},{"Id":"757041371","IsPullRequest":false,"CreatedAt":"2020-12-08T09:37:18","Actor":"pndllxzzy","Number":"11805","RawContent":null,"Title":"sameVNode无法区分emptyVNode和AsyncPlaceholder","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/wonderful-ardinghelli-5fi3f?file=/src/views/same-vnode.vue](https://codesandbox.io/s/wonderful-ardinghelli-5fi3f?file=/src/views/same-vnode.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. 打开页面https://5fi3f.sse.codesandbox.io/same-vnode\r\n2. 打开devtools在console中发现报错信息\r\n\r\n### What is expected?\r\n无报错信息\r\n\r\n### What is actually happening?\r\nsameVnode方法判断emptyVNode与AsyncPlaceholder相等导致\r\npatchVnode isDef(vnode.asyncFactory.resolved)报错\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11805","RelatedDescription":"Closed issue \"sameVNode无法区分emptyVNode和AsyncPlaceholder\" (#11805)"},{"Id":"758778857","IsPullRequest":false,"CreatedAt":"2020-12-07T20:22:16","Actor":"StefanCardnell","Number":"11811","RawContent":null,"Title":"Default slots using functional components still call functional's render() when something else is slotted.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/happy-pascal-reiyx?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/happy-pascal-reiyx?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  Please see linked minimal example.\r\n2. Create a component A which uses a functional component B inside a default slot.\r\n3. Use Component A, but slot in something else so the functional component B does not appear.\r\n\r\n### What is expected?\r\nThe render() function of the functional component should not be called. As it does not appear, I shouldn't expect its render function to be called.\r\n\r\n### What is actually happening?\r\nThe render() function is called, as seen by the console output which logs when the function is called.\r\n\r\n---\r\nIssues:\r\n    I encountered this when I was creating a table with 10,000 cells and each \\<\\td\\> was a functional component. However the table was able to slot in its own component over the \\<\\td\\>. Doing so meant the slotted clotted was created along with 10,000 unnecessary renders() from the functional component. This added about ~1s load time.\r\n\r\nWorkarounds:\r\n    Don't put the functional component inside the slot. Instead, the functional component should be used outside and have a v-if on it checking if the slot has not been used. It is the same end result, but render() is not called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11811","RelatedDescription":"Closed issue \"Default slots using functional components still call functional's render() when something else is slotted.\" (#11811)"},{"Id":"758697253","IsPullRequest":false,"CreatedAt":"2020-12-07T17:58:00","Actor":"jrgleason","Number":"11810","RawContent":null,"Title":"Getting \"Uncaught DOMException: Operation is not supported\" when using Web Component inside Vue Component using ESM and Browser.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/jrgleason/jrg/blob/EXAMPLES_FRAMEWORK_INT/jrg-ui/examples/vue/index.html](https://github.com/jrgleason/jrg/blob/EXAMPLES_FRAMEWORK_INT/jrg-ui/examples/vue/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis is a basic HTML page and should \"just work\". What would be expected is that the web component is embedded in the Vue Component, however, only the vue on renders. If I move the Web Component outside of the Vue component it renders as expected. \r\n\r\n### What is expected?\r\nThe custom element (web component) renders inside the Vue component.\r\n\r\n### What is actually happening?\r\nI get \"Uncaught DOMException: Operation is not supported\"\r\n\r\n---\r\nSO Available here https://stackoverflow.com/questions/65182891/how-do-i-use-a-non-vue-custom-web-component-in-a-vue-component-without-webpack. Answer does not solve the issues as can be seen by my updated version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11810","RelatedDescription":"Closed issue \"Getting \"Uncaught DOMException: Operation is not supported\" when using Web Component inside Vue Component using ESM and Browser.\" (#11810)"},{"Id":"758293140","IsPullRequest":false,"CreatedAt":"2020-12-07T08:46:22","Actor":"FranciscoJavierMartin","Number":"11808","RawContent":null,"Title":"Show warning on console when developer names a component with the same name that a native HTML tag","State":"closed","Body":"### What problem does this feature solve?\r\nI try to create a component called \"Map\" that its name collide with the native HTML tag \"map\". I did not know this tag and did not see any warning or error on the console, simply the component is not showed on the page and I was wondering what was happening.\r\n\r\n### What does the proposed API look like?\r\nI want some warning on the console that show a message like \"You 'Map' component name collide with a native HTML tag. Please rename it\" to avoid these kind of errors. I think that it is useful specially for beginners developers.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11808","RelatedDescription":"Closed issue \"Show warning on console when developer names a component with the same name that a native HTML tag\" (#11808)"},{"Id":"757925761","IsPullRequest":true,"CreatedAt":"2020-12-06T13:27:43","Actor":"mangalan516","Number":"11807","RawContent":null,"Title":"added message","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11807","RelatedDescription":"Closed or merged PR \"added message\" (#11807)"},{"Id":"757685620","IsPullRequest":false,"CreatedAt":"2020-12-05T16:01:36","Actor":"Tzdy","Number":"11806","RawContent":null,"Title":"Prop default value cannot be set correctly","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/Tsdy/pen/vYXGXEr](https://codepen.io/Tsdy/pen/vYXGXEr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nfunction fun() {}\r\n        const vm = new Vue({\r\n            el: '#App',\r\n            components: {\r\n                MyComponent: {\r\n                    props: {\r\n                        text: {\r\n                            type: [Boolean, Function],\r\n                            default: fun\r\n                        }\r\n                    },\r\n                    template: `<div></div>`\r\n                }\r\n            }\r\n        })\r\n        console.log(vm.$children[0].text)\r\n    // undefined\r\n\r\n```\r\n\r\n### What is expected?\r\nI can find the text property in the vm.$children[0]\r\n\r\n### What is actually happening?\r\nvm.$children[0].text is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11806","RelatedDescription":"Closed issue \"Prop default value cannot be set correctly\" (#11806)"},{"Id":"756582943","IsPullRequest":false,"CreatedAt":"2020-12-03T21:49:18","Actor":"ottonomous","Number":"11804","RawContent":null,"Title":"Passing Boolean Prop With No value Without Type Validation on Child Component Is Interpreted as an Empty String Instead of True","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/tender-meitner-bpvvl](https://codesandbox.io/s/tender-meitner-bpvvl)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a child component\r\n2. Pass a boolean prop `boolean-prop` with no value\r\n3. Check the value of the prop in the child component\r\n\r\n### What is expected?\r\nThe prop value should be `true` and the type should be a boolean\r\n\r\n### What is actually happening?\r\nthe prop value is \"\" (an empty string) and the type is string\r\n\r\n---\r\nWORKAROUND: Adding type validation to the prop solves the issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11804","RelatedDescription":"Closed issue \"Passing Boolean Prop With No value Without Type Validation on Child Component Is Interpreted as an Empty String Instead of True\" (#11804)"},{"Id":"755881378","IsPullRequest":false,"CreatedAt":"2020-12-03T05:40:13","Actor":"crutchcorn","Number":"11803","RawContent":null,"Title":"FLIP Animation not applied when first item spliced","State":"closed","Body":"### Version\r\n3.0.4\r\n\r\n### Reproduction link\r\n[https://codepen.io/crutchcorn/pen/ZEpbZKX](https://codepen.io/crutchcorn/pen/ZEpbZKX)\r\n\r\n\r\n![working_vs_broke](https://user-images.githubusercontent.com/9100169/100968687-acbb2380-34e6-11eb-91de-c36c6ab0898a.gif)\r\n\r\n### Steps to reproduce\r\nTake the example from:\r\n\r\nhttps://v3.vuejs.org/guide/transitions-list.html#list-move-transitions\r\n\r\nThat's at this link:\r\n\r\nhttps://codepen.io/team/Vue/pen/373b4429eb5769ae2e6d097fd954fd08\r\n\r\nChange the `remove` method to match:\r\n\r\n```js\r\n      this.items.splice(0, 1)\r\n```\r\n\r\n### What is expected?\r\nThe first item in the array is removed and an animation smooths out the other items moving into the first spot\r\n\r\n### What is actually happening?\r\nIt jerkily moves the items to the first index\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11803","RelatedDescription":"Closed issue \"FLIP Animation not applied when first item spliced\" (#11803)"},{"Id":"755840479","IsPullRequest":false,"CreatedAt":"2020-12-03T05:08:52","Actor":"pndllxzzy","Number":"11802","RawContent":null,"Title":"about function sameVnode","State":"closed","Body":"### What problem does this feature solve?\r\nsameVnode对emptyVNode和AsyncPlaceholder VNode进行区分\r\n\r\n### What does the proposed API look like?\r\nVNodeA: v-if=\"false\"产生的emptyVNode\r\nVNodeB: asyncComponentB在resolve前产生的AsyncPlaceholder\r\nVNodeC: asyncComponentC在resolve前产生的AsyncPlaceholder\r\n\r\nsameVnode(VNodeA, VNodeB) 返回的是true\r\nsameVnode(VNodeB, VNodeC) 返回的是true\r\n\r\n返回true的话容易导致一些错误，期望sameVnode以上情况返回false\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11802","RelatedDescription":"Closed issue \"about function sameVnode\" (#11802)"},{"Id":"755790590","IsPullRequest":false,"CreatedAt":"2020-12-03T04:04:12","Actor":"pndllxzzy","Number":"11801","RawContent":null,"Title":"about function sameVnode","State":"closed","Body":"VNodeA: v-if=\"false\"产生的emptyVNode\r\nVNodeB: asyncComponentB在resolve前产生的AsyncPlaceholder\r\nVNodeC: asyncComponentC在resolve前产生的AsyncPlaceholder\r\n\r\nsameVnode(VNodeA, VNodeB) 返回的是true\r\nsameVnode(VNodeB, VNodeC) 返回的是true\r\n\r\n为什么返回true而不是false，返回true的话容易导致一些错误\r\n\r\n期望sameVnode以上情况返回false\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11801","RelatedDescription":"Closed issue \"about function sameVnode\" (#11801)"},{"Id":"754420640","IsPullRequest":false,"CreatedAt":"2020-12-01T14:09:09","Actor":"brandonguigo","Number":"11800","RawContent":null,"Title":"Noscript error when deployed on Kubernetes with Nginx Ingress","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/TallamQuiz/tallam](https://github.com/TallamQuiz/tallam)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDeploy an EKS Kubernetes Cluster With Nginx Ingress and NLB.\r\nBuild the docker image : \r\n`\r\nFROM node:lts-alpine\r\nRUN npm install -g http-server\r\n\r\nWORKDIR /app\r\nCOPY package*.json ./\r\n\r\nRUN npm install\r\nCOPY . .\r\n\r\nRUN npm run build\r\n\r\nEXPOSE 8080\r\nCMD [ \"http-server\", \"dist\", \"-p\", \"80\"]\r\n`\r\nDeploy the following service/deployment : \r\n```\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: backoffice-service\r\n  namespace: internal\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n    - port: 80\r\n      targetPort: 80\r\n      protocol: TCP\r\n  selector:\r\n    app.kubernetes.io/name: app-backoffice\r\n---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: deployment-backoffice\r\n  namespace: internal\r\nspec:\r\n  selector:\r\n    matchLabels:\r\n      app.kubernetes.io/name: app-backoffice\r\n  replicas: 1\r\n  revisionHistoryLimit: 3\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app.kubernetes.io/name: app-backoffice\r\n    spec:\r\n      containers:\r\n        - name: app-backoffice\r\n          image: backoffice:0.0.1\r\n          imagePullPolicy: Always\r\n          ports:\r\n            - containerPort: 80\r\n```\r\nDeploy the Ingress\r\n```\r\napiVersion: extensions/v1beta1\r\nkind: Ingress\r\nmetadata:\r\n  name: ingress-tallam-internal\r\n  namespace: internal\r\n  annotations:\r\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\r\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"false\"\r\n    nginx.ingress.kubernetes.io/rewrite-target: /\r\nspec:\r\n  rules:\r\n    - http:\r\n        paths:\r\n        - path: /backoffice/*\r\n          backend:\r\n              serviceName: backoffice-service\r\n              servicePort: 80\r\n```\r\nSee that the no script error is shown\r\n\r\n### What is expected?\r\nthe project should be served on /backoffice and should be displayed\r\n\r\n### What is actually happening?\r\nThe div app is empty and the no script error is raised while JS is enable in browser\r\n\r\n---\r\nI want to run a vue app on an EKS Cluster with Nginx Ingress and NLB for balancing.\r\nI have tried to set the baseUrl to /backoffice like in the ingress but it doesn't change a thing.\r\nThe browser gets 200 on all the files but the app div is empty and the no script error is raised. Also, an unexpected < is found in the console.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11800","RelatedDescription":"Closed issue \"Noscript error when deployed on Kubernetes with Nginx Ingress\" (#11800)"},{"Id":"752930768","IsPullRequest":false,"CreatedAt":"2020-11-29T14:55:12","Actor":"VladFedotov","Number":"11799","RawContent":null,"Title":"Template props feature issue","State":"closed","Body":"### What problem does this feature solve?\r\nSpreading of the same props between single-level components. Synchronization between components. One other way to set components properties default values.\r\n\r\n### What does the proposed API look like?\r\nMy proposal is to add props to template tag:\r\n```vue\r\n<template\r\n    :foo=\"foo\"\r\n    :bar=\"bar\"\r\n    :baz=\"baz\">\r\n    <one></one>\r\n    <two></two>\r\n    <three></three>\r\n</template>\r\n```\r\ncan be the same as\r\n```vue\r\n<template>\r\n    <one :foo=\"foo\" :bar=\"bar\" :baz=\"baz\"></one>\r\n    <two :foo=\"foo\" :bar=\"bar\" :baz=\"baz\"></two>\r\n</template>     \r\n```\r\nThe properties are assumed to be rewritable:\r\n```vue\r\n<template :prop=\"value\">\r\n    <one></one>              /* prop === value */\r\n    <two :prop=\"null\"></two> /* prop === null  */\r\n</template>\r\n```\r\nThis feature also allows developers set children \r\ncomponents default values.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11799","RelatedDescription":"Closed issue \"Template props feature issue\" (#11799)"},{"Id":"752701441","IsPullRequest":false,"CreatedAt":"2020-11-28T22:54:31","Actor":"ghost","Number":"11797","RawContent":null,"Title":"Why is there something \"global\"?","State":"closed","Body":"Full story - https://medium.com/@madyuskin/flux-vuex-are-wrong-and-outdated-61438de7c512\r\n\r\n### What problem does this feature solve?\r\nInstead of global and non-global, there should be parent and child. And if a parent has no parent, you may call it global. Something like this can help:\r\n<pre>\r\n<code>\r\nexport default {\r\n  passdown: ['bar', 'foobar2'],\r\n  data: () => ({\r\n    foo: null,\r\n    bar: null\r\n  }),\r\n  methods: {\r\n    foobar1() {},\r\n    foobar2() {}\r\n  }\r\n}\r\n</code>\r\n</pre>\r\nNow any child has direct access to bar and foobar2 — no need to pass through all its parents. But I am sure in many cases it is an overkill just like Vuex.\r\n\r\n### What does the proposed API look like?\r\n<pre>\r\n<code>\r\nexport default {\r\n  passdown: ['bar', 'foobar2'],\r\n  data: () => ({\r\n    foo: null,\r\n    bar: null\r\n  }),\r\n  methods: {\r\n    foobar1() {},\r\n    foobar2() {}\r\n  }\r\n}\r\n</code>\r\n</pre>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11797","RelatedDescription":"Closed issue \"Why is there something \"global\"?\" (#11797)"},{"Id":"752721540","IsPullRequest":false,"CreatedAt":"2020-11-28T16:53:16","Actor":"MathisTLD","Number":"11798","RawContent":null,"Title":"What is the _base property ?","State":"closed","Body":"Hello, I tried to understand more about vue js so I started reading the sourcecode\r\nbut I can't understand what this prop is referring to:\r\n\r\nhttps://github.com/vuejs/vue/blob/7912f75c5eb09e0aef3e4bfd8a3bb78cad7540d7/src/core/util/options.js#L408\r\n\r\nThanks for your Help","Url":"https://github.com/vuejs/vue/issues/11798","RelatedDescription":"Closed issue \"What is the _base property ?\" (#11798)"},{"Id":"752273717","IsPullRequest":true,"CreatedAt":"2020-11-27T14:00:12","Actor":"vue-bot","Number":"11796","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11796","RelatedDescription":"Open PR \"[automated] Patreon sponsors update\" (#11796)"},{"Id":"752052643","IsPullRequest":true,"CreatedAt":"2020-11-27T07:49:47","Actor":"ygj6","Number":"11795","RawContent":null,"Title":"fix: force update between two components with and without slot","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nfix #11652","Url":"https://github.com/vuejs/vue/pull/11795","RelatedDescription":"Open PR \"fix: force update between two components with and without slot\" (#11795)"},{"Id":"751784300","IsPullRequest":false,"CreatedAt":"2020-11-26T19:01:20","Actor":"dszymon","Number":"11794","RawContent":null,"Title":"SSR \"context.styles\" is not defined on webpack 4","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://github.com/Szymon-D/VueSsrStylesReproduction](https://github.com/Szymon-D/VueSsrStylesReproduction)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repository\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm start`\r\n5. Open http://localhost:8080\r\n6. Check `head` tag, there are no inline styles from the current route\r\n\r\n### What is expected?\r\nThere should be `style` tags with data-vue-ssr-id attribute\r\n\r\n### What is actually happening?\r\nOutput includes only `link` tags to external CSS files\r\n\r\n---\r\nThe issue is related to replacement of `extract-text-webpack-plugin` with `extract-css-chunks-webpack-plugin`. \r\nIt seems that with newer plugins, `vue-style-loader` doesn't get called in all cases where it would as the value of the `fallback` option to the legacy plugin.\r\nThere is no `styles` field on the context after rendering the app, as you can see here\r\nhttps://github.com/vuejs/vue/blob/4f81b5db9ab553ca0abe0706ac55ceb861344330/packages/vue-server-renderer/build.dev.js#L9397\r\nit's defined only in case if there's a `_renderStyles` function, which comes from the `vue-style-loader`\r\nhttps://github.com/vuejs/vue-style-loader/blob/477c25e1a506c54e18cb443f7981aed6d4e80e65/lib/addStylesServer.js#L16\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11794","RelatedDescription":"Open issue \"SSR \"context.styles\" is not defined on webpack 4\" (#11794)"},{"Id":"750048827","IsPullRequest":true,"CreatedAt":"2020-11-24T22:11:19","Actor":"HoldYourWaffle","Number":"11793","RawContent":null,"Title":"types: Change Element types to HTMLElement","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: typings update\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No, `HTMLElement` extends `Element`\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**(Hopefully) convincing reason:**\r\nThere are a lot of properties missing in the plain `Element` interface that are perfectly available when referencing these properties (in my case it was `offsetHeight`).\r\n_As far as I know_ there is no reason why these values can't be typed as the more elaborate `HTMLElement`, but I'm by no means a Vue-expert.\r\n\r\nSince this change is trivial I opted to directly create a PR instead of waiting for a response on an issue.","Url":"https://github.com/vuejs/vue/pull/11793","RelatedDescription":"Closed or merged PR \"types: Change Element types to HTMLElement\" (#11793)"},{"Id":"749853180","IsPullRequest":false,"CreatedAt":"2020-11-24T17:18:05","Actor":"mixxor","Number":"11792","RawContent":null,"Title":"Binding to Bracket Attributes in AMP.","State":"closed","Body":"### What problem does this feature solve?\r\nIf i want to bind something to a bracket Attribute, used in AMP e.g.:\r\n\r\nhttps://amp.dev/documentation/examples/components/amp-bind/#basic-usage\r\n\r\n:[hidden]=\"'initalState.inputFieldCount > '   index\"\r\n\r\nit will not work. \r\n\r\nI am using Vue.js2    nuxt to render my AMP content. Any Ideas about this?\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n:[hidden]=\"'initalState.inputFieldCount > '   index\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11792","RelatedDescription":"Closed issue \"Binding to Bracket Attributes in AMP.\" (#11792)"},{"Id":"749722469","IsPullRequest":true,"CreatedAt":"2020-11-24T14:51:13","Actor":"vue-bot","Number":"11791","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11791","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11791)"},{"Id":"749486160","IsPullRequest":true,"CreatedAt":"2020-11-24T08:20:57","Actor":"posva","Number":"11790","RawContent":null,"Title":"fix(runtime): use key variable for svg innerHTML","State":"open","Body":"Close #11787\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11790","RelatedDescription":"Open PR \"fix(runtime): use key variable for svg innerHTML\" (#11790)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"763954978","IsPullRequest":false,"CreatedAt":"2020-12-12T15:25:18","Actor":"ivanjaros","Number":"3409","RawContent":null,"Title":"Router link access","State":"closed","Body":"I am trying to add access control to links. I can do some basic control in router.beforeEach but that does not prevent links to be rendered. So I need to hook into links and prevent them from being rendered if some conditions are not met. In order to do that I need some way into the router link component + access to the params/props being passed to it.\r\n\r\nIs that possible somehow or do I have to create some sort of wrapper component and put the logic in there?","Url":"https://github.com/vuejs/vue-router/issues/3409","RelatedDescription":"Closed issue \"Router link access\" (#3409)"},{"Id":"761850126","IsPullRequest":true,"CreatedAt":"2020-12-11T03:29:56","Actor":"dependabot[bot]","Number":"3408","RawContent":null,"Title":"build(deps): bump ini from 1.3.5 to 1.3.7","State":"open","Body":"Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.7\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vue-router/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vue-router/pull/3408","RelatedDescription":"Open PR \"build(deps): bump ini from 1.3.5 to 1.3.7\" (#3408)"},{"Id":"757252718","IsPullRequest":true,"CreatedAt":"2020-12-10T07:41:34","Actor":"nazarepiedady","Number":"3399","RawContent":null,"Title":"Portuguese translation of documentation","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n#### Motivation\r\nIt's true that it's more comfortable and easy to learn something in our first language,\r\nbased in this reality I translated the all parts of documentation to Portuguese, to give\r\nthe opportunity to learn Vue Router for people that speak portuguese and do not have\r\nso much skill in the English.\r\n\r\nNow I'm submitting all parts translated into Portuguese of the documentation.","Url":"https://github.com/vuejs/vue-router/pull/3399","RelatedDescription":"Closed or merged PR \"Portuguese translation of documentation\" (#3399)"},{"Id":"749731765","IsPullRequest":true,"CreatedAt":"2020-12-09T20:55:40","Actor":"afoncatti","Number":"3386","RawContent":null,"Title":"Make sure scrollRestoration is writable","State":"closed","Body":"I'm receiving this error\r\nTypeError · Cannot set property scrollRestoration of [object History] which has only a getter\r\n\r\nwith additional info:\r\nnode_modules/vue-router/dist/vue-router.esm.js:1694:39 setupScroll\r\nfunction setupScroll () {\r\n// Prevent browser scroll behavior on History popstate\r\nif ('scrollRestoration' in window.history) {\r\nwindow.history.scrollRestoration = 'manual';\r\n}\r\n\r\nI propose to add this try-catch to verify if scrollRestoration is really writable before trying to set it.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3386","RelatedDescription":"Closed or merged PR \"Make sure scrollRestoration is writable\" (#3386)"},{"Id":"758828259","IsPullRequest":true,"CreatedAt":"2020-12-07T20:34:37","Actor":"Roriz","Number":"3407","RawContent":null,"Title":"docs(dynamic-matching): add optional param on docs","State":"open","Body":"## Motivation\r\nMake explicit the optional condition to params on path.\r\nThis behavior already is explicit on examples: https://github.com/vuejs/vue-router/blob/dev/examples/route-matching/app.js","Url":"https://github.com/vuejs/vue-router/pull/3407","RelatedDescription":"Open PR \"docs(dynamic-matching): add optional param on docs\" (#3407)"},{"Id":"758817835","IsPullRequest":false,"CreatedAt":"2020-12-07T20:25:49","Actor":"FluencyMatt","Number":"3406","RawContent":null,"Title":"Make RouterLink a functional component","State":"closed","Body":"### What problem does this feature solve?\r\nWhen there are hundreds of RouterLink components on a page (in table columns for instance), page performance suffers due to the overhead of maintaining all those instances. In our app, Vue dev tools Performance tab puts RouterLink at or near the top of the list. This feature will significantly reduce the render cost of RouterLink. \r\n\r\n### What does the proposed API look like?\r\nSwitching RouterLink to `functional: true` should be backwards compatible without adding anything to the API. I propose something like the following. My initial testing is promising. Happy to submit the PR.\r\n\r\n    functional: true,\r\n    render: function render (h, context) {\r\n        const router = context.parent.$router\r\n        const current = context.parent.$route\r\n        ... <etc. following all the functional component rules>\r\n        const data: any = { class: [classes, context.data.staticClass, context.data.class] }\r\n        ...\r\n        return h(context.props.tag, data, context.$slots.default)\r\n    }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3406","RelatedDescription":"Closed issue \"Make RouterLink a functional component\" (#3406)"},{"Id":"758565587","IsPullRequest":false,"CreatedAt":"2020-12-07T15:01:33","Actor":"ivanushkaPr","Number":"3404","RawContent":null,"Title":"exports is not defined","State":"closed","Body":"### Version\r\n4.0.0-0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-router-nodod?file=/src/App.vue](https://codesandbox.io/s/vue-router-nodod?file=/src/App.vue)\r\n\r\n### Steps to reproduce\r\nI have this file structure and files on my local computer - https://codesandbox.io/s/vue-router-nodod?file=/src/App.vue\r\nUnfortunately, this files work only in codesanbox. If start dev build via npm run serve on local computer, i get a following error in browser console:\r\n\r\nUncaught ReferenceError: exports is not defined\r\n    at Module.eval (vue-router.esm-bundler.js?6c02:2306)\r\n    at eval (vue-router.esm-bundler.js:3375)\r\n    at Module../node_modules/vue-router/dist/vue-router.esm-bundler.js (chunk-vendors.js:1247)\r\n    at __webpack_require__ (app.js:849)\r\n    at fn (app.js:151)\r\n    at eval (main.js:11)\r\n    at Module../src/main.js (app.js:1513)\r\n    at __webpack_require__ (app.js:849)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1526)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nexpecting the program to run correctly\r\n\r\n### What is actually happening?\r\nvue router doesnt work correctly\r\n\r\n---\r\nCan it be because i have old version of webpack or typescript installed globally on local machine? \r\nIf yes, why vue cli working correctly, but not vue-router.\r\nThis is my repository with all the files https://github.com/ivanushkaPr/vueRouting\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3404","RelatedDescription":"Closed issue \"exports is not defined\" (#3404)"},{"Id":"758578260","IsPullRequest":false,"CreatedAt":"2020-12-07T14:49:45","Actor":"Menna-Elgohary","Number":"3405","RawContent":null,"Title":"How to create sitemap file to my Vue application?","State":"closed","Body":"How to create sitemap file to my Vue application?","Url":"https://github.com/vuejs/vue-router/issues/3405","RelatedDescription":"Closed issue \"How to create sitemap file to my Vue application?\" (#3405)"},{"Id":"758542545","IsPullRequest":false,"CreatedAt":"2020-12-07T14:17:06","Actor":"huajianreno","Number":"3403","RawContent":null,"Title":"The callback passed to next is executed before mounted","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\nno link\r\n\r\n\r\n### Steps to reproduce\r\n1. have beforeRouteEnter and mounted hooks in a component\r\n2. have next() with callback in beforeRouteEnter\r\n3. use different version of vue-router before(3.4.5 or other) and after 3.4.6\r\n\r\n### What is expected?\r\nThe callback passed to next in beforeRouteEnter is executed after mounted.\r\n\r\n### What is actually happening?\r\nThe callback passed to next in beforeRouteEnter is executed before mounted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3403","RelatedDescription":"Closed issue \"The callback passed to next is executed before mounted\" (#3403)"},{"Id":"758184886","IsPullRequest":false,"CreatedAt":"2020-12-07T08:53:41","Actor":"huajianreno","Number":"3402","RawContent":null,"Title":"A callback to next() of beforeRouteEnter executed before mounted()","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\nno reproduction link\r\nmust compile more than once\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. have beforeRouteEnter and mounted hooks in a component\r\n2. have next() with callback in beforeRouteEnter\r\n3. use different version of vue-router before(3.4.5 or other) and after 3.4.6\r\n\r\n### What is expected?\r\nthe order of the executions of callback in next() of beforeRouteEnter and mounted are same in different version of view-router\r\n\r\n### What is actually happening?\r\nthe order of the executions of callback in next() of beforeRouteEnter and mounted are different in different version of view-router\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3402","RelatedDescription":"Closed issue \"A callback to next() of beforeRouteEnter executed before mounted()\" (#3402)"},{"Id":"758182267","IsPullRequest":false,"CreatedAt":"2020-12-07T05:49:31","Actor":"huajianreno","Number":"3401","RawContent":null,"Title":"A callback to next() of beforeRouteEnter executed before mounted()","State":"closed","Body":"**Steps to reproduce**\r\n1. have beforeRouteEnter and mounted hooks in a component\r\n2. have next() with callback in beforeRouteEnter\r\n3. use different version of vue-router before(3.4.5 or other) and after 3.4.6\r\n\r\n**What is expected?**\r\nthe order of the executions of callback in next() of beforeRouteEnter and mounted is same in different version of view-router\r\n\r\n**What is actually happening?**\r\nthe order of the executions of callback in next() of beforeRouteEnter and mounted is different in different version of view-router\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3401","RelatedDescription":"Closed issue \"A callback to next() of beforeRouteEnter executed before mounted()\" (#3401)"},{"Id":"757952987","IsPullRequest":true,"CreatedAt":"2020-12-06T17:30:22","Actor":"FrancoisCapon","Number":"3400","RawContent":null,"Title":"docs: typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3400","RelatedDescription":"Closed or merged PR \"docs: typo\" (#3400)"},{"Id":"755390750","IsPullRequest":false,"CreatedAt":"2020-12-02T16:40:33","Actor":"lgmf-daitan","Number":"3398","RawContent":null,"Title":"Navigation Resolution Flow - AfterRouteLeave","State":"closed","Body":"### What problem does this feature solve?\r\nI have a Vue mixin that is used to register/unregister Vuex's store modules that is intimately connected to the navigation flow.\r\n\r\n```javascript\r\n\r\nimport store from '@/store';\r\n\r\nexport default ({ modulePath, module }) => ({\r\n  beforeRouteEnter(to, from, next) {\r\n    if (!store.hasModule(modulePath)) {\r\n      store.registerModule(modulePath, module);\r\n    }\r\n    next();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (store.hasModule(modulePath)) {\r\n      store.unregisterModule(modulePath);\r\n    }\r\n    next();\r\n  },\r\n});\r\n```\r\n\r\nI need to do that because we have a HUGE app and I want to decrease the size of our Store is in memory, its the same purpose as lazy loading components\r\n\r\nThe problem is that the \"beforeRouteLeave\" is being executed before the \"beforeDestroy\" lifecycle and because of that I'm facing a memory leak problem because in a particular case we use a WebSocket connect that was supposed to be disconnected when the page component was about to be destroyed.\r\n\r\n### What does the proposed API look like?\r\nMy suggestion would be to add another navigation lifecycle that would guarantee that the component was already destroyed.\r\nAdd a navigation guard that would guarantee that the activated component was already destroyed.\r\n\r\n```javascript\r\nconst Foo = {\r\n  template: `...`,\r\n  beforeRouteEnter (to, from, next) {\r\n    // called before the route that renders this component is confirmed.\r\n    // does NOT have access to `this` component instance,\r\n    // because it has not been created yet when this guard is called!\r\n  },\r\n  beforeRouteUpdate (to, from, next) {\r\n    // called when the route that renders this component has changed.\r\n    // This component being reused (by using an explicit `key`) in the new route or not doesn't change anything.\r\n    // For example, for a route with dynamic params `/foo/:id`, when we\r\n    // navigate between `/foo/1` and `/foo/2`, the same `Foo` component instance\r\n    // will be reused (unless you provided a `key` to `<router-view>`), and this hook will be called when that happens.\r\n    // has access to `this` component instance.\r\n  },\r\n  beforeRouteLeave (to, from, next) {\r\n    // called when the route that renders this component is about to\r\n    // be navigated away from.\r\n    // has access to `this` component instance.\r\n  },\r\n  afterRouteLeave(to, from, next) {\r\n    // called after the destroy the route activated component \r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3398","RelatedDescription":"Closed issue \"Navigation Resolution Flow - AfterRouteLeave\" (#3398)"},{"Id":"755383453","IsPullRequest":false,"CreatedAt":"2020-12-02T15:39:28","Actor":"lgmf-daitan","Number":"3397","RawContent":null,"Title":"Navigation Resolution Flow - AfterRouteLeave","State":"closed","Body":"Hello,\r\n\r\nI have a Vue mixin that is used to register/unregister Vuex store modules that is intimally connected to the navigation flow.\r\n\r\n```javascript\r\nimport store from '@/store';\r\n\r\nexport default ({ modulePath, module }) => ({\r\n  beforeRouteEnter(to, from, next) {\r\n    if (!store.hasModule(modulePath)) {\r\n      store.registerModule(modulePath, module);\r\n    }\r\n    next();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (store.hasModule(modulePath)) {\r\n      store.unregisterModule(modulePath);\r\n    }\r\n    next();\r\n  },\r\n});\r\n```\r\n\r\nThe problem is that the `beforeRouteLeave` is beeing executed before the `beforeDestroy` lifecycle and because of that I'm facing a memory leak problem, because on a particular case we use an websocket connect that was suppose to be disconnected when the page component was about to be destroyed.\r\n\r\nIs there a nicer way of doing that? \r\n\r\nIf there isnt my suggestion would be to add another navigation lifecycle that would guarenteed that the component was already destroed.","Url":"https://github.com/vuejs/vue-router/issues/3397","RelatedDescription":"Closed issue \"Navigation Resolution Flow - AfterRouteLeave\" (#3397)"},{"Id":"755273578","IsPullRequest":false,"CreatedAt":"2020-12-02T14:01:58","Actor":"Gokhank58","Number":"3396","RawContent":null,"Title":"Vue JS Dynamic Routes","State":"closed","Body":"### What problem does this feature solve?\r\nI want to redirect the whole system with a system tree coming from restful api. I would like to add localstorage or json data coming directly from apiden into the vue router in a similar way to addRoutes.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nasync function loadView(view) {\r\n  return () => import(/* webpackChunkName: \"view-[request]\" */ '@/views/'   view)\r\n}\r\n\r\nfunction parseSystemTree(item) {\r\n  let nav = []\r\n  Object.keys(item).forEach(key => {\r\n    \r\n    if (item[key].link !== '') {\r\n      let navData = {\r\n        path: item[key].link,\r\n        name: item[key].name,\r\n        meta: {title: item[key].name},\r\n        component: loadView(item[key].view.toString()), /* import('@/views/Settings/UserOperations/AddNewUser.vue') */\r\n        children: Object.keys(item[key].child).length > 0 ? parseSystemTree(item[key].child) : []\r\n      }\r\n\r\n      nav.push(navData)\r\n    }\r\n  })\r\n  return nav\r\n}\r\n\r\nvar navigations = []\r\n\r\nif (typeof localStorage.getItem('system_tree') !== 'object') {\r\n  const systemTree = JSON.parse(localStorage.getItem('system_tree'))\r\n  navigations = parseSystemTree(systemTree)\r\n}\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  // routes\r\n  routes: routes.concat(navigations)\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3396","RelatedDescription":"Closed issue \"Vue JS Dynamic Routes\" (#3396)"},{"Id":"755266201","IsPullRequest":false,"CreatedAt":"2020-12-02T13:17:11","Actor":"Gokhank58","Number":"3395","RawContent":null,"Title":"Vue JS Dynamic Router No Response","State":"closed","Body":"I want to use the router dynamically. I installed the babel-dynamic-import plug-in. I don't get any errors, but when it switches to the page, it can't render the component.\r\n\r\n`async function loadView(view) {\r\n  return () => import(/* webpackChunkName: \"view-[request]\" */ `@/views/${view}`)\r\n}\r\n\r\nfunction parseSystemTree(item) {\r\n  let nav = []\r\n  Object.keys(item).forEach(key => {\r\n    \r\n    if (item[key].link !== '') {\r\n      let navData = {\r\n        path: item[key].link,\r\n        name: item[key].name,\r\n        meta: {title: item[key].name},\r\n        component: loadView(item[key].view.toString()), /* import('@/views/Settings/UserOperations/AddNewUser.vue') */\r\n        children: Object.keys(item[key].child).length > 0 ? parseSystemTree(item[key].child) : []\r\n      }\r\n\r\n      nav.push(navData)\r\n    }\r\n  })\r\n  return nav\r\n}\r\n\r\nvar navigations = []\r\n\r\nif (typeof localStorage.getItem('system_tree') !== 'object') {\r\n  const systemTree = JSON.parse(localStorage.getItem('system_tree'))\r\n  navigations = parseSystemTree(systemTree)\r\n}\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  // routes\r\n  routes: routes.concat(navigations)\r\n})`","Url":"https://github.com/vuejs/vue-router/issues/3395","RelatedDescription":"Closed issue \"Vue JS Dynamic Router No Response\" (#3395)"},{"Id":"754594200","IsPullRequest":false,"CreatedAt":"2020-12-01T18:18:34","Actor":"realnot","Number":"3394","RawContent":null,"Title":"Multiple paths for single route","State":"closed","Body":"### What problem does this feature solve?\r\nThis one:  https://github.com/pillarjs/path-to-regexp/issues/235\r\n\r\nCurrent error:\r\n\r\n```console\r\nvue-router.esm.js?8c4f:1495 Uncaught TypeError: path.replace is not a function\r\n    at normalizePath (vue-router.esm.js?8c4f:1495)\r\n    at addRouteRecord (vue-router.esm.js?8c4f:1372)\r\n    at eval (vue-router.esm.js?8c4f:1422)\r\n    at Array.forEach (<anonymous>)\r\n    at addRouteRecord (vue-router.esm.js?8c4f:1418)\r\n    at eval (vue-router.esm.js?8c4f:1422)\r\n    at Array.forEach (<anonymous>)\r\n    at addRouteRecord (vue-router.esm.js?8c4f:1418)\r\n    at eval (vue-router.esm.js?8c4f:1422)\r\n    at Array.forEach (<anonymous>)\r\n```\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\npath: ['create', ':id'] \r\n```\r\n\r\nApply the first one if no argument is passed and the second one in other case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3394","RelatedDescription":"Closed issue \"Multiple paths for single route\" (#3394)"},{"Id":"752675978","IsPullRequest":false,"CreatedAt":"2020-11-28T22:57:27","Actor":"tstriker","Number":"3393","RawContent":null,"Title":"route change should not be changing state until the previous component has been unmounted","State":"closed","Body":"### What problem does this feature solve?\r\nWhen navigating between routes, the changes to state happen before the previous component has been unmounted.\r\n\r\nThis results in recalculation of any computed properties that rely on the state, even though we'll remove this component a millisecond later.\r\n\r\nRoute change should fire all relevant navigation signals, but it shouldn't change the state until the old component has been unmounted, as otherwise it's creating side-effects\r\n\r\n### What does the proposed API look like?\r\nthe step 11 \"dom updates triggered\" here https://next.router.vuejs.org/guide/advanced/navigation-guards.html#the-full-navigation-resolution-flow should be split up into \r\nunmount old component -> update route state -> mount new component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3393","RelatedDescription":"Closed issue \"route change should not be changing state until the previous component has been unmounted\" (#3393)"},{"Id":"752230384","IsPullRequest":true,"CreatedAt":"2020-11-27T15:08:16","Actor":"syu93","Number":"3392","RawContent":null,"Title":"docs: comma","State":"closed","Body":"Fix #3391","Url":"https://github.com/vuejs/vue-router/pull/3392","RelatedDescription":"Closed or merged PR \"docs: comma\" (#3392)"},{"Id":"752229260","IsPullRequest":false,"CreatedAt":"2020-11-27T15:08:16","Actor":"syu93","Number":"3391","RawContent":null,"Title":"Missing column in code snippet in scroll behavior documentation (Smooth Scrolling)","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/advanced/scroll-behavior.html#smooth-scrolling](https://router.vuejs.org/guide/advanced/scroll-behavior.html#smooth-scrolling)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI spotted a missing column in code snippet in scroll behavior documentation (Smooth Scrolling)\r\n\r\nhttps://router.vuejs.org/guide/advanced/scroll-behavior.html#smooth-scrolling\r\n\r\n### What is expected?\r\nA column should be present after `selector: to.hash`\r\n\r\n### What is actually happening?\r\nNo column after `selector: to.hash`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3391","RelatedDescription":"Closed issue \"Missing column in code snippet in scroll behavior documentation (Smooth Scrolling)\" (#3391)"},{"Id":"751532182","IsPullRequest":true,"CreatedAt":"2020-11-26T14:45:41","Actor":"ylc395","Number":"3390","RawContent":null,"Title":"fix(type): use any for Location.params","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nWhen passing props to route components, params are props, and props can be \"any\" type. For example:\r\n\r\nin route config:\r\n```js\r\nconst routes = [{\r\n    name: 'a',\r\n    path: '/a',\r\n    props: true,\r\n    component: A, // component A has a `aPropObject` prop \r\n}];\r\n```\r\n\r\nin component:\r\n```js\r\nthis.$router.push({\r\n    name: 'xxxx',\r\n    params: {\r\n        aPropObject: {}, // an object or anything else\r\n    },\r\n});\r\n```","Url":"https://github.com/vuejs/vue-router/pull/3390","RelatedDescription":"Closed or merged PR \"fix(type): use any for Location.params\" (#3390)"},{"Id":"751218186","IsPullRequest":false,"CreatedAt":"2020-11-26T08:45:07","Actor":"sqcrh","Number":"3389","RawContent":null,"Title":"Add a clear before handler that is called any time url navigation matches a route (not a route resolution / component).","State":"closed","Body":"### What problem does this feature solve?\r\nIt is a common need to create a route guard that checks if a user or resource is authorized or authenticated activating a *route*.  This currently does not exist, and the existing per route beforeEnter handler really aligns with component activation not route activation.  I think it makes more sense to include auth type guards in the url/routing module and not the component because the guard logic is shared among some large percentage of the routes and doesn't have relate specifically to component logic.  And often you want this logic to apply to some routes not all routes. Currently to meet this need you have to:\r\n\r\n  1. Watch $route.  Not ideal, because you have to roll your own logic to match the guard to the route.  \r\n  2. Use the global beforeEach.  Again, not ideal because you have to roll your own logic to apply guard to selected routes.  \r\n  3. Use beforeRouteUpdate and beforeRouteEnter in the component.  This isn't ideal because the global auth guards should not be buried in a component and they don't use any component logic.  The guard is related to the route.  \r\n  4. Reach for the beforeEnter handler, which only activates when the route resolution is changed but many people expect it to be called when the the route is matched\r\n\r\nI think there is a need for this based the necessity of a call out in the documentation, a handful of issues in the repo, and questions on the forum.  The current route paradigm makes sense and has parity when you are talking about a component (enter, update, leave).  But when you talk about a **route** there is a parity mismatch.  You would expect a route handler to be called an time the route url changes and a route is matched.\r\n\r\nI see there is was a proposal to add a beforeUpdate, which I think was rightfully closed with an addition to the component.\r\nhttps://github.com/vuejs/vue-router/issues/1577\r\n\r\nThere was also a proposal to deprecate beforeEnter, which I think actually makes sense because again beforeEnter is confusing, but without a replacement i understand why it was closed. \r\nhttps://github.com/vuejs/vue-router/issues/2540\r\n\r\nSome more relevant issues and questions:\r\n  * https://github.com/vuejs/vue-router/issues/2600\r\n  * https://github.com/vuejs/vue-router/issues/1012\r\n  * https://forum.vuejs.org/t/beforeenter-doesnt-catch-param-changes/97451\r\n  * https://forum.vuejs.org/t/how-to-invoke-beforeenter-everytime-route-param-changes-in-the-same-path/97551\r\n  * https://forum.vuejs.org/t/vue-router-beforeenter-guard-not-working-on-url-change/42300\r\n  * https://forum.vuejs.org/t/vue-router-beforeenter-doesnt-work-properly-for-children-path/20019\r\n  * https://forum.vuejs.org/t/vue-router-trigger-beforeenter-in-all-segments-of-the-url/37462\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nDeprecate confusing beforeEnter that really aligns with the component not the route and create a handler called before, beforeNavigate, or beforeMatch that is called before a *route* is matched and pushed onto the stack.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3389","RelatedDescription":"Closed issue \"Add a clear before handler that is called any time url navigation matches a route (not a route resolution / component).\" (#3389)"},{"Id":"750912643","IsPullRequest":false,"CreatedAt":"2020-11-25T16:06:34","Actor":"AliAbuArab","Number":"3388","RawContent":null,"Title":"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://github.com/AliAbuArab/vue-router-test.git](https://github.com/AliAbuArab/vue-router-test.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHello.\r\nWe facing a problem with a vue router when it envloved with unencoded characters.\r\nPlease check our repository.\r\nhttps://github.com/AliAbuArab/vue-router-test.git\r\n\r\nThe problem occures when reload/refresh the page.\r\nIf the route in english its okay and working fine.\r\nBut when it comes to hebrew this not working and gives us\r\nThe client-side rendered virtual DOM tree is not matching server-rendered content....\r\n\r\n```\r\nexport default {\r\n  locales: [\r\n    { \r\n      code: 'he',\r\n      iso: 'he'\r\n    },\r\n    { \r\n      code: 'en',\r\n      iso: 'en'\r\n    }\r\n  ],\r\n  defaultLocale: 'he',\r\n  parsePages: false,\r\n  strategy: 'prefix_except_default',\r\n  pages: {\r\n    'categories/index': {\r\n      he: '/קטגוריות',\r\n      en: '/categories',\r\n    },\r\n    'categories/_id': {\r\n      he: '/קטגוריות/:id',\r\n      en: '/categories/:id',\r\n    },\r\n    search: {\r\n      he: '/חיפוש',\r\n      en: '/search'\r\n    },\r\n    promotions: {\r\n      he: '/מבצעים',\r\n      en: '/promotions'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nPage that rendered from the serve\r\n\r\n### What is actually happening?\r\nEmpty page\r\n\r\n---\r\nWe using:\r\nnuxtjs v^2.14.7.\r\nnuxt-i18n v\"^6.15.4\r\nMode: ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3388","RelatedDescription":"Closed issue \"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render\" (#3388)"},{"Id":"750901174","IsPullRequest":false,"CreatedAt":"2020-11-25T15:12:23","Actor":"AliAbuArab","Number":"3387","RawContent":null,"Title":"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render","State":"closed","Body":"Hello.\r\nWe facing a problem with a vue router when it envloved with unencoded characters.\r\nPlease check our repository.\r\nhttps://github.com/AliAbuArab/vue-router-test.git\r\n\r\nThe problem occures when reload/refresh the page.\r\nIf the route in english its okay and working fine.\r\nBut when it comes to hebrew this not working and gives us \r\nThe client-side rendered virtual DOM tree is not matching server-rendered content....\r\n<img width=\"904\" alt=\"Screen Shot 2020-11-25 at 17 10 08\" src=\"https://user-images.githubusercontent.com/20545572/100245808-21b7b780-2f41-11eb-9f3e-efc6357d80bf.png\">\r\n\r\n```\r\nexport default {\r\n  locales: [\r\n    { \r\n      code: 'he',\r\n      iso: 'he'\r\n    },\r\n    { \r\n      code: 'en',\r\n      iso: 'en'\r\n    }\r\n  ],\r\n  defaultLocale: 'he',\r\n  parsePages: false,\r\n  strategy: 'prefix_except_default',\r\n  pages: {\r\n    'categories/index': {\r\n      he: '/קטגוריות',\r\n      en: '/categories',\r\n    },\r\n    'categories/_id': {\r\n      he: '/קטגוריות/:id',\r\n      en: '/categories/:id',\r\n    },\r\n    search: {\r\n      he: '/חיפוש',\r\n      en: '/search'\r\n    },\r\n    promotions: {\r\n      he: '/מבצעים',\r\n      en: '/promotions'\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/3387","RelatedDescription":"Closed issue \"The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render\" (#3387)"},{"Id":"749701918","IsPullRequest":true,"CreatedAt":"2020-11-24T13:55:41","Actor":"afoncatti","Number":"3384","RawContent":null,"Title":"Make sure scrollRestoration is writable.","State":"closed","Body":"I'm receiving this error\r\nTypeError · Cannot set property scrollRestoration of [object History] which has only a getter\r\n\r\nwith additional info:\r\nnode_modules/vue-router/dist/vue-router.esm.js:1694:39 setupScroll\t\r\nfunction setupScroll () {\r\n  // Prevent browser scroll behavior on History popstate\r\n  if ('scrollRestoration' in window.history) {\r\n    window.history.scrollRestoration = 'manual';\r\n  }\r\n\r\nI propose to add this try-catch to verify if scrollRestoration is really writable before trying to set it.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3384","RelatedDescription":"Closed or merged PR \"Make sure scrollRestoration is writable.\" (#3384)"},{"Id":"749717096","IsPullRequest":true,"CreatedAt":"2020-11-24T13:42:04","Actor":"HoldYourWaffle","Number":"3385","RawContent":null,"Title":"types: Add RouteMeta interface to enable module augmentation","State":"open","Body":"Close #3183\r\n\r\n\r\nI added a `RouteMeta` interface to the type declarations to allow for stronger type safety using [module augmentation](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation).\r\n\r\nFor example:\r\n```ts\r\ndeclare module 'vue-router/types/router' {\r\n    interface RouteMeta {\r\n        x: string;\r\n    }\r\n}\r\n```\r\nWould define `myRoute.meta.x` to be a `string`. Non-existent properties will show an error.\r\n\r\nUnfortunately this is a (minor) breaking change. As far as I know this can't be avoided without sacrificing the added type-safety.\r\nUsers can manually revert to the original \"`any`\" behavior using an augmentation like this:\r\n```ts\r\ndeclare module 'vue-router/types/router' {\r\n    interface RouteMeta {\r\n        [key: string]: any;\r\n    }\r\n}\r\n```\r\nI can't make this the default however, because it can't be _overwritten_ using module augmentation.\r\nIn other words: the \"`any`\"-index type would stay \"active\", thus defeating the purpose of added type-safety.\r\n\r\nI hope this suggestion can be considered nonetheless.","Url":"https://github.com/vuejs/vue-router/pull/3385","RelatedDescription":"Open PR \"types: Add RouteMeta interface to enable module augmentation\" (#3385)"},{"Id":"749646509","IsPullRequest":false,"CreatedAt":"2020-11-24T12:01:33","Actor":"WANZARGEN","Number":"3383","RawContent":null,"Title":"Custom stringifyQuery/parseQuery overrides the default","State":"open","Body":"### What problem does this feature solve?\r\nIn my web application, the format of the search information is very complex. \r\nAnd users share search information with uri. \r\nThe search format is the same on any page, so we need to parse the the query in the same way for search data on every page. \r\nIt is the same to make it a query string again. \r\nSo when I tried to create a custom stringifyQuery/parseQuery function for this, there are a lot of things the default function does. \r\nIt's terrible to have to write that logic hassle twice. \r\n\r\nLooking at the internal logic, it seems very easy to let the default function be reused. \r\nIf the default function is reusable, we can put only the logic we need to stringifyQuery or parseQuery function, excluding logic such as encoding or decoding it. \r\nI think there will be many developers who use it usefully compared to the effort that goes into it.\r\n\r\n### What does the proposed API look like?\r\n### routerOptions must be changed as follow: \r\n\r\n```typescript\r\nexport interface RouterOptions {\r\n  ...\r\n  parseQuery?: (query: string, defaultFunction: (query: string) => Object) => Object\r\n  stringifyQuery?: (query: Object, defaultFunction: (query: Object) => string) => string\r\n  ...\r\n}\r\n```\r\n\r\n### getFullPath in vue-router.js must be changed as follow:\r\n\r\n```javascript\r\nfunction getFullPath (\r\n    ref,\r\n    _stringifyQuery\r\n  ) {\r\n    var path = ref.path;\r\n    var query = ref.query; if ( query === void 0 ) query = {};\r\n    var hash = ref.hash; if ( hash === void 0 ) hash = '';\r\n\r\n    return _stringifyQuery ? (path || '/') +  _stringifyQuery(query, stringifyQuery) +  hash :  (path || '/') +  stringifyQuery(query) +  hash\r\n  }\r\n```\r\n\r\n### resolveQuery in vue-router.js must be changed as follow:\r\n\r\n```javascript\r\nfunction resolveQuery (\r\n    query,\r\n    extraQuery,\r\n    _parseQuery\r\n  ) {\r\n    if ( extraQuery === void 0 ) extraQuery = {};\r\n\r\n    var parsedQuery;\r\n    try {\r\n      parsedQuery = _parseQuery ? _parseQuery(query || ''), parseQuery) : parseQuery(query || '');\r\n    } catch (e) {\r\n       warn(false, e.message);\r\n      parsedQuery = {};\r\n    }\r\n    for (var key in extraQuery) {\r\n      var value = extraQuery[key];\r\n      parsedQuery[key] = Array.isArray(value)\r\n        ? value.map(castQueryParamValue)\r\n        : castQueryParamValue(value);\r\n    }\r\n    return parsedQuery\r\n  }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3383","RelatedDescription":"Open issue \"Custom stringifyQuery/parseQuery overrides the default\" (#3383)"},{"Id":"748219385","IsPullRequest":false,"CreatedAt":"2020-11-22T12:19:46","Actor":"olegbaturin","Number":"3382","RawContent":null,"Title":"Normalize URL before parse || add beforeParse navigation guard","State":"closed","Body":"### What problem does this feature solve?\r\nNormilize URL before parse it to Route object.\r\nURLs like \"https://example.com//page//\" became \"https://example.com/page/\" or \"https://example.com/page\" (trailing slash is removed) and run window.location.replace() with normalized URL. Removing repeated/trailing slashes can be optional.\r\n||OR||\r\nAdd a beforeParse() navigation guard to allow custom normilization of URLs.\r\n\r\n### What does the proposed API look like?\r\nbeforeParse(rawUrl: string) {\r\n return rawUrl.replace(/([^:]\\/)\\/ /g, \"$1\");\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3382","RelatedDescription":"Closed issue \"Normalize URL before parse || add beforeParse navigation guard\" (#3382)"},{"Id":"747678445","IsPullRequest":false,"CreatedAt":"2020-11-20T18:07:44","Actor":"fabianeichinger","Number":"3381","RawContent":null,"Title":"Redirecting from beforeEnter guard will push state during popstate handling","State":"closed","Body":"### Version\r\n3.4.9\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwx6q3hc/4](https://jsfiddle.net/jwx6q3hc/4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n0. Create a router with\r\n```\r\n{\r\n  mode: 'history',\r\n  routes: [\r\n    { path: '/a' },\r\n    { path: '/b', beforeEnter: (to, from, next) => next({ name: 'redirect-target' }) },\r\n    //  { path: '/b', redirect: { name: 'redirect-target' } },\r\n    { name: 'redirect-target', path: '/b' }\r\n  ]\r\n}\r\n```\r\n1. Initially navigate to `/a`\r\n2. Navigate to `/b`\r\n3. Navigate to `/a`\r\n4. Hit the browser back button\r\n5. Hit the browser back button again\r\n\r\n\r\n\r\n### What is expected?\r\nAfter hitting the back button in step 5. we should be back on `/a`.\r\nThe forward button should be enabled.\r\nThe history should look like\r\n```\r\n/a --- pushed by 3.\r\n/b --- pushed by 2.\r\n/a <-- current, pushed by 1.\r\n```\r\n\r\n### What is actually happening?\r\nAfter hitting back in step 5., we stay on `/b`.\r\nThe forward button is disabled, browser history looks like this\r\n```\r\n/b <-- current, pushed by 4.\r\n/a --- pushed by 1.\r\n```\r\n\r\n---\r\nI hoped this setup would work for a proposal to simplify some dynamic routing in Vue Storefront (take a look at this [gist](https://gist.github.com/fabianeichinger/a3e9c75db522cdc5441ce1dc68eba8bb) if you're interested in the usecase and some more details). Essentially I want use beforeEnter as a substitute for `redirect` where I can do some async requests before returning the redirection target.\r\n \r\nThe issue here is that calling `next` with some redirection arguments is always handled by calling `router.push` or `router.replace` (in the case of `next({ replace: true, ... })`. But in this usecase there should be no change to the browser history during `popstate` handling.\r\n\r\nDoing the equivalent redirection with `redirect` works just fine (though I can't use it for my usecase, as I can't return asynchronously from the redirect function). I've marked this as a bug as from what I understand https://github.com/vuejs/rfcs/pull/150 has the goal that both should work the same way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3381","RelatedDescription":"Closed issue \"Redirecting from beforeEnter guard will push state during popstate handling\" (#3381)"},{"Id":"746379753","IsPullRequest":false,"CreatedAt":"2020-11-19T08:58:53","Actor":"chenguzhen87","Number":"3380","RawContent":null,"Title":"源码中是通过window.scrollTo()实现滚动的，怎么实现指定元素滚动？","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/3380","RelatedDescription":"Closed issue \"源码中是通过window.scrollTo()实现滚动的，怎么实现指定元素滚动？\" (#3380)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"763289638","IsPullRequest":false,"CreatedAt":"2020-12-12T19:19:51","Actor":"millansingh","Number":"1898","RawContent":null,"Title":"Vuex fails to update state object with new object","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/millansingh/pen/dypOBjb](https://codepen.io/millansingh/pen/dypOBjb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust hit the button to run the mutation, but nothing will change which is the issue.\r\n\r\n### What is expected?\r\nThe mutation should change the object in store, making the \"output\" div show 3 instead of 1.\r\n\r\n### What is actually happening?\r\nNothing changes.\r\n\r\n---\r\nIn my personal project, the state itself is unchanged, rather than a reactivity issue. I couldn't open the Vue dev tools on Codepen to check this, but I think the same thing is happening. I would expect the object in the state to be replaced with the new object, but instead it doesn't change. I've tried the Object.assign method, object destructuring, and a simple stateObj = newObj type statement. All do nothing.\r\n\r\nNote that I can effectively get around this by looping through Object.keys of the state object and replacing them with the new object keys, but this should be possible by just replacing the object instead of using my workaround.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1898","RelatedDescription":"Closed issue \"Vuex fails to update state object with new object\" (#1898)"},{"Id":"761884373","IsPullRequest":true,"CreatedAt":"2020-12-11T04:28:49","Actor":"dependabot[bot]","Number":"1897","RawContent":null,"Title":"build(deps): bump ini from 1.3.5 to 1.3.7","State":"open","Body":"Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.7\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vuex/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vuex/pull/1897","RelatedDescription":"Open PR \"build(deps): bump ini from 1.3.5 to 1.3.7\" (#1897)"},{"Id":"760995269","IsPullRequest":true,"CreatedAt":"2020-12-10T07:40:57","Actor":"mat813","Number":"1896","RawContent":null,"Title":"Add a generic type for getters too.","State":"open","Body":"This allows you to write something like this, for example, in a vuex\r\nmodule, that lives in a subdirectory of the store, where it is most\r\ninteresting:\r\n\r\n```ts\r\nimport { GetterTree } from 'vuex';\r\n\r\nimport type { State as RootState, Getters as RootGetters } from '../';\r\nimport type { State } from './state';\r\n\r\nexport type Getters = {\r\n  loggedIn: boolean;\r\n  roles: string[];\r\n  isAdmin: boolean;\r\n};\r\n\r\nexport const getters: GetterTree<State, RootState, Getters, RootGetters> = {\r\n```\r\n\r\nAnd you get correct type inference in your editor.","Url":"https://github.com/vuejs/vuex/pull/1896","RelatedDescription":"Open PR \"Add a generic type for getters too.\" (#1896)"},{"Id":"760326276","IsPullRequest":false,"CreatedAt":"2020-12-09T13:23:20","Actor":"Slender1808","Number":"1895","RawContent":null,"Title":"bug store typescript","State":"open","Body":"### Version\r\n4.0.0-rc.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/romantic-margulis-hq4nb?file=/src/main.js](https://codesandbox.io/s/romantic-margulis-hq4nb?file=/src/main.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nimport { MutationTree } from 'vuex'\r\nimport { State } from './type'\r\n\r\nconst mutations: MutationTree<State> = {\r\n  search(state, payload: any) {\r\n    state.search = payload;\r\n  },\r\n}\r\n```\r\n\r\n### What is expected?\r\nstate.search is equal to payload\r\n\r\n### What is actually happening?\r\nstate.search remains the same\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1895","RelatedDescription":"Open issue \"bug store typescript\" (#1895)"},{"Id":"760321195","IsPullRequest":false,"CreatedAt":"2020-12-09T13:16:56","Actor":"Slender1808","Number":"1894","RawContent":null,"Title":"bug store typescript","State":"closed","Body":"I'm not able to change the status of my store\r\n```\r\nimport { MutationTree } from 'vuex'\r\nimport { State } from './type'\r\n\r\nconst mutations: MutationTree<State> = {\r\n  search(state, payload: any) {\r\n    state.search = payload;\r\n  },\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1894","RelatedDescription":"Closed issue \"bug store typescript\" (#1894)"},{"Id":"760092068","IsPullRequest":true,"CreatedAt":"2020-12-09T07:47:57","Actor":"royhuang813","Number":"1893","RawContent":null,"Title":"Update getters.md","State":"open","Body":"缺少一个`return`","Url":"https://github.com/vuejs/vuex/pull/1893","RelatedDescription":"Open PR \"Update getters.md\" (#1893)"},{"Id":"757966318","IsPullRequest":true,"CreatedAt":"2020-12-06T16:37:07","Actor":"huaxhe","Number":"1892","RawContent":null,"Title":"docs(zh): add vuex translations for vuex 4","State":"open","Body":"1. Translated into Chinese based on previous version of the document.\r\n2. Add menu configuration.","Url":"https://github.com/vuejs/vuex/pull/1892","RelatedDescription":"Open PR \"docs(zh): add vuex translations for vuex 4\" (#1892)"},{"Id":"755102771","IsPullRequest":false,"CreatedAt":"2020-12-02T09:31:34","Actor":"gyjtiancai","Number":"1891","RawContent":null,"Title":"how to use the mapGetters, mapActions, mapMutations in vue3.0 setup()","State":"closed","Body":"### Version  \r\n\"vuex\": \"^4.0.0-0\",\r\n\r\n```javascript\r\nimport { mapGetters, useStore } from \"vuex\";\r\nexport default defineComponent({\r\n  name: \"vuex\",\r\n  setup(props, context) {\r\n    const store = useStore();\r\n    //  ok\r\n    console.log('userInfo',store.getters.userInfo);\r\n   \r\n   //how to use the mapGetters\r\n\r\n    return {\r\n      store,\r\n    };\r\n  },\r\n});\r\n```","Url":"https://github.com/vuejs/vuex/issues/1891","RelatedDescription":"Closed issue \"how to use the mapGetters, mapActions, mapMutations in vue3.0 setup()\" (#1891)"},{"Id":"751525209","IsPullRequest":false,"CreatedAt":"2020-11-26T11:43:50","Actor":"songololo","Number":"1890","RawContent":null,"Title":"v4 reactive getters behaviour appears to have changed for nested methods?","State":"open","Body":"### What problem does this feature solve?\r\nI used to be able to apply a reactive getter to a nested method inside an object instance stored in my v3 `vuex` state, but this doesn't appear to work anymore in v4.\r\n\r\nIn my case it was a `mapbox` instance which was created and then stored inside the `vuex` v3 store's state. I could then share this instance amongst various components and could also watch the instance for changes via reactive getters.\r\n\r\nFor example:\r\n```js\r\nstate: {\r\n  mapInstance: null, // <- gets assigned with a mapbox instance\r\n  // mapInstance contains a method called \"getZoom()\"\r\n},\r\ngetters: {\r\n  zoom: (state) => (state.mapInstance ? state.mapInstance.getZoom() : null),\r\n}\r\n```\r\n\r\nThe same approach no longer works in `vuex` v4.\r\n\r\n### What does the proposed API look like?\r\nI'm assuming something has changed in the internals of `vuex` v3 vs. v4: is there a way to deliberately expose certain nested properties or methods to reactive getters in `vuex` v4? Or else to enable the previous functionality?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1890","RelatedDescription":"Open issue \"v4 reactive getters behaviour appears to have changed for nested methods?\" (#1890)"},{"Id":"751221578","IsPullRequest":false,"CreatedAt":"2020-11-26T08:16:27","Actor":"aleksey-hoffman","Number":"1889","RawContent":null,"Title":"Mutation handlers need some serious re-evaluation 🐒","State":"closed","Body":"### What problem does this feature solve?\r\nHey guys, can we discuss Vuex mutation handlers - arguably the most nonsensical thing in Vuex?\r\n\r\nI've been developing a big complex app for 2+ years with Vue and I still haven't found good reasons to keep using mutation handlers. According to Vuex docs and my experience, the only thing they do is make debugging a little bit easier in some situations, while over-complicating the codebase and making development process undoubtedly a lot more annoying for no good reason.\r\n\r\n### Examples: \r\nCompare the 2 examples demonstrated below, look at how much less code it takes to open a dialog and to change some of its properties by using the 1st method, compared to the 2nd method.\r\n\r\n## Method 1: direct mutation\r\nThis method achieves the same thing as the 2nd method, but requires **hundreds of times** less code (when app has a lot of components), which in itself makes code cleaner and less susceptible to bugs, which results in much more enjoyable development experience.\r\n\r\n### `App.vue`\r\n\r\n```html\r\n<v-btn @click=\"createNewItem({ type: 'file', extension: 'txt' })\">\r\n  Create new item\r\n</v-btn>\r\n```\r\n```js\r\nwatch: {\r\n  // Creating a global store watcher that handles actions, required for specific store properties\r\n  dialogs () {\r\n    handler (value) {\r\n      const propertyShouldBeWrittenToDrive = ...\r\n      if (propertyShouldBeWrittenToDrive) {\r\n        this.$store.dispatch('WRITE_TO_DRIVE', propertyShouldBeWrittenToDrive)\r\n      }\r\n    },\r\n    deep: true\r\n  }\r\n},\r\nmethods: {\r\n  createNewItem (params) {\r\n    // Set dialog data\r\n    this.$store.state.dialogs.createNewItemDialog.data = { \r\n      ...this.$store.state.dialogs.createNewItemDialog.data,\r\n      ...params \r\n    }\r\n    // Open dialog\r\n    this.$store.state.dialogs.createNewItemDialog.isOpened = true\r\n  }\r\n}\r\n```\r\n\r\n### `Dialogs.vue`\r\n```html\r\n<v-dialog v-model=\"$store.state.dialogs.createNewItemDialog.isOpened\">\r\n  <div class=\"title\">\r\n    Create new {{$store.state.dialogs.createNewItemDialog.data.type}}\r\n  </div>\r\n  <v-text-field\r\n    v-model=\"createNewItemDialog.data.name\"\r\n  />\r\n  <v-btn @click=\"$store.state.dialogs.createNewItemDialog.isOpened = false\">\r\n    close dialog\r\n  </v-btn>\r\n</v-dialog>\r\n```\r\n```js\r\n// NO COMPUTED PROPERTIES NEEDED\r\n```\r\n\r\n### `store.js`\r\n```js\r\nstate = {\r\n  dialogs: {\r\n    createNewItemDialog: {\r\n      value: false,\r\n      data: {\r\n        type: 'file',\r\n        name: '',\r\n        extension: ''\r\n      }\r\n    } \r\n  }\r\n}\r\n\r\n// NO MUTATIONS AND ACTIONS NEEDED\r\n```\r\n\r\nI know this method might, in theory, make it more difficult to track down the source of errors, but in practice, if there's only 3-5 functions that change a specific state property, it's pretty easy to determine which one of them caused the error by following the event logic. Mutations are always caused by some sort of known event (button press, input change, etc), so when an error appears during a specific event, it's not that difficult to track down the function that caused it, without using mutation handlers anyway.\r\n\r\n## Method 2: mutation handlers\r\n\r\nThis method is considered to be \"the best practice\" just because it improves debugging, while requiring a ton more work. Here's all the code you will need to set up the same dialog using this method.\r\n\r\nThis example is written with the official Vuex guidelines in mind (create getters, setters, create a separate action and mutation for each property, etc) to additionally demonstrate the absurdity of the current Vuex implementation.\r\n\r\n### `App.vue`\r\n\r\n```html\r\n<v-btn @click=\"createNewItem({ type: 'file', extension: 'txt' })\">\r\n  Create new item\r\n</v-btn>\r\n```\r\n\r\n```js\r\ncomputed: {\r\n  createNewItemDialogIsOpened: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.isOpened\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    }\r\n  },\r\n  createNewItemDialogData: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA', value)\r\n    }\r\n  },\r\n  // 100 more similar computed properties for all the baseline properties of the other 50 dialogs\r\n  // ... {1,000 lines of code} ...\r\n},\r\nmethods: {\r\n  createNewItem (params) {\r\n    // Set dialog data\r\n    this.createNewItemDialogData = { ...this.createNewItemDialogData, ...params }\r\n    // Open dialog\r\n    this.createNewItemDialogIsOpened = true\r\n  }\r\n}\r\n```\r\n\r\n### `Dialogs.vue`\r\n\r\n```html\r\n<v-dialog v-model=\"createNewItemDialogIsOpened\">\r\n  <div class=\"title\">\r\n    Create new {{createNewItemDialogDataType}}\r\n  </div>\r\n  <v-text-field\r\n    v-model=\"createNewItemDialogDataName\"\r\n  />\r\n  <v-text-field\r\n    v-model=\"createNewItemDialogDataExtension\"\r\n  />\r\n  <v-btn @click=\"createNewItemDialogIsOpened = false\">\r\n    close dialog\r\n  </v-btn>\r\n</v-dialog>\r\n```\r\n\r\n```js\r\ncomputed: {\r\n  createNewItemDialogIsOpened: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.isOpened\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    }\r\n  },\r\n  createNewItemDialogDataType: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.type\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE', value)    \r\n    }\r\n  },\r\n  createNewItemDialogDataName: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.name\r\n    },\r\n    set (value) {\r\n      this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME', value)\r\n    }\r\n  },\r\n  createNewItemDialogDataExtension: {\r\n    get () {\r\n      return this.$store.state.dialogs.createNewItemDialog.data.extension\r\n    },\r\n    set (value) {\r\n       this.$store.dispatch('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION', value)\r\n    }\r\n  },\r\n  // 300 more similar computed properties for all the properties of the other 50 dialogs\r\n  // ... {3,000 lines of code} ...\r\n}\r\n```\r\n\r\n### `store.js`\r\n```js\r\nconst state = {\r\n  dialogs: {\r\n    createNewItemDialog: {\r\n      value: false,\r\n      data: {\r\n        type: 'file',\r\n        name: '',\r\n        extension: ''\r\n      }\r\n    } \r\n  }\r\n}\r\n\r\nmutations: {\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED (state, value) {\r\n    state.dialogs.createNewItemDialog.isOpened = value\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA (state, value) {\r\n    state.dialogs.createNewItemDialog.data = value\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE (state, value) {\r\n    state.dialogs.createNewItemDialog.data.type = value\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME (state, value) {\r\n    state.dialogs.createNewItemDialog.data.name= value\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION (state, value) {\r\n    state.dialogs.createNewItemDialog.data.extension= value\r\n  },\r\n  // 5000 more similar Vuex mutations for all the properties of the other 50 dialogs and other components\r\n  // ... {50,000 lines of code} ...\r\n},\r\nactions: {\r\n  WRITE_TO_DRIVE (state, params) {\r\n    ...\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_IS_OPENED', value)\r\n    dispatch('WRITE_TO_DRIVE', value)\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA', value)\r\n  },\r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_TYPE ', value)\r\n  }, \r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_NAME ', value)\r\n  }, \r\n  SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION ({state, dispatch}, value) {\r\n    commit('SET_DIALOGS_CREATE_NEW_ITEM_DIALOG_DATA_EXTENSION', value)\r\n  }, \r\n  // 5000 more similar Vuex actions for all the properties of the other 50 dialogs and other components\r\n  // ... {50,000 lines of code} ...\r\n}\r\n```\r\n\r\nAnd you have to do this for every single component of the app.\r\n\r\nAdd to that the inability to mutate properties from within a Vuex action and the fact that direct mutations are 10 - 500 times faster than the mutation handlers in cases where properties is mutated rapidly (once every few milliseconds), e.g. a slider without a debouncer / throttle, and it becomes clear that this insanity needs a re-evaluation.\r\n\r\nIn the real code, I managed to reduce the amount of computed properties by generating them dynamically for every nested property in `beforeCreated` hook of every component, and reduced the amount of mutations by creating a single generalized custom mutation function that sets specified deep properties automatically from the specified `'dot.notation.property.path'` string. But if this kind of heavy lifting is supposed be implemented manually by every developer for every new project, Vuex shouldn't really be considered a library then.\r\n\r\n### What does the proposed API look like?\r\nAnything but this. Surely there is a better / smarter / simpler way to do traceable mutations.\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1889","RelatedDescription":"Closed issue \"Mutation handlers need some serious re-evaluation 🐒\" (#1889)"},{"Id":"748443435","IsPullRequest":true,"CreatedAt":"2020-11-25T15:19:22","Actor":"kiaking","Number":"1884","RawContent":null,"Title":"fix: fix getters stop working when component is destroyed","State":"closed","Body":"ref #1878 #1883\r\n\r\nThis PR temporarily fixes the issue where getters (`computed`) get destroyed when components get destroyed. The limitation is that with this fix, getters will get re-evaluated each time it gets accessed regardless of whether dependencies have got updated or not.\r\n\r\nIt's not an ideal fix, but we have to wait for Vue 3.1 release to fix this issue completely. Learn more at #1883.","Url":"https://github.com/vuejs/vuex/pull/1884","RelatedDescription":"Closed or merged PR \"fix: fix getters stop working when component is destroyed\" (#1884)"},{"Id":"744177745","IsPullRequest":false,"CreatedAt":"2020-11-25T15:15:00","Actor":"jmcooper","Number":"1874","RawContent":null,"Title":"Documentation Clarity for Getters in Vuex Modules","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/guide/modules.html#namespacing](https://vuex.vuejs.org/guide/modules.html#namespacing)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis is a problem with the documentation.\r\n\r\n### What is expected?\r\nGreater clarity on getters in Vuex modules\r\n\r\n### What is actually happening?\r\nIn the namespacing section there is this explanation for why getters, actions and mutations are not namespaced by default:\r\n\"By default, actions, mutations and getters inside modules are still registered under the global namespace - this allows multiple modules to react to the same mutation/action type.\"\r\n\r\nThat reasoning (allowing multiple modules to react) is true for mutations an actions, but it doesn't explain the purpose for getters. In fact, it feels inaccurate to be grouping getters into this reasoning since it's actually erroneous to suggest you can have getters with the same name in multiple non-namespaced modules (or root) when that, in fact, will produce an error.\r\n\r\n---\r\nWhat is the purpose for a module's getters being global by default? If there is a purpose, can it be included here in the documentation?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1874","RelatedDescription":"Closed issue \"Documentation Clarity for Getters in Vuex Modules\" (#1874)"},{"Id":"750605030","IsPullRequest":false,"CreatedAt":"2020-11-25T08:36:27","Actor":"maartenvanasperen","Number":"1888","RawContent":null,"Title":"add config to index types, this.$config from Nuxt is not recognised in the store (typescript).","State":"closed","Body":"### What problem does this feature solve?\r\nIn Vuex the config values from Nuxt are not recognised in Typescript: https://nuxtjs.org/blog/moving-from-nuxtjs-dotenv-to-runtime-config#using-your-config-values. So this.$config is available in the Vuex store and I can access the values, but it says property '$config' does not exist on type 'store'\r\n\r\nIn any vue component (with TS) it gets recognised and works as intended, but not in the Vuex store.\r\n\r\n### What does the proposed API look like?\r\nin vuex/types/index.d.ts add:\r\n`config: any;\r\n`\r\nThis resolves the problem and $config gets recognised in the Vuex store. Or is there a better way to extend the index.d.ts? I couldn't find how.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1888","RelatedDescription":"Closed issue \"add config to index types, this.$config from Nuxt is not recognised in the store (typescript).\" (#1888)"},{"Id":"750108597","IsPullRequest":true,"CreatedAt":"2020-11-24T22:28:09","Actor":"loongye","Number":"1887","RawContent":null,"Title":"Update index.md","State":"closed","Body":"Add missing mutation","Url":"https://github.com/vuejs/vuex/pull/1887","RelatedDescription":"Closed or merged PR \"Update index.md\" (#1887)"},{"Id":"749093713","IsPullRequest":true,"CreatedAt":"2020-11-24T02:17:28","Actor":"periscuelo","Number":"1885","RawContent":null,"Title":"(Some fixes for Vuex 3 ptbr docs)","State":"closed","Body":"@kiaking when you could merge I'll be glad. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1885","RelatedDescription":"Closed or merged PR \"(Some fixes for Vuex 3 ptbr docs)\" (#1885)"},{"Id":"749096916","IsPullRequest":true,"CreatedAt":"2020-11-24T02:16:21","Actor":"periscuelo","Number":"1886","RawContent":null,"Title":"(docs 4.0 ptbr fix)","State":"closed","Body":"A little translation fix\r\n\r\n@kiaking when you could merge I'll be glad. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1886","RelatedDescription":"Closed or merged PR \"(docs 4.0 ptbr fix)\" (#1886)"},{"Id":"741607945","IsPullRequest":false,"CreatedAt":"2020-11-23T03:17:15","Actor":"yaquawa","Number":"1870","RawContent":null,"Title":"How to create on-reactive item in the store?","State":"closed","Body":"### Version\r\nv4.0.0-rc.1\r\n\r\nAll item in the store are be converted into Proxy.\r\nBut the proxy object won't forward method call to the original one.\r\nI want to add an object as a on-reactive item so that I can call the methods on the object.\r\nOr is there any way to access the original object from the proxy object?\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1870","RelatedDescription":"Closed issue \"How to create on-reactive item in the store?\" (#1870)"},{"Id":"748309109","IsPullRequest":true,"CreatedAt":"2020-11-22T18:18:50","Actor":"kiaking","Number":"1883","RawContent":null,"Title":"fix: fix getters being destroyed on component destroy (#1878)","State":"open","Body":"fix #1878\r\n\r\nThis PR aims to fix #1878, but at the moment this is just adding failing test case.\r\n\r\nThe problem we have is that when component gets destroyed, the getters (`computed`) get's destroyed via Vue. Hence if we call `registerModule` inside a component, any newly registered `computed` will disappear when that component gets destroyed, for example, when switching route.\r\n\r\nThe issue: vuejs/vue-next#1532\r\nSolution RFC: vuejs/rfcs#212\r\n\r\nWe have to wait for Vue 3.1 to completely resolve this issue.","Url":"https://github.com/vuejs/vuex/pull/1883","RelatedDescription":"Open PR \"fix: fix getters being destroyed on component destroy (#1878)\" (#1883)"},{"Id":"748211412","IsPullRequest":true,"CreatedAt":"2020-11-22T13:43:36","Actor":"periscuelo","Number":"1882","RawContent":null,"Title":"(docs ptBR fixes 4.0)","State":"closed","Body":"Some fixes found\r\n\r\n@ktsn I'll make reviews of translation 3.0 after too.\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1882","RelatedDescription":"Closed or merged PR \"(docs ptBR fixes 4.0)\" (#1882)"},{"Id":"742844673","IsPullRequest":true,"CreatedAt":"2020-11-22T13:31:48","Actor":"sebamarynissen","Number":"1872","RawContent":null,"Title":"Add Node.js esm entry point","State":"closed","Body":"This PR adds a Node.js esm entry point for Vuex. Currently it is already possible to do\r\n```js\r\nimport Vuex from 'vuex'\r\n```\r\non Node 13.2 and up, but unfortunately it's not possible to do\r\n```js\r\nimport { mapGetters } from 'vuex';\r\n```\r\nbecause Node doesn't support named imports from CommonJS (note: it actually *does*, but only if the imported cjs file adheres to some rules, such as using `exports.mapGetters`). This PR adds support for named imports on Node as well.\r\n\r\nWhile it *is* possible to directly use `dist/vuex.esm.js`, this PR does not use that file but chooses to use an esm wrapper file as to avoid the [dual package hazard](https://nodejs.org/api/packages.html#packages_approach_1_use_an_es_module_wrapper).\r\n\r\n### Why?\r\n\r\nNode.js now fully supports esm so let's encourage the migration process by improving interoperability of the code we write. I've created this PR in the wake of writing [vue-esm-loader](https://www.npmjs.com/package/vue-esm-loader) which allows importing `.vue` single-file components on Node without a build step. I noticed that I was unable to test my Vue components because they were using\r\n```js\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState(['state']),\r\n  },\r\n};\r\n```\r\nand hence decided to add this functionality to Vuex.\r\n\r\nRelated: https://github.com/chaijs/chai/pull/1340","Url":"https://github.com/vuejs/vuex/pull/1872","RelatedDescription":"Closed or merged PR \"Add Node.js esm entry point\" (#1872)"},{"Id":"748201196","IsPullRequest":false,"CreatedAt":"2020-11-22T09:07:54","Actor":"weishijun14","Number":"1881","RawContent":null,"Title":"memory leak with socket.io and vue devtools ","State":"open","Body":"### Version\r\nvuex 4.0.0-beta.4\r\nvue 3.0.0\r\nsocket.io 2.3.1\r\n\r\n### Reproduction link\r\n\r\n**no links**\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm use socket.io , and I have a big Json data, more than 100kb per 3 second,\r\n```javascript\r\n socket.on('someEvent', function(data) {\r\n       // data almost 100kb -- 150kb\r\n       _this.$store.commit('someMutationsName', data);\r\n  })\r\n\r\n```\r\n\r\n### What is expected?\r\nChrome momery keep normal.\r\n\r\n### What is actually happening?\r\nChrome momery usage keep increasing.\r\n\r\n---\r\nWhen I **comment this code** :\r\n```javascript\r\nthis._subscribers\r\n    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\r\n    .forEach(function (sub) { return sub(mutation, this$1.state); });\r\n```\r\n\r\nor **uninstall Chrome vue devtool**  which I use this version:\r\n\r\n6.0.0 beta 2\r\n\r\nIt's back to normal.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1881","RelatedDescription":"Open issue \"memory leak with socket.io and vue devtools \" (#1881)"},{"Id":"746179166","IsPullRequest":false,"CreatedAt":"2020-11-22T07:54:22","Actor":"jessuni","Number":"1876","RawContent":null,"Title":"Documentation style bug","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://next.vuex.vuejs.org/#what-is-a-state-management-pattern](https://next.vuex.vuejs.org/#what-is-a-state-management-pattern)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nShrink viewport to less than 959px wide, there's an additional `margin-left` that squeezes the docs to the right and leave a blank block in the center. Same for viewport-width <= 719px, the left padding squeezes the whole docs.\r\n\r\n### What is expected?\r\nNormal article layout just like https://vuex.vuejs.org/\r\n\r\n### What is actually happening?\r\nStyling bug\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1876","RelatedDescription":"Closed issue \"Documentation style bug\" (#1876)"},{"Id":"748142257","IsPullRequest":true,"CreatedAt":"2020-11-22T07:47:25","Actor":"periscuelo","Number":"1880","RawContent":null,"Title":"(Add pt-br language) Vuex 4","State":"closed","Body":"Translated to Portuguese BR\r\nAdded config menu\r\n\r\n@ktsn Is it already possible to make the translation available? After a review of course?","Url":"https://github.com/vuejs/vuex/pull/1880","RelatedDescription":"Closed or merged PR \"(Add pt-br language) Vuex 4\" (#1880)"},{"Id":"747579521","IsPullRequest":false,"CreatedAt":"2020-11-20T16:33:10","Actor":"musashiM82","Number":"1879","RawContent":null,"Title":"try to add registerModule in router beforeEach","State":"closed","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://github.com/musashiM82/register-module-in-router](https://github.com/musashiM82/register-module-in-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* clone repo\r\n* execute `npm i && npm run serve`\r\n* open web app in browser\r\n* check console error ` [vuex] module namespace not found in mapGetters(): home/`\r\n* click on About link\r\n* check console error ` [vuex] module namespace not found in mapGetters(): about/`\r\n\r\n\r\n### What is expected?\r\nit is expected that store module is registered in correct way\r\n\r\n### What is actually happening?\r\nit is like that store module is not registered\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1879","RelatedDescription":"Closed issue \"try to add registerModule in router beforeEach\" (#1879)"},{"Id":"747574828","IsPullRequest":false,"CreatedAt":"2020-11-20T15:22:55","Actor":"musashiM82","Number":"1878","RawContent":null,"Title":"lost previous registered module during multiple registration","State":"open","Body":"### Version\r\n4.0.0-rc.1\r\n\r\n### Reproduction link\r\n[https://github.com/musashiM82/register-module-in-before-create-page](https://github.com/musashiM82/register-module-in-before-create-page)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* clone repo\r\n* execute `npm i && npm run serve`\r\n* open web app in browser\r\n* in \"Home\" page you can see \"state.home.count 1\"\r\n* click on \"About\" link\r\n* click on \"Home\" link\r\n* in \"Home\" page you can see \"state.home.count\" now\r\n\r\n### What is expected?\r\nit is expected that the second time that I go into Home page I continue to see \"state.home.count 1\"\r\n\r\n### What is actually happening?\r\nit is happening that I see \"state.home.count\". it is like the previous registered module is lost\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1878","RelatedDescription":"Open issue \"lost previous registered module during multiple registration\" (#1878)"},{"Id":"746443039","IsPullRequest":false,"CreatedAt":"2020-11-19T10:36:49","Actor":"jaoord","Number":"1877","RawContent":null,"Title":"Which version of vuex should I use directly in the browser?","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tda81ybc/](https://jsfiddle.net/tda81ybc/)\r\n\r\n### Steps to reproduce\r\nhtml:\r\n`<script src=\"https://unpkg.com/vue@3.0.2/dist/vue.global.js\"></script>\r\n<script src=\"https://unpkg.com/vuex@3.5.1/dist/vuex.global.js\"></script>\r\n<div id=\"app\">\r\n  <p>{{ message }}</p>\r\n</div>\r\n`\r\n\r\njs:\r\n`\r\nconst store = new Vuex.Store({\r\n    state: function() {\r\n        return {\r\n            filter: {\r\n                roofType: ''\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst app = Vue.createApp({\r\n    data: function () {\r\n        return {\r\n           message: 'Hello World'\r\n        }\r\n    },\r\n    methods: {\r\n    }\r\n});\r\n\r\napp.use(store);\r\nconst mountedApp = app.mount('#app');\r\n`\r\n\r\n### What is expected?\r\nno reference to process\r\n\r\n### What is actually happening?\r\nreference to process:\r\n\r\nUncaught ReferenceError: process is not defined\r\n    at new Store (vuex.global.js:290)\r\n    at ?editor_console=true:120\r\n\r\n---\r\nthe naming of the builds is quite confusing. there is for example a vuex.esm-browser.js, a vuex.esm.browser.js file, and cjs and commonjs files.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1877","RelatedDescription":"Closed issue \"Which version of vuex should I use directly in the browser?\" (#1877)"},{"Id":"743677471","IsPullRequest":false,"CreatedAt":"2020-11-18T02:46:19","Actor":"ShenQingchuan","Number":"1873","RawContent":null,"Title":"How to access Vuex store in VueRouter.beforeEach in TypeScript?","State":"closed","Body":"### What problem does this feature solve?\r\nI want to set a guard in VueRouter.beforeEach(), it will redirect to the login page when the `loggedIn` state is `false`.\r\n\r\n### What does the proposed API look like?\r\nI want to achieve something this this:\r\n\r\n```typescript\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1873","RelatedDescription":"Closed issue \"How to access Vuex store in VueRouter.beforeEach in TypeScript?\" (#1873)"},{"Id":"744496081","IsPullRequest":false,"CreatedAt":"2020-11-17T07:48:43","Actor":"leeboo","Number":"1875","RawContent":null,"Title":"vue 3.0, vuex 4.0 能否采用数组语法动态的给state设置，比如state[name] = value","State":"closed","Body":"目前会报警告：Write operation failed: computed value is readonly\r\n但赋值是成功了的\r\n有什么影响，能否消除这个警告","Url":"https://github.com/vuejs/vuex/issues/1875","RelatedDescription":"Closed issue \"vue 3.0, vuex 4.0 能否采用数组语法动态的给state设置，比如state[name] = value\" (#1875)"},{"Id":"742256391","IsPullRequest":false,"CreatedAt":"2020-11-16T11:26:29","Actor":"yaquawa","Number":"1871","RawContent":null,"Title":"match getter signature to actions","State":"closed","Body":"### Version\r\nv4.0.0-rc.1\r\n\r\nThe current signature of getter\r\n```ts\r\ntype Getter<S, R> = (state: S, getters: any, rootState: R, rootGetters: any) => any;\r\n```\r\n\r\nif I want to use `rootState` and `state` only, I have to write the `getters` in the 2nd parameter even if I'll never use it. \r\n```\r\ngetFoo(state, getters, rootState) {\r\n}\r\n```\r\n\r\nI think this is better, just like the signature of action handlers.\r\n```\r\ngetFoo({state, rootState}) {\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1871","RelatedDescription":"Closed issue \"match getter signature to actions\" (#1871)"},{"Id":"741563909","IsPullRequest":true,"CreatedAt":"2020-11-16T11:08:06","Actor":"Alanscut","Number":"1869","RawContent":null,"Title":"docs(typo): fix typos in comment","State":"closed","Body":"comment didn't update with the code.","Url":"https://github.com/vuejs/vuex/pull/1869","RelatedDescription":"Closed or merged PR \"docs(typo): fix typos in comment\" (#1869)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-13T05:30:42.8994383Z","RunDurationInMilliseconds":1729}