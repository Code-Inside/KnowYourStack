{"Data":{"Vue-Issues":{"Issues":[{"Id":"623961235","IsPullRequest":false,"CreatedAt":"2020-05-24T22:46:25","Actor":"ttodua","Number":"11411","RawContent":null,"Title":"Strange behavior within `transition-group`","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yrqt02kj/1/](https://jsfiddle.net/yrqt02kj/1/)\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`transition-group`  renders the component twice (and the second rendering is done without parsed \"{{variable}}\").\r\nIf we just remove `transition-group` parent at all, it works as expected and there is no duplicated content.\r\n\r\n\r\n### What is expected?\r\nthere should not be the duplicated content (with unrendered variable tag)\r\n\r\n### What is actually happening?\r\nit shows the content twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11411","RelatedDescription":"Closed issue \"Strange behavior within `transition-group`\" (#11411)"},{"Id":"623893461","IsPullRequest":false,"CreatedAt":"2020-05-24T16:03:51","Actor":"aKzenT","Number":"11410","RawContent":null,"Title":"createCompileToFunctionFn uses unpurgable cache that can cause memory leaks","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rhmcwgk9/](https://jsfiddle.net/rhmcwgk9/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen using SSR from other frameworks such as ASP.NET it is not uncommon to pass templates to the render process that contain dynamic strings in itself (e.g. the template stirng itself is different for each call/user). The createCompileToFunctionFn uses an internal \"cache\" object which has no limitations and therefore creates a memory leak when used with such dynamic templates.\r\n\r\n### What is expected?\r\nThe implementation uses a limited cache (e.g. LRU) or allows passing a custom cache object.\r\n\r\n### What is actually happening?\r\nThe cache is a simple \"object\" created internally without any way to influence.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11410","RelatedDescription":"Open issue \"createCompileToFunctionFn uses unpurgable cache that can cause memory leaks\" (#11410)"},{"Id":"623694788","IsPullRequest":true,"CreatedAt":"2020-05-23T16:30:29","Actor":"aryavb","Number":"11409","RawContent":null,"Title":"fix(error-detector.js): Altered 'checkEvent' Function (fix #11090)","State":"open","Body":"fix #11090\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11409","RelatedDescription":"Open PR \"fix(error-detector.js): Altered 'checkEvent' Function (fix #11090)\" (#11409)"},{"Id":"623586155","IsPullRequest":true,"CreatedAt":"2020-05-23T16:28:42","Actor":"aryavb","Number":"11408","RawContent":null,"Title":"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11408","RelatedDescription":"Closed or merged PR \"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)\" (#11408)"},{"Id":"623053212","IsPullRequest":false,"CreatedAt":"2020-05-22T09:38:03","Actor":"ozgurrgul","Number":"11407","RawContent":null,"Title":"Transition group is not working in <iframe>","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/78ucsog3/](https://jsfiddle.net/78ucsog3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI've created a reproduction of the issue. Basically, transition animations are not working in the iframe. I have a case where I need the render vue components in the iframe, it works great, but animations are not working.\r\n\r\n- I copied the example List transitions from https://vuejs.org/v2/guide/transitions.html#List-Entering-Leaving-Transitions\r\n- Wrapped it in custom <i-iframe> component.\r\n- Transitions are not triggering. I also injected css transition classes to the iframe but still no luck. \r\n\r\n### What is expected?\r\nTransition animation should trigger in the iframe\r\n\r\n### What is actually happening?\r\nTransition animation is not triggering in the iframe\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11407","RelatedDescription":"Closed issue \"Transition group is not working in <iframe>\" (#11407)"},{"Id":"621987623","IsPullRequest":false,"CreatedAt":"2020-05-20T19:06:25","Actor":"pravi","Number":"11406","RawContent":null,"Title":"Please remove build dependency on rollup-plugin-flow-no-whitespace (depends on modules no longer maintained)","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/](https://github.com/vuejs/vue/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOne of the build dependencies is no longer maintained.\r\n\r\n### What is expected?\r\nBuild dependencies should be maintained actively\r\n\r\n### What is actually happening?\r\nrollup-plugin-flow-no-whitespace depends on https://github.com/facebookarchive/flow-remove-types which is now an archived project. \r\n\r\n---\r\nBabel 7 already includes plugin to remove flow annotations as @babel/plugin-transform-flow-strip-types. It is actually mentioned in .babelrc.js but it is not used. You could use rollup-plugin-babel to remove flow annotations instead.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11406","RelatedDescription":"Closed issue \"Please remove build dependency on rollup-plugin-flow-no-whitespace (depends on modules no longer maintained)\" (#11406)"},{"Id":"621746908","IsPullRequest":false,"CreatedAt":"2020-05-20T13:13:30","Actor":"Flothus","Number":"11405","RawContent":null,"Title":"Improving transition component through adding transition classes to the\" transition wrapper\" + trigger transition on custom prop  ","State":"closed","Body":"### What problem does this feature solve?\r\nIt's complicated to get full control over transitions. Vue only targets changing elements. This leads to difficulties when unchanged items also need to be transitioned. \r\n\r\n\r\n**No simple way to trigger a transition component without a data change**\r\nIt is useful to have a way to trigger the transitions component via a custom-event-prop, not just when there is a data change. This is complicated for new users who might look for an easy way to transition components (e.g just on a click even if there is no data change -> to give visual feedback). To my knowledge, it's only possible via an if-condition or changing key workaround. \r\nWhich seems not render efficient (but I don't know if Vue rebuilds the component entirely on key change or reuses it and just triggers the classes,  all the same), \r\n\r\n\r\n**No way to add transition classes to a component on component change**\r\nTo my knowledge, there is no easy way to control transitions before a component is updated and after. Users trying to add transitions to when only transitioning targeting elements is not enough might misunderstand Vue's lifecycle hooks for a way to update the real dom to trigger transitions.\r\nAnd again group-transitions only handle enter/leaving elements.\r\n\r\n\r\n### What does the proposed API look like?\r\n**Have an option on the transition-group component to add transition classes similar to the enter/leave classes to the transition wrapper.**\r\n\r\nCovers triggering transitions on elements that are not leaving/entering on rerender.\r\nMaybe there could also be an option to target the wrapper of the page to allow for transitions on different elements when the transition component is triggered. But I haven't thought this through if this might cause unexpected/messy behavior /collisions with several transition components on the page.\r\n\r\n```vue\r\n<transition-group name=\"name\" transitionWrapper/transitionAll/targetWrapper/target(transition)Component/targetPage> \r\n ...\r\n</transition> \r\n```\r\n\r\nWill add classes to the transition wrapper to give more control over transitions e.g. `name-beforeOut`, `name-beforeIn`, `name-outActive`, `name-inActive`, `name-outTo`, `name-inTo`. Class naming might need more thought, though. Might also add `unchanged`class to remaining elements.\r\n\r\n\r\n**Trigger transition on prop change**\r\nCovers triggering transition on custom events. Only relevant if there is no change triggering the transition in the same lifecycle anyway.\r\n\r\n```vue\r\n<transition-group name=\"name\" transitionTrigger> \r\n ...\r\n</transition-group> \r\n```\r\n\r\nTriggers Out and In classes on the wrapper based on the mode (so mode on group transitions would need to work internally differently than on \"single\" transitions? It would be still be really great if there would be some kind of out-in mode for group-transition that handles all leaving elements at once and all entering once. There still could be a staggering option if needed?). \r\n\r\n```vue\r\n<transition name=\"name\" (targetPage) transitionTrigger mode=\"out-in\"> \r\n ...\r\n</transition> \r\n```\r\n\r\nAny ideas on this, or is there an easier Vueish way to do those things already?  I have to say that Vue's transition \"blackbox\" has been a bit frustrating to me. Especially on group-transitions and trying to remove leaving items from the dom, before new items enter. Which by default seems to be not possible. Or transition also unchanged items on a rerender. So at least with this we can get a bit more control and simplify some things hopefully without adding too much complexity?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11405","RelatedDescription":"Closed issue \"Improving transition component through adding transition classes to the\" transition wrapper\" + trigger transition on custom prop  \" (#11405)"},{"Id":"621652571","IsPullRequest":false,"CreatedAt":"2020-05-20T10:48:22","Actor":"STEREOH","Number":"11404","RawContent":null,"Title":"Textareas are completelly cleared on form reset (IE/Edge)","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xtha3pd6/](https://jsfiddle.net/xtha3pd6/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Use IE/Edge\r\n- Make a form inside a vue instance.\r\n- Add a textarea with some text in it.\r\n- Add an input type reset\r\n\r\n### What is expected?\r\nThe textarea, like the basic input, should be reseted to it's initial value on form reset. This works on all other browsers.\r\n\r\n### What is actually happening?\r\nThe textarea content is completelly cleared.\r\n\r\n---\r\nTested on IE11 and  Edge 42\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11404","RelatedDescription":"Closed issue \"Textareas are completelly cleared on form reset (IE/Edge)\" (#11404)"},{"Id":"620832837","IsPullRequest":false,"CreatedAt":"2020-05-19T09:51:37","Actor":"Skasi","Number":"11402","RawContent":null,"Title":"Pushing to v-for loop list updates more components than expected","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/component-update-test-66fjt?expanddevtools=1&module=%2FApp.vue](https://codesandbox.io/s/component-update-test-66fjt?expanddevtools=1&module=%2FApp.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEither check out the reproduction link above, OR follow these steps:\r\n\r\n1) Make a list (array or object, doesn't matter): `data() { return { list: [] } }`  \r\n2) Use a `v-for`-loop to go through `list` and for each entry, render a component`<Test :key=\"i\"></Test>`  \r\n3) Add any text/element/etc. inside the element: `<Test:key=\"i\">any string</Test>`  \r\n4) Push a new entry to the list: `this.list.push(....)`\r\n\r\n### What is expected?\r\nA new component is created and added to the list, other components inside the list remain \"untouched\".\r\n\r\n### What is actually happening?\r\nA new component is created and added to the list and each already-existing instance of `<Test>` rendered in the list has their `updated` hook called.\r\n\r\n---\r\nRemoving the text will stop `updated`-hooks from being called. Passing the same text as a prop and rendering it inside the component will not call `updated`-hooks.\r\n\r\nAdding a `<slot>` to the template of the child component has no impact on `updated`-hook calls.\r\n\r\nI'm not sure whether this is another version of #6351 or not. That issue is about *updating slot content*, whereas the issue here is about rendering multiple components via `v-for` while *slot content remains the same*.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11402","RelatedDescription":"Closed issue \"Pushing to v-for loop list updates more components than expected\" (#11402)"},{"Id":"620361431","IsPullRequest":true,"CreatedAt":"2020-05-19T05:01:05","Actor":"rluvaton","Number":"11401","RawContent":null,"Title":"Fix #11400","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nisNative function to be more reliable\r\nFix #11400 ","Url":"https://github.com/vuejs/vue/pull/11401","RelatedDescription":"Closed or merged PR \"Fix #11400\" (#11401)"},{"Id":"620358566","IsPullRequest":false,"CreatedAt":"2020-05-19T05:00:39","Actor":"rluvaton","Number":"11400","RawContent":null,"Title":"The isNative function not 100% reliable","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/raz-luvaton/pen/mdeQqKN](https://codepen.io/raz-luvaton/pen/mdeQqKN)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nisNative(isNative) // Return true\r\n```\r\n\r\n### What is expected?\r\nexpected to return false (function is not native)\r\n\r\n### What is actually happening?\r\nthinking that the function is native (returning true)\r\n\r\n---\r\nWhile reading this article - [5 JavaScript Tips I Learned From Vue Source Code - Medium](https://levelup.gitconnected.com/5-javascript-tips-i-learned-from-vue-source-code-6095df4e9bc1) I've noticed that flaw\r\n\r\nthe code is from\r\nhttps://github.com/vuejs/vue/blob/a9a303009a4267b7f12b956741b4e34dfdc6566f/src/core/util/env.js#L58-L60\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11400","RelatedDescription":"Closed issue \"The isNative function not 100% reliable\" (#11400)"},{"Id":"620083142","IsPullRequest":false,"CreatedAt":"2020-05-18T10:37:23","Actor":"07akioni","Number":"11399","RawContent":null,"Title":"Component is re-rendered when computed value stay same and its dep value changes.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-computed-test-nc9s7?file=/src/App.vue](https://codesandbox.io/s/vue-computed-test-nc9s7?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFollow the link\r\n\r\n### What is expected?\r\nThe render function shouldn't be called when its dependent computed value isn't changed.\r\n\r\n### What is actually happening?\r\nEvery time the value changes, the component is re-rendered, even if the computed value is not changed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11399","RelatedDescription":"Closed issue \"Component is re-rendered when computed value stay same and its dep value changes.\" (#11399)"},{"Id":"620003426","IsPullRequest":false,"CreatedAt":"2020-05-18T08:16:40","Actor":"berniegp","Number":"11398","RawContent":null,"Title":"Node attribute value is not reactive after client side hydration","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ssr-reactivity-up6nh?file=/pages/index.vue](https://codesandbox.io/s/ssr-reactivity-up6nh?file=/pages/index.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- The id attribute of the `div` does not match the myid value from the component (requires page refresh sometimes on first load).\r\n- Notice that `$forceUpdate()` (first button) does not update the id attribute of the `div`\r\n- Changing the value of the `val` data (second button) property triggers the reactivity\r\n\r\n\r\n### What is expected?\r\nEvery reference to the `myid` computed property should match\r\n\r\n### What is actually happening?\r\nThe id attribute of the `div` does not match the `myid` value\r\n\r\n---\r\nThe same component used in client-side rendering does not exhibit this issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11398","RelatedDescription":"Open issue \"Node attribute value is not reactive after client side hydration\" (#11398)"},{"Id":"619050910","IsPullRequest":false,"CreatedAt":"2020-05-15T15:28:48","Actor":"guidobouman","Number":"11397","RawContent":null,"Title":"Attribute inheritance broken for radio since 2.6.1","State":"closed","Body":"### Version\r\n2.6.1 ... 2.6.11\r\n\r\n### Reproduction link\r\nhttps://codepen.io/guidobouman/pen/OJyoGoZ?editors=1010\r\n\r\nThere's some sort of workaround, that's also somewhat broken:\r\nhttps://codepen.io/guidobouman/pen/WNQgBMN?editors=1010\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a custom radio component that implements a native radio input\r\n2. Use a model and a value, both on the same custom radio\r\n3. Pass on the model & $attrs to the radio\r\n\r\n### What is expected?\r\nThe value is passed on as default value, and the model is still working as intended. Just like with the default Vue setup.\r\n\r\n### What is actually happening?\r\nSince 2.6.1 the value attr is filtered out, or is assigned to the actual value of model. Depending wether or not you have the value prop defined on the custom radio component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11397","RelatedDescription":"Closed issue \"Attribute inheritance broken for radio since 2.6.1\" (#11397)"},{"Id":"618927415","IsPullRequest":false,"CreatedAt":"2020-05-15T13:25:36","Actor":"shivamguys","Number":"11396","RawContent":null,"Title":"Component Created Having higher z index value does not gets destroyed","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://ibb.co/bWW5LS7  https://ibb.co/jWyrHQX](https://ibb.co/bWW5LS7  https://ibb.co/jWyrHQX)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ntry creating a div with higher z index from component and navigate another component\r\n\r\n### What is expected?\r\nTo get destroyed\r\n\r\n### What is actually happening?\r\nit gets sticked\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11396","RelatedDescription":"Closed issue \"Component Created Having higher z index value does not gets destroyed\" (#11396)"},{"Id":"618831320","IsPullRequest":false,"CreatedAt":"2020-05-15T09:34:31","Actor":"CrazyLevin","Number":"11395","RawContent":null,"Title":"关于页面加载完毕监听","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://sitetest.seastad.com/trayton/#/](http://sitetest.seastad.com/trayton/#/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n我在项目中实现点击按钮跳转后想到页面的指定的标签位置（document.body.scrollTop = document.documentElement.scrollTop = this.$refs['ref'].$el.offsetTop）\r\n不知道是不是我用法不对？\r\n\r\n### What is expected?\r\n希望可以在页面完全加载完后有这么一个钩子函数或方法\r\n\r\n### What is actually happening?\r\n但是这时页面还没加载完(mouted里执行)，跳转之后去的位置会不准确。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11395","RelatedDescription":"Closed issue \"关于页面加载完毕监听\" (#11395)"},{"Id":"618685169","IsPullRequest":false,"CreatedAt":"2020-05-15T09:18:02","Actor":"zzcong","Number":"11394","RawContent":null,"Title":"How to quickly remove the watcher from an object while making a deep copy","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/frosty-night-rlujg](https://codesandbox.io/s/frosty-night-rlujg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nVuex USES strict patterns;\r\nThere is an array in Vuex that when I make a deep copy of 'slice()' and modify it, error will be reported when I submit it to 'mutation' change 'state' : 'error:Do not mutate vuex store state outside mutation handlers. ', looking at the error stack information, it was found that the error was reported when the callback function of 'watcher' was executed in the 'run()' method of 'watcher'. Finally, it was copied using 'json.parse () & json.stringify ()'.How to untag 'watcher' on this object without using 'json.stringify ()'\r\ncode: \r\n```\r\n        // this.set_all_macuser === this.$store.commit('set_all_macuser')\r\n        // error\r\n        let macList = this.anchors.slice().map(v => {\r\n          speaks.includes(v.uid * 1) ? v.isSpeak = true : v.isSpeak = false\r\n          return v\r\n        })\r\n        this.set_all_macuser(macList)\r\n        // right\r\n        let list = JSON.parse(JSON.stringify(this.anchors))\r\n        let macList = list.map(v => speaks.includes(v.uid * 1) ? v.isSpeak = true : v.isSpeak = false)\r\n        this.set_all_macuser(macList)\r\n```\r\n\r\n### What is expected?\r\nProvide a convenient way\r\n\r\n### What is actually happening?\r\nConsole error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11394","RelatedDescription":"Closed issue \"How to quickly remove the watcher from an object while making a deep copy\" (#11394)"},{"Id":"617894855","IsPullRequest":false,"CreatedAt":"2020-05-14T09:29:41","Actor":"sandipbiswasbehala","Number":"11393","RawContent":null,"Title":"form fileds reset on page refresh not working in IE /EDGE ","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/forms.html](https://vuejs.org/v2/guide/forms.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nfill textbox, checkbox, select etc.\r\n\r\n\r\n### What is expected?\r\nfield reset on page refresh in IE/Edge\r\n\r\n### What is actually happening?\r\nhtml components are retaining the previous  selection where data is refreshed on page refresh in IE /Edge.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11393","RelatedDescription":"Closed issue \"form fileds reset on page refresh not working in IE /EDGE \" (#11393)"},{"Id":"617801187","IsPullRequest":true,"CreatedAt":"2020-05-13T22:43:58","Actor":"nowres","Number":"11392","RawContent":null,"Title":"fix #11391: translate attribute had incorrectly the key as it's value","State":"open","Body":"When present, translate attribute had translate as it's value, which is not valid, the value should\r\nremain as specified by the user, that's why we removed it form isBooleanAttr map\r\n\r\nfix #11391\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11392","RelatedDescription":"Open PR \"fix #11391: translate attribute had incorrectly the key as it's value\" (#11392)"},{"Id":"617332605","IsPullRequest":false,"CreatedAt":"2020-05-13T10:28:21","Actor":"EtienneBruines","Number":"11391","RawContent":null,"Title":"isBooleanAttr for the HTML attribute 'translate'","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hgaL8t5n/](https://jsfiddle.net/hgaL8t5n/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse translate=no in a template\r\n\r\n### What is expected?\r\ntemplate=no to be rendered in the HTML\r\n\r\n### What is actually happening?\r\ntranslate=translate is being rendered instead\r\n\r\nYou can use devtools to inspect the rendered HTML in the reproducible JSFiddle example. \r\n\r\n---\r\nThere is a isBooleanAttr-variable somewhere in the Vue code which marks `translate` as a boolean, probably to be used like the `disabled` attribute works. \r\n\r\nThis is incorrect for two reasons:\r\n\r\n1. \"translate\" is not a valid value for the attribute (only \"\", \"yes\" and \"no\" are valid). See the spec: https://html.spec.whatwg.org/multipage/dom.html#attr-translate\r\n2. this translate-attribute is mostly used to indicate not to translate it, so when specifying \"no\", people actually mean \"no\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11391","RelatedDescription":"Open issue \"isBooleanAttr for the HTML attribute 'translate'\" (#11391)"},{"Id":"616825933","IsPullRequest":true,"CreatedAt":"2020-05-12T17:30:09","Actor":"ammar5625","Number":"11390","RawContent":null,"Title":"https://play.google.com/store/apps/details?id=com.miui.huanji","State":"closed","Body":"https://play.google.com/store/apps/details?id=com.miui.huanji\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [, ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ,] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ,,] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11390","RelatedDescription":"Closed or merged PR \"https://play.google.com/store/apps/details?id=com.miui.huanji\" (#11390)"},{"Id":"615133389","IsPullRequest":false,"CreatedAt":"2020-05-09T09:25:56","Actor":"sandipbiswasbehala","Number":"11389","RawContent":null,"Title":"RangeError: Maximum call stack size exceeded","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rwg4k2ns/](https://jsfiddle.net/rwg4k2ns/)\r\n\r\n\r\nnot working only in chorme desktop 81.XXX. working in firefox,edge , mobile chrome.\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nBelow snippet in .js file not working and getting RangeError: Maximum call stack size exceeded\r\nv-for=\"n in 200000\"\r\n:key=\"n\">Hello World {{ n }}\r\n\r\nWorkig : no error\r\nv-for=\"n in 100000\"\r\n:key=\"n\">Hello World {{ n }}\r\n\r\n### What is expected?\r\nlist will be shown\r\n\r\n### What is actually happening?\r\ngetting RangeError: Maximum call stack size exceeded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11389","RelatedDescription":"Open issue \"RangeError: Maximum call stack size exceeded\" (#11389)"},{"Id":"615130986","IsPullRequest":false,"CreatedAt":"2020-05-09T09:12:04","Actor":"sandipbiswasbehala","Number":"11388","RawContent":null,"Title":"RangeError: Maximum call stack size exceeded","State":"closed","Body":"Below snippet in .js file not working  and getting RangeError: Maximum call stack size exceeded\r\n      v-for=\"n in 200000\"\r\n      :key=\"n\">Hello World {{ n }}\r\n\r\nWorkig : no error\r\nv-for=\"n in 100000\"\r\n      :key=\"n\">Hello World {{ n }}\r\n \r\nHave attached project file.\r\n[src.zip](https://github.com/vuejs/vue/files/4603104/src.zip)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11388","RelatedDescription":"Closed issue \"RangeError: Maximum call stack size exceeded\" (#11388)"},{"Id":"615063555","IsPullRequest":false,"CreatedAt":"2020-05-09T01:48:05","Actor":"LH040707","Number":"11386","RawContent":null,"Title":"IOS finally does not execute","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/lh040707/pen/XWmEGwj](https://codepen.io/lh040707/pen/XWmEGwj)\r\n\r\n### Steps to reproduce\r\n                  this.axios.post('wxcp/wxRequest/saveRequestData',JSON.stringify(params)).then(res =>\r\n                    {\r\n\r\n                    }).catch(() =>\r\n                    {\r\n                        this.vant.Toast(\"系统错误\");\r\n                    }).finally(() =>\r\n                    {\r\n                        this.vant.Toast(_self.overlayShow);\r\n                        _self.overlayShow = false;\r\n                       //不执行\r\n                        this.vant.Toast(_self.overlayShow);\r\n                    });\r\n\r\n### What is expected?\r\n如何解决\r\n\r\n### What is actually happening?\r\n不执行\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11386","RelatedDescription":"Closed issue \"IOS finally does not execute\" (#11386)"},{"Id":"614988980","IsPullRequest":true,"CreatedAt":"2020-05-08T21:29:40","Actor":"PululuK","Number":"11385","RawContent":null,"Title":"add BigInt in allowedGlobals","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11385","RelatedDescription":"Closed or merged PR \"add BigInt in allowedGlobals\" (#11385)"},{"Id":"614827402","IsPullRequest":false,"CreatedAt":"2020-05-08T16:47:21","Actor":"vinayjoseph705","Number":"11384","RawContent":null,"Title":"Displaying a random number when i used a wrong Directive syntax","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2zq0tabm/](https://jsfiddle.net/2zq0tabm/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nit is displaying random numbers on screen when i used a wrong syntax for directive\r\n \r\nit shows warning i have used a wrong directive syntax but it is also displaying a number on screen.\r\n\r\nthe number keeps changing when i enter something to input field\r\n\r\nI have used the wrong syntax for click event in Vue. But why is a random number displaying for absolute no reason?\r\nPlease use the code below to reproduce. \r\n\r\n     <div id=\"app\">\r\n            <input type=\"text\" placeholder=\"enter here\" v-model=\"name\">\r\n            <h1>{{name}}</h1>\r\n\r\n            <button v-click=\"coun()\">Click</button>\r\n            <p>{{counter}}</p>\r\n        </div>\r\n\r\n    <script>\r\n          var app = new Vue({\r\n            el: '#app',\r\n            data: {\r\n             name: 'some',\r\n             counter: 2\r\n\r\n            },\r\n            methods: {\r\n                coun(){\r\n                    this.counter  \r\n                }\r\n            }\r\n\r\n          })\r\n\r\n    </script>\r\n   \r\n\r\n\r\n### What is expected?\r\nOnly The warning message in the console.\r\n\r\nshowing a Number on screen is not accepted\r\n\r\n### What is actually happening?\r\nit is displaying random numbers on screen when i used a wrong syntax for directive\r\n \r\nit shows warning i have used a wrong directive syntax but it is also displaying a number on screen.\r\n\r\nthe number keeps changing when i enter something to input field\r\n\r\n---\r\nwas just learning VueJs Reacting to Changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11384","RelatedDescription":"Closed issue \"Displaying a random number when i used a wrong Directive syntax\" (#11384)"},{"Id":"614402582","IsPullRequest":false,"CreatedAt":"2020-05-08T06:40:23","Actor":"jfbrennan","Number":"11383","RawContent":null,"Title":"Intuitive access to the component's name property","State":"closed","Body":"### What problem does this feature solve?\r\nLogging, debugging, etc. is made better with the `name` property, but accessing this property is non-intuitive:\r\n```\r\nexport default {\r\n  name: 'my-component',\r\n  mounted() {\r\n    console.log(`${this.$options._componentTag} mounted`)\r\n  }\r\n}\r\n```\r\n\r\nMentally mapping `name` to `$options._componentTag` feels weird. `$options` is fine, but the use of an underscore implies private or not really meant for direct access. Why would the `name` property I define be considered private?\r\n\r\n### What does the proposed API look like?\r\nSome ideas in order of preference:\r\n\r\n1) What I think matches most devs' expectations\r\n```\r\nexport default {\r\n  name: 'my-component',\r\n  mounted() {\r\n    console.log(`${this.$options.name} mounted`)\r\n  }\r\n}\r\n```\r\n\r\n2) Stay close to standards and use the `tagName` property name, which could get it out of `$options` too\r\n```\r\nexport default {\r\n  tagName: 'my-component',\r\n  mounted() {\r\n    console.log(`${this.tagName} mounted`)\r\n  }\r\n}\r\n```\r\n\r\n3) Get rid of the underscore and align these two property names, could also enable getting it out of `$options`\r\n```\r\nexport default {\r\n  componentTag: 'my-component',\r\n  mounted() {\r\n    console.log(`${this.$options.componentTag} mounted`)\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11383","RelatedDescription":"Closed issue \"Intuitive access to the component's name property\" (#11383)"},{"Id":"614238404","IsPullRequest":false,"CreatedAt":"2020-05-07T19:09:36","Actor":"Dev-Oli","Number":"11382","RawContent":null,"Title":"Object.assign is not being polyfilled","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/Dev-Oli/vuetify-ie11-bug](https://github.com/Dev-Oli/vuetify-ie11-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee README.md   Vuetify ticket\r\n\r\n### What is expected?\r\nThe vuetify sample page is shown in IE11 too.\r\n\r\n### What is actually happening?\r\nA blank page is shown.\r\n\r\n---\r\nSee discussion over at https://github.com/vuetifyjs/vuetify/issues/11008\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11382","RelatedDescription":"Closed issue \"Object.assign is not being polyfilled\" (#11382)"},{"Id":"614025414","IsPullRequest":false,"CreatedAt":"2020-05-07T12:41:16","Actor":"dxvladislavvolkov","Number":"11381","RawContent":null,"Title":"Wrong parent of component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/dxvladislavvolkov/vue-issue](https://github.com/dxvladislavvolkov/vue-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone repo\r\n2. Run npm i\r\n3. Run npm run serve\r\n4. Open console. You see the wrong parent element\r\n\r\n### What is expected?\r\nI want to see my-comp2 as the parent of my-comp\r\n\r\n### What is actually happening?\r\nI get #app element as the parent of my-comp\r\n\r\n---\r\nTo reproduce I create two js files and create my components using extend. Then I import my files to index js and create global components using Vue.component. After it, I get the wrong parent of a component when I wrap my-comp\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11381","RelatedDescription":"Closed issue \"Wrong parent of component\" (#11381)"},{"Id":"613986155","IsPullRequest":false,"CreatedAt":"2020-05-07T12:10:14","Actor":"waaronking","Number":"11380","RawContent":null,"Title":"$nextTick timing events introduce breaking changes from 2.5.x to 2.6.x","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue2611-q4ky0?file=/src/components/HelloWorld.vue](https://codesandbox.io/s/vue2611-q4ky0?file=/src/components/HelloWorld.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Follow the codesandbox link\r\n2. Click on the \"Component Vue 2.6.11\" text in the browser view to enable \"edit mode\"\r\n3. Click \"cancel edit\" to exit \"edit mode\"\r\n\r\n### What is expected?\r\nIt is expected that $nextTick will defer the setting of the variable \"editMode\" to false, preventing the parent container click event from executing and re-setting the variable to true. (see line 26)\r\n\r\n### What is actually happening?\r\n$nextTick isn't deferring execution as it did in 2.5.x. The variable \"editMode\" is being set to false and then the parent container click event immediately resets it to true.\r\n\r\n---\r\nHere is the codesandbox link for v2.5.22 to see how it behaved prior to 2.6.x:\r\nhttps://codesandbox.io/s/vue2522-xo346?file=/src/components/HelloWorld.vue\r\n\r\nI ran into this bug while trying to upgrade from 2.5.22 to 2.6.11. It broke our production app everywhere this edit component was used. For this type of edit component, this is a pretty natural design pattern. \r\n\r\nSide note: If this is an intentional breaking change, are there recommended work arounds for these type of components (besides DOM restructuring)?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11380","RelatedDescription":"Closed issue \"$nextTick timing events introduce breaking changes from 2.5.x to 2.6.x\" (#11380)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"622790858","IsPullRequest":false,"CreatedAt":"2020-05-22T08:20:30","Actor":"nicky1038","Number":"3208","RawContent":null,"Title":"Pass components into slots in router config","State":"closed","Body":"### What problem does this feature solve?\r\nAt present users are able to pass props into components inside router config via [props](https://router.vuejs.org/api/#routes) property. But there is also another kind of input information that components accept as well: slots.\r\n\r\nIt would be cool if users could configure passing something into slots in router config. The simpliest and the most intuitive idea is to specify components to be displayed instead of slots.\r\n\r\nThis feature can **incredibly** _reduce code coupling_ and _raise configuration flexibility_.\r\n\r\nTo be honest, I was sure this feature already exists, and was very surprised when I didn't find it in the documentation.\r\n\r\n### What does the proposed API look like?\r\nThis could be done with the new `slots` variable that does the thing, for example:\r\n\r\n```javascript\r\n{\r\n  path: '/foo',\r\n  component: Foo,\r\n  slots: { // object of slot names to slot configs\r\n    default: { // default slot of Foo\r\n      component: Bar, // a component to display instead of the default slot of Foo\r\n      props: { // props to pass into Bar component\r\n        a: 1,\r\n        b: 'hey'\r\n      }\r\n      // maybe allow passing slots into Bar component via nested 'slots' property here?\r\n    },\r\n    customSlotName: Baz // only component can be specified is no props are needed to be passed\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3208","RelatedDescription":"Closed issue \"Pass components into slots in router config\" (#3208)"},{"Id":"622211116","IsPullRequest":false,"CreatedAt":"2020-05-21T06:39:20","Actor":"phpexpert00784","Number":"3207","RawContent":null,"Title":"Vue Router not works on Firefox, Works perfect on Chrome and Safari","State":"closed","Body":"### Version\r\n3.2.0\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI just setup the Laravel 7 with Latest Vuejs. I Just setup simple sampleComponent.Vue\r\n\r\n### What is expected?\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath : '/example',\r\n\t\tcomponent : require('./components/ExampleComponent.vue').default\r\n\t}\r\n];\r\n\r\nconst router = new VueRouter({\r\n\troutes\r\n});\r\n\r\nconst app = new Vue({\r\n    el: '#app',\r\n    router : router\r\n});\r\n\r\nThat is my code. What is wrong in that\r\n\r\n### What is actually happening?\r\n[Vue warn]: Unknown custom element: <router-link> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\n(found in <Root>) \r\n\r\n\r\n[Vue warn]: Unknown custom element: <router-view> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\n(found in <Root>)\r\n\r\nIn firefox, It will me that error.\r\n\r\n---\r\nPlease ignore mimimal reprodoction link\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3207","RelatedDescription":"Closed issue \"Vue Router not works on Firefox, Works perfect on Chrome and Safari\" (#3207)"},{"Id":"621403593","IsPullRequest":true,"CreatedAt":"2020-05-20T11:39:56","Actor":"Steven-Chang1114","Number":"3205","RawContent":null,"Title":"docs: typo in node.js example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nIt appears in https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations as the index.html is mistyped as index.htm in the Native Node.js section\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/3205","RelatedDescription":"Closed or merged PR \"docs: typo in node.js example\" (#3205)"},{"Id":"621631811","IsPullRequest":true,"CreatedAt":"2020-05-20T10:32:36","Actor":"gtsiolis","Number":"3206","RawContent":null,"Title":"docs: add installation instructions using Vue CLI","State":"closed","Body":"Minor reference on how to install using Vue CLI. Feel free to close if you think this is not needed.","Url":"https://github.com/vuejs/vue-router/pull/3206","RelatedDescription":"Closed or merged PR \"docs: add installation instructions using Vue CLI\" (#3206)"},{"Id":"620985539","IsPullRequest":true,"CreatedAt":"2020-05-19T13:44:26","Actor":"lmichelin","Number":"3204","RawContent":null,"Title":"fix: Missing renaming","State":"closed","Body":"This PR fixes a missing renaming in #3047 \r\n\r\nSee this comment for more details: https://github.com/vuejs/vue-router/pull/3047#pullrequestreview-414419587","Url":"https://github.com/vuejs/vue-router/pull/3204","RelatedDescription":"Closed or merged PR \"fix: Missing renaming\" (#3204)"},{"Id":"620010920","IsPullRequest":false,"CreatedAt":"2020-05-18T08:27:42","Actor":"changshunxu520","Number":"3203","RawContent":null,"Title":"In a nested route","State":"closed","Body":"How to refresh only child routes without refreshing parent routes。\r\nlike this \r\n```html\r\n<div id=\"app\">\r\n  <router-view></router-view>\r\n  <div id=\"second\">\r\n       <router-view></router-view>\r\n </div>\r\n  <div id=\"other\">\r\n       <router-view></router-view>\r\n </div>\r\n</div>\r\n```\r\nwhen i use this code in div(second)\r\n```javascript\r\n this.$router.push('aaaaa')\r\n```\r\nI just want to refresh div(second) ，At the same time do not want to refresh its parent（app）\r\n","Url":"https://github.com/vuejs/vue-router/issues/3203","RelatedDescription":"Closed issue \"In a nested route\" (#3203)"},{"Id":"619879536","IsPullRequest":false,"CreatedAt":"2020-05-18T03:22:15","Actor":"qzd1989","Number":"3202","RawContent":null,"Title":"部分网址格式在使用router.push跳转后,网址格式错误","State":"closed","Body":"这里是我的实际网址\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101#/free\r\n进行跳转到result并且带上参数 from=xxx\r\n实际跳转的地址为(有两个?号了)\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101#/result?from=xxx\r\n而不是期望的\r\nhttp://www.xxx.com/static/vip/local/index.html?lang=zh&v=101&from=xxx#/result\r\n\r\n不知道这是不是BUG?","Url":"https://github.com/vuejs/vue-router/issues/3202","RelatedDescription":"Closed issue \"部分网址格式在使用router.push跳转后,网址格式错误\" (#3202)"},{"Id":"618571944","IsPullRequest":true,"CreatedAt":"2020-05-16T09:04:27","Actor":"CoolCyberBrain","Number":"3200","RawContent":null,"Title":"refactor(scroll-behavior): clean up scroll-behavior tests","State":"closed","Body":"Cleaned up scroll-behavior tests while working on #3199 \r\n\r\n- `history.scrollRestoration = 'manual'` is no longer needed with #1814 \r\n- replaced some `execute` functions that can be replaced with `click`","Url":"https://github.com/vuejs/vue-router/pull/3200","RelatedDescription":"Closed or merged PR \"refactor(scroll-behavior): clean up scroll-behavior tests\" (#3200)"},{"Id":"618700934","IsPullRequest":false,"CreatedAt":"2020-05-15T05:06:38","Actor":"trainiac","Number":"3201","RawContent":null,"Title":"onError does not capture errors thrown in redirect callback","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/trainiac/pen/rNOZvRO?editors=1112](https://codepen.io/trainiac/pen/rNOZvRO?editors=1112)\r\n\r\n### Steps to reproduce\r\n1. create route config like\r\n\r\n```ts  \r\n{\r\n    path: '/oldpath/:part',\r\n    redirect: (to: Route) => {\r\n      if(to.ooopsmistake.part) {\r\n        return `/newpath/${to.params.part}`\r\n      }\r\n      return '/newpath/'\r\n    },\r\n  }\r\n```\r\n\r\n### What is expected?\r\nWhen router.push('/oldpath/test'). an error is throw becuase there is no oopsmistake property on the to route.  This should be caught in router.onError.\r\n\r\n### What is actually happening?\r\nIt's only caught in router.push('/oldpath/test').catch(err is here)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3201","RelatedDescription":"Open issue \"onError does not capture errors thrown in redirect callback\" (#3201)"},{"Id":"617705668","IsPullRequest":true,"CreatedAt":"2020-05-13T19:40:59","Actor":"CoolCyberBrain","Number":"3199","RawContent":null,"Title":"Add handleScroll on initial history.transitionTo (fix #3196)","State":"open","Body":"fix #3196 by adding handleScroll to the callback of the first call to history.transitionTo","Url":"https://github.com/vuejs/vue-router/pull/3199","RelatedDescription":"Open PR \"Add handleScroll on initial history.transitionTo (fix #3196)\" (#3199)"},{"Id":"617230590","IsPullRequest":false,"CreatedAt":"2020-05-13T08:10:21","Actor":"lang1427","Number":"3198","RawContent":null,"Title":"Change query, the address bar will not change","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://github.com/lang1427/vue-typescript-music/blob/master/src/views/test.vue](https://github.com/lang1427/vue-typescript-music/blob/master/src/views/test.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen there is query in the route and the attribute is name value XXX, you want to change the value of name,\r\n\r\nThe following code:\r\n```\r\nthis.$route.query.name = '更新数据'\r\n```\r\n\r\n### What is expected?\r\nChange the value of name in the address bar while changing the value of name\r\n\r\n### What is actually happening?\r\nThe name value has changed, but the name value in the address bar has not changed. What can I do?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3198","RelatedDescription":"Closed issue \"Change query, the address bar will not change\" (#3198)"},{"Id":"617221082","IsPullRequest":false,"CreatedAt":"2020-05-13T07:42:41","Actor":"lang1427","Number":"3197","RawContent":null,"Title":"Change query, the address bar will not change","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nWhen there is query in the route and the attribute is name value XXX, you want to change the value of name,\r\n\r\nThe following code:\r\n```\r\nthis.$route.query.name = '更新数据'\r\n```\r\nThe name value has changed, but the name value in the address bar has not changed. What can I do?\r\n","Url":"https://github.com/vuejs/vue-router/issues/3197","RelatedDescription":"Closed issue \"Change query, the address bar will not change\" (#3197)"},{"Id":"617100050","IsPullRequest":false,"CreatedAt":"2020-05-13T02:53:36","Actor":"CoolCyberBrain","Number":"3196","RawContent":null,"Title":"scrollBehavior does not run on load","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-pk4q2](https://codesandbox.io/s/vue-routing-example-pk4q2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nLoad page\r\n\r\n### What is expected?\r\nscrollBehavior always return `{ x: 0, y: 200 }` so the scroll position should always be 200 pixels from the top\r\n\r\n### What is actually happening?\r\nscrollBehavior always return `{ x: 0, y: 200 }` but scroll position y is always 0 when first loaded\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3196","RelatedDescription":"Open issue \"scrollBehavior does not run on load\" (#3196)"},{"Id":"616072738","IsPullRequest":false,"CreatedAt":"2020-05-11T18:00:03","Actor":"davidmoser","Number":"3195","RawContent":null,"Title":"Nested routes with keep-alive creates child on hidden branch","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/7v8hje5d/8/](https://jsfiddle.net/7v8hje5d/8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Click on link /A/1\r\n- Click on link /B/1\r\n\r\n### What is expected?\r\n- First click creates child with parent A\r\n- Second click creates child with parent B\r\n\r\n### What is actually happening?\r\n- First click works as expected\r\n- Second click creates two children, one with parent A and one with parent B\r\n\r\n---\r\nI used a key in the router view to make sure children with the same parent get cached independently:\r\n:key=\"$route.fullPath\"\r\n\r\nThe setup works correctly if the router views have no keys and different child component types.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3195","RelatedDescription":"Open issue \"Nested routes with keep-alive creates child on hidden branch\" (#3195)"},{"Id":"612474690","IsPullRequest":true,"CreatedAt":"2020-05-11T07:34:43","Actor":"mhiguera","Number":"3189","RawContent":null,"Title":"feat(matcher): Adds matchAll to Matcher","State":"closed","Body":"There are cases in which different routes can be matched in runtime (eg: dynamic importing a module within a component). Adding a `matchAll` method helps developers create a fallback strategy for those special cases.","Url":"https://github.com/vuejs/vue-router/pull/3189","RelatedDescription":"Closed or merged PR \"feat(matcher): Adds matchAll to Matcher\" (#3189)"},{"Id":"615563881","IsPullRequest":false,"CreatedAt":"2020-05-11T06:41:54","Actor":"showtan001","Number":"3194","RawContent":null,"Title":"在百度APP中，router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://gitee.com/showtan/h5.git](https://gitee.com/showtan/h5.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在百度APP中，使用router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面，效果是直接退出程序（a标签可以返回上一页面）。但是我把router-link渲染成a标签也不能返回，然后我监听“popstate”，使用$router.back()，在百度浏览器中可以返回，然而在百度APP还是不能返回，它直接退出H5了。\r\n\r\n### What is expected?\r\n在进入下一页后点击浏览器自带返回或者Android物理返回或者侧滑返回能返回上一页面。\r\n\r\n### What is actually happening?\r\n直接退出程序。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3194","RelatedDescription":"Closed issue \"在百度APP中，router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面\" (#3194)"},{"Id":"615555893","IsPullRequest":false,"CreatedAt":"2020-05-11T03:10:21","Actor":"showtan001","Number":"3193","RawContent":null,"Title":"router-link在百度APP中点击返回不能从下一页面返回上一页面","State":"closed","Body":"使用router-link在进入下一页面后点击浏览器自带返回或者Android物理返回都不能返回上一页面，效果是直接退出程序（a标签可以返回上一页面）。但是我把router-link渲染成a标签也不能返回，然后我监听“popstate”，使用$router.back()，在百度浏览器中可以返回，然而在百度APP还是不能返回，它直接退出H5了。你们可以看看是怎么回事吗？蟹蟹！","Url":"https://github.com/vuejs/vue-router/issues/3193","RelatedDescription":"Closed issue \"router-link在百度APP中点击返回不能从下一页面返回上一页面\" (#3193)"},{"Id":"614619846","IsPullRequest":false,"CreatedAt":"2020-05-08T10:12:10","Actor":"rightaway","Number":"3192","RawContent":null,"Title":"Allow null to be passed to router-link","State":"closed","Body":"### What problem does this feature solve?\r\nIf you want an `<a>` link not to behave as a link in html, you can remove the value of the `href` attribute. I tried to get the same behavior by setting `<router-link :to=\"null\">` but this gives an error that the `to` prop must be a string or an object. Null should be allowed as well, which would remove any `href` that might be present on the target element. This way we can have a generated link behave as a `<a>` with no `href`.\r\n\r\n### What does the proposed API look like?\r\n`<router-link :to=\"null\">`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3192","RelatedDescription":"Closed issue \"Allow null to be passed to router-link\" (#3192)"},{"Id":"614126070","IsPullRequest":false,"CreatedAt":"2020-05-07T15:23:11","Actor":"wojtiku","Number":"3191","RawContent":null,"Title":"Navigation guards don't work on nested routes","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/upbeat-panini-cy8r4](https://codesandbox.io/s/upbeat-panini-cy8r4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to the example code and notice how the same component is attached both as a root route and a nested route with a different prop: https://codesandbox.io/s/upbeat-panini-cy8r4?file=/src/router.js\r\n2. Switch between menu items in the app, especially \"nested\" and \"nested as root\".\r\n\r\n### What is expected?\r\nBrowser confirmation dialog is shown both when trying to navigate out of 'nested' and out of 'nested as root'.\r\n\r\n### What is actually happening?\r\nBrowser confirmation dialog is shown only when trying to navigate out of 'nested as root'. It doesn't work for 'nested'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3191","RelatedDescription":"Closed issue \"Navigation guards don't work on nested routes\" (#3191)"},{"Id":"613435016","IsPullRequest":false,"CreatedAt":"2020-05-06T16:15:40","Actor":"hooray","Number":"3190","RawContent":null,"Title":"在全局前置守卫中如果手动跳转到一个不同的地址，会导致replace跳转方式失效","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\nnone\r\n\r\n### Steps to reproduce\r\n假设有ABC三个页面，先从A页面通过push方式跳到B页面，然后B页面再通过replace跳转到C页面，这时候前置守卫中做了一些处理，通过 `next({ path: 'D页面' })` 跳转到了D页面，这时候在D页面通过 `history.go(-1)` 会回到B页面\r\n\r\n### What is expected?\r\n希望是能回到A页面\r\n\r\n### What is actually happening?\r\n回到了B页面\r\n\r\n---\r\n虽然我可以通过 `next({ path: 'D页面', replace: true })` 的方式实现，但我更希望 `next()` 方法能自动根据当前导航的跳转方式自动区分是 push 还是 replace\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3190","RelatedDescription":"Closed issue \"在全局前置守卫中如果手动跳转到一个不同的地址，会导致replace跳转方式失效\" (#3190)"},{"Id":"611815920","IsPullRequest":true,"CreatedAt":"2020-05-04T12:02:59","Actor":"apwidejulien","Number":"3188","RawContent":null,"Title":"fix(import): avoid installing on global Vue if present on window","State":"closed","Body":"Proposal to avoid installing vue-router on global window.Vue.\r\n\r\nVueRouter should probably not make the assumption that if Vue is globally available (window), it should be installed on it. In some contexts, it's undesirable.\r\n\r\nFor example, as a developer of plugins for a given product, I want to isolate as much as possible my plugin from the other plugins available at runtime. That's why I ship my product embedding my own Vue & VueRouter instance (not provided by the hosting product) and I don't expose it globally. However, I have no guarantee that other plugins will take the same precaution... In that case, VueRouter will install itself in both and will result in undesired errors/warnings (required prop \"to\" not defined on router-link component for example).\r\n\r\nVue proposes to install plugin through Vue.use, so, we should let the VueRouter consumer deciding on which Vue instance he wants to install it, no ?\r\n","Url":"https://github.com/vuejs/vue-router/pull/3188","RelatedDescription":"Closed or merged PR \"fix(import): avoid installing on global Vue if present on window\" (#3188)"},{"Id":"611482998","IsPullRequest":false,"CreatedAt":"2020-05-03T19:57:52","Actor":"atmatthewat","Number":"3187","RawContent":null,"Title":"Child relative links lose parameter when child path is empty","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eu7vbq9h/2/](https://jsfiddle.net/eu7vbq9h/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee jsfiddle https://jsfiddle.net/eu7vbq9h/2/\r\n<router-link to=\"posts\"> inside /user/foo/profile (UserProfile component child path 'profile') links to /user/foo/posts, but\r\n<router-link to=\"posts\"> inside /user/foo (UserHome component child path '') links to /user/posts instead of /user/foo/posts\r\n\r\n### What is expected?\r\nChild path is rendered properly with parameter even if the child path is ''\r\n\r\n### What is actually happening?\r\nChild path is rendered missing parameter if the child path is ''\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3187","RelatedDescription":"Closed issue \"Child relative links lose parameter when child path is empty\" (#3187)"},{"Id":"611378498","IsPullRequest":false,"CreatedAt":"2020-05-03T12:13:31","Actor":"NikolaKG80","Number":"3186","RawContent":null,"Title":"Add mixin option to Vue Router","State":"closed","Body":"### What problem does this feature solve?\r\nI need to be able to add a mixin only for components which are directly instantiated inside the <vue-router>, not their children.\r\n\r\nAt this time, it seems to me that I have to go inside each of those components and add a mixin manually, which I would like to avoid.\r\n\r\nWhat I've done is to create a global mixin with a beforeCreate lifecycle event, but it's triggered for every component that's loaded, which I also would like to avoid.\r\n\r\n### What does the proposed API look like?\r\nimport mixin from 'mixin';\r\n\r\ninterface RouteConfig = {\r\n ...\r\n  mixins?: any // Mixin to be applied when instantiating a component\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3186","RelatedDescription":"Closed issue \"Add mixin option to Vue Router\" (#3186)"},{"Id":"610379213","IsPullRequest":false,"CreatedAt":"2020-04-30T20:54:38","Actor":"gimyboya","Number":"3185","RawContent":null,"Title":"Async components have meta as undefined","State":"closed","Body":"not sure if i am doing anything wrong but the `meta` property in the async routes is undefined when used in `beforeEach` or `beforeResolve`\r\n\r\n`router.ts`\r\n```ts\r\n{\r\n    path: '/auth',\r\n    name: 'auth',\r\n    meta: { layout: 'fullwidth', requireAuth: false },\r\n    component: () => import('@/views/Auth.vue'),\r\n    props: (route) => ({ query: route.query.c })\r\n  }\r\n```\r\n\r\n`guards.ts`\r\n```ts\r\nexport const authGuard = (to: Route, from: Route, next: any) => {\r\n  console.log(to.meta.requiresAuth); // undefined\r\n}\r\n```\r\n`main.ts`\r\n```ts\r\nrouter.beforeResolve(authGuard);\r\n\r\nnew Vue({\r\n  router,\r\n  render: (h: Function) => h(App)\r\n}).$mount('#app');\r\n```\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3185","RelatedDescription":"Closed issue \"Async components have meta as undefined\" (#3185)"},{"Id":"609584423","IsPullRequest":true,"CreatedAt":"2020-04-30T05:10:29","Actor":"mdwheele","Number":"3184","RawContent":null,"Title":"feat(link): add router-link-inactive","State":"open","Body":"Resolves #2648\r\n\r\nHello!\r\n\r\n💁 This PR adds an `inactive-class` prop to `<router-link>`, which will add a class to all inactive links (by default, uses `.router-link-inactive`)\r\n\r\nExample:\r\n\r\n```vue\r\n<router-link :to=\"link\" class=\"all links\" active-class=\"active only\" inactive-class=\"inactive only\">\r\n  Click me\r\n</router-link>\r\n```\r\n\r\nThis feature would be _killer_ for anybody using [Tailwind CSS](https://tailwindcss.com).\r\n\r\nPlease let me know if you would like me to add any additional e2e tests covering this. I don't know if there are any special behaviours around exact-match links or things like that we should cover.","Url":"https://github.com/vuejs/vue-router/pull/3184","RelatedDescription":"Open PR \"feat(link): add router-link-inactive\" (#3184)"},{"Id":"609357453","IsPullRequest":false,"CreatedAt":"2020-04-29T21:01:46","Actor":"stevendesu","Number":"3183","RawContent":null,"Title":"Update Route meta type to a user-extensible empty interfaces","State":"open","Body":"### What problem does this feature solve?\r\nCurrently a route's meta field is listed as \"any\". This makes it impossible for users to define the structure of their own metadata. As an example, I wish to use the \"meta\" property for middleware. I've created a Middleware type and would like an interface like the following:\r\n\r\n```\r\ndeclare module \"vue-router\" {\r\n    interface Route {\r\n        meta: {\r\n            middleware?: Middleware[]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf I try to define it this way, I get an error saying that all declarations of \"meta\" must have identical modifiers, and that \"meta\" was already defined in router.d.ts... However if I DON'T define it this way then I lose the ability to statically type check this property and catch developers who accidentally pass an incorrect type (e.g. passing a string containing the middleware's name, instead of the middleware object itself)\r\n\r\nNow there's admittedly a limitation of this. Currently, it's possible to pass a non-object for the meta of a route. If you want to stick just a number or a string in there, it's completely valid. Making this a user-extensible interface would eliminate that use case (and therefore be a breaking API change) -- but I find it highly suspect that anyone is using the meta field in that way in a production app of any meaningful size. Without key-value pairs, storing only a single string into the \"meta\" field doesn't feel very useful.\r\n\r\n### What does the proposed API look like?\r\n```\r\nexport interface Route {\r\n  path: string\r\n  name?: string | null\r\n  hash: string\r\n  query: Dictionary<string | (string | null)[]>\r\n  params: Dictionary<string>\r\n  fullPath: string\r\n  matched: RouteRecord[]\r\n  redirectedFrom?: string\r\n  meta?: {} // <-- replaced \"any\" with \"{}\"\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3183","RelatedDescription":"Open issue \"Update Route meta type to a user-extensible empty interfaces\" (#3183)"},{"Id":"608925473","IsPullRequest":false,"CreatedAt":"2020-04-29T10:11:04","Actor":"DarkLite1","Number":"3182","RawContent":null,"Title":"Question: navigate back the previous page when logon succeeded","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/posva/rfcs/blob/router/navigation-failures/active-rfcs/0000-router-navigation-failures.md](https://github.com/posva/rfcs/blob/router/navigation-failures/active-rfcs/0000-router-navigation-failures.md)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI've implemented the `beforeEach` guard from the example:\r\n\r\n```javascript\r\nrouter.beforeEach((to, from, next) => {\r\n  // redirect to the login page if the target location requires authentication\r\n  if (to.meta.requiresAuth && !isAuthenticated) next('/login')\r\n  else next()\r\n})\r\n```\r\n\r\nThis works perfectly fine and redirects the user to the login page when he is not authenticated. When I then try to implement the navigation back to the original requested page as in the example it fails:\r\n\r\n```javascript\r\n// user is not authenticated\r\nawait router.push('/profile/dashboard')\r\n\r\n// `redirectedFrom` is a RouteLocationNormalized, like `currentRoute` but we are omitting\r\n// most properties to make the example readable\r\nrouter.currentRoute // { path: '/login', redirectedFrom: { path: '/profile/dashboard' } }\r\n```\r\nThank you for shining a little bit of light on this subject. Sorry if this is the wrong place to ask but the official example doesn't show something like this.\r\n\r\n### What is expected?\r\nAfter  successful logon the user should be navigated to the page he requested in the first place.\r\n\r\n### What is actually happening?\r\nDon't understand how to get that functionality in the app. \r\n\r\n---\r\nThank you for your help.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3182","RelatedDescription":"Closed issue \"Question: navigate back the previous page when logon succeeded\" (#3182)"},{"Id":"607258791","IsPullRequest":false,"CreatedAt":"2020-04-27T09:00:49","Actor":"muzi131313","Number":"3181","RawContent":null,"Title":"two nested router-view exist memory leak","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/muzi131313/vue-drag-slider/tree/master/example](https://github.com/muzi131313/vue-drag-slider/tree/master/example)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- 1.run the project\r\n```\r\ngit clone https://github.com/muzi131313/vue-drag-slider/tree/master/example\r\nnpm install\r\nnpm run serve\r\n```\r\n\r\n- 2.open chrome browser, input: http://localhost:8080\r\n- 2.open chrome devtool, and select memory\r\n- 3.more tools, select **Performance monitor**, notice **DOM Nodes** and **JS event listeners**\r\n- 4.click button 【go images】, then entry images page\r\n- 5.click button 【back】, back to the home page\r\n- 6.at 【memory】 tab, click 【collect garbage】\r\n- 7.then you will see 【JS event listeners】number was down, but 【DOM Nodes】and 【JS heap size】stay high\r\n- 8.repeat 4~7\r\n\r\n\r\n\r\n\r\n### What is expected?\r\n【DOM Nodes】and 【JS heap size】was down\r\n\r\n### What is actually happening?\r\n【DOM Nodes】and 【JS heap size】stay high\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3181","RelatedDescription":"Closed issue \"two nested router-view exist memory leak\" (#3181)"},{"Id":"606088604","IsPullRequest":false,"CreatedAt":"2020-04-24T07:00:15","Actor":"YueweiGuo","Number":"3180","RawContent":null,"Title":"vue router 不会提供清空历史记录的api么？","State":"closed","Body":"vue router 不会提供清空历史记录的api么？百度了一下，很多人有这个需求啊","Url":"https://github.com/vuejs/vue-router/issues/3180","RelatedDescription":"Closed issue \"vue router 不会提供清空历史记录的api么？\" (#3180)"},{"Id":"604276535","IsPullRequest":false,"CreatedAt":"2020-04-21T21:23:06","Actor":"ajmas","Number":"3179","RawContent":null,"Title":"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated","State":"closed","Body":"### What problem does this feature solve?\r\nSuggestion to provide an example and counter example on how to navigate to current page with updated query parameters. To be added  https://router.vuejs.org/guide/essentials/navigation.html\r\n\r\nThis is partly to counter outdated examples I have found on the internet and provide a 'supported' approach and also some knowledge that is currently only in the issues tracker.\r\n\r\nInitially I was dealing with code that looks like:\r\n\r\n```\r\n        const query = this.$route.query;\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\nand resolved with:\r\n\r\n```\r\n        const query = Object.assign({}, this.$route.query);\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nThis is a documentation update suggestion. I can make it if the idea is approved.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3179","RelatedDescription":"Closed issue \"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated\" (#3179)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"623880132","IsPullRequest":false,"CreatedAt":"2020-05-24T14:52:36","Actor":"evgeniyPP","Number":"1762","RawContent":null,"Title":"Auto-creating getters & actions","State":"open","Body":"### What problem does this feature solve?\r\nA popular practice is to create getters for each value in the state, and actions for each mutation. This eliminates the confusion in the components. Now you can use only mapGetters for properties, and mapActions & dispatch for methods.\r\n\r\nHowever, this makes the store very verbose. You need to create useless getters and actions that simply return a value from a state/commit a mutation.\r\n\r\nIt would be convenient if Vuex, in case it does not find a suitable getter, looked for a value in the state and returned it. Or, if it doesn’t find action with the given name, he finds a mutation with that name and commits it.\r\n\r\nIn this case, it would be possible to use only mapGetters and mapActions in the components and at the same time not to write extra code in the store.\r\n\r\nI know that this is probably not solving a problem that cannot be easily dealt with using existing APIs. But IMHO that would be a great improvement to the user experience, and I wanted to share this idea with the development team.\r\n\r\n### What does the proposed API look like?\r\n<em>store.js</em>\r\n```js\r\nexport default new Vuex.Store({\r\n    state: {\r\n        count: 0\r\n    },\r\n    mutations: {\r\n        increment (state) {\r\n            state.count;\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n<em>component.vue</em>\r\n```html\r\n<template>\r\n  <div>\r\n    <p>{{ count }}</p>\r\n    <button @click=\"increment\"> </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\n\r\nexport default ({\r\n    computed: mapGetters(['count']),\r\n    methods: mapActions(['increment'])\r\n});\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1762","RelatedDescription":"Open issue \"Auto-creating getters & actions\" (#1762)"},{"Id":"623548186","IsPullRequest":true,"CreatedAt":"2020-05-23T01:55:45","Actor":"progresivoJS","Number":"1761","RawContent":null,"Title":"docs: Add a translation of an example in actions.md of guide docs","State":"open","Body":"This PR updates KR translation for actions.md in guide docs.","Url":"https://github.com/vuejs/vuex/pull/1761","RelatedDescription":"Open PR \"docs: Add a translation of an example in actions.md of guide docs\" (#1761)"},{"Id":"622331507","IsPullRequest":false,"CreatedAt":"2020-05-21T10:40:44","Actor":"yeyaolong","Number":"1760","RawContent":null,"Title":"When the ref variable changes, the vuex variable is changed synchronously","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm sorry to fill a random link in `Link to minimal reproduction` , because I can't access to these pages.\r\n\r\n\r\n\r\n### issue description\r\n everything is normal until I call `updateVuex()` 。\r\n\r\nafter calling `updateVuex()` , then I call the `add()` to change variable `count`, the computed variable `computedByVuex` is changed synchronously.\r\n\r\n```\r\n// /store/indexjs\r\nimport Vuex from 'vuex'\r\n\r\nexport default Vuex.createStore({\r\n  state: {\r\n    test: {\r\n      a: 1\r\n    }\r\n  },\r\n  mutations: {\r\n    setTestA(state, value) {\r\n      console.log('mutations setTestA is called')\r\n      state.test.a = value;\r\n    }\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n});\r\n```\r\n```\r\n// test.vue\r\n<template>\r\n    <div class=\"test-vuex\">\r\n        <h1>test page: {{count}}</h1>\r\n        <h1>computedByVuex: {{computedByVuex}}</h1>\r\n        <button @click=\"add\">add</button>\r\n        <button @click=\"updateVuex\">updateVuex</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watchEffect, getCurrentInstance, computed } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const count = ref(0);\r\n        const add = () => {\r\n            count.value  \r\n        }\r\n        \r\n        const { ctx } = getCurrentInstance();  // 获取当前实例\r\n        const computedByVuex = computed(() => ctx.$store.state.test.a);\r\n\r\n        watchEffect(() => {\r\n            console.log('computedByVuex',  ctx.$store.state.test.a);\r\n        }, {\r\n            flush: 'pre'\r\n        })\r\n\r\n        const updateVuex = () => {\r\n            ctx.$store.commit('setTestA', count);\r\n        }\r\n\r\n        return {\r\n            count,\r\n            computedByVuex,\r\n            add,\r\n            updateVuex\r\n        }\r\n    }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nwhen `add` function is called the vuex variable won't changed \r\n\r\n### What is actually happening?\r\nWhen the ref variable changes, the vuex variable is changed synchronously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1760","RelatedDescription":"Closed issue \"When the ref variable changes, the vuex variable is changed synchronously\" (#1760)"},{"Id":"622319316","IsPullRequest":false,"CreatedAt":"2020-05-21T07:51:25","Actor":"yeyaolong","Number":"1759","RawContent":null,"Title":"When the ref variable changes, the vuex variable is changed synchronously","State":"closed","Body":"\r\nmy project is created by @vue/cli 4.3.1\r\n\r\n## description\r\nbefore I call `updateVuex` function, everything is normal。\r\n\r\nbut after  calling `updateVuex`function, then  I call the `add` function to change `count` variable, the vuex variable is changed synchronously.\r\n\r\n```\r\n\r\n// /store/indexjs\r\nimport Vuex from 'vuex'\r\n\r\nexport default Vuex.createStore({\r\n  state: {\r\n    test: {\r\n      a: 1\r\n    }\r\n  },\r\n  mutations: {\r\n    setTestA(state, value) {\r\n      console.log('mutations setTestA is called')\r\n      state.test.a = value;\r\n    }\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n});\r\n```\r\n\r\n```\r\n// test.vue\r\n<template>\r\n    <div class=\"test-vuex\">\r\n        <h1>test page: {{count}}</h1>\r\n        <h1>computedByVuex: {{computedByVuex}}</h1>\r\n        <button @click=\"add\">add</button>\r\n        <button @click=\"updateVuex\">updateVuex</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watchEffect, getCurrentInstance, computed } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const count = ref(0);\r\n        const add = () => {\r\n            count.value++\r\n        }\r\n        \r\n        const { ctx } = getCurrentInstance();  // 获取当前实例\r\n        const computedByVuex = computed(() => ctx.$store.state.test.a);\r\n\r\n        watchEffect(() => {\r\n            console.log('computedByVuex',  ctx.$store.state.test.a);\r\n        }, {\r\n            flush: 'pre'\r\n        })\r\n\r\n        const updateVuex = () => {\r\n            ctx.$store.commit('setTestA', count);\r\n        }\r\n\r\n        return {\r\n            count,\r\n            computedByVuex,\r\n            add,\r\n            updateVuex\r\n        }\r\n    }\r\n}\r\n</script>\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1759","RelatedDescription":"Closed issue \"When the ref variable changes, the vuex variable is changed synchronously\" (#1759)"},{"Id":"621504825","IsPullRequest":false,"CreatedAt":"2020-05-21T04:35:50","Actor":"zzcong","Number":"1758","RawContent":null,"Title":"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods","State":"closed","Body":"### What problem does this feature solve?\r\nIn strict mode, when you make a deep copy of an object inside 'state', the 'dep' in the object will be copied as well, and an error will be reported: 'do not mutate vuex store state outside mutation handlers.'\r\n\r\n### What does the proposed API look like?\r\nfunction deepCopy (name) { return JSON.parse(JSON.stringify(state[name])) }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1758","RelatedDescription":"Closed issue \"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods\" (#1758)"},{"Id":"621451926","IsPullRequest":false,"CreatedAt":"2020-05-20T12:40:03","Actor":"karel-3d","Number":"1756","RawContent":null,"Title":"Vuex getters are not type checked in typescript","State":"closed","Body":"### What problem does this feature solve?\r\nThis feature will correctly check types of store getters.\r\n\r\nCurrently, getters have type `getters: any`.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nvuex getters are defined (maybe) correctly in https://github.com/ClickerMonkey/vuex-typescript-interface/blob/master/index.d.ts\r\n\r\n```ts\r\nexport type GetterKeys<T> = {\r\n  [P in keyof T]-?: IfEquals<{ [Q in P]: T[P] }, { -readonly [Q in P]: T[P] }, never, P>\r\n}[keyof T];\r\n\r\n\r\nexport type GetterInputFor<T> = {\r\n  [K in GetterKeys<T>]: T[K];\r\n};\r\n\r\nexport type MergedGettersFor<T> = {\r\n  [M in MergedModuleKeys<T>]: \r\n    T extends { modules: { [P in M]: infer E } } \r\n      ? GettersFor<E> \r\n      : never;\r\n};\r\n\r\nexport type GettersFor<T> = \r\n  GetterInputFor<T> & \r\n  Flatten<MergedGettersFor<T>>;\r\n```\r\n\r\n~I am not sure if this is actually correct. I can try it and make a PR if there is interest.~\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1756","RelatedDescription":"Closed issue \"Vuex getters are not type checked in typescript\" (#1756)"},{"Id":"621502991","IsPullRequest":false,"CreatedAt":"2020-05-20T06:44:13","Actor":"zzcong","Number":"1757","RawContent":null,"Title":"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods","State":"closed","Body":"In strict mode, when you make a deep copy of an object inside 'state', the 'dep' in the object will be copied as well, and an error will be reported: 'do not mutate vuex store state outside mutation handlers.'","Url":"https://github.com/vuejs/vuex/issues/1757","RelatedDescription":"Closed issue \"When using strict mode, you want to provide a deep copy of 'state' and 'getter' methods\" (#1757)"},{"Id":"621411568","IsPullRequest":false,"CreatedAt":"2020-05-20T02:28:56","Actor":"ssly","Number":"1755","RawContent":null,"Title":"Vuex.createStore throw TS2339 in production with vue-cli and vue add vue-next","State":"closed","Body":"1. vue create vue-template(typescript with no class-style)\r\n2. vue add vue-next\r\n3. npm run serve\r\n\r\nsome errors:\r\n1. TS2339: Property 'createStore' does not exist on type \r\n2. main.ts createApp(App) throw TS2345: Argument of type 'typeof import","Url":"https://github.com/vuejs/vuex/issues/1755","RelatedDescription":"Closed issue \"Vuex.createStore throw TS2339 in production with vue-cli and vue add vue-next\" (#1755)"},{"Id":"620153634","IsPullRequest":false,"CreatedAt":"2020-05-18T13:29:44","Actor":"Ewelina436","Number":"1754","RawContent":null,"Title":"lazy load doesn't for registerModule ","State":"closed","Body":"### Version\r\n3.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-load-module-d2tss?file=/src/main.js](https://codesandbox.io/s/vuex-load-module-d2tss?file=/src/main.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. click button 'check' - open Console\r\n\r\n### What is expected?\r\n\r\naccess to the newly registered module\r\n\r\n### What is actually happening?\r\nI get the answer 'undefined'\r\n\r\n---\r\n\r\nWhen I try to import statically everything works ... However, it is very important for me to be lazy. Please help ...\r\n\r\nIn Vue.js devtools  - I see information that the module has been registered but is empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1754","RelatedDescription":"Closed issue \"lazy load doesn't for registerModule \" (#1754)"},{"Id":"620139044","IsPullRequest":false,"CreatedAt":"2020-05-18T11:40:28","Actor":"Ewelina436","Number":"1753","RawContent":null,"Title":"Lazy load  doesn't  work for registerModule","State":"closed","Body":"\r\nI try lazy load module vuex by registerModule, however, when it gets called \"undefined\". \r\nI found an example that had to work here, but don't work [here at the end](https://itnext.io/vue-js-app-performance-optimization-part-3-lazy-loading-vuex-modules-ed67cf555976) - \r\nMy code:\r\n```\r\ncreated(){\r\n   const state = () => import('./state');\r\n   this.$store.registerModule(\"testowa\", state);\r\n}\r\n```\r\n\r\nWhen I try to import statically everything works... However, it is very important for me to be lazy. Please help...\r\n","Url":"https://github.com/vuejs/vuex/issues/1753","RelatedDescription":"Closed issue \"Lazy load  doesn't  work for registerModule\" (#1753)"},{"Id":"619941381","IsPullRequest":false,"CreatedAt":"2020-05-18T06:20:56","Actor":"xiaodel","Number":"1752","RawContent":null,"Title":"[Vue warn]: Failed to mount component: template or render function not defined. ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n(found in <Root>)","Url":"https://github.com/vuejs/vuex/issues/1752","RelatedDescription":"Closed issue \"[Vue warn]: Failed to mount component: template or render function not defined. \" (#1752)"},{"Id":"618733815","IsPullRequest":true,"CreatedAt":"2020-05-17T05:10:22","Actor":"kiaking","Number":"1750","RawContent":null,"Title":"docs(ja): update the latest changes","State":"closed","Body":"This PR adds JA translation for the latest updates.","Url":"https://github.com/vuejs/vuex/pull/1750","RelatedDescription":"Closed or merged PR \"docs(ja): update the latest changes\" (#1750)"},{"Id":"619147216","IsPullRequest":false,"CreatedAt":"2020-05-15T18:26:15","Actor":"SumNeuron","Number":"1751","RawContent":null,"Title":"State undefined and Duplicate registration for unclear reasons?","State":"closed","Body":"### Version\r\n4.0.0-beta.2\r\n\r\n### Reproduction link\r\n[https://gitlab.com/SumNeuron/v-focus](https://gitlab.com/SumNeuron/v-focus)\r\n\r\n### Steps to reproduce\r\nnpm i \r\nnpm run dev\r\nhover over card\r\n\r\n### What is expected?\r\nmodule only registered once\r\nstate is not undefined\r\n\r\n### What is actually happening?\r\nmodule registered many times\r\nstate is undefined\r\n\r\n---\r\nI have a very simple Vue component and Vuex Module (that I developed in Nuxt but intend to rollup https://gitlab.com/SumNeuron/v-focus). However I am getting some crazy weird issues. \r\n\r\n1st the module (https://gitlab.com/SumNeuron/v-focus/-/blob/master/modules/v-focus.js),\r\n\r\n```js\r\nfocusMode ({ commit, state }) {\r\n  if (state._focusTimeout) {\r\n    return\r\n  }\r\n  commit('setFocusTimeout', setTimeout(() => commit('setFocusMode', true), state.focusTime))\r\n},\r\n```\r\n\r\nI get:\r\n\"state is undefined\"\r\n\r\nAs for the component (https://gitlab.com/SumNeuron/v-focus/-/blob/master/components/VFocus.vue)\r\nwhere I have the these two methods\r\n\r\n```js\r\nhasModule() {\r\n  let vuexHasModule = this.$store.hasModule(this.$moduleName) === true\r\n  let doubleCheck = (this.$store.state && this.$store.state[this.$moduleName] !== undefined)\r\n  return vuexHasModule && doubleCheck\r\n},\r\nregister() {\r\n  if (!this.hasModule()) {\r\n    try {\r\n      if (!this.hasModule()) {\r\n        this.$store.registerModule(this.$moduleName, VFocusModule)\r\n      }\r\n    } catch (e) {\r\n      if (!this.isSilent) {\r\n        console.error(e)\r\n      }\r\n    } finally {\r\n      this.$emit('register:v-focus')\r\n    }\r\n  }\r\n},\r\n```\r\nI am getting vuex warnings of duplicate registration. How? Does store.hasModule try to register the module itself?\r\n\r\n(This is based off nuxtjs's store)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1751","RelatedDescription":"Closed issue \"State undefined and Duplicate registration for unclear reasons?\" (#1751)"},{"Id":"617823731","IsPullRequest":true,"CreatedAt":"2020-05-14T02:44:46","Actor":"cuebit","Number":"1749","RawContent":null,"Title":"refactor: remove node env flag","State":"closed","Body":"Replaces the orphaned `process.env.NODE_ENV` with the new global `__DEV__`.\r\n","Url":"https://github.com/vuejs/vuex/pull/1749","RelatedDescription":"Closed or merged PR \"refactor: remove node env flag\" (#1749)"},{"Id":"617654141","IsPullRequest":false,"CreatedAt":"2020-05-14T01:49:15","Actor":"bitquality","Number":"1748","RawContent":null,"Title":"Uncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vuex](https://new-issue.vuejs.org/?repo=vuejs/vuex)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nI get the following error while i try to import the plugin component with vuex modules in another vue project.\r\n\r\n```\r\nUncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.\r\nFollowing is my plugin code with vuex modules\r\n```\r\n\r\n        //mystore/mod1/index.ts:\r\n\r\n        import { actions } from \"./actions\"\r\n        import { getters } from \"./getters\"\r\n        import { mutations } from \"./mutations\"\r\n        import { state } from \"./state\"\r\n\r\n        export default {\r\n          state,\r\n          mutations,\r\n          getters,\r\n          actions\r\n        }\r\n\r\n        //mystore/index.js:\r\n\r\n        import Vue from 'vue';\r\n        import Vuex from 'vuex';\r\n        import countermod  from './countermod';\r\n\r\n\r\n        Vue.use(Vuex);\r\n\r\n        export default new Vuex.Store({\r\n          modules: {\r\n            countermod\r\n          },\r\n        });\r\n\r\n\r\n     ","Url":"https://github.com/vuejs/vuex/issues/1748","RelatedDescription":"Closed issue \"Uncaught Error: [vuex] getters should be function but \"getters.countermod/counter\" in module \"dummylib\" is 1.\" (#1748)"},{"Id":"615979664","IsPullRequest":true,"CreatedAt":"2020-05-11T15:58:16","Actor":"Alex-Sokolov","Number":"1747","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1747","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1747)"},{"Id":"612713367","IsPullRequest":true,"CreatedAt":"2020-05-11T10:09:11","Actor":"caugner","Number":"1744","RawContent":null,"Title":"docs: add Dynamic module hot reloading example","State":"closed","Body":"I have looked for a way to load and hot reload Vuex modules systematically, rather than specifying them explictly.\r\n\r\nAdapted from: https://github.com/kazupon/vue-i18n/pull/865","Url":"https://github.com/vuejs/vuex/pull/1744","RelatedDescription":"Closed or merged PR \"docs: add Dynamic module hot reloading example\" (#1744)"},{"Id":"614612132","IsPullRequest":true,"CreatedAt":"2020-05-09T06:19:24","Actor":"kiaking","Number":"1746","RawContent":null,"Title":"docs: add docs for the new `error` option for `subscribeAction` method","State":"closed","Body":"Add API docs for the new `error` option added to the `subscribeAction` method via #1740.","Url":"https://github.com/vuejs/vuex/pull/1746","RelatedDescription":"Closed or merged PR \"docs: add docs for the new `error` option for `subscribeAction` method\" (#1746)"},{"Id":"613757291","IsPullRequest":false,"CreatedAt":"2020-05-08T09:18:04","Actor":"noozzz","Number":"1745","RawContent":null,"Title":"Adding mutateAction","State":"closed","Body":"### What problem does this feature solve?\r\nThere are confusion about action vs commit among developers.\r\n\r\nMany developers suggest to use only dispatch() in components and call commits() only in actions in order to separate responsibilities and to make code reusable. However, someone suggests that it's okay to use commit directly in components when it is so obvious.\r\n\r\nIn order to take the benefits of both approach, I suggests a simple mutateAction, which can mutate state directly like mutations and called by components in a same way as normal actions. In summary, the mutateAction is an action from the component's point of view, while it is similar to mutation in the store.\r\n\r\nWith this feature implemented, I think it is safe to insist to use only dispatch() in components.\r\n\r\n### What does the proposed API look like?\r\nIn the store:\r\n```javascript\r\nmutateActions: {\r\n   setSomeState (state, payload) {\r\n     state.some = payload\r\n  }\r\n}\r\n```\r\nIn the components:\r\n```javascript\r\nthis.$store.dispatch('setSomeState', payload)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1745","RelatedDescription":"Closed issue \"Adding mutateAction\" (#1745)"},{"Id":"610365714","IsPullRequest":true,"CreatedAt":"2020-05-08T08:29:09","Actor":"jmplahitko","Number":"1740","RawContent":null,"Title":"Allow action subscribers to catch rejections.","State":"closed","Body":"@kiaking - Thanks for the direction. This is the pull request to replace [#1531](https://github.com/vuejs/vuex/pull/1531)","Url":"https://github.com/vuejs/vuex/pull/1740","RelatedDescription":"Closed or merged PR \"Allow action subscribers to catch rejections.\" (#1740)"},{"Id":"609881333","IsPullRequest":true,"CreatedAt":"2020-05-08T07:28:35","Actor":"kiaking","Number":"1738","RawContent":null,"Title":"build: migrate tests to jest","State":"closed","Body":"Migrate test framework to Jest.\r\n\r\n- All unit tests are written in Jest.\r\n- Moved `setup` files out of `unit` filter and place it under `test`. This is for migrating E2E test to use Puppeteer instead of Nightwatch. In that time, we should be able to reuse this file since the test will all run with Jest.\r\n- Updated Babel to the latest.\r\n- Remove `babel-polyfill` due to deprecation. In the examples, we could add core-js pattern [described here at the top](https://babeljs.io/docs/en/babel-polyfill).\r\n- Added `yarn coverage` to generate test coverage.","Url":"https://github.com/vuejs/vuex/pull/1738","RelatedDescription":"Closed or merged PR \"build: migrate tests to jest\" (#1738)"},{"Id":"608081553","IsPullRequest":true,"CreatedAt":"2020-05-08T03:18:28","Actor":"kiaking","Number":"1735","RawContent":null,"Title":"chore: enhance release script","State":"closed","Body":"This PR updates the release script to better support the workflow, such as server validation and such.\r\n\r\nMost of the code as taken from Vue 3 release script, but with minor update, which is it lets us select the release tag (`latest` or `next`).","Url":"https://github.com/vuejs/vuex/pull/1735","RelatedDescription":"Closed or merged PR \"chore: enhance release script\" (#1735)"},{"Id":"611942065","IsPullRequest":false,"CreatedAt":"2020-05-08T03:17:09","Actor":"dsl101","Number":"1743","RawContent":null,"Title":"Component update triggered when non-referenced Vuex state changes","State":"closed","Body":"### Version\r\n3.3.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/dsl101/pen/bGVYPRG](https://codepen.io/dsl101/pen/bGVYPRG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the codepen, and show the console. The component only references `state.rootObject.prop1` via a getter and a mutation to increment it. This can be seen when clicking the 'Inc Prop1' button.\r\n\r\nWhen another property is added to the `rootObject` (via the 'Add Prop2' button), the component is updated with no change to the underlying data (`rootObject.prop1`) as can be seen in the console. Calls to `incProp2` can be seen to change this new property value, but no component update is triggered (as expected). Finally, deleting `rootObject.prop2` also triggers a component update, despite `rootObject.prop1` not changing.\r\n\r\n### What is expected?\r\nNone of the mutations associated with `prop2` would trigger the component bound to `prop1` to update.\r\n\r\n### What is actually happening?\r\nCreation and deletion of 'peer' properties of `prop1` are triggering component updates. Mutation of 'peer' properties are (correctly) _not_ triggering updates.\r\n\r\n---\r\nThis could be my misunderstanding of how Vuex actually works (in version 3), but it is causing my app performance issues when unrelated changes in state are triggering many hundreds / thousands of component updates (with no visible data changing). If there is any way to configure or use Vuex, allowing properties to be added / removed _without_ causing updates of existing properties, I couldn't find it in the documentation.\r\n\r\nNote this example could easily be solved by having 2 separate state properties. But this is an example of deeply nested real-world data backed by firestore, so separating all the properties out isn't a workable solution there.\r\n\r\nI was also curious to see if Vuex 4 changed this behaviour in any way, but I couldn't find or figure out a codepen setup for Vuex 4 yet—happy to experiment if there is one.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1743","RelatedDescription":"Closed issue \"Component update triggered when non-referenced Vuex state changes\" (#1743)"},{"Id":"611192719","IsPullRequest":true,"CreatedAt":"2020-05-03T05:01:29","Actor":"ivuex","Number":"1742","RawContent":null,"Title":"调整了  docs/zh/guide/modules.md 116行（加上了子命名空间名字）","State":"closed","Body":"This is not needed (^^)","Url":"https://github.com/vuejs/vuex/pull/1742","RelatedDescription":"Closed or merged PR \"调整了  docs/zh/guide/modules.md 116行（加上了子命名空间名字）\" (#1742)"},{"Id":"610369802","IsPullRequest":true,"CreatedAt":"2020-05-01T03:09:08","Actor":"cuebit","Number":"1741","RawContent":null,"Title":"docs: module state declaration as function","State":"closed","Body":"This PR replaces all state declaration as functions for [module](https://vuex.vuejs.org/guide/modules.html) examples only.\r\n\r\nLeading by example, pun intended, this will encourage users to avoid common pitfalls with shared declarative state.\r\n\r\nInstance state examples are retained as `Object` since this does not apply to root state.\r\n\r\nCloses #1477","Url":"https://github.com/vuejs/vuex/pull/1741","RelatedDescription":"Closed or merged PR \"docs: module state declaration as function\" (#1741)"},{"Id":"608713342","IsPullRequest":false,"CreatedAt":"2020-04-30T14:03:00","Actor":"ChrisShank","Number":"1736","RawContent":null,"Title":"useStore is missing a type declaration","State":"closed","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://github.com/ChrisShank/vue-next-webpack-preview](https://github.com/ChrisShank/vue-next-webpack-preview)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRemove the type declaration of 'useStore' I added in 'vuex-shim.d.ts', and there will be a compile-time TS error.\r\n\r\n### What is expected?\r\nThe type for useStore to exist.\r\n\r\n### What is actually happening?\r\nOn the line: \r\n```ts\r\nimport { useStore } from 'vuex'\r\n```\r\n\r\nThere is an error: \r\n```bash\r\nTS2614: Module 'vue-next-webpack-preview/node_modules/vuex/types\"' has no exported member 'useStore'. Did you mean to use 'import useStore from \"vue-next-webpack-preview/node_modules/vuex/types\"' instead?\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1736","RelatedDescription":"Closed issue \"useStore is missing a type declaration\" (#1736)"},{"Id":"609944125","IsPullRequest":true,"CreatedAt":"2020-04-30T13:33:12","Actor":"kiaking","Number":"1739","RawContent":null,"Title":"types: add `useStore` function (#1736)","State":"closed","Body":"fix #1736\r\n\r\nThis PR adds missing `useStore` function typings. Users may provide `State` as a generics, or use without it to get `Store<any>` type.","Url":"https://github.com/vuejs/vuex/pull/1739","RelatedDescription":"Closed or merged PR \"types: add `useStore` function (#1736)\" (#1739)"},{"Id":"608878282","IsPullRequest":false,"CreatedAt":"2020-04-29T08:58:45","Actor":"ais-one","Number":"1737","RawContent":null,"Title":"process.env.NODE_ENV causing problems in @vue/vite","State":"closed","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://github.com/ais-one/vite-eg](https://github.com/ais-one/vite-eg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclone the reproduction repo\r\nfollow README.md to install and run\r\nview browser console.log for error\r\n\r\nThe problem in vite (which does not use webpack, does not have process)\r\n\r\n```\r\nclass Store {\r\n  constructor (options = {}) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(typeof Promise !== 'undefined', `vuex requires a Promise polyfill in this browser.`);\r\n      assert(this instanceof Store, `store must be called with the new operator.`);\r\n    }\r\n```\r\n\r\n \r\n\r\n### What is expected?\r\nVuex createStore runs without error\r\n\r\n### What is actually happening?\r\nVuex createStore runs has error when running without webpack\r\n\r\n---\r\nIt may have the same problem on ESM build\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1737","RelatedDescription":"Closed issue \"process.env.NODE_ENV causing problems in @vue/vite\" (#1737)"},{"Id":"607079371","IsPullRequest":false,"CreatedAt":"2020-04-26T18:23:14","Actor":"peerhenry","Number":"1734","RawContent":null,"Title":"No/insufficient documentation on accessing getters from other namespaced modules","State":"open","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/guide/getters.html](https://vuex.vuejs.org/guide/getters.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to https://vuex.vuejs.org/guide/getters.html\r\n\r\n### What is expected?\r\nAn example/explanation of how to access getters from another namespaced module.\r\n\r\n### What is actually happening?\r\nThere is no explanation.\r\n\r\n---\r\nOnly once I did a `console.log` of `rootGetters` was I able to see that getters from other namespaced modules had to be accessed by:\r\n\r\n`rootGetters['<othermodulename>/<getter>']`\r\n\r\nPlease provide this information in the documentation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1734","RelatedDescription":"Open issue \"No/insufficient documentation on accessing getters from other namespaced modules\" (#1734)"},{"Id":"606919093","IsPullRequest":true,"CreatedAt":"2020-04-26T05:07:37","Actor":"bekalshenoy","Number":"1733","RawContent":null,"Title":"fix: import requirements for  `this.$store` in README","State":"closed","Body":"To work global typings for `this.$store` need to import `Store` and `ComponentCustomProperties`","Url":"https://github.com/vuejs/vuex/pull/1733","RelatedDescription":"Closed or merged PR \"fix: import requirements for  `this.$store` in README\" (#1733)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-25T05:30:44.4699976Z","RunDurationInMilliseconds":2085}