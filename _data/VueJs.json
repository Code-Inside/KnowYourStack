{"Data":{"Vue-Issues":{"Issues":[{"Id":"713655256","IsPullRequest":true,"CreatedAt":"2020-10-02T14:16:59","Actor":"takumu1011","Number":"11700","RawContent":null,"Title":"test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11700","RelatedDescription":"Closed or merged PR \"test\" (#11700)"},{"Id":"713641099","IsPullRequest":true,"CreatedAt":"2020-10-02T13:55:26","Actor":"markjszy","Number":"11699","RawContent":null,"Title":"fix: update karma and webpack dependencies for OS X builds on Node v12","State":"open","Body":"fix #11696\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11699","RelatedDescription":"Open PR \"fix: update karma and webpack dependencies for OS X builds on Node v12\" (#11699)"},{"Id":"713244409","IsPullRequest":true,"CreatedAt":"2020-10-02T07:07:04","Actor":"adityanjr","Number":"11698","RawContent":null,"Title":"one-time donation link","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11698","RelatedDescription":"Closed or merged PR \"one-time donation link\" (#11698)"},{"Id":"711306460","IsPullRequest":true,"CreatedAt":"2020-10-02T07:07:04","Actor":"quizhpi","Number":"11692","RawContent":null,"Title":"doc(contributing): add missing donation link","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nAdd missing donation link via PayPal or crypto-currencies in CONTRIBUTING.md file\r\n\r\nClose #11698","Url":"https://github.com/vuejs/vue/pull/11692","RelatedDescription":"Closed or merged PR \"doc(contributing): add missing donation link\" (#11692)"},{"Id":"712891541","IsPullRequest":false,"CreatedAt":"2020-10-01T15:54:59","Actor":"MeisterTea","Number":"11697","RawContent":null,"Title":"Vue stripping out styles from inline SVG","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsbin.com/lurayuxofo/edit?html,js,console,output](https://jsbin.com/lurayuxofo/edit?html,js,console,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Include inline SVG with some styles within a Vue instance\r\n- Init vue instance\r\n\r\n### What is expected?\r\nSVG to be styled according to the style element\r\n\r\n### What is actually happening?\r\nVue is giving a warning \"[Vue warn]: Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <style>. \" and also stripping the style element so the SVG is appearing with no style.\r\n\r\n---\r\nI am opening the exact same issue as this [one](https://github.com/vuejs/vue/issues/4144) because it's been ignored and this should be fixed by now.\r\n\r\nIt's been plaguing vue since 2016.\r\n\r\n# The fix so far: \r\nIn the meantime, this can be fixed by adding this attribute `xmlns:svg=\"http://www.w3.org/2000/svg\"` to your `<svg>` tag and writing your style as this : `<svg:style type=\"text/css\">`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11697","RelatedDescription":"Closed issue \"Vue stripping out styles from inline SVG\" (#11697)"},{"Id":"712760753","IsPullRequest":false,"CreatedAt":"2020-10-01T11:39:10","Actor":"markjszy","Number":"11696","RawContent":null,"Title":"Build warnings in Mac OS and Node v12 (development)","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOn Mac OS Catalina (and probably prior versions), with Node v12 installed, follow the developer build instructions: \r\n\r\n* Clone the repository\r\n* Run `yarn`\r\n\r\n### What is expected?\r\nSuccessful report from `yarn` that all dependencies have been installed, with no warnings or errors\r\n\r\n### What is actually happening?\r\nThe following warning, followed by a slew of details (errors) concerning `fsevents` and one of its dependencies, `nan`\r\n\r\n`warning Error running install script for optional dependency: \"/Users/mark/dev/vue/node_modules/fsevents: Command failed.`\r\n\r\n---\r\nDev dependency installation works fine with Node v10. I think I understand the problem and am curious about the right solution. \r\nVue currently specifies `webpack` 4.x and `karma` 3.x as devDependencies, both of which ultimately bring in `chokidar` 2.x, which lists `fsevents` 1.2.x as an optional dependency. \r\n\r\nOld `fsevents` is really the problem, in two ways:\r\n* It references entities that have been removed in Node 12.x (e.g. v8::Handle; see https://github.com/fsevents/fsevents/blob/v1.2.2/fsevents.cc#L89) \r\n* It relies on `nan` 2.9.x, which also references deprecated/removed entities from the v8 API (e.g. `isNearDeath`). Newer versions of `nan` have addressed this issue. \r\n\r\nI imagine the easiest solution, assuming nothing else breaks, would be to update the `karma` and `webpack` dependencies to some minimal viable version that does away with reliance on these older libs without breaking other expectations. In the meantime, we could also put a note in the build instructions for Mac users noting that they may need to move down to Node v10 if they want to avoid this problem. I understand that this might be obvious to some audience that intends to pitch in with Vue development in the first place, but it might help some.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11696","RelatedDescription":"Open issue \"Build warnings in Mac OS and Node v12 (development)\" (#11696)"},{"Id":"712324313","IsPullRequest":false,"CreatedAt":"2020-10-01T06:57:46","Actor":"JanDevDE","Number":"11694","RawContent":null,"Title":"Rerender will not be triggered when listening on a element which gets replaced","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/gbpm5y3k/4/](https://jsfiddle.net/gbpm5y3k/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust click on \"click me\" and see that the view is not getting updated\r\n\r\n### What is expected?\r\nView should get updated. At least with Vue.set \r\n\r\n### What is actually happening?\r\nView is not getting updated\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11694","RelatedDescription":"Closed issue \"Rerender will not be triggered when listening on a element which gets replaced\" (#11694)"},{"Id":"712468891","IsPullRequest":false,"CreatedAt":"2020-10-01T06:56:19","Actor":"randyhoulahan","Number":"11695","RawContent":null,"Title":"2.6.12 ~ vue.esm.browser.min.js does not provide an export named setBlockTracking","State":"closed","Body":"### Version\r\n2.6.12\r\n\r\n### Reproduction link\r\n[https://www.cbd.int/action-agenda/contributions/](https://www.cbd.int/action-agenda/contributions/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have not got that far yet. I will fix at 2.6.11 until resolved.  \r\n\r\n\"modern.js:52 Uncaught (in promise) SyntaxError: The requested module 'https://cdn.cbd.int/vue@~2.6/dist/vue.esm.browser.min.js' does not provide an export named 'setBlockTracking'\"\r\n\r\n### What is expected?\r\nno breaking changes\r\n\r\n### What is actually happening?\r\nbreaking changes\r\n\r\n---\r\n:-) ~ sorry Evan\r\n\r\nYour issue form will not let me select 2.6.12\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11695","RelatedDescription":"Closed issue \"2.6.12 ~ vue.esm.browser.min.js does not provide an export named setBlockTracking\" (#11695)"},{"Id":"712116156","IsPullRequest":false,"CreatedAt":"2020-09-30T17:01:56","Actor":"332lfgb6","Number":"11693","RawContent":null,"Title":"Why didn't v-leave work?","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/NMlV8C0ql98w/v8zL204y/1/](https://jsfiddle.net/NMlV8C0ql98w/v8zL204y/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick the button to test it😄\r\n\r\n### What is expected?\r\n.v-leave work.\r\n\r\n### What is actually happening?\r\n.v-leave didn't work.\r\n\r\n---\r\nv-enter, v-enter-active, v-enter-to, v-leave-active and v-leave-to are normal, but v-leave is abnormal.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11693","RelatedDescription":"Closed issue \"Why didn't v-leave work?\" (#11693)"},{"Id":"711115405","IsPullRequest":true,"CreatedAt":"2020-09-29T13:33:08","Actor":"Aa115511","Number":"11691","RawContent":null,"Title":"Aa115511 patch 1","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11691","RelatedDescription":"Closed or merged PR \"Aa115511 patch 1\" (#11691)"},{"Id":"710891986","IsPullRequest":false,"CreatedAt":"2020-09-29T08:48:46","Actor":"ggkong","Number":"11690","RawContent":null,"Title":" use this.vm give undefined when use arrow function in computed  but method can","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/ge12/pen/KKzYEgX](https://codepen.io/ge12/pen/KKzYEgX)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<div id=\"app\">\r\n  <button @click = \"return_aaa\">aaa</button>\r\n  <button @click = \"return_bbb\">bbb</button>\r\n  {{reversedMessage}}\r\n</div>\r\n\r\n<script>\r\nvar vm = new Vue({\r\n  el: '#app',\r\n  data: {\r\n    message: 'hhh!',\r\n    aaa:'aaa'\r\n  },\r\n  computed: {\r\n    // 计算属性的 getter\r\n    reversedMessage : () => {\r\n        console.log(this.vm)\r\n        return 'aaa'\r\n    }\r\n  },\r\n  methods: {\r\n    return_aaa: function () {\r\n      console.log('aaa')\r\n      console.log(this)\r\n      \r\n    },\r\n    return_bbb: () => {\r\n      console.log('bbb')\r\n      console.log(this.vm)\r\n      console.log(this.vm.message)\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n### What is expected?\r\nis not undefined\r\n\r\n### What is actually happening?\r\nundefined\r\n\r\n---\r\n当我在 计算属性中使用 箭头函数 并且 使用this.vue实例的时候会出现 undefined 但是 在method中可以正常使用\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11690","RelatedDescription":"Closed issue \" use this.vm give undefined when use arrow function in computed  but method can\" (#11690)"},{"Id":"710819055","IsPullRequest":false,"CreatedAt":"2020-09-29T06:57:31","Actor":"KasraK2K","Number":"11689","RawContent":null,"Title":"Automatic Global Registration of Base Components","State":"closed","Body":"### What problem does this feature solve?\r\nI can't find any document about `Automatic Global Registration of Base Components` in Vue 3.x `Component Registration` documents.\r\n\r\ni solved this problem using Vue 2.x document and made a little change:\r\n\r\n```javascript\r\n// automatic register global component\r\nimport upperFirst from \"lodash/upperFirst\";\r\nimport camelCase from \"lodash/camelCase\";\r\n\r\nconst createdApp = createApp(App);\r\n\r\nconst requireComponent = require.context(\r\n  // The relative path of the components folder\r\n  \"./components\",\r\n  // Whether or not to look in subfolders\r\n  false,\r\n  // The regular expression used to match base component filenames\r\n  /Base[A-Z]\\w \\.(vue|js)$/,\r\n);\r\n\r\nrequireComponent.keys().forEach(fileName => {\r\n  // Get component config\r\n  const componentConfig = requireComponent(fileName);\r\n  // Get PascalCase name of component\r\n  const componentName = upperFirst(\r\n    camelCase(\r\n      // Gets the file name regardless of folder depth\r\n      fileName\r\n        .split(\"/\")\r\n        .pop()\r\n        .replace(/\\.\\w $/, \"\"),\r\n    ),\r\n  );\r\n  // Register component globally\r\n  createdApp.component(\r\n    componentName,\r\n    // Look for the component options on `.default`, which will\r\n    // exist if the component was exported with `export default`,\r\n    // otherwise fall back to module's root.\r\n    componentConfig.default || componentConfig,\r\n  );\r\n});\r\n```\r\n\r\nAdd it to Vue 3.x document, please\r\n\r\n### What does the proposed API look like?\r\nThis API lookalike `Automatic Global Registration of Base Components` feature in Vue 2.x\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11689","RelatedDescription":"Closed issue \"Automatic Global Registration of Base Components\" (#11689)"},{"Id":"710407466","IsPullRequest":false,"CreatedAt":"2020-09-28T16:22:57","Actor":"nfplee","Number":"11688","RawContent":null,"Title":"Emit event from child component within a slot","State":"closed","Body":"I'm looking at upgrading to v3 and was disappointed to see inline-template has been removed. Therefore I'm trying to convert to use scoped slot instead.\r\n\r\nI have defined the following list component:\r\n\r\n```<template>\r\n    <slot :items=\"filteredItems\" :page=\"page\" :totalPages=\"totalPages\" :onPageChanged=\"onPageChanged\"></slot>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            items: {\r\n                type: Array\r\n            },\r\n            initialPage: {\r\n                type: Number,\r\n                default: 1,\r\n            },\r\n            pageSize: {\r\n                type: Number,\r\n                default: 10\r\n            }\r\n        },\r\n        beforeCreate() {\r\n            this.page = this.initialPage;\r\n        },\r\n        computed: {\r\n            filteredItems() {\r\n                return this.items.slice((this.page - 1) * this.pageSize, this.page * this.pageSize);\r\n            },\r\n            totalPages() {\r\n                return Math.ceil(this.items.length / this.pageSize);\r\n            }\r\n        },\r\n        methods: {\r\n            onPageChanged(page) {\r\n                console.log('Page changed!!!');\r\n\r\n                this.page = page;\r\n            }\r\n        }\r\n    };\r\n</script>```\r\n\r\nWhich is called like so:\r\n\r\n```<list :items=\"[ { foo: 'A' }, { foo: 'B' }, { foo: 'C' } ]\" :page-size=\"2\" #=\"{ items, page, totalPages, onPageChanged }\">\r\n    <h2>List</h2>\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item\" v-for=\"item in items\">{{ item.foo }}</li>\r\n    </ul>\r\n    <pager :page=\"page\" :total-pages=\"totalPages\" @pageChanged=\"onPageChanged\"></pager>\r\n</list>```\r\n\r\nHere's the pager component:\r\n\r\n```<template>\r\n    <ul class=\"pagination\">\r\n        <li class=\"page-item\" v-if=\"hasPreviousPage\"><a href=\"#\" @click=\"changePage(1)\" class=\"page-link\">&laquo;</a></li>\r\n        <li class=\"page-item\" v-if=\"hasPreviousPage\"><a href=\"#\" @click=\"changePage(page - 1)\" class=\"page-link\">&#8249;</a></li>\r\n        <li v-for=\"page in pages\" :class=\"['page-item', { active: page.isActive }]\"><a href=\"#\" @click=\"changePage(page.name)\" class=\"page-link\">{{ page.name }}</a></li>\r\n        <li class=\"page-item disabled\" v-if=\"page < totalPages - 2\"><span class=\"page-link\"> ... </span></li>\r\n        <li class=\"page-item\" v-if=\"page < totalPages - 2\"><a href=\"#\" @click=\"changePage(totalPages)\" class=\"page-link\">{{ totalPages }}</a></li>\r\n        <li class=\"page-item\" v-if=\"hasNextPage\"><a href=\"#\" @click=\"changePage(page + 1)\" class=\"page-link\">&#8250;</a></li>\r\n        <li class=\"page-item\" v-if=\"hasNextPage\"><a href=\"#\" @click=\"changePage(totalPages)\" class=\"page-link\">&raquo;</a></li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            page: {\r\n                type: Number,\r\n                required: true\r\n            },\r\n            totalPages: {\r\n                type: Number,\r\n                required: true\r\n            }\r\n        },\r\n        computed: {\r\n            hasPreviousPage() {\r\n                return this.page > 1;\r\n            },\r\n            hasNextPage() {\r\n                return this.page < this.totalPages;\r\n            },\r\n            pages() {\r\n                const range = [];\r\n\r\n                for (let i = this.page <= 2 ? 1 : this.page - 2; i <= (this.page >= this.totalPages - 2 ? this.totalPages : this.page + 2); i++) {\r\n                    range.push({\r\n                        name: i,\r\n                        isActive: this.page == i\r\n                    });\r\n                }\r\n\r\n                return range;\r\n            }\r\n        },\r\n        methods: {\r\n            changePage(page, e = event) {\r\n                e.preventDefault();\r\n\r\n                // Trigger the page changed event.\r\n                this.$emit('pageChanged', page);\r\n            }\r\n        }\r\n    };\r\n</script>```\r\n\r\nHowever whenever I try to change the page, the \"changePage\" method is invoked which emits the \"pageChanged\" event, however it doesn't invoke the \"onPageChanged\" method within the list component.\r\n\r\nI'd appreciate if someone could show me what I'm doing wrong. Thanks","Url":"https://github.com/vuejs/vue/issues/11688","RelatedDescription":"Closed issue \"Emit event from child component within a slot\" (#11688)"},{"Id":"710130438","IsPullRequest":false,"CreatedAt":"2020-09-28T10:27:11","Actor":"TuringJest","Number":"11687","RawContent":null,"Title":"Bind child methods to slot to be accessible in parent scope","State":"closed","Body":"### What problem does this feature solve?\r\nI struggle to encapsulate functionality into components, because it's difficult to access methods in the slot rendered in the parent`s scope. \r\n\r\nMaybe we could add a possibility to bind the methods to the slot?\r\n\r\n### What does the proposed API look like?\r\nWould this be an anti-pattern?\r\n\r\nChild-Component:\r\n```...\r\n<slot v-bind=\"this.methods\" />\r\n...\r\nmethods: {\r\n  childMethod()\r\n}\r\n```\r\n\r\nUsage:\r\n```\r\n<child-component v-slot:default=\"$\" >\r\n  {{  $.childMethod(someValue) }}>\r\n<\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11687","RelatedDescription":"Closed issue \"Bind child methods to slot to be accessible in parent scope\" (#11687)"},{"Id":"709935767","IsPullRequest":false,"CreatedAt":"2020-09-28T09:20:33","Actor":"Soviut","Number":"11686","RawContent":null,"Title":"Event modifiers do not pass additional arguments","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Soviut/0nmfpz9h/4/](https://jsfiddle.net/Soviut/0nmfpz9h/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Note the component emits an $event along with an extra argument string\r\n- Click the \"no prevent\" button\r\n- Note that the message is passed and is displayed\r\n- Click the \"has prevent\" button\r\n- Note that the message is undefined and clears the display\r\n\r\nBoth buttons also log to the console for more detailed output.\r\n\r\n### What is expected?\r\nAdditional arguments would be passed when event modifiers are used.\r\n\r\n### What is actually happening?\r\nAdditional arguments are being ignored/removed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11686","RelatedDescription":"Closed issue \"Event modifiers do not pass additional arguments\" (#11686)"},{"Id":"708970067","IsPullRequest":false,"CreatedAt":"2020-09-25T14:31:02","Actor":"osasson","Number":"11685","RawContent":null,"Title":"False reactivity on input field when using a smart phone","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/odsasson/pen/LYNapLp](https://codepen.io/odsasson/pen/LYNapLp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nType a letter in the input field\r\n\r\n### What is expected?\r\nval should be updated\r\n\r\n### What is actually happening?\r\nNo reactivity although the input event is fired (actually value is set to an empty string) when using browser on a smartphone (FF and Chrome on a OnePlus smartphone)\r\nLosing focus or typing a non alphanumeric character like  , space etc. sets the value. e.g. aaa \r\nDeleting it resets the value to empty e.g. aaa\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11685","RelatedDescription":"Closed issue \"False reactivity on input field when using a smart phone\" (#11685)"},{"Id":"708952868","IsPullRequest":false,"CreatedAt":"2020-09-25T13:47:12","Actor":"osasson","Number":"11684","RawContent":null,"Title":"False reactivity on input field when using a smart phone","State":"closed","Body":"## Version\r\n2.6.10\r\n\r\n## Reproduction link\r\nhttps://codepen.io/odsasson/pen/LYNapLp\r\n\r\n## Steps to reproduce\r\nType a letter in the input field\r\n\r\n## What is expected\r\nval should be updated\r\n\r\n## What is actually happening\r\nNo reactivity although the input event is fired (actually value is set to an empty string) when using browser on a smartphone (FF and Chrome on a OnePlus smartphone)\r\nLosing focus or typing a non alphanumeric character like +, space etc. sets the value. e.g. aaa+\r\nDeleting it resets the value to empty e.g. aaa\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11684","RelatedDescription":"Closed issue \"False reactivity on input field when using a smart phone\" (#11684)"},{"Id":"708693947","IsPullRequest":false,"CreatedAt":"2020-09-25T06:54:45","Actor":"7ochem","Number":"11683","RawContent":null,"Title":"VNode.context type in Vue.directive() bind","State":"closed","Body":"I have the following TS code where I have been struggling to get the VNode.context working properly. I have looked into the VNode object in the browser console and saw that indeed these methods are directly on the VNode.context Vue component. However the Vue type of VNode.context does not provide in typings for these methods.\r\n\r\nAs seen below, I have solved this by casting the VNode.context to `Vue & DefaultMethods<Vue>`. But casting is almost never a good idea and probably a smell that something's not right.\r\n\r\nThe same probably goes for properties and computed properties.\r\n\r\n```typescript\r\nVue.directive('click-outside', {\r\n    bind(el:HTMLElement, binding:DirectiveBinding, vnode:VNode):void {\r\n        (el as HTMLElementWithClickOutsideEvent).clickOutsideEvent = (event:Event):void => {\r\n            // here it checks that click was outside the el and its children\r\n            if (!(el === event.target || el.contains(event.target as Node))) {\r\n                // and if it did, call method provided in attribute value\r\n                (vnode.context! as Vue & DefaultMethods<Vue>)[binding.expression](event);\r\n            }\r\n        };\r\n        document.body.addEventListener('click', (el as HTMLElementWithClickOutsideEvent).clickOutsideEvent as EventListener);\r\n    },\r\n    unbind(el:HTMLElement):void {\r\n        document.body.removeEventListener('click', (el as HTMLElementWithClickOutsideEvent).clickOutsideEvent as EventListener);\r\n    },\r\n});\r\n```\r\n\r\nIs this something that should be fixed within the typings for VNode?\r\n\r\nhttps://github.com/vuejs/vue/blob/0664cb01434f3d52efd076b6aafe54066a2a762a/types/vnode.d.ts#L22","Url":"https://github.com/vuejs/vue/issues/11683","RelatedDescription":"Closed issue \"VNode.context type in Vue.directive() bind\" (#11683)"},{"Id":"708434538","IsPullRequest":true,"CreatedAt":"2020-09-24T19:56:18","Actor":"farjanaHuq","Number":"11682","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11682","RelatedDescription":"Closed or merged PR \"Update README.md\" (#11682)"},{"Id":"708202107","IsPullRequest":false,"CreatedAt":"2020-09-24T14:16:47","Actor":"nolimitdev","Number":"11681","RawContent":null,"Title":"Censoring helpful comments in #8231 v-model on mobile not updating until a space is pressed","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/issues/8231](https://github.com/vuejs/vue/issues/8231)\r\n\r\n\r\n### Steps to reproduce\r\nI do not understand why maintainer censored https://github.com/vuejs/vue/issues/8231 and locked it. My comment with tens of positive reactions and with helpful solution/workaround was deleted. Many users now can not see it. I think that it is not acceptable to do that by maintainer. Maintainer feels offended but he did not answer to my questions and to questions of other users. Here is a non-censored version from google cache https://gofile.io/d/V9pfeT (can be downloaded and viewed in chrome). My comment here https://i.ibb.co/MS85nnt/screen1.png (now deleted) another user was thanking for my comment here https://i.ibb.co/9GVS7nx/screen2.png (now deleted).\r\n\r\nI have quoted maintainer and I present proofs that he is not right. Pasting again and I will be grateful for answer.\r\n\r\n> it's because you're in composition mode (For accents, or languages like Japanese) (see the underline)\r\n\r\n**It is not truth. This bug also happens for any language (including english) when I turn on text auto prediction. It has not to do with languages like Japanese but in global with text auto prediction enabled.**\r\n\r\n> This is completely normal because until composition isn't finished, the browser doesn't inform about something being typed\r\n\r\n**It is also not truth. Browser must be informed because of this two proofs:**\r\n\r\n**1.) How it is possible that in VUE 1 v-model was working fine with text auto prediction enabled? I have tested it now.**\r\n\r\n**2.) Replacing v-model=\"search\" with v-bind:value=\"search\" and v-on:input=\"search= $event.target.value\" works.**\r\n\r\nPlease, why you did not react to it? Another user asked similar question here https://i.ibb.co/sFsvM19/screen3.png (now deleted).\r\n\r\n### What is expected?\r\nHelpful comments will be not deleted\r\n\r\n### What is actually happening?\r\nHelpful comments are deleted\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11681","RelatedDescription":"Closed issue \"Censoring helpful comments in #8231 v-model on mobile not updating until a space is pressed\" (#11681)"},{"Id":"707714559","IsPullRequest":false,"CreatedAt":"2020-09-24T06:51:15","Actor":"tgraupmann","Number":"11679","RawContent":null,"Title":"Select Binding has scope issue with `this.$root.$data`","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://htmlpreview.github.io/?https://github.com/tgraupmann/vue-el-select/blob/master/index.html](https://htmlpreview.github.io/?https://github.com/tgraupmann/vue-el-select/blob/master/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe select has an index property. The index property is used in the binding. The component loads as expected, but the change event has a scope issue and can't resolve `this.$root.$data` resulting in a console log error.\r\n\r\n### What is expected?\r\nShould be able to bind using the property and change events should update the bound data.\r\n\r\nv-model=\"this.$root.$data.selected[this.index]\r\n\r\n### What is actually happening?\r\nThe change event can't resolve `this.$root.$data` and logs an error.\r\n\r\n---\r\nRepro project: https://github.com/tgraupmann/vue-el-select\r\n\r\nTested with older versions and v2.6.12\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11679","RelatedDescription":"Closed issue \"Select Binding has scope issue with `this.$root.$data`\" (#11679)"},{"Id":"707802808","IsPullRequest":false,"CreatedAt":"2020-09-24T06:48:46","Actor":"marfino3028","Number":"11680","RawContent":null,"Title":"about a components","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/dh1p3mvb/](https://jsfiddle.net/dh1p3mvb/)\r\nhttps://jsfiddle.net/2f0tkhec/\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwebpack-internal:///./node_modules/vue/dist/vue.runtime.esm.js:620 [Vue warn]: Unknown custom element: <data-view-sidebar> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\nfound in\r\n\r\n---> <Pelanggan> at src/views/pages/owner/Pelanggan.vue\r\n       <Main> at src/layouts/main/Main.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n### What is expected?\r\nwebpack-internal:///./node_modules/vue/dist/vue.runtime.esm.js:620 [Vue warn]: Unknown custom element: <data-view-sidebar> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\nfound in\r\n\r\n---> <Pelanggan> at src/views/pages/owner/Pelanggan.vue\r\n       <Main> at src/layouts/main/Main.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n### What is actually happening?\r\nwebpack-internal:///./node_modules/vue/dist/vue.runtime.esm.js:620 [Vue warn]: Unknown custom element: <data-view-sidebar> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\nfound in\r\n\r\n---> <Pelanggan> at src/views/pages/owner/Pelanggan.vue\r\n       <Main> at src/layouts/main/Main.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11680","RelatedDescription":"Closed issue \"about a components\" (#11680)"},{"Id":"707611820","IsPullRequest":false,"CreatedAt":"2020-09-23T19:47:03","Actor":"bitquality","Number":"11678","RawContent":null,"Title":"vue build failed while installing plugin with its own vuex store","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vue](https://new-issue.vuejs.org/?repo=vuejs/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n\r\nI have a vue plugin reusable project which i developed and runs stand alone fine. I converted this project to plugin as this ui project can be reused at multiple places.\r\n\r\nWhen i registered this plugin in another main project, it fails to start with below error.\r\n\r\nThis is how i register in main project's main.ts file:\r\n\r\n                      Vue.use(ProfilePlugin, { store });\r\n\r\nThis is how i defined my vue plugin vuex -> action with async function:\r\n\r\n\t\t\tasync getProfile({ commit },email) {\r\n\t\t\t\t  await profileService.getUserProfile(email);//this line 2 is causing an issue\r\n\t\t\t\t  commit('SET_PROFILE READ SUCCESS', true);\r\n\t\t\t} \r\n\r\nI export all the vuex modules() from plugin like below..\r\n\r\n\t\t\texport {\r\n\t\t\t  profileStore\r\n\t\t\t};\r\n\r\nBut when my project tries to register this plugin in my main project\r\n\r\n                      Uncaught TypeError: rawModule is undefined\r\n\r\nWhen i comment line 2 which is the await statement in my async function everything works fine. I used link below to develop my resuable ui library component with its own vuex\r\n\r\nhttps://vuejs.org/v2/guide/plugins.html#Using-a-Plugin\r\n\r\nThe code i have from plugin with install method:\r\n\r\n    import * as storeModules from '@/state/_index';\r\n\r\n    import routes from '@/router/_index';\r\n\r\n    export { routes };//to register with main vue project\r\n\r\n    import _Vue from 'vue';\r\n\r\n    const components: any = { EngHomeComponent };\r\n    const modules: any = { ...storeModules };\r\n\r\n    const install = (Vue: typeof _Vue, options: any): void => {\r\n      if (!options || !options.store) {\r\n        throw new Error('Please initialise plugin with a Vuex store.');\r\n      }\r\n\r\n      Object.keys(modules).forEach((key) => {\r\n        options.store.registerModule(key, modules[key]);\r\n      });\r\n\r\n      Object.keys(components).forEach((componentName) => {\r\n        const component = components[componentName];\r\n        Vue.component(component.name, component);\r\n      });\r\n    };\r\n\r\n    export default {\r\n      install,\r\n    };\r\n\r\n\r\n\r\n### What is expected?\r\nvue project should be able to import plugin register the plugin's store even when plugin store has actions with async await keyword\r\n\r\n### What is actually happening?\r\nUncaught TypeError: rawModule is undefined\r\n\r\n---\r\nIf i remove my api call then the code works fine.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11678","RelatedDescription":"Closed issue \"vue build failed while installing plugin with its own vuex store\" (#11678)"},{"Id":"707173327","IsPullRequest":false,"CreatedAt":"2020-09-23T09:58:51","Actor":"Etone","Number":"11676","RawContent":null,"Title":"Building an App for a highly dynamic Setup - Assets Routing","State":"closed","Body":"### What problem does this feature solve?\r\nIn a current project I have a problem understanding (and configuring) routing within my vue.js app.\r\n\r\n## Our Setup\r\n\r\nWe have a setup, where for each Pull Request in our repos a new Snapshot Environment is created. This environment is one namespace within a kubernetes Cluster. All services in a current develop state are deployed with the new \"snapshot\" version of the service that triggered the CICD pipeline. To have a clear route for each snapshot environment, we use the namespace as part of the URL (https://HOST/NAMESPACE/APP/paths)\r\n\r\n## Our Problem\r\n\r\nAs you can see, the URL is highly dynamic, but currently, we could just build the container with the path and be happy. Thats our current setup. Unfortunately, we want the possibility, to deploy each and every container image on every HOST as well as every NAMESPACE, those parts are only known at runtime, not in the CICD Pipeline.\r\n\r\nIs there any way to handle such a scenario with vue.js. I have basically every freedom to edit the app as well as the container, but can't change the way we want to host our app. Currently we build the App on the cluster and inject the NAMESPACE, which was the \"easiest\" way to do this. But if there is any other way, I would love to not have the build and run step together.\r\n\r\n### What does the proposed API look like?\r\nNo proposed API as this is more of an question, which was asked in Forum, Discord and Stackoverflow and didn't find an answer. If its not possible to do this, a proposed API would look like the current one, with\r\n```js\r\npublicPath :\"./\"\r\n```\r\nand no change in output dir. Maybe I'm missing something really big here\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11676","RelatedDescription":"Closed issue \"Building an App for a highly dynamic Setup - Assets Routing\" (#11676)"},{"Id":"707206265","IsPullRequest":false,"CreatedAt":"2020-09-23T09:58:27","Actor":"maritaria","Number":"11677","RawContent":null,"Title":"Allow binding arrays to 'key' ","State":"closed","Body":"### What problem does this feature solve?\r\nWhen rendering lists for which the items have multiple roots:\r\n\r\n```html\r\n<tbody>\r\n  <template v-for=\"item in items\">\r\n    <tr :key=\"'main'   item.id\"> ... </tr>\r\n    <tr v-if=\"isExpanded(item.id)\" :key=\"'expanded'   item.id\"> ... </tr>\r\n  </template>\r\n</tbody>\r\n```\r\n\r\nYou need to do string concatenation to build the keys, I would like the option to bind an array consisting of strings and numbers that key the element appropriately. Allowing tuples for keys allows me to not worry how the data in the tuple is serialized to a string and I don't have to use weird string formatting patterns to avoid potential collisions.\r\n\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<tbody>\r\n  <template v-for=\"item in items\">\r\n    <tr :key=\"['main', item.id]\"> ... </tr>\r\n    <tr v-if=\"isExpanded(item.id)\" :key=\"['expanded', item.id]\"> ... </tr>\r\n  </template>\r\n</tbody>\r\n```\r\n\r\n```html\r\n<ul>\r\n  <li v-for=\"item in items\" :key=\"['items', item.id]\"> ... </li>\r\n  <li key=\"end-of-list\"> ... </li>\r\n</ul>\r\n```\r\n\r\nWhen comparing two keys, they are the same when:\r\n  - Both are string and value-equivalent\r\n  - Both are arrays, have the same length and have the same value at every index for both arrays\r\n\r\nWith a quick look through the codebase, I suspect the change needs to occur at https://github.com/vuejs/vue/blob/0664cb01434f3d52efd076b6aafe54066a2a762a/src/core/vdom/patch.js#L35-L50\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11677","RelatedDescription":"Closed issue \"Allow binding arrays to 'key' \" (#11677)"},{"Id":"705694382","IsPullRequest":false,"CreatedAt":"2020-09-21T15:27:25","Actor":"chumager","Number":"11675","RawContent":null,"Title":"Max stack trace error in Chrome with several tags or components","State":"closed","Body":"### Version\r\n2.6.12\r\n\r\n### Reproduction link\r\n[https://jsbin.com/tusikubevu/edit?html,js,console,output](https://jsbin.com/tusikubevu/edit?html,js,console,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIf you move between 100 and 125000 there is no problem, but if you choose 130000 there is a max stack trace error in chrome 85.0.4183.102 (stable), this is a VERY minimal reproduction, what really happens to me is with bootstrap-vue table with scopes and several chained components my app stop working and have to capture the error and reload the page, and my client is complaining a lot about it.\r\n\r\n### What is expected?\r\nDon't know if you can solve it or if it's a chrome problem, because in FF it doesn't happens\r\n\r\n### What is actually happening?\r\nI got this kind of error when using lots of components.\r\n\r\nRangeError: Maximum call stack size exceeded\r\n    at normalizeArrayChildren (vue.js:2393)\r\n    at normalizeChildren (vue.js:2368)\r\n    at _createElement (vue.js:3406)\r\n    at createElement (vue.js:3360)\r\n    at Proxy.vm._c (vue.js:3497)\r\n    at Proxy.eval (eval at createFunction (vue.js:11649), <anonymous>:3:19)\r\n    at Vue._render (vue.js:3551)\r\n    at Vue.updateComponent (vue.js:4067)\r\n    at Watcher.get (vue.js:4478)\r\n    at Watcher.run (vue.js:4553)\r\nlogError @ vue.js:1897\r\nglobalHandleError @ vue.js:1888\r\nhandleError @ vue.js:1848\r\nVue._render @ vue.js:3553\r\nupdateComponent @ vue.js:4067\r\nget @ vue.js:4478\r\nrun @ vue.js:4553\r\nflushSchedulerQueue @ vue.js:4311\r\n(anonymous) @ vue.js:1989\r\nflushCallbacks @ vue.js:1915\r\nPromise.then (async)\r\ntimerFunc @ vue.js:1942\r\nnextTick @ vue.js:1999\r\nqueueWatcher @ vue.js:4403\r\nupdate @ vue.js:4543\r\nnotify @ vue.js:745\r\nreactiveSetter @ vue.js:1070\r\nproxySetter @ vue.js:4630\r\nchange @ VM33:3\r\ninvokeWithErrorHandling @ vue.js:1863\r\ninvoker @ vue.js:2188\r\noriginal._wrapper @ vue.js:7547\r\nListPicker._handleMouseUp\r\n\r\n\r\n---\r\nAs I said before this happens on Chome, in FF there is no error, and I use 2.6.12, not 2.6.11, but can't choose it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11675","RelatedDescription":"Closed issue \"Max stack trace error in Chrome with several tags or components\" (#11675)"},{"Id":"704445696","IsPullRequest":false,"CreatedAt":"2020-09-18T15:34:00","Actor":"23subbhashit","Number":"11674","RawContent":null,"Title":"VueRouter not working with Boostrap navbar","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/23subbhashit/Covid19Tracker-Vue](https://github.com/23subbhashit/Covid19Tracker-Vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n<template>\r\n  <div class=\"hello\">\r\n   <nav class=\"navbar custom-nav fixed-top navbar-expand-lg navbar-light bg-dark\">\r\n     <div class=\"container\">\r\n        <router-link class=\"navbar-brand\" to=\"/\"><span class=\"text-danger\" style=\"font-size : 28px\">\r\n            COVID19<span class=\"text-warning\" style=\"font-size : 23px\">TRACKER</span>\r\n          </span></router-link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n              <router-link to=\"/\" class=\"nav-link\"><span style=\"color : white\">Home</span></router-link>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <router-link to=\"/cases\" class=\"nav-link\"><span style=\"color : white\">Cases</span></router-link>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <router-link to=\"/deaths\" class=\"nav-link\"><span style=\"color : white\">Deaths</span></router-link>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <router-link to=\"/recovered\" class=\"nav-link\"><span style=\"color : white\">Active</span></router-link>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <router-link to=\"/map\" class=\"nav-link\"><span style=\"color : white\">Map</span></router-link>\r\n            </li>\r\n          \r\n          </ul>\r\n          <!--<form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n            <a class=\"btn btn-outline-success my-2 my-sm-0\" data-toggle=\"modal\" data-target=\"#login\">Get Started</a>\r\n          </form>-->\r\n        </div>\r\n\r\n     </div>\r\n\r\n</nav>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Navbar\",\r\n  props: {\r\n    msg: String\r\n  },\r\n  components:{}\r\n};\r\n</script>\r\n<style scoped>\r\n.nav-item{\r\n  padding: 10px;\r\n}\r\nul li .nav-link{\r\n  padding: 20px;\r\n}\r\nul li .nav-link:hover{\r\n  background : #2C3E50;\r\n  padding: 20px;\r\n}\r\n</style>\r\n```\r\n\r\n\r\n\r\n### What is expected?\r\nNavbar to toggle\r\n\r\n### What is actually happening?\r\nNot toggling\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11674","RelatedDescription":"Closed issue \"VueRouter not working with Boostrap navbar\" (#11674)"},{"Id":"703314959","IsPullRequest":false,"CreatedAt":"2020-09-17T09:30:53","Actor":"nuochong","Number":"11670","RawContent":null,"Title":"[Vue warn]: Invalid prop: type check failed for prop \"data\". Expected Object, got Undefined ","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/components-props.html](https://vuejs.org/v2/guide/components-props.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```vue\r\nVue.component('my-component', {\r\n  props: {\r\n    // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)\r\n    // Basic type check (`null` and `undefined` values will pass any type validation)\r\n    propA: {\r\n     type:Number,\r\n     required:true\r\n   },\r\n    propB:  {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    propC: {\r\n      type: String,\r\n      required: true\r\n    },\r\n  }\r\n})\r\n```\r\n\r\n```html\r\n<my-component :propA=\"null\" :propB=\"undefined\" :propC=\"undefined\"></my-component>\r\n```\r\n// Basic type check (`null` and `undefined` values will pass any type validation)\r\n\r\n [Vue warn]: Invalid prop: type check failed for prop \"propA\". Expected Number, got Null\r\n [Vue warn]: Invalid prop: type check failed for prop \"propB\". Expected Object, got Undefined\r\n [Vue warn]: Invalid prop: type check failed for prop \"propC\". Expected String, got Undefined\r\n\r\n(Related links)[https://cn.vuejs.org/v2/guide/components-props.html]\r\n\r\n### What is expected?\r\n`null` and `undefined` failed verification\r\n\r\n### What is actually happening?\r\nThrough the verification, there is no error prompt！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11670","RelatedDescription":"Closed issue \"[Vue warn]: Invalid prop: type check failed for prop \"data\". Expected Object, got Undefined \" (#11670)"},{"Id":"703377943","IsPullRequest":false,"CreatedAt":"2020-09-17T08:25:54","Actor":"shwetank03","Number":"11672","RawContent":null,"Title":"Child component loses it model binding capabilities after navigating through different pages","State":"closed","Body":"Hello,\r\n\r\nI have a child component that is a popup having text control inside it.When i click the button in the parent component it opens the popup (child component) and i can see v-model working fine. But as soon as I navigate to the other page come back and open the popup the model binding stops working.I have to refresh the page in order to make it work again, i am using foundation-sites reveal version 6.5.3. Please help!!!\r\n\r\nHere is the code : \r\n\r\n**Parent Component :** \r\n\r\n<template>\r\n  <div id=\"templatePane\">\r\n    <section id=\"mainContent\">\r\n      <div class=\"row\">\r\n        <h1>Hello From Parent Component</h1>\r\n        <TestModal></TestModal>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport $ from 'jquery'\r\nimport 'foundation-sites'\r\nimport {\r\n  Vue, Component\r\n} from 'vue-property-decorator'\r\nimport TestModal from '@/components/TestModal.vue'\r\n@Component({\r\n  components: { TestModal }\r\n})\r\nexport default class ParentComponent extends Vue { }\r\n</script>\r\n\r\n\r\n**Child Component :** \r\n\r\n<template>\r\n  <div>\r\n    <div class=\"reveal\" id=\"exampleModal1\" data-reveal>\r\n      <h1>Awesome. I Have It.</h1>\r\n      <p class=\"lead\">Your couch. It is mine.</p>\r\n      <p>I'm a cool paragraph that lives inside of an even cooler modal. Wins!</p>\r\n      <p>\r\n        <input\r\n          id=\"search-test\"\r\n          name=\"search-test\"\r\n          class=\"input-group-field\"\r\n          type=\"text\"\r\n          v-model=\"searchTest\"\r\n        />\r\n      </p>\r\n      <button\r\n        class=\"close-button\"\r\n        data-close\r\n        aria-label=\"Close modal\"\r\n        @click=\"resetTestModal\"\r\n        type=\"button\"\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <p>\r\n      <button class=\"button\" type=\"button\" data-open=\"exampleModal1\">Click me for a modal</button>\r\n    </p>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport $ from 'jquery'\r\nimport 'foundation-sites'\r\nimport {\r\n  Component, Prop, Vue\r\n} from 'vue-property-decorator'\r\n@Component\r\nexport default class TestModal extends Vue {\r\n  private modal!: FoundationSites.Reveal;\r\n  private searchTest = '';\r\n  private mounted() {\r\n    this.modal = this.getReveal()\r\n  }\r\n\r\n  private getReveal(): FoundationSites.Reveal {\r\n    return new Foundation.Reveal($('#exampleModal1'))\r\n  }\r\n\r\n  private resetTestModal() {\r\n    this.searchTest = ''\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11672","RelatedDescription":"Closed issue \"Child component loses it model binding capabilities after navigating through different pages\" (#11672)"},{"Id":"703350061","IsPullRequest":false,"CreatedAt":"2020-09-17T07:50:49","Actor":"pxeger","Number":"11671","RawContent":null,"Title":"forum.vuejs.org is down","State":"closed","Body":"### Version\r\n2.6.11 (irrelevant but left here because it's autogenerated)\r\n\r\n### Reproduction link\r\n[https://forum.vuejs.org/](https://forum.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nVisit https://forum.vuejs.org/\r\n\r\n### What is expected?\r\nThe forum works\r\n\r\n### What is actually happening?\r\nCloudflare reports a HTTP 520 error (whatever that means - it's not a valid HTTP status code)\r\n\r\n---\r\nSorry this is obviously not the perfect place to put this, but I want to ask a question and I can't because the forum's down. If it matters I'm in the UK.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11671","RelatedDescription":"Closed issue \"forum.vuejs.org is down\" (#11671)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"713134684","IsPullRequest":false,"CreatedAt":"2020-10-01T20:37:59","Actor":"phlegx","Number":"3333","RawContent":null,"Title":"On beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.4.5\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to Vuex. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3333","RelatedDescription":"Closed issue \"On beforeEach Vuex store lost state after call next()\" (#3333)"},{"Id":"701939393","IsPullRequest":true,"CreatedAt":"2020-09-29T13:15:29","Actor":"mestevezdeister","Number":"3323","RawContent":null,"Title":"fix: remove duplicated decodeURIComponent","State":"closed","Body":"As it is mentioned by @claudiocastro I proposed the change made at #3268 adding some e2e tests, in order to get the fix merged. This change is a fix for the #2725 issue. \r\n\r\nBefore this change the URL such as:\r\n- /query/%25\r\n- /query;q=%25\r\n\r\nProduced an initial error: \r\n- URIError: URI malformed at decodeURIComponent (<anonymous>)\r\n\r\nAnd recursive errors:\r\n- TypeError: Cannot read property 'path' of undefined\r\n\r\nFix change fix the issue and other test cases still pass.\r\n\r\nBest regards\r\n\r\nClose #2725 \r\nClose #3268 \r\nClose #3138","Url":"https://github.com/vuejs/vue-router/pull/3323","RelatedDescription":"Closed or merged PR \"fix: remove duplicated decodeURIComponent\" (#3323)"},{"Id":"708937207","IsPullRequest":false,"CreatedAt":"2020-09-26T14:56:47","Actor":"j0Shi82","Number":"3331","RawContent":null,"Title":"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior","State":"closed","Body":"### Version\r\n3.4.4\r\n\r\n### Reproduction link\r\n[https://github.com/j0Shi82/vue-router-issue-3329](https://github.com/j0Shi82/vue-router-issue-3329)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- pull [repo](https://github.com/j0Shi82/vue-router-issue-3329)\r\n- install [nodejs](https://nodejs.org/en/)\r\n- run `npm install` or `yarn install`\r\n- run `npm run-script start` or `yarn run start`\r\n- navigate to `http://localhost:8085/one`\r\n\r\n### What is expected?\r\nShows `http://localhost:8085/two`\r\n\r\n### What is actually happening?\r\nServer Error 500\r\n\r\n---\r\nThis is a follow-up to https://github.com/vuejs/vue-router/issues/3329 with a working reproduction and a little more information about what is actually causing the issue. \r\n\r\nI'm not sure this is a bug or just an edge case that you have to work around yourself. It's caused by combining SSR, async route components, and redirects within navigation guards. I tried dodging async routes on the server and only using them on the client bundle (to still get the benefit of code-splitting), but that led to hydration errors. \r\n\r\nPossible workarounds are switching to static route components, avoiding redirects within navigation guards, or using the `router.push` api instead of `next`. In our own application we went for the third choice on the server, but had to add additional logic to prevent hydration errors and handle the history mode correctly.\r\n\r\nEither way it might make sense to go over the [official SSR guide](https://ssr.vuejs.org/guide/routing.html#routing-with-vue-router) to better communicate this issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3331","RelatedDescription":"Closed issue \"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior\" (#3331)"},{"Id":"709404466","IsPullRequest":false,"CreatedAt":"2020-09-26T07:27:45","Actor":"greenpdx","Number":"3332","RawContent":null,"Title":"How to route into a page directly from browser","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/haoqtnsc/](https://jsfiddle.net/haoqtnsc/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have a verification page after signup. /validate?token=XXXX .  Now I get a 404  as stated in API history-mode server configs. I would like to go to that page directly.  It worked in development using \"npm run serve\" but not on live site.  /validate is a single static page.\r\n\r\n### What is expected?\r\nThe API states the that /user/id where id is some value, does not work.  I can understand that. but a single page with no extra route on the end, I think should work.\r\n\r\n### What is actually happening?\r\n404\r\n\r\n---\r\nIs there a way to jump to a static page in the app?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3332","RelatedDescription":"Closed issue \"How to route into a page directly from browser\" (#3332)"},{"Id":"708578594","IsPullRequest":true,"CreatedAt":"2020-09-25T07:11:17","Actor":"lixx3000","Number":"3330","RawContent":null,"Title":"docs(zh): use html extension","State":"closed","Body":"html书写成htm\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3330","RelatedDescription":"Closed or merged PR \"docs(zh): use html extension\" (#3330)"},{"Id":"707945699","IsPullRequest":false,"CreatedAt":"2020-09-24T13:36:49","Actor":"j0Shi82","Number":"3329","RawContent":null,"Title":"Allow Suppressing (Redirect) Errors in Programmatic Navigation / Navigation Guards","State":"closed","Body":"### What problem does this feature solve?\r\nOn SSR applications there's currently a scenario in which `onReady` is called too early and either the wrong route is rendered, or worse a server error is thrown (depending on your SSR code).\r\n\r\nHere's the scenario:\r\n\r\n- User navigates to route A\r\n- route A has navigation guards that at some point call next('/routeB') to redirect\r\n- onReady fires (https://github.com/vuejs/vue-router/issues/3225), telling the SSR to render route A, the redirect never completes\r\n\r\nThis comes with multiple issues. I have not tested it, but since route A is rendered on the server and route B is rendered on the client, you might run into hydration issues. More than that, in case route A does not match any component, the SSR might unnecessarily return an error based on how you handle routes with no matched components.\r\n\r\nYou can circumvent this issue by using the `router.push` API, but I guess this is not the intended way to navigate within navigation guards?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnext({\r\n  path: '/routeB',\r\n  ignoreRedirectErrors: true\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3329","RelatedDescription":"Closed issue \"Allow Suppressing (Redirect) Errors in Programmatic Navigation / Navigation Guards\" (#3329)"},{"Id":"707641477","IsPullRequest":false,"CreatedAt":"2020-09-23T21:08:21","Actor":"lewandy","Number":"3328","RawContent":null,"Title":"Add amazon web service s3 redirect rules in the docs","State":"closed","Body":"### What problem does this feature solve?\r\nHi dudes!,\r\n\r\nI am configuring an aws s3 bucket with a vue app using vue router in history mode and the docs does not have the example explaining it, would be great that it appear an example about it.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nOn bucket configuration in the section \"Properties/static web hosting\" in the field \"Redirection rules\"\r\n\r\n``` \r\n<RoutingRules>\r\n  <RoutingRule>\r\n    <Condition>\r\n      <HttpErrorCodeReturnedEquals>404</HttpErrorCodeReturnedEquals>\r\n    </Condition>\r\n    <Redirect>\r\n      <ReplaceKeyWith></ReplaceKeyWith>\r\n    </Redirect>\r\n  </RoutingRule>\r\n</RoutingRules>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3328","RelatedDescription":"Closed issue \"Add amazon web service s3 redirect rules in the docs\" (#3328)"},{"Id":"706268555","IsPullRequest":true,"CreatedAt":"2020-09-22T11:10:19","Actor":"fanhualu","Number":"3327","RawContent":null,"Title":"docs: typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3327","RelatedDescription":"Closed or merged PR \"docs: typo\" (#3327)"},{"Id":"703580165","IsPullRequest":false,"CreatedAt":"2020-09-17T13:21:48","Actor":"nek4life","Number":"3326","RawContent":null,"Title":"Async components do not render loading component","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/lucid-haze-mr425](https://codesandbox.io/s/lucid-haze-mr425)\r\n\r\n### Steps to reproduce\r\n```\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nCreate a route with an Async component as showed in the documentation.\r\n\r\nconst AsyncComponent = () => ({\r\n  // The component to load (should be a Promise)\r\n  component: import('./MyComponent.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComponent,\r\n  // A component to use if the load fails\r\n  error: ErrorComponent,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000\r\n})\r\n\r\nReload page.\r\n\r\nLoading component is never rendered.\r\n\r\n```\r\n\r\n\r\n\r\n### What is expected?\r\nLoading component should load while chunk is being fetched\r\n\r\n### What is actually happening?\r\nLoading component does not render\r\n\r\n---\r\nThis functionality is needed for the initial render of the app when using code splitting. Otherwise there is a blank screen while the partial downloads. I tried putting a loader behind the Vue app, but as soon as the app renders the router the page blanks out again so I'd like to have a loader for the actual route itself.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3326","RelatedDescription":"Closed issue \"Async components do not render loading component\" (#3326)"},{"Id":"703483503","IsPullRequest":false,"CreatedAt":"2020-09-17T11:16:02","Actor":"McPo","Number":"3325","RawContent":null,"Title":"Replace is ignored by beforeRouteEnter","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/emcpoland/xb4kqLug/58/](https://jsfiddle.net/emcpoland/xb4kqLug/58/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click Items (The latest item id is \"fetched from the server\" and the user redirected to that items page)\r\n\r\n\r\n2. Click delete (A dialog appears)\r\n\r\n\r\n3. Click ok (The dialog is \"dismissed\" and the user is redirected to the next items page. Replace is used so that when the user clicks back, they don't see the dialog again [they would see the deleted item again, but in a real world situation it would say the item has been deleted])\r\n\r\n\r\n\r\nIt appears the fact that the navigation was meant to be a \"replace\" is dropped because of the navigation guard. Either \"replace\" should naturally be inherited or navigation guards should provide extra context and state that the navigation was meant to be a \"replace\". For now you can workaround this by passing `replace:true` in the props but its quite nasty IMO\r\n\r\n\r\n### What is expected?\r\nPressing back after deleting an item should present with the previous item, not the previous item delete dialog.\r\n\r\n### What is actually happening?\r\nThe delete dialog of the previous item is being shown. This is because despite the dialog using a `replace` navigation, this isnt carried over into the navigation guard. The guard also lacks context as to whether it should have been a replace or not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3325","RelatedDescription":"Closed issue \"Replace is ignored by beforeRouteEnter\" (#3325)"},{"Id":"702136036","IsPullRequest":false,"CreatedAt":"2020-09-15T18:24:12","Actor":"JessicaSachs","Number":"3324","RawContent":null,"Title":"When using abstract router, <router-view> doesn't match the default component on initial render (within iframe/Cypress)","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://github.com/JessicaSachs/cypress-abstract-router/](https://github.com/JessicaSachs/cypress-abstract-router/)\r\n\r\n### Steps to reproduce\r\nWe're trying to use abstract router to make components using Router testable within Cypress. It's almost working. The initial mount fails to match the default `Home` component, and so the `<router-view>` is empty.\r\n\r\nSubsequent clicks on `<router-link>` cause `<router-view>` to render fine.\r\n\r\n1. Clone repo & yarn install\r\n2. `npm run test:components`\r\n3. open `App.spec.js`\r\n\r\n### What is expected?\r\nInitial mount of App component should render the `<router-view>`\r\n\r\n### What is actually happening?\r\nNothing is being mounted inside of `<router-view>`\r\n\r\nIf you manually interact with the About & Home links, the `<router-view>` will properly find the components for About & Home. It's only the initial render that isn't working correctly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3324","RelatedDescription":"Closed issue \"When using abstract router, <router-view> doesn't match the default component on initial render (within iframe/Cypress)\" (#3324)"},{"Id":"701021657","IsPullRequest":true,"CreatedAt":"2020-09-14T14:48:43","Actor":"Jawtoch","Number":"3322","RawContent":null,"Title":"docs(fr): correction of nested routes and components","State":"closed","Body":"Posts route did not match with the above documentation route path.\r\nUserHome and UserProfile were used for the same route, correction of UserHome to UserProfile\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3322","RelatedDescription":"Closed or merged PR \"docs(fr): correction of nested routes and components\" (#3322)"},{"Id":"700993591","IsPullRequest":false,"CreatedAt":"2020-09-14T10:58:55","Actor":"Spirit04eK","Number":"3321","RawContent":null,"Title":"DOM nodes are being hold by router links in nested views","State":"open","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://unpkg.com/vue@2.6.12/dist/vue.min.js\"></script>\r\n    <script src=\"https://unpkg.com/vue-router@3.4.3/dist/vue-router.min.js\"></script>\r\n\r\n    <div id=\"app\">\r\n      <router-link :to=\"{name: 'memory_leak'}\">Go to Memory Leak</router-link>\r\n      <router-link to=\"/\">home (using this link won't hold memory)</router-link>\r\n      <router-view></router-view>\r\n    </div>\r\n\r\n    <script>\r\n      const leak = {\r\n        template: `\r\n        <div style=\"word-break: break-all;\">\r\n    <router-link to=\"/\">Back</router-link>\r\n    <br>\r\n    <span v-for=\"span in spans\" :key=\"span.id\">{{ span.text }}</span>\r\n  </div>\r\n        `,\r\n        data() {\r\n          return {\r\n            spans: [],\r\n          }\r\n        },\r\n        created() {\r\n          for (let i = 1; i <= 10; i++) {\r\n            let obj = {\r\n              id: i,\r\n              text: Array(10).fill('a').join(''),\r\n            }\r\n            this.spans.push(obj)\r\n          }\r\n        },\r\n      }\r\n\r\n      const ParentMemoryLeak = {\r\n        template: `\r\n    <div>\r\n        <h1>Parent Memory leak</h1>\r\n        <br>\r\n        <router-view></router-view>\r\n    </div>\r\n    `,\r\n\r\n        name: 'ParentMemoryLeak',\r\n      }\r\n\r\n      const routes = [\r\n        {\r\n          path: '/parent-memory-leak',\r\n          component: ParentMemoryLeak,\r\n          children: [\r\n            {\r\n              path: 'memory-leak',\r\n              name: 'memory_leak',\r\n              component: leak,\r\n            },\r\n          ],\r\n        },\r\n        { path: '/', component: ParentMemoryLeak },\r\n      ]\r\n\r\n      const router = new VueRouter({\r\n        routes,\r\n      })\r\n\r\n      new Vue({\r\n        el: '#app',\r\n        router,\r\n      })\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Follow this link for open project\r\n2. Open in new window with codesandbox  \r\n3. Open performance monitor in Google Chrome (emphasize on quantity DOM nodes)  \r\n4. Click on the link \"Go to Memory Leak\" (pay attention to how it has changed quantity DOM nodes)  \r\n5. Click on the link \"Back\" (not the home link)\r\n6. Amount DOM nodes not changed.  \r\n\r\nP.S. If you do this procedure several times amount DOM nodes should changed, but the original will remain forever.  \r\n\r\n\r\n### What is expected?\r\nit is expected that after each click on the link \"back\" DOM nodes will be cleared.  \r\n\r\n### What is actually happening?\r\nNow, they are cleared only after the first transition, but still remain in the memory DOM nodes for the first transition.  \r\n\r\n---\r\nhttps://youtu.be/bjz1N0BD_2c\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3321","RelatedDescription":"Open issue \"DOM nodes are being hold by router links in nested views\" (#3321)"},{"Id":"699538268","IsPullRequest":false,"CreatedAt":"2020-09-11T17:09:41","Actor":"martinmckenna","Number":"3320","RawContent":null,"Title":"[Request] Remove Redundant Navigation Errors ","State":"closed","Body":"### What problem does this feature solve?\r\nThese console errors are unnecessary. Vue Router knows itself whether or not something is redundant, so why not just silently return early with no error? Seems like a pointless error\r\n\r\nEspecially annoying when you have error reporting like Sentry (and even more annoying when you're paying for it) and getting thousands of reports and having to intentionally ignore them\r\n\r\n### What does the proposed API look like?\r\nNo console logging\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3320","RelatedDescription":"Closed issue \"[Request] Remove Redundant Navigation Errors \" (#3320)"},{"Id":"698911220","IsPullRequest":true,"CreatedAt":"2020-09-11T07:56:58","Actor":"Tubbebubbe","Number":"3319","RawContent":null,"Title":"Allow objects to be passed in as params in Location","State":"closed","Body":"Objects can be passed on as parameters to `this.$router.push(Location)`. This PR prevents linter from emitting errors.","Url":"https://github.com/vuejs/vue-router/pull/3319","RelatedDescription":"Closed or merged PR \"Allow objects to be passed in as params in Location\" (#3319)"},{"Id":"696701866","IsPullRequest":false,"CreatedAt":"2020-09-09T13:10:37","Actor":"AeonFr","Number":"3318","RawContent":null,"Title":"\"Loading chunk failed\" error causes unwanted redirect","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-router-example-forked-74fsg?file=/router/index.js](https://codesandbox.io/s/vue-router-example-forked-74fsg?file=/router/index.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n0. Download the project from CodeSandbox or use any project that has async components in routes\r\n1. Compile the application\r\n2. Delete the compiled async chunks (e.g. with a command like this one:\r\n```\r\nfind ./public/assets/chunks -type f -name '[0-9]*.[0-9a-zA-Z]*.js' -delete\r\n```\r\n)\r\n\r\n3. Try to navigate to a route whose component is async\r\n\r\n\r\n### What is expected?\r\nIf a chunk fails to load or there is another navigation error, no redirect should happen, or it should be a way to prevent it.\r\n\r\nThe `onError` should be used by the user to control the behaviour\r\n\r\n### What is actually happening?\r\nWhenever a chunk fails to load, the router redirects to whatever `router.options.base` is defined to.\r\n\r\nThis redirect can't be prevented even if the `onError` catch is used.\r\n\r\n\r\n\r\n---\r\nI would like to show an error screen and suggest the users to reload the page if the navigation fails.\r\n\r\nBut since the route is overwritten, reloading the page would make users end up in a totally different place from where they wanted to go.\r\n\r\nThis is an example code to give context on what I'm trying to achieve\r\n\r\n```\r\nrouter.onError((error) => {\r\n  const pattern = /Loading chunk (\\d)  failed/g;\r\n  const isChunkLoadFailed = error.message.match(pattern);\r\n  const targetPath = router.history.pending.fullPath;\r\n  if (isChunkLoadFailed) {\r\n    // Here it would be nice to show the user a button to try refreshing the page,\r\n    // But A few milliseconds after this code is executed, a redirection to \"/\" happens\r\n    // Therefore refreshing the page takes you to another page\r\n```\r\n\r\nFor anyone encountering this error, I found out you can use `history.replaceState` to go back to the current path. But I find it weird to have to do this in the first place.\r\n\r\n```\r\n// Handle missing chunks\r\nrouter.onError((error) => {\r\n  const pattern = /Loading chunk (\\d)  failed/g;\r\n  const isChunkLoadFailed = error.message.match(pattern);\r\n  const targetPath = router.history.pending.fullPath;\r\n\r\n  if (isChunkLoadFailed) {\r\n    console.error(error);\r\n\r\n    modals.showError();\r\n\r\n    history.replaceState(\"\", \"\", targetPath);\r\n  } else {\r\n    throw error;\r\n  }\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3318","RelatedDescription":"Closed issue \"\"Loading chunk failed\" error causes unwanted redirect\" (#3318)"},{"Id":"695321730","IsPullRequest":false,"CreatedAt":"2020-09-07T18:11:41","Actor":"zeyadsharo","Number":"3317","RawContent":null,"Title":"app.js:41691 TypeError: Cannot read property '$createElement' of undefined","State":"closed","Body":"\r\napp.js\r\n```\r\nimport {router} from './plugins/vuerouter';\r\nimport admin from './components/admin/admin';\r\nnew Vue({\r\n    vuetify,\r\n    router,\r\n    component: {\r\n        admin\r\n    },\r\n     render: h => h(admin)\r\n}).$mount('#app')\r\n```\r\nvuerouter.js\r\n\r\n```\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nVue.use(VueRouter);\r\n\r\n\r\nimport test from '../components/test.vue';\r\n\r\nconst routes = [{\r\n    components: test,\r\n    name: \"test\",\r\n    path: \"/test\"\r\n}];\r\nexport const router=  new VueRouter({\r\n    routes // short for `routes: routes`\r\n})\r\n\r\n```\r\n\r\nadmin.vue\r\n```\r\n<template>\r\n  <v-app id=\"inspire\">\r\n    <v-navigation-drawer v-model=\"drawer\" app>\r\n      <v-list dense>\r\n        <v-list-item link>\r\n          <v-list-item-action>\r\n            <v-icon>mdi-home</v-icon>\r\n          </v-list-item-action>\r\n          <v-list-item-content>\r\n            <v-list-item-title>Home</v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n        <v-list-item>\r\n          <v-list-item-action>\r\n            <v-icon>mdi-email</v-icon>\r\n          </v-list-item-action>\r\n          <v-list-item-content>\r\n            <v-list-item-title>Contact</v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n        <v-list-item @click=\"logout\">\r\n          <v-list-item-action>\r\n            <v-icon>mdi-power</v-icon>\r\n          </v-list-item-action>\r\n          <v-list-item-content>\r\n            <v-list-item-title>Logout</v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n        <router-link tag=\"li\" to=\"/test\" class=\"list-group-item\">\r\n           test\r\n        </router-link>\r\n      </v-list>\r\n\r\n    </v-navigation-drawer>\r\n\r\n    <v-app-bar app color=\"indigo\" dark>\r\n      <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\r\n      <v-toolbar-title>Application</v-toolbar-title>\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <v-container class=\"fill-height\" fluid>\r\n        <router-view ></router-view>\r\n      </v-container>\r\n    </v-main>\r\n    <v-footer color=\"indigo\" app>\r\n      <span class=\"white--text\">&copy; {{ new Date().getFullYear() }}</span>\r\n    </v-footer>\r\n  </v-app>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    source: String,\r\n  },\r\n  data: () => ({\r\n    drawer: null,\r\n  }),\r\n  methods: {\r\n    logout() {\r\n      axios.post(\"/logout\").then((response) => (window.location.href = \"/\"));\r\n    },\r\n  },\r\n};\r\n</script>\r\n```\r\n\r\n**when I clicked on the router link test I get the following error**\r\n```\r\nvue-router] Failed to resolve async component render: TypeError: Cannot read property '$createElement' of undefined\r\nwarn @ app.js:39190\r\n(anonymous) @ app.js:41200\r\n(anonymous) @ app.js:41270\r\n(anonymous) @ app.js:41213\r\n(anonymous) @ app.js:41238\r\n(anonymous) @ app.js:41238\r\nflatMapComponents @ app.js:41237\r\n(anonymous) @ app.js:41173\r\niterator @ app.js:41426\r\nstep @ app.js:41072\r\nstep @ app.js:41076\r\nrunQueue @ app.js:41080\r\nconfirmTransition @ app.js:41456\r\ntransitionTo @ app.js:41326\r\npush @ app.js:41796\r\npush @ app.js:42127\r\nhandler @ app.js:40276\r\ninvokeWithErrorHandling @ app.js:44098\r\ninvoker @ app.js:44423\r\noriginal._wrapper @ app.js:49782\r\napp.js:39190 [vue-router] uncaught error during route navigation:\r\nwarn @ app.js:39190\r\nabort @ app.js:41381\r\n(anonymous) @ app.js:41433\r\n(anonymous) @ app.js:41205\r\n(anonymous) @ app.js:41270\r\n(anonymous) @ app.js:41213\r\n(anonymous) @ app.js:41238\r\n(anonymous) @ app.js:41238\r\nflatMapComponents @ app.js:41237\r\n(anonymous) @ app.js:41173\r\niterator @ app.js:41426\r\nstep @ app.js:41072\r\nstep @ app.js:41076\r\nrunQueue @ app.js:41080\r\nconfirmTransition @ app.js:41456\r\ntransitionTo @ app.js:41326\r\npush @ app.js:41796\r\npush @ app.js:42127\r\nhandler @ app.js:40276\r\ninvokeWithErrorHandling @ app.js:44098\r\ninvoker @ app.js:44423\r\noriginal._wrapper @ app.js:49782\r\napp.js:41382 TypeError: Cannot read property '$createElement' of undefined\r\n    at render (app.js:39034)\r\n    at app.js:41211\r\n    at app.js:41238\r\n    at Array.map (<anonymous>)\r\n    at app.js:41238\r\n    at Array.map (<anonymous>)\r\n    at flatMapComponents (app.js:41237)\r\n    at app.js:41173\r\n    at iterator (app.js:41426)\r\n    at step (app.js:41072)\r\n```\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3317","RelatedDescription":"Closed issue \"app.js:41691 TypeError: Cannot read property '$createElement' of undefined\" (#3317)"},{"Id":"694829898","IsPullRequest":false,"CreatedAt":"2020-09-07T07:56:29","Actor":"yoonasy","Number":"3316","RawContent":null,"Title":"Error Redirected ","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[http://xxx.xxx](http://xxx.xxx)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`vue.runtime.esm.js?2b0e:1888 Error: Redirected when going from \"/home\" to \"/product\" via a navigation guard.`\r\n\r\n### home.vue\r\n`this.$router.push('/product')`\r\n\r\n\r\n## a router guard `permission.js`\r\n```\r\nasync function initRouter (router) {\r\n  router.beforeEach(async (to, from, next) => {\r\n    NProgress.done(true)\r\n    NProgress.remove()\r\n    NProgress.start()\r\n\r\n    const token = store.state.user.token\r\n    const info = store.state.user.info\r\n\r\n    if (to.meta.requireAuth && !token) {\r\n      return next({ // Here is an error，Multiple redirection？\r\n        path: '/login',\r\n        query: { redirect: to.fullPath },\r\n      })\r\n    } else if (to.path === '/login' && token) {\r\n      return next({ path: '/home' })\r\n    }\r\n\r\n    if (token && !info) {\r\n      await store.dispatch('user/getInfo')\r\n    }\r\n\r\n    store.commit('user/SET_INIT', true)\r\n\r\n    next()\r\n  })\r\n\r\n  router.afterEach(() => {\r\n    NProgress.done()\r\n  })\r\n}\r\n```\r\n\r\n### What is expected?\r\nWhen redirecting, modify the redirect\r\n\r\n### What is actually happening?\r\nerror\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3316","RelatedDescription":"Closed issue \"Error Redirected \" (#3316)"},{"Id":"694211166","IsPullRequest":true,"CreatedAt":"2020-09-06T07:59:45","Actor":"BenceSzalai","Number":"3313","RawContent":null,"Title":"docs: Added section to Caveats using history mode","State":"closed","Body":"Calling `next(false)` may cause issue (blank page) when the user navigates to a different URL using the address bar, and it should be mentioned. Also added workaround with example.\r\n\r\nRelated issue: https://github.com/vuejs/vue-router/issues/2458","Url":"https://github.com/vuejs/vue-router/pull/3313","RelatedDescription":"Closed or merged PR \"docs: Added section to Caveats using history mode\" (#3313)"},{"Id":"694258519","IsPullRequest":false,"CreatedAt":"2020-09-06T07:55:53","Actor":"z-pw","Number":"3315","RawContent":null,"Title":"Questions about vue-rouer addRoutes","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/z-pw/project/editor/ZjLeon](https://codepen.io/z-pw/project/editor/ZjLeon)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nmain.js:\r\n\r\n```\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router, { initLayout } from './router'\r\nimport store from './store'\r\n\r\nrequire('../mock/index')\r\n\r\nVue.config.productionTip = false\r\ninitLayout()\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n```\r\n\r\nrouter.js\r\n\r\n```\r\nexport async function initLayout () {\r\n  await axios.get('http://localhost/layout').then((res) => {\r\n    let path = '@'  +  res.data[0].component\r\n    // res.data[0].component = () => import(path)\r\n    res.data[0].component = Promise.resolve(import(path))\r\n    router.addRoutes([...res.data])\r\n  })\r\n}\r\n```\r\n\r\nmock.js\r\n\r\n```\r\nexport default Mock.mock('http://localhost/layout', [{\r\n  path: '/about',\r\n  name: 'About',\r\n  // route level code-splitting\r\n  // this generates a separate chunk (about.[hash].js) for this route\r\n  // which is lazy-loaded when the route is visited.\r\n  component: '/views/About.vue'\r\n}])\r\n```\r\n\r\n### What is expected?\r\nWhen entering the homepage, automatically load components through addRoutes\r\n进入主页时，通过addRoutes自动加载组件到vue。\r\n\r\n### What is actually happening?\r\nCannot find module '@/views/About.vue'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3315","RelatedDescription":"Closed issue \"Questions about vue-rouer addRoutes\" (#3315)"},{"Id":"694251511","IsPullRequest":false,"CreatedAt":"2020-09-06T04:57:29","Actor":"z-pw","Number":"3314","RawContent":null,"Title":" Questions about vue-rouer addRoutes","State":"closed","Body":"main.js:\r\n```\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router, { initLayout } from './router'\r\nimport store from './store'\r\n\r\nrequire('../mock/index')\r\n\r\nVue.config.productionTip = false\r\ninitLayout()\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n\r\n```\r\n\r\nrouter.js\r\n```\r\nexport async function initLayout () {\r\n  await axios.get('http://localhost/layout').then((res) => {\r\n    let path = '@' + res.data[0].component\r\n    // res.data[0].component = () => import(path)\r\n    res.data[0].component = Promise.resolve(import(path))\r\n    router.addRoutes([...res.data])\r\n  })\r\n}\r\n```\r\n\r\nmock.js\r\n```\r\nexport default Mock.mock('http://localhost/layout', [{\r\n  path: '/about',\r\n  name: 'About',\r\n  // route level code-splitting\r\n  // this generates a separate chunk (about.[hash].js) for this route\r\n  // which is lazy-loaded when the route is visited.\r\n  component: '/views/About.vue'\r\n}])\r\n```\r\n\r\n\r\nThe mock.js file intercepts the request for http://localhost/layout. When main.js executes initLayout, the corresponding route is obtained and then imported in addRoutes.\r\n\r\n\r\nWhy does the browser prompt Error: Cannot find module'@/views/About.vue'\r\n\r\n\r\nHow to solve this???","Url":"https://github.com/vuejs/vue-router/issues/3314","RelatedDescription":"Closed issue \" Questions about vue-rouer addRoutes\" (#3314)"},{"Id":"692152089","IsPullRequest":false,"CreatedAt":"2020-09-03T17:36:42","Actor":"alexey2baranov","Number":"3312","RawContent":null,"Title":"Documentation request: How to import router.push() error types","State":"closed","Body":"### What problem does this feature solve?\r\nAfter https://github.com/vuejs/vue-router/issues/2881 we have new promise api which rejects pushes with errors which are differed by `error.type` field. But documentation doesn't cover those type's values. Those type's values are very important inside tests. But i don't see how to import them hire https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort\r\n\r\n### What does the proposed API look like?\r\nI suggest to append documentation with simple scetch example which\r\n1. does router.push()\r\n2. catch and compare thrown error **with imported constant**\r\n\r\nHave a nice day..\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3312","RelatedDescription":"Closed issue \"Documentation request: How to import router.push() error types\" (#3312)"},{"Id":"692149803","IsPullRequest":false,"CreatedAt":"2020-09-03T17:28:57","Actor":"alexey2baranov","Number":"3311","RawContent":null,"Title":"Documentation request: How to import route push error types constant","State":"closed","Body":"After https://github.com/vuejs/vue-router/issues/2881 we have new promise api which rejects pushes with errors which are differed by `error.type` field. But documentation is not cover those type values. Those type's values are very important inside tests. But i don't see how to import them.  https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort\r\n\r\nSo I suggest to append documentation with simple scetch example which\r\n1. does router.push()\r\n2. redirects inside Navigation Gurards\r\n3. catch and compare thrown error **with imported constant**\r\n\r\nHave a nice day..","Url":"https://github.com/vuejs/vue-router/issues/3311","RelatedDescription":"Closed issue \"Documentation request: How to import route push error types constant\" (#3311)"},{"Id":"691599366","IsPullRequest":false,"CreatedAt":"2020-09-03T03:18:35","Actor":"xiaoningzihai","Number":"3310","RawContent":null,"Title":"Redirected when going","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nrouter.beforeEach((to, from, next) => {\r\nlet query = Object.keys(to.query || {});\r\nif (query.includes('code')) {\r\nnext();\r\n} else {\r\nnext({\r\npath: to.path,\r\nquery: {\r\n...to.query,\r\ncode: window.prodInfo.code\r\n}\r\n});\r\n}\r\n});\r\n\r\nerror message: Redirected when going from \"/main/entry/product?code=\" to \"/main/entry/mein\" via a navigation guard.\r\n\r\ni want use global \"beforeEach\"\r\ni think, why dont compare to fullpath, Then output console error message","Url":"https://github.com/vuejs/vue-router/issues/3310","RelatedDescription":"Closed issue \"Redirected when going\" (#3310)"},{"Id":"691585943","IsPullRequest":false,"CreatedAt":"2020-09-03T02:45:36","Actor":"xiaoningzihai","Number":"3309","RawContent":null,"Title":"Redirected when going from \"/main/entry/product?code=\" to \"/main/entry/mein\" via a navigation guard.","State":"closed","Body":"router.beforeEach((to, from, next) => {\r\n\tlet query = Object.keys(to.query || {});\r\n\tif (query.includes('code')) {\r\n\t\tnext();\r\n\t} else {\r\n\t\tnext({\r\n\t\t\tpath: to.path,\r\n\t\t\tquery: {\r\n\t\t\t\t...to.query,\r\n\t\t\t\tcode: window.prodInfo.code\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\n\r\nerror message: Redirected when going from \"/main/entry/product?code=\" to \"/main/entry/mein\" via a navigation guard.\r\n\r\n\r\ni want use global \"beforeEach\"\r\ni think, why dont compare  to fullpath, Then output console error message\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3309","RelatedDescription":"Closed issue \"Redirected when going from \"/main/entry/product?code=\" to \"/main/entry/mein\" via a navigation guard.\" (#3309)"},{"Id":"690481778","IsPullRequest":false,"CreatedAt":"2020-09-02T07:43:02","Actor":"brianpmaher","Number":"3308","RawContent":null,"Title":"vnode passed to directive missing data.on handlers for router-link","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5fr2Luha/8/](https://jsfiddle.net/5fr2Luha/8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a custom directive\r\n2. Use custom directive on router-link with tag button\r\n3. Note the vnode parameter passed to the directive bind hook\r\n\r\n### What is expected?\r\nsince an on.click handler is being added in vue-router to the element, I'd expect to see that when the directive is bound to the element.\r\n\r\n### What is actually happening?\r\nThere are no click events in the vnode passed to the directive bind event.\r\n\r\n---\r\nNot sure if this is an issue with vue router or vue, but figured I'd start here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3308","RelatedDescription":"Closed issue \"vnode passed to directive missing data.on handlers for router-link\" (#3308)"},{"Id":"688566174","IsPullRequest":false,"CreatedAt":"2020-08-29T17:28:20","Actor":"Mitch-i","Number":"3307","RawContent":null,"Title":"UnhandledPromiseRejectionWarning: Error: Redirected when going from \"/\" to \"/en\" via a navigation guard.","State":"closed","Body":"### Version\r\n3.4.3\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-hackernews-2.0](https://github.com/vuejs/vue-hackernews-2.0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ninstall last packages and webpack 4\r\n\r\n### What is expected?\r\nWhy in this code is wrote that it redirect only // next('/') or next({ path: '/' }) -> redirect \r\nif it redirect all next( something)?\r\nAnd I can't use it \r\n\r\n`\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.meta.auth && !store.getters.isLoggedIn) {\r\n    next({\r\n      path: '/login'\r\n    })\r\n  }\r\n  else {\r\n    next()\r\n  }\r\n`\r\n\r\nbecause get error always if next paramenter is present ('/home' or {name: 'home'} for example)\r\n\r\n\r\n`\r\n\r\n    } else if (\r\n          typeof to === 'string' ||\r\n          (typeof to === 'object' &&\r\n            (typeof to.path === 'string' || typeof to.name === 'string'))\r\n        ) {\r\n          // next('/') or next({ path: '/' }) -> redirect\r\n          abort(createNavigationRedirectedError(current, route));\r\n          if (typeof to === 'object' && to.replace) {\r\n            this$1.replace(to);\r\n          } else {\r\n            this$1.push(to);\r\n          }\r\n        } else {\r\n`\r\n\r\n### What is actually happening?\r\nerror\r\n\r\nUnhandledPromiseRejectionWarning: Error: Redirected when going from \"/\" to \"/en\" via a navigation guard.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3307","RelatedDescription":"Closed issue \"UnhandledPromiseRejectionWarning: Error: Redirected when going from \"/\" to \"/en\" via a navigation guard.\" (#3307)"},{"Id":"688372144","IsPullRequest":false,"CreatedAt":"2020-08-29T11:11:32","Actor":"Mikilll94","Number":"3306","RawContent":null,"Title":"Ability to set parent named view from child route","State":"closed","Body":"### What problem does this feature solve?\r\nI have the following router configuration:\r\n\r\n```vue\r\n{\r\n    path: '/home',\r\n    components: {\r\n        default: HomePage,\r\n        leftSidebar: DefaultLeftSidebar\r\n    },\r\n    children: [\r\n        {\r\n            path: 'emails',\r\n            component: UserEmailsSubscriptions\r\n        },\r\n        {\r\n            path: 'profile',\r\n            components: {\r\n                default: UserProfile,\r\n                leftSidebar: UserProfileLeftSidebar, // not possible\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nAs you can see, on route `/home` I use a named view for the left sidebar. I need to replace this sidebar with `UserProfileLeftSidebar` on `/home/profile` route. However, this not possible because `leftSidebar` named view is defined in the parent view.\r\n\r\nI think that this a pretty common use case that you have a navigation bar or sidebar that needs to be replaced or modified on some router paths.\r\n\r\nI would be very glad if someone could share a solution how to implement a dynamic sidebar or navigation bar using vue-router. \r\n\r\n### What does the proposed API look like?\r\nThe API could look like in the example above. However, it requires that every named view must have globally unique name.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3306","RelatedDescription":"Closed issue \"Ability to set parent named view from child route\" (#3306)"},{"Id":"686419438","IsPullRequest":false,"CreatedAt":"2020-08-26T15:53:46","Actor":"martinmckenna","Number":"3305","RawContent":null,"Title":"Prevent Component From Re-rendering when navigating from empty route to \"/\"","State":"closed","Body":"### What problem does this feature solve?\r\nThis solves a redundant re-render because your homepage component should be rendering on both `hello.com` and `hello.com/?query=hello`\r\n\r\n### What does the proposed API look like?\r\n`router.push({ name: from.name, query: { something: 'example' }})` should be smart enough to not re-render the component if the path hasn't changed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3305","RelatedDescription":"Closed issue \"Prevent Component From Re-rendering when navigating from empty route to \"/\"\" (#3305)"},{"Id":"686136013","IsPullRequest":false,"CreatedAt":"2020-08-26T10:38:49","Actor":"Vanojx1","Number":"3304","RawContent":null,"Title":"Completely standalone routers on same Vue app","State":"closed","Body":"### What problem does this feature solve?\r\nIm implementing a Vue app that has a main column with his router and a sidebar with his own router too, the first router route depends on the current url and the sidebar router depends on an abstract history. Right now this cannot be done so i've forked the vue-router repo and implemented in my own way, you can find it here https://github.com/Vanojx1/vue-router. I hope that this feature will be implemented in the future as it may be very usefull.\r\n\r\n### What does the proposed API look like?\r\nHere an example of the implementation: \r\n\r\n```\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst Foo = { template: `<div class=\"foo\"><h1>foo</h1></div>` }\r\nconst Bar = {\r\n  template: `\r\n    <div class=\"bar\">\r\n      <h1>bar</h1>\r\n      <router-link standalone router-name=\"testRouter\" to=\"/buz\">TOBUZ</router-link>\r\n    </div>`\r\n}\r\nconst Buz = {\r\n  template: `\r\n    <div class=\"buz\">\r\n      <h1>buz</h1>\r\n      <router-link standalone router-name=\"testRouter\" to=\"/\">TOBAR</router-link>\r\n    </div>`\r\n}\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: __dirname,\r\n  routes: [\r\n    { path: '/', component: Foo }\r\n  ]\r\n})\r\n\r\nconst testRouter = new VueRouter({\r\n  mode: 'abstract',\r\n  base: __dirname,\r\n  routes: [\r\n    { path: '/', component: Bar },\r\n    { path: '/buz', component: Buz }\r\n  ]\r\n})\r\n\r\nnew Vue({\r\n  router,\r\n  template: `\r\n    <div id=\"app\">\r\n      <router-view />\r\n      <router-view :standalone=\"$options.testRouter\" router-name=\"testRouter\" />\r\n    </div>\r\n  `,\r\n  testRouter\r\n}).$mount('#app')\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3304","RelatedDescription":"Closed issue \"Completely standalone routers on same Vue app\" (#3304)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"713664085","IsPullRequest":false,"CreatedAt":"2020-10-02T14:27:08","Actor":"leerw4","Number":"1843","RawContent":null,"Title":"Offer types for `getters` on the Store instance","State":"open","Body":"### What problem does this feature solve?\r\nThe `getters` key of the Store instance has type `any` which is not useful. While type casting can be used, it's just a pain to have to do every single place you would want to reference a getter.\r\n\r\n### What does the proposed API look like?\r\nOne solution would be to offer a second (optional) generic type of the `Store` type that would default to `any`, and have that value be used for the type of the `getters` key.\r\n\r\n```\r\nexport declare class Store<S, G = any> {\r\n  constructor(options: StoreOptions<S>);\r\n\r\n  readonly state: S;\r\n  readonly getters: G;\r\n\r\n  ...\r\n}\r\n```\r\n\r\nI've tested the above solution and it works and should also be backwards compatible.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1843","RelatedDescription":"Open issue \"Offer types for `getters` on the Store instance\" (#1843)"},{"Id":"706256945","IsPullRequest":false,"CreatedAt":"2020-10-02T07:17:54","Actor":"DeeDab","Number":"1836","RawContent":null,"Title":"Error in VuexLogger on splice array","State":"closed","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\nnone\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnable Logger for Vuex (createLogger)\r\n\r\n1. Add to store param with an array value (list)\r\n2. Create a mutation to change param above (list.splice(0,1))\r\n3. Call mutation\r\n4. Got error\r\n\r\n### What is expected?\r\nNo errors\r\n\r\n### What is actually happening?\r\n```\r\n TypeError: Cannot convert a Symbol value to a number\r\n    at vue.js:431\r\n    at Map.forEach (<anonymous>)\r\n    at trigger (vue.js:430)\r\n    at Object.set (vue.js:592)\r\n    at Proxy.splice (<anonymous>)\r\n    at Proxy.arrayInstrumentations.<computed> (vue.js:522)\r\n    at Store.REMOVE_CALCULATION (C:\\Users\\denva\\WebstormProjects\\agenta.web\\src\\store\\modules\\Claculator\\Calculator.ts:54)\r\n    at wrappedMutationHandler (vuex.esm-bundler.js:802)\r\n    at commitIterator (vuex.esm-bundler.js:434)\r\n    at Array.forEach (<anonymous>)\r\n```\r\n\r\n---\r\nIf I disable Logger no errors will\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1836","RelatedDescription":"Closed issue \"Error in VuexLogger on splice array\" (#1836)"},{"Id":"712149753","IsPullRequest":false,"CreatedAt":"2020-10-02T07:14:47","Actor":"JanDevDE","Number":"1839","RawContent":null,"Title":"State changes not being rerendered when updating object","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q32df9tj/45/](https://jsfiddle.net/q32df9tj/45/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOverwrite object with new object using state.object = newObject -> No rerender\r\n\r\nOverwrite object with state.user = Object.assign({}, user) ->  Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is expected?\r\nstate.user = user <- Should rerender, but apparently it doesn't because it's passing the value apparently.\r\n\r\nstate.user = Object.assign({}, user) <- Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is actually happening?\r\nOnly Object.assign({state.user}, user) assigns the value and causes Profile.vue to refresh\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1839","RelatedDescription":"Closed issue \"State changes not being rerendered when updating object\" (#1839)"},{"Id":"679121085","IsPullRequest":false,"CreatedAt":"2020-10-02T07:11:32","Actor":"jappyjan","Number":"1815","RawContent":null,"Title":"dispatch not returning a promise (?)","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://sentry.io/share/issue/a2b85fb22b50486db8dc0eaa197a8679/](https://sentry.io/share/issue/a2b85fb22b50486db8dc0eaa197a8679/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ndispatch an action\r\n\r\n### What is expected?\r\nthe action should return a Promise with catch, then and finally props.\r\n\r\n### What is actually happening?\r\ncalling .finally on the promise ends in an erorr being thrown with the message \"finally is not a function\"\r\n\r\n---\r\nsentry caught the error in this piece of code:\r\n\r\ndispatch('action-name', args).finally(() => state.someValue = false)\r\n\r\nthe caught error message is \"r(...).finally is not a function\" while r is the minified name of dispatch\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1815","RelatedDescription":"Closed issue \"dispatch not returning a promise (?)\" (#1815)"},{"Id":"713137452","IsPullRequest":false,"CreatedAt":"2020-10-02T07:11:09","Actor":"phlegx","Number":"1842","RawContent":null,"Title":"On vue-router beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to vue-router. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1842","RelatedDescription":"Closed issue \"On vue-router beforeEach Vuex store lost state after call next()\" (#1842)"},{"Id":"712730669","IsPullRequest":false,"CreatedAt":"2020-10-01T10:55:47","Actor":"uncodable","Number":"1841","RawContent":null,"Title":"Access store within a router (non-component)","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1841","RelatedDescription":"Closed issue \"Access store within a router (non-component)\" (#1841)"},{"Id":"712729512","IsPullRequest":false,"CreatedAt":"2020-10-01T10:54:05","Actor":"uncodable","Number":"1840","RawContent":null,"Title":"Access store within vue-router","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1840","RelatedDescription":"Closed issue \"Access store within vue-router\" (#1840)"},{"Id":"712049161","IsPullRequest":true,"CreatedAt":"2020-09-30T15:28:00","Actor":"anschwa","Number":"1838","RawContent":null,"Title":"docs: warn about calling unsubscribe (fix #1050)","State":"open","Body":"I added a warning text to the docs about remembering to call `unsubscribe` when subscribing to the store.","Url":"https://github.com/vuejs/vuex/pull/1838","RelatedDescription":"Open PR \"docs: warn about calling unsubscribe (fix #1050)\" (#1838)"},{"Id":"709900554","IsPullRequest":false,"CreatedAt":"2020-09-28T03:26:47","Actor":"zhoufanglu","Number":"1837","RawContent":null,"Title":"关于取state里面参数的方式问题","State":"closed","Body":"我看有的项目取vuex内的state的值是用getters取的，请问这种方式正确吗？代码如下\r\n```js\r\nconst getters = {\r\n  getChangeWidth: (state) => state.app.changeWidth,\r\n  getTheme: (state) => state.app.theme,\r\n  getDark: (state) => state.app.dark,\r\n}\r\n```\r\n而我自己取state内的值我会用`this.$state.theme`方式来取，或者用辅助函数\r\n\r\n请问哪种方式更好呢？","Url":"https://github.com/vuejs/vuex/issues/1837","RelatedDescription":"Closed issue \"关于取state里面参数的方式问题\" (#1837)"},{"Id":"705696437","IsPullRequest":false,"CreatedAt":"2020-09-21T15:19:59","Actor":"alexccc333","Number":"1835","RawContent":null,"Title":"Modules not working","State":"closed","Body":"Modules namespace not working getters and actions ,but they work state why?\r\n","Url":"https://github.com/vuejs/vuex/issues/1835","RelatedDescription":"Closed issue \"Modules not working\" (#1835)"},{"Id":"704896986","IsPullRequest":true,"CreatedAt":"2020-09-20T12:28:26","Actor":"abhineet97","Number":"1834","RawContent":null,"Title":"docs: show mutations in 4.x example also","State":"closed","Body":"In the example for Vuex 3.x, mutations have been illustrated. I've added them to the example for 4.x too for consistency.","Url":"https://github.com/vuejs/vuex/pull/1834","RelatedDescription":"Closed or merged PR \"docs: show mutations in 4.x example also\" (#1834)"},{"Id":"704578213","IsPullRequest":false,"CreatedAt":"2020-09-18T18:37:14","Actor":"devin-huang","Number":"1833","RawContent":null,"Title":"how to use modules in vuex4.0","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n```\r\nimport { createStore } from 'vuex'\r\nimport * as types from './mutation-type'\r\n\r\nexport default createStore({\r\n  modules: {\r\n    common: {\r\n      namespaced: true,\r\n      state: {\r\n        device: '',\r\n      },\r\n      mutation: {\r\n        [types.SET_DEVICE_LIST](state: any, device: string) {\r\n          state.device = device\r\n        },\r\n      },\r\n      actions: {\r\n        findDeviceList: findDeviceList({commit}, params) {\r\n            commit(types.SET_DEVICE_LIST, 'success')\r\n        }\r\n      },\r\n   }\r\n  },\r\n})\r\n\r\n```\r\n\r\n### output errpr: \r\n` [vuex] unknown local mutation type: SET_DEVICE_LIST, global type: common/SET_DEVICE_LIST`\r\n\r\n### Steps to reproduce\r\nwhen use vuex3.0 is ok, but vue4.0 use moduels is error, not to find commit path\r\n\r\n### What is expected?\r\nhow to vuex4.0 use modules  the commit  of  mutation \r\n","Url":"https://github.com/vuejs/vuex/issues/1833","RelatedDescription":"Open issue \"how to use modules in vuex4.0\" (#1833)"},{"Id":"704573678","IsPullRequest":false,"CreatedAt":"2020-09-18T18:28:03","Actor":"devin-huang","Number":"1832","RawContent":null,"Title":"when vuex4.0 use modules  the commit  of  mutation was error ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nVuex.createStore({\r\n  modules ： {\r\n     namespaced:true,\r\n     test: state: {\r\n        name: \"test\",\r\n     },\r\n     mutations: {\r\n        changeTest(state, name ) {\r\n          state.name = name ;\r\n        },\r\n    },\r\n    actions: {\r\n       findTest({commit}) {\r\n         commit('changeTest', 'sss')\r\n       }\r\n     }\r\n  },\r\n});\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1832","RelatedDescription":"Closed issue \"when vuex4.0 use modules  the commit  of  mutation was error \" (#1832)"},{"Id":"704534547","IsPullRequest":false,"CreatedAt":"2020-09-18T17:17:39","Actor":"ClickerMonkey","Number":"1831","RawContent":null,"Title":"Plans for complete TypeScript support with TS 4.1.0","State":"open","Body":"### What problem does this feature solve?\r\nWith the introduction of inference from template strings in TS 4.1.0 it will finally be possible to make Vuex completely type safe (validating all types, paths for commit/dispatch/modules/getters, etc).\r\n\r\nAre there existing plans to add complete type support with the release of Vuex 4?\r\n\r\nFor reference, I've created the following project:\r\n\r\nhttps://github.com/ClickerMonkey/vuex-typescript-interface\r\n\r\nThe only adjustment to the existing type system is that it would require an interface for each module and the root state - so that the modules and root state are aware of each others types. It could be optional like it currently is.\r\n\r\nHere's how the new TS feature would solve the remaining challenge with complete type support with Vuex:\r\n\r\n```\r\ntype GetEmbeddedType<O, Path extends string> = \r\n    Path extends `${infer A}/${infer B}` \r\n    ? A extends keyof O\r\n        ? B extends keyof O[A]\r\n            ? O[A][B]\r\n            : never\r\n        : never\r\n    : never;\r\n\r\n\r\ninterface State {\r\n    prop: {\r\n        innerProp: number;\r\n    }\r\n};\r\n\r\ntype InnerPropType = GetEmbeddedType<State, 'prop/innerProp'>; // number!!\r\n```\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nSimilar to what exists now, just full type support to validate types, the existence of all mutations and dispatches, and communications between the root store and it' modules.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1831","RelatedDescription":"Open issue \"Plans for complete TypeScript support with TS 4.1.0\" (#1831)"},{"Id":"691798814","IsPullRequest":false,"CreatedAt":"2020-09-14T08:10:50","Actor":"so-diao","Number":"1824","RawContent":null,"Title":" Is v3.5.1 incompatible with v3.0.1? ","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/so-diao/pen/oNxGVvW](https://codepen.io/so-diao/pen/oNxGVvW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://codepen.io/so-diao/pen/oNxGVvW\r\n\r\n### What is expected?\r\n-\r\n\r\n### What is actually happening?\r\nI modified an old project  `package.json -> vuex: '^3.0.1'` , `npm i` automatically downloaded the latest version (3.5.1) for me, but they are not compatible.\r\n\r\nWhy are incompatible changes occurring?\r\n\r\n```js\r\n//  return jquery promise\r\nactions: {\r\n    fetch() {\r\n        const Deferred = jQuery.Deferred()\r\n        setTimeout(() =>{\r\n            Deferred.resolve()\r\n\t}, 1500)\r\n\treturn Deferred.promise()\r\n    }\r\n}\r\n\r\n// v3.0.1 success\r\n// v3.5.1 error\r\nthis.$store.dispatch('fetch').done(res =>{xxxxx})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1824","RelatedDescription":"Closed issue \" Is v3.5.1 incompatible with v3.0.1? \" (#1824)"},{"Id":"700729528","IsPullRequest":false,"CreatedAt":"2020-09-14T03:26:17","Actor":"zhengbaofeng","Number":"1830","RawContent":null,"Title":"watch $store vuex actions 参数undefined","State":"closed","Body":"`js\r\n//  js\r\nwatch: {\r\n  '$store.state.name' () {\r\n    that.$store.dispatch('funName', { name: '1' }).then((res) => {})\r\n  }\r\n}\r\n\r\n//  vuex\r\nactions: {\r\n  funName ({ commit }, prams) {\r\n    //  prams undefined\r\n  }\r\n}\r\n`\r\nI don't know if the grammar is standard\r\n\r\nconsole undefined","Url":"https://github.com/vuejs/vuex/issues/1830","RelatedDescription":"Closed issue \"watch $store vuex actions 参数undefined\" (#1830)"},{"Id":"700573332","IsPullRequest":false,"CreatedAt":"2020-09-13T13:48:06","Actor":"Mitch-i","Number":"1829","RawContent":null,"Title":"registerModule + serverPrefetch + unregisterModule","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/Mitch-i/vue-ssr](https://github.com/Mitch-i/vue-ssr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNavigate from one to another page.\r\n\r\n`\r\n\r\n      serverPrefetch () {\r\n            // return the Promise from the action\r\n            // so that the component waits before rendering\r\n            this.$store.registerModule('Locale', Locale);\r\n            return this.getUsers();\r\n        },\r\n        // Client-side only\r\n        // beforeMount() {\r\n        //     this.$store.registerModule('Locale', Locale, { preserveState: true });\r\n        // },\r\n        mounted () {alert('bm home');\r\n            this.$store.registerModule('Locale', Locale, { preserveState: true });\r\n            // If we didn't already do it on the server, we fetch the users\r\n            if (!this.users.length) {\r\n                this.getUsers();\r\n            }\r\n        },\r\n        methods: {\r\n            getUsers () {\r\n                return this.$store.dispatch('getUsers');\r\n            }\r\n        },\r\n        destroyed() {alert('destroyed home');\r\n          this.$store.unregisterModule('Locale');\r\n        },\r\n\r\n\r\n`\r\n\r\nCannot read property 'locale' of undefined\r\n\r\nI try different hooks and get different errors.\r\n\r\n### What is expected?\r\ncan use registered module.\r\n\r\n### What is actually happening?\r\n\r\nModule is registered after is destroyed on navigation to other page and not reloaded (Cannot read property 'locale' of undefined)in the best situation, now and that not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1829","RelatedDescription":"Open issue \"registerModule + serverPrefetch + unregisterModule\" (#1829)"},{"Id":"700572161","IsPullRequest":false,"CreatedAt":"2020-09-13T13:41:11","Actor":"Mitch-i","Number":"1828","RawContent":null,"Title":"registerModule + unregisterModule + serverPrefetch","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1828","RelatedDescription":"Closed issue \"registerModule + unregisterModule + serverPrefetch\" (#1828)"},{"Id":"697749424","IsPullRequest":false,"CreatedAt":"2020-09-10T10:40:28","Actor":"vickyksingh","Number":"1827","RawContent":null,"Title":"Mutation executing multiple times","State":"closed","Body":"Hi,\r\n\r\nI have created local store and registered in my component and it it working fine.\r\n\r\nbut the problem is when i reload my app and navigate to that component where i register and using local store mutation gets called once. when i navigate back to home page and again navigation to that component mutation executing 4 times.\r\nAll the times mutation execution getting increases in format(1x1, 2x2, 3x3, 4x4......)","Url":"https://github.com/vuejs/vuex/issues/1827","RelatedDescription":"Closed issue \"Mutation executing multiple times\" (#1827)"},{"Id":"697674369","IsPullRequest":false,"CreatedAt":"2020-09-10T10:04:33","Actor":"petervmeijgaard","Number":"1826","RawContent":null,"Title":"Add a useModule composable","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, the only way to use the store using the composition API is by creating a store with `useStore`. Using modules this way, results in messier code than it should be. I would like to introduce a `useModule` hook, which will export `commit`, `dispatch`, `getters` and `state` the same way as `useStore` does.\r\n\r\n### What does the proposed API look like?\r\n#### Basic example\r\nCurrent situation\r\n```javascript\r\n// useAuth.js\r\nimport { useStore } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const store = useStore();\r\n  const isAuthenticated = computed(() => store.state.auth.isAuthenticated));\r\n  const login = (payload) => {\r\n    store.commit('auth/login', payload);\r\n  };\r\n  const logout = () => {\r\n    store.dispatch('auth/logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\nProposed situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const auth = useModule('auth');\r\n  const isAuthenticated = computed(() => auth.state.isAuthenticated));\r\n  const login = (payload) => {\r\n    auth.commit('login', payload);\r\n  };\r\n  const logout = () => {\r\n    auth.dispatch('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\n#### Multiple store modules with nested modules\r\nCurrent situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const store = useStore();\r\n\r\n  const isAuthenticated = computed(() => store.state.auth.isAuthenticated);\r\n  const myDetailsInformation = computed(() => store.state.account.myDetails.information);\r\n\r\n  const login = async (payload) => {\r\n    await auth.dispatch('auth/login', payload);\r\n    await myDetails.dispatch('account/my-details/fetch-information');\r\n  };\r\n  const logout = () => {\r\n    store.commit('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    myDetailsInformation,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\nProposed situation:\r\n```javascript\r\n// useAuth.js\r\nimport { useModule } from 'vuex';\r\n\r\nexport const useAuth = () => {\r\n  const auth = useModule('auth');\r\n  const myDetails = useModule('account/my-details');\r\n\r\n  const isAuthenticated = computed(() => auth.state.isAuthenticated);\r\n  const myDetailsInformation = computed(() => myDetails.state.information);\r\n\r\n  const login = async (payload) => {\r\n    await auth.dispatch('login', payload);\r\n    await myDetails.dispatch('fetch-information');\r\n  };\r\n  const logout = () => {\r\n    store.commit('logout');\r\n  };\r\n\r\n  export const {\r\n    isAuthenticated,\r\n    myDetailsInformation,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1826","RelatedDescription":"Closed issue \"Add a useModule composable\" (#1826)"},{"Id":"692661779","IsPullRequest":true,"CreatedAt":"2020-09-04T03:42:24","Actor":"version-1","Number":"1825","RawContent":null,"Title":"docs(typo): fix incorrect createNamespacedHelpers name in ja","State":"closed","Body":"\r\nThe \"d\" did not exist at the heading of `createNamespacedHelpers` in ja doc.","Url":"https://github.com/vuejs/vuex/pull/1825","RelatedDescription":"Closed or merged PR \"docs(typo): fix incorrect createNamespacedHelpers name in ja\" (#1825)"},{"Id":"688861213","IsPullRequest":false,"CreatedAt":"2020-08-31T09:47:50","Actor":"Fuzzyma","Number":"1822","RawContent":null,"Title":"mapGetters use \"this\" in unbound function definition","State":"closed","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/83bc26fe55417692f386db9b76634eb58794282e/src/helpers.js#L81](https://github.com/vuejs/vuex/blob/83bc26fe55417692f386db9b76634eb58794282e/src/helpers.js#L81)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe code uses `this` in the specified line and in next lines in a classic function definition and is therefore not what is expected here.\r\n\r\n\r\n### What is expected?\r\nGood question. An arrow function does not solve the problem since the function in a whole is unbound. However, it would atleast enable us to use `mapGetters.call(ctc.root.$store, ...)` in the setup function. Atm it doesnt work at all\r\n\r\n### What is actually happening?\r\nAn error is thrown because `this.$store` is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1822","RelatedDescription":"Closed issue \"mapGetters use \"this\" in unbound function definition\" (#1822)"},{"Id":"688874791","IsPullRequest":false,"CreatedAt":"2020-08-31T03:44:38","Actor":"Fuzzyma","Number":"1823","RawContent":null,"Title":"Getters are re-evaluated on every access","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/hopeful-sanne-kv7r2?file=/src/main.js](https://codesandbox.io/s/hopeful-sanne-kv7r2?file=/src/main.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the link and open your console to see \"recomputed getter\" every second\r\n\r\n### What is expected?\r\n\"recomputed getter\" should print once and never again\r\n\r\n### What is actually happening?\r\nIt prints every second\r\n\r\n---\r\nIn vuex 3 getters were cached. Isn't that a thing anymore?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1823","RelatedDescription":"Open issue \"Getters are re-evaluated on every access\" (#1823)"},{"Id":"687167732","IsPullRequest":true,"CreatedAt":"2020-08-28T12:11:04","Actor":"spekulatius","Number":"1821","RawContent":null,"Title":"docs(en+ptbr): fix broken link","State":"closed","Body":"Hey @kiaking \r\n\r\nsuper small fix of a broken link in the docs (found one in ptbr while searching for the broken one and fixed it too).\r\n\r\nCheers,\r\nPeter","Url":"https://github.com/vuejs/vuex/pull/1821","RelatedDescription":"Closed or merged PR \"docs(en+ptbr): fix broken link\" (#1821)"},{"Id":"687145083","IsPullRequest":false,"CreatedAt":"2020-08-28T12:08:09","Actor":"lil5","Number":"1820","RawContent":null,"Title":"Move project to typescript (not just add a definition file)","State":"closed","Body":"### What problem does this feature solve?\r\nAny overlooked type errors in the current project\r\n\r\nThe internet is full of reasons to move to typescript.\r\n\r\n### What does the proposed API look like?\r\nMoving all *.js files to *.ts\r\nAnd adding a tsconfig.json file to build the js files\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1820","RelatedDescription":"Closed issue \"Move project to typescript (not just add a definition file)\" (#1820)"},{"Id":"680281794","IsPullRequest":true,"CreatedAt":"2020-08-28T12:04:18","Actor":"23subbhashit","Number":"1818","RawContent":null,"Title":"small grammer  mistake","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1818","RelatedDescription":"Closed or merged PR \"small grammer  mistake\" (#1818)"},{"Id":"677571670","IsPullRequest":true,"CreatedAt":"2020-08-28T11:58:28","Actor":"jivthesh","Number":"1814","RawContent":null,"Title":"added code of conduct to project","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1814","RelatedDescription":"Closed or merged PR \"added code of conduct to project\" (#1814)"},{"Id":"679632890","IsPullRequest":false,"CreatedAt":"2020-08-23T10:24:44","Actor":"xiaoyongchen","Number":"1816","RawContent":null,"Title":"vue3.0 添加了vuex插件，在组件中能拿到store中的值，但是不能更新state中的值","State":"closed","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://baidu.com](https://baidu.com)\r\n\r\n没有上传所以写了一个\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.createApp(App).use(store) .use(router).mount(\"#app\");\r\n2.const  {ctx} : any = getCurrentInstance();\r\n            const state = reactive({\r\n                searchValue: '11',\r\n                token: ctx.$store.state.token\r\n            });\r\n3.const userLogin = (payload: string) => {\r\n                ctx.$store.dispatch('userLogin', payload);\r\n            };\r\n\r\n### What is expected?\r\nToken can be updated\r\n\r\n\r\n\r\n### What is actually happening?\r\nToken cannot be updated\r\n\r\n\r\n\r\n\r\n---\r\n<template>\r\n    <div class=\"hello\">\r\n        <h1>{{ msg }}</h1>\r\n        <div class=\"title\">18</div>\r\n        <div>{{token}}</div>\r\n        <div>new:{{token}}</div>\r\n        <input v-model=\"searchValue\">\r\n        <van-button @click=\"userLogin('新的token')\">切换登录</van-button>\r\n        <p v-text=\"searchValue\"></p>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {defineComponent, getCurrentInstance, reactive, toRefs, watch} from \"vue\";\r\n\r\n    export default defineComponent({\r\n        name: \"HelloWorld\",\r\n        props: {\r\n            msg: String\r\n        },\r\n        setup(props) {\r\n            const  {ctx} : any = getCurrentInstance();\r\n            const state = reactive({\r\n                searchValue: '11',\r\n                token: ctx.$store.state.token\r\n            });\r\n\r\n            const userLogin = (payload: string) => {\r\n                ctx.$store.dispatch('userLogin', payload);\r\n            };\r\n            return {\r\n                userLogin,\r\n                ...toRefs(state),\r\n            };\r\n        },\r\n    });\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"scss\">\r\n    .title {\r\n        font-size: 18px;\r\n    }\r\n\r\n    h3 {\r\n        margin: 40px 0 0;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n    }\r\n\r\n    li {\r\n        display: inline-block;\r\n        margin: 0 10px;\r\n    }\r\n\r\n    a {\r\n        color: #42b983;\r\n    }\r\n</style>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1816","RelatedDescription":"Closed issue \"vue3.0 添加了vuex插件，在组件中能拿到store中的值，但是不能更新state中的值\" (#1816)"},{"Id":"682650278","IsPullRequest":true,"CreatedAt":"2020-08-20T11:48:19","Actor":"Amikawayon","Number":"1819","RawContent":null,"Title":"Update shop.js","State":"open","Body":"cb products arg","Url":"https://github.com/vuejs/vuex/pull/1819","RelatedDescription":"Open PR \"Update shop.js\" (#1819)"},{"Id":"679690404","IsPullRequest":true,"CreatedAt":"2020-08-16T06:26:02","Actor":"jamiedishy","Number":"1817","RawContent":null,"Title":"docs(typo): fix punctuation","State":"closed","Body":"The period should be inside the quotations, not outside the quotations. ","Url":"https://github.com/vuejs/vuex/pull/1817","RelatedDescription":"Closed or merged PR \"docs(typo): fix punctuation\" (#1817)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-03T05:30:43.7730549Z","RunDurationInMilliseconds":2025}