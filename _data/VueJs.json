{"Data":{"Vue-Issues":{"Issues":[{"Id":"733712934","IsPullRequest":true,"CreatedAt":"2020-11-01T13:21:57","Actor":"mshahbazi","Number":"11746","RawContent":null,"Title":"fix: handle additional args in components' with event modifiers","State":"closed","Body":"Additional args are not passed to components events with modifiers.\r\n\r\nwith a component template like this\r\n`<input @keyup=\"$emit('my-keyup', $event, var1, var2)\"/>`\r\ntriggering the event, e.g.\r\n`<my-component @my-keyup.enter=\"onMyKeyup\"/>`\r\nthe `onMyKeyup` receives the `$event`, but not `var1` and `var2`\r\n\r\nhope this PR resolves the issue.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11746","RelatedDescription":"Closed or merged PR \"fix: handle additional args in components' with event modifiers\" (#11746)"},{"Id":"733609346","IsPullRequest":false,"CreatedAt":"2020-10-31T02:42:01","Actor":"thanhchuongbmd","Number":"11745","RawContent":null,"Title":"How to using syntax babel 7 in vue file","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/dpcmr1tz/](https://jsfiddle.net/dpcmr1tz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI can not using syntax babel in vue file, it error by vue-template-compile\r\n\r\n### What is expected?\r\nI hope to can using syntax babel 7 like example: message?.name, with \"message\" is a object\r\n\r\n### What is actually happening?\r\nI can not using syntax babel in vue file, it error by vue-template-compile\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11745","RelatedDescription":"Closed issue \"How to using syntax babel 7 in vue file\" (#11745)"},{"Id":"733086686","IsPullRequest":true,"CreatedAt":"2020-10-30T11:09:50","Actor":"pimpeters","Number":"11744","RawContent":null,"Title":"fix: changed examples to v3 in readme","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/vuejs/vue/pull/11744","RelatedDescription":"Open PR \"fix: changed examples to v3 in readme\" (#11744)"},{"Id":"732097949","IsPullRequest":false,"CreatedAt":"2020-10-29T15:26:39","Actor":"SunJianMing","Number":"11743","RawContent":null,"Title":"vue ssr css没有在head生成style，初次加载时造成闪烁的问题","State":"closed","Body":"\r\nvue ssr css没有在head生成style，造成闪烁\r\n\r\n\r\nbuild打包时， 先打包server端在打包client\r\n//package.json\r\nscript:{\r\n    \"build:client\":\"vue-cli-service build\",\r\n    \"build:server\":\"cross-env WEBPACK_TARGET=node vue-cli-serivce build\",\r\n    \"build\":\"npm run build:server && npm run build:client\"\r\n}\r\n如果  \"build\":\"npm run build:client && npm run build:server\"   则会造成css后加载，有闪烁问题\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11743","RelatedDescription":"Closed issue \"vue ssr css没有在head生成style，初次加载时造成闪烁的问题\" (#11743)"},{"Id":"731495190","IsPullRequest":false,"CreatedAt":"2020-10-28T14:34:56","Actor":"4uva4ok1905","Number":"11742","RawContent":null,"Title":"defineAsyncComponent","State":"closed","Body":"### What problem does this feature solve?\r\n    setup() {\r\n    let component = shallowRef({});\r\n\r\n    const { visibly, component: componentName, hideModal } = useModal();\r\n\r\n    watch(\r\n      () => componentName.value,\r\n      componentName => {\r\n        if (!componentName) return;\r\n\r\n        component.value = defineAsyncComponent({\r\n          loader: () => import(`@/components/modals/modal/${componentName}`),\r\n          loadingComponent: LoadingModal,\r\n          errorComponent: ErrorModal,\r\n          delay: 50000000000\r\n        });\r\n      }\r\n    );\r\n\r\n    const escapeHandler = e => {\r\n      if (e.key === `Escape` && visibly) {\r\n        hideModal();\r\n      }\r\n    };\r\n\r\n    onMounted(() => document.addEventListener(\"keydown\", escapeHandler));\r\n    onUnmounted(() => document.removeEventListener(\"keydown\", escapeHandler));\r\n\r\n    return { component, visibly, hideModal };\r\n    }\r\n\r\n### What does the proposed API look like?\r\ndelay not working\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11742","RelatedDescription":"Closed issue \"defineAsyncComponent\" (#11742)"},{"Id":"729185764","IsPullRequest":true,"CreatedAt":"2020-10-26T02:39:51","Actor":"JoinsG","Number":"11741","RawContent":null,"Title":"拉取最新","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11741","RelatedDescription":"Closed or merged PR \"拉取最新\" (#11741)"},{"Id":"729120973","IsPullRequest":true,"CreatedAt":"2020-10-25T21:41:58","Actor":"theskillwithin","Number":"11740","RawContent":null,"Title":"fix npm publish .DS_Store","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n- [x ] Bugfix\r\n**Does this PR introduce a breaking change?** (check one)\r\n- [ ] Yes\r\n- [x ] No\r\n\r\nprevent .DS_Store from being publish\r\n\r\nsee: https://unpkg.com/browse/vue@2.6.12/src/","Url":"https://github.com/vuejs/vue/pull/11740","RelatedDescription":"Open PR \"fix npm publish .DS_Store\" (#11740)"},{"Id":"729096014","IsPullRequest":true,"CreatedAt":"2020-10-25T20:21:34","Actor":"reviewher","Number":"11739","RawContent":null,"Title":"Ignore .DS_Store files in the bundle","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [X] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [X] Yes\r\n- [ ] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n**Other information:**\r\n\r\nBundle includes `.DS_Store` files https://unpkg.com/browse/vue@2.6.12/src/ \r\n These files are macOS artifacts and clearly not intended to be included in the release modules.\r\n\r\nThe problem stems from how npm handles bare directories.  The `files` entry in package.json merely says `\"src\"`.  The npm client includes all files in the src directory, including those in `.gitignore`.  The proposed fix tells NPM not to include `.DS_Store` files.\r\n\r\nFixes #10112 ","Url":"https://github.com/vuejs/vue/pull/11739","RelatedDescription":"Closed or merged PR \"Ignore .DS_Store files in the bundle\" (#11739)"},{"Id":"728682492","IsPullRequest":false,"CreatedAt":"2020-10-24T13:34:14","Actor":"yuchaosydney","Number":"11738","RawContent":null,"Title":"Named slot value in child component is undefined when one of child component's reactive props is mutated by its parent component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/yuchaosydney/pen/bGegLjM](https://codepen.io/yuchaosydney/pen/bGegLjM)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the codepen link and open console\r\n\r\n2. Click \"Child Button\" (each click increases \"child-component\" internal \"count\" prop by one, and in watch function, it prints `!!this.$slots.header` as true, which is expected)\r\n\r\n3. Click \"Parent Button\" (each click increases \"count\" prop by one in \"Parent Component\", this prop binds to \"parentCount\" prop in \"child-component\", and its watch function prints out the same reference `this.$slots.header` )\r\n\r\n\r\n### What is expected?\r\n\r\n1. Named \"header\" slot in \"child-component\" is rendered on the page (working)\r\n2. Clicking \"Child Button\" prints out `!!this.$slots.header` as `true` (working)\r\n3. Click \"Parent Button\" prints out the actual value of same reference `this.$slots.header` (not working)\r\n\r\n### What is actually happening?\r\nRegarding point 3, outcome is:\r\n`\"--parentCount-change---\" undefined`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11738","RelatedDescription":"Closed issue \"Named slot value in child component is undefined when one of child component's reactive props is mutated by its parent component\" (#11738)"},{"Id":"728045265","IsPullRequest":false,"CreatedAt":"2020-10-23T09:04:23","Actor":"badpunman","Number":"11736","RawContent":null,"Title":"Transition-group memory leak / optimization","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ng2r9q70/](https://jsfiddle.net/ng2r9q70/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate transition-group, \r\nremove items from under it in runtime.\r\nInspecting for memoryleaks, discover that the element holds references to removed components and doesn't let go of them until next render. \r\n\r\n\r\n### What is expected?\r\nreferences to removed components should be cleaned up.\r\n\r\n### What is actually happening?\r\nthis.removed stores references to removed components.\r\n\r\n---\r\nOn line 72 of transition-group.js there's an assignment \r\nthis.removed = removed\r\nbut this property is never apparently used after this from what I can tell.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11736","RelatedDescription":"Open issue \"Transition-group memory leak / optimization\" (#11736)"},{"Id":"728032419","IsPullRequest":false,"CreatedAt":"2020-10-23T08:45:43","Actor":"badpunman","Number":"11735","RawContent":null,"Title":"Transition-group 'this.removed' unnecessary small memory leak?","State":"closed","Body":"![image](https://user-images.githubusercontent.com/937289/96976541-a7041280-1524-11eb-9d65-97630e4b1343.png)\r\n\r\nWhen tracing for memory leaks I found that the transition-group component seems to store a reference to removed components under it and doesn't let go of it. \r\n\r\nIs this necessary? I don't find any clear references that use this property.","Url":"https://github.com/vuejs/vue/issues/11735","RelatedDescription":"Closed issue \"Transition-group 'this.removed' unnecessary small memory leak?\" (#11735)"},{"Id":"727967714","IsPullRequest":false,"CreatedAt":"2020-10-23T07:11:53","Actor":"546200350","Number":"11734","RawContent":null,"Title":"How can I get the component code before compile in 2.x?","State":"closed","Body":"### What problem does this feature solve?\r\n``` vue\r\n<code-box title=\"基本\" describe=\"button基本用法\">\r\n    <i-button>Default</i-button>\r\n</code-box>\r\n```\r\n- I want to get default Slot String like **`<i-button>Default</i-button>`** in codeBox.\r\n- I can find then api **_slotContents** in vue 1.x.\r\n- Is there any way can get the same function in vue 2.x?\r\n\r\n### What does the proposed API look like?\r\n_slotContents in vue 1.x\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11734","RelatedDescription":"Closed issue \"How can I get the component code before compile in 2.x?\" (#11734)"},{"Id":"727963557","IsPullRequest":false,"CreatedAt":"2020-10-23T06:49:44","Actor":"546200350","Number":"11733","RawContent":null,"Title":"How can I get the component code before compile in 2.x?","State":"closed","Body":"``` vue\r\n<code-box title=\"基本\" describe=\"button基本用法\">\r\n    <i-button>Default</i-button>\r\n</code-box>\r\n```\r\n- I want to get default Slot String like **`<i-button>Default</i-button>`** in codeBox.\r\n- I can find then api **_slotContents** in vue1.x.\r\n- Is there any way can get the same function ?","Url":"https://github.com/vuejs/vue/issues/11733","RelatedDescription":"Closed issue \"How can I get the component code before compile in 2.x?\" (#11733)"},{"Id":"727756672","IsPullRequest":false,"CreatedAt":"2020-10-23T06:05:28","Actor":"foundryspatial-duncan","Number":"11732","RawContent":null,"Title":"Event handlers with .once only get the first parameter","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/foundryspatial-duncan/pen/VwjmNqY?editors=1010](https://codepen.io/foundryspatial-duncan/pen/VwjmNqY?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nAny component event that emits more than one parameter, like `$emit('play', 'foo', 'bar', 'baz')` will only pass the first parameter (\"foo\") to the handler if you use the `.once` modifier.\r\n\r\n### What is expected?\r\nAll parameters get passed to the event handler. Same behavior as normal v-on, but it only happens once.\r\n\r\n### What is actually happening?\r\nOnly the first parameter gets passed, and the others are dropped.\r\n\r\n---\r\nLooks related to #10867 (which says it's any modifier and not just `.once`) but that one's from last year, and it's merged & closed... I'm still seeing it in the latest 2.6.11 & 2.6.12\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11732","RelatedDescription":"Closed issue \"Event handlers with .once only get the first parameter\" (#11732)"},{"Id":"727322109","IsPullRequest":true,"CreatedAt":"2020-10-22T11:59:20","Actor":"safanbd","Number":"11731","RawContent":null,"Title":"Update alias.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11731","RelatedDescription":"Closed or merged PR \"Update alias.js\" (#11731)"},{"Id":"727022284","IsPullRequest":false,"CreatedAt":"2020-10-22T09:32:10","Actor":"yangdan8","Number":"11730","RawContent":null,"Title":"Capture modifier not work in Chrome 86","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/yangdan8/pen/oNLYWBL](https://codepen.io/yangdan8/pen/oNLYWBL)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the green area to output \"outer\" in the console, ok!\r\nClick on the pink area to output \"inner\", error!\r\nShouldn't it be \"outer\"?\r\n\r\n### What is expected?\r\noutput \"outer\"\r\ncurrentTarget and relatedTarget are both not null\r\n\r\n### What is actually happening?\r\noutput \"inner\"\r\ncurrentTarget and relatedTarget are both null\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11730","RelatedDescription":"Closed issue \"Capture modifier not work in Chrome 86\" (#11730)"},{"Id":"726791729","IsPullRequest":true,"CreatedAt":"2020-10-21T19:13:51","Actor":"aly2","Number":"11729","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11729","RelatedDescription":"Closed or merged PR \"Update README.md\" (#11729)"},{"Id":"724888079","IsPullRequest":false,"CreatedAt":"2020-10-19T19:15:32","Actor":"skinnp91","Number":"11728","RawContent":null,"Title":"Updating DOM breaks item draggability","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/skinnp91/pen/JjKKxZy](https://codepen.io/skinnp91/pen/JjKKxZy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDrag item from one box to another\r\n\r\n\r\n\r\n### What is expected?\r\nhttps://codepen.io/skinnp91/pen/rNLLZPX\r\n\r\nItem is draggable pre-v2.6.0\r\n\r\n### What is actually happening?\r\nItem is no longer draggable and page state is broken\r\n\r\n---\r\nThis issue carries through to Vue 3.0 as well, able to reproduce with this same setup, different vue mounting.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11728","RelatedDescription":"Closed issue \"Updating DOM breaks item draggability\" (#11728)"},{"Id":"724885576","IsPullRequest":false,"CreatedAt":"2020-10-19T18:41:51","Actor":"skinnp91","Number":"11727","RawContent":null,"Title":"Updating DOM breaks item draggability","State":"closed","Body":"## Version\r\n2.6.0+ (includes 3.0.0)\r\n\r\n## Reproduction link\r\nhttps://codepen.io/skinnp91/pen/JjKKxZy\r\n\r\n## Working reproduction link (Vue 2.5.17, no code changes)\r\nhttps://codepen.io/skinnp91/pen/rNLLZPX\r\n\r\n## Steps to reproduce\r\nDrag item from one box to another\r\n\r\n## What is expected?\r\nItem creates DOM ghost and is draggable to another box\r\n\r\n## What is actually happening?\r\nItem is not draggable and creates broken state\r\n\r\n\r\nThis issue carries through to Vue 3.0 as well, able to reproduce with this same setup, different vue mounting.","Url":"https://github.com/vuejs/vue/issues/11727","RelatedDescription":"Closed issue \"Updating DOM breaks item draggability\" (#11727)"},{"Id":"723752573","IsPullRequest":true,"CreatedAt":"2020-10-17T12:55:47","Actor":"shadowings-zy","Number":"11726","RawContent":null,"Title":"fix(render): $scopedSlots shoud not empty in beforeMount (#11714)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nClose #11714 ","Url":"https://github.com/vuejs/vue/pull/11726","RelatedDescription":"Open PR \"fix(render): $scopedSlots shoud not empty in beforeMount (#11714)\" (#11726)"},{"Id":"723219270","IsPullRequest":true,"CreatedAt":"2020-10-16T13:22:14","Actor":"him2him2","Number":"11725","RawContent":null,"Title":"Update HTTP -> HTTPS","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ X ] Other, please describe:\r\nURLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ X ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11725","RelatedDescription":"Open PR \"Update HTTP -> HTTPS\" (#11725)"},{"Id":"722858836","IsPullRequest":true,"CreatedAt":"2020-10-16T12:17:27","Actor":"him2him2","Number":"11723","RawContent":null,"Title":"chore: update HTTP -> HTTPS","State":"closed","Body":"URLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [X ] Other, please describe:\r\nURLs updated to use HTTPS protocol where appropriate to improve security and privacy.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ X ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11723","RelatedDescription":"Closed or merged PR \"chore: update HTTP -> HTTPS\" (#11723)"},{"Id":"721664848","IsPullRequest":false,"CreatedAt":"2020-10-14T18:08:27","Actor":"Yuriuh","Number":"11722","RawContent":null,"Title":"Scoped slot is not reactive","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-scopedslot-not-reactive-6otqn](https://codesandbox.io/s/vue-scopedslot-not-reactive-6otqn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the next button to switch to the next component\r\n2. It does not work\r\n\r\n### What is expected?\r\nShow CompTwo component\r\n\r\n### What is actually happening?\r\nStill show CompOne component\r\n\r\n---\r\n1. I tried to pass components by props\r\n2. I used dynamic component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11722","RelatedDescription":"Closed issue \"Scoped slot is not reactive\" (#11722)"},{"Id":"720009680","IsPullRequest":false,"CreatedAt":"2020-10-13T12:11:31","Actor":"kuanyui","Number":"11720","RawContent":null,"Title":"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via v-if","State":"closed","Body":"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via `v-if`.\r\n### Version\r\nConfirmed in:\r\n- 2.6.11\r\n- 2.6.12\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/upbeat-jepsen-fhw1r?file=/src/App.vue](https://codesandbox.io/s/upbeat-jepsen-fhw1r?file=/src/App.vue)\r\n\r\n### Steps to reproduce\r\n# `Parent.vue`\r\n```pug\r\n.parentRoot\r\n  div(v-if=\"showChild\")\r\n    Child(ref=\"child\")\r\n```\r\n```js\r\n{\r\n  computed: {\r\n     child () { return this.$refs.child },\r\n  },\r\n}\r\n```\r\n\r\n# `Child.vue`\r\n```pug\r\ndiv\r\n  input(ref=\"inputEl\")\r\n```\r\n\r\n```js\r\n{\r\n  methods: {\r\n    /** call from App.vue */\r\n    debug() {\r\n      console.log(\"[Child] v-if => this.$el ===\", this.$el);\r\n      console.log(\"[Child] v-if => this.$refs.inputEl ===\", this.$refs.inputEl);\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n### What is expected?\r\nCan always get correct `Child.$el` and `Child.$refs.inputEl`\r\n\r\n### What is actually happening?\r\nAt the first time of `Child.mounted()`, everything goes OK.\r\n\r\nFrom the second time of `Child.mounted()`:\r\n`Child.$el` is printed, but detached from DOM.\r\n`Child.$refs.inputEl` becomes undefined.\r\n\r\n#### Console output:\r\n```\r\n# First time mounting of Child.vue\r\nv-if => this.$el === <DIV>…</DIV>\r\nv-if => this.$refs.inputEl === <INPUT></INPUT>\r\n# First time mounting of Child.vue\r\nv-if => this.$el === <DIV>…</DIV>     ### ← this is printable in console, but not found in DOM.\r\nv-if => this.$refs.inputEl === undefined    ### ← becomes undefined \r\n```\r\n---\r\n`v-show` also has some different strange behaviours under such context.\r\n\r\n# Why on Earth make a getter instead of access this.$refs.XXX directly?\r\nThis is very useful for making DRY type-awared `this.$refs.XXX`  in TypeScript:\r\n```ts\r\n{\r\n  computed: {\r\n    child (): InstanceType<typeof Child> {\r\n      // @ts-ignore\r\n      return this.$refs.child\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11720","RelatedDescription":"Closed issue \"Using (computed) getter to access `this.$refs.child`, `Child.$refs.xxx` will become `undefined` after second time of mounting of `Child` via v-if\" (#11720)"},{"Id":"720083502","IsPullRequest":true,"CreatedAt":"2020-10-13T10:43:27","Actor":"aka434112","Number":"11721","RawContent":null,"Title":"Using this PR to generate a build (DO NOT REVIEW/MERGE)","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/pull/11721","RelatedDescription":"Closed or merged PR \"Using this PR to generate a build (DO NOT REVIEW/MERGE)\" (#11721)"},{"Id":"719336829","IsPullRequest":false,"CreatedAt":"2020-10-12T20:36:58","Actor":"bastiantangedal","Number":"11719","RawContent":null,"Title":"Ctor.config is undefined","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Steps to reproduce\r\nStart the app with 'npm run serve'\r\n\r\n\r\n### What is expected?\r\nThe app/website should launch as normal\r\n\r\n### What is actually happening?\r\nThe website does not load, and the console has this error: Uncaught TypeError: Ctor.config is undefined.\r\n\r\nIt looks like the error is coming from a file named: **vue-composition-api.esm.js**: \r\n```\r\nfunction defineComponentInstance(Ctor, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var silent = Ctor.config.silent;\r\n    Ctor.config.silent = true;\r\n    var vm = new Ctor(options);\r\n    Ctor.config.silent = silent;\r\n    return vm;\r\n}\r\n```\r\n\r\nThis is the full error that I get in the console:\r\n```\r\nUncaught TypeError: Ctor.config is undefined\r\n    defineComponentInstance vue-composition-api.esm.js:123\r\n    observe vue-composition-api.esm.js:475\r\n    reactive vue-composition-api.esm.js:586\r\n    ref vue-composition-api.esm.js:290\r\n    <anonymous> dyi.js:3\r\n    js app.js:1521\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> cjs.js:3\r\n    ./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Login.vue?vue&type=script&lang=js& app.js:974\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> Login.vue:1\r\n    ./src/components/Login.vue?vue&type=script&lang=js& app.js:1317\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> Login.vue:1\r\n    vue app.js:1305\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> index.js:1\r\n    js app.js:1509\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    <anonymous> main.js:13\r\n    js app.js:1497\r\n    __webpack_require__ app.js:849\r\n    fn app.js:151\r\n    1 app.js:1534\r\n    __webpack_require__ app.js:849\r\n    checkDeferredModules app.js:46\r\n    <anonymous> app.js:925\r\n    <anonymous>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11719","RelatedDescription":"Closed issue \"Ctor.config is undefined\" (#11719)"},{"Id":"719257827","IsPullRequest":false,"CreatedAt":"2020-10-12T10:17:40","Actor":"borodadada","Number":"11718","RawContent":null,"Title":"vuejs/vue-ssr-webpack-plugin and webpack 5","State":"open","Body":"### What problem does this feature solve?\r\ngithub missing repository vuejs/vue-ssr-webpack-plugin, i update webpack to version 5 and have error\r\n[vue-server-renderer-webpack-plugin] webpack config `output.libraryTarget` should be \"commonjs2\".\r\n\r\n\r\n### What does the proposed API look like?\r\nin my output.libraryTarget is libraryTarget: 'commonjs2'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11718","RelatedDescription":"Open issue \"vuejs/vue-ssr-webpack-plugin and webpack 5\" (#11718)"},{"Id":"718919927","IsPullRequest":true,"CreatedAt":"2020-10-11T22:15:56","Actor":"SMAKSS","Number":"11717","RawContent":null,"Title":"docs(benchmark, dist, examples): modifying Readme.md files","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nI recently forked the project to read the codebase and get to know it better, when I just start reading README.md files I faced some grammar issues and thought modifying them will help future readers to read them better and easier.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n","Url":"https://github.com/vuejs/vue/pull/11717","RelatedDescription":"Closed or merged PR \"docs(benchmark, dist, examples): modifying Readme.md files\" (#11717)"},{"Id":"718036042","IsPullRequest":false,"CreatedAt":"2020-10-09T10:42:55","Actor":"1939108122","Number":"11716","RawContent":null,"Title":"vue3迁移指南文档文字错误","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref](https://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n文档错误链接如下：\r\nhttps://v3.vuejs.org/guide/composition-api-introduction.html#reactive-variables-with-ref\r\n\r\n### What is expected?\r\n文档中，“在整个Composition API中，经常会使用使用引用的概念。”，这句话中“使用”一词使用了两次，应当使用一次。\r\n\r\n### What is actually happening?\r\n文字赘余\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11716","RelatedDescription":"Closed issue \"vue3迁移指南文档文字错误\" (#11716)"},{"Id":"717179941","IsPullRequest":false,"CreatedAt":"2020-10-08T09:31:43","Actor":"tstriker","Number":"11715","RawContent":null,"Title":"Warn about `this.` used in templates","State":"open","Body":"### What problem does this feature solve?\r\nSometimes when moving the code around, the `this.` can end up traveling with it. Or the finger memory will just type in the `this.` where none is required.\r\n\r\nDue to a side-effect, the `this` context is indeed present, but it breaks when it's used deeper in templates (haven't looked exactly, but i think it breaks in v-if's or somewhere around there.\r\n\r\nTo avoid inadvertent breakages, it would be nice if vue could warn about it.\r\n\r\n\r\n### What does the proposed API look like?\r\na `this.` spotted in javascript bits of template would show a warning in the javascript console\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11715","RelatedDescription":"Open issue \"Warn about `this.` used in templates\" (#11715)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"731954940","IsPullRequest":false,"CreatedAt":"2020-10-29T03:00:52","Actor":"emperorOfBug","Number":"3360","RawContent":null,"Title":"Nested Routes Unexpected Refresh ","State":"closed","Body":"this is my App.vue\r\n`\r\n  <div id=\"app\">\r\n            <router-view :key=\"key\"></router-view>\r\n        </div>\r\n`\r\nthis is my box\r\n`\r\n<div>\r\n        <head-top :form=\"form\" :navList=\"navList\"></head-top>\r\n        <router-view></router-view>\r\n        <div style=\"padding-bottom: 100px\"></div>\r\n        <foot-bottom :footPageCgf=\"form.footerPage\"></foot-bottom>\r\n    </div>\r\n`\r\n\r\nI found that when I use \"this.$push(path)\" it was really good(path without any param type of query)\r\nbut when I use   \"this.$push({path:path,query{id:1}})\" or \"this.$push(path?id=1)\"\r\nThe box was refresh ,\"head-top\" and \"foot-bottom\"  were reload\r\n\r\nI don't think it is correct, and I want keep my components when I turn to a URL just like \"download?id=1\"","Url":"https://github.com/vuejs/vue-router/issues/3360","RelatedDescription":"Closed issue \"Nested Routes Unexpected Refresh \" (#3360)"},{"Id":"729026593","IsPullRequest":true,"CreatedAt":"2020-10-25T15:48:38","Actor":"Alex-Sokolov","Number":"3358","RawContent":null,"Title":"docs: navigation-failures.md fix examples","State":"closed","Body":"Because everywhere on the page used `router` for navigation, which need to be imported as `router`\r\n","Url":"https://github.com/vuejs/vue-router/pull/3358","RelatedDescription":"Closed or merged PR \"docs: navigation-failures.md fix examples\" (#3358)"},{"Id":"729034786","IsPullRequest":false,"CreatedAt":"2020-10-25T15:47:09","Actor":"xd-luke","Number":"3359","RawContent":null,"Title":"Error at new NavigationDuplicated","State":"closed","Body":"### Version\r\n3.4.7\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/57837758/navigationduplicated-navigating-to-current-location-search-is-not-allowed](https://stackoverflow.com/questions/57837758/navigationduplicated-navigating-to-current-location-search-is-not-allowed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNavigate to the route you are already on causes an false error. \r\n\r\n### What is expected?\r\nNo error message should be displayed for attempting to navigate to the route that the user is already on.  perhaps a warning could be displayed... But, certainly this is not an error, as the nothing wrong has actually happened.  \r\n\r\n### What is actually happening?\r\nThe system making developers have to deal with errors that aren't actually errors. \r\n\r\n---\r\nPlease don't ask developers to add additional code to their programs just to swallow all errors of this type. That's not a good coding experience...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3359","RelatedDescription":"Closed issue \"Error at new NavigationDuplicated\" (#3359)"},{"Id":"728843519","IsPullRequest":true,"CreatedAt":"2020-10-25T12:16:28","Actor":"Alex-Sokolov","Number":"3357","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3357","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#3357)"},{"Id":"728808612","IsPullRequest":false,"CreatedAt":"2020-10-24T15:10:27","Actor":"saileshkush95","Number":"3356","RawContent":null,"Title":"Dynamic Import is throwing meta error, vue3","State":"closed","Body":"I'm trying to handle multiple domains for router. Here is my code for static import.\r\n```\r\nimport default_routes from \"./default\";\r\nimport tenantone from \"./tenantone\";\r\nimport tenanttwo from \"./tenanttwo\";\r\n\r\nconst currentHostName = window.location.hostname;\r\nlet router;\r\n\r\nif (currentHostName === \"abc.com\") {\r\n    router = tenantone;\r\n} else if (currentHostName === \"bcd.com\") {\r\n    router = tenanttwo;\r\n} else {\r\n    router = default-routes\r\n}\r\n\r\nexport default router;\r\n```\r\nAbove code is working fine without any error but when i try to perform dynamic import I'm getting error related to meta.\r\nHere is my code of block which i want to implement inside else block for testing purpose only.\r\n\r\n```\r\n    const routePath = './default'\r\n    import(`${routePath}`).then((module) => {\r\n        router = module.default\r\n    });\r\n```\r\nand here is my full code block.\r\n```\r\n// import default_routes from \"./default\";\r\nimport tenantone from \"./tenantone\";\r\nimport tenanttwo from \"./tenanttwo\";\r\n\r\nconst currentHostName = window.location.hostname;\r\nlet router;\r\n\r\nif (currentHostName === \"abc.com\") {\r\n    router = tenantone;\r\n} else if (currentHostName === \"bcd.com\") {\r\n    router = tenanttwo;\r\n} else {\r\n    const routePath = './default'\r\n    import(`${routePath}`).then((module) => {\r\n        router = module.default\r\n    });\r\n}\r\n\r\nexport default router;\r\n```\r\nand here is screenshot of error.\r\n![Screenshot from 2020-10-24 20-53-47](https://user-images.githubusercontent.com/28560875/97085113-094f3700-163b-11eb-9337-7ff6b8ccae86.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3356","RelatedDescription":"Closed issue \"Dynamic Import is throwing meta error, vue3\" (#3356)"},{"Id":"727326468","IsPullRequest":true,"CreatedAt":"2020-10-22T12:30:51","Actor":"safanbd","Number":"3355","RawContent":null,"Title":"Update view.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3355","RelatedDescription":"Closed or merged PR \"Update view.js\" (#3355)"},{"Id":"726244185","IsPullRequest":true,"CreatedAt":"2020-10-21T12:52:15","Actor":"gaetansenn","Number":"3351","RawContent":null,"Title":"feat(scroll): dd behavior support on scrollBehavior","State":"closed","Body":"Add the possibility to pass behaviour type to window.scrollTo if supported by browser.\r\n\r\nClose #2069\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3351","RelatedDescription":"Closed or merged PR \"feat(scroll): dd behavior support on scrollBehavior\" (#3351)"},{"Id":"726392155","IsPullRequest":false,"CreatedAt":"2020-10-21T11:34:38","Actor":"SCWR","Number":"3354","RawContent":null,"Title":"Error when opening with a encoded hash title","State":"closed","Body":"### Version\r\n3.4.7\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuepress/issues/2599](https://github.com/vuejs/vuepress/issues/2599)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe final wrong position is\r\n\r\nhttps://github.com/vuepress/vuepress-plugin-smooth-scroll/blob/master/src/enhanceApp.ts#L16\r\n\r\nvuepress-plugin-smooth-scroll\r\n\r\nThis document is used here.\r\n\r\nhttps://router.vuejs.org/guide/advanced/scroll-behavior.html#async-scrolling\r\n\r\nThere was no problem before because the to.hash returned by vue-router was call decodeURIComponent.\r\n\r\nSince version 3.4.3, the uncoded hash has been returned directly.\r\n\r\n### What is expected?\r\nThe scroll was successful.\r\n\r\n### What is actually happening?\r\nScrolling failed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3354","RelatedDescription":"Closed issue \"Error when opening with a encoded hash title\" (#3354)"},{"Id":"726388237","IsPullRequest":false,"CreatedAt":"2020-10-21T11:22:40","Actor":"SCWR","Number":"3353","RawContent":null,"Title":"Scroll Behavior to.hash not call `decodeURIComponent`","State":"closed","Body":"The final wrong position is\r\n\r\nhttps://github.com/vuepress/vuepress-plugin-smooth-scroll/blob/master/src/enhanceApp.ts#L16\r\n\r\n`vuepress-plugin-smooth-scroll`\r\n\r\nThis document is used here.\r\n\r\nhttps://router.vuejs.org/guide/advanced/scroll-behavior.html#async-scrolling\r\n\r\nThere was no problem before because the to.hash returned by vue-router was call `decodeURIComponent`.\r\n\r\nSince version 3.4.3, the uncoded hash has been returned directly.\r\n\r\n_Originally posted by @SCWR in https://github.com/vuejs/vuepress/issues/2599#issuecomment-713498255_","Url":"https://github.com/vuejs/vue-router/issues/3353","RelatedDescription":"Closed issue \"Scroll Behavior to.hash not call `decodeURIComponent`\" (#3353)"},{"Id":"726322598","IsPullRequest":true,"CreatedAt":"2020-10-21T09:52:23","Actor":"samzeng","Number":"3352","RawContent":null,"Title":"docs: fix Webpack code splitting link","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/3352","RelatedDescription":"Open PR \"docs: fix Webpack code splitting link\" (#3352)"},{"Id":"722350967","IsPullRequest":false,"CreatedAt":"2020-10-20T13:25:23","Actor":"Glandos","Number":"3344","RawContent":null,"Title":"[Typescript] Location in Router.resolve should allow for undefined params to remove them","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wr0ehvsd/2/](https://jsfiddle.net/wr0ehvsd/2/)\r\n\r\n\r\n### Steps to reproduce\r\nCall `router.resolve({ params: { id: undefined } })` to get the route for the same location with the `id` parameter.\r\n\r\nThe route is correctly defined with `/:id?` so `id` is optional.\r\n\r\n### What is expected?\r\nNo typescript compiler error.\r\n\r\n### What is actually happening?\r\nTypescript complains because `params` in Location is `Dictionary<string>` and not `Dictionary<string | undefined>`\r\n\r\nHowever, the behavior from vue-router is correct.\r\n\r\n---\r\nMaybe there is a workaround, but I didn't find it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3344","RelatedDescription":"Closed issue \"[Typescript] Location in Router.resolve should allow for undefined params to remove them\" (#3344)"},{"Id":"725557681","IsPullRequest":true,"CreatedAt":"2020-10-20T12:55:30","Actor":"posva","Number":"3350","RawContent":null,"Title":"fix(encoding): decode params","State":"open","Body":"## What is breaking\r\n\r\nUsers no longer can use unencoded static paths:\r\n\r\n- A route defined with `{ path: '/cassé' }`\r\n- `<router-link to=\"/cassé\" />`\r\n- `<router-link :to=\"{ path '/cassé' }\" />`\r\n- `router.push('/cassé')`\r\n- `router.push({ path: '/cassé' })`\r\n\r\nThey have to manually encode them with `encodeURI()` or use a named route:\r\n\r\n```js\r\nnew Router({\r\n  routes: [\r\n    { path: '/cassé' },\r\n    // becomes\r\n    { path: encodeURI('/cassé') },\r\n    // be careful to not encode characters used in a regex ([ and ] are encoded by encodeURI)\r\n\t{ path: '/色/:hex([0-9a-f]+)' },\r\n    // becomes\r\n    { path: encodeURI('/色') + '/:hex([0-9a-f]+)' },\r\n\t// not necessary if all characters are latin\r\n    { path: '/articles/:articleTitle' }\r\n ]\r\n})\r\n```\r\n\r\n```js\r\nrouter.push('/cassé')\r\n// becomes\r\nrouter.push(encodeURI('/cassé'))\r\n```\r\n\r\n```html\r\n<router-link to=\"/cassé\" />\r\nbecomes\r\n<router-link :to=\"encodeURI('/cassé')\" />\r\nor with a name\r\n<router-link :to=\"{ name: 'cassé' }\" />\r\n```\r\n\r\nThis is **only necessary** with string locations. When using params and query, the behavior is still the same **and using named routes with params** is recommended for that reason:\r\n\r\n```js\r\n// given a route /servers/:server\r\n// going to /servers/one%2Ftwo\r\n// should give\r\nthis.$route.params.server // one/two\r\n```\r\n\r\nIn fact, this PR makes this possible, it wasn't working before.\r\n\r\nSimilarly, doing `router.push({ name: 'servers', params: { server: 'one/two' }})` will change the url to `/servers/one%2Ftwo` while giving the correct value in `$route.params.server`.\r\n\r\n## Why this can't be done automatically by the router\r\n\r\nWe could automatically call `encodeURI()` on each static segment of a path but this would also break code for users who are already correctly encoding `path` (you should always encode URLs, even before this change).\r\n\r\n## How to help the migration\r\n\r\nSince we were never supposed to pass an unencoded `path` to a route record or even call `router.push()` with an unencoded string or `path` property, I propose to warn in dev mode if any unencoded character is passed to help people be aware of how they should encode their routes.\r\n\r\n---\r\n\r\n\r\n### Internal explanation\r\n\r\nPreviously, this used to work because we were decoding paths twice, but this created other problems like **errors with URLs containing the character `%` encoded**. By fixing this bug we must remove the `decode` call made on the path when matching against existing routes, but this also makes it **impossible to automatically encode `path` anymore** because the user wouldn't be able to provide encoded characters, e.g. the `/` character (`%2F`) would be transformed to its encoded version, `%252F` (`%` is encoded as `%25`) and there wouldn't be a way to match an encoded slash character which is necessary in segments of the URL since the slash character is used to differentiate segments in a URL. Without this change, we can't correctly decode `%2F`\r\n\r\n\r\nOverall, this makes things consistent and it's also the same behavior that exists in v4\r\n\r\nClose #3337\r\nClose #3103\r\nClose #3125\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3350","RelatedDescription":"Open PR \"fix(encoding): decode params\" (#3350)"},{"Id":"724515739","IsPullRequest":false,"CreatedAt":"2020-10-19T11:15:21","Actor":"wxwzl","Number":"3349","RawContent":null,"Title":"vue-router.esm-bundler.js?6c02:1031 Uncaught Error: Route paths should start with a \"/\": \"**\" should be \"/**\".","State":"closed","Body":"vue-router  4.0.0-beta.13\r\n\r\n\r\nvue-router.esm-bundler.js?6c02:1031 Uncaught Error: Route paths should start with a \"/\": \"**\" should be \"/**\".\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3349","RelatedDescription":"Closed issue \"vue-router.esm-bundler.js?6c02:1031 Uncaught Error: Route paths should start with a \"/\": \"**\" should be \"/**\".\" (#3349)"},{"Id":"723839235","IsPullRequest":true,"CreatedAt":"2020-10-17T20:12:52","Actor":"tristansokol","Number":"3348","RawContent":null,"Title":"Docs Add app engine to history mode docs","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nHi! I just finished moving my personal site to Vue3 and though that others might benefit from this addition to the history mode docs. \r\n\r\nLet me know if you have any feedback, and have a wonderful day. ","Url":"https://github.com/vuejs/vue-router/pull/3348","RelatedDescription":"Open PR \"Docs Add app engine to history mode docs\" (#3348)"},{"Id":"723106865","IsPullRequest":false,"CreatedAt":"2020-10-16T12:02:01","Actor":"FIGHTING-TOP","Number":"3347","RawContent":null,"Title":"Hash模式中location.search和location.hash的位置顺序使用有误","State":"closed","Body":"### Version\r\n3.4.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/naughty-sky-vj71h?file=/src/components/HelloWorld.vue](https://codesandbox.io/s/naughty-sky-vj71h?file=/src/components/HelloWorld.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n使用vue-router的Hash模式\r\n使用vm.$route.query获取url中location.search参数在以下情况获取不到，\r\neg:  http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument\r\n\r\n\r\n### What is expected?\r\n应该是：location.search 应该是排在 location.hash 前面时可以用vm.$route.query来获取location.search参数\r\n\r\n### What is actually happening?\r\n规范的url中，location.search 应该是排在 location.hash 前面的，但是在实际上，我们使用 vue-router却是在hash排在search之前时才能获取到\r\n\r\n---\r\n此外 $router.push() 和 $router.replace() 具有同样的问题\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3347","RelatedDescription":"Closed issue \"Hash模式中location.search和location.hash的位置顺序使用有误\" (#3347)"},{"Id":"723023697","IsPullRequest":false,"CreatedAt":"2020-10-16T08:57:51","Actor":"adamprocter","Number":"3346","RawContent":null,"Title":"iOS history mode triggers page refresh","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/vehbg57t/](http://jsfiddle.net/vehbg57t/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis issue is back. iOS 14.0.1\r\nI managed to stop it happening all the time but no reason I can fathom. Visit on iOS device (iPad / iPhone), must be actual device. https://alpha.nodenogg.in\r\n\r\n\r\nTap my lists\r\nGive you self a name (lowercase no spaces)\r\nTap store\r\nCreate a microcosm (lowercase no spaces)\r\nTwo Join\r\n\r\nNow without creating a node\r\nTap to another view such as cards\r\nScreen will hit refresh problem. \r\n\r\nNow a workaround seems to be to create a node on that view first. \r\n\r\nDoesnt effect Android or desktop\r\n\r\n\r\n### What is expected?\r\nShould load page \r\n\r\n### What is actually happening?\r\nGoes black / keep trying to refresh \r\n\r\n---\r\nLooks like this previous issue - https://github.com/vuejs/vue-router/issues/890\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3346","RelatedDescription":"Closed issue \"iOS history mode triggers page refresh\" (#3346)"},{"Id":"722397919","IsPullRequest":false,"CreatedAt":"2020-10-15T14:38:40","Actor":"saileshkush95","Number":"3345","RawContent":null,"Title":"Handle Layout design on the basis of hostname.","State":"closed","Body":"I'm using this code to distinguish routes of different hostname.\r\n```\r\nimport default_routes from \"./default\";\r\nimport tenantone from \"./tenantone\";\r\nimport tenanttwo from \"./tenanttwo\";\r\n\r\nconst currentHostName = window.location.hostname;\r\nlet router;\r\n\r\nif (currentHostName === \"127.0.0.1\") {\r\n  router = tenantone;\r\n} else if (currentHostName === \"localhost\") {\r\n  router = tenanttwo;\r\n} else {\r\n  router = default_routes;\r\n}\r\n\r\nexport default router;\r\n```\r\n and this is working properly but I've little bit issue. Since every hostname has completely different layout. for example when i'm using this code in App.vue\r\n```\r\n<template>\r\n    <div id=\"nav\">\r\n      <router-link to=\"/\">Home</router-link>\r\n      <router-link to=\"/about\">About</router-link>\r\n    </div>\r\n  <router-view />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"App\",\r\n\r\n  data: () => ({\r\n    //\r\n  }),\r\n};\r\n</script>\r\n```\r\nNavbar is available in all the tenant. and also this is the problem. How can I handle this situation properly. because, each and every tenant have its own navbar design and layout.  I didn't want to repeat myself. \r\n\r\nand here is my project layout.\r\n\r\n![Screenshot from 2020-10-15 20-23-14](https://user-images.githubusercontent.com/28560875/96144807-4a9d6380-0f24-11eb-925a-af34af583ef8.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3345","RelatedDescription":"Closed issue \"Handle Layout design on the basis of hostname.\" (#3345)"},{"Id":"722180595","IsPullRequest":false,"CreatedAt":"2020-10-15T10:01:43","Actor":"SergeiPleshkov","Number":"3343","RawContent":null,"Title":"Nuxt-link and router-link don't create href attribute","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/SergeiPleshkov/create-nuxt-app](https://github.com/SergeiPleshkov/create-nuxt-app)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nServe reproduction repo, inspect the source code.\r\n\r\n![image](https://user-images.githubusercontent.com/29925191/95989736-55c49680-0e33-11eb-959b-bb39625e24f7.png)\r\n\r\nsource code from devtools' network tab\r\n![image](https://user-images.githubusercontent.com/29925191/95989883-8278ae00-0e33-11eb-8c4b-dd5940c365d9.png)\r\n\r\ndocument ready\r\n![image](https://user-images.githubusercontent.com/29925191/95989982-a1774000-0e33-11eb-9057-39a8ba700b8f.png)\r\n\r\n\r\n\r\n### What is expected?\r\nPassing not defined dynamic prop to `<n-link>` or `<router-link>'`should not cause href loss in SSR mode.\r\n\r\n\r\n### What is actually happening?\r\nHref attribute appears after browser render.\r\n\r\n\r\n---\r\nI also created an [issue](https://github.com/nuxt/nuxt.js/issues/8204) in nuxt repo, but i think this is mainly vue-router problem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3343","RelatedDescription":"Closed issue \"Nuxt-link and router-link don't create href attribute\" (#3343)"},{"Id":"721361303","IsPullRequest":false,"CreatedAt":"2020-10-15T08:27:05","Actor":"laomu1988","Number":"3341","RawContent":null,"Title":"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/laomu1988/pen/QWEjezL?editors=1011](https://codepen.io/laomu1988/pen/QWEjezL?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick jump button\r\n\r\n### What is expected?\r\nrouter changed\r\n\r\n### What is actually happening?\r\nrouter not change and the console has error info.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3341","RelatedDescription":"Closed issue \"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}\" (#3341)"},{"Id":"721945887","IsPullRequest":false,"CreatedAt":"2020-10-15T03:39:56","Actor":"710898293","Number":"3342","RawContent":null,"Title":"处理加载状态会导致组件内的守卫失效","State":"closed","Body":"在https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%A4%84%E7%90%86%E5%8A%A0%E8%BD%BD%E7%8A%B6%E6%80%81\r\n在这处理路由懒加载状态\r\n但会导致组件内的守卫失效\r\nhttps://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB","Url":"https://github.com/vuejs/vue-router/issues/3342","RelatedDescription":"Closed issue \"处理加载状态会导致组件内的守卫失效\" (#3342)"},{"Id":"721357963","IsPullRequest":false,"CreatedAt":"2020-10-14T10:59:17","Actor":"laomu1988","Number":"3340","RawContent":null,"Title":"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}","State":"closed","Body":"**Version**\r\n3.4.6\r\n\r\n**Reproduction link**\r\nhttps://codepen.io/laomu1988/pen/QWEjezL?editors=1011\r\n\r\n**Steps to reproduce**\r\nclick jump button\r\n\r\n**What is expected?**\r\nrouter changed\r\n\r\n**What is actually happening?**\r\nrouter not change  and the console has error info.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3340","RelatedDescription":"Closed issue \"router.push with query {id: undefined} can not work when prev query is {aaa: 'xxx'}\" (#3340)"},{"Id":"720686178","IsPullRequest":false,"CreatedAt":"2020-10-13T18:57:51","Actor":"philippkuehn","Number":"3339","RawContent":null,"Title":"\"scroll-margin-top\" not working","State":"closed","Body":"edit: sorry wrong repo","Url":"https://github.com/vuejs/vue-router/issues/3339","RelatedDescription":"Closed issue \"\"scroll-margin-top\" not working\" (#3339)"},{"Id":"720051384","IsPullRequest":false,"CreatedAt":"2020-10-13T10:31:14","Actor":"muety","Number":"3338","RawContent":null,"Title":"History mode config example for Caddy 2 webserver","State":"closed","Body":"### What problem does this feature solve?\r\n[!1555](https://github.com/vuejs/vue-router/pull/1555) has introduced a snippet to configure the Caddy web server to be compatible with vue-router's history mode. However, for version 2 of Caddy, the config directives' syntax has changed. \r\n\r\n### What does the proposed API look like?\r\nOne might either use [`try_files`](https://caddyserver.com/docs/caddyfile/directives/try_files) or [`rewrite`](https://caddyserver.com/docs/caddyfile/directives/rewrite).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3338","RelatedDescription":"Closed issue \"History mode config example for Caddy 2 webserver\" (#3338)"},{"Id":"718817027","IsPullRequest":false,"CreatedAt":"2020-10-11T11:35:38","Actor":"posva","Number":"3337","RawContent":null,"Title":"Slashes are not decoded (%2F -> /) when directly navigating to a url","State":"open","Body":"Repro: https://jsfiddle.net/c61xvkym/\r\n\r\nParams should be decoded. It worked on 3.4.5\r\n\r\nRef https://github.com/vuejs/vue-router/pull/3323","Url":"https://github.com/vuejs/vue-router/issues/3337","RelatedDescription":"Open issue \"Slashes are not decoded (%2F -> /) when directly navigating to a url\" (#3337)"},{"Id":"718505520","IsPullRequest":false,"CreatedAt":"2020-10-10T08:56:42","Actor":"yuhonyon","Number":"3336","RawContent":null,"Title":"Resource loading failed, hash route lost","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://vux.li/demos/v2/? x-page=github#/component/alert](https://vux.li/demos/v2/? x-page=github#/component/alert)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA page URL is xxx.com#/ A Load a.hunk.js on demand\r\n\u2028If a.hunk.js fails to load, the vue-Router resets the URL to xxx.com#/\u2028\r\nThen the user refreshes the page and goes to the wrong page\r\nReal scene:\u2028\r\nOpen the URL https://vux.li/demos/v2 #/component/alert? x-page=github\u2028\r\nBreakpoint static resources 108 .De037dbd118e6ee543e8. Js\r\n\u2028Refresh the page and the URL will change to https://vux.li/demos/v2 #/\r\n\u2028Unbreakpoint refresh page to home page\r\n\r\n### What is expected?\r\nDo not change the page address if the resource failed to load\r\n\r\n### What is actually happening?\r\nResource loading failed, isError(to)=== true in hook mode, ensureURL was called to modify the page URL\r\n\r\n\r\n---\r\nDo not understand why such a design, weak network is very easy to lead to page jump error or parameter loss, resulting in multiple serious online failure\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3336","RelatedDescription":"Closed issue \"Resource loading failed, hash route lost\" (#3336)"},{"Id":"718504948","IsPullRequest":false,"CreatedAt":"2020-10-10T01:58:48","Actor":"yuhonyon","Number":"3335","RawContent":null,"Title":"Resource loading failed, hash route lost","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n###  Reproduction link\r\nhttps://vux.li/demos/v2/? x-page=github#/component/alert\r\n\r\n###  Steps to reproduce\r\nA page URL is xxx.com#/ A Load a.hunk.js on demand\r\nIf a.hunk.js fails to load, the vue-Router resets the URL to xxx.com#/\r\nThen the user refreshes the page and goes to the wrong page\r\n\r\nReal scene:\r\nOpen the URL https://vux.li/demos/v2 #/component/alert? x-page=github\r\nBreakpoint static resources 108 .De037dbd118e6ee543e8. Js\r\nRefresh the page and the URL will change to https://vux.li/demos/v2 #/\r\nUnbreakpoint refresh page to home page\r\n\r\n###  What is expected?\r\nDo not change the page address if the resource failed to load\r\n\r\n###  What is actually happening?\r\nResource loading failed, isError(to)=== true in hook mode, ensureURL was called to modify the page URL\r\n\r\nDo not understand why such a design, weak network is very easy to lead to page jump error or parameter loss, resulting in multiple serious online failure","Url":"https://github.com/vuejs/vue-router/issues/3335","RelatedDescription":"Closed issue \"Resource loading failed, hash route lost\" (#3335)"},{"Id":"718073277","IsPullRequest":false,"CreatedAt":"2020-10-09T11:41:57","Actor":"yuhonyon","Number":"3334","RawContent":null,"Title":"路由丢失","State":"closed","Body":"### Version\r\n3.4.6\r\n\r\n### Reproduction link\r\n[https://vux.li/demos/v2/?x-page=github#/component/alert](https://vux.li/demos/v2/?x-page=github#/component/alert)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA页面 地址是xxx.com#/a  按需加载a.chunk.js\r\n如果a.chunk.js加载失败, vue-router会把地址重置成xxx.com#/\r\n接下来用户刷新网页就会去到错误的页面\r\n\r\n真实场景:\r\n打开地址https://vux.li/demos/v2/#/component/alert?x-page=github\r\n断点静态资源108.de037dbd118e6ee543e8.js\r\n刷新页面,地址会变成https://vux.li/demos/v2/#/\r\n取消断点刷新页面 页面跳转到了首页\r\n\r\n### What is expected?\r\n资源加载失败 不要修改页面地址\r\n\r\n### What is actually happening?\r\n资源加载失败 , hook方式里判断isError(to)===ture 则调用ensureURL修改了页面地址\r\n\r\n---\r\n不理解为什么这么设计, 弱网就非常容易导致页面跳转错误或者参数丢失, 多次导致严重的线上故障\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3334","RelatedDescription":"Closed issue \"路由丢失\" (#3334)"},{"Id":"713134684","IsPullRequest":false,"CreatedAt":"2020-10-01T20:37:59","Actor":"phlegx","Number":"3333","RawContent":null,"Title":"On beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.4.5\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to Vuex. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3333","RelatedDescription":"Closed issue \"On beforeEach Vuex store lost state after call next()\" (#3333)"},{"Id":"708937207","IsPullRequest":false,"CreatedAt":"2020-09-26T14:56:47","Actor":"j0Shi82","Number":"3331","RawContent":null,"Title":"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior","State":"closed","Body":"### Version\r\n3.4.4\r\n\r\n### Reproduction link\r\n[https://github.com/j0Shi82/vue-router-issue-3329](https://github.com/j0Shi82/vue-router-issue-3329)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- pull [repo](https://github.com/j0Shi82/vue-router-issue-3329)\r\n- install [nodejs](https://nodejs.org/en/)\r\n- run `npm install` or `yarn install`\r\n- run `npm run-script start` or `yarn run start`\r\n- navigate to `http://localhost:8085/one`\r\n\r\n### What is expected?\r\nShows `http://localhost:8085/two`\r\n\r\n### What is actually happening?\r\nServer Error 500\r\n\r\n---\r\nThis is a follow-up to https://github.com/vuejs/vue-router/issues/3329 with a working reproduction and a little more information about what is actually causing the issue. \r\n\r\nI'm not sure this is a bug or just an edge case that you have to work around yourself. It's caused by combining SSR, async route components, and redirects within navigation guards. I tried dodging async routes on the server and only using them on the client bundle (to still get the benefit of code-splitting), but that led to hydration errors. \r\n\r\nPossible workarounds are switching to static route components, avoiding redirects within navigation guards, or using the `router.push` api instead of `next`. In our own application we went for the third choice on the server, but had to add additional logic to prevent hydration errors and handle the history mode correctly.\r\n\r\nEither way it might make sense to go over the [official SSR guide](https://ssr.vuejs.org/guide/routing.html#routing-with-vue-router) to better communicate this issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3331","RelatedDescription":"Closed issue \"SSR + Navigation Guards + Async Route Components Can Lead to Unintended Behavior\" (#3331)"},{"Id":"709404466","IsPullRequest":false,"CreatedAt":"2020-09-26T07:27:45","Actor":"greenpdx","Number":"3332","RawContent":null,"Title":"How to route into a page directly from browser","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/haoqtnsc/](https://jsfiddle.net/haoqtnsc/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have a verification page after signup. /validate?token=XXXX .  Now I get a 404  as stated in API history-mode server configs. I would like to go to that page directly.  It worked in development using \"npm run serve\" but not on live site.  /validate is a single static page.\r\n\r\n### What is expected?\r\nThe API states the that /user/id where id is some value, does not work.  I can understand that. but a single page with no extra route on the end, I think should work.\r\n\r\n### What is actually happening?\r\n404\r\n\r\n---\r\nIs there a way to jump to a static page in the app?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3332","RelatedDescription":"Closed issue \"How to route into a page directly from browser\" (#3332)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"733966418","IsPullRequest":false,"CreatedAt":"2020-11-01T13:29:02","Actor":"liRemons","Number":"1867","RawContent":null,"Title":"Vue3.0 如何在 setup 中使用 mapGetter","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nimport { mapGetters ,useStore } from \"vuex\";","Url":"https://github.com/vuejs/vuex/issues/1867","RelatedDescription":"Closed issue \"Vue3.0 如何在 setup 中使用 mapGetter\" (#1867)"},{"Id":"733965787","IsPullRequest":false,"CreatedAt":"2020-11-01T13:26:03","Actor":"liRemons","Number":"1866","RawContent":null,"Title":"Vue3.0 如何在 setup 中使用  mapGetters","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1866","RelatedDescription":"Closed issue \"Vue3.0 如何在 setup 中使用  mapGetters\" (#1866)"},{"Id":"733897281","IsPullRequest":false,"CreatedAt":"2020-11-01T06:46:36","Actor":"donPuerto","Number":"1865","RawContent":null,"Title":"How to modulize typescript in v4","State":"closed","Body":"I just check v4 docs, i could not able to find the module example? can you lead me the way?","Url":"https://github.com/vuejs/vuex/issues/1865","RelatedDescription":"Closed issue \"How to modulize typescript in v4\" (#1865)"},{"Id":"728849232","IsPullRequest":true,"CreatedAt":"2020-10-30T10:44:17","Actor":"Alex-Sokolov","Number":"1858","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1858","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1858)"},{"Id":"730039077","IsPullRequest":true,"CreatedAt":"2020-10-30T10:29:44","Actor":"jnxey","Number":"1860","RawContent":null,"Title":"[Repair] #1823 Getters are re-evaluated on every access","State":"closed","Body":"Go to issue for full details\r\nhttps://github.com/vuejs/vuex/issues/1823","Url":"https://github.com/vuejs/vuex/pull/1860","RelatedDescription":"Closed or merged PR \"[Repair] #1823 Getters are re-evaluated on every access\" (#1860)"},{"Id":"732491452","IsPullRequest":false,"CreatedAt":"2020-10-29T16:59:05","Actor":"StephenBeirlaen","Number":"1864","RawContent":null,"Title":"Devtools time travel always shows the most recent state (without new Vuex backend)","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/StephenBeirlaen/vuex-base-state-issue](https://github.com/StephenBeirlaen/vuex-base-state-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Install a fresh vue install via the latest Vue CLI but custom build (I just used Vue 2.x and Vuex selected)\r\n- add in a simple state in the vuex store (int: 0)\r\n- add in a simple commit (updateInt(state) {state.int = 1})\r\n- add in any component this.$store.commit('updateInt')\r\n- make sure you do not have the \"new vuex backend\" option enabled in devtools settings(default)\r\n- both your states in the vuex tab(base state and updateInt) will not show int as 1 instead of base state showing 0\r\n\r\nOR\r\nUse the provided repository and run:\r\n- yarn install\r\n- yarn serve\r\n- steps from above\r\n\r\n### What is expected?\r\nI expect time travel to work when jumping through the mutations history. A more recent mutation should not modify the mutations before that.\r\n\r\n### What is actually happening?\r\nWhen the \"new Vuex back-end\" option is disabled:\r\n\r\nWhen time traveling using the devtools to the different mutation states, the most recent state is always shown instead, even when jumping to the base state.\r\n\r\nReproduced on Chrome in Ubuntu 20.04 with devtools plugin 5.3.3 (latest)\r\n\r\n---\r\nThis issue is fixed when enabling the \"new Vuex back-end\" option. However, since this is a stable release, the old version should also still work when it is not deprecated.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1864","RelatedDescription":"Open issue \"Devtools time travel always shows the most recent state (without new Vuex backend)\" (#1864)"},{"Id":"731138810","IsPullRequest":false,"CreatedAt":"2020-10-28T06:19:13","Actor":"huhm","Number":"1863","RawContent":null,"Title":"typescript declaration for vuex","State":"closed","Body":"### What problem does this feature solve?\r\nI want to override the typescript declaration,but it throws errors, because the file(``vuex/types/vue.d.ts``) has defined.\r\nIs there any solution ?\r\nshim-vue.d.ts\r\n``` ts\r\nimport { Store } from 'vuex'\r\nimport { IStoreModules } from './store/modules/interface'\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $store: Store<IStoreModules>\r\n  }\r\n}\r\n```\r\n\r\nit throws an Error:\r\n```\r\nSubsequent property declarations must have the same type.  Property '$store' must be of type 'Store<any>', but here has type 'Store<IStoreModules>'.\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\n==\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1863","RelatedDescription":"Closed issue \"typescript declaration for vuex\" (#1863)"},{"Id":"731135749","IsPullRequest":false,"CreatedAt":"2020-10-28T06:12:13","Actor":"huhm","Number":"1862","RawContent":null,"Title":"typescript declaration for vuex","State":"closed","Body":"I want to override the typescript declaration,but it throws errors, because the file(``vuex/types/vue.d.ts``) has defined.\r\nIs there any solution ?\r\nshim-vue.d.ts\r\n``` ts\r\nimport { Store } from 'vuex'\r\nimport { IStoreModules } from './store/modules/interface'\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $store: Store<IStoreModules>\r\n  }\r\n}\r\n```\r\n\r\nit throws an Error:\r\n```\r\nSubsequent property declarations must have the same type.  Property '$store' must be of type 'Store<any>', but here has type 'Store<IStoreModules>'.\r\n```\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1862","RelatedDescription":"Closed issue \"typescript declaration for vuex\" (#1862)"},{"Id":"730593488","IsPullRequest":false,"CreatedAt":"2020-10-27T16:08:28","Actor":"jechazelle","Number":"1861","RawContent":null,"Title":"Update object in v-for from computed and view reactivity","State":"closed","Body":"I would like to know how can I develop a reactivity computed when I update a value in v-for from computed.\r\n\r\nWhen I modified the Input in the child component, the view isn't rendering. In vuex, the state is updated, but not the view.\r\n\r\n> view from child component :\r\n\r\n[![enter image description here][1]][1]\r\n\r\n - First Hello : data.content (props from parent)\r\n - Second hello : currentPost.content (computed on child)\r\n - Third hello : input\r\n\r\n\r\nCurrently, I have 2 components :\r\n\r\n> parent.vue\r\n\r\n    <template>\r\n    <div class=\"parent\">\r\n        <child v-for=\"(post, indexPost) in posts\" :key=\"indexPost\" :index-post=\"indexPost\" :data=\"post\" />\r\n    </div>\r\n    </template>\r\n\r\n    <script>\r\n    import { mapGetters } from 'vuex'\r\n    import Post from '../child'\r\n\r\n    export default {\r\n    name: 'Parent',\r\n    components: {\r\n        child: Child,\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            posts: 'feed/getFeed',\r\n        }),\r\n    },\r\n    }\r\n    </script>\r\n\r\n> child.vue\r\n\r\n    <template>\r\n        <div class=\"child\">\r\n            <span class=\"content\">{{ data.content }}</span>\r\n            <span class=\"content\">{{ currentPost.content }}</span>\r\n\r\n            <input :value=\"data.content\" type=\"text\" placeholder=\"Content...\" @input=\"updatePostContent($event)\" />\r\n        </div>\r\n    </template>\r\n\r\n    <script>\r\n    import { mapGetters } from 'vuex'\r\n\r\n    export default {\r\n        name: 'Child',\r\n        props: {\r\n            indexPost: {\r\n                type: Number,\r\n                default: null,\r\n            },\r\n            data: {\r\n                type: Object,\r\n                default: null,\r\n            },\r\n        },\r\n        computed: {\r\n            currentPost() {\r\n                return this.$store.getters['feed/getFeed'][this.indexPost]\r\n            },\r\n        },\r\n        methods: {\r\n            updatePostContent(event) {\r\n                this.$store.dispatch('feed/updateFeedPost', {\r\n                    indexPost: this.indexPost,\r\n                    payload: { content: event.target.value },\r\n        })\r\n        },\r\n    }\r\n    </script>\r\n\r\n> store/feed.js \r\n\r\n    export const state = () => ({\r\n        feed: [],\r\n    })\r\n\r\n    export const getters = {\r\n        getFeed(state) {\r\n            return state.feed\r\n        },\r\n    }\r\n\r\n    export const mutations = {\r\n        GET_FEED(state, payload) {\r\n            state.feed = payload\r\n        },\r\n\r\n        UPDATE_FEED_POST(state, { indexPost, payload }) {\r\n            // I try with this\r\n            // state.feed[indexPost] = { ...state.feed[indexPost], ...payload }\r\n\r\n            state.feed[indexPost] = Object.assign({}, state.feed[indexPost], payload)\r\n        },\r\n    }\r\n\r\n    export const actions = {\r\n        getFeed({ commit }, payload) {\r\n            ...\r\n        },\r\n\r\n        updateFeedPost({ commit }, params) {\r\n            commit('UPDATE_FEED_POST', params)\r\n        },\r\n    }\r\n\r\n\r\nAfter some researches, I fixed that with use [Ramda](https://ramdajs.com/) in the store :\r\n\r\n      import * as R from 'ramda'\r\n\r\n      ...\r\n\r\n      UPDATE_FEED_POST(state, { indexPost, payload }) {\r\n        state.feed = R.over(R.lensPath([indexPost]), R.mergeDeepLeft(payload), state.feed)\r\n      },\r\n\r\nDo you have an idea, why with simple Object.assign the reactivity doesn't work?\r\n\r\nThank you !\r\n\r\n  [1]: https://i.stack.imgur.com/xmB67.png","Url":"https://github.com/vuejs/vuex/issues/1861","RelatedDescription":"Closed issue \"Update object in v-for from computed and view reactivity\" (#1861)"},{"Id":"730030909","IsPullRequest":true,"CreatedAt":"2020-10-27T01:49:09","Actor":"jnxey","Number":"1859","RawContent":null,"Title":"4.0","State":"closed","Body":"Getters are re-evaluated on every access","Url":"https://github.com/vuejs/vuex/pull/1859","RelatedDescription":"Closed or merged PR \"4.0\" (#1859)"},{"Id":"727077529","IsPullRequest":true,"CreatedAt":"2020-10-23T10:01:34","Actor":"nisarhassan12","Number":"1857","RawContent":null,"Title":"Make contributions easier via automating the dev setup.","State":"closed","Body":"Hi.\r\n\r\nI work for Gitpod. This PR adds gitpod config to the repo to make contributions easier for newcomers i.e with a single click it will launch a workspace and automatically:\r\n\r\n- clone the `vuex` repo.\r\n- install the dependencies.\r\n- run `yarn dev` to serve the examples.\r\n- run `yarn docs` to start the vuepress sever.\r\n\r\nThis can be helpful for beginners i.e they can start coding instantly without setting anything up.\r\n\r\nYou can give it a try on my fork of the repo via the following link:\r\n\r\nhttps://gitpod.io/#https://github.com/nisarhassan12/vuex\r\n\r\nThis is how it looks:\r\n\r\n![image](https://user-images.githubusercontent.com/46004116/96831387-6d64d600-1456-11eb-8d18-2a04a12f7e95.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1857","RelatedDescription":"Closed or merged PR \"Make contributions easier via automating the dev setup.\" (#1857)"},{"Id":"724021614","IsPullRequest":true,"CreatedAt":"2020-10-23T09:47:29","Actor":"itomtom","Number":"1853","RawContent":null,"Title":"feat(types): adding logger type for logger plugin","State":"closed","Body":"* createLogger options takes in logger which by default is console but\r\ncan be overridden with own logger.\r\n* Adding Ilogger for logger options params which expects log method to\r\nbe implemented","Url":"https://github.com/vuejs/vuex/pull/1853","RelatedDescription":"Closed or merged PR \"feat(types): adding logger type for logger plugin\" (#1853)"},{"Id":"726388612","IsPullRequest":false,"CreatedAt":"2020-10-21T11:23:11","Actor":"Jokab","Number":"1856","RawContent":null,"Title":"dispatch: Enable extending built-in Promise by not wrapping action Promise","State":"open","Body":"### What problem does this feature solve?\r\nAt the moment it does not seem to be possible for an action to return a custom promise class, due to [`dispatch` creating its own Promise, using the built-in Promise](https://github.com/vuejs/vuex/blob/dev/src/store.js#L152).\r\n\r\nThis fact makes it seemingly impossible to fully use Vuex in use cases where it's necessary to cancel an ongoing promise. This would be useful for example when the action initiates a promise that contains an setInterval which needs to be cleared when the user performs some action. Leaving the promise to continue polling would be unnecessarily expensive.\r\n\r\nTo illustrate, below follows an example. I want the action to return my custom `CancellablePromise` in which I have extended the promise executor with an `onCancel` delegate which is called when `promise.cancel` is called.\r\n\r\n**Action**\r\n```ts\r\nasync [SomeAction.foo]({ state, dispatch, commit, rootGetters }) {\r\n  const cancellablePromise = new CancellablePromise<any>((resolve, reject, onCancel) => {\r\n    const interval = setInterval(async () => {\r\n      const status = await dispatch(SomeAction.bar);\r\n      if (status === \"goodstatus\") {\r\n        clearInterval(interval);\r\n        resolve();\r\n      } else if (status === \"badstatus\") {\r\n        clearInterval(interval);\r\n        reject();\r\n      } else if (status === \"pending\") {\r\n        ; // continue polling\r\n      }\r\n    }, 2000);\r\n\r\n    onCancel(() => {\r\n      clearInterval(interval);\r\n      reject();\r\n    });\r\n  });\r\n\r\n  return cancellablePromise;\r\n}\r\n```\r\n\r\n**Component**\r\n```ts\r\ndata: (() => {\r\n  promise: undefined as CancellablePromise<any> | undefined\r\n}),\r\n\r\nasync call() {\r\n  this.promise = this.$store\r\n    .dispatch(SomeAction.foo)\r\n    .then(response => {\r\n      // do something\r\n    }) as CancellablePromise<any>;\r\n},\r\n\r\nuserTookAction(event): void {\r\n  if (this.promise) {\r\n    this.promise.cancel(); // outputs cancel is not a function\r\n  }\r\n}\r\n```\r\n\r\nAs specified, `this.promise.cancel()` outputs that cancel is not a function, because my `CancellablePromise` is wrapped by `dispatch`.\r\n\r\nTo work around this problem I have been forced to create my own \"actions\" in a separate module which I call directly instead of through `dispatch`, and to which I pass the `ActionContext` in order to use the rest of Vuex.\r\n\r\n### What does the proposed API look like?\r\nI am not familiar with the internal workings of Vuex, but I would simply want the above example to work. Ideally `this.$store.dispatch(action)` would return the same type as returned by the action itself.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1856","RelatedDescription":"Open issue \"dispatch: Enable extending built-in Promise by not wrapping action Promise\" (#1856)"},{"Id":"726354605","IsPullRequest":false,"CreatedAt":"2020-10-21T10:35:03","Actor":"1xuanyuan1","Number":"1855","RawContent":null,"Title":"使用mapGetters 类型不识别","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/issues/1822](https://github.com/vuejs/vuex/issues/1822)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n> ```ts\r\n> export declare const mapGetters: Mapper<Computed>\r\n>   & MapperWithNamespace<Computed>;\r\n> \r\n> interface Mapper<R> {\r\n>   <Key extends string>(map: Key[]): { [K in Key]: R };\r\n>   <Map extends Record<string, string>>(map: Map): { [K in keyof Map]: R };\r\n> }\r\n> ```\r\n> \r\n> ![image](https://user-images.githubusercontent.com/6700408/96703524-86717680-13c5-11eb-938c-6aadcb7e1c5c.png)\r\n> \r\n> ```ts\r\n>     ...mapGetters({\r\n>       bookDetail: 'currentBook'\r\n>     })\r\n>     ...mapGetters<{bookDetail: string}>({\r\n>       bookDetail: 'currentBook'\r\n>     })\r\n> ```\r\n> \r\n> 我想识别mapGetters中的类型，应该是修改第三个参数 也就是 R的位置 把 Computed 改成自己要的类型，但是看不懂怎么操作 求指点\r\n\r\n\r\n\r\n### What is expected?\r\n能在vue单页里正确识别 mapGetters中的类型\r\n\r\n### What is actually happening?\r\n不能识别\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1855","RelatedDescription":"Open issue \"使用mapGetters 类型不识别\" (#1855)"},{"Id":"726322004","IsPullRequest":false,"CreatedAt":"2020-10-21T09:51:33","Actor":"1xuanyuan1","Number":"1854","RawContent":null,"Title":"使用mapGetters 类型不识别","State":"closed","Body":"```ts\r\nexport declare const mapGetters: Mapper<Computed>\r\n  & MapperWithNamespace<Computed>;\r\n\r\ninterface Mapper<R> {\r\n  <Key extends string>(map: Key[]): { [K in Key]: R };\r\n  <Map extends Record<string, string>>(map: Map): { [K in keyof Map]: R };\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/6700408/96703524-86717680-13c5-11eb-938c-6aadcb7e1c5c.png)\r\n```ts\r\n    ...mapGetters({\r\n      bookDetail: 'currentBook'\r\n    })\r\n    ...mapGetters<{bookDetail: string}>({\r\n      bookDetail: 'currentBook'\r\n    })\r\n```\r\n我想识别mapGetters中的类型，应该是修改第三个参数 也就是 R的位置 把 Computed 改成自己要的类型，但是看不懂怎么操作 求指点","Url":"https://github.com/vuejs/vuex/issues/1854","RelatedDescription":"Closed issue \"使用mapGetters 类型不识别\" (#1854)"},{"Id":"723942051","IsPullRequest":false,"CreatedAt":"2020-10-18T13:38:22","Actor":"roborock","Number":"1852","RawContent":null,"Title":"Vue Toggle  Chaining Request Like Cascading","State":"closed","Body":"### What problem does this feature solve?\r\nI have a issue about toggle \r\n\r\nWhen ı click each plus api generate child data from parent like a cascade dropdown , but ı want to toggle all with a button when i try it my toggle just open two level not effect every levels so\r\n\r\nI dont know why its reason\r\n\r\nI want to tell how toggle all button works: When i clicked a button first of all first request sending to api then im watching firstdata parameter inside component request sending to api then all data comes from api and filling related variable then i have second state variable for trigging next level. im commit nextlevel status variable true in when request done next component inside watch this variable for request but this is not work properly Im sorry for bad english ı hope i could tell my problem\r\n\r\nWho can help me :(\r\n\r\nThanks\r\n\r\n### What does the proposed API look like?\r\n.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1852","RelatedDescription":"Closed issue \"Vue Toggle  Chaining Request Like Cascading\" (#1852)"},{"Id":"723557867","IsPullRequest":true,"CreatedAt":"2020-10-16T22:05:48","Actor":"urbnjamesmi1","Number":"1851","RawContent":null,"Title":"Check existence of module parent in isRegistered (fix #1850)","State":"open","Body":"This PR fixes issue #1850 .\r\n\r\nIf you call `store.hasModule()` with an array where none of the modules or submodules are registered in the store, an error is thrown instead of returning false:\r\n\r\n```\r\nTypeError: Cannot read property 'hasChild' of undefined\r\n        at ModuleCollection.isRegistered (/node_modules/vuex/dist/vuex.common.js:291:17)\r\n        at Store.hasModule (/node_modules/vuex/dist/vuex.common.js:611:24)\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vuex/pull/1851","RelatedDescription":"Open PR \"Check existence of module parent in isRegistered (fix #1850)\" (#1851)"},{"Id":"723551121","IsPullRequest":false,"CreatedAt":"2020-10-16T21:48:46","Actor":"urbnjamesmi1","Number":"1850","RawContent":null,"Title":"TypeError: Cannot read property 'hasChild' of undefined","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xkLh4njp/](https://jsfiddle.net/xkLh4njp/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a Vuex store.\r\n2. Call store.hasModule() with an array of at least 2 elements where neither module has been registered to the store.\r\n\r\n### What is expected?\r\nstore.hasModule() to return false\r\n\r\n### What is actually happening?\r\nError \"TypeError: Cannot read property 'hasChild' of undefined\" is thrown\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1850","RelatedDescription":"Open issue \"TypeError: Cannot read property 'hasChild' of undefined\" (#1850)"},{"Id":"723500261","IsPullRequest":false,"CreatedAt":"2020-10-16T20:04:35","Actor":"goeh","Number":"1849","RawContent":null,"Title":"Try root module first, then namespaced module","State":"open","Body":"### What problem does this feature solve?\r\nWe're developing modularized application(s) for our customers with separate Vue projects for each module. Each customer have a custom main application with different sub-applications/modules in package.json. Each sub-application have their own namespaced Vuex store. We want to have a default implementation of some actions in the sub-applications, then be able to override the default action in the main application.\r\n\r\nOur current workaround/hack is to try them both:\r\n\r\n`this.$store.dispatch('actionName', payload, { root: true }) || this.$store.dispatch('moduleName/actionName', payload)`\r\n\r\nThat way Vuex will look for the action in root module first, and if not found there it will look in the namespaced module and use that (default) action. It works but in dev mode we get a console error  about module not found if we don't have an action in root.\r\n\r\n### What does the proposed API look like?\r\nIt would be nice to have an option that tells Vuex to look in root module first (without namespace) and then in local module if the action is not found in root module. I can't come up with a good name for the option. When the option is true Vuex should remove the module name and try to find the actionName in root module. If not found there it should do as normal use the full actionName as specified.\r\n\r\n`this.$store.dispatch('moduleName/actionName', payload, { namespaced: false  }`\r\n\r\nAnother way would be to allow for an array of actions and Vuex would try each action in order.\r\n\r\n`this.$store.dispatch(['actionName', 'moduleName/actionName'], payload, { root: true  }`\r\n\r\nThat would actually be a more flexible solution because I could specify as many action names as I want.\r\n\r\n`this.$store.dispatch(['tryThisFirst', 'moduleA/thenThis', 'moduleB/andFinallyThis'], payload, { root: true  }`\r\n\r\nOr is there another way to solve this problem? We want a default implementation in imported module, but possible to override action in the main application.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1849","RelatedDescription":"Open issue \"Try root module first, then namespaced module\" (#1849)"},{"Id":"723083515","IsPullRequest":false,"CreatedAt":"2020-10-16T10:02:59","Actor":"lihaotian0607","Number":"1848","RawContent":null,"Title":"Property  does not exist on type","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\nthe console can print, but the compilation fails the check!!!\r\n\r\n```ts\r\n<script lang=\"ts\">\r\nimport {Vue} from \"vue-class-component\";\r\nimport {useStore} from 'vuex'\r\nimport {AppState} from \"@/types/state\";\r\n\r\nexport default class Test extends Vue {\r\n\r\n  private store = useStore<AppState>();\r\n\r\n  public mounted(): void {\r\n    console.log(this.store.state);\r\n    console.log(this.store.state.app.count);\r\n  }\r\n}\r\n</script>\r\n```\r\n![image](https://user-images.githubusercontent.com/32523475/96245306-63b01e00-0fd1-11eb-995d-3c9d4ee87b34.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/32523475/96245145-36637000-0fd1-11eb-82cb-a7ade8cb831c.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1848","RelatedDescription":"Open issue \"Property  does not exist on type\" (#1848)"},{"Id":"721548115","IsPullRequest":false,"CreatedAt":"2020-10-14T15:12:39","Actor":"mannok","Number":"1847","RawContent":null,"Title":"Vue 3 markRaw / shallowRef is not working in Vuex","State":"open","Body":"### Version\r\n4.0.0-beta.4\r\n\r\n### Reproduction link\r\n[https://github.com/mannok/vuex-traverse](https://github.com/mannok/vuex-traverse)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. clone from minimal reproduction link\r\n2. npm install\r\n3. open App.vue to see code\r\n4. npm run dev\r\n5. Open browser and watch console log\r\n6-a. You will see a log msg `THIS MSG IS SHOWN WHEN IT WAS SET ON STATE!` even I have marked raw to the object.  i.e. log msg shouldn't be shown, as `markRaw(obj)`'s properties shouldn't be traversed down when it was set to state.\r\n6-b. Comment line 30 and comment line 31 and refresh the browser again. You will no longer see the log msg as Vue won't traverse down `markRaw(obj)`.\r\n\r\n### What is expected?\r\nWhen I call markRaw() for any object. It shouldn't be traversed in any scenario. (Vue or Vuex)\r\n\r\n### What is actually happening?\r\nIt is acutally traversing when the marked raw object is set on Vuex state.\r\n\r\n---\r\nMaybe you will think this problem doesn't matter, but currently I am using a big library which comprises of many complex object. I just want to store them inside state as raw object / shallowRef, but I have no way to do it... It keeps traversing deeply for me and the performance is really bad... Please help me out! Thanks in advance!\r\n\r\n**UPDATE**\r\nSeems that my problem is that I have no way to stop Vuex to run `traverse()` inside `vue\\dist\\vue.runtime.global.js`. FYR:\r\n\r\n```js\r\nfunction traverse(value, seen = new Set()) {\r\n  if (!isObject(value) || seen.has(value)) {\r\n    return value;\r\n  }\r\n  seen.add(value);\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen);\r\n  }\r\n  else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen);\r\n    }\r\n  }\r\n  else if (isMap(value)) {\r\n    value.forEach((_, key) => {\r\n      traverse(value.get(key), seen);\r\n    });\r\n  }\r\n  else if (isSet(value)) {\r\n    value.forEach(v => {\r\n      traverse(v, seen);\r\n    });\r\n  }\r\n  else {\r\n    for (const key in value) {\r\n      traverse(value[key], seen);  // Vuex recursively loop all my raw object properties in this line\r\n    }\r\n  }\r\n  return value;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1847","RelatedDescription":"Open issue \"Vue 3 markRaw / shallowRef is not working in Vuex\" (#1847)"},{"Id":"721402871","IsPullRequest":false,"CreatedAt":"2020-10-14T12:10:00","Actor":"zenHeart","Number":"1846","RawContent":null,"Title":"dynamic register same module,  will trigger multi times","State":"open","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/zenheart/pen/oNLbvJO](https://codepen.io/zenheart/pen/oNLbvJO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nsee demo <https://codepen.io/zenheart/pen/oNLbvJO>\r\n\r\n### What is expected?\r\nWhy registerModule  call the same path multi times, will replace old path, but push handle to `_mutations`, see demo <https://codepen.io/zenheart/pen/oNLbvJO> \r\n\r\n### What is actually happening?\r\nthis will make add run twice. It's weird, I think we should replace all,  this feature is expected, why?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1846","RelatedDescription":"Open issue \"dynamic register same module,  will trigger multi times\" (#1846)"},{"Id":"719418535","IsPullRequest":true,"CreatedAt":"2020-10-12T14:19:04","Actor":"kiaking","Number":"1845","RawContent":null,"Title":"docs: add v4 docs","State":"open","Body":"This PR adds docs for Vuex 4. It uses VitePress as a builder.\r\n\r\n**TODOS**\r\n- [x] Update existing code example to use new API such as `createStore`.\r\n- [x] Add new APIs to the API Reference page.\r\n- [x] Add Composition API page.\r\n- [x] Add TypeScript page.\r\n- [x] Add migration guide from Vuex 3.\r\n- [x] Setup domain for the v4 docs and Netlify integration.","Url":"https://github.com/vuejs/vuex/pull/1845","RelatedDescription":"Open PR \"docs: add v4 docs\" (#1845)"},{"Id":"716601175","IsPullRequest":false,"CreatedAt":"2020-10-09T15:50:38","Actor":"12120290x1","Number":"1844","RawContent":null,"Title":"vue3 template ref   vuex => wrong reactive system","State":"closed","Body":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://github.com/12120290x1/error](https://github.com/12120290x1/error)\r\n\r\n### Steps to reproduce\r\nstep1: click aaaa button\r\nstep2: click menu button\r\n\r\n### What is expected?\r\ntag nav have fixed-left-0 like this:\r\n\r\n```html\r\n<nav id=\"nav1\" class=\"bg-primary fixed-left-0\">\r\n```\r\n\r\n### What is actually happening?\r\nthis is actually happening:\r\n\r\n```html\r\n<nav id=\"nav1\" class=\"bg-primary\">\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1844","RelatedDescription":"Closed issue \"vue3 template ref   vuex => wrong reactive system\" (#1844)"},{"Id":"712049161","IsPullRequest":true,"CreatedAt":"2020-10-09T09:35:55","Actor":"anschwa","Number":"1838","RawContent":null,"Title":"docs: warn about calling unsubscribe (fix #1050)","State":"closed","Body":"I added a warning text to the docs about remembering to call `unsubscribe` when subscribing to the store.","Url":"https://github.com/vuejs/vuex/pull/1838","RelatedDescription":"Closed or merged PR \"docs: warn about calling unsubscribe (fix #1050)\" (#1838)"},{"Id":"713664085","IsPullRequest":false,"CreatedAt":"2020-10-02T14:27:08","Actor":"leerw4","Number":"1843","RawContent":null,"Title":"Offer types for `getters` on the Store instance","State":"open","Body":"### What problem does this feature solve?\r\nThe `getters` key of the Store instance has type `any` which is not useful. While type casting can be used, it's just a pain to have to do every single place you would want to reference a getter.\r\n\r\n### What does the proposed API look like?\r\nOne solution would be to offer a second (optional) generic type of the `Store` type that would default to `any`, and have that value be used for the type of the `getters` key.\r\n\r\n```\r\nexport declare class Store<S, G = any> {\r\n  constructor(options: StoreOptions<S>);\r\n\r\n  readonly state: S;\r\n  readonly getters: G;\r\n\r\n  ...\r\n}\r\n```\r\n\r\nI've tested the above solution and it works and should also be backwards compatible.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1843","RelatedDescription":"Open issue \"Offer types for `getters` on the Store instance\" (#1843)"},{"Id":"712149753","IsPullRequest":false,"CreatedAt":"2020-10-02T07:14:47","Actor":"JanDevDE","Number":"1839","RawContent":null,"Title":"State changes not being rerendered when updating object","State":"closed","Body":"### Version\r\n3.4.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q32df9tj/45/](https://jsfiddle.net/q32df9tj/45/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOverwrite object with new object using state.object = newObject -> No rerender\r\n\r\nOverwrite object with state.user = Object.assign({}, user) ->  Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is expected?\r\nstate.user = user <- Should rerender, but apparently it doesn't because it's passing the value apparently.\r\n\r\nstate.user = Object.assign({}, user) <- Should work instead, but doesn't -> That's the issue, why?\r\n\r\nObject.assign(state.user, user) <- Works, but should be the same as Object.assign({}, user) because .assign should know which object to assign due to state.user = Object.assign\r\n\r\n### What is actually happening?\r\nOnly Object.assign({state.user}, user) assigns the value and causes Profile.vue to refresh\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1839","RelatedDescription":"Closed issue \"State changes not being rerendered when updating object\" (#1839)"},{"Id":"713137452","IsPullRequest":false,"CreatedAt":"2020-10-02T07:11:09","Actor":"phlegx","Number":"1842","RawContent":null,"Title":"On vue-router beforeEach Vuex store lost state after call next()","State":"closed","Body":"### Version\r\n3.5.1\r\n\r\n### Reproduction link\r\nno link at the moment.\r\n\r\n### Steps to reproduce\r\n1) In the Vue router function `router.beforeEach` I check (with `console.log`) for a store state (e.g. `store.getters['base/getLocale']`). Output: `de`\r\n2) After the check I call `next()`\r\n3) In the loaded component from the new route I re-check `this.$store.getters['base/getLocale']` and I get `en` that is default locale.\r\n\r\n### What is expected?\r\nNo Vuex state lost after next() call.\r\n\r\n### What is actually happening?\r\nLost of Vuex state after next() call.\r\n\r\n---\r\nIt is a related issue to vue-router. But I don't know, if it is a vue-router bug, a Vuex bug or something else.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1842","RelatedDescription":"Closed issue \"On vue-router beforeEach Vuex store lost state after call next()\" (#1842)"},{"Id":"712730669","IsPullRequest":false,"CreatedAt":"2020-10-01T10:55:47","Actor":"uncodable","Number":"1841","RawContent":null,"Title":"Access store within a router (non-component)","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1841","RelatedDescription":"Closed issue \"Access store within a router (non-component)\" (#1841)"},{"Id":"712729512","IsPullRequest":false,"CreatedAt":"2020-10-01T10:54:05","Actor":"uncodable","Number":"1840","RawContent":null,"Title":"Access store within vue-router","State":"closed","Body":"I want to achieve something this this:\r\n```ts\r\nimport { RouteRecordRaw, createRouter, createWebHistory } from \"vue-router\";\r\nimport store from \"@/store\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"../views/Login.vue\")\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"../views/Home.vue\"),\r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = store.state.authentication.loggedIn;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next({\r\n      name: \"Login\",\r\n      query: { redirect: to.fullPath }\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\nHowever I get:\r\n![image](https://user-images.githubusercontent.com/32820112/94800441-7d037880-03dc-11eb-873a-ebfb6c6c22e9.png)\r\n\r\nI've tried:\r\n- !!\r\n- (store && store.state.authentication.loggedIn)\r\n- can't inject useStore as this isn't a component and doesn't use the setup() method\r\n\r\nMy Vuex setup:\r\nstore:\r\n```ts\r\nimport { createStore } from \"vuex\";\r\nimport authentication from \"@/store/modules/authentication/index.ts\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    authentication: authentication\r\n  }\r\n});\r\n```\r\n\r\nauthentication module:\r\n```ts\r\nimport { ActionContext } from \"vuex\";\r\n\r\ntype User = {\r\n  id: number;\r\n  token: string;\r\n  name: string;\r\n};\r\n\r\ntype State = {\r\n  user?: User;\r\n  loggedIn: boolean;\r\n};\r\n\r\nconst state: State = {\r\n  user: undefined,\r\n  loggedIn: false\r\n};\r\n\r\nconst getters = {\r\n  loggedIn: (state: State) => {\r\n    return state.loggedIn;\r\n  },\r\n  currentUser: (state: State) => {\r\n    return state.user;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  login({ state: State, commit }: ActionContext<State, null>, user: User) {\r\n    commit(\"setUser\", user);\r\n  },\r\n  logout({ state: State, commit }: ActionContext<State, null>) {\r\n    commit(\"clearUser\");\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state: State, user: User) {\r\n    state.user = user;\r\n    state.loggedIn = true;\r\n  },\r\n  clearUser(state: State) {\r\n    state.user = undefined;\r\n    state.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n```\r\n\r\nAny ideas on to fix this? thanks in advance","Url":"https://github.com/vuejs/vuex/issues/1840","RelatedDescription":"Closed issue \"Access store within vue-router\" (#1840)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-02T05:30:45.0442263Z","RunDurationInMilliseconds":1661}