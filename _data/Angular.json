{"Data":{"Angular-Issues":{"Issues":[{"Id":"2185302959","IsPullRequest":false,"CreatedAt":"2024-03-14T03:27:31","Actor":"JasonWeinzierl","Number":"54853","RawContent":null,"Title":"Automatic migration for RouterTestingModule to provideRouter([]) or RouterModule","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nIf a project upgrades to Angular 17.3.0, RouterTestingModule's deprecation (#54466) will cause a ton of warnings/errors if that project has linter rules against deprecated APIs.  Can Angular provide an official migration for this?\r\n\r\n### Proposed solution\r\n\r\nAutomatically migrate from this:\r\n\r\n```ts\r\nimports: [\r\n  ...\r\n  RouterTestingModule.withRoutes([]),\r\n  ...\r\n],\r\n```\r\n\r\nto this if the component is not standalone:\r\n\r\n```ts\r\nimports: [\r\n  ...\r\n  RouterModule.forRoot([]),\r\n  ...\r\n],\r\n```\r\n\r\nor to this if the component is standalone:\r\n\r\n```ts\r\nproviders: [\r\n  ...\r\n  provideRouter([]),\r\n  ...\r\n],\r\n```\r\n\r\nand fix the relevant import statements.\r\n\r\n### Alternatives considered\r\n\r\nManually migrate everything.","Url":"https://github.com/angular/angular/issues/54853","RelatedDescription":"Open issue \"Automatic migration for RouterTestingModule to provideRouter([]) or RouterModule\" (#54853)"},{"Id":"2185224517","IsPullRequest":false,"CreatedAt":"2024-03-14T01:53:23","Actor":"TheNightmareX","Number":"54852","RawContent":null,"Title":"[SSR, Application Builder] Option to Generate Common JS Modules for Server","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler, platform-server\n\n### Description\n\nI'm faced with a need to bundle the SSR application into an executable. However, all the Node.js executable bundling solutions support only CommonJS modules, while our new SSR feature seems to generate only ECMA modules.\r\n\r\nI have tried to change the `module` option in `tsconfig.json` to `CommonJS`, but it turned out that this option is not respected by the builder.\n\n### Proposed solution\n\nRespect the `module` option in `tsconfig.json` to allow CJS module building.\n\n### Alternatives considered\n\nAlternatively, add a new option for the Application Builder to generate CJS instead.","Url":"https://github.com/angular/angular/issues/54852","RelatedDescription":"Open issue \"[SSR, Application Builder] Option to Generate Common JS Modules for Server\" (#54852)"},{"Id":"2185156222","IsPullRequest":true,"CreatedAt":"2024-03-14T00:34:40","Actor":"JeanMeche","Number":"54851","RawContent":null,"Title":"test","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54851","RelatedDescription":"Open PR \"test\" (#54851)"},{"Id":"2185023518","IsPullRequest":true,"CreatedAt":"2024-03-13T22:47:46","Actor":"JeanMeche","Number":"54850","RawContent":null,"Title":"refactor(compiler): Do not extract internal methods.","State":"open","Body":"internal methods are not exposed to end users and should not be extracted.\r\n\r\nRelated issue: #52663 ","Url":"https://github.com/angular/angular/pull/54850","RelatedDescription":"Open PR \"refactor(compiler): Do not extract internal methods.\" (#54850)"},{"Id":"2184920936","IsPullRequest":true,"CreatedAt":"2024-03-13T22:35:37","Actor":"atscott","Number":"54848","RawContent":null,"Title":"fix(core): Update ApplicationRef.tick loop to only throw in dev mode","State":"closed","Body":"This commit updates the loop in ApplicationRef.tick to only throw in dev mode. In addition, it reduces the reruns to 10 from 100 in order to reduce the impact on production applications that encounter this error. That is, the loop will bail out much earlier and prevent prolonged unresponsiveness.\r\n","Url":"https://github.com/angular/angular/pull/54848","RelatedDescription":"Closed or merged PR \"fix(core): Update ApplicationRef.tick loop to only throw in dev mode\" (#54848)"},{"Id":"2184986776","IsPullRequest":true,"CreatedAt":"2024-03-13T22:18:55","Actor":"atscott","Number":"54849","RawContent":null,"Title":"fix(core): Ensure `OnPush` views are not still marked dirty after cha…","State":"open","Body":"…nge detection\r\n\r\nIt is not intended for `OnPush` views to make state updates via `markForCheck`. This should throw\r\n`ExpressionChangedAfterItHasBeenCheckedError` already. This often didn't work because the `Dirty` flag was cleared on parent components before `checkNoChanges`. This was also made to _never_ work in https://github.com/angular/angular/commit/ac2d0c619e9a740601d05ed53296b9fcf4e35bbb#diff-5a40bc02146e2e6b3af994a675e1bab7d414a66bedb4df9f6eca0321c23cd9aaR356-R362 to prevent _new_ errors in existing code that already should have been throwing the error. This commit updates the approach by ensuring that views cannot still be marked `Dirty` in the way that's described in that change because the flag is now cleared whenever the view is traversed during change detection rather than only when it is refreshed.\r\n","Url":"https://github.com/angular/angular/pull/54849","RelatedDescription":"Open PR \"fix(core): Ensure `OnPush` views are not still marked dirty after cha…\" (#54849)"},{"Id":"2184817017","IsPullRequest":true,"CreatedAt":"2024-03-13T21:28:08","Actor":"atscott","Number":"54844","RawContent":null,"Title":"refactor(core): Skip Dirty views in the refresh loop again","State":"closed","Body":"When attempting to add `Dirty` views to the `detectChangesInternal` loop as well, it was found that there are likely more issues than originally thought. Errors in the `ApplicationRef.tick` are not reported in unit tests so these would have gone unnoticed in TGP.\r\n","Url":"https://github.com/angular/angular/pull/54844","RelatedDescription":"Closed or merged PR \"refactor(core): Skip Dirty views in the refresh loop again\" (#54844)"},{"Id":"2184893293","IsPullRequest":true,"CreatedAt":"2024-03-13T21:10:54","Actor":"lukasmatta","Number":"54847","RawContent":null,"Title":"docs: fix injector type typo","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54847","RelatedDescription":"Open PR \"docs: fix injector type typo\" (#54847)"},{"Id":"2184889104","IsPullRequest":true,"CreatedAt":"2024-03-13T21:09:12","Actor":"atscott","Number":"54846","RawContent":null,"Title":"docs: release notes for the v17.3.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/54846","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.0 release\" (#54846)"},{"Id":"2184865633","IsPullRequest":true,"CreatedAt":"2024-03-13T21:05:31","Actor":"atscott","Number":"54845","RawContent":null,"Title":"Bump version to \"v17.3.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54845","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0\" with changelog.\" (#54845)"},{"Id":"2184640994","IsPullRequest":true,"CreatedAt":"2024-03-13T18:36:09","Actor":"atscott","Number":"54843","RawContent":null,"Title":"build: update symbol goldens","State":"closed","Body":"fix goldens after recent commit\r\n","Url":"https://github.com/angular/angular/pull/54843","RelatedDescription":"Closed or merged PR \"build: update symbol goldens\" (#54843)"},{"Id":"2184589510","IsPullRequest":true,"CreatedAt":"2024-03-13T17:56:50","Actor":"atscott","Number":"54842","RawContent":null,"Title":"refactor(core): Update `ChangeDetectionMode.Targeted` to refresh views with `LViewFlags.Dirty`","State":"open","Body":"Because the loop around change detection refreshes views with the `Dirty` flag, there is no reason to specifically exclude these from the `Targeted` mode anymore. Even if we skip over them during the `Targeted` pass, the loop will still refresh them. The only way they wouldn't be caught would be a situation where ancestors were not properly marked dirty as well. This is actually the case for newly created views, which are created `Dirty`, but now we can still use `Targeted` mode without also needing to add the additional `RefreshView` flag.\r\n\r\nOverall, this is a simplification of the change detection logic: If a view has something that indicates it needs a refresh, refresh it. There's no special mode that skips certain views marked for refresh in specific ways but pays attention to others.","Url":"https://github.com/angular/angular/pull/54842","RelatedDescription":"Open PR \"refactor(core): Update `ChangeDetectionMode.Targeted` to refresh views with `LViewFlags.Dirty`\" (#54842)"},{"Id":"2184335062","IsPullRequest":true,"CreatedAt":"2024-03-13T15:44:39","Actor":"devversion","Number":"54841","RawContent":null,"Title":"test(compiler-cli): add unit tests for `output()` JIT transform","State":"open","Body":"We are already testing the JIT transforms via integration tests and acceptance authoring tests, but\r\nthis  commit adds dedicated unit tests for the transform behavior for proper test coverage (it was a planned follow-up).","Url":"https://github.com/angular/angular/pull/54841","RelatedDescription":"Open PR \"test(compiler-cli): add unit tests for `output()` JIT transform\" (#54841)"},{"Id":"2180304661","IsPullRequest":true,"CreatedAt":"2024-03-13T15:32:05","Actor":"atscott","Number":"54824","RawContent":null,"Title":"fix(core): `ComponentFixture` `autoDetect` respects `OnPush` flag of …","State":"closed","Body":"…host view\r\n\r\nThis is a follow-up to #53718 that applies the same logic to the `autoDetect` feature of the fixture's host view. This now unifies the logic between `ApplicationRef` and `ComponentFixture` autodetect.\r\n\r\nBREAKING CHANGE: The `ComponentFixture` `autoDetect` feature will no longer refresh the component's host view when the component is `OnPush` and not marked dirty. This exposes existing issues in components which claim to be `OnPush` but do not correctly call `markForCheck` when they need to be refreshed. If this change causes test failures, the easiest fix is to change the component to `ChangeDetectionStrategy.Default`.\r\n","Url":"https://github.com/angular/angular/pull/54824","RelatedDescription":"Closed or merged PR \"fix(core): `ComponentFixture` `autoDetect` respects `OnPush` flag of …\" (#54824)"},{"Id":"2184159437","IsPullRequest":false,"CreatedAt":"2024-03-13T14:29:46","Actor":"pkozlowski-opensource","Number":"54840","RawContent":null,"Title":"Conditionals and content projection","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThere is a surprising interaction between our static (creation time) content projection system _and_ the new control flow (although this is _not_ specific to the new control flow - the same can be observed with `ngIf`).\r\n\r\nTo illustrate the surprising scenario let's consider a component with content projection with a selector (`<ng-content select=\"some-content\">`) and content to project wrapped in the control flow `@if` statement with the `else` branch:\r\n\r\n```html\r\n<with-content>\r\n      @if(false) {          \r\n        <some-content />\r\n      } @else {\r\n        I'm not the content queried for, don't project me! \r\n      }\r\n</with-content>\r\n```\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-57dynz?file=src%2Fmain.ts\r\n\r\nAs surprising as it may be, the ` I'm not the content queried for, don't project me!` text node will be taken as content to project (!). This is consistent with the existing implementation which will project the whole `@if` container and container capturing the `some-content` as a tag name of a root node.\r\n\r\nWhile we can't fix _all_ issues with the content projection, we could remedy this one by \r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-57dynz?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54840","RelatedDescription":"Open issue \"Conditionals and content projection\" (#54840)"},{"Id":"2183936513","IsPullRequest":true,"CreatedAt":"2024-03-13T12:48:03","Actor":"pkozlowski-opensource","Number":"54839","RawContent":null,"Title":"fix(compiler): improve error message for control flow and content pro…","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54839","RelatedDescription":"Open PR \"fix(compiler): improve error message for control flow and content pro…\" (#54839)"},{"Id":"2183787089","IsPullRequest":false,"CreatedAt":"2024-03-13T11:40:22","Actor":"adrobson","Number":"54838","RawContent":null,"Title":"Button doesn't display in component","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am following the instructions for the housing tutorial.\r\nI got to the end of lesson 3 but there are important differences between what I see in the browser and what I should be seeing. \r\n\r\n1. The button that is supposed to be in the home component doesn't show at all\r\n2. There is supposed to be a border around the input box but that also doesn't show.\r\n\r\nThe same result in edge, firefox and chrome\r\n![angular_screen](https://github.com/angular/angular/assets/10349413/266ca9cb-195c-43f4-ab17-3d05e81e9c46)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nInstall versions as below. Follow instructions to the end of part 3.\n\n### Please provide the exception or error you saw\n\n```true\n1. The button that is supposed to be in the home component doesn't show at all\r\n2. There is supposed to be a border around the input box but that also doesn't show.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nNode v20.11.0\r\nAngular cli 17.2.3\r\nSchematics/Angular 17.2.3\r\nTypescript 5.3.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54838","RelatedDescription":"Open issue \"Button doesn't display in component\" (#54838)"},{"Id":"2183499657","IsPullRequest":false,"CreatedAt":"2024-03-13T09:23:56","Actor":"GuillaumeNury","Number":"54837","RawContent":null,"Title":"Add observed property to OutputEmitterRef","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nWith the `@Output` decorator, I used to check the `observed` of the `EventEmitter` (because it inherits `Subject`) to enable/disable some features.\r\n\r\nFor example, `<lu-select (clueChange)=\"...\" />` would display a search bar in `LuSelect` component but `<lu-select />` would not.\r\n\r\nThis solution seems elegant as it avoid an additional input that would lead to unwanted cases:\r\n\r\n- Both `<lu-select enableClue (clueChange)=\"...\" />` and `<lu-select />` would work\r\n- `<lu-select (clueChange)=\"...\" />` would be useless because the search bar is not disabled because `enableClue = false`\r\n- `<lu-select enableClue />` would be useless because the search bar is displayed, but nobody listen to its value\n\n### Proposed solution\n\nAdd a `getter`property `observed` in [OutputEmitterRef](https://angular.dev/api/core/OutputEmitterRef)\r\n\r\n([in this file](https://github.com/angular/angular/blob/edc1740d7e7f0296c719c7176c24031f55ae1487/packages/core/src/authoring/output/output_emitter_ref.ts#L33))\r\n\r\n```ts\r\nexport class OutputEmitterRef<T> implements OutputRef<T> {\r\n  private listeners: Array<(value: T) => void>|null = null;\r\n\r\n  get observed(): boolean {\r\n    return !!this.listeners?.length;\r\n  }\r\n\r\n  //...\r\n}\r\n```\n\n### Alternatives considered\n\nReplace existing usages of `emitter.observed` by inputs.","Url":"https://github.com/angular/angular/issues/54837","RelatedDescription":"Open issue \"Add observed property to OutputEmitterRef\" (#54837)"},{"Id":"2183354401","IsPullRequest":false,"CreatedAt":"2024-03-13T08:04:29","Actor":"PradeepKumarBose","Number":"54836","RawContent":null,"Title":"Build visualize  not working as mentioned in Doc","State":"open","Body":"### Describe the problem that you experienced\n\nAngular Build Stats Json \n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/cli/build\n\n### Describe what you were looking for in the documentation\n\n![image](https://github.com/angular/angular/assets/29145245/74662cbd-80c1-4251-aead-ba56f1c406d0)\r\n\r\n\r\n\r\n\n\n### Describe the actions that led you to experience the problem\n\nStats genentration had a issue since build analyzer consider as invalid format\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\nAfter uploading stats.json file\r\n\r\n![image](https://github.com/angular/angular/assets/29145245/4efc4270-4802-4fb8-b4c7-be5640659d09)\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54836","RelatedDescription":"Open issue \"Build visualize  not working as mentioned in Doc\" (#54836)"},{"Id":"2182860019","IsPullRequest":false,"CreatedAt":"2024-03-12T23:47:16","Actor":"joeldhenry","Number":"54835","RawContent":null,"Title":"Router deactivate failure results in page reload in computed mode","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nwith routerModule as default, a deactivate failure, would still remove the history state causing issues with back button and swipe back on mobile. \r\n\r\nas per instructions, i changed to `RouterModule.forRoot(AppRoutes, { canceledNavigationResolution: 'computed' })`\r\nwhich results in history being reset on deactivate failure, however the page also refreshes causing form data and state to be reset. my understanding is that default deferred update strategy and sameURLNavigation 'ignore' should have caused the route to not be reloaded, however this is not the case.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nrouterModule as default:\r\n\r\nRoute Page 1 -> Page 2\r\nRoute Page 2 -> Page 3\r\nBack & deactivate Failure = history state Page 2\r\n\r\ncanceledNavigationResolution 'computed':\r\n\r\nRoute Page 1 -> Page 2\r\nRoute Page 2 -> Page 3\r\nBack & deactivate Failure = history state Page 3, but refresh page 3\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.6\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.7\r\n... animations, common, compiler-cli, core, language-service\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.6\r\n@angular-devkit/build-angular   16.1.6\r\n@angular-devkit/core            16.1.6\r\n@angular-devkit/schematics      16.1.6\r\n@angular/cli                    16.1.6\r\n@schematics/angular             16.1.6\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54835","RelatedDescription":"Open issue \"Router deactivate failure results in page reload in computed mode\" (#54835)"},{"Id":"2182830549","IsPullRequest":false,"CreatedAt":"2024-03-12T23:13:47","Actor":"danielkleebinder","Number":"54833","RawContent":null,"Title":"NG5002: Allow referencing of expression results in `@else if` block (control flow)","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nThe new Angular control flow has been a great addition to the ecosystem so far. However, the `@else if` block does not allow referencing of expression results thus far. This is a minor bump in the road of Angular DX. An example of correct referencing is listed below:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async) {\r\n  {{ (pets$ | async).length }}\r\n}\r\n```\r\n\r\nThe easier to read and maintain version, however, is currently not supported / allowed:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async; as pets) {\r\n  {{ pets.length }}\r\n}\r\n```\r\n\r\nThis template would yield the following error:\r\n\r\n```bash\r\nX [ERROR] NG5002: \"as\" expression is only allowed on the primary @if block [plugin angular-compiler]\r\n\r\n    src/app/list/list.component.html:3:27:\r\n      3 │ } @else if (pets$ | async; as pets) {\r\n        ╵                            ~~~~~~~\r\n```\r\n\r\nNot allowing this construct might force developers in creating _creative_ workarounds, such as:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else{\r\n  @if (pets$ | async; as pets) {\r\n    {{ pets.length }}\r\n  }\r\n}\r\n```\r\n\r\nWhich is semantically equivalent, but less maintainable and extensible than other solutions.\r\n\r\n### Proposed solution\r\n\r\nAllow referencing of expression results in `@else if` blocks:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async; as pets) {\r\n  {{ pets.length }}\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\nAdd syntax that allows developers to reference the results of multiple expressions or the creation of view models:\r\n\r\n```typescript\r\n@viewModel (animals$ | async as animals; pets$ | async as pets) {\r\n  @if (animals) {\r\n    {{ animals.length }}\r\n  } @else if (pets) {\r\n    {{ pets.length }}\r\n  }\r\n}\r\n```\r\n\r\nThis approach, however, increases cognitive complexity and is counteracting the lazy evaluation of `@else if` blocks.","Url":"https://github.com/angular/angular/issues/54833","RelatedDescription":"Closed issue \"NG5002: Allow referencing of expression results in `@else if` block (control flow)\" (#54833)"},{"Id":"2182834075","IsPullRequest":true,"CreatedAt":"2024-03-12T23:13:08","Actor":"frost-cy","Number":"54834","RawContent":null,"Title":"refactor(compiler-cli): move DelegatingPerfRecorder initialization into constructor","State":"open","Body":"When TS output target is set to ES2022 or newer, the class fields don't get transpiled. \r\n\r\nThat causes a runtime error [here](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/perf/src/recorder.ts#L130) in the `DelegatingPerfRecorder`. \r\n\r\nThis is because `delegatingPerfRecorder` that gets initialized [here](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/core/src/compiler.ts#L280) passes `this.perfRecorder` as argument. However,  `this.perfRecorder` doesn't get set until the [NgCompiler constructor](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/core/src/compiler.ts#L333) runs. \r\n \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nno change in the behavior\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nno change in the behavior\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54834","RelatedDescription":"Open PR \"refactor(compiler-cli): move DelegatingPerfRecorder initialization into constructor\" (#54834)"},{"Id":"2182780708","IsPullRequest":true,"CreatedAt":"2024-03-12T22:15:03","Actor":"atscott","Number":"54832","RawContent":null,"Title":"refactor(core): clear Dirty flag even in checkNoChanges pass","State":"open","Body":"There are two incorrect statements/assumptions with the existing code:\r\n\r\n1. We don't want components to behave differently depending on whether check no changes is enabled or not.\r\n\r\nThis is not something that can be prevented unless the flag states are saved before running `checkNoChanges` and restored when finished. It is entirely possible that a `checkNoChanges` pass marks views for check. This would result in `checkNoChanges` _hiding_ issues because components that were not marked for check before the pass now are and will be refreshed in the next change detection round.\r\n\r\n2. Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to refresh a `NgClass` binding should work\r\n\r\nThis _does not_ work even today. First, this results in `ExpressionChanged...` errors when the host view is reachable during the `checkNoChanges` pass. Second, even in production, this would require that the host view only has ancestors with `Default` change detection. If any ancestor is `OnPush`, then its `Dirty` flag would have been cleared at the end of change detection, preventing the host view (and class binding) from being reachable in the next round of change detection.\r\n","Url":"https://github.com/angular/angular/pull/54832","RelatedDescription":"Open PR \"refactor(core): clear Dirty flag even in checkNoChanges pass\" (#54832)"},{"Id":"2182596962","IsPullRequest":false,"CreatedAt":"2024-03-12T20:18:37","Actor":"zzmp","Number":"54831","RawContent":null,"Title":"zone.js throws TypeError when passing AbortController as options to addEventListener","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\n`window.addEventListener` takes an options argument, which can be shaped as `{ signal: AbortSignal }`. `AbortController` satisfies this interface, and can be passed to `addEventListener` in the native implementation:\r\n\r\n    window.addEventListener('keydown', () => {}, new AbortController)\r\n\r\nHowever, `zone.js` is clever with passing the `signal`, and un-assigns and re-assigns it to `taskData.options` avoid passing it internally. `taskData.options` is initialized to the original options argument, so it is initialized to an instance of `AbortController`, for which `signal` is a getter. This results in a `TypeError`. Instead, for this to work in `zone.js`, you need to destructure:\r\n\r\n    window.addEventListener('keydown', () => {}, { signal: (new AbortController).signal })\r\n\r\n`zone.js` should not be using the original options argument (to save memory) _and_ assigning to it, as it is of an unknown type and the options properties may not be writable.\n\n### Please provide a link to a minimal reproduction of the bug\n\nN/A - see explanation for one-liners\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Cannot set property signal of [object AbortController] which has only a getter\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nzone.js: 0.14.4\r\nGoogle Chrome: 122.0.6261.94 (Official Build) (arm64)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54831","RelatedDescription":"Closed issue \"zone.js throws TypeError when passing AbortController as options to addEventListener\" (#54831)"},{"Id":"2182505635","IsPullRequest":true,"CreatedAt":"2024-03-12T20:13:09","Actor":"bencodezen","Number":"54830","RawContent":null,"Title":"docs: fix missing security guide in navigation","State":"closed","Body":"The paths for the security guide were flipped in the original PR. As a result, it looked for a markdown file in the best-practices directory when it should have looked for it in the guide directory instead.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nSecurity guide in navigation causes a weird duplicate double loading on the site.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSecurity guide navigation goes to the guide as expected.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54830","RelatedDescription":"Closed or merged PR \"docs: fix missing security guide in navigation\" (#54830)"},{"Id":"2182402421","IsPullRequest":true,"CreatedAt":"2024-03-12T18:26:41","Actor":"JeanMeche","Number":"54829","RawContent":null,"Title":"docs: remove AIO guides","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54829","RelatedDescription":"Open PR \"docs: remove AIO guides\" (#54829)"},{"Id":"2182292684","IsPullRequest":true,"CreatedAt":"2024-03-12T17:37:26","Actor":"bencodezen","Number":"54828","RawContent":null,"Title":"docs: resolve extra padding on tutorial editor","State":"open","Body":"As of this commit, there is a visual discrepancy between the height of the content on the left compared to the separator and editors on the right. It appears that the cause of this is an additional computation of layout padding which is unnecessary for these particular elements.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix: CSS styles on docs\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere is a spacing discrepancy which you can see in the bottom right.\r\n\r\n<img width=\"1920\" alt=\"Screenshot 2024-03-12 at 10 12 06 AM (2)\" src=\"https://github.com/angular/angular/assets/4836334/88a84c89-86b0-410a-a7d7-a10d95039421\">\r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nIt will remove the extra padding causing the gap.\r\n\r\n<img width=\"1920\" alt=\"Screenshot 2024-03-12 at 10 37 46 AM (2)\" src=\"https://github.com/angular/angular/assets/4836334/7310aaa5-bac6-4218-b516-a8864abb061b\">\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54828","RelatedDescription":"Open PR \"docs: resolve extra padding on tutorial editor\" (#54828)"},{"Id":"2182212429","IsPullRequest":false,"CreatedAt":"2024-03-12T17:00:59","Actor":"BobDankert","Number":"54827","RawContent":null,"Title":"Form control values do not get set with trailing space, making email validator difficult to diagnose","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen calling setValue() on a FormControl with a value that contains a trailing space, the input element value does not receive that trailing space (however the FormControl value will have the trailing space). This can make it difficult on email form controls with the email validator, as a trailing space will fail the email validator, but the input value does not have the trailing space. To \"fix\" the issue, the user needs to modify the email in the input in anyway (add a space, oddly enough, work) to reset the FormControl value to something that matches the input value.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-bhq16g?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe input value does not match the FormControl value.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.2.3\r\nNode: 18.18.0\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cli                    17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else?\n\nI don't know if it is the browser not setting the trailing space, or something internal to the FormControl setValue() call that does not set the trailing space, but this is certainly creating an odd situation, as shown in the StackBlitz reproduction.","Url":"https://github.com/angular/angular/issues/54827","RelatedDescription":"Open issue \"Form control values do not get set with trailing space, making email validator difficult to diagnose\" (#54827)"},{"Id":"2180857286","IsPullRequest":false,"CreatedAt":"2024-03-12T06:46:04","Actor":"mark-akturatech","Number":"54825","RawContent":null,"Title":"Alias `afterRender` to `afterEachRender`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/core\r\n\r\n### Description\r\n\r\n@angular/core `afterRender` and `afterNextRender` are great however it is too easy to miss the distinction during a peer review and this can have a big effect on performance.\r\n\r\nIs it possible to alias `afterRender` to `afterEachRender` or similar (I understand that it is too late to change names now). \r\nThe new name would be clear that the code attached will run multiple times (as opposed to once only if using afterNextRender).\r\n\r\n### Proposed solution\r\n\r\nRename `afterRender` to `afterEachRender`\r\n\r\n### Alternatives considered\r\n\r\nCurrently if used I asked the devs to `import { afterRender as afterEachRender }`. We could add a lint task to ensure this is done.\r\n\r\nBTW I don't get a chance to say this elsewhere - so will say it here - thank you for all your work. Every change your team makes is so positive.","Url":"https://github.com/angular/angular/issues/54825","RelatedDescription":"Open issue \"Alias `afterRender` to `afterEachRender`\" (#54825)"},{"Id":"2179883725","IsPullRequest":true,"CreatedAt":"2024-03-11T18:18:35","Actor":"devknoll","Number":"54823","RawContent":null,"Title":"feat(core): add support for i18n hydration ","State":"open","Body":"Add support for hydrating i18n blocks. This is accomplished by serializing information about selected ICU cases for a block during server-side rendering.\r\n\r\nDuring hydration, this data is read and is used to traverse both an AST of the translated message and the DOM, in parallel, to map each LView with an RNode.\r\n\r\nFinally, this mapping is used while nodes are being created (either via i18n or their respective instructions) to locate existing nodes.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54823","RelatedDescription":"Open PR \"feat(core): add support for i18n hydration \" (#54823)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2185114812","IsPullRequest":true,"CreatedAt":"2024-03-14T03:00:17","Actor":"dgp1130","Number":"27277","RawContent":null,"Title":"docs: release notes for the v17.3.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/27277","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.0 release\" (#27277)"},{"Id":"2185125713","IsPullRequest":false,"CreatedAt":"2024-03-14T00:01:22","Actor":"RobbyRabbitman","Number":"27278","RawContent":null,"Title":"Feature: @angular-devkit/build-angular:web-test-runner picks up the web test runner config","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Description\r\n\r\nWhen testing angular code with the web test runner, I would like to configure the web test runner via its known [api](https://modern-web.dev/docs/test-runner/cli-and-configuration/). My understanding of the web test runner is, that you provide a plugin which wraps the framework of your choice. The plugin takes care of building and testing your code specific to your framework and then reports the results to the web test runner. \r\n\r\nI tried the `@angular-devkit/build-angular:web-test-runner` in a monorepo and I really like it so far, but I was confused that when provided a `web-test-runner.config.mjs` it was ignored. Other projects in my monorepo that use the web test runner are configured via the plugin option of the web test runner config when they needed to be build framework specific. \r\n\r\nI would love to hear your thoughts on this one! :)\r\n\r\n### Describe the solution you'd like\r\n\r\nCreate a plugin which builds and tests angular code. Make `@angular-devkit/build-angular:web-test-runner` call the web test runner.\r\n\r\nUsing the web test runner config would also enable to launch multiple browsers with their playwright package:\r\n```ts\r\n// web-test-runner.config.mjs\r\n\r\nexport default {\r\n// ...\r\nplugins: [angular()],\r\nbrowsers: [\r\n      playwrightLauncher({ product: 'chromium' }),\r\n      playwrightLauncher({ product: 'firefox' }),\r\n      playwrightLauncher({ product: 'webkit' }),\r\n    ]\r\n}\r\n```\r\n\r\nAngular would not introduce a new api, a developer could just just the web test runner api.\r\n\r\n```ts\r\n// angular.json\r\n\r\n\"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:web-test-runner\",\r\n          \"options\": {\r\n            \"wtrPath\": \"some/non/default/path\"\r\n          }\r\n        }\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nExpose the web test runner api in the options of the `test` target in the `angular.json`.","Url":"https://github.com/angular/angular-cli/issues/27278","RelatedDescription":"Open issue \"Feature: @angular-devkit/build-angular:web-test-runner picks up the web test runner config\" (#27278)"},{"Id":"2185086781","IsPullRequest":true,"CreatedAt":"2024-03-13T23:44:29","Actor":"dgp1130","Number":"27276","RawContent":null,"Title":"Bump version to \"v17.3.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27276","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0\" with changelog.\" (#27276)"},{"Id":"2185058380","IsPullRequest":true,"CreatedAt":"2024-03-13T23:26:21","Actor":"dgp1130","Number":"27275","RawContent":null,"Title":"build: bump `@angular/ssr` framework versions","State":"closed","Body":"Missed this in the previous PR.","Url":"https://github.com/angular/angular-cli/pull/27275","RelatedDescription":"Closed or merged PR \"build: bump `@angular/ssr` framework versions\" (#27275)"},{"Id":"2184978146","IsPullRequest":true,"CreatedAt":"2024-03-13T22:35:16","Actor":"dgp1130","Number":"27274","RawContent":null,"Title":"build: bump framework dependencies for minor release","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27274","RelatedDescription":"Closed or merged PR \"build: bump framework dependencies for minor release\" (#27274)"},{"Id":"2184944866","IsPullRequest":false,"CreatedAt":"2024-03-13T21:46:22","Actor":"halpneun","Number":"27273","RawContent":null,"Title":"Feature: add 'testDir' option to @angular-devkit/build-angular:web-test-runner ","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nRight now [testDir](https://github.com/angular/angular-cli/blob/f452589e2c921448b76a138a5f34ba92ad05e297/packages/angular_devkit/build_angular/src/builders/web-test-runner/index.ts#L44C5-L44C37) is hardcoded, which is fine for a repository with a single angular application. But in a monorepo setup, when executing tests in parallel this does not work.\n\n### Describe the solution you'd like\n\nProvide a 'testDir' option\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27273","RelatedDescription":"Open issue \"Feature: add 'testDir' option to @angular-devkit/build-angular:web-test-runner \" (#27273)"},{"Id":"2182828692","IsPullRequest":true,"CreatedAt":"2024-03-13T18:53:32","Actor":"clydin","Number":"27266","RawContent":null,"Title":"feat(@schematics/angular): use TypeScript bundler module resolution for new projects","State":"closed","Body":"The `bundler` TypeScript resolution mode is now the default for all newly created Angular CLI projects. This mode allows TypeScript to read and use any package.json `exports` and `imports` fields found within packages including the Angular workspace. Unlike the `node16` option value, this value does not require the use of file extensions for each import and does not require modification of all existing application code to use. The TypeScript language service also benefits from this option by allowing import auto-discovery to leverage any `exports` defined for a package. This is particularly useful for packages such as `@angular/material` which makes extensive use of secondary package exports.\r\n\r\nAdditional information regarding this resolution mode can be found here: https://www.typescriptlang.org/tsconfig#moduleResolution","Url":"https://github.com/angular/angular-cli/pull/27266","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): use TypeScript bundler module resolution for new projects\" (#27266)"},{"Id":"2184407531","IsPullRequest":false,"CreatedAt":"2024-03-13T18:00:00","Actor":"LorinRenodeyn","Number":"27272","RawContent":null,"Title":"browser-esbuild messes up resolution of scss imports, adding tildes","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n17.1.x\r\n\r\n### Description\r\n\r\nWhen switching from `@angular-devkit/build-angular:browser` to `@angular-devkit/build-angular:browser-esbuild`, the ng-serve command throws errors on the scss imports. However, the errors logged to the terminal don't correspond to the code of the file the logs refer to. It appears that something is going wrong with the import resolution of the scss files.\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nCommand run: `yarn ng serve` (with angular.json configured to `browser-esbuild`) or `yarn ng serve --force-esbuild`\r\n\r\nThis is in an angular workspace with an application (named 'application') and  2 library packages (/packages/components and /packages/icons). The console errors refer to the scss base file in /application/src/styles.scss, but the logs don't correspond to the file contents. The imported packages are internal npm packages used by the client and names have been redacted.\r\n\r\nstyles.scss contents:\r\n```SCSS\r\n@import '@component-lib/styles/reset';\r\n@import '@component-lib/styles/define-colors';\r\n\r\n@import '@component-lib/styles/colors';\r\n@import '@component-lib/styles/typography';\r\n\r\n@import '@component-lib/styles/fonts/regular';\r\n\r\nbody {\r\n  @include style-lib-font-normal;\r\n\r\n  background-color: $style-lib-color-base-default;\r\n  overscroll-behavior: none;\r\n}\r\n\r\n```\r\n\r\nRunning the exact same codebase with the `@angular-devkit/build-angular:browser` config works fine and without errors, both in terminal and browser console.The tildes reported by the error logs are _not_ present in the codebase.\r\n\r\nThis is a new project with only the boilerplate setup provided by the client.\r\n\r\n[edit, adding config info from angular.json]\r\n\r\n```JSON\r\n\"application\": {\r\n[...]\r\n    \"build\": {\r\n    \"builder\": \"@angular-devkit/build-angular:browser\",\r\n    \"options\": {\r\n      \"assets\": [\"application/src/favicon.ico\", \"application/src/assets\"],\r\n      \"buildOptimizer\": false,\r\n      \"extractLicenses\": false,\r\n      \"index\": \"application/src/index.html\",\r\n      \"inlineStyleLanguage\": \"scss\",\r\n      \"main\": \"application/src/main.ts\",\r\n      \"namedChunks\": true,\r\n      \"optimization\": false,\r\n      \"outputPath\": \"dist/application\",\r\n      \"polyfills\": \"application/src/polyfills.ts\",\r\n      \"scripts\": [],\r\n      \"sourceMap\": true,\r\n      \"styles\": [\"application/src/styles.scss\"],\r\n      \"tsConfig\": \"application/tsconfig.app.json\",\r\n      \"vendorChunk\": true\r\n    },\r\n    \"configurations\": {\r\n      \"de\": {\r\n        \"baseHref\": \"/\",\r\n        \"localize\": [\"de\"]\r\n      },\r\n      \"e2e\": {\r\n        \"fileReplacements\": [\r\n          {\r\n            \"replace\": \"application/src/environments/environment.ts\",\r\n            \"with\": \"application/src/environments/environment.e2e.ts\"\r\n          }\r\n        ]\r\n      },\r\n      \"en\": {\r\n        \"baseHref\": \"/\",\r\n        \"localize\": [\"en\"]\r\n      },\r\n      \"fr\": {\r\n        \"baseHref\": \"/\",\r\n        \"localize\": [\"fr\"]\r\n      },\r\n      \"nl\": {\r\n        \"baseHref\": \"/\",\r\n        \"localize\": [\"nl\"]\r\n      },\r\n      \"no-development\": {\r\n        \"tsConfig\": \"application/tsconfig.app.no-dev.json\"\r\n      },\r\n    }\r\n  },\r\n[...]\r\n  \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"options\": {\r\n            \"buildTarget\": \"application:build\"\r\n          },\r\n          \"configurations\": {\r\n            \"de\": {\r\n              \"buildTarget\": \"application:build:de\"\r\n            },\r\n            \"e2e\": {\r\n              \"buildTarget\": \"application:build:e2e\"\r\n            },\r\n            \"e2e-no-development\": {\r\n              \"buildTarget\": \"application:build:e2e,no-development\"\r\n            },\r\n            \"en\": {\r\n              \"buildTarget\": \"application:build:en\"\r\n            },\r\n            \"fr\": {\r\n              \"buildTarget\": \"application:build:fr\"\r\n            },\r\n            \"nl\": {\r\n              \"buildTarget\": \"application:build:nl\"\r\n            },\r\n            \"no-development\": {\r\n              \"buildTarget\": \"application:build:no-development\"\r\n            },\r\n            \"production\": {\r\n              \"buildTarget\": \"application:build:production\"\r\n            }\r\n          }\r\n        },\r\n```\r\n\r\n### Exception or Error\r\n\r\n```text\r\n✘ [ERROR] Could not resolve \"~normalize.css/normalize.css\"\r\n\r\n    application/src/styles.scss:1:8:\r\n      1 │ @import '~normalize.css/normalize.css';\r\n        ╵         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"~normalize.css/normalize.css\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-300-webfont.woff2\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:14:11:\r\n      14 │   src: url(\"~@component-lib/styles/fonts/museo/museosans-300-webfont.woff2\"...\r\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-300-webfont.woff\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:14:89:\r\n      14 │ ...f2\"), url(\"~@component-lib/styles/fonts/museo/museosans-300-webfont.woff...\r\n         ╵              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-500-webfont.woff2\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:26:11:\r\n      26 │   src: url(\"~@component-lib/styles/fonts/museo/museosans-500-webfont.woff2\"...\r\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-500-webfont.woff\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:26:89:\r\n      26 │ ...f2\"), url(\"~@component-lib/styles/fonts/museo/museosans-500-webfont.woff...\r\n         ╵              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-700-webfont.woff2\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:38:11:\r\n      38 │   src: url(\"~@component-lib/styles/fonts/museo/museosans-700-webfont.woff2\"...\r\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/museosans-700-webfont.woff\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:38:89:\r\n      38 │ ...f2\"), url(\"~@component-lib/styles/fonts/museo/museosans-700-webfont.woff...\r\n         ╵              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/roboto-mono-xxx-light-webfont.woff2\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:44:11:\r\n      44 │   src: url(\"~@component-lib/styles/fonts/museo/roboto-mono-xxx-light-webfon...\r\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/roboto-mono-xxx-light-webfont.woff\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:44:97:\r\n      44 │ ...f2\"), url(\"~@component-lib/styles/fonts/museo/roboto-mono-xxx-light-webf...\r\n         ╵              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/roboto-mono-xxx-regular-webfont.woff2\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:50:11:\r\n      50 │   src: url(\"~@component-lib/styles/fonts/museo/roboto-mono-xxx-regular-webf...\r\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n\r\n\r\n✘ [ERROR] Could not resolve \"~@component-lib/styles/fonts/museo/roboto-mono-xxx-regular-webfont.woff\" [plugin angular-css-resource]\r\n\r\n    application/src/styles.scss:50:99:\r\n      50 │ ...f2\"), url(\"~@component-lib/styles/fonts/museo/roboto-mono-xxx-regular-we...\r\n         ╵              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can remove the tilde and use a relative path to reference it, which should remove this error.\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.2.3\r\nNode: 18.14.0\r\nPackage Manager: yarn 3.6.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.4\r\n... common, compiler, compiler-cli, core, localize\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27272","RelatedDescription":"Closed issue \"browser-esbuild messes up resolution of scss imports, adding tildes\" (#27272)"},{"Id":"2184284572","IsPullRequest":true,"CreatedAt":"2024-03-13T15:23:07","Actor":"alan-agius4","Number":"27271","RawContent":null,"Title":"build: remove the need to bootstrap-local.js","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/27271","RelatedDescription":"Open PR \"build: remove the need to bootstrap-local.js\" (#27271)"},{"Id":"2183973880","IsPullRequest":true,"CreatedAt":"2024-03-13T13:03:56","Actor":"alan-agius4","Number":"27270","RawContent":null,"Title":"build: clean up build scripts","State":"open","Body":"Several cleanups to build scripts\r\n","Url":"https://github.com/angular/angular-cli/pull/27270","RelatedDescription":"Open PR \"build: clean up build scripts\" (#27270)"},{"Id":"2183399157","IsPullRequest":false,"CreatedAt":"2024-03-13T08:34:46","Actor":"HaidarVladyslav","Number":"27269","RawContent":null,"Title":"Feature: \"ng new\" needs a flag to select changeDetection strategy","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nRunning ng new --changeDetection=OnPush adds appropriate flag to angular.json\n\n### Describe the solution you'd like\n\nI want to include these changes to @angular/cli as other existing flags\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27269","RelatedDescription":"Closed issue \"Feature: \"ng new\" needs a flag to select changeDetection strategy\" (#27269)"},{"Id":"2183130466","IsPullRequest":true,"CreatedAt":"2024-03-13T05:10:22","Actor":"angular-robot","Number":"27268","RawContent":null,"Title":"build: update github/codeql-action action to v3.24.7","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v3.24.6` -> `v3.24.7` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.24.7`](https://togithub.com/github/codeql-action/compare/v3.24.6...v3.24.7)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v3.24.6...v3.24.7)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzkuMCIsInVwZGF0ZWRJblZlciI6IjM3LjIzOS4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27268","RelatedDescription":"Open PR \"build: update github/codeql-action action to v3.24.7\" (#27268)"},{"Id":"2183130409","IsPullRequest":true,"CreatedAt":"2024-03-13T05:10:19","Actor":"angular-robot","Number":"27267","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `fef1cd2` -> `1b70d8a` |\n| [@angular/animations](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.3.0-rc.0/17.3.0) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `a6032f3` -> `29907b8` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `7879726` -> `762d55c` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `4631f55` -> `40b0bfc` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `684da70` -> `6995d45` |\n| [@angular/common](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.3.0-rc.0/17.3.0) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `57411c1` -> `1a9b64f` |\n| [@angular/compiler](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | minor | [`17.2.4` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.2.4/17.3.0) |\n| [@angular/compiler](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.3.0-rc.0/17.3.0) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `6e9a411` -> `a0c384d` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | minor | [`17.2.4` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.2.4/17.3.0) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.3.0-rc.0/17.3.0) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `9b29ac6` -> `36cde33` |\n| [@angular/core](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.3.0-rc.0/17.3.0) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `1b0cca0` -> `9433700` |\n| [@angular/forms](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.3.0-rc.0/17.3.0) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `8106bee` -> `37b48a8` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `7217dba` -> `caaeaf9` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.3.0-rc.0/17.3.0) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `6ad40e8` -> `3552336` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `77afda0` -> `8648b60` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `79af385` -> `50b5c8d` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `1d2196b` -> `1389a45` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.3.0-rc.0/17.3.0) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `763cc45` -> `7e18db8` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.3.0-rc.0/17.3.0) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `605474d` -> `e124999` |\n| [@angular/platform-server](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.3.0-rc.0/17.3.0) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `4862772` -> `093348e` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.3.0-rc.0/17.3.0) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `5558282` -> `9974f60` |\n| [@angular/service-worker](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`17.3.0-rc.0` -> `17.3.0`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.3.0-rc.0/17.3.0) |\n| angular/dev-infra | action | digest | `0160e89` -> `8c8199c` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.3.0`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1730-2024-03-13)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.3.0-rc.0...17.3.0)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [1a6beae8a2](https://togithub.com/angular/angular/commit/1a6beae8a2bdcff27d4c1e402f98246a52247906) | feat | Enable template pipeline by default. ([#&#8203;54571](https://togithub.com/angular/angular/pull/54571)) |\n| [f386a04c9d](https://togithub.com/angular/angular/commit/f386a04c9ddc2951c8105d5cafcce7b4bedea569) | fix | handle two-way bindings to signal-based template variables in instruction generation ([#&#8203;54714](https://togithub.com/angular/angular/pull/54714)) |\n| [1f129f114e](https://togithub.com/angular/angular/commit/1f129f114edb21137d74471dd6b652848d2ffb68) | fix | not catching for loop empty tracking expressions ([#&#8203;54772](https://togithub.com/angular/angular/pull/54772)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [12dc4d074e](https://togithub.com/angular/angular/commit/12dc4d074e63edaff626003ad6136a8d122b2ba6) | fix | account for as expression in docs extraction ([#&#8203;54414](https://togithub.com/angular/angular/pull/54414)) |\n| [da7fbb40f0](https://togithub.com/angular/angular/commit/da7fbb40f06e6e37504f69e7b335f8219f424de2) | fix | detect when the linker is working in unpublished angular and widen supported versions ([#&#8203;54439](https://togithub.com/angular/angular/pull/54439)) |\n| [492e03f699](https://togithub.com/angular/angular/commit/492e03f699ca95df4cf854885253f63a5a1fb5c1) | fix | flag two-way bindings to non-signal values in templates ([#&#8203;54714](https://togithub.com/angular/angular/pull/54714)) |\n| [5afa4f0ec1](https://togithub.com/angular/angular/commit/5afa4f0ec1b64b88ef875d48bd143e0f36e0a955) | fix | support `ModuleWithProviders` literal detection with `typeof` ([#&#8203;54650](https://togithub.com/angular/angular/pull/54650)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [331b16efd2](https://togithub.com/angular/angular/commit/331b16efd2f5af876e6dc0ad2474ee7a87b00de5) | feat | add API to inject attributes on the host node ([#&#8203;54604](https://togithub.com/angular/angular/pull/54604)) |\n| [fb540e169a](https://togithub.com/angular/angular/commit/fb540e169a78a61f38d611f538eea8fdb0971f1d) | feat | add migration for invalid two-way bindings ([#&#8203;54630](https://togithub.com/angular/angular/pull/54630)) |\n| [c687b8f453](https://togithub.com/angular/angular/commit/c687b8f4531252cd1c3dfbb9a7bd42bdbe666a36) | feat | expose new `output()` API ([#&#8203;54650](https://togithub.com/angular/angular/pull/54650)) |\n| [c809069f21](https://togithub.com/angular/angular/commit/c809069f213244afd0e2d803a6a43510b218e6f5) | feat | introduce `outputFromObservable()` interop function ([#&#8203;54650](https://togithub.com/angular/angular/pull/54650)) |\n| [aff65fd1f4](https://togithub.com/angular/angular/commit/aff65fd1f4a61ed76a6f9b623852f197eb3500e4) | feat | introduce `outputToObservable` interop helper ([#&#8203;54650](https://togithub.com/angular/angular/pull/54650)) |\n| [974958913c](https://togithub.com/angular/angular/commit/974958913ca632971f878a045537472f2c99c665) | feat | support TypeScript 5.4 ([#&#8203;54414](https://togithub.com/angular/angular/pull/54414)) |\n| [39a50f9a8d](https://togithub.com/angular/angular/commit/39a50f9a8df5afc4968d18924f3d9d7d6b649d3a) | fix | ensure all initializer functions run in an injection context ([#&#8203;54761](https://togithub.com/angular/angular/pull/54761)) |\n| [243ccce624](https://togithub.com/angular/angular/commit/243ccce62475ae03a2e727d2b3cb2d51a595c4a7) | fix | exclude class attribute intended for projection matching from directive matching ([#&#8203;54800](https://togithub.com/angular/angular/pull/54800)) |\n| [2909e9817d](https://togithub.com/angular/angular/commit/2909e9817daf69b6478d7d09229491a9a48cff16) | fix | prevent infinite loops in clobbered elements check ([#&#8203;54425](https://togithub.com/angular/angular/pull/54425)) |\n| [7243c704cf](https://togithub.com/angular/angular/commit/7243c704cf8a4986fae419793027458e142658f0) | fix | return a readonly signal on `asReadonly`. ([#&#8203;54706](https://togithub.com/angular/angular/pull/54706)) |\n| [bb35414a38](https://togithub.com/angular/angular/commit/bb35414a38f8a8447d03c66dc5bf60b84409f9e3) | perf | speed up retrieval of `DestroyRef` in `EventEmitter` ([#&#8203;54748](https://togithub.com/angular/angular/pull/54748)) |\n\n##### http\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8d37ed035c](https://togithub.com/angular/angular/commit/8d37ed035c9e9796ba9a7b1f055404ea220dbb3b) | fix | exclude caching for authenticated HTTP requests ([#&#8203;54746](https://togithub.com/angular/angular/pull/54746)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c1c7384e02](https://togithub.com/angular/angular/commit/c1c7384e02becc623c6a42985f7178ca98137264) | feat | Add reusable types for router guards ([#&#8203;54580](https://togithub.com/angular/angular/pull/54580)) |\n| [7225485311](https://togithub.com/angular/angular/commit/722548531108e247660ebe6966b99b57d510b615) | fix | Navigations triggered by cancellation events should cancel previous navigation ([#&#8203;54710](https://togithub.com/angular/angular/pull/54710)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzkuMCIsInVwZGF0ZWRJblZlciI6IjM3LjI0My4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27267","RelatedDescription":"Open PR \"build: update angular\" (#27267)"},{"Id":"2180745080","IsPullRequest":true,"CreatedAt":"2024-03-12T16:46:17","Actor":"angular-robot","Number":"27260","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `1cc23b2` -> `fef1cd2` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `d3e46c1` -> `a6032f3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `65d002a` -> `7879726` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `d8b5323` -> `4631f55` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `042ebac` -> `684da70` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `92dc827` -> `57411c1` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `91d2b25` -> `6e9a411` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `cd4a1e3` -> `9b29ac6` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `908fb7e` -> `1b0cca0` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `f14dee5` -> `8106bee` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `52b5149` -> `7217dba` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `0691eb2` -> `6ad40e8` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c7bbc91` -> `77afda0` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `7dea535` -> `79af385` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `e76565b` -> `1d2196b` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `dc3808b` -> `763cc45` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `a1559ca` -> `605474d` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `730b984` -> `4862772` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `96d734c` -> `5558282` |\n| angular/dev-infra | action | digest | `5774b71` -> `0160e89` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzUuNSIsInVwZGF0ZWRJblZlciI6IjM3LjIzOS4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27260","RelatedDescription":"Closed or merged PR \"build: update angular\" (#27260)"},{"Id":"2180079620","IsPullRequest":true,"CreatedAt":"2024-03-12T16:45:54","Actor":"clydin","Number":"27254","RawContent":null,"Title":"build: remove template string helpers from validation scripts","State":"closed","Body":"The helpers are unneeded and behavior can be reproduced with direct string usage.  Also, this removes a runtime dependency on the packages being validated.","Url":"https://github.com/angular/angular-cli/pull/27254","RelatedDescription":"Closed or merged PR \"build: remove template string helpers from validation scripts\" (#27254)"},{"Id":"2178767821","IsPullRequest":true,"CreatedAt":"2024-03-12T15:51:03","Actor":"alan-agius4","Number":"27249","RawContent":null,"Title":"    refactor(@angular/cli): remove support for Node.js versions <18.19.1 and <20.11.1","State":"closed","Body":"BREAKING CHANGE: Node.js support for versions <18.19.1 and <20.11.1 has been removed.","Url":"https://github.com/angular/angular-cli/pull/27249","RelatedDescription":"Closed or merged PR \"    refactor(@angular/cli): remove support for Node.js versions <18.19.1 and <20.11.1\" (#27249)"},{"Id":"2181781895","IsPullRequest":false,"CreatedAt":"2024-03-12T15:36:33","Actor":"mangelozzi","Number":"27265","RawContent":null,"Title":"Cant update to Angular 17 if using `nguniversal`","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf one updates to Angular 17, but you are using nguniversal, these pacakge require angular 16:\r\n\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n\r\n### Minimal Reproduction\r\n\r\n1. Put this in your `package.json`:\r\n```\r\n{\r\n    \"name\": \"ng-client\",\r\n    \"version\": \"0.0.0\",\r\n    \"scripts\": {\r\n        \"ng\": \"ng\",\r\n        \"start\": \"ng serve\",\r\n        \"build\": \"ng build\",\r\n        \"build:stats\": \"ng build --stats-json\",\r\n        \"analyze:stats\": \"webpack-bundle-analyzer dist/ngClient/browser/stats.json\",\r\n        \"analyze\": \"source-map-explorer dist/ngClient/browser/*.js\",\r\n        \"watch\": \"ng build --watch --configuration development\",\r\n        \"test\": \"ng test\",\r\n        \"dev:ssr\": \"ng run ngClient:serve-ssr\",\r\n        \"serve:ssr\": \"node dist/ngClient/server/main.js\",\r\n        \"build:ssr\": \"ng build && ng run ngClient:server\",\r\n        \"serve:pre\": \"http-server -g -c-1 dist/ngClient/browser\",\r\n        \"build:pre\": \"ng run ngClient:prerender\"\r\n    },\r\n    \"private\": true,\r\n    \"dependencies\": {\r\n        \"@angular/animations\": \"^17.2.4\",\r\n        \"@angular/cdk\": \"^17.2.2\",\r\n        \"@angular/common\": \"^17.2.4\",\r\n        \"@angular/compiler\": \"^17.2.4\",\r\n        \"@angular/core\": \"^17.2.4\",\r\n        \"@angular/forms\": \"^17.2.4\",\r\n        \"@angular/material\": \"^17.2.2\",\r\n        \"@angular/platform-browser\": \"^17.2.4\",\r\n        \"@angular/platform-browser-dynamic\": \"^17.2.4\",\r\n        \"@angular/platform-server\": \"^17.2.4\",\r\n        \"@angular/router\": \"^17.2.4\",\r\n        \"@nguniversal/express-engine\": \"^16.2.0\",\r\n        \"express\": \"^4.18.3\",\r\n        \"lodash\": \"^4.17.21\",\r\n        \"ngx-skeleton-loader\": \"^9.0.0\",\r\n        \"rxjs\": \"~7.8.1\",\r\n        \"tslib\": \"^2.6.2\",\r\n        \"zone.js\": \"~0.14.4\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@angular-devkit/build-angular\": \"^17.2.3\",\r\n        \"@angular/cli\": \"^17.2.3\",\r\n        \"@angular/compiler-cli\": \"^17.2.4\",\r\n        \"@nguniversal/builders\": \"^16.2.0\",\r\n        \"@types/express\": \"^4.17.21\",\r\n        \"@types/jasmine\": \"~5.1.4\",\r\n        \"@types/lodash\": \"^4.17.0\",\r\n        \"@types/node\": \"^20.11.26\",\r\n        \"jasmine-core\": \"~5.1.2\",\r\n        \"karma\": \"~6.4.3\",\r\n        \"karma-chrome-launcher\": \"~3.2.0\",\r\n        \"karma-coverage\": \"~2.2.1\",\r\n        \"karma-jasmine\": \"~5.1.0\",\r\n        \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n        \"prettier\": \"^3.0.2\",\r\n        \"typescript\": \"~5.3.3\",\r\n        \"webpack-bundle-analyzer\": \"^4.10.1\"\r\n    }\r\n}\r\n```\r\n\r\n2. `npm install`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n$ npm update\r\nnpm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR!\r\nnpm ERR! While resolving: ng-client@0.0.0\r\nnpm ERR! Found: @angular/common@17.2.4\r\nnpm ERR! node_modules/@angular/common\r\nnpm ERR!   @angular/common@\"^17.2.4\" from the root project\r\nnpm ERR!\r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @angular/common@\"^16.0.0 || ^16.1.0-next.0\" from @nguniversal/express-engine@16.2.0\r\nnpm ERR! node_modules/@nguniversal/express-engine\r\nnpm ERR!   @nguniversal/express-engine@\"^16.2.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.2.3\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/material               17.2.2\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nSame issue as https://github.com/angular/angular-cli/issues/26167","Url":"https://github.com/angular/angular-cli/issues/27265","RelatedDescription":"Closed issue \"Cant update to Angular 17 if using `nguniversal`\" (#27265)"},{"Id":"2181038311","IsPullRequest":true,"CreatedAt":"2024-03-12T14:28:19","Actor":"alan-agius4","Number":"27263","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): properly display errors originating in ESM loader hooks","State":"closed","Body":"\r\n\r\nCurrently, errors occurring in ESM loader hooks while using `--import` are not correctly displayed, as they cannot be transferred from the worker to the main thread. Although the error is an instance of Error, it contains non-transferable properties and cannot be transmitted from a worker when --import is used. Consequently, when read outside of the worker, the error object displays as `[Object object]`. To address this issue, we reconstruct the error message.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/27251\r\n","Url":"https://github.com/angular/angular-cli/pull/27263","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): properly display errors originating in ESM loader hooks\" (#27263)"},{"Id":"2180196265","IsPullRequest":false,"CreatedAt":"2024-03-12T14:08:58","Actor":"danielsogl","Number":"27256","RawContent":null,"Title":"Could not resolve tailwind after Angular CLI v17.2.3 upgrade","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.2.2\n\n### Description\n\nAfter upgrading to the latest Angular CLI v17.2.3 I'am unable to resolve tailwind css in my project and the build fails.\n\n### Minimal Reproduction\n\n- add tailwind\r\n- import tailwind as provided in the styles.scss file\r\n\r\n```scss\r\n/* You can add global styles to this file, and also import other style files */\r\n@layer tailwind-base;\r\n\r\n@import 'tailwindcss/base' layer(tailwind-base);\r\n@tailwind components;\r\n@tailwind utilities;\r\n```\n\n### Exception or Error\n\n```text\n> ng build\r\n- Building...\r\n\r\n\r\nApplication bundle generation failed. [13.954 seconds]\r\nError: R] Could not resolve \"tailwindcss/base\"\r\n\r\n    src/styles.scss:3:8:\r\n      3 │ @import 'tailwindcss/base' layer(tailwind-base);\r\n        ╵         ~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"tailwindcss/base\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n\r\n\r\nError: Process completed with exit code 1.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.2\r\nNode: 20.11.0\r\nPackage Manager: npm 10.5.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.2\r\n@angular-devkit/build-angular   17.2.2\r\n@angular-devkit/core            17.2.2\r\n@angular-devkit/schematics      17.2.2\r\n@angular/cli                    17.2.2\r\n@schematics/angular             17.2.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27256","RelatedDescription":"Closed issue \"Could not resolve tailwind after Angular CLI v17.2.3 upgrade\" (#27256)"},{"Id":"2179565818","IsPullRequest":true,"CreatedAt":"2024-03-12T13:46:21","Actor":"clydin","Number":"27252","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded option type casting from several builders","State":"closed","Body":"Multiple cases where builder options were being cast to the `JsonObject` type have been removed. These casts are no longer needed and unnecessarily added complexity to the code.","Url":"https://github.com/angular/angular-cli/pull/27252","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded option type casting from several builders\" (#27252)"},{"Id":"2181351564","IsPullRequest":false,"CreatedAt":"2024-03-12T11:12:25","Actor":"kamilchlebek","Number":"27264","RawContent":null,"Title":"CLI doesn't allow custom builder to pass additional extensions when building app for i18n extractions","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Description\r\n\r\nWe're in the process of migrating from webpack to esbuild. \r\nTo provide custom esbuild plugins we decided to use custom builder (https://github.com/just-jeb/angular-builders).\r\n\r\nIt went smooth until we realised that `extract-i18` no longer works. It ends successfully but `messages.xlf` is empty. \r\n\r\nIt turned out that angular checks `builderName` to choose which bundler to use. \r\n\r\nTo fix that I decided to implement custom `extract-i18n` builder that will trick `angular/cli` and force using esbuild - \r\nhttps://github.com/just-jeb/angular-builders/pull/1711\r\n\r\nFor the record `nrwl/nx` did the same - https://github.com/nrwl/nx/pull/21802\r\n\r\n**The issue** is that `angular/cli` will not let us pass any extensions during i18n application compilation. \r\n\r\nhttps://github.com/angular/angular-cli/blob/1034bb155b58a5f18eecf56409a3ff99d2ca4474/packages/angular_devkit/build_angular/src/builders/extract-i18n/application-extraction.ts#L59\r\n\r\nIt may lead to inconsistency between build and extract flow, which I suppose may lead to issues with i18n.\r\n\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nWe should be able to pass custom extensions as for regular app building. \r\n\r\n(bonus) would be really nice if these `if (builderName === ...` are  replaced by something that is custom builder friendly 🙏 \r\n\r\n### Describe alternatives you've considered\r\n\r\nAlternatively we could rewrite whole `extract-i18n` builder, but as 95% of the code would be the same - it seems pointless ","Url":"https://github.com/angular/angular-cli/issues/27264","RelatedDescription":"Open issue \"CLI doesn't allow custom builder to pass additional extensions when building app for i18n extractions\" (#27264)"},{"Id":"2179116981","IsPullRequest":false,"CreatedAt":"2024-03-12T09:06:28","Actor":"masterwendu","Number":"27251","RawContent":null,"Title":"Build application with prerender routes file fails","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI migrated my app to Angular 17 --> works as expected.\r\n\r\nNow I want to get rid of my webpack build.\r\n\r\nSo I migrate my prerendering to @angular-devkit/build-angular:application:\r\n```\r\n\r\n          \"builder\": \"@angular-devkit/build-angular:application\",\r\n          \"options\": {\r\n              \"outputPath\": \"dist/browser\",\r\n              \"index\": \"src/index.html\",\r\n              \"browser\": \"src/main.ts\",\r\n              \"polyfills\": [ \"src/polyfills.ts\" ],\r\n              \"tsConfig\": \"tsconfig.app.json\",\r\n              \"inlineStyleLanguage\": \"scss\",\r\n              \"assets\": [\r\n                \"src/favicon.ico\",\r\n                \"src/assets\",\r\n                \"src/sitemap.xml\",\r\n                \"src/robots.txt\"\r\n              ],\r\n              \"styles\": [\r\n                \"src/styles.scss\"\r\n              ],\r\n              \"scripts\": [],\r\n              \"prerender\": {\r\n                \"discoverRoutes\": false,\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n          },\r\n....\r\n```\r\n\r\nwhen I run then the build with ng build I get following error:\r\n```\r\nAn unexpected error occurred: [object Object]\r\nerror: script \"build\" exited with code 1\r\n```\r\n\r\nThis only happens when prerender options is:\r\n```\r\n              \"prerender\": {\r\n                \"discoverRoutes\": false,\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n```\r\n```\r\n              \"prerender\": {\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n```\r\n```\r\n              \"prerender\": {\r\n                \"discoverRoutes\": true,\r\n              }\r\n```\r\n```\r\n              \"prerender\":  true\r\n```\r\n\r\nmy routes.txt is correct.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\nhttps://github.com/WhizUs-Labs/angular-prerender-test\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nAn unexpected error occurred: [object Object]\r\nerror: script \"build\" exited with code 1\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.2.3\r\nNode: 20.11.1\r\nPackage Manager: bun 1.0.30\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/google-maps            17.2.2\r\n@angular/ssr                    17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27251","RelatedDescription":"Closed issue \"Build application with prerender routes file fails\" (#27251)"},{"Id":"2179594927","IsPullRequest":true,"CreatedAt":"2024-03-12T09:06:27","Actor":"alan-agius4","Number":"27253","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide better error message when server option is required but missing","State":"closed","Body":"\r\n\r\nThis improves the error message when the server entry-point is required but missing\r\n\r\nCloses #27251\r\n","Url":"https://github.com/angular/angular-cli/pull/27253","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide better error message when server option is required but missing\" (#27253)"},{"Id":"2180317935","IsPullRequest":true,"CreatedAt":"2024-03-12T08:37:27","Actor":"clydin","Number":"27258","RawContent":null,"Title":"build: update aspect_bazel_lib to v2.5.3","State":"closed","Body":"Also removes `asspect_bazel_lib` from the renovate update ignore list. The build problems have since been resolved.","Url":"https://github.com/angular/angular-cli/pull/27258","RelatedDescription":"Closed or merged PR \"build: update aspect_bazel_lib to v2.5.3\" (#27258)"},{"Id":"2180426021","IsPullRequest":false,"CreatedAt":"2024-03-12T07:40:33","Actor":"Ariel-Dayan","Number":"27259","RawContent":null,"Title":"loader-utils vulnerability","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nwhen running `npm audit` after upgrading angular version to `16` or `17`, received the following vulnerability about `loader-utils`.\r\non `npm ls loader-utils` it's seem like it's in used of @angular-devkit/build-angular -> resolve-url-loader@5.0.0\n\n### Minimal Reproduction\n\n`npm audit` & `npm ls loader-utils`\n\n### Exception or Error\n\n```text\nnpm audit report:\r\n\r\n\r\nloader-utils 2.0.0 - 2.0.3\r\nSeverity: critical\r\nloader-utils is vulnerable to Regular Expression Denial of Service (ReDoS) - https://github.com/advisories/GHSA-hhq3-ff78-jv3g\r\nPrototype pollution in webpack loader-utils - https://github.com/advisories/GHSA-76p3-8jx3-jpfq\r\nloader-utils is vulnerable to Regular Expression Denial of Service (ReDoS) via url variable - https://github.com/advisories/GHSA-3rfm-jhwj-7488\r\n```\n```\n\n\n### Your Environment\n\n```text\n16.2.12\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27259","RelatedDescription":"Closed issue \"loader-utils vulnerability\" (#27259)"},{"Id":"2180829029","IsPullRequest":false,"CreatedAt":"2024-03-12T06:56:44","Actor":"laijuthomas","Number":"27262","RawContent":null,"Title":"Getting error ReferenceError: fetch in server after deploy. ","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.11\n\n### Description\n\nI am getting an error ReferenceError: fetch is not defined while building and deploying my angular 17 app in server. While building the same app in my local machine and serving doesn't produce the same issue.\n\n### Minimal Reproduction\n\nng build --configuration staging\n\n### Exception or Error\n\n```text\nReferenceError: fetch is not defined\r\n    at new e (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-DPJU7YM5.mjs:3:13592)\r\n    at Object.e.ɵfac [as factory] (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-DPJU7YM5.mjs:3:15810)\r\n    at Cn.hydrate (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7010)\r\n    at Cn.get (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:6166)\r\n    at Cm (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17498)\r\n    at ae (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17575)\r\n    at Object.r [as factory] (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7900)\r\n    at Cn.hydrate (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7010)\r\n    at Cn.get (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:6166)\r\n    at Cm (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17498)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27262","RelatedDescription":"Closed issue \"Getting error ReferenceError: fetch in server after deploy. \" (#27262)"},{"Id":"2180745369","IsPullRequest":true,"CreatedAt":"2024-03-12T05:10:54","Actor":"angular-robot","Number":"27261","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`7.1.1` -> `7.2.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/7.1.1/7.2.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`7.1.1` -> `7.2.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/7.1.1/7.2.0) |\n| [inquirer](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`9.2.15` -> `9.2.16`](https://renovatebot.com/diffs/npm/inquirer/9.2.15/9.2.16) |\n| [inquirer](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`9.2.15` -> `9.2.16`](https://renovatebot.com/diffs/npm/inquirer/9.2.15/9.2.16) |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | minor | [`17.2.1` -> `17.3.0`](https://renovatebot.com/diffs/npm/ng-packagr/17.2.1/17.3.0) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.105` -> `23.0.106`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.105/23.0.106) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`~4.12.0` -> `~4.13.0`](https://renovatebot.com/diffs/npm/rollup/4.12.1/4.13.0) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.71.1` -> `1.72.0`](https://renovatebot.com/diffs/npm/sass/1.71.1/1.72.0) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.71.1` -> `1.72.0`](https://renovatebot.com/diffs/npm/sass/1.71.1/1.72.0) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | dependencies | minor | [`6.7.1` -> `6.8.0`](https://renovatebot.com/diffs/npm/undici/6.7.1/6.8.0) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | devDependencies | minor | [`6.7.1` -> `6.8.0`](https://renovatebot.com/diffs/npm/undici/6.7.1/6.8.0) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`5.1.5` -> `5.1.6`](https://renovatebot.com/diffs/npm/vite/5.1.5/5.1.6) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`5.1.5` -> `5.1.6`](https://renovatebot.com/diffs/npm/vite/5.1.5/5.1.6) |\n| [watchpack](https://togithub.com/webpack/watchpack) | dependencies | patch | [`2.4.0` -> `2.4.1`](https://renovatebot.com/diffs/npm/watchpack/2.4.0/2.4.1) |\n| [watchpack](https://togithub.com/webpack/watchpack) | devDependencies | patch | [`2.4.0` -> `2.4.1`](https://renovatebot.com/diffs/npm/watchpack/2.4.0/2.4.1) |\n| [webpack-dev-server](https://togithub.com/webpack/webpack-dev-server) | dependencies | patch | [`5.0.2` -> `5.0.3`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.0.2/5.0.3) |\n| [webpack-dev-server](https://togithub.com/webpack/webpack-dev-server) | devDependencies | patch | [`5.0.2` -> `5.0.3`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.0.2/5.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v7.2.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#720-2024-03-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.1.1...v7.2.0)\n\n##### 🚀 Features\n\n-   support TS 5.4\n\n-   **eslint-plugin:** \\[prefer-string-starts-ends-with] add allowSingleElementEquality option\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** expose \\*-type-checked-only configs for extension\n\n-   **eslint-plugin:** \\[member-ordering] report alphabetical sorting for all groups instead of just the first failing group\n\n-   **eslint-plugin:** \\[no-var-requires, no-require-imports] support template literal\n\n-   **eslint-plugin:** \\[no-useless-template-literals] detect TemplateLiteral\n\n-   **eslint-plugin:** \\[no-unnecessary-condition] handle union array and tuple type\n\n-   **eslint-plugin:** \\[prefer-find] support ternary branches in prefer-find\n\n##### ❤️  Thank You\n\n-   Arka Pratim Chaudhuri\n-   auvred\n-   Chris Plummer\n-   Fotis Papadogeorgopoulos\n-   Josh Goldberg ✨\n-   Kirk Waiblinger\n-   Wayne Zhang\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v7.2.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#720-2024-03-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.1.1...v7.2.0)\n\n##### 🚀 Features\n\n-   support TS 5.4\n\n##### ❤️  Thank You\n\n-   Arka Pratim Chaudhuri\n-   auvred\n-   Chris Plummer\n-   Fotis Papadogeorgopoulos\n-   Josh Goldberg ✨\n-   Kirk Waiblinger\n-   Wayne Zhang\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>SBoudrias/Inquirer.js (inquirer)</summary>\n\n### [`v9.2.16`](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@9.2.15...inquirer@9.2.16)\n\n[Compare Source](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@9.2.15...inquirer@9.2.16)\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v17.3.0`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1730-2024-03-13)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/17.2.1...17.3.0)\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.106`](https://togithub.com/quicktype/quicktype/compare/0b5924db1d3858d6f4abe5923cce53b2f4e581aa...99d4dcac0151d216315000919af14d8b6b53712b)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/0b5924db1d3858d6f4abe5923cce53b2f4e581aa...99d4dcac0151d216315000919af14d8b6b53712b)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.13.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4130)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v4.12.1...v4.13.0)\n\n*2024-03-12*\n\n##### Features\n\n-   Ensure that the location of parse errors and other logs is encoded in the error message as well ([#&#8203;5424](https://togithub.com/rollup/rollup/issues/5424))\n\n##### Pull Requests\n\n-   [#&#8203;5417](https://togithub.com/rollup/rollup/pull/5417): chore(deps): lock file maintenance minor/patch updates ( [@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5418](https://togithub.com/rollup/rollup/pull/5418): chore(deps): lock file maintenance ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5419](https://togithub.com/rollup/rollup/pull/5419): chore: fix typo ([@&#8203;OnlyWick](https://togithub.com/OnlyWick))\n-   [#&#8203;5424](https://togithub.com/rollup/rollup/pull/5424): Add locations to logs, warnings and error messages ( [@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.72.0`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1720)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.71.1...1.72.0)\n\n-   Support adjacent `/`s without whitespace in between when parsing plain CSS\n    expressions.\n\n-   Allow the Node.js `pkg:` importer to load Sass stylesheets for `package.json`\n    `exports` field entries without extensions.\n\n-   When printing suggestions for variables, use underscores in variable names\n    when the original usage used underscores.\n\n##### JavaScript API\n\n-   Properly resolve `pkg:` imports with the Node.js package importer when\n    arguments are passed to the JavaScript process.\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.8.0`](https://togithub.com/nodejs/undici/releases/tag/v6.8.0)\n\n[Compare Source](https://togithub.com/nodejs/undici/compare/v6.7.1...v6.8.0)\n\n##### What's Changed\n\n-   fix: send correct SNI for proxy connections by [@&#8203;chrros95](https://togithub.com/chrros95) in [https://github.com/nodejs/undici/pull/2939](https://togithub.com/nodejs/undici/pull/2939)\n-   build(deps): bump node from `8bf9240` to `7bfef1d` in /build by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2937](https://togithub.com/nodejs/undici/pull/2937)\n-   fetch: improve util.inspect output for web specifications by [@&#8203;mertcanaltin](https://togithub.com/mertcanaltin) in [https://github.com/nodejs/undici/pull/2938](https://togithub.com/nodejs/undici/pull/2938)\n-   ci: fix broken ci on windows and node v21 because of libuv bug by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2941](https://togithub.com/nodejs/undici/pull/2941)\n-   perf: improve getResolveErrorBodyCallback by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2940](https://togithub.com/nodejs/undici/pull/2940)\n-   fix: don't assign kAgent twice by [@&#8203;ronag](https://togithub.com/ronag) in [https://github.com/nodejs/undici/pull/2942](https://togithub.com/nodejs/undici/pull/2942)\n-   perf: dump immediatly if known size exceeds limit by [@&#8203;ronag](https://togithub.com/ronag) in [https://github.com/nodejs/undici/pull/2882](https://togithub.com/nodejs/undici/pull/2882)\n-   build(deps): bump node from `7bfef1d` to `4999fa1` in /build by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2946](https://togithub.com/nodejs/undici/pull/2946)\n-   try to fix windows failure by [@&#8203;ronag](https://togithub.com/ronag) in [https://github.com/nodejs/undici/pull/2950](https://togithub.com/nodejs/undici/pull/2950)\n-   perf: improve parsing form-data by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2944](https://togithub.com/nodejs/undici/pull/2944)\n\n##### New Contributors\n\n-   [@&#8203;chrros95](https://togithub.com/chrros95) made their first contribution in [https://github.com/nodejs/undici/pull/2939](https://togithub.com/nodejs/undici/pull/2939)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v6.7.1...v6.8.0\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.1.6`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small516-2024-03-11-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.1.5...v5.1.6)\n\n-   chore(deps): update all non-major dependencies ([#&#8203;16131](https://togithub.com/vitejs/vite/issues/16131)) ([a862ecb](https://togithub.com/vitejs/vite/commit/a862ecb)), closes [#&#8203;16131](https://togithub.com/vitejs/vite/issues/16131)\n-   fix: check for publicDir before checking if it is a parent directory ([#&#8203;16046](https://togithub.com/vitejs/vite/issues/16046)) ([b6fb323](https://togithub.com/vitejs/vite/commit/b6fb323)), closes [#&#8203;16046](https://togithub.com/vitejs/vite/issues/16046)\n-   fix: escape single quote when relative base is used ([#&#8203;16060](https://togithub.com/vitejs/vite/issues/16060)) ([8f74ce4](https://togithub.com/vitejs/vite/commit/8f74ce4)), closes [#&#8203;16060](https://togithub.com/vitejs/vite/issues/16060)\n-   fix: handle function property extension in namespace import ([#&#8203;16113](https://togithub.com/vitejs/vite/issues/16113)) ([f699194](https://togithub.com/vitejs/vite/commit/f699194)), closes [#&#8203;16113](https://togithub.com/vitejs/vite/issues/16113)\n-   fix: server middleware mode resolve ([#&#8203;16122](https://togithub.com/vitejs/vite/issues/16122)) ([8403546](https://togithub.com/vitejs/vite/commit/8403546)), closes [#&#8203;16122](https://togithub.com/vitejs/vite/issues/16122)\n-   fix(esbuild): update tsconfck to fix bug that could cause a deadlock  ([#&#8203;16124](https://togithub.com/vitejs/vite/issues/16124)) ([fd9de04](https://togithub.com/vitejs/vite/commit/fd9de04)), closes [#&#8203;16124](https://togithub.com/vitejs/vite/issues/16124)\n-   fix(worker): hide \"The emitted file overwrites\" warning if the content is same ([#&#8203;16094](https://togithub.com/vitejs/vite/issues/16094)) ([60dfa9e](https://togithub.com/vitejs/vite/commit/60dfa9e)), closes [#&#8203;16094](https://togithub.com/vitejs/vite/issues/16094)\n-   fix(worker): throw error when circular worker import is detected and support self referencing worker ([eef9da1](https://togithub.com/vitejs/vite/commit/eef9da1)), closes [#&#8203;16103](https://togithub.com/vitejs/vite/issues/16103)\n-   style(utils): remove null check ([#&#8203;16112](https://togithub.com/vitejs/vite/issues/16112)) ([0d2df52](https://togithub.com/vitejs/vite/commit/0d2df52)), closes [#&#8203;16112](https://togithub.com/vitejs/vite/issues/16112)\n-   refactor(runtime): share more code between runtime and main bundle ([#&#8203;16063](https://togithub.com/vitejs/vite/issues/16063)) ([93be84e](https://togithub.com/vitejs/vite/commit/93be84e)), closes [#&#8203;16063](https://togithub.com/vitejs/vite/issues/16063)\n\n</details>\n\n<details>\n<summary>webpack/watchpack (watchpack)</summary>\n\n### [`v2.4.1`](https://togithub.com/webpack/watchpack/releases/tag/v2.4.1)\n\n[Compare Source](https://togithub.com/webpack/watchpack/compare/v2.4.0...v2.4.1)\n\n##### Bugfixes\n\n-   do not report directory as initial missing on the second watch\n\n</details>\n\n<details>\n<summary>webpack/webpack-dev-server (webpack-dev-server)</summary>\n\n### [`v5.0.3`](https://togithub.com/webpack/webpack-dev-server/blob/HEAD/CHANGELOG.md#503-2024-03-12)\n\n[Compare Source](https://togithub.com/webpack/webpack-dev-server/compare/v5.0.2...v5.0.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzUuNSIsInVwZGF0ZWRJblZlciI6IjM3LjI0My4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27261","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#27261)"},{"Id":"2180123076","IsPullRequest":true,"CreatedAt":"2024-03-11T21:46:12","Actor":"clydin","Number":"27255","RawContent":null,"Title":"build: update less-loader to v12.2.0","State":"closed","Body":"Also removes `less-loader` from the renovate update ignore list. The transitive dependency licensing issue has been resolved upstream.","Url":"https://github.com/angular/angular-cli/pull/27255","RelatedDescription":"Closed or merged PR \"build: update less-loader to v12.2.0\" (#27255)"},{"Id":"2180218909","IsPullRequest":false,"CreatedAt":"2024-03-11T21:45:24","Actor":"ArielDayanDev","Number":"27257","RawContent":null,"Title":"closed","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/issues/27257","RelatedDescription":"Closed issue \"closed\" (#27257)"},{"Id":"2179051215","IsPullRequest":true,"CreatedAt":"2024-03-11T18:00:55","Actor":"alan-agius4","Number":"27250","RawContent":null,"Title":"build: update dependency webpack-dev-server to v5","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27250","RelatedDescription":"Closed or merged PR \"build: update dependency webpack-dev-server to v5\" (#27250)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2184997286","IsPullRequest":true,"CreatedAt":"2024-03-13T22:27:56","Actor":"mmalerba","Number":"28720","RawContent":null,"Title":"ci: Update safari version","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28720","RelatedDescription":"Open PR \"ci: Update safari version\" (#28720)"},{"Id":"2184974954","IsPullRequest":true,"CreatedAt":"2024-03-13T22:08:27","Actor":"mmalerba","Number":"28719","RawContent":null,"Title":"fix(cdk/overlay): Remove use of zone onStable to detach content","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28719","RelatedDescription":"Open PR \"fix(cdk/overlay): Remove use of zone onStable to detach content\" (#28719)"},{"Id":"2177606363","IsPullRequest":false,"CreatedAt":"2024-03-13T15:34:44","Actor":"kibetmasi","Number":"28706","RawContent":null,"Title":"bug(COMPONENT): Angular Material custom theme button ripple is white when clicked","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.1.2\n\n### Description\n\nI have a custom theme on my Angular project. Everything had worked as expected\r\nHowever, updating my Angular Material from 17.1.2 to the latest version makes the ripple white and does not work as expected.\r\n\r\n\n\n### Reproduction\n\n// Custom Theming for Angular Material\r\n// For more information: https://material.angular.io/guide/theming\r\n@use '@angular/material' as mat;\r\n// Plus imports for other components in your app.\r\n\r\n// Include the common styles for Angular Material. We include this here so that you only\r\n// have to load a single css file for Angular Material in your app.\r\n// Be sure that you only ever include this mixin once!\r\n@include mat.core();\r\n\r\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n// hue. Available color palettes: https://material.io/design/color/\r\n$dark-primary-text: rgba(rgb(106, 106, 106), 0.87);\r\n$dark-secondary-text: rgba(rgb(189, 189, 189), 0.54);\r\n$dark-disabled-text: rgba(rgb(184, 184, 184), 0.38);\r\n$dark-dividers: rgba(rgb(151, 151, 151), 0.12);\r\n$dark-focused: rgba(rgb(205, 203, 203), 0.12);\r\n$light-primary-text: rgb(222, 222, 222);\r\n$light-secondary-text: rgba(white, 0.7);\r\n$light-disabled-text: rgba(white, 0.5);\r\n\r\n$custom-palette: (\r\n  50: var(--50),\r\n  100: var(--100),\r\n  200: var(--200),\r\n  300: var(--300),\r\n  400: var(--400),\r\n  500: var(--500),\r\n  600: var(--600),\r\n  700: var(--700),\r\n  800: var(--800),\r\n  900: var(--900),\r\n  contrast: (\r\n    50: var(--text-contrast),\r\n    100: var(--text-contrast),\r\n    200: var(--text-contrast),\r\n    300: var(--text-contrast),\r\n    400: var(--text-contrast),\r\n    500: var(--text-contrast),\r\n    600: var(--text-contrast),\r\n    700: var(--text-contrast),\r\n    800: var(--text-contrast),\r\n    900: var(--text-contrast),\r\n  )\r\n);\r\n\r\n$tafari-primary: mat.define-palette($custom-palette, 500);\r\n$tafari-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$typography-config: mat.define-typography-config(\r\n  $font-family: '\"Open Sans\", \"Helvetica Neue\", sans-serif',\r\n  $headline-1: mat.define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\r\n  $headline-2: mat.define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\r\n  $headline-3: mat.define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\r\n  $headline-4: mat.define-typography-level(34px, 40px, 400),\r\n  $headline-5: mat.define-typography-level(24px, 32px, 400),\r\n  $headline-6: mat.define-typography-level(20px, 32px, 400),\r\n  $subtitle-1: mat.define-typography-level(16px, 28px, 400),\r\n  $body-1: mat.define-typography-level(14px, 20px, 400),\r\n  $body-2: mat.define-typography-level(14px, 20px, 400),\r\n  $subtitle-2: mat.define-typography-level(16px, 28px, 400),\r\n  $caption: mat.define-typography-level(12px, 20px, 400),\r\n);\r\n\r\n// Create the theme object. A theme consists of configurations for individual\r\n// theming systems such as \"color\" or \"typography\".\r\n$tafari-theme: mat.define-light-theme((\r\n  color: (\r\n    primary: $tafari-primary,\r\n    accent: $tafari-accent,\r\n  ),\r\n  typography: $typography-config,\r\n  density: 1,\r\n));\r\n\r\n// Include theme styles for core and each component used in your app.\r\n// Alternatively, you can import and @include the theme mixins for each component\r\n// that you are using.\r\n@include mat.all-component-themes($tafari-theme);\r\n@include mat.typography-hierarchy($typography-config);\r\n\r\n/* You can add global styles to this file, and also import other style files */\r\n\r\n\r\n// HTML file\r\n<button (click)=\"registerForm.valid ? register() : ''\" class=\"w-full\" mat-raised-button color=\"primary\">Register</button>\n\n### Expected Behavior\n\nButton ripple should be not be white when clicked\n\n### Actual Behavior\n\nmat-button ripple is white when clicked\n\n### Environment\n\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/material               17.2.2\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3","Url":"https://github.com/angular/components/issues/28706","RelatedDescription":"Closed issue \"bug(COMPONENT): Angular Material custom theme button ripple is white when clicked\" (#28706)"},{"Id":"2183399439","IsPullRequest":true,"CreatedAt":"2024-03-13T15:34:42","Actor":"crisbeto","Number":"28717","RawContent":null,"Title":"fix(material/core): avoid solid ripples in buttons","State":"closed","Body":"The changes from #28664 appear to have caused ripples to be solid in some setups. These changes add a fallback to the old behavior if that's the case.\r\n\r\nFixes #28706.","Url":"https://github.com/angular/components/pull/28717","RelatedDescription":"Closed or merged PR \"fix(material/core): avoid solid ripples in buttons\" (#28717)"},{"Id":"2183462598","IsPullRequest":true,"CreatedAt":"2024-03-13T09:57:44","Actor":"crisbeto","Number":"28718","RawContent":null,"Title":"build: update api golden","State":"closed","Body":"Fixes an out-of-date API golden.","Url":"https://github.com/angular/components/pull/28718","RelatedDescription":"Closed or merged PR \"build: update api golden\" (#28718)"},{"Id":"2174167009","IsPullRequest":true,"CreatedAt":"2024-03-13T09:04:00","Actor":"RussellSprouts","Number":"28699","RawContent":null,"Title":"feat(material/core): Allow namespacing ripple-loader event handler","State":"closed","Body":"ripple-loader registers an event handler on the document to do event delegation. If there are multiple instances of ripple-loader on one page, then they will both try to handle events for [mat-ripple-loader-uninitialized] elements. If a namespace is provided, then the handler will only handle events for [mat-ripple-loader-uninitialized=\"{namespace}\"] elements.","Url":"https://github.com/angular/components/pull/28699","RelatedDescription":"Closed or merged PR \"feat(material/core): Allow namespacing ripple-loader event handler\" (#28699)"},{"Id":"2181792124","IsPullRequest":false,"CreatedAt":"2024-03-13T05:32:03","Actor":"sschoorens","Number":"28716","RawContent":null,"Title":"bug(THEME): Using css var() in palette contrast is not applied on all components","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen I defined a theme like that\r\n```\r\n@use '@angular/material' as mat;\r\n@include mat.core();\r\n\r\n:root {\r\n  --primary: #2656cf;\r\n  --primary-contrast: #FFFFFF;\r\n}\r\n\r\n$light-primary-palette: (\r\n  700: var(--primary),\r\n  500: var(--primary),\r\n  100: var(--primary),\r\n  contrast: (\r\n    700: var(--primary-contrast),\r\n    500: var(--primary-contrast),\r\n    100: var(--primary-contrast)\r\n  )\r\n);\r\n\r\n$light-theme: mat.define-light-theme((\r\n color: (\r\n   primary: mat.define-palette($light-primary-palette),\r\n   accent: mat.define-palette(mat.$pink-palette)\r\n ),\r\n typography: mat.define-typography-config( ),\r\n density: 0\r\n));\r\n\r\n@include mat.all-component-themes($light-theme);\r\n```\r\n\r\nButtons don't apply the `--primary-contrast` but some other components use it\r\n\r\n![image](https://github.com/angular/components/assets/728750/d843487d-4d4f-4618-8957-a3d2238a25c3)\r\n\r\nBadges apply it\r\n```\r\n  --mat-badge-background-color: var(--primary);\r\n  --mat-badge-text-color: var(--primary-contrast);\r\n```\r\n\r\nButtons don't apply it\r\n```\r\n  --mdc-protected-button-container-color: var(--primary);\r\n  --mdc-protected-button-label-text-color: #000;\r\n  --mat-protected-button-state-layer-color: #000;\r\n  --mat-protected-button-ripple-color: rgba(0, 0, 0, 0.1);\r\n```\r\n\r\n`--mdc-protected-button-label-text-color` should be `--mdc-protected-button-label-text-color:  var(--primary-contrast);`\r\n\r\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/components-issue-u6e7fj\r\nSteps to reproduce:\r\n1. apply theme in styles.scss\r\n2. look at the result on a primary button\r\n\n\n### Expected Behavior\n\nButton contrast should work\n\n### Actual Behavior\n\nButton contrast doesn't work\n\n### Environment\n\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1702.1\r\n@angular-devkit/build-angular      17.2.1\r\n@angular-devkit/core               17.2.1\r\n@angular-devkit/schematics         17.2.1\r\n@angular/cdk                       17.2.1\r\n@angular/cli                       17.2.1\r\n@angular/material                  17.2.1\r\n@angular/material-moment-adapter   17.2.1\r\n@schematics/angular                17.2.1\r\nng-packagr                         17.2.0\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nzone.js                            0.14.4\r\n","Url":"https://github.com/angular/components/issues/28716","RelatedDescription":"Closed issue \"bug(THEME): Using css var() in palette contrast is not applied on all components\" (#28716)"},{"Id":"2179093682","IsPullRequest":false,"CreatedAt":"2024-03-12T18:07:14","Actor":"artopaavola","Number":"28708","RawContent":null,"Title":"bug(MatFormField): Resetting will-change breaks stacking context when sticky columns are used with MatTable ","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.2.1\n\n### Description\n\nWhen there is a MatFormField in a MatTable column and that sticky table is scrolled horizontally, the field border does not go \"behind\" sticky column. This regression was introduced in Angular Material 17.2.2 with this commit https://github.com/angular/components/commit/f6e85844a0f5c033763b30276bf5525e8330417a\r\n\r\nRemoving the will-change: auto on row 85 in the above commit fixes the issue.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-alv6me?file=package.json\r\nSteps to reproduce:\r\n1. Create a MatTable with sticky first column\r\n2. Put a MatFormField in the second column (not the sticky one)\r\n3. Scroll table contents horizontally\r\n4. The MatFormField borders will be on top of the sticky column while all other content including the text written in the MatFormField will correctly go behind the sticky column.\r\n\n\n### Expected Behavior\n\nAll the content in non-sticky columns should go \"behind\" the sticky column when scrolled horizontally.\n\n### Actual Behavior\n\nThe MatFormField borders remain on top of the sticky column when scrolled.\n\n### Environment\n\n- Angular: \r\n- CDK/Material:\r\n\r\n```\r\nAngular CLI: 17.2.3\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1702.3\r\n@angular-devkit/build-angular      17.2.3\r\n@angular-devkit/core               17.2.3\r\n@angular-devkit/schematics         17.2.3\r\n@angular/cdk                       17.2.2\r\n@angular/cli                       17.2.3\r\n@angular/material                  17.2.2\r\n@angular/material-moment-adapter   17.2.2\r\n@schematics/angular                17.2.3\r\nng-packagr                         17.2.1\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nzone.js                            0.14.4\r\n```\r\n- Browser(s): Chrome Version 122.0.6261.94 (Official Build) (arm64), Firefox 123.0 \r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28708","RelatedDescription":"Closed issue \"bug(MatFormField): Resetting will-change breaks stacking context when sticky columns are used with MatTable \" (#28708)"},{"Id":"2180975310","IsPullRequest":true,"CreatedAt":"2024-03-12T18:07:12","Actor":"crisbeto","Number":"28713","RawContent":null,"Title":"fix(material/form-field): ensure same stacking context as container","State":"closed","Body":"When `will-change` was removed in #27251, the form field lost its implicit stacking context which means that some of its descendants may be stacked on top of the container.\r\n\r\nThese changes add an explicit `z-index` on the container to resolve the issue.\r\n\r\nFixes #28708.","Url":"https://github.com/angular/components/pull/28713","RelatedDescription":"Closed or merged PR \"fix(material/form-field): ensure same stacking context as container\" (#28713)"},{"Id":"2180482807","IsPullRequest":true,"CreatedAt":"2024-03-12T16:59:53","Actor":"mmalerba","Number":"28711","RawContent":null,"Title":"ci: Ban introduction of more zone-dependent code","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28711","RelatedDescription":"Closed or merged PR \"ci: Ban introduction of more zone-dependent code\" (#28711)"},{"Id":"2181496126","IsPullRequest":false,"CreatedAt":"2024-03-12T12:27:02","Actor":"pedroestabruxelles","Number":"28715","RawContent":null,"Title":"bug(form-field): floatLabel moves outside of it's container","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.x\n\n### Description\n\nUp until v14 form-field had a margin-top to accommodate the floating label when using appearance outline, since v16 that was removed. \r\nThis causes a number of regressions where a form-field is at the very top of, for example, a container that has overflow: hidden. \r\n\r\nA similar issue has been reported on a different context but this is not particular to the tabs it's a broad issue:\r\nhttps://github.com/angular/components/issues/27764\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/pix6qb\r\n\r\nStackBlitz on the latest working version: https://stackblitz.com/edit/tfsfgk\r\n\n\n### Expected Behavior\n\n![image](https://github.com/angular/components/assets/46717433/7b0cda1d-4e34-40b4-8631-4f548ce7bb85)\r\n\n\n### Actual Behavior\n\n![image](https://github.com/angular/components/assets/46717433/856fedfe-e54e-4c1b-88d1-018759392f75)\r\n\n\n### Environment\n\n- Angular: 15.x, 16.x, 17.x\r\n- CDK/Material: 15.x, 16.x, 17.x\r\n- Browser(s): any browser\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any system\r\n","Url":"https://github.com/angular/components/issues/28715","RelatedDescription":"Open issue \"bug(form-field): floatLabel moves outside of it's container\" (#28715)"},{"Id":"2181262555","IsPullRequest":false,"CreatedAt":"2024-03-12T10:27:04","Actor":"ibrahimgabsi","Number":"28714","RawContent":null,"Title":"feat(bottom-sheet): Access container instance elementRef","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/material/bottom-sheet\r\n\r\n### Description\r\n\r\nConsider this service:\r\n```\r\n....\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyBottomSheetService {\r\n  private bottomSheet = inject(MatBottomSheet);\r\n\r\n  private bottomSheetRef?: MatBottomSheetRef;\r\n\r\n  open(templateRef: TemplateRef<unknown>): void {\r\n     this.bottomSheetRef = this.bottomSheet.open(templateRef);\r\n  }\r\n}\r\n```\r\n\r\nThis service opens bottom sheets with dynamic content using the given template.\r\nOnce it's opened, we want to access to mat bottom sheet container or its DOM content using the `bottomSheetRef` in order to execute a generic behavior based in the projected content.\r\n\r\n### Proposed solution\r\n\r\n```bottomSheetRef``` returned by the `open()` method gives access to `containerInstance` property.\r\n\r\nConvert `elementRef` of `containerInstance` from private to public property. \r\n\r\n### Alternatives considered\r\n\r\n_No alternatives considered..._","Url":"https://github.com/angular/components/issues/28714","RelatedDescription":"Open issue \"feat(bottom-sheet): Access container instance elementRef\" (#28714)"},{"Id":"2180643303","IsPullRequest":false,"CreatedAt":"2024-03-12T03:22:57","Actor":"honibis","Number":"28712","RawContent":null,"Title":"bug(mat-calendar): Next&Prev Buttons does not fire monthSelected event","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nNext&Prev buttons changes month of calendar yet does not fire any event back to us.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\n It should fire monthSelected event as it happens when month is selected from year view.\n\n### Actual Behavior\n\nNo event fired on next&prev button clicks\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28712","RelatedDescription":"Open issue \"bug(mat-calendar): Next&Prev Buttons does not fire monthSelected event\" (#28712)"},{"Id":"2180440676","IsPullRequest":false,"CreatedAt":"2024-03-11T23:32:57","Actor":"keatkeat87","Number":"28710","RawContent":null,"Title":"feat(ListKeyManager): Support Signal-based Query","State":"open","Body":"### Feature Description\r\n\r\n![image](https://github.com/angular/components/assets/8691013/079f234f-3721-4789-bb17-9e52b5a6e30e)\r\n\r\nSignal-based query doesn't return QueryList anymore, it only returns readonly Array.\r\nso ListKeyManager should support it.\r\n\r\nand another thing\r\n![image](https://github.com/angular/components/assets/8691013/ba23925c-cc98-42b4-aee9-37ed3f0b0875)\r\nwe should have a way to watch Signal like previously watching QueryList.\r\n\r\nWorkaround:\r\nif array will not changes, we can just cast to not readonly\r\n\r\n`const keyManager = new ListKeyManager(this.items() as FocusableOptionDerective[]);`\r\n\r\nif we need watch the array, we can access private QueryList from Signal.\r\n```\r\nconst signalNode = this.items[SIGNAL] as { _queryList: QueryList<FocusableOptionDerective> };\r\nconst keyManager = new ListKeyManager(signalNode._queryList);\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28710","RelatedDescription":"Open issue \"feat(ListKeyManager): Support Signal-based Query\" (#28710)"},{"Id":"2179832304","IsPullRequest":false,"CreatedAt":"2024-03-11T17:59:10","Actor":"wildcardalice","Number":"28709","RawContent":null,"Title":"bug(MatSelect): MatSelect in a CdkOverlay panel is not accessible to screen readers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing a screenreader to interact with a MatSelect dropdown inside an overlay panel prevents it from reading out the options\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/bqqfav-gaxbdf\r\nSteps to reproduce:\r\n1. Active VoiceOver or other screen reader\r\n2. Using a keyboard, click on the 'Launch dialog' button\r\n3. Using a keyboard, navigate to the select and attempt to read the options\r\n\r\n<img width=\"448\" alt=\"image\" src=\"https://github.com/angular/components/assets/81990996/5b607de6-5828-42ba-882b-9238a30885c2\">\r\n\r\n\r\n\n\n### Expected Behavior\n\nVoiceOver should read out the options, much like it does when interacting with the examples at https://material.angular.io/components/select/examples\r\n\r\n\n\n### Actual Behavior\n\nVoiceOver does not read out the options. It only reads \"expanded, completion selected\". Pressing ctrl+option+space causes it to read \"confirm Favorite pet, list box pop-up, Menu popup combobox\".\n\n### Environment\n\n- Angular: 17.2.0\r\n- Browser(s): Google Chrome\r\n- Operating System: macOS\r\n- Screen reader: VoiceOver\r\n","Url":"https://github.com/angular/components/issues/28709","RelatedDescription":"Open issue \"bug(MatSelect): MatSelect in a CdkOverlay panel is not accessible to screen readers\" (#28709)"},{"Id":"2177744838","IsPullRequest":true,"CreatedAt":"2024-03-11T16:56:46","Actor":"crisbeto","Number":"28707","RawContent":null,"Title":"fix(material/core): theming validation for m2 themes firing incorrectly","State":"closed","Body":"Fixes that theming validation for M2 themes was firing incorrectly, because the validation code was going through the `get-color-config`, `get-density-config` and `get-typography-config` functions which in turn were reading the internalized version of the theme where all the values were the same. Since Sass maps are immutable, they were being compared based on their values and always considered as the same theme.","Url":"https://github.com/angular/components/pull/28707","RelatedDescription":"Closed or merged PR \"fix(material/core): theming validation for m2 themes firing incorrectly\" (#28707)"},{"Id":"2177147642","IsPullRequest":true,"CreatedAt":"2024-03-11T15:58:12","Actor":"crisbeto","Number":"28705","RawContent":null,"Title":"docs: remove current work from readme","State":"closed","Body":"The \"What we're working on\" section is more than a year out of date and historically we've kept forgetting to update it. These changes remove it for now.","Url":"https://github.com/angular/components/pull/28705","RelatedDescription":"Closed or merged PR \"docs: remove current work from readme\" (#28705)"},{"Id":"2176911499","IsPullRequest":true,"CreatedAt":"2024-03-11T15:52:27","Actor":"wagnermaciel","Number":"28704","RawContent":null,"Title":"fix(material/slider): fix animation issue","State":"closed","Body":"* the slider track animation would break in the case where a user clicks one thumb, tabs to the other, then uses an arrow key to change value.\r\n* for some reason, this bug only happens when the slider is not discrete.","Url":"https://github.com/angular/components/pull/28704","RelatedDescription":"Closed or merged PR \"fix(material/slider): fix animation issue\" (#28704)"},{"Id":"2174862819","IsPullRequest":true,"CreatedAt":"2024-03-11T15:44:49","Actor":"atscott","Number":"28701","RawContent":null,"Title":"refactor(cdk/a11y): only call currentResolve if defined","State":"closed","Body":"Should it be possible for it to be undefined within the timeout body? No. But ZoneJS and test environments do weird things so it's better to be safe.","Url":"https://github.com/angular/components/pull/28701","RelatedDescription":"Closed or merged PR \"refactor(cdk/a11y): only call currentResolve if defined\" (#28701)"},{"Id":"2174708209","IsPullRequest":true,"CreatedAt":"2024-03-08T20:48:38","Actor":"mmalerba","Number":"28700","RawContent":null,"Title":"build: bump angular deps to include angular/angular#54774","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28700","RelatedDescription":"Closed or merged PR \"build: bump angular deps to include angular/angular#54774\" (#28700)"},{"Id":"2176677304","IsPullRequest":false,"CreatedAt":"2024-03-08T19:51:25","Actor":"dylandrendel","Number":"28703","RawContent":null,"Title":"bug(MaterialLuxonAdapter): Parsing format for some text inputs fails due to iso check before format check","State":"open","Body":"### Is this a regression?\r\n\r\n- No\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nN/A\r\n\r\n### Description\r\n\r\nIn `/src/material-luxon-adapter/adapter/luxon-date-adapter.ts#L174` the date is formatted with ISO before the user provided formats.\r\n\r\nThis leads to a bug where specific text inputs are not parsing correctly according to the user provided formats.\r\n\r\nFor example, I provide the format `MMyyyy` to the parse dateInputs array. This gets ignored for certain string inputs. One example is `082001`. This gets parsed as `yyyyMM` by the ISO check before checking my provided formats array and returns incorrectly as `01/0820` instead of the desired `08/2001`.\r\n\r\n```\r\nparse(value: any, parseFormat: string | string[]): LuxonDateTime | null {\r\n    const iso8601Date = LuxonDateTime.fromISO(value, options);\r\n    \r\n    if (this.isValid(iso8601Date)) {\r\n      return iso8601Date;\r\n    }\r\n    \r\n    const formats = Array.isArray(parseFormat) ? parseFormat : [parseFormat];\r\n    \r\n    if (!parseFormat.length) {\r\n      throw Error('Formats array must not be empty.');\r\n    }\r\n    \r\n    for (const format of formats) {\r\n      const fromFormat = LuxonDateTime.fromFormat(value, format, options);\r\n    \r\n      if (this.isValid(fromFormat)) {\r\n        return fromFormat;\r\n      }\r\n    }\r\n\r\n...\r\n```\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/ocbei5?file=package.json\r\nSteps to reproduce:\r\n1.  provide the format `MMyyyy` to the parse dateInputs array\r\n2. type 082001 into the date input with luxon date times and tab off to enter\r\n\r\n\r\n### Expected Behavior\r\n\r\nGets parsed correctly as 08/2001 and displays as 08/2001.\r\n\r\n### Actual Behavior\r\n\r\nGets parsed incorrectly by ISO check as 01/0820 and displays as 01/0820.\r\n\r\n### Environment\r\n\r\n- Angular: 16.0.4\r\n- CDK/Material:\r\n  - \"@angular/material\": \"^16.0.3\",\r\n  - \"@angular/material-luxon-adapter\": \"^16.2.4\",\r\n- Browser(s): Chrome\r\n- Operating System: macOS\r\n","Url":"https://github.com/angular/components/issues/28703","RelatedDescription":"Open issue \"bug(MaterialLuxonAdapter): Parsing format for some text inputs fails due to iso check before format check\" (#28703)"},{"Id":"2172318358","IsPullRequest":false,"CreatedAt":"2024-03-08T19:00:09","Actor":"wildcardalice","Number":"28694","RawContent":null,"Title":"bug(MatSelect): MatSelect does not read out options to VoiceOver when using keyboard navigation","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using a screenreader to interact with a select-based form field, the options are not always read out. I notice that focus remains on the mat-select itself when you use the keyboard to activate it (see https://i.imgur.com/MwKPWxW.png). I would expect this focus to be on the options panel instead.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Navigate to https://v5.material.angular.io/components/select/examples \r\n2. Use the keyboard to navigate to an example dropdown, such as the \"Select with form field features\"\r\n3. Activate the dropdown using the keyboard, and attempt to get a readout of the options\r\n\r\n### Expected Behavior\r\n\r\nThe screenreader should read out all options, or provide a way to read all options\r\n\r\n### Actual Behavior\r\n\r\nI am unable to get the screen reader to read out dog, cat, cow, or fox. The only option I can read out is the first option (\"In text -- not selected\") by using ctrl+opt+shift+down, but continued navigation does not shift focus or read additional options.\r\n\r\n### Environment\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n- Screen Reader: VoiceOver \r\n","Url":"https://github.com/angular/components/issues/28694","RelatedDescription":"Closed issue \"bug(MatSelect): MatSelect does not read out options to VoiceOver when using keyboard navigation\" (#28694)"},{"Id":"2172306648","IsPullRequest":false,"CreatedAt":"2024-03-08T18:00:18","Actor":"zeshan-tech","Number":"28693","RawContent":null,"Title":"Google cloud style sidebar","State":"closed","Body":"### Feature Description\r\nI haven't found any component that is like google cloud sidenav menu. Is there any plan about this.\r\n\r\n\r\n![Uploading Screenshot 2024-03-07 at 12.51.04 AM.png…]()\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28693","RelatedDescription":"Closed issue \"Google cloud style sidebar\" (#28693)"},{"Id":"2176305936","IsPullRequest":false,"CreatedAt":"2024-03-08T15:57:42","Actor":"97571522","Number":"28702","RawContent":null,"Title":"does not include a component for selecting year, month, day, hour, minute, and second.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?\n\n### Proposed solution\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?\n\n### Alternatives considered\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?","Url":"https://github.com/angular/components/issues/28702","RelatedDescription":"Closed issue \"does not include a component for selecting year, month, day, hour, minute, and second.\" (#28702)"},{"Id":"2174142964","IsPullRequest":false,"CreatedAt":"2024-03-07T15:33:50","Actor":"jsoref","Number":"28698","RawContent":null,"Title":"feat(themes): Document/Improve identifying first duplicated definition","State":"open","Body":"### Feature Description\n\nhttps://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md talks about duplicate theming styles, and it's referenced by the build system...\r\n\r\nThat's great, except it only tells users about the _second_ instance of a definition.\r\n\r\nIf at all possible, it'd be great if there was either tooling or documentation to help users find the _first_ instance of a definition\n\n### Use Case\n\nWe had some buggy theming code of the form:\r\n\r\n`style.scss`:\r\n```scss\r\n@import \"themes\";\r\n@import \"extra-themes\";\r\n```\r\n\r\n`themes.scss`:\r\n```scss\r\n@use '@angular/material' as mat;\r\n@import \"extra-themes\";\r\n\r\n$light-theme: mat.define-light-theme((color: ...));\r\n$dark-theme: mat.define-dark-theme((color: ...));\r\n\r\n@include mat.all-component-themes($light-theme);\r\n\r\n.dark-theme {\r\n  // This mixin only generates the color styles now.\r\n  @include mat.all-component-colors($dark-theme);\r\n}\r\n```\r\n\r\n`extra-themes.scss`\r\n```scss\r\n@use \"@angular/material\" as mat;\r\n@import \"themes\";\r\n\r\n@mixin extra-themes($theme) {\r\n   ...\r\n}\r\n\r\n@include extra-themes($light-theme);\r\n\r\n.dark-theme {\r\n  @include extra-colors($dark-theme);\r\n}\r\n```\r\n\r\nUnfortunately, all of the output about duplication appeared like this:\r\n\r\n```css\r\nnode_modules/@angular/material/core/theming/_theming.scss 352:7          private-check-duplicate-theme-styles()\r\nnode_modules/@angular/material/legacy-core/theming/_all-theme.scss 43:3  all-legacy-component-themes()\r\nnode_modules/@angular/material/legacy-core/color/_all-color.scss 17:3    all-legacy-component-colors()\r\n```","Url":"https://github.com/angular/components/issues/28698","RelatedDescription":"Open issue \"feat(themes): Document/Improve identifying first duplicated definition\" (#28698)"},{"Id":"2172804576","IsPullRequest":false,"CreatedAt":"2024-03-07T08:10:59","Actor":"mattiLeBlanc","Number":"28697","RawContent":null,"Title":"youtube-player: initial image to improve load performance is not loading and we she broken video image","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nhttps://github.com/angular/components/pull/28207\n\n### Description\n\n<img width=\"1726\" alt=\"image\" src=\"https://github.com/angular/components/assets/5285035/c5aae0e5-ea40-4544-877a-cc10994b429c\">\r\n\r\nIn the feature requests (https://github.com/angular/components/pull/28207) an image with a loading button was put in front of the youtube iframe to improve loading speed.\r\nHowever, we have more and more video's  displaying a loading error on that background image.\r\nThe youtube video reference is XKdBeRE5E9A and when you embed the iframe directly, it shows a correct image.\r\nI am not sure why this image is loaded https://i.ytimg.com/vi_webp/XKdBeRE5E9A/sddefault.webp 404 (Not Found) since it doesn't seem to exist.\n\n### Reproduction\n\nStackBlitz link: \r\nAdd angular youtube player:\r\n```\r\n<youtube-player videoId=\"XKdBeRE5E9A\" ></youtube-player>\r\n```\n\n### Expected Behavior\n\nIf image can not be retrieved, do not show this broken video image but maybe just load the youtube iframe?\n\n### Actual Behavior\n\nWhen failing to get the cover image, it shows a broken video image with play button. This is not pretty behaviour.\n\n### Environment\n\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs latest\r\n","Url":"https://github.com/angular/components/issues/28697","RelatedDescription":"Closed issue \"youtube-player: initial image to improve load performance is not loading and we she broken video image\" (#28697)"},{"Id":"2172349053","IsPullRequest":true,"CreatedAt":"2024-03-06T20:18:52","Actor":"amysorto","Number":"28696","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.4.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.3.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/28696","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.4.0-next.0\".\" (#28696)"},{"Id":"2172341262","IsPullRequest":true,"CreatedAt":"2024-03-06T20:13:57","Actor":"amysorto","Number":"28695","RawContent":null,"Title":"Bump version to \"v17.3.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28695","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-rc.0\" with changelog.\" (#28695)"},{"Id":"2172190482","IsPullRequest":true,"CreatedAt":"2024-03-06T18:49:07","Actor":"amysorto","Number":"28692","RawContent":null,"Title":"docs: release notes for the v17.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28692","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.2 release\" (#28692)"},{"Id":"2172186328","IsPullRequest":true,"CreatedAt":"2024-03-06T18:44:26","Actor":"amysorto","Number":"28691","RawContent":null,"Title":"Bump version to \"v17.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28691","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.2\" with changelog.\" (#28691)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-14T03:30:02.0520369Z","RunDurationInMilliseconds":1323}