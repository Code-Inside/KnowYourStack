{"Data":{"Angular-Issues":{"Issues":[{"Id":"1529913062","IsPullRequest":true,"CreatedAt":"2023-01-12T00:36:12","Actor":"atscott","Number":"48709","RawContent":null,"Title":"feat(router): helper functions to convert class guards to functional","State":"open","Body":"This commit introduces helper functions to easily convert `Injectable`s with functions compatible with `Route` guards to the corresponding guard functions. These functions will serve to aid in migrating off of the now deprecated class-based guards, but also provide an easy avenue to still defining guards as `Injectable` classes if that is desired.\r\n\r\nReviewer notes: Open to bikeshedding the API here. We could just have separate functions for each type of guard. I thought grouping them would help in discovery but maybe it's more confusing than the alternative.","Url":"https://github.com/angular/angular/pull/48709","RelatedDescription":"Open PR \"feat(router): helper functions to convert class guards to functional\" (#48709)"},{"Id":"1529333643","IsPullRequest":true,"CreatedAt":"2023-01-11T23:00:26","Actor":"angular-robot","Number":"48704","RawContent":null,"Title":"docs: update Angular CLI help","State":"closed","Body":"Updated Angular CLI help contents.\n\nCloses #48701","Url":"https://github.com/angular/angular/pull/48704","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help\" (#48704)"},{"Id":"1529835195","IsPullRequest":true,"CreatedAt":"2023-01-11T23:00:14","Actor":"angular-robot","Number":"48708","RawContent":null,"Title":"docs: update Angular CLI help","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/48708","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help\" (#48708)"},{"Id":"1529332615","IsPullRequest":true,"CreatedAt":"2023-01-11T22:59:51","Actor":"angular-robot","Number":"48703","RawContent":null,"Title":"docs: update Angular CLI help","State":"closed","Body":"Updated Angular CLI help contents.\n\nCloses #48700","Url":"https://github.com/angular/angular/pull/48703","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help\" (#48703)"},{"Id":"1527849771","IsPullRequest":true,"CreatedAt":"2023-01-11T22:59:09","Actor":"atscott","Number":"48684","RawContent":null,"Title":"docs: Add heading to the router writable properties deprecation","State":"closed","Body":"The deprecation note is missing a header. This commit adds one.\r\n","Url":"https://github.com/angular/angular/pull/48684","RelatedDescription":"Closed or merged PR \"docs: Add heading to the router writable properties deprecation\" (#48684)"},{"Id":"1527828554","IsPullRequest":true,"CreatedAt":"2023-01-11T22:58:41","Actor":"mgechev","Number":"48683","RawContent":null,"Title":"docs: add angular devsat q1 2023","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48683","RelatedDescription":"Closed or merged PR \"docs: add angular devsat q1 2023\" (#48683)"},{"Id":"1529817450","IsPullRequest":true,"CreatedAt":"2023-01-11T22:40:59","Actor":"JeanMeche","Number":"48707","RawContent":null,"Title":"refactor(service-worker): removing some todos","State":"open","Body":"Removing some outdated/unnecessary todos.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)","Url":"https://github.com/angular/angular/pull/48707","RelatedDescription":"Open PR \"refactor(service-worker): removing some todos\" (#48707)"},{"Id":"1529812512","IsPullRequest":false,"CreatedAt":"2023-01-11T22:35:21","Actor":"platon-rov","Number":"48706","RawContent":null,"Title":"Standalone directive's input should be aliased when input named \"simultaneously\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n```ts\r\n@Directive({\r\n  selector: '[standalone]',\r\n  standalone: true,\r\n})\r\nexport class StandaloneDirective {\r\n  @Input()\r\n  set standalone(value: any) {\r\n    // ...\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[app-child]',\r\n  hostDirectives: [\r\n    {\r\n      directive: StandaloneDirective,\r\n      inputs: ['standalone: alias']\r\n      /*\r\n        Work:\r\n        <div app-child alias=\"...\r\n\r\n        Don't work, Error: NG0309\r\n        <div app-child standalone=\"...\r\n      */\r\n    },\r\n  ],\r\n})\r\nexport class ChildDirective {}\r\n```\r\n\r\nThis makes it impossible to have a single api when there is a single implementation. If both (standalone directive and component where it's provided) exposed, it adds misunderstanding where and which (alias or real name) should be used.\r\n\r\nLooks like in this case when the directive is already applied in code we can skip second applying and just pass the input value.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-cumnea?file=src/app/app.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: NG0309: Directive ... matches multiple times on the same element. Directives can only match an element once.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nStackBlitz Angular 15.0.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48706","RelatedDescription":"Open issue \"Standalone directive's input should be aliased when input named \"simultaneously\"\" (#48706)"},{"Id":"1529727790","IsPullRequest":true,"CreatedAt":"2023-01-11T21:32:38","Actor":"JeanMeche","Number":"48705","RawContent":null,"Title":"fix(animations): Trigger leave animation when ViewContainerRef is injected","State":"open","Body":"Injecting ViewContainerRef into a component makes it effectively a container. The leave animation was triggered on container\r\n    \r\nfixes #48667\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48705","RelatedDescription":"Open PR \"fix(animations): Trigger leave animation when ViewContainerRef is injected\" (#48705)"},{"Id":"1529290685","IsPullRequest":true,"CreatedAt":"2023-01-11T16:24:50","Actor":"angular-robot","Number":"48701","RawContent":null,"Title":"docs: update Angular CLI help","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/48701","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help\" (#48701)"},{"Id":"1529290296","IsPullRequest":true,"CreatedAt":"2023-01-11T16:24:07","Actor":"angular-robot","Number":"48700","RawContent":null,"Title":"docs: update Angular CLI help","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/48700","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help\" (#48700)"},{"Id":"1529306677","IsPullRequest":false,"CreatedAt":"2023-01-11T16:06:18","Actor":"DoomDesign","Number":"48702","RawContent":null,"Title":"SwPush.subscription & SwPush.requestSubscription not emitting after hard reload","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI discovered this problem on Angular 13, but it also appeared on v14 and v15.\r\n\r\nWe've implemented Push Notifications with SwPush.\r\nOn initialization of a component, I want to subscribe to SwPush.subscription (the Observable) to get the current subscription (or null, if there is none).\r\nEqually, I want to call SwPush.requestSubscription (the Promise) when I finally want to ask the user for permission.\r\n\r\nBoth of these methods are NOT emitting any value (or resolving, for the Promise) when I hard reload the application (STRG+F5). They don't throw any error, they just stay silent and never complete.\r\n\r\nWhen I soft-reload the application (regular refreshing the page), only THEN these methods work and will emit corresponding values.\r\n\r\n**Expected behaviour:**\r\nEmit values when subscribing to the .subscription Observable or when using the requestSubscription() Promise, or throw an error if there is something wrong / if it fails.\r\n\r\n**Current behaviour:**\r\nNothing is ever emitted, no errors are thrown, the user will be waiting forever.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.0\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.5\r\nOS: win32 x64\r\n\r\nAngular: 15.1.0\r\n... animations, cli, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, localize\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.0\r\n@angular-devkit/build-angular   15.1.0\r\n@angular-devkit/core            15.1.0\r\n@angular-devkit/schematics      15.1.0\r\n@angular/cdk                    14.2.7\r\n@schematics/angular             9.1.15\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4\r\nwebpack                         4.46.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48702","RelatedDescription":"Open issue \"SwPush.subscription & SwPush.requestSubscription not emitting after hard reload\" (#48702)"},{"Id":"1529280403","IsPullRequest":true,"CreatedAt":"2023-01-11T16:05:22","Actor":"alxhub","Number":"48699","RawContent":null,"Title":"Bump version to \"v15.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48699","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.0\" with changelog.\" (#48699)"},{"Id":"1529172809","IsPullRequest":true,"CreatedAt":"2023-01-11T16:03:22","Actor":"JeanMeche","Number":"48696","RawContent":null,"Title":"feat(common): Add support for trackByKey to ngFor ","State":"closed","Body":"With trackByKey it is possible trackBy without passing a specific callback function. This way, for the basic cases, there is no need anymore to define a `trackBy` function in the component. \r\n\r\nSee #48503\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/48696","RelatedDescription":"Closed or merged PR \"feat(common): Add support for trackByKey to ngFor \" (#48696)"},{"Id":"1529263019","IsPullRequest":true,"CreatedAt":"2023-01-11T15:44:08","Actor":"alan-agius4","Number":"48698","RawContent":null,"Title":"ci: set `fetch-depth: 0` in `update-events` and `update-cli-help` actions","State":"closed","Body":"\r\nThis commits changes the fetch depth from 1 to 0 in the update-events` and `update-cli-help` actions. This is required as otherwise the PR creation would fail when the forked (https://github.com/angular-robot/angular) is not in sync with (https://github.com/angular/angular) ie the later has commits which are not in the former.\r\n","Url":"https://github.com/angular/angular/pull/48698","RelatedDescription":"Closed or merged PR \"ci: set `fetch-depth: 0` in `update-events` and `update-cli-help` actions\" (#48698)"},{"Id":"1529249239","IsPullRequest":false,"CreatedAt":"2023-01-11T15:26:45","Actor":"dasco144","Number":"48697","RawContent":null,"Title":"CLDR version is out of date","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon\n\n### Description\n\nAccording to this [line](https://github.com/angular/angular/blob/main/WORKSPACE#L178), CLDR v41 is currently used to generate the locales in the `@angular/common` package.\r\n\r\nv42 of CLDR was released on 2022-10-19 [here](https://cldr.unicode.org/index/downloads/cldr-42) and includes some changes to currency formatting, including a new, preferred, `alphaNextToNumber` format.\r\n\r\nPlease see additional links [here](https://unicode-org.github.io/cldr/ldml/tr35-numbers.html) and [here](https://cldr.unicode.org/index/downloads/cldr-42)\r\n\n\n### Proposed solution\n\nUpdate CLDR to version 42, and implement changes to allow formatting based on `alphaNextToNumber` formats\n\n### Alternatives considered\n\nUse CLDR version 41, and keep formatting as is.","Url":"https://github.com/angular/angular/issues/48697","RelatedDescription":"Open issue \"CLDR version is out of date\" (#48697)"},{"Id":"1528585407","IsPullRequest":true,"CreatedAt":"2023-01-11T14:56:49","Actor":"alan-agius4","Number":"48690","RawContent":null,"Title":"ci: correctly interpolate `ANGULAR_CLI_BUILDS_READONLY_GITHUB_TOKEN`","State":"closed","Body":"Previously, a single curly bracket was used to interpolate the `ANGULAR_CLI_BUILDS_READONLY_GITHUB_TOKEN` value which caused the value not to be provided correctly.\r\n","Url":"https://github.com/angular/angular/pull/48690","RelatedDescription":"Closed or merged PR \"ci: correctly interpolate `ANGULAR_CLI_BUILDS_READONLY_GITHUB_TOKEN`\" (#48690)"},{"Id":"1529126550","IsPullRequest":false,"CreatedAt":"2023-01-11T14:17:07","Actor":"janopae","Number":"48695","RawContent":null,"Title":"Allow functions to be injected as dependencies","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n`@angular/core`\r\n\r\n### Description\r\n\r\nSometimes, injecting a class instance is a bit of an overkill. Consider the following example:\r\n\r\nA component should create a booking and add a timestamp to that booking. In order to create the timestamp, you need the current time. In order to stay testable, you don't want to directly use the `new Date()` constructor (which would introduce race conditions in tests), but rather inject a function that returns the current timestamp, which can be replaced with a mock in tests.\r\n\r\n\r\n### Proposed solution\r\n\r\nAccording to the [this stack overflow answer](https://stackoverflow.com/a/45742104) from 2017, it should be possible to use the `@Injectable()` decorator with a function, and reference a variable containing that function in the `Inject()` decorator:\r\n\r\n```ts\r\nexport const defaultCurrentTimeStampProvider = Injectable()(function defaultCurrentTimeStampProvider(): Date {\r\n    return new Date();\r\n});\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  ...\r\n})\r\nexport class AppComponent {   \r\n  constructor(@Inject(defaultCurrentTimeStampProvider) getCurrentTimeStamp: () => Date) { }\r\n}\r\n\r\ndescribe('AppComponent', () => {\r\n  it('should mock currrent time', () => {\r\n    const fixedTimeStampForTesting = new Date();\r\n    const component = new AppComponent(() => fixedTimeStampForTesting);\r\n\r\n    expect(component.doSomethingThatReturnsTimestamp()).toEqual(fixedTimeStampForTesting);\r\n  })\r\n});\r\n```\r\n\r\nBut the `TypeDecorator` interface requires the decorated type to be an `Object`, so TypeScript won't compile this.\r\n\r\nMaybe, supporting this is just a matter of changing the type declarations?\r\n\r\n### Alternatives considered\r\n\r\nThe alternative I'm currently using is creating a full-blown class with a method that returns the current time:\r\n\r\n```ts\r\n\r\ninterface CurrentTimeProvider {\r\n  getCurrentTime(): Date;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nclass DefaultCurrentTimeProvider implements CurrentTimeProvider{\r\n  getCurrentTime() {\r\n    return new Date();\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  ...\r\n})\r\nexport class AppComponent {   \r\n  constructor(@Inject(DefaultCurrentTimeProvider) timeStampProvider: CurrentTimeProvider) { }\r\n}\r\n\r\ndescribe('AppComponent', () => {\r\n  it('should mock currrent time', () => {\r\n    const fixedTimeStampForTesting = new Date();\r\n    const component = new AppComponent({\r\n      getCurrenTime() { return fixedTimeStampForTesting;}\r\n    });\r\n\r\n    expect(component.doSomethingThatReturnsTimestamp()).toEqual(fixedTimeStampForTesting);\r\n  })\r\n});\r\n\r\n```\r\n\r\nBut this is a bit bloated, not as easy to read, and not as nice, is it?","Url":"https://github.com/angular/angular/issues/48695","RelatedDescription":"Closed issue \"Allow functions to be injected as dependencies\" (#48695)"},{"Id":"1528645851","IsPullRequest":false,"CreatedAt":"2023-01-11T13:07:43","Actor":"jiangyh1024","Number":"48692","RawContent":null,"Title":"Angular15 - withInterceptor()","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nwithInterceptor requires a function, but the thing is I wanna use some functions in a service.\r\n\r\nI am not sure how to inject the service into the function \r\n\r\nexport const myInterceptor = (\r\n    req: HttpRequest<unknown>,\r\n     next: HttpHandlerFn\r\n  ): Observable<HttpEvent<unknown>>  => {}\n\n### Proposed solution\n\ndeps? LIKE\r\n\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [ConfigService],\r\n      multi: true,\r\n    },\n\n### Alternatives considered\n\nuse class-based interceptor  & withInterceptorFromDI()\r\n<img width=\"711\" alt=\"image\" src=\"https://user-images.githubusercontent.com/34930870/211758946-312fe003-170e-4958-9f9b-7bd596548f2c.png\">\r\n\r\n<img width=\"798\" alt=\"image\" src=\"https://user-images.githubusercontent.com/34930870/211758987-a6a33c01-4da7-4412-80a1-42e827441347.png\">\r\n\r\nBut there is description on withInterceptorFromDI method saying that withInterceptor is the recommended one \r\n","Url":"https://github.com/angular/angular/issues/48692","RelatedDescription":"Closed issue \"Angular15 - withInterceptor()\" (#48692)"},{"Id":"1528755660","IsPullRequest":false,"CreatedAt":"2023-01-11T10:40:26","Actor":"chandan-bcsg","Number":"48693","RawContent":null,"Title":"The problem occurs when I need to use the HttpClient within a unit test. Even using the HttpClientTestingModule, my tests can't find it and it ends up breaking in at least 200 tests out of the 6000 we have.","State":"closed","Body":"        The problem occurs when I need to use the HttpClient within a unit test. Even using the HttpClientTestingModule, my tests can't find it and it ends up breaking in at least 200 tests out of the 6000 we have.\r\n\r\nI'll put an example of how we are creating the test instance and the return in the terminal I added in the opening of the issue.\r\n\r\nExample:\r\n\r\n```typescript\r\n      TestBed.configureTestingModule({\r\n        imports: [PoModalModule, HttpClientTestingModule, PoDynamicModule, RouterTestingModule],\r\n        declarations: [PoLookupModalComponent],\r\n        providers: [LookupFilterService, PoComponentInjectorService],\r\n        schemas: [NO_ERRORS_SCHEMA]\r\n      }).compileComponents();\r\n```\r\n\r\n\r\nAnd when I run karma it gives me these errors here\r\n\r\n\r\n```bash\r\nNullInjectorError: R3InjectorError(DynamicTestModule)[ActivatedRoute -> ActivatedRoute]:\r\n          NullInjectorError: No provider for ActivatedRoute!\r\n        error properties: Object({ ngTempTokenPath: null, ngTokenPath: [ 'ActivatedRoute', 'ActivatedRoute' ] })\r\n        NullInjectorError: R3InjectorError(DynamicTestModule)[ActivatedRoute -> ActivatedRoute]:\r\n          NullInjectorError: No provider for ActivatedRoute!\r\n\r\n============================== AND ==============================\r\n\r\nNullInjectorError: R3InjectorError(DynamicTestModule)[HttpClient -> HttpClient]:\r\n          NullInjectorError: No provider for HttpClient!\r\n        error properties: Object({ ngTempTokenPath: null, ngTokenPath: [ 'HttpClient', 'HttpClient' ] })\r\n        NullInjectorError: R3InjectorError(DynamicTestModule)[HttpClient -> HttpClient]:\r\n          NullInjectorError: No provider for HttpClient!\r\n```\r\n\r\n\r\nIt helps?\r\n\r\n_Originally posted by @brunoromeiro in https://github.com/angular/angular/issues/47291#issuecomment-1234567165_\r\n      ","Url":"https://github.com/angular/angular/issues/48693","RelatedDescription":"Closed issue \"The problem occurs when I need to use the HttpClient within a unit test. Even using the HttpClientTestingModule, my tests can't find it and it ends up breaking in at least 200 tests out of the 6000 we have.\" (#48693)"},{"Id":"1528589212","IsPullRequest":false,"CreatedAt":"2023-01-11T10:39:12","Actor":"meiwanmeiliaola","Number":"48691","RawContent":null,"Title":"angular路由复用策略使用一段时间,报错Error: Outlet is not activated,导致无法加载路由","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\n实现RouteReuseStrategy接口,使用一段时间,就会出现无法加载路由的错误\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI:13.2.5\r\nNode:14.19.0\n```\n\n\n### Anything else?\n\n![image](https://user-images.githubusercontent.com/45260347/211748739-eba8d0c3-9a1c-4efe-b3f2-4fabdabc7d9a.png)\r\n\r\n参考的代码链接:https://www.jianshu.com/p/3357e5e45b92","Url":"https://github.com/angular/angular/issues/48691","RelatedDescription":"Closed issue \"angular路由复用策略使用一段时间,报错Error: Outlet is not activated,导致无法加载路由\" (#48691)"},{"Id":"1528802508","IsPullRequest":true,"CreatedAt":"2023-01-11T10:36:29","Actor":"pkozlowski-opensource","Number":"48694","RawContent":null,"Title":"Exploration - DO NOT MERGE","State":"open","Body":"This is an exploratory commit, trying to find the set of conditions\r\nunder which we could add a warning asking people to add trackBy.\r\n\r\nKnown issues so far:\r\n- there are legitimate cases where we want to update entire collection","Url":"https://github.com/angular/angular/pull/48694","RelatedDescription":"Open PR \"Exploration - DO NOT MERGE\" (#48694)"},{"Id":"1527909251","IsPullRequest":true,"CreatedAt":"2023-01-10T22:30:40","Actor":"alan-agius4","Number":"48687","RawContent":null,"Title":"ci: expose ANGULAR_CLI_BUILDS_READONLY_GITHUB_TOKEN secret as env","State":"closed","Body":"\r\nEncrypted secrets need to be provided explicitly in workflow steps to be used.\r\n\r\nSee: https://docs.github.com/en/actions/security-guides/encrypted-secrets for more info.","Url":"https://github.com/angular/angular/pull/48687","RelatedDescription":"Closed or merged PR \"ci: expose ANGULAR_CLI_BUILDS_READONLY_GITHUB_TOKEN secret as env\" (#48687)"},{"Id":"1527922404","IsPullRequest":false,"CreatedAt":"2023-01-10T19:51:00","Actor":"eneajaho","Number":"48689","RawContent":null,"Title":"Auto import default exported component will break the imports","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlanguage-service\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen I try to auto import a component that is exported as default : \r\n\r\n```ts\r\nexport default class TestComponent {}\r\n```\r\n\r\nthe vscode plugin will import it as: \r\n\r\n```ts\r\nimport { default } from \"./test.component\";\r\n\r\n@Component({\r\n    template: `\r\n      <app-test />\r\n    `,\r\n    standalone: true,\r\n    imports: [default]\r\n})\r\nexport class AppComponent {}\r\n```\r\n\r\nThis will make the build fail. \r\n\r\n<img width=\"1030\" alt=\"build error\" src=\"https://user-images.githubusercontent.com/25394362/211648172-f1596455-5727-4cce-b77f-e5f516f1bd0b.png\">\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48689","RelatedDescription":"Open issue \"Auto import default exported component will break the imports\" (#48689)"},{"Id":"1527915752","IsPullRequest":true,"CreatedAt":"2023-01-10T19:45:29","Actor":"atscott","Number":"48688","RawContent":null,"Title":"refactor(router): Warn if a navigation will change in the upcoming v16 release","State":"open","Body":"v16 will have a breaking change to the way `UrlTree`s are constructed. This change is actually a bug fix that makes `UrlTree` creation correct in more scenarios (see #48508). However, this can affect applications that are relying on the current incorrect behavior. This commit adds a dev mode warning when the target of a navigation will change once #48508 is submitted.","Url":"https://github.com/angular/angular/pull/48688","RelatedDescription":"Open PR \"refactor(router): Warn if a navigation will change in the upcoming v16 release\" (#48688)"},{"Id":"1527709034","IsPullRequest":true,"CreatedAt":"2023-01-10T19:13:41","Actor":"devversion","Number":"48681","RawContent":null,"Title":"ci: use readonly github token for querying CLI snapshot repo","State":"closed","Body":"Currently the Github action-triggered code uses the `GITHUB_TOKEN` for querying the CLI snapshot\r\nbuilds repository. This does not work because the Github actions token is scoped to the originating\r\nrepository, even for queries to a read public repository.\r\n\r\nWe fix this by using a personal access token. The token is readonly and only exists to avoid\r\npotential rate limiting.\r\n\r\nNote: The token is created using an robot account that doesn't have any write permissions anyway.","Url":"https://github.com/angular/angular/pull/48681","RelatedDescription":"Closed or merged PR \"ci: use readonly github token for querying CLI snapshot repo\" (#48681)"},{"Id":"1527816353","IsPullRequest":true,"CreatedAt":"2023-01-10T19:11:52","Actor":"alan-agius4","Number":"48682","RawContent":null,"Title":"ci: add Angular CLI help pages action (#48577)","State":"closed","Body":"This commits adds an action to update the Angular CLI help contents that are used by AIO to generate CLI guides.\r\n\r\nThis also changes the setup to include the files are source files instead of having to clone the repository each time. This also simplifies the PR review process of the PR opened by the action.\r\n\r\nCherry-pick of  #48577\r\n\r\n(cherry picked from commit 2dc31576ab621f55d4fce5dbb46220f9f0d74349)\r\n","Url":"https://github.com/angular/angular/pull/48682","RelatedDescription":"Closed or merged PR \"ci: add Angular CLI help pages action (#48577)\" (#48682)"},{"Id":"1527856316","IsPullRequest":true,"CreatedAt":"2023-01-10T18:53:05","Actor":"alxhub","Number":"48686","RawContent":null,"Title":"docs: release notes for the v15.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/48686","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.0 release\" (#48686)"},{"Id":"1527851328","IsPullRequest":true,"CreatedAt":"2023-01-10T18:49:34","Actor":"alxhub","Number":"48685","RawContent":null,"Title":"Bump version to \"v15.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48685","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0\" with changelog.\" (#48685)"},{"Id":"1527672504","IsPullRequest":false,"CreatedAt":"2023-01-10T16:22:56","Actor":"jeandera","Number":"48680","RawContent":null,"Title":"Extract-i18n regression between angular 13 and 14 for some generated xliff messages","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli, language-service, localize\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThe extract-i18n command generates bad error source in the Xliff format in angular 14, but with same code it was OK with angular 13.\r\n\r\n\r\nHere is an exemple\r\n - For the following HTML CODE\r\n```\r\n<mat-error  i18n=\"@@ERROR_TCP_PORT\">\r\n           The TCP port is between\r\n            <strong>{{ PORTS_DEFAULT_VALUES.PORT_MIN }}</strong>\r\n            and <strong>{{ PORTS_DEFAULT_VALUES.PORT_MAX }}</strong>\r\n</mat-error> \r\n```\r\n\r\n\r\nIn angular 13, the extract-i18n command generates the following xliff entry wich was working well. We retrieve in the source the 2 interpolation values PORTS_DEFAULT_VALUES.PORT_MIN and PORTS_DEFAULT_VALUES.PORT_MAX\r\n\r\n\r\n```\r\n<trans-unit id=\"ERROR_TCP_PORT\" datatype=\"html\">\r\n        <source> The TCP port is between \r\n             <x id=\"START_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;strong&gt;\"/>\r\n             <x id=\"INTERPOLATION\" equiv-text=\"{{ PORTS_DEFAULT_VALUES.PORT_MIN }}\"/>\r\n              <x id=\"CLOSE_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;/strong&gt;\"/> and \r\n              <x id=\"START_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;strong&gt;\"/>\r\n              <x id=\"INTERPOLATION_1\" equiv-text=\"{{ PORTS_DEFAULT_VALUES.PORT_MAX }}\"/>\r\n              <x id=\"CLOSE_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;/strong&gt;\"/>\r\n     </source>\r\n     ...\r\n</trans-unit>\r\n```\r\n\r\nin angiular 14, the extract-i18n command generates the BAD following xliff entry. The 2 interpolation values are lost and replaced by strange values ES.PORT_MIN and ES.PORT_MAX\r\n\r\n```\r\n  <trans-unit id=\"ERROR_TCP_PORT\" datatype=\"html\">\r\n        <source> The TCP port is between\r\n                <x id=\"START_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;strong&gt;\"/>\r\n                <x id=\"INTERPOLATION\" equiv-text=\"ES.PORT_MIN }}\"/>\r\n                <x id=\"CLOSE_TAG_STRONG\" ctype=\"x-strong\"/> and \r\n               <x id=\"START_TAG_STRONG\" ctype=\"x-strong\" equiv-text=\"&lt;strong&gt;\"/>\r\n               <x id=\"INTERPOLATION_1\" equiv-text=\"ES.PORT_MAX }}\"/>\r\n              <x id=\"CLOSE_TAG_STRONG\" ctype=\"x-strong\"/>\r\n        </source>\r\n      ....\r\n      </trans-unit>\r\n```\r\n\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nBad RUN :\r\n\r\nAngular CLI: 14.2.10\r\nNode: 16.14.0\r\nPackage Manager: npm 8.13.2 \r\nOS: darwin x64\r\n\r\nAngular: 14.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    14.2.7\r\n@angular/cli                    14.2.10\r\n@angular/material               14.2.7\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n\r\n\r\n\r\nGOOD Run :\r\n\r\nAngular CLI: 13.3.8\r\nNode: 16.14.0\r\nPackage Manager: npm 8.13.2\r\nOS: darwin x64\r\n\r\nAngular: 13.3.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.8\r\n@angular-devkit/build-angular   13.3.8\r\n@angular-devkit/core            13.3.8\r\n@angular-devkit/schematics      13.3.8\r\n@angular/cdk                    13.3.9\r\n@angular/cli                    13.3.8\r\n@angular/material               13.3.9\r\n@schematics/angular             13.3.8\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48680","RelatedDescription":"Open issue \"Extract-i18n regression between angular 13 and 14 for some generated xliff messages\" (#48680)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1529750009","IsPullRequest":true,"CreatedAt":"2023-01-11T21:52:16","Actor":"dgp1130","Number":"24527","RawContent":null,"Title":"refactor: only collect Node version if it's a standard version string","State":"open","Body":"Any other kinds of Node version are collected as \"other\" to avoid pulling in an unbounded user input.\r\n\r\nIssue Number: http://b/264671793","Url":"https://github.com/angular/angular-cli/pull/24527","RelatedDescription":"Open PR \"refactor: only collect Node version if it's a standard version string\" (#24527)"},{"Id":"1529499602","IsPullRequest":false,"CreatedAt":"2023-01-11T18:34:55","Actor":"jnizet","Number":"24526","RawContent":null,"Title":"optimization error when switching from 15.0.5 to 15.1.0","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.5\n\n### Description\n\nWhen switching from version 15.0.5 to version 15.1.0 of the CLI, the ng build command fails with the following error:\r\n\r\n```\r\nError: Optimization error [main.4718ba8213dd7bf6.js]: SyntaxError: Unexpected token: punc (()\r\n```\r\n\n\n### Minimal Reproduction\n\nSee https://github.com/jnizet/decouvertes-nature/pull/521.\r\n\r\nTo reproduce locally:\r\n\r\n- clone the project\r\n- checkout to the branch `renovate/angular-cli-monorepo`\r\n- run `yarn`\r\n- run `ng build`\n\n### Exception or Error\n\n```text\nError: Optimization error [main.4718ba8213dd7bf6.js]: SyntaxError: Unexpected token: punc (()\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.0\r\nNode: 16.15.0\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin x64\r\n\r\nAngular: 15.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.0\r\n@angular-devkit/build-angular   15.1.0\r\n@angular-devkit/core            15.1.0\r\n@angular-devkit/schematics      15.1.0\r\n@angular/fire                   7.5.0\r\n@schematics/angular             15.1.0\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24526","RelatedDescription":"Open issue \"optimization error when switching from 15.0.5 to 15.1.0\" (#24526)"},{"Id":"1529422124","IsPullRequest":false,"CreatedAt":"2023-01-11T18:22:55","Actor":"ruizmarc","Number":"24523","RawContent":null,"Title":"Memory leak during build process after updating to Angular 15","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.8\r\n\r\n### Description\r\n\r\nHi,\r\n\r\nAfter upgrading from Angular 14 to Angular 15, our library project has dramatically increased the amount of RAM needed to build the project. It never surpassed 8GB of RAM on build time with Angular 14, but after upgrading to Angular 15.1, it needs up to 25GB of RAM... it doesn't seem like a normal change. Furthermore, it takes far more time. \r\n\r\n### Minimal Reproduction\r\n\r\nWe are executing: `ng build ng-ptp`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.1.0\r\nNode: 18.12.0\r\nPackage Manager: npm 8.19.2\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.0\r\n... animations, cli, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1501.0\r\n@angular-devkit/build-angular     15.1.0\r\n@angular-devkit/core              15.1.0\r\n@angular-devkit/schematics        15.1.0\r\n@angular/cdk                      15.0.4\r\n@angular/material                 15.0.4\r\n@angular/material-luxon-adapter   15.0.4\r\n@nguniversal/builders             15.0.0\r\n@nguniversal/express-engine       15.0.0\r\n@schematics/angular               15.1.0\r\nng-packagr                        15.1.0\r\nrxjs                              7.8.0\r\ntypescript                        4.9.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24523","RelatedDescription":"Closed issue \"Memory leak during build process after updating to Angular 15\" (#24523)"},{"Id":"1529467416","IsPullRequest":false,"CreatedAt":"2023-01-11T18:07:19","Actor":"simonchn160","Number":"24525","RawContent":null,"Title":"ng test --no-watch not exiting in Continuous Integration (Github Actions)","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI added a step in my Github Actions workflow to run my Angular tests using the command `ng test` when a push occurs. The tests run and pass successfully but it never exits/moves onto the next step in my workflow. I've tried passing in the `--no-watch` and `--watch=false` flags into the command but that didn't fix the issue. I also set `singleRun: true` in my karma.conf.js file, which didn't work as well.\r\n\r\nHere is my build-push.yml file:\r\n\r\n```\r\nname: Build PUSH only\r\non:\r\n  push\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    env:\r\n        SHA: ${{ github.sha }}\r\n        REPO: ${{ github.repository }}\r\n        BRANCH: ${{ github.ref_name }}\r\n    steps:\r\n    - name: Checkout the PR\r\n      uses: actions/checkout@v3\r\n    - name: Set up Node\r\n      uses: actions/setup-node@v3\r\n      with:\r\n        node-version: 16\r\n    - name: Install Azure CLI\r\n      run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash \r\n    - name: Install Angular CLI\r\n      run: npm install --location=global @angular/cli@14.0.0\r\n    - name: Install packages\r\n      run: npm install\r\n    - name: Build the UI\r\n      run: ng build -c production\r\n    - name: Run tests\r\n      run: ng test --no-watch --no-progress --watch=false --code-coverage --browsers=ChromeHeadlessCI\r\n```\r\n\r\nHere is my karma.conf.js file:\r\n\r\n```\r\nmodule.exports = function (config)\r\n{\r\n    config.set({\r\n        basePath           : '',\r\n        frameworks         : ['jasmine', '@angular-devkit/build-angular'],\r\n        plugins            : [\r\n            require('karma-jasmine'),\r\n            require('karma-chrome-launcher'),\r\n            require('karma-jasmine-html-reporter'),\r\n            require('karma-coverage'),\r\n            require('@angular-devkit/build-angular/plugins/karma')\r\n        ],\r\n        client             : {\r\n            jasmine     : {\r\n                // you can add configuration options for Jasmine here\r\n                // the possible options are listed at https://jasmine.github.io/api/edge/Configuration.html\r\n                // for example, you can disable the random execution with `random: false`\r\n                // or set a specific seed with `seed: 4321`\r\n            },\r\n            clearContext: false // leave Jasmine Spec Runner output visible in browser\r\n        },\r\n        jasmineHtmlReporter: {\r\n            suppressAll: true // removes the duplicated traces\r\n        },\r\n        coverageReporter   : {\r\n            dir      : require('path').join(__dirname, './coverage/fuse'),\r\n            subdir   : '.',\r\n            reporters: [\r\n                {type: 'html'},\r\n                {type: 'text-summary'}\r\n            ]\r\n        },\r\n        reporters          : ['progress', 'kjhtml'],\r\n        port               : 9876,\r\n        colors             : true,\r\n        logLevel           : config.LOG_INFO,\r\n        autoWatch          : true,\r\n        browsers           : ['ChromeHeadlessCI'],\r\n        customLaunchers: {\r\n            ChromeHeadlessCI: {\r\n                base: 'ChromeHeadless',\r\n                flags: ['--no-sandbox']\r\n            }\r\n        },\r\n        singleRun          : true,\r\n        restartOnFileChange: true,\r\n        // Gives access to RohanSettings for tests\r\n        files: [\r\n            'scripts/for-docker/settings-template.js'\r\n        ]\r\n    });\r\n};\r\n```\r\n\r\n\r\nBeen stuck on this issue for several days with no luck. Any help is greatly appreciated!\r\n\r\n### Minimal Reproduction\r\n\r\nRunning the command `ng test` works locally but when I make a push and the workflow is run, it never exits the tests.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\nAngular CLI: 14.0.0\r\nNode: 16.15.1\r\nPackage Manager: npm 8.11.0 \r\nOS: darwin arm64\r\n\r\nAngular: 13.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1303.9\r\n@angular-devkit/build-angular      13.3.9\r\n@angular-devkit/core               13.3.9\r\n@angular-devkit/schematics         14.0.0\r\n@angular/cdk                       13.0.0\r\n@angular/cli                       14.0.0\r\n@angular/material                  13.0.0\r\n@angular/material-moment-adapter   13.0.0\r\n@schematics/angular                14.0.0\r\ntypescript                         4.4.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nHere's a link to the gist I created which contains the logs displayed from the workflow: \r\nhttps://gist.github.com/simonchn160/91aac08635daf873bfb1bc276d2a9a12","Url":"https://github.com/angular/angular-cli/issues/24525","RelatedDescription":"Open issue \"ng test --no-watch not exiting in Continuous Integration (Github Actions)\" (#24525)"},{"Id":"1529441745","IsPullRequest":false,"CreatedAt":"2023-01-11T17:45:48","Actor":"krishna217","Number":"24524","RawContent":null,"Title":"Missing angular core update of 15.1.0","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.5\n\n### Description\n\nWhen I tried ng update from 15.0.4 for @angular/core, cli listed a 15.1.0 as a update. But when tried to update it  shows @angular/core is already up to date\r\n\r\nlogs:\r\n\r\n`$ ng update\r\nUsing package manager: yarn\r\nCollecting installed dependencies...\r\nFound 66 dependencies.\r\nWe analyzed your package.json, there are some packages to update:\r\n\r\n  Name                                    Version                  Command to update\r\n -------------------------------------------------------------------------------------\r\n  @angular/cli                            15.0.5 -> 15.1.0         ng update @angular/cli\r\n  @angular/core                           15.0.4 -> 15.1.0         ng update @angular/core\r\n\r\nThere might be additional packages which don't provide 'ng update' capabilities that are outdated.\r\nYou can update the additional packages by running the update command of your package manager.\r\n\r\n\r\n$ ng update @angular/cli @angular/core\r\nUsing package manager: yarn\r\nCollecting installed dependencies...\r\nFound 66 dependencies.\r\nFetching dependency metadata from registry...\r\nPackage '@angular/core' is already up to date.\r\n    Updating package.json with dependency @angular/cli @ \"15.1.0\" (was \"15.0.5\")...\r\nUPDATE package.json (4043 bytes)\r\n✔ Packages successfully installed.`\r\n\n\n### Minimal Reproduction\n\nlogs attached above\n\n### Exception or Error\n\n```text\nNA\n```\n\n\n### Your Environment\n\n```text\n$ ng version\r\n\r\n     _                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.0\r\nNode: 18.12.1\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.5\r\n@angular-devkit/build-angular   15.0.5\r\n@angular-devkit/core            15.1.0\r\n@angular-devkit/schematics      15.1.0\r\n@angular/cli                    15.1.0\r\n@schematics/angular             15.1.0\r\nng-packagr                      15.0.1\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24524","RelatedDescription":"Open issue \"Missing angular core update of 15.1.0\" (#24524)"},{"Id":"1529353575","IsPullRequest":true,"CreatedAt":"2023-01-11T16:39:02","Actor":"clydin","Number":"24522","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support CommonJS dependency checking in esbuild","State":"open","Body":"When using the experimental esbuild-based browser application builder, input files\r\nfor the build will now be checked to determine if they are non-ESM modules. This\r\nbehavior is comparable to the existing behavior within the default Webpack-based browser.\r\nWarnings will now be issued for any non-ESM modules (for example, CommonJS or UMD) when\r\nscript optimizations are enabled (typically production builds). ESM files can be tree-\r\nshaken and otherwise optimized in ways that CommonJS files cannot which allows for\r\nmore optimized and smaller output bundle files.\r\nIf any allowed dependencies are provided via the `allowedCommonJsDependencies`\r\noption, both the direct import and any deep imports of the dependency will be ignored\r\nduring the checks and no diagnostic will be generated for the dependency.\r\n","Url":"https://github.com/angular/angular-cli/pull/24522","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support CommonJS dependency checking in esbuild\" (#24522)"},{"Id":"1529327854","IsPullRequest":true,"CreatedAt":"2023-01-11T16:21:03","Actor":"alan-agius4","Number":"24521","RawContent":null,"Title":"build: update Angular peer deps to support `^15.2.0-next.0`","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/24521","RelatedDescription":"Open PR \"build: update Angular peer deps to support `^15.2.0-next.0`\" (#24521)"},{"Id":"1526967074","IsPullRequest":true,"CreatedAt":"2023-01-11T15:56:53","Actor":"alan-agius4","Number":"24508","RawContent":null,"Title":"docs(@angular/cli): add ng new long description","State":"closed","Body":"This appears to have been deleted by mistake when we switched to Yargs.\r\n","Url":"https://github.com/angular/angular-cli/pull/24508","RelatedDescription":"Closed or merged PR \"docs(@angular/cli): add ng new long description\" (#24508)"},{"Id":"1529214110","IsPullRequest":true,"CreatedAt":"2023-01-11T15:09:24","Actor":"alan-agius4","Number":"24520","RawContent":null,"Title":"docs: release notes for the v15.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24520","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.0 release\" (#24520)"},{"Id":"1529198340","IsPullRequest":true,"CreatedAt":"2023-01-11T15:01:49","Actor":"alan-agius4","Number":"24519","RawContent":null,"Title":"Bump version to \"v15.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24519","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0\" with changelog.\" (#24519)"},{"Id":"1529187438","IsPullRequest":false,"CreatedAt":"2023-01-11T14:46:19","Actor":"Lipata","Number":"24518","RawContent":null,"Title":"Passing an argument to an aliased custom `ng g` schematic, don't recognize the argument","State":"open","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13.x\r\n\r\n### Description\r\n\r\nI've created a custom schematic, following the [Authoring schematics\r\n](https://angular.io/guide/schematics-authoring#schematics-cli) topic. The custom schematic (named `component`) has aliases (`c` & `comp`) and an argument (`template`). Calling the schematic with an alias `ng g custom-schematic:c template=grid` will throw `Unknown argument: template grid` error. Calling `ng g custom-schematic:component template=grid` works fine.\r\n\r\n### Minimal Reproduction\r\n\r\n[aliased-custom-schematic.zip](https://github.com/angular/angular-cli/files/10393283/aliased-custom-schematic.zip)\r\n 1. Open and unzip the attached sample. It consists of:\r\n    - `test-alias` custom schematic project, created following the [Authoring schematics\r\n](https://angular.io/guide/schematics-authoring#schematics-cli) topic. In addition, I have created `launch.json` file that will help you easily reproduce the problem.\r\n    - `test-params` project, created with `ng new` command on which I'm calling the custom schematic, using `ng g`. In addition, I have executed `npm i ts-node` in order to be able to debug the custom schematic upon the `test-params` project.\r\n\r\n2. You can `npm i` on both projects.\r\n3. Open the `test-alias` project and change the paths in the `launch.json` file, so that it uses your local paths.\r\n4. Go to Debug & Run tab in VSCode and run the `Run schematics:component`.\r\n\r\n### Exception or Error\r\n\r\n```text\r\nError: Unknown argument: template grid\r\nc:\\Users\\nalipiev\\Desktop\\15\\test-params\\node_modules\\@angular\\cli\\lib\\cli\\index.js:52\r\nProcess exited with code 1\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.12.2\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1500.4 (cli-only)\r\n@angular-devkit/core         15.0.4 (cli-only)\r\n@angular-devkit/schematics   15.0.4 (cli-only)\r\n@schematics/angular          15.0.4 (cli-only)\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nWhen running the schematic, instead of debugging it, using the way it is described in the [Authoring schematics\r\n](https://angular.io/guide/schematics-authoring#schematics-cli), it is working.\r\n```\r\nschematics .:test-alias\r\n```\r\n\r\nHowever when running it, instead of debugging through the `ng g test-alias:c --template=grid` it is still not working.","Url":"https://github.com/angular/angular-cli/issues/24518","RelatedDescription":"Open issue \"Passing an argument to an aliased custom `ng g` schematic, don't recognize the argument\" (#24518)"},{"Id":"1528653587","IsPullRequest":true,"CreatedAt":"2023-01-11T11:32:10","Actor":"alan-agius4","Number":"24515","RawContent":null,"Title":"build: update angular packages for 15.1.0 release","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24515","RelatedDescription":"Closed or merged PR \"build: update angular packages for 15.1.0 release\" (#24515)"},{"Id":"1528846456","IsPullRequest":false,"CreatedAt":"2023-01-11T11:08:42","Actor":"malkeet-gwebs","Number":"24517","RawContent":null,"Title":"`debug` Inefficient Regular Expression Complexity vulnerability (15 low severity vulnerabilities)","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nLatest version showing 15 low severity vulnerabilities\n\n### Minimal Reproduction\n\nnpm i\n\n### Exception or Error\n\n```text\n15 low severity vulnerabilities\n```\n\n\n### Your Environment\n\n```text\n/ \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 15.0.5\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.5\r\n@angular-devkit/build-angular   15.0.5\r\n@angular-devkit/core            15.0.5\r\n@angular-devkit/schematics      15.0.5\r\n@angular/cli                    15.0.5\r\n@schematics/angular             15.0.5\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24517","RelatedDescription":"Open issue \"`debug` Inefficient Regular Expression Complexity vulnerability (15 low severity vulnerabilities)\" (#24517)"},{"Id":"1528569816","IsPullRequest":true,"CreatedAt":"2023-01-11T10:17:16","Actor":"angular-robot","Number":"24514","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.48.0` -> `5.48.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.48.0/5.48.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.48.0` -> `5.48.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.48.0/5.48.1) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.20.0` -> `v1.21.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.48.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5481-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5480v5481-2023-01-09)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.0...v5.48.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.48.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5481-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5480v5481-2023-01-09)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.0...v5.48.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.21.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.21.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.20.0...v1.21.0)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.21.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"20514864a32d94b2e3113dbf4d71572c908993d3235ea29a2d805a36195cd1e9\",\n    strip_prefix = \"bazel-lib-1.21.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.21.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   feat(jq): add a diff_test helper by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/aspect-build/bazel-lib/pull/317](https://togithub.com/aspect-build/bazel-lib/pull/317)\n-   chore: update bcr homepage by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/aspect-build/bazel-lib/pull/316](https://togithub.com/aspect-build/bazel-lib/pull/316)\n-   fix: write_source_files incompatibility with bzlmod when writing from external repo by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/318](https://togithub.com/aspect-build/bazel-lib/pull/318)\n-   feat: modify assert_json_matches api before release by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/319](https://togithub.com/aspect-build/bazel-lib/pull/319)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.20.0...v1.21.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [x] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24514","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24514)"},{"Id":"1528662834","IsPullRequest":true,"CreatedAt":"2023-01-11T08:58:40","Actor":"alan-agius4","Number":"24516","RawContent":null,"Title":"fix(@angular/cli): remove `--to` option from being required when using `--from` in `ng update`","State":"open","Body":"\r\n\r\nThis change remove the requirement for the `to` option to be provided when using the `from` option in conjunction with `migrate-only`.\r\n\r\nCloses #24510\r\n","Url":"https://github.com/angular/angular-cli/pull/24516","RelatedDescription":"Open PR \"fix(@angular/cli): remove `--to` option from being required when using `--from` in `ng update`\" (#24516)"},{"Id":"1528569688","IsPullRequest":true,"CreatedAt":"2023-01-11T08:41:41","Actor":"angular-robot","Number":"24513","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `da275ef` -> `a5c1c6f` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.1.0-rc.0/15.1.0) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `52c8833` -> `5ce0fac` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `c07e533` -> `2b7ad44` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `70dca36` -> `2a2b21b` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.1.0-rc.0/15.1.0) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `7d599be` -> `2674fc3` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.0-rc.0/15.1.0) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `8e3582d` -> `3c46604` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.0-rc.0/15.1.0) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `538fe7f` -> `2a589cd` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.1.0-rc.0/15.1.0) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `3de6473` -> `960028b` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.1.0-rc.0/15.1.0) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `5c1c6d1` -> `a3fbac1` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `b9b0b92` -> `b810f6d` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.1.0-rc.0/15.1.0) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `6d2704b` -> `ba01724` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c284440` -> `85a374b` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8a853af` -> `c883714` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `db2ced8` -> `36fa2ea` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.1.0-rc.0/15.1.0) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `58ccef6` -> `82b2198` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.1.0-rc.0/15.1.0) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `6ae9580` -> `5092f46` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.1.0-rc.0/15.1.0) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `e36ba78` -> `d4564bc` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.1.0-rc.0/15.1.0) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `aff602a` -> `ceb75f9` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0-rc.0` -> `15.1.0`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.1.0-rc.0/15.1.0) |\n| angular/dev-infra | action | digest | `156cc26` -> `736f9a8` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.1.0`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1510-2023-01-10)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.1.0-rc.0...15.1.0)\n\n#### Deprecations\n\n##### router\n\n-   CanLoad guards in the Router are deprecated. Use CanMatch\n    instead.\n-   router writable properties\n\n    The following strategies are meant to be configured by registering the\n    application strategy in DI via the `providers` in the root `NgModule` or\n    `bootstrapApplication`:\n\n    -   `routeReuseStrategy`\n    -   `titleStrategy`\n    -   `urlHandlingStrategy`\n\n    The following options are meant to be configured using the options\n    available in `RouterModule.forRoot` or `provideRouter`.\n\n    -   `onSameUrlNavigation`\n    -   `paramsInheritanceStrategy`\n    -   `urlUpdateStrategy`\n    -   `canceledNavigationResolution`\n\n    The following options are available in `RouterModule.forRoot` but not\n    available in `provideRouter`:\n\n    -   `malformedUriErrorHandler` - This was found to not be used anywhere\n        internally.\n    -   `errorHandler` - Developers can instead subscribe to `Router.events`\n        and filter for `NavigationError`.\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fe50813664](https://togithub.com/angular/angular/commit/fe50813664809a1177132a77bd2a316ad0858b9e) | feat | Add BrowserPlatformLocation to the public API ([#&#8203;48488](https://togithub.com/angular/angular/pull/48488)) |\n| [2f4f0638c7](https://togithub.com/angular/angular/commit/2f4f0638c74dccfc2d0522f67ab226d3227c0566) | fix | Add data attribtue to NgOptimizedImage ([#&#8203;48497](https://togithub.com/angular/angular/pull/48497)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a532d71975](https://togithub.com/angular/angular/commit/a532d71975bef463223fd5d8322e3140760c9134) | feat | allow self-closing tags on custom elements ([#&#8203;48535](https://togithub.com/angular/angular/pull/48535)) |\n| [caf7228f8a](https://togithub.com/angular/angular/commit/caf7228f8ac7e45e3fafeaee0576ae96738a047f) | fix | resolve deprecation warning ([#&#8203;48652](https://togithub.com/angular/angular/pull/48652)) |\n| [33f35b04ef](https://togithub.com/angular/angular/commit/33f35b04ef0f32f25624a6be59f8635675e3e131) | fix | type-only symbols incorrectly retained when downlevelling custom decorators ([#&#8203;48638](https://togithub.com/angular/angular/pull/48638)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [caedef0f5b](https://togithub.com/angular/angular/commit/caedef0f5b37ac6530885223b26879c39c36c1bd) | fix | update `@babel/core` dependency and lock version ([#&#8203;48634](https://togithub.com/angular/angular/pull/48634)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [6acae1477a](https://togithub.com/angular/angular/commit/6acae1477a212bbd85d0670913c2925fa3bc0c24) | feat | Add `TestBed.runInInjectionContext` to help test functions which use `inject` ([#&#8203;47955](https://togithub.com/angular/angular/pull/47955)) |\n| [38421578a2](https://togithub.com/angular/angular/commit/38421578a2573bcbc86c927ed4015e20fc39f04a) | feat | Make the `isStandalone()` function available in public API ([#&#8203;48114](https://togithub.com/angular/angular/pull/48114)) |\n| [dd42974b07](https://togithub.com/angular/angular/commit/dd42974b070b068135c1bc34072486ae440e45e0) | feat | support TypeScript 4.9 ([#&#8203;48005](https://togithub.com/angular/angular/pull/48005)) |\n\n##### forms\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8aa8b4b77c](https://togithub.com/angular/angular/commit/8aa8b4b77cefcdd400ec9767b946b295ef42a066) | fix | Form provider FormsModule.withConfig return a FormsModule ([#&#8203;48526](https://togithub.com/angular/angular/pull/48526)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5f0b53c735](https://togithub.com/angular/angular/commit/5f0b53c7352f19480185c6b5c769e5012a2d2faa) | feat | Allow auto-imports to suggest multiple possible imports. ([#&#8203;47787](https://togithub.com/angular/angular/pull/47787)) |\n| [6a8ea29a04](https://togithub.com/angular/angular/commit/6a8ea29a04c35071d807bd2809e7fcbadd49f048) | fix | expose `package.json` for vscode extension resolution ([#&#8203;48678](https://togithub.com/angular/angular/pull/48678)) |\n| [ce8160ecb2](https://togithub.com/angular/angular/commit/ce8160ecb28d6765d438eb65035835984eb956ec) | fix | Prevent crashes on unemitable references ([#&#8203;47938](https://togithub.com/angular/angular/pull/47938)) |\n| [e615b598ba](https://togithub.com/angular/angular/commit/e615b598bab9c67bc34a44e39ef1d7066f9bf052) | fix | ship `/api` entry-point ([#&#8203;48670](https://togithub.com/angular/angular/pull/48670)) |\n| [6ce7d76a0e](https://togithub.com/angular/angular/commit/6ce7d76a0ea9cfc1591bee408719fa6da069344f) | fix | update packages/language-service/build.sh script to work with vscode-ng-language-service's new Bazel build ([#&#8203;48663](https://togithub.com/angular/angular/pull/48663)) |\n\n##### localize\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a1a8e91eca](https://togithub.com/angular/angular/commit/a1a8e91ecaded6a2e4d700109a26d3117ad77c9c) | fix | add triple slash type reference on `@angular/localize` on \\`ng  add ([#&#8203;48502](https://togithub.com/angular/angular/pull/48502)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cc284afbbc](https://togithub.com/angular/angular/commit/cc284afbbc33b91884882204c5958a44a5d11392) | fix | combine newly-added imports in import manager ([#&#8203;48620](https://togithub.com/angular/angular/pull/48620)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [228e992db7](https://togithub.com/angular/angular/commit/228e992db75bd7a2213b4596e6e2a8696578aa19) | docs | Deprecate canLoad guards in favor of canMatch ([#&#8203;48180](https://togithub.com/angular/angular/pull/48180)) |\n| [0a8b8a66cd](https://togithub.com/angular/angular/commit/0a8b8a66cdfb86586811c79bec938b3ab7215e8f) | docs | Deprecate public members of Router that are meant to be configured elsewhere ([#&#8203;48006](https://togithub.com/angular/angular/pull/48006)) |\n| [332461bd0c](https://togithub.com/angular/angular/commit/332461bd0c5f5734a9d7f051f0f4c6c173dd87c9) | feat | Add ability to override `onSameUrlNavigation` default per-navigation ([#&#8203;48050](https://togithub.com/angular/angular/pull/48050)) |\n| [f58ad86e51](https://togithub.com/angular/angular/commit/f58ad86e51817f83ff18db790a347528262b850b) | feat | Add feature provider for enabling hash navigation ([#&#8203;48301](https://togithub.com/angular/angular/pull/48301)) |\n| [73f03ad2d2](https://togithub.com/angular/angular/commit/73f03ad2d29811dda2ee03c5f18c79ebc9519c0b) | feat | Add new NavigationSkipped event for ignored navigations ([#&#8203;48024](https://togithub.com/angular/angular/pull/48024)) |\n| [3fe75710d9](https://togithub.com/angular/angular/commit/3fe75710d97a0f3224b2b09c45d9b8a9ad6efe91) | fix | page refresh should not destroy history state ([#&#8203;48540](https://togithub.com/angular/angular/pull/48540)) |\n\n#### Special Thanks\n\nAlan Agius, Alex Castle, Alex Rickabaugh, Andrew Kushnir, Andrew Scott, Bob Watson, Charles Lyding, Derek Cormier, Doug Parker, Dylan Hunn, George Kalpakas, Greg Magolan, Jessica Janiuk, JiaLiPassion, Joey Perrott, Kristiyan Kostadinov, Matthieu Riegler, Paul Gschwendtner, Pawel Kozlowski, Renan Ferro, Tim Gates, Vadim, Virginia Dooley, ced, mgechev, piyush132000, robertIsaac and sr5434\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24513","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24513)"},{"Id":"1527813324","IsPullRequest":false,"CreatedAt":"2023-01-10T18:13:04","Actor":"heeeman","Number":"24512","RawContent":null,"Title":"Can't customize path for lazy loaded module chunks","State":"open","Body":"### Command\n\nconfig\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ni have the sam problem as decribed in https://github.com/angular/angular-cli/issues/22418\r\n\r\nSet APP_BASE_HREF does not work, cause it affected also the router. \r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nCreate a simple Angular application with a router, where files are located. The chunks are not loaded. For this example, let's say that the Angular.json file has following setting:\r\n\r\n\"outputPath\": \"../public/mysitefolder\"\r\n\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 14.2.10\r\nNode: 16.18.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1402.10 (cli-only)\r\n@angular-devkit/core         14.2.10 (cli-only)\r\n@angular-devkit/schematics   14.2.10 (cli-only)\r\n@schematics/angular          14.2.10 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24512","RelatedDescription":"Open issue \"Can't customize path for lazy loaded module chunks\" (#24512)"},{"Id":"1527744936","IsPullRequest":false,"CreatedAt":"2023-01-10T17:16:00","Actor":"fischeversenker","Number":"24511","RawContent":null,"Title":"Custom builders: Can no longer use an option called \"target\" with \"enum\" restriction","State":"open","Body":"### Command\r\n\r\nother\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13.3.9\r\n\r\n### Description\r\n\r\nWhen writing custom Angular builders I was able to specify a builder option with the name `target` that used the `enum` property in the builder's `schema.json` file. Starting with Angular 14 this changed. Now, I can still specify an option with this name in my builder's schema, but it must not have an `enum` property. Otherwise, the builder fails in what seems to be the `yargs` validation in the `angular-cli`'s `command-runner`. Note that there is also other unexpected behavior when using a type of `boolean` for the `target` option, which throws a seemingly unrelated error.\r\n\r\nI wasn't able to find anything regarding this in the changelog of `angular` or `angular-cli`, so it seems like it's an accidental breaking change. Instead of renaming the option in our builder(s), we figured out that it's enough to just remove the `enum` property from the `schema.json`, but eventually, it would be nice to be able to use `enum` again.\r\n\r\n### Minimal Reproduction\r\n\r\nI prepared a reproduction repository [here](https://github.com/fischeversenker/ng-target-builder-option). Follow the \"Quick start\" section in the README.md file to reproduce the error locally.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.2.10\r\nNode: 18.12.1 (Unsupported)\r\nPackage Manager: npm 8.19.2 \r\nOS: linux x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cli                    14.2.10\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24511","RelatedDescription":"Open issue \"Custom builders: Can no longer use an option called \"target\" with \"enum\" restriction\" (#24511)"},{"Id":"1527600076","IsPullRequest":false,"CreatedAt":"2023-01-10T15:34:16","Actor":"bgotink","Number":"24510","RawContent":null,"Title":"Update migrate-only requires to argument","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13.x\n\n### Description\n\nUsing `ng update --migrate-only --from <version> <name>` used to work:\r\n\r\n```\r\n$ NG_DISABLE_VERSION_CHECK=1 yarn dlx --package @angular/cli@13.x \\\r\n      ng update --migrate-only --from 14.0.0 @angular/cdk\r\nUsing package manager: 'yarn'\r\nCollecting installed dependencies...\r\nFound 74 dependencies.\r\n** Executing migrations of package '@angular/cdk' **\r\n\r\n❯ Updates the Angular CDK to v15.\r\n...\r\n```\r\n\r\nThe docs also point to this:\r\n\r\n```\r\n$ yarn run -TB ng update --help\r\nng update [packages..]\r\n\r\n...\r\n      --to              Version up to which to apply migrations. Only available with a single\r\n                        package being updated, and only with 'migrate-only' option. Requires 'from'\r\n                        to be specified. Default to the installed version detected.         [string]\r\n...\r\n```\n\n### Minimal Reproduction\n\n```\r\n$ ng update --migrate-only --from 14.0.0 @angular/cdk\r\n```\n\n### Exception or Error\n\n```text\nError: Missing dependent arguments:\r\n from -> to\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.0.0\r\nNode: 16.16.0\r\nPackage Manager: yarn 3.2.4\r\nOS: darwin x64\r\n\r\nAngular: 15.0.0\r\n... cdk, cli, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.0\r\n@angular-devkit/build-angular   15.0.0\r\n@angular-devkit/core            15.0.0\r\n@angular-devkit/schematics      15.0.0\r\n@schematics/angular             15.0.0\r\nrxjs                            7.5.5\r\ntypescript                      4.8.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24510","RelatedDescription":"Open issue \"Update migrate-only requires to argument\" (#24510)"},{"Id":"1527456795","IsPullRequest":false,"CreatedAt":"2023-01-10T11:24:16","Actor":"jarri-official","Number":"24509","RawContent":null,"Title":"Using Angular proxy is ignoring withCredentials:false flag","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nUsing Angular Proxy and HttpClient while creating an HTTP request with `withCredentials` set to `false` (or left empty, with the default value of `false`) will attach cookies to the request like in the scenario when `withCredentials` flag is set to `true`. It is not possible to make an HTTP request with no `Cookie` param in headers by setting `withCredentials` to `false`. This bug is occurring only while using Angular Proxy. While using the development server without proxy or on production build, this bug will not occur.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo exceptions or errors.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nNode : 18.12.0\r\n   OS   : darwin arm64\r\n   npm  : 8.19.2\r\n   \r\n   nx : 14.6.4\r\n   @nrwl/angular : 14.6.4\r\n   @nrwl/cypress : 14.6.4\r\n   @nrwl/devkit : 14.6.4\r\n   @nrwl/eslint-plugin-nx : 14.6.4\r\n   @nrwl/express : 15.0.0\r\n   @nrwl/jest : 15.0.0\r\n   @nrwl/js : 14.6.4\r\n   @nrwl/linter : 14.6.4\r\n   @nrwl/node : 15.0.0\r\n   @nrwl/storybook : 14.6.4\r\n   @nrwl/web : 14.6.4\r\n   @nrwl/workspace : 14.6.4\r\n   typescript : 4.7.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24509","RelatedDescription":"Open issue \"Using Angular proxy is ignoring withCredentials:false flag\" (#24509)"},{"Id":"1526819295","IsPullRequest":false,"CreatedAt":"2023-01-10T01:31:46","Actor":"johncrim","Number":"24507","RawContent":null,"Title":"ng15 compiler output broken this in async field functions, with \"useDefineForClassFields\" unset","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nAfter upgrading to ng15, I'm seeing bad compile output in async functions that are assigned to fields - the `this` is not being captured, resulting in NPEs in a number of places. I've also seen other issues where field initialization is re-ordered after upgrading to ng15, which may be related.\r\n\r\nA simple example is:\r\n```ts\r\nimport { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { delay } from './delay';\r\n\r\nexport const WINDOW = new InjectionToken<Window>('window', { providedIn: 'platform', factory: () => window });\r\n\r\n/**\r\n * Service that provides online/offline status.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class OnlineService2\r\n  extends BehaviorSubject<boolean>\r\n  implements OnDestroy {\r\n\r\n  constructor(@Inject(WINDOW) private readonly _window: Window) {\r\n    const browserOnline = _window.navigator.onLine;\r\n    super(browserOnline);\r\n\r\n    _window.addEventListener('online', this.toOnline);\r\n    _window.addEventListener('offline', this.toOffline);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._window.removeEventListener('online', this.toOnline);\r\n    this._window.removeEventListener('offline', this.toOffline);\r\n    this.complete();\r\n  }\r\n\r\n  private readonly toOnline = async () => {\r\n    await delay(1);\r\n    this.next(true);\r\n  };\r\n\r\n  private readonly toOffline = async () => {\r\n    await delay(1);\r\n    this.next(false);\r\n  };\r\n}\r\n```\r\n\r\nThe compiled output is:\r\n```js\r\nclass OnlineService2 extends rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject {\r\n  constructor() {\r\n    const browserOnline = navigator.onLine;\r\n    super(browserOnline);\r\n    window.addEventListener('online', this.toOnline);\r\n    window.addEventListener('offline', this.toOffline);\r\n  }\r\n  ngOnDestroy() {\r\n    window.removeEventListener('online', this.toOnline);\r\n    window.removeEventListener('offline', this.toOffline);\r\n    this.complete();\r\n  }\r\n  toOnline = (0,prj_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n    yield (0,_ease_util__WEBPACK_IMPORTED_MODULE_2__.delay)(1);\r\n    _this.next(true);\r\n  });\r\n  toOffline = (0,prj_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n    yield (0,_ease_util__WEBPACK_IMPORTED_MODULE_2__.delay)(1);\r\n    _this2.next(false);\r\n  });\r\n  static ɵfac = function OnlineService2_Factory(t) {\r\n    return new (t || OnlineService2)();\r\n  };\r\n  static ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_3__[\"ɵɵdefineInjectable\"]({\r\n    token: OnlineService2,\r\n    factory: OnlineService2.ɵfac,\r\n    providedIn: 'root'\r\n  });\r\n}\r\n```\r\n\r\nYou can see that the `_this` and `_this2` are not initialized before they are used. If I change my tsconfig settings from:\r\n```json\r\n    \"module\": \"esnext\",\r\n```\r\n\r\nto\r\n\r\n```json\r\n    \"module\": \"ES2022\",\r\n    \"useDefineForClassFields\": false,\r\n```\r\n\r\nthe compiled output works as expected:\r\n```js\r\nclass OnlineService2 extends rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject {\r\n  constructor(_window) {\r\n    var _this;\r\n    const browserOnline = _window.navigator.onLine;\r\n    super(browserOnline);\r\n    _this = this;\r\n    this._window = _window;\r\n    this.toOnline = /*#__PURE__*/(0,prj_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      yield (0,_ease_util__WEBPACK_IMPORTED_MODULE_3__.delay)(1);\r\n      _this.next(true);\r\n    });\r\n    this.toOffline = /*#__PURE__*/(0,prj_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      yield (0,_ease_util__WEBPACK_IMPORTED_MODULE_3__.delay)(1);\r\n      _this.next(false);\r\n    });\r\n    _window.addEventListener('online', this.toOnline);\r\n    _window.addEventListener('offline', this.toOffline);\r\n  }\r\n  ngOnDestroy() {\r\n    this._window.removeEventListener('online', this.toOnline);\r\n    this._window.removeEventListener('offline', this.toOffline);\r\n    this.complete();\r\n  }\r\n  static #_ = this.ɵfac = function OnlineService2_Factory(t) {\r\n    return new (t || OnlineService2)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"](WINDOW));\r\n  };\r\n  static #_2 = this.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"]({\r\n    token: OnlineService2,\r\n    factory: OnlineService2.ɵfac,\r\n    providedIn: 'root'\r\n  });\r\n}\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/johncrim/repro-ng15-compile\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: Uncaught (in promise): ReferenceError: _this is not defined\r\nReferenceError: _this is not defined\r\n    at http://localhost:9876/_karma_webpack_/webpack:/apps/ease/src/modules/app/Online.service2.ts:37:5\r\n    at Generator.next (<anonymous>)\r\n    at asyncGeneratorStep (http://localhost:9876/_karma_webpack_/webpack:/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js:3:1)\r\n    at apply (http://localhost:9876/_karma_webpack_/webpack:/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js:22:1)\r\n    at _ZoneDelegate.invoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:375:26)\r\n    at FakeAsyncTestZoneSpec.onInvoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone-testing.js:1938:33)\r\n    at ProxyZoneSpec.onInvoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone-testing.js:284:39)\r\n    at _ZoneDelegate.invoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:374:52)\r\n    at Zone.run (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:134:43)\r\n    at apply (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:1278:36)\r\n    at _ZoneDelegate.invokeTask (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:409:31)\r\n    at ProxyZoneSpec.onInvokeTask (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone-testing.js:318:39)\r\n    at _ZoneDelegate.invokeTask (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:408:60)\r\n    at Zone.runTask (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:178:47)\r\n    at invokeTask (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/fesm2015/zone.js:490:34)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.0.5\r\nNode: 19.3.0 (Unsupported)\r\nPackage Manager: yarn 3.2.4\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.5\r\n@angular-devkit/build-angular   15.0.5\r\n@angular-devkit/core            15.0.5\r\n@angular-devkit/schematics      15.0.5\r\n@angular/cli                    15.0.5\r\n@schematics/angular             15.0.5\r\nng-packagr                      15.0.3\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI have not been able to cause the error in my standalone project (https://github.com/johncrim/repro-ng15-compile) - I've tried tweaking dependencies eg the typescript version and tsconfig setting to match my upgraded project, but no luck generating the failure. However if I move the same code into my project I am seeing the compile output described above.\r\n\r\nI have a fix (in tsconfig set \"module\": \"ES2022\" and \"useDefineForClassFields\": false) which is easy to apply, though I'm not done testing it everywhere. Since those tsconfig settings weren't changed by migrations I'm raising the issue for the benefit of the community.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/24507","RelatedDescription":"Open issue \"ng15 compiler output broken this in async field functions, with \"useDefineForClassFields\" unset\" (#24507)"},{"Id":"1525870355","IsPullRequest":false,"CreatedAt":"2023-01-09T17:36:50","Actor":"fei-sreddy","Number":"24506","RawContent":null,"Title":"Unable to build the local library with dynamic import.","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14\n\n### Description\n\nI am having a local library with dynamic imports, if i am trying to build that library i am having the following error\r\n\r\n_Invalid value for option \"output.file\" - when building multiple chunks, the \"output.dir\" option must be used, not \"output.file\". To inline dynamic imports, set the \"inlineDynamicImports\" option._\n\n### Minimal Reproduction\n\nBuild a local library with dynamic imports, it will start producing this error.\n\n### Exception or Error\n\n```text\nInvalid value for option \"output.file\" - when building multiple chunks, the \"output.dir\" option must be used, not \"output.file\". To inline dynamic imports, set the \"inlineDynamicImports\" option.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 13.2.3\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.2\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1302.3 (cli-only)\r\n@angular-devkit/core         13.2.3 (cli-only)\r\n@angular-devkit/schematics   13.2.3 (cli-only)\r\n@schematics/angular          13.2.3 (cli-only)\n```\n\n\n### Anything else relevant?\n\n--","Url":"https://github.com/angular/angular-cli/issues/24506","RelatedDescription":"Closed issue \"Unable to build the local library with dynamic import.\" (#24506)"},{"Id":"1525114133","IsPullRequest":true,"CreatedAt":"2023-01-09T15:57:04","Actor":"angular-robot","Number":"24504","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24504","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24504)"},{"Id":"1523363305","IsPullRequest":true,"CreatedAt":"2023-01-09T15:56:31","Actor":"clydin","Number":"24499","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use relative css resource paths in esbuild JSON stats","State":"closed","Body":"When using the experimental esbuild-based browser application builder with the `--stats-json`\r\noption, all referenced CSS resources will now use paths relative to the workspace root within\r\nthe output JSON file. Previously, the resource paths within the stats JSON file were absolute\r\nand were inconsistent with the other JavaScript and CSS paths within the file. CSS resources\r\ninclude files that have been referenced in a bundled stylesheet `url()` such as images or fonts.","Url":"https://github.com/angular/angular-cli/pull/24499","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use relative css resource paths in esbuild JSON stats\" (#24499)"},{"Id":"1525213335","IsPullRequest":true,"CreatedAt":"2023-01-09T15:55:41","Actor":"alan-agius4","Number":"24505","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide an option to `exclude` specs in Karma builder","State":"closed","Body":"\r\n\r\nWith this change we add an `exclude` option to the Karma builder to provide a way to exclude certain specs from the compilation.\r\n\r\nThis is useful, when having integration, e2e and unit tests with the same suffix.\r\n\r\nCloses #24472\r\n","Url":"https://github.com/angular/angular-cli/pull/24505","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide an option to `exclude` specs in Karma builder\" (#24505)"},{"Id":"1523512096","IsPullRequest":true,"CreatedAt":"2023-01-09T15:55:29","Actor":"angular-robot","Number":"24500","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `940c56c` -> `52c8833` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `81ddbac` -> `c07e533` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `8681468` -> `6d2704b` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `5995cda` -> `c284440` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `079a46e` -> `8a853af` |\n| angular/dev-infra | action | digest | `ee27e18` -> `156cc26` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24500","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24500)"},{"Id":"1523128823","IsPullRequest":false,"CreatedAt":"2023-01-09T14:56:56","Actor":"krutkowski86","Number":"24498","RawContent":null,"Title":"Fonts fingerprint/hash","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nAfter upgrading from Angular 14 to 15 I've lost fonts files fingerprints. \r\nFor example font included in scss looked like this Roboto-Regular.woff2 and after build I had \r\nRoboto-Regular.3dbd163d3bb09d47.woff2 that was placed in build root folder.\r\nNow it stays in the assets dir without fingerprint. \r\n\r\n\n\n### Minimal Reproduction\n\ntypical build\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.2\r\nNode: 14.20.1\r\nPackage Manager: npm 6.14.17\r\nOS: darwin x64\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24498","RelatedDescription":"Closed issue \"Fonts fingerprint/hash\" (#24498)"},{"Id":"1524392928","IsPullRequest":true,"CreatedAt":"2023-01-09T14:42:04","Actor":"crisbeto","Number":"24503","RawContent":null,"Title":"build: re-enable material e2e tests","State":"closed","Body":"The Material tests had to be disabled temporarily during the TS 4.9 update, because the peer dependency range didn't allow for `next` versions. Now that the range was expanded in https://github.com/angular/components/pull/26308, the tests should work again.","Url":"https://github.com/angular/angular-cli/pull/24503","RelatedDescription":"Closed or merged PR \"build: re-enable material e2e tests\" (#24503)"},{"Id":"1523512205","IsPullRequest":true,"CreatedAt":"2023-01-09T14:41:33","Actor":"angular-robot","Number":"24501","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.19.1` -> `v1.20.0` |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.14` -> `0.16.16`](https://renovatebot.com/diffs/npm/esbuild/0.16.14/0.16.16) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.14` -> `0.16.16`](https://renovatebot.com/diffs/npm/esbuild/0.16.14/0.16.16) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.14` -> `0.16.16`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.14/0.16.16) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.14` -> `0.16.16`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.14/0.16.16) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.20` -> `8.4.21`](https://renovatebot.com/diffs/npm/postcss/8.4.20/8.4.21) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | patch | [`8.4.20` -> `8.4.21`](https://renovatebot.com/diffs/npm/postcss/8.4.20/8.4.21) |\n| [verdaccio](https://verdaccio.org) ([source](https://togithub.com/verdaccio/verdaccio)) | devDependencies | patch | [`5.19.0` -> `5.19.1`](https://renovatebot.com/diffs/npm/verdaccio/5.19.0/5.19.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.20.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.20.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.19.2...v1.20.0)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.20.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"558d70e36425c317c70b19fb0f68241a3747bcf46561b5ffc19bed17527adbb3\",\n    strip_prefix = \"bazel-lib-1.20.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.20.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   Remove the use of realpath in tests by [@&#8203;kzadorozhny](https://togithub.com/kzadorozhny) in [https://github.com/aspect-build/bazel-lib/pull/315](https://togithub.com/aspect-build/bazel-lib/pull/315)\n-   feat: improved copy_to_directory performance & globbing support using copy_to_directory_bin_action by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/311](https://togithub.com/aspect-build/bazel-lib/pull/311)\n\n#### New Contributors\n\n-   [@&#8203;kzadorozhny](https://togithub.com/kzadorozhny) made their first contribution in [https://github.com/aspect-build/bazel-lib/pull/315](https://togithub.com/aspect-build/bazel-lib/pull/315)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.19.2...v1.20.0\n\n### [`v1.19.2`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.19.2)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.19.1...v1.19.2)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.19.2\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"931a562afb3ea1d2c828145d8ed65b32245bfb67e4ee7d73092bae7be8dd764f\",\n    strip_prefix = \"bazel-lib-1.19.2\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.19.2.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: handle directory symlinks in copy_to_directory_bin_action tool binary by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/314](https://togithub.com/aspect-build/bazel-lib/pull/314)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.19.1...v1.19.2\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.16`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01616)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.15...v0.16.16)\n\n-   Fix a regression caused by comment preservation ([#&#8203;2805](https://togithub.com/evanw/esbuild/issues/2805))\n\n    The new comment preservation behavior that was added in 0.16.14 introduced a regression where comments in certain locations could cause esbuild to omit certain necessary parentheses in the output. The outermost parentheses were incorrectly removed for the following syntax forms, which then introduced syntax errors:\n\n    ```js\n    (/* comment */ { x: 0 }).x;\n    (/* comment */ function () { })();\n    (/* comment */ class { }).prototype;\n    ```\n\n    This regression has been fixed.\n\n### [`v0.16.15`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01615)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.14...v0.16.15)\n\n-   Add `format` to input files in the JSON metafile data\n\n    When `--metafile` is enabled, input files may now have an additional `format` field that indicates the export format used by this file. When present, the value will either be `cjs` for CommonJS-style exports or `esm` for ESM-style exports. This can be useful in bundle analysis.\n\n    For example, esbuild's new [Bundle Size Analyzer](https://esbuild.github.io/analyze/) now uses this information to visualize whether ESM or CommonJS was used for each directory and file of source code (click on the CJS/ESM bar at the top).\n\n    This information is helpful when trying to reduce the size of your bundle. Using the ESM variant of a dependency instead of the CommonJS variant always results in a faster and smaller bundle because it omits CommonJS wrappers, and also may result in better tree-shaking as it allows esbuild to perform tree-shaking at the statement level instead of the module level.\n\n-   Fix a bundling edge case with dynamic import ([#&#8203;2793](https://togithub.com/evanw/esbuild/issues/2793))\n\n    This release fixes a bug where esbuild's bundler could produce incorrect output. The problematic edge case involves the entry point importing itself using a dynamic `import()` expression in an imported file, like this:\n\n    ```js\n    // src/a.js\n    export const A = 42;\n\n    // src/b.js\n    export const B = async () => (await import(\".\")).A\n\n    // src/index.js\n    export * from \"./a\"\n    export * from \"./b\"\n    ```\n\n-   Remove new type syntax from type declarations in the `esbuild` package ([#&#8203;2798](https://togithub.com/evanw/esbuild/issues/2798))\n\n    Previously you needed to use TypeScript 4.3 or newer when using the `esbuild` package from TypeScript code due to the use of a getter in an interface in `node_modules/esbuild/lib/main.d.ts`. This release removes this newer syntax to allow people with versions of TypeScript as far back as TypeScript 3.5 to use this latest version of the `esbuild` package. Here is change that was made to esbuild's type declarations:\n\n    ```diff\n     export interface OutputFile {\n       /** \"text\" as bytes */\n       contents: Uint8Array;\n       /** \"contents\" as text (changes automatically with \"contents\") */\n    -  get text(): string;\n    +  readonly text: string;\n     }\n    ```\n\n</details>\n\n<details>\n<summary>postcss/postcss</summary>\n\n### [`v8.4.21`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#&#8203;8421)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.20...8.4.21)\n\n-   Fixed `Input#error` types (by Aleks Hudochenkov).\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio</summary>\n\n### [`v5.19.1`](https://togithub.com/verdaccio/verdaccio/releases/tag/v5.19.1)\n\n[Compare Source](https://togithub.com/verdaccio/verdaccio/compare/v5.19.0...v5.19.1)\n\n##### [5.19.1](https://togithub.com/verdaccio/verdaccio/compare/v5.19.0...v5.19.1) (2023-01-07)\n\n> ℹ️ TS types were added in `v5.18.0` but weren't included in the package, this change might be a minor in some cases, if you have troubles report it.\n\n##### Bug Fixes\n\n-   include ts types and systemd into the published package ([#&#8203;3556](https://togithub.com/verdaccio/verdaccio/issues/3556)) ([a774e29](https://togithub.com/verdaccio/verdaccio/commit/a774e2971528aaa59155f271595588d4c945840d))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24501","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24501)"},{"Id":"1523643027","IsPullRequest":false,"CreatedAt":"2023-01-09T07:04:55","Actor":"kohkoksiang","Number":"24502","RawContent":null,"Title":"ng new is not working and can not setup angular cli and pending on installing packages (npm)_thank you","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n![image](https://user-images.githubusercontent.com/94697542/211129157-416fc151-5bbf-4bac-a8fe-0ca97c628077.png)\r\n\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24502","RelatedDescription":"Closed issue \"ng new is not working and can not setup angular cli and pending on installing packages (npm)_thank you\" (#24502)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1530010868","IsPullRequest":false,"CreatedAt":"2023-01-12T02:49:25","Actor":"CroMarmot","Number":"26412","RawContent":null,"Title":"bug(mat-tab,mat-button): v15 using mat-button in mat-tab trigger weird y-scroll","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14\n\n### Description\n\nin v15, using `mat-button` inside `mat-tab`, their will be a weird y-scroll\r\n\r\n![Screenshot from 2023-01-12 10-25-37](https://user-images.githubusercontent.com/24691835/211961336-29690879-5492-4c32-9996-c89b68fdccba.png)\r\n\r\nwhen i put more button, or change whe window width, the `mat-tab` height changed but the y-scroll still exist\r\n\r\n![image](https://user-images.githubusercontent.com/24691835/211961530-ddc86a1c-0216-4891-97f7-67b1dff1cd1b.png)\r\n\r\n---\r\n\r\nhowever, if use default button or pure text, or add css, it's working properly\r\n\r\n```\r\nbutton{\r\n  margin-bottom: 6px;\r\n}\r\n```\r\n\r\n---\r\n\r\n\r\nprevious version\r\n\r\n```diff\r\ngit show 450df7f1c768b6a5e660898fd789d5f2c2353672 -- package.json\r\ncommit 450df7f1c768b6a5e660898fd789d5f2c2353672\r\nAuthor: cromarmot <yexiaorain@gmail.com>\r\nDate:   Sun Jan 1 07:45:07 2023 +0800\r\n\r\n    update ng 14 -> 15\r\n\r\ndiff --git a/package.json b/package.json\r\nindex 6eb52c7..c8e4e0f 100644\r\n--- a/package.json\r\n+++ b/package.json\r\n@@ -10,18 +10,18 @@\r\n   },\r\n   \"private\": true,\r\n   \"dependencies\": {\r\n-    \"@angular-eslint/schematics\": \"1.0.0\",\r\n-    \"@angular/animations\": \"^14.1.2\",\r\n-    \"@angular/cdk\": \"^14.1.2\",\r\n-    \"@angular/common\": \"^14.1.2\",\r\n-    \"@angular/compiler\": \"^14.1.2\",\r\n-    \"@angular/core\": \"^14.1.2\",\r\n-    \"@angular/forms\": \"^14.1.2\",\r\n-    \"@angular/material\": \"^14.1.2\",\r\n-    \"@angular/platform-browser\": \"^14.1.2\",\r\n-    \"@angular/platform-browser-dynamic\": \"^14.1.2\",\r\n-    \"@angular/router\": \"^14.1.2\",\r\n-    \"@angular/service-worker\": \"^14.1.2\",\r\n+    \"@angular-eslint/schematics\": \"15.1.0\",\r\n+    \"@angular/animations\": \"^15.0.4\",\r\n+    \"@angular/cdk\": \"^15.0.3\",\r\n+    \"@angular/common\": \"^15.0.4\",\r\n+    \"@angular/compiler\": \"^15.0.4\",\r\n+    \"@angular/core\": \"^15.0.4\",\r\n+    \"@angular/forms\": \"^15.0.4\",\r\n+    \"@angular/material\": \"^15.0.3\",\r\n+    \"@angular/platform-browser\": \"^15.0.4\",\r\n+    \"@angular/platform-browser-dynamic\": \"^15.0.4\",\r\n+    \"@angular/router\": \"^15.0.4\",\r\n+    \"@angular/service-worker\": \"^15.0.4\",\r\n     \"echarts\": \"^5.2.2\",\r\n     \"ngx-echarts\": \"^8.0.0\",\r\n     \"ngx-markdown\": \"^14.0.0\",\r\n@@ -30,9 +30,9 @@\r\n     \"zone.js\": \"~0.11.4\"\r\n   },\r\n   \"devDependencies\": {\r\n-    \"@angular-devkit/build-angular\": \"^14.1.2\",\r\n-    \"@angular/cli\": \"^14.1.2\",\r\n-    \"@angular/compiler-cli\": \"^14.1.2\",\r\n+    \"@angular-devkit/build-angular\": \"^15.0.4\",\r\n+    \"@angular/cli\": \"^15.0.4\",\r\n+    \"@angular/compiler-cli\": \"^15.0.4\",\r\n     \"@types/jasmine\": \"~3.6.0\",\r\n     \"@types/node\": \"^12.11.1\",\r\n     \"jasmine-core\": \"~3.7.0\",\r\n@@ -41,6 +41,6 @@\r\n     \"karma-coverage\": \"~2.0.3\",\r\n     \"karma-jasmine\": \"~4.0.0\",\r\n     \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n-    \"typescript\": \"~4.6.4\"\r\n+    \"typescript\": \"~4.8.4\"\r\n   }\r\n }\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\n1. fork the official [stackblitz components issue](https://stackblitz.com/fork/components-issue)\r\n2. use tab code from [here](https://material.angular.io/components/tabs/overview)\r\n3. and the button code from [here](https://material.angular.io/components/button/overview)\r\n4. remove style code in 'example-component.css' \r\n\r\n[in stackblitz](https://stackblitz.com/edit/components-issue-51sawm?file=src/app/example-component.html)\r\n\r\n---\r\n\r\nreproduce code\r\n\r\n```html\r\n<mat-tab-group>\r\n  <mat-tab label=\"First\">\r\n    <button mat-button>Basic Button</button>\r\n    <button mat-button>Basic Button</button>\r\n  </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n```\n\n### Expected Behavior\n\ny-scroll don't show up, and cannot scroll\r\n\n\n### Actual Behavior\n\ny-scroll show up, and it can scroll\n\n### Environment\n\nMy computer(Same Issue)\r\n\r\n```\r\nAngular CLI: 15.0.4\r\nNode: 16.13.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/material               15.0.3\r\n@schematics/angular             15.0.4\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n- Browser(s):\r\n  - Chrome: Version 108.0.5359.94 (Official Build) (64-bit)\r\n  - Firefox: 108.0.2 (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n  - Ubuntu22.04.1 LTS, Linux 5.15.0-56-generic\r\n\r\n---\r\n\r\nstackblitz env:\r\n\r\n![Screenshot from 2023-01-12 10-37-26](https://user-images.githubusercontent.com/24691835/211962776-a4d23191-4594-4889-bad1-3d16afef6127.png)\r\n\r\n","Url":"https://github.com/angular/components/issues/26412","RelatedDescription":"Open issue \"bug(mat-tab,mat-button): v15 using mat-button in mat-tab trigger weird y-scroll\" (#26412)"},{"Id":"1529576519","IsPullRequest":true,"CreatedAt":"2023-01-11T21:34:53","Actor":"amysorto","Number":"26411","RawContent":null,"Title":"docs: release notes for the v15.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26411","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.0 release\" (#26411)"},{"Id":"1529570961","IsPullRequest":true,"CreatedAt":"2023-01-11T19:34:27","Actor":"amysorto","Number":"26410","RawContent":null,"Title":"Bump version to \"v15.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26410","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0\" with changelog.\" (#26410)"},{"Id":"1529487878","IsPullRequest":true,"CreatedAt":"2023-01-11T19:26:19","Actor":"amysorto","Number":"26406","RawContent":null,"Title":"build: update peer dependency for v15.1.0 release","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26406","RelatedDescription":"Closed or merged PR \"build: update peer dependency for v15.1.0 release\" (#26406)"},{"Id":"1529541317","IsPullRequest":true,"CreatedAt":"2023-01-11T19:09:29","Actor":"alkavats1","Number":"26409","RawContent":null,"Title":"fix(multiple): remove the commented out code","State":"open","Body":"the commented code of debugger in region parser file remove","Url":"https://github.com/angular/components/pull/26409","RelatedDescription":"Open PR \"fix(multiple): remove the commented out code\" (#26409)"},{"Id":"1529538007","IsPullRequest":true,"CreatedAt":"2023-01-11T19:06:57","Actor":"alkavats1","Number":"26408","RawContent":null,"Title":"fix(multiple): removed unused variable from sepc file","State":"open","Body":"unused variable remove from the test case file","Url":"https://github.com/angular/components/pull/26408","RelatedDescription":"Open PR \"fix(multiple): removed unused variable from sepc file\" (#26408)"},{"Id":"1529521798","IsPullRequest":true,"CreatedAt":"2023-01-11T18:56:21","Actor":"alkavats1","Number":"26407","RawContent":null,"Title":"fix(multiple): replace the for loop with for-of loop","State":"closed","Body":"for-of loop use insted of for loop in js file","Url":"https://github.com/angular/components/pull/26407","RelatedDescription":"Closed or merged PR \"fix(multiple): replace the for loop with for-of loop\" (#26407)"},{"Id":"1529469092","IsPullRequest":true,"CreatedAt":"2023-01-11T18:14:52","Actor":"alkavats1","Number":"26405","RawContent":null,"Title":"fix(multiple): remove the unused ngOnit and constructor","State":"closed","Body":"unused constructor and ngOnit is removed from different components","Url":"https://github.com/angular/components/pull/26405","RelatedDescription":"Closed or merged PR \"fix(multiple): remove the unused ngOnit and constructor\" (#26405)"},{"Id":"1529438576","IsPullRequest":true,"CreatedAt":"2023-01-11T17:43:05","Actor":"alkavats1","Number":"26404","RawContent":null,"Title":"fix(multiple): update the html tags and add the alt attr","State":"open","Body":"html tags like b and i are update and add the alt attribute in the img tag","Url":"https://github.com/angular/components/pull/26404","RelatedDescription":"Open PR \"fix(multiple): update the html tags and add the alt attr\" (#26404)"},{"Id":"1529421341","IsPullRequest":false,"CreatedAt":"2023-01-11T17:28:58","Actor":"klsolano7","Number":"26403","RawContent":null,"Title":"Mat Form Field ERROR outline and label not responding positioning and changing color properly on SAFARI and Chrome on IOS devices and macbooks","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nN/A\n\n### Description\n\nWhen a user selects in and out of an input field that is \"required\", the error for the input field is not responding properly.\r\nThe outline of the input field is a combination of blue and red. The label does not float properly to the top of the input field.  This only happens in IOS devices V16 and MAC Ventura V16.\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/40219885/211876321-4e786e5c-ae21-45e0-8686-36224a067cdf.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Click inside of input field that is \"required\"\r\n2. Click outside of input field\r\n\n\n### Expected Behavior\n\nWhen there is an error in the input field, the red border should outline completely. The Label should float properly to the top.\n\n### Actual Behavior\n\nRed outline is not wrapping around 100%. The Label does not float all the way to the top.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26403","RelatedDescription":"Open issue \"Mat Form Field ERROR outline and label not responding positioning and changing color properly on SAFARI and Chrome on IOS devices and macbooks\" (#26403)"},{"Id":"1529385063","IsPullRequest":true,"CreatedAt":"2023-01-11T17:02:05","Actor":"alan-agius4","Number":"26402","RawContent":null,"Title":"build: update peer dependencies to allow Angular 15.2.0 prereleases","State":"open","Body":"Needed to make Angular CLI CI green\r\nhttps://app.circleci.com/pipelines/github/angular/angular-cli/28808/workflows/0a4538e3-97df-4212-8188-9e515354aec3/jobs/387157","Url":"https://github.com/angular/components/pull/26402","RelatedDescription":"Open PR \"build: update peer dependencies to allow Angular 15.2.0 prereleases\" (#26402)"},{"Id":"1529297166","IsPullRequest":false,"CreatedAt":"2023-01-11T15:59:57","Actor":"MikaStark","Number":"26401","RawContent":null,"Title":"docs-bug(Typography): Wrong explanation about body-2 typo in v15","State":"open","Body":"### Documentation Feedback\n\n`body-2` font is presented as \"bolder body text\". But since MDC migration, it's in fact a smaller  `body-1` variant\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/typography#typography-levels","Url":"https://github.com/angular/components/issues/26401","RelatedDescription":"Open issue \"docs-bug(Typography): Wrong explanation about body-2 typo in v15\" (#26401)"},{"Id":"1529060363","IsPullRequest":false,"CreatedAt":"2023-01-11T13:38:16","Actor":"iKrishnaSahu","Number":"26400","RawContent":null,"Title":"bug(datepicker): \"Datepicker emulating a Year and month picker\" example is showing date when clicked on mat-calendar-period-button","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`Datepicker emulating a Year and month picker` example is showing date when clicked on `mat-calendar-period-button`\r\n\r\n![datepicker](https://user-images.githubusercontent.com/34937515/211820009-d8ae5002-33f4-45c6-ad76-51af12683bce.gif)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Visit https://material.angular.io/components/datepicker/examples\r\n2. Perform same steps as shown in attached gif\n\n### Expected Behavior\n\nDate picker view should not be visible\n\n### Actual Behavior\n\nDate picker view is visible\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26400","RelatedDescription":"Open issue \"bug(datepicker): \"Datepicker emulating a Year and month picker\" example is showing date when clicked on mat-calendar-period-button\" (#26400)"},{"Id":"1528042807","IsPullRequest":false,"CreatedAt":"2023-01-11T13:16:42","Actor":"clamli","Number":"26395","RawContent":null,"Title":"feat(MatTab): Allow MatTab to be focusable when being disabled","State":"closed","Body":"### Feature Description\r\n\r\nCurrently a disabled MatTab is not focusable. In [Enabled tab vs Disabled tab demo](https://stackblitz.com/edit/angular-4shdxw-rygzeb?file=src/app/tab-group-animations-example.html), when we place the focus indicator on \"Enabled tab 1\" and use left/right arrow keys to navigate, we can see that \"Disabled tab 1\" is bypassed. \r\n\r\nThis is fine for most cases, however, if there is a tooltip attached to the disabled tab which announces the reason why the tab is disabled, it would be hard for screen reader users to focus on it and read the message out. Because of that, [6.7 Focusability of disabled controls](https://w3c.github.io/aria-practices/#kbd_disabled_controls) encourages developers to keep \"Tab elements in a set of Tabs\" focusable when being disabled, for the purpose of accessibility.\r\n\r\n### Use Case\r\n\r\nWe expect disabled tabs to be keyboard focusable, in details, \r\n- We want focus indicators to render appropriately on disabled tabs with [appropriate contrast ratio](https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum).\r\n- We should consider making similar changes to other components mentioned in [6.7 Focusability of disabled controls](https://w3c.github.io/aria-practices/#kbd_disabled_controls) if applicable.","Url":"https://github.com/angular/components/issues/26395","RelatedDescription":"Closed issue \"feat(MatTab): Allow MatTab to be focusable when being disabled\" (#26395)"},{"Id":"1528672726","IsPullRequest":true,"CreatedAt":"2023-01-11T13:16:41","Actor":"crisbeto","Number":"26397","RawContent":null,"Title":"fix(material/tabs): allow focus on disabled tabs","State":"closed","Body":"According to the WCAG best practices focus should be allowed on disabled tabs (see https://w3c.github.io/aria-practices/#kbd_disabled_controls). These changes update our tabs to be in line with the recommendation.\r\n\r\nFixes #26395.","Url":"https://github.com/angular/components/pull/26397","RelatedDescription":"Closed or merged PR \"fix(material/tabs): allow focus on disabled tabs\" (#26397)"},{"Id":"1529015118","IsPullRequest":false,"CreatedAt":"2023-01-11T13:13:02","Actor":"nikxco","Number":"26399","RawContent":null,"Title":"bug(mat-chip): Using an array of objects from a component's method hangs the application","State":"open","Body":"### Description\r\n\r\nI'm creating a widget where I use `mat-chip-list` and `mat-chip` to render active filters, I'm using a component method to populate `mat-chip-list` but it's causing the entire application to freeze (the method returns a javascript array of objects instead of observable).\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\nUse an array of objects to render the `mat-chip-list`.\r\nhttps://stackblitz.com/edit/components-issue-fpjhzo\r\n\r\nfilter.component.ts\r\n```\r\nget activeFilterOptionsList(): any[] {\r\n    const activeOptions = this.activeFilterOptions;\r\n    let output: any[] = [];\r\n    for (const key in activeOptions) {\r\n      output = [...activeOptions[key], ...output];\r\n    }\r\n    return output;\r\n}\r\n```\r\n\r\nfilter.component.html\r\n```\r\n<mat-chip-list>\r\n    <mat-chip \r\n        *ngFor=\"let option of activeFilterOptions\" \r\n        (removed)=\"onChipRemoved($event.chip)\" \r\n        [value]=\"option.name\">\r\n                        {{option.name}}\r\n         <button matChipRemove>\r\n             <mat-icon>cancel</mat-icon>\r\n         </button>\r\n    </mat-chip>\r\n</mat-chip-list>\r\n```\r\n\r\n### Expected Behavior\r\n\r\n`mat-chip-list` should be rendered with an array of objects, not only with Observable.\r\n\r\n### Actual Behavior\r\n\r\n`mat-chip-list` freezes the application if an array of objects is used.\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 14.2\r\n- CDK/Material: 14.2.7\r\n- Browser(s): Chrome\r\n- Operating System: macOS\r\n","Url":"https://github.com/angular/components/issues/26399","RelatedDescription":"Open issue \"bug(mat-chip): Using an array of objects from a component's method hangs the application\" (#26399)"},{"Id":"1528715493","IsPullRequest":false,"CreatedAt":"2023-01-11T09:36:36","Actor":"arambazamba","Number":"26398","RawContent":null,"Title":"Angular CDK BreakpointObserver","State":"open","Body":"### Documentation Feedback\n\nCan you please provide a sample on how to correctly initialize BreakpointObserver with strict prop initialization?\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/layout/api#BreakpointObserver","Url":"https://github.com/angular/components/issues/26398","RelatedDescription":"Open issue \"Angular CDK BreakpointObserver\" (#26398)"},{"Id":"1528642127","IsPullRequest":false,"CreatedAt":"2023-01-11T08:41:21","Actor":"ueoeae","Number":"26396","RawContent":null,"Title":"help(Migrating Material): Getting errors when trying to migrate materials","State":"open","Body":"### What are you trying to do?\n\nTrying to upgrade from Angular v12 to Angular v15. Managed to get my app running on v15 but there are some styling issuses. I am now trying to run `ng generate @angular/material:mdc-migration` to see if this fixes some of the issues. However, I am getting errors when trying to run this command (a lot of similar ones), here is an example:\r\n\r\n    CssSyntaxError: <css input>:2:3: Unknown word\r\n\r\n      1 | .header-container\r\n    > 2 |   display: flex\r\n        |   ^\r\n      3 |   margin: 24px 40px 10px\r\n      4 | \r\n    \r\n    Failed to process stylesheet: /src/app/decks/about/about.component.sass (see error above).\r\n\r\nAny ideas what is causing this?\n\n### What troubleshooting steps have you tried?\n\nDon't know where to start.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Environment\n\n- Angular: 15.0.5\r\n- CDK/Material: 15.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26396","RelatedDescription":"Open issue \"help(Migrating Material): Getting errors when trying to migrate materials\" (#26396)"},{"Id":"1525226840","IsPullRequest":false,"CreatedAt":"2023-01-10T18:12:18","Actor":"webmichelle","Number":"26387","RawContent":null,"Title":"bug(theming): Custom typography not applied to all typography levels","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen defining a custom typography with `mat.define-typography-config` and adding a default font-family for all levels it won't be properly applied to all levels.\r\n\r\nI've created a reproduction in [this](https://stackblitz.com/edit/angular-ivy-2ejcd4?file=src%2Fapp%2Fapp.component.ts) Stackblitz.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a custom typography config with `mat.define-typography-config`\r\n2. Define a custom default font-family like so:\r\n\r\n```scss\r\n$custom-typography-config: mat.define-typography-config(\r\n  $font-family: \"Source Sans Pro\",\r\n  $headline-1:\r\n    mat.define-typography-level(\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-2:\r\n    mat.define-typography-level(\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-3:\r\n    mat.define-typography-level(\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-4:\r\n    mat.define-typography-level(\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-5:\r\n    mat.define-typography-level(\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-6:\r\n    mat.define-typography-level(\r\n      $font-size: 34px,\r\n      $line-height: 41px,\r\n    ),\r\n  $subtitle-1:\r\n    mat.define-typography-level(\r\n      $font-size: 28px,\r\n      $line-height: 36px,\r\n    ),\r\n  $subtitle-2:\r\n    mat.define-typography-level(\r\n      $font-size: 22px,\r\n      $line-height: 29px,\r\n    ),\r\n  $body-1:\r\n    mat.define-typography-level(\r\n      $font-size: 14px,\r\n      $line-height: 22px,\r\n    ),\r\n  $body-2:\r\n    mat.define-typography-level(\r\n      $font-size: 14px,\r\n      $line-height: 22px,\r\n      $font-weight: bold,\r\n    ),\r\n  $caption:\r\n    mat.define-typography-level(\r\n      $font-size: 12px,\r\n      $line-height: 22px,\r\n    ),\r\n  $button:\r\n    mat.define-typography-level(\r\n      $font-size: 12px,\r\n      $line-height: 22px,\r\n    ),\r\n);\r\n```\r\n3. Add `mat-select` with a view options to your application and wrap it in a `mat-form-field`\r\n4. Now the font-family won't be applied to the select's label and option labels.\r\n5. When adding `$font-family: \"Source Sans Pro\"` to every single `mat.define-typography-level` (like in the code below) it works.\r\n\r\n```scss\r\n$custom-typography-config: mat.define-typography-config(\r\n  $font-family: \"Source Sans Pro\",\r\n  $headline-1:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-2:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-3:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-4:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-5:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 42px,\r\n      $line-height: 46px,\r\n    ),\r\n  $headline-6:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 34px,\r\n      $line-height: 41px,\r\n    ),\r\n  $subtitle-1:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 28px,\r\n      $line-height: 36px,\r\n    ),\r\n  $subtitle-2:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 22px,\r\n      $line-height: 29px,\r\n    ),\r\n  $body-1:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 14px,\r\n      $line-height: 22px,\r\n    ),\r\n  $body-2:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 14px,\r\n      $line-height: 22px,\r\n      $font-weight: bold,\r\n    ),\r\n  $caption:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 12px,\r\n      $line-height: 22px,\r\n    ),\r\n  $button:\r\n    mat.define-typography-level(\r\n      $font-family: \"Source Sans Pro\",\r\n      $font-size: 12px,\r\n      $line-height: 22px,\r\n    ),\r\n);\r\n```\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe default `$font-family` config should be applied on all other typography levels\r\n\r\n### Actual Behavior\r\n\r\nThe default `$font-family` config is not applied to all typography levels\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.2\r\n- CDK/Material: 15.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26387","RelatedDescription":"Closed issue \"bug(theming): Custom typography not applied to all typography levels\" (#26387)"},{"Id":"1527154699","IsPullRequest":true,"CreatedAt":"2023-01-10T18:12:17","Actor":"crisbeto","Number":"26394","RawContent":null,"Title":"fix(material/core): default font family not applied to custom typography levels","State":"closed","Body":"Fixes the following regressions with the new typography config:\r\n* After #25789, the top-level font family wasn't being applied to the individual levels anymore.\r\n* Custom typography levels were defaulting to a `null` font family while the default ones were defaulting to `Roboto` which was inconsistent. Now they both default to `Roboto` like they did in the legacy config.\r\n\r\nI've also set up tests for the config since changing the logic can be annoying to debug.\r\n\r\nFixes #26387.","Url":"https://github.com/angular/components/pull/26394","RelatedDescription":"Closed or merged PR \"fix(material/core): default font family not applied to custom typography levels\" (#26394)"},{"Id":"1526344528","IsPullRequest":false,"CreatedAt":"2023-01-10T07:57:56","Actor":"andreisrob","Number":"26393","RawContent":null,"Title":"bug(Dialog): MatDialogClose","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nThe MatDialogClose directive has a method for finding an open dialog, and uses the dialog container's css class name, which has been changed in version 15.\r\n\r\n[See here](https://github.com/angular/components/blob/69598f113be73a29a9216e1b8280158041fe823e/src/material/dialog/dialog-content-directives.ts#L160)\r\n\r\nThe css class `mat-dialog-container` no longer exists, and must be changed to `mat-mdc-dialog-container`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Include the `MatDialogClose` directive in a dialog via TemplateRef\r\n2. Click the button that has the directive\r\n\r\n\r\n### Expected Behavior\r\n\r\nDialog should close\r\n\r\n### Actual Behavior\r\n\r\nDialog does not close\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26393","RelatedDescription":"Closed issue \"bug(Dialog): MatDialogClose\" (#26393)"},{"Id":"1525361815","IsPullRequest":false,"CreatedAt":"2023-01-10T07:57:45","Actor":"fikkatra","Number":"26389","RawContent":null,"Title":"bug(theming): CSS classes for typography levels (e.g. .mat-caption) do not work anymore","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen using CSS classes to set a typography level (cf. [the documentation](https://material.angular.io/guide/typography#typography-configs-and-theming)), the styles are not applied. \r\n\r\nE.g. setting `.mat-caption` or `.mat-headline-3` does't have any effect.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Apply the `mat-caption` or `mat-headline-3` CSS class to a HTML element containing text\r\n\r\nStackblitz: https://stackblitz.com/edit/angular-pmykqc?file=src/app/app.module.ts (see index.html)\n\n### Expected Behavior\n\nThe element should be rendered with a 'caption', resp. headline-3 style, as documented in [the docs](https://material.angular.io/guide/typography#typography-configs-and-theming)\n\n### Actual Behavior\n\nApplying the class doesn't have any effect\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26389","RelatedDescription":"Closed issue \"bug(theming): CSS classes for typography levels (e.g. .mat-caption) do not work anymore\" (#26389)"},{"Id":"1526291637","IsPullRequest":false,"CreatedAt":"2023-01-09T20:39:41","Actor":"MarkWDudley","Number":"26392","RawContent":null,"Title":"docs-bug(LANDING_PAGE): Slide Toggle example image","State":"open","Body":"### Documentation Feedback\n\nThe featured component image for slide-toggle is out of date, it uses an obsolete styling.\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/26392","RelatedDescription":"Open issue \"docs-bug(LANDING_PAGE): Slide Toggle example image\" (#26392)"},{"Id":"1526185066","IsPullRequest":true,"CreatedAt":"2023-01-09T19:28:48","Actor":"wagnermaciel","Number":"26391","RawContent":null,"Title":"test(multiple): add performance testing page to dev-app","State":"open","Body":"* provides easy setup for debugging the rendering speed of our components","Url":"https://github.com/angular/components/pull/26391","RelatedDescription":"Open PR \"test(multiple): add performance testing page to dev-app\" (#26391)"},{"Id":"1525848473","IsPullRequest":false,"CreatedAt":"2023-01-09T15:46:38","Actor":"CarlaAdrianaMorosan","Number":"26390","RawContent":null,"Title":"bug(MatSelect): Select has more options active","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSelect has more options active (class .mat-active applied on more than one <mat-option>)\n\n### Reproduction\n\nCode sample: https://stackblitz.com/edit/angular-pbxnro?file=src/app/select-example.html\r\n\r\nSteps to reproduce:\r\n1. Click in the input to open the list\r\n2. Click outside in order to close the list\r\n3. Click on 'Update with 'Tacos'' button\r\n4. Click in the input to open the list\n\n### Expected Behavior\n\nThere is only one <mat-option> element which is active (has .mat-active class applied).\n\n### Actual Behavior\n\nThere are 2 <mat-option> elements that have the .mat-active class applied \r\n\r\n![image](https://user-images.githubusercontent.com/79568980/211343379-6720ba85-1ba9-4eb5-a6d8-595b321cc2c2.png)\r\n\r\n\n\n### Environment\n\n- Angular: 14.2.10\r\n- CDK/Material: 14.2.7\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26390","RelatedDescription":"Open issue \"bug(MatSelect): Select has more options active\" (#26390)"},{"Id":"1525173049","IsPullRequest":true,"CreatedAt":"2023-01-09T11:45:18","Actor":"crisbeto","Number":"26386","RawContent":null,"Title":"fix(cdk/drag-drop): receiving class not updated in OnPush component","State":"closed","Body":"Fixes that the `cdk-drop-list-receiving` class wasn't being updated when two lists are connected across components boundaries that are using OnPush change detection.\r\n\r\nFixes #26362.","Url":"https://github.com/angular/components/pull/26386","RelatedDescription":"Closed or merged PR \"fix(cdk/drag-drop): receiving class not updated in OnPush component\" (#26386)"},{"Id":"1525301375","IsPullRequest":false,"CreatedAt":"2023-01-09T10:23:42","Actor":"fikkatra","Number":"26388","RawContent":null,"Title":"bug(mat-stepper): Custom font not applied to mat-stepper","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen applying a custom font through theming, the font is not applied to some components, e.g. mat-stepper. Other components like mat-button, work well with the custom font.\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Import the custom font\r\n2. Create a font config with mat.define-typography-config and set $font-family to the custom font\r\n3. Apply the typography config to the theme\r\n4. Render a mat-stepper component\r\n\r\nSee [this StackBlitz](https://stackblitz.com/edit/angular-rtlw1e?file=src/theme.scss). This is a fork of one of the mat-stepper examples [from the docs](https://material.angular.io/components/stepper/examples), with changes applied to (only) theme.scss.\r\n\r\nOn the contrary, applying the same steps and rendering a mat-button, everything works well and the button is rendered with the custom font. See [this StackBlitz](https://stackblitz.com/edit/angular-av8kdt?file=src/theme.scss).\r\n\n\n### Expected Behavior\n\nText within mat-stepper should use the custom font.\n\n### Actual Behavior\n\nText within mat-stepper uses the default font family Roboto.\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26388","RelatedDescription":"Open issue \"bug(mat-stepper): Custom font not applied to mat-stepper\" (#26388)"},{"Id":"1525080052","IsPullRequest":false,"CreatedAt":"2023-01-09T07:35:00","Actor":"iKrishnaSahu","Number":"26385","RawContent":null,"Title":"feat(button): Any plan to support structural css var properties?","State":"open","Body":"### Feature Description\r\n\r\nDo you guys have anything already planned to support below properties as css var -\r\n- padding\r\n- height (this is supported but it is getting overridden by non css var styling)\r\n- opacity (static/hover)\r\n\r\nAlso some of the theming css vars are missing - \r\n- border-color\r\n\r\nThis same goes for other components as well\r\n\r\n### Use Case\r\n\r\nWe are creating a design system and we need a robust solution to implement it.\r\nWe are trying to override material component with CSS variables.\r\nIs there any better approach of overriding styles of material component other than css vars?","Url":"https://github.com/angular/components/issues/26385","RelatedDescription":"Open issue \"feat(button): Any plan to support structural css var properties?\" (#26385)"},{"Id":"1524732552","IsPullRequest":false,"CreatedAt":"2023-01-08T23:38:19","Actor":"jalipert","Number":"26384","RawContent":null,"Title":"bug(mat-table): Re-orderable sticky columns become un-sticky if you start dragging, abort the drag, and then scroll","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf you create a Material Design Table with **reorderable columns** that are also **sticky**, the column headers become un-sticky if you start to reorder a column, abort, and then scroll.\r\n\r\nStackBlitz that reproduces the issue: https://stackblitz.com/edit/angular-kyaurw?file=src/app/table-sticky-header-example.html\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/angular-kyaurw?file=src/app/table-sticky-header-example.html\r\n2. Click and hold a column header and start to drag it, but release the mouse button before dropping it in a new location\r\n3. Scroll down\r\n4. The column header is no longer sticky (see screenshot if the issue)\r\n![unsticky_example](https://user-images.githubusercontent.com/1097608/211224588-af3abd24-95bd-4bbd-96c6-75d94e4bd297.png)\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nIf you abort a drag/drop, the column header should still be sticky like all of the other headers.\r\n\r\n### Actual Behavior\r\n\r\nIf you abort a drag/drop, the column header you clicked is no longer sticky.\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26384","RelatedDescription":"Open issue \"bug(mat-table): Re-orderable sticky columns become un-sticky if you start dragging, abort the drag, and then scroll\" (#26384)"},{"Id":"1524418895","IsPullRequest":false,"CreatedAt":"2023-01-08T09:17:38","Actor":"victor314159","Number":"26383","RawContent":null,"Title":"bug(mat-tab): mat-tab inside mat-menu sometimes dot not display content correctly","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen puting a mat-tab inside a mat-menu, I sometimes observe a strange behavior: the content of the mat-tab is not displayed.\r\n\r\n```HTML\r\n<mat-menu #menu=\"matMenu\">\r\n  <mat-tab-group (click)=\"selectTab($event)\">\r\n    <mat-tab label=\"Affichage\"> ABC </mat-tab>\r\n    <mat-tab label=\"Export\"> DEF </mat-tab>\r\n  </mat-tab-group>\r\n</mat-menu>\r\n```\r\n![rEucm](https://user-images.githubusercontent.com/13045947/211188556-23516db5-a2a3-45e4-9ed8-eda906368249.gif)\r\n\r\nA SO question is opened here: https://stackoverflow.com/questions/75043599/mat-tab-inside-mat-menu-sometimes-dot-not-display-content-correctly\n\n### Reproduction\n\nSteps to reproduce:\r\nOpen https://stackblitz.com/edit/angular-kzvnrv?file=src/app/tab-group-basic-example.html\r\nOpen the menu, switch between the tabs, then close the menu, then reopen it.\r\n\n\n### Expected Behavior\n\nThe content of the mat-tabs should always be visible.\n\n### Actual Behavior\n\nSometimes the content of the tab will not show, just after open the menu again\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.4\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26383","RelatedDescription":"Open issue \"bug(mat-tab): mat-tab inside mat-menu sometimes dot not display content correctly\" (#26383)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-01-12T03:30:02.9107437Z","RunDurationInMilliseconds":2010}