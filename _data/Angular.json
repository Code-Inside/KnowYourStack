{"Data":{"Angular-Issues":{"Issues":[{"Id":"1973244437","IsPullRequest":true,"CreatedAt":"2023-11-01T23:17:07","Actor":"alxhub","Number":"52487","RawContent":null,"Title":"Revert \"fix(compiler): project control flow root elements into correct slot (#52414)","State":"open","Body":"This reverts commit eb153584791a30a015469269a62fc9eb43dbf16a.","Url":"https://github.com/angular/angular/pull/52487","RelatedDescription":"Open PR \"Revert \"fix(compiler): project control flow root elements into correct slot (#52414)\" (#52487)"},{"Id":"1973241297","IsPullRequest":true,"CreatedAt":"2023-11-01T23:13:18","Actor":"atcastle","Number":"52486","RawContent":null,"Title":"fix(common): apply fixed_srcset_width values only to fixed srcsets","State":"open","Body":"(This PR is a copy of #52459, targeting 16.2.x. This bug effects applications using this feature in Angular 16, so the fix makes sense to apply as a patch.)\r\n\r\nThis fixes a bug in NgOptimizedImage where the FIXED_SRCSET_WIDTH_LIMIT was being applied to both \"fixed\" and \"responsive\" srcsets. As the constant name indicates, this is only supposed to apply to fixed images. For responsive images, not generating the srcset in this case is an antipattern, as it prevents the automatic srcset from correctly suggesting a smaller version of the image.\r\n\r\nNew tests included to prevent regression. CC: @AndrewKushnir @kara","Url":"https://github.com/angular/angular/pull/52486","RelatedDescription":"Open PR \"fix(common): apply fixed_srcset_width values only to fixed srcsets\" (#52486)"},{"Id":"1972881881","IsPullRequest":true,"CreatedAt":"2023-11-01T18:27:27","Actor":"clydin","Number":"52485","RawContent":null,"Title":"docs: additional application builder SSR conversion information","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nN/A\r\n\r\n## What is the new behavior?\r\n\r\nThis change updates the new build system migration guide with additional information regarding the steps needed to convert an existing SSR project to use the new integrated SSR capabilities.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52485","RelatedDescription":"Open PR \"docs: additional application builder SSR conversion information\" (#52485)"},{"Id":"1972625077","IsPullRequest":true,"CreatedAt":"2023-11-01T17:13:29","Actor":"alxhub","Number":"52484","RawContent":null,"Title":"Revert \"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove existing InternalViewRef (#52430)","State":"closed","Body":"This reverts commit a568bc5d97d143d72ed420890aa216b5ecb1699d as it breaks tests in g3.","Url":"https://github.com/angular/angular/pull/52484","RelatedDescription":"Closed or merged PR \"Revert \"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove existing InternalViewRef (#52430)\" (#52484)"},{"Id":"1971188584","IsPullRequest":true,"CreatedAt":"2023-11-01T15:08:06","Actor":"alxhub","Number":"52473","RawContent":null,"Title":"fix(core): effects wait for ngOnInit for their first run","State":"closed","Body":"When an effect is created in a component constructor, it might read signals which are derived from component inputs. These signals may be unreliable or (in the case of the proposed input signals) may throw if accessed before the component is first change detected (which is what makes required inputs available).\r\n\r\nDepending on the scenario involved, the effect may or may not run before this initialization takes place, which isn't a great developer experience. In particular, effects created during CD (e.g. via control flow) work fine, as do effects created in bootstrap thanks to the sync CD it performs. When an effect is created through dynamic component creation outside of CD though (such as on router navigations), it runs before the component is first CD'd, causing the issue.\r\n\r\nIn fact, in the signal components RFC we described how effects would wait until ngOnInit for their first execution for exactly this reason, but this behavior was never implemented as it was thought our effect scheduling design made it unnecessary. This is true of the regular execution of effects but the above scenario shows that *creation* of the effect is still vulnerable. Thus, this logic is needed.\r\n\r\nThis commit makes effects sensitive to their creation context, by injecting `ChangeDetectorRef` optionally. An effect created with an injector that's tied to a component will wait until that component is initialized before initially being scheduled. TestBed effect flushing is also adjusted to account for the additional interaction with change detection.\r\n","Url":"https://github.com/angular/angular/pull/52473","RelatedDescription":"Closed or merged PR \"fix(core): effects wait for ngOnInit for their first run\" (#52473)"},{"Id":"1972212290","IsPullRequest":false,"CreatedAt":"2023-11-01T11:43:25","Actor":"gsans","Number":"52483","RawContent":null,"Title":"Angular async/await handling makes LangChainJS fail","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, zone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhile trying the getting started code for LangChainJS I’ve noticed that async/await code in base.js fails to work. It’s supposed to wait for a request to comeback but it fails immediately as it doesn’t wait.\r\n\r\nZones and a Generator wrapper seems to be involved. It’s not clear if it’s Angular fault or LangChainJS built or both. A babel plugin that is used to wrap promises into generators could also be involved.\r\n\r\nWithout a fix LangChainJS the most popular library for GenerativeAI is unusable with Angular. It seems that OpenAI library may cause similar issues.\r\n\r\nIn order to reproduce you need an OpenAI api key.\r\n\r\nMore details available in this issue at LangChainJS \r\nhttps://github.com/langchain-ai/langchainjs/issues/3105#issuecomment-1787989568\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/langchain-ai/langchainjs/issues/3105#issuecomment-1787989568\n\n### Please provide the exception or error you saw\n\n```true\nERROR Error: Uncaught (in promise): TypeError: Cannot read properties of undefined (reading 'message')\r\nTypeError: Cannot read properties of undefined (reading 'message')\r\n    at base.cjs:233:34\r\n    at Generator.next (<anonymous>)\r\n    at asyncGeneratorStep (asyncToGenerator.js:3:1)\r\n    at _next (asyncToGenerator.js:22:1)\r\n    at _ZoneDelegate.invoke (zone.js:368:26)\r\n    at Object.onInvoke (core.mjs:11083:33)\r\n    at _ZoneDelegate.invoke (zone.js:367:52)\r\n    at Zone.run (zone.js:129:43)\r\n    at zone.js:1257:36\r\n    at _ZoneDelegate.invokeTask (zone.js:402:31)\r\n    at resolvePromise (zone.js:1193:31)\r\n    at zone.js:1100:17\r\n    at zone.js:1116:33\r\n    at asyncGeneratorStep (asyncToGenerator.js:6:1)\r\n    at _throw (asyncToGenerator.js:25:1)\r\n    at _ZoneDelegate.invoke (zone.js:368:26)\r\n    at Object.onInvoke (core.mjs:11083:33)\r\n    at _ZoneDelegate.invoke (zone.js:367:52)\r\n    at Zone.run (zone.js:129:43)\r\n    at zone.js:1257:36\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52483","RelatedDescription":"Open issue \"Angular async/await handling makes LangChainJS fail\" (#52483)"},{"Id":"1971999205","IsPullRequest":true,"CreatedAt":"2023-11-01T09:19:29","Actor":"arturovt","Number":"52482","RawContent":null,"Title":"refactor(core): do not run CDs when setting up image perf warnings","State":"open","Body":"This commit wraps the `load` event listener with `runOutsideAngular` to avoid running unnecessary change detections on asynchronous tasks spawned within the scope of the `ImagePerformanceWarning` functionality. This was previously causing extra change detection cycles in development mode and interfering with debugging.","Url":"https://github.com/angular/angular/pull/52482","RelatedDescription":"Open PR \"refactor(core): do not run CDs when setting up image perf warnings\" (#52482)"},{"Id":"1971746587","IsPullRequest":true,"CreatedAt":"2023-11-01T05:48:57","Actor":"jelbourn","Number":"52481","RawContent":null,"Title":"refactor(compiler): escape decorators in API JsDoc extraction","State":"open","Body":"TypeScript JsDoc parsing, by default, treats occurences of Angular decorators (e.g. `@Component`) in JsDoc comments as JsDoc tags. This commit escapes these decorator strings by copying the raw JS doc onto a dummy symbol in a new SourceFile to make TypeScript re-parse the comment.","Url":"https://github.com/angular/angular/pull/52481","RelatedDescription":"Open PR \"refactor(compiler): escape decorators in API JsDoc extraction\" (#52481)"},{"Id":"1971542440","IsPullRequest":true,"CreatedAt":"2023-11-01T01:40:35","Actor":"jelbourn","Number":"52480","RawContent":null,"Title":"build: add rules for generating block/element API data","State":"open","Body":"Adds build rules for \"artificially\" generating `DocEntry` collections for block and element APIs. The two rules are very similar, but _just_ different enough that it's worth having two separate implementations.\r\n\r\nThis PR temporarily duplicates the markdown sources from the dgeni versions before they have a more permanent home. ","Url":"https://github.com/angular/angular/pull/52480","RelatedDescription":"Open PR \"build: add rules for generating block/element API data\" (#52480)"},{"Id":"1971484783","IsPullRequest":true,"CreatedAt":"2023-11-01T00:32:07","Actor":"dylhunn","Number":"52479","RawContent":null,"Title":"Template Pipeline: defer `when`, nullary defer triggers, `templateRefExtractor`, deps fns, and two-way bindings","State":"open","Body":"Various fixes in the template pipeline:\r\n- When conditions, such as `@defer (when(expr))`, are now supported\r\n- Nullary forms of defer triggers, such as `@defer (on hover)`, now use the placeholder element as an implicit trigger\r\n- Defer dependency resolver functions are now generated, when a `defer` block has external dependencies\r\n- Emit `templateRefExtractor` as an argument to the `template` instruction when an `ng-template` has local refs\r\n- Two-way bindings with an implicit receiver  are now ingested correctly (e.g. `[(ngModel)]=\"foo\"`, which implicitly assigns `ctx.foo = $event` in the `ngModelChange` listener)\r\n- Source maps on self-closing elements are now generated for the `elementEnd` instruction, which might sometimes be present (e.g. `input` with an event)\r\n- Enable some passing tests\r\n\r\nSee individual commits for details.","Url":"https://github.com/angular/angular/pull/52479","RelatedDescription":"Open PR \"Template Pipeline: defer `when`, nullary defer triggers, `templateRefExtractor`, deps fns, and two-way bindings\" (#52479)"},{"Id":"1971421512","IsPullRequest":true,"CreatedAt":"2023-10-31T23:07:19","Actor":"arturovt","Number":"52478","RawContent":null,"Title":"fix(platform-browser): check whether attribute value is the same before setting","State":"open","Body":"This commit updates the implementation of the DOM renderer and its `setAttribute` method. With these new changes, it checks whether the attribute value is the same before setting it. This resolves issues related to `src` attributes that may be set again during client-side rendering (after the content has been initially rendered on the server). Setting `src` multiple times, even with the same values, can force the browser to load the resource again.","Url":"https://github.com/angular/angular/pull/52478","RelatedDescription":"Open PR \"fix(platform-browser): check whether attribute value is the same before setting\" (#52478)"},{"Id":"1971419291","IsPullRequest":false,"CreatedAt":"2023-10-31T23:04:16","Actor":"arturovt","Number":"52477","RawContent":null,"Title":"Static attributes are not hydrated","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThere's a hydration issue when static attributes are set again during Angular's client-side rendering. This can lead to problems with `src` attributes that load external resources. Browsers consider each change to the `src` attribute as a new request to load the specified resource.\r\n\r\nFor example, when the server returns `<iframe src=\"...\"` pointing to a YouTube video that starts playing after the browser has rendered the content but before `bootstrapApplication` is called, an issue arises. When `bootstrapApplication` is invoked, Angular initiates its 'initialization' flow, during which it calls `setAttribute` on this `iframe` once more. Consequently, the video may flicker as the browser attempts to reload it.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/arturovt/hydration-iframe-src-issue\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.7\r\nNode: 18.13.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52477","RelatedDescription":"Open issue \"Static attributes are not hydrated\" (#52477)"},{"Id":"1971378502","IsPullRequest":true,"CreatedAt":"2023-10-31T22:19:45","Actor":"atscott","Number":"52476","RawContent":null,"Title":"Use consumer dirtiness to drive whether a view should refresh","State":"open","Body":"First commit is from https://github.com/angular/angular/pull/52475\r\n\r\n## commit 2:\r\nrefactor(core): Update LView consumer to use only 1 consumer for a component\r\n\r\nThis commit updates the reactive consumer used for `LView`s to be shared\r\nbetween a component and its embedded views. This allows us to use the\r\nconsumer flag directly for a dirty indicator rather than needing to\r\nfind a component view for updating its flags.\r\n\r\nIn the future, this will also allow us to effectively poll producers to see if\r\nthey really changed before refreshing a view.\r\n\r\n## commit 3\r\nrefactor(core): Do not refresh view if producers did not actually change\r\n\r\nProducers represent values which can deliver change notifications.\r\nWhen a producer value is changed, a change notification is propagated through the graph,\r\nnotifying live consumers which depend on the producer of the potential update.\r\nNote here that this is a _potential_ update.\r\n\r\nA producer may not have actually \"changed\" based on its equality function. With\r\nthis commit, before refreshing a view that is only marked for refresh\r\nbecause its consumer is dirty, we poll producers for change to see if\r\nthey really have. If not, we can skip the refresh. The example test in this commit\r\nshows that a `computed` which depends on a `signal` that is updated but\r\nproduces a value that is the same as before will _not_ cause the\r\ncomponent's template to refresh.\r\n\r\nfixes https://github.com/angular/angular/issues/51797\r\n","Url":"https://github.com/angular/angular/pull/52476","RelatedDescription":"Open PR \"Use consumer dirtiness to drive whether a view should refresh\" (#52476)"},{"Id":"1971255372","IsPullRequest":true,"CreatedAt":"2023-10-31T21:59:34","Actor":"alxhub","Number":"52474","RawContent":null,"Title":"fix(core): add `rejectErrors` option to `toSignal`","State":"closed","Body":"By default, `toSignal` transforms an `Observable` into a `Signal`, including the error channel of the Observable. When an error is received, the signal begins throwing the error.\r\n\r\n`toSignal` is intended to serve the same purpose as the `async` pipe, but the async pipe has a different behavior with errors: it rejects them outright, throwing them back into RxJS. Rx then propagates the error into the browser's uncaught error handling logic. In the case of Angular, the error is then caught by zone.js and reported via the application's `ErrorHandler`.\r\n\r\nThis commit introduces a new option for `toSignal` called `rejectErrors`. With that flag set, `toSignal` copies the async pipe's behavior, allowing for easier migrations.\r\n\r\nFixes #51949\r\n","Url":"https://github.com/angular/angular/pull/52474","RelatedDescription":"Closed or merged PR \"fix(core): add `rejectErrors` option to `toSignal`\" (#52474)"},{"Id":"1969362433","IsPullRequest":true,"CreatedAt":"2023-10-31T21:58:10","Actor":"jelbourn","Number":"52462","RawContent":null,"Title":"refactor(compiler): rename decorator extracted \"options\" to \"members\"","State":"closed","Body":"The property name `members` makes it easier to use the same rendering code as other constructs.","Url":"https://github.com/angular/angular/pull/52462","RelatedDescription":"Closed or merged PR \"refactor(compiler): rename decorator extracted \"options\" to \"members\"\" (#52462)"},{"Id":"1969273134","IsPullRequest":true,"CreatedAt":"2023-10-31T21:57:26","Actor":"atcastle","Number":"52459","RawContent":null,"Title":"fix(common): apply fixed_srcset_width value only to fixed srcsets","State":"closed","Body":"This fixes a bug in NgOptimizedImage where the FIXED_SRCSET_WIDTH_LIMIT was being applied to both \"fixed\" and \"responsive\" srcsets. As the constant name indicates, this is only supposed to apply to fixed images. For responsive images, not generating the srcset in this case is an antipattern, as it prevents the automatic srcset from correctly suggesting a smaller version of the image.\r\n\r\nNew tests included to prevent regression. CC: @AndrewKushnir @kara ","Url":"https://github.com/angular/angular/pull/52459","RelatedDescription":"Closed or merged PR \"fix(common): apply fixed_srcset_width value only to fixed srcsets\" (#52459)"},{"Id":"1969238535","IsPullRequest":true,"CreatedAt":"2023-10-31T21:55:56","Actor":"jessicajaniuk","Number":"52457","RawContent":null,"Title":"docs: update defer guide to use Deferrable View language","State":"closed","Body":"This updates the defer guide to use the recommended language of Deferrable Views.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] Documentation content changes\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52457","RelatedDescription":"Closed or merged PR \"docs: update defer guide to use Deferrable View language\" (#52457)"},{"Id":"1969246727","IsPullRequest":true,"CreatedAt":"2023-10-31T21:55:11","Actor":"AleksanderBodurri","Number":"52458","RawContent":null,"Title":"fix(core): ignore ENVIRONMENT_INTIIALIZER and INJECTOR_DEF_TYPES providers in getInjectorProviders","State":"closed","Body":"These special providers are configured when `walkProviderTree` is called. Because of this, they do not maintain any equality between subsequent runs of `walkProviderTree`. This prevents us from being able to compare the provider objects for equality between runs.\r\n\r\nThis commit changes the behaviour of getInjectorProviders to ignore these providers. In the future we will consider another approach for differentiating these providers from legitimate ones provided by users rather than the framework.\r\n","Url":"https://github.com/angular/angular/pull/52458","RelatedDescription":"Closed or merged PR \"fix(core): ignore ENVIRONMENT_INTIIALIZER and INJECTOR_DEF_TYPES providers in getInjectorProviders\" (#52458)"},{"Id":"1971323862","IsPullRequest":true,"CreatedAt":"2023-10-31T21:23:50","Actor":"atscott","Number":"52475","RawContent":null,"Title":"refactor(core): Remove warning about signal set during template execution","State":"open","Body":"The significance of the combination of https://github.com/angular/angular/pull/51854 and https://github.com/angular/angular/pull/52302 went mostly\r\nunnoticed. The first removed a unidirectional data flow constraint for\r\ntransplanted views and the second updated the signal implementation to\r\nshare transplanted view logic. The result is that we automatically get behavior\r\nthat (mostly) removes `ExpressionChangedAfterItWasCheckedError` when signals are\r\nused to drive application state to DOM synchronization.\r\n\r\nfixes https://github.com/angular/angular/issues/50320","Url":"https://github.com/angular/angular/pull/52475","RelatedDescription":"Open PR \"refactor(core): Remove warning about signal set during template execution\" (#52475)"},{"Id":"1971109614","IsPullRequest":true,"CreatedAt":"2023-10-31T18:48:16","Actor":"jelbourn","Number":"52472","RawContent":null,"Title":"build: add target to generate api manifest","State":"open","Body":"This adds a target to generate a manifest of all public api symbols. The majority of inputs are generated from the extraction rules, but API entries that don't have a TypeScript source symbol (elements and blocks) are defined in hand-written json collections.","Url":"https://github.com/angular/angular/pull/52472","RelatedDescription":"Open PR \"build: add target to generate api manifest\" (#52472)"},{"Id":"1970819294","IsPullRequest":false,"CreatedAt":"2023-10-31T16:13:44","Actor":"sroucheray","Number":"52471","RawContent":null,"Title":"i18n: documentation clarification on what is the plural placeholder/interpolation word should be","State":"open","Body":"### Describe the problem that you experienced\n\nThere seems to be two ways to indicate the value to use in plural forms.\r\nOne is by using an interpolation as indicated in [this documentation](https://v12.angular.io/guide/i18n-common-prepare#mark-plurals):\r\n![image](https://github.com/angular/angular/assets/169818/a32735af-d158-413e-ab5c-b3591480b29f)\r\n\r\nthe other is to use the `#` character as indicated in [this documentation](https://angular.io/api/common/I18nPluralPipe):\r\n![image](https://github.com/angular/angular/assets/169818/72b5715b-4fcf-4228-b8a2-aff1af09bcb7)\r\n\r\nI18n is hard enough that, IMHO, there should be at least a clarification on what we should use in what condition and if both forms are interchangeable. \r\n\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/52471","RelatedDescription":"Open issue \"i18n: documentation clarification on what is the plural placeholder/interpolation word should be\" (#52471)"},{"Id":"1970450607","IsPullRequest":false,"CreatedAt":"2023-10-31T13:28:30","Actor":"asadakkhan","Number":"52470","RawContent":null,"Title":"Implementing Dynamic Theme Color #52469","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nYes\r\n\r\nDescription\r\nOur project requires dynamic theming based on backend API responses. The theme color is determined by the API and needs to be reflected across the application's styles without resorting to inline styles.\r\n\r\nGlobal SCSS Variable: Set up a global SCSS variable for the root color that can be easily modified.\r\nDynamic Theme Switching: Implement a mechanism to update the global SCSS variable dynamically based on the theme color received from the backend API.\r\nAvoiding Inline Styles: Ensure that no inline styles are added to the project to maintain a clean and maintainable codebase.\r\nMultiple Themes: Design the system in a way that allows for easy addition of multiple themes, each with its unique color scheme, using SCSS variables.\r\n\r\nPlease provide a link to a minimal reproduction of the bug\r\nNo response\r\n\r\nPlease provide the exception or error you saw\r\nNo response\r\n\r\nPlease provide the environment you discovered this bug in (run ng version)\r\nNo response\r\n\r\nAnything else?\r\nNo response\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52470","RelatedDescription":"Closed issue \"Implementing Dynamic Theme Color #52469\" (#52470)"},{"Id":"1970427490","IsPullRequest":false,"CreatedAt":"2023-10-31T13:10:11","Actor":"asadakkhan","Number":"52469","RawContent":null,"Title":"Implementing Dynamic Theme Color","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nOur project requires dynamic theming based on backend API responses. The theme color is determined by the API and needs to be reflected across the application's styles without resorting to inline styles.\r\n\r\nGlobal SCSS Variable: Set up a global SCSS variable for the root color that can be easily modified.\r\nDynamic Theme Switching: Implement a mechanism to update the global SCSS variable dynamically based on the theme color received from the backend API.\r\nAvoiding Inline Styles: Ensure that no inline styles are added to the project to maintain a clean and maintainable codebase.\r\nMultiple Themes: Design the system in a way that allows for easy addition of multiple themes, each with its unique color scheme, using SCSS variables.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52469","RelatedDescription":"Closed issue \"Implementing Dynamic Theme Color\" (#52469)"},{"Id":"1970303128","IsPullRequest":false,"CreatedAt":"2023-10-31T12:15:54","Actor":"asadakkhan","Number":"52467","RawContent":null,"Title":"Implementing Dynamic Theme Colors via SCSS Variables","State":"closed","Body":"\r\ncommon\r\n\r\n### Description\r\n\r\nI set up a global style scss root color.I wish to modify our ts file's style scss variable. I want to avoid adding any inline styles to the project.\r\nThe backend api decides the theme color. \r\nWhich methods work best for doing that?\r\nI would like to use a SCSS variable to add many themes.\r\n\r\nOur project requires dynamic theming based on backend API responses. The theme color is determined by the API and needs to be reflected across the application's styles without using inline styles.\r\n\r\n### Proposed solution\r\n\r\nImplement a system where SCSS variables are used to define the root color of the application. These variables should be dynamically updated based on the backend API's response, allowing seamless theming throughout the project without the need for inline styles.\r\n\r\n\r\n\r\n### Alternatives considered\r\n\r\nGlobal SCSS Variable: Set up a global SCSS variable for the root color that can be easily modified.\r\nDynamic Theme Switching: Implement a mechanism to update the global SCSS variable dynamically based on the theme color received from the backend API.\r\nAvoiding Inline Styles: Ensure that no inline styles are added to the project to maintain a clean and maintainable codebase.\r\nMultiple Themes: Design the system in a way that allows for easy addition of multiple themes, each with its unique color scheme, using SCSS variables.","Url":"https://github.com/angular/angular/issues/52467","RelatedDescription":"Closed issue \"Implementing Dynamic Theme Colors via SCSS Variables\" (#52467)"},{"Id":"1970304577","IsPullRequest":true,"CreatedAt":"2023-10-31T11:59:04","Actor":"IgorVaryvoda","Number":"52468","RawContent":null,"Title":"feat(common): add loader for sirv","State":"open","Body":"This PR adds a Sirv image loader for `ng_optimized_image`\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52468","RelatedDescription":"Open PR \"feat(common): add loader for sirv\" (#52468)"},{"Id":"1970235736","IsPullRequest":false,"CreatedAt":"2023-10-31T11:21:24","Actor":"sschoeb","Number":"52466","RawContent":null,"Title":"Zone.js destroys ckeditor for vue","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nFirst of all: I'm not sure if this is the correct repository to post this issue. But as zone.js is the reason for the issue, I think I'm at least not completely wrong. Please let me know if you think otherwise.\r\n\r\nMy setup:\r\n\r\n- I'm runnign a vue-application usign the ckeditor as described here: https://ckeditor.com/docs/ckeditor5/latest/installation/integrations/vuejs-v3.html\r\n- The Vuew app does have tow pages: Startpage and about. On the about-page, I've included the ckeditor.\r\n- In a different project we have built an angular element which should be integratable on any other website (e.g. in vue application stated above)\r\n- Including the angular element within the vue-app (adding a script tag loading the js and adding the tag) does show the element, everything looks fine\r\n\r\nThe issue:\r\n\r\nNavigating from the about-page back to the starpage, does throw an error in the console and breaks the Vue app. I do see the following error:\r\n\r\n```\r\nwidget.js:96697 Unhandled Promise rejection: Cannot read properties of undefined (reading 'data-ck-expando') ; Zone: <root> ; Task: Promise.then ; Value: TypeError: Cannot read properties of undefined (reading 'data-ck-expando')\r\n    at emittermixin.ts:361:9\r\n    at No (emittermixin.ts:362:1)\r\n    at Ii._getProxyEmitter (emittermixin.ts:152:40)\r\n    at emittermixin.ts:166:27\r\n    at Array.map (<anonymous>)\r\n    at Ii._getAllProxyEmitters (emittermixin.ts:166:6)\r\n    at Ii.stopListening (emittermixin.ts:126:32)\r\n    at Ii.destroy (focustracker.ts:106:8)\r\n    at yf.destroy (editorui.ts:179:21)\r\n    at yf.destroy (classiceditorui.ts:117:9) TypeError: Cannot read properties of undefined (reading 'data-ck-expando')\r\n    at http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3817:22\r\n    at No (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3818:12)\r\n    at Ii._getProxyEmitter (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3776:23)\r\n    at http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3779:180\r\n    at Array.map (<anonymous>)\r\n    at Ii._getAllProxyEmitters (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3779:163)\r\n    at Ii.stopListening (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:3766:33)\r\n    at Ii.destroy (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:4385:18)\r\n    at yf.destroy (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:16201:53)\r\n    at yf.destroy (http://localhost:5173/node_modules/.vite/deps/@ckeditor_ckeditor5-build-classic.js?v=78e69277:16751:19)\r\n```\r\n\r\nWorkaround:\r\nThere are two options to fix the issue:\r\n\r\n1. Remove zone.js completely from the angular element.\r\n2. Add the following line to the widget: `(window as any).__Zone_disable_toString = true;`\r\n\r\nI've attached a repository which does include the vue app mentioned above. It does load our angular element in HomeView.vue. When you start it and then navigate from about to the startpage, you'll see the error. \r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/sschoeb/vue-ckeditor-zone-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular: 15.2.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nQuestion: How big is the impact when disabling toString() using the workaround number 2 described above? Is that more cosmetic or do I have to expect issues?","Url":"https://github.com/angular/angular/issues/52466","RelatedDescription":"Open issue \"Zone.js destroys ckeditor for vue\" (#52466)"},{"Id":"1970119938","IsPullRequest":true,"CreatedAt":"2023-10-31T10:18:12","Actor":"pkozlowski-opensource","Number":"52465","RawContent":null,"Title":"refactor(core): short-circuits invocations of signals equality","State":"open","Body":"This change skips signal equality calls on set / update when the\r\ntwo values (current and the new one) are referentially identical.\r\nThe assumption is that equality function implementation should\r\nnever return false for 2 values that are the same (according to\r\nthe Object.is logic).","Url":"https://github.com/angular/angular/pull/52465","RelatedDescription":"Open PR \"refactor(core): short-circuits invocations of signals equality\" (#52465)"},{"Id":"1969294196","IsPullRequest":false,"CreatedAt":"2023-10-31T05:36:10","Actor":"naveedahmed1","Number":"52460","RawContent":null,"Title":"control-flow migration throws Cannot set properties of undefined error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI recently tried control flow migration schematics for my project using command `ng generate @angular/core:control-flow` but its throwing error `Cannot set properties of undefined (setting 'hasLineBreaks')`\n\n### Please provide a link to a minimal reproduction of the bug\n\nFor this I can add you to a private repo\n\n### Please provide the exception or error you saw\n\n```true\n`Cannot set properties of undefined (setting 'hasLineBreaks')`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.1\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, google-maps, material, platform-browser\r\n... platform-browser-dynamic, platform-server, pwa, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.1\r\n@angular-devkit/build-angular   17.0.0-rc.1\r\n@angular-devkit/core            17.0.0-rc.1\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/fire                   16.0.0\r\n@schematics/angular             17.0.0-rc.1\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52460","RelatedDescription":"Closed issue \"control-flow migration throws Cannot set properties of undefined error\" (#52460)"},{"Id":"1969436736","IsPullRequest":true,"CreatedAt":"2023-10-31T00:39:11","Actor":"dylhunn","Number":"52464","RawContent":null,"Title":"Template Pipeline: commenting and naming cleanups","State":"open","Body":"No new features -- just a variety of small commenting and naming cleanups to improve code health. See individual commits for details.","Url":"https://github.com/angular/angular/pull/52464","RelatedDescription":"Open PR \"Template Pipeline: commenting and naming cleanups\" (#52464)"},{"Id":"1969301431","IsPullRequest":false,"CreatedAt":"2023-10-30T22:08:05","Actor":"10kc-manoj","Number":"52461","RawContent":null,"Title":"ng extract-i18n bug when file has async pipe. Equiv-text extracting wrong characters.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nlocalize\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen a component's html file has an async pipe in it, all the items in the file marked for i18n extraction get incorrect equiv-text contents if they have a variable in them.\r\n\r\n**Example:**\r\nFor the HTML content\r\n```html\r\n<span i18n=\"@@someTransUnitKey\">{{ foodList?.length }} items exist</span>\r\n```\r\n**Expected `<source>` for the trans-unit in the xlf file is:**\r\n```html\r\n<source><x id=\"INTERPOLATION\" equiv-text=\"{{ foodList?.length }}\"/> items exist</source>\r\n```\r\n**But the `<source>` I get is:**\r\n```html\r\n<source><x id=\"INTERPOLATION\" equiv-text=\"i\"/> items exist</source>\r\n```\r\n\r\nThis makes it difficult to maintain code as adding an async pipe in a file throws a bunch of diffs in the xlf file. This is also problematic for our translators when the equiv-text blocks do not contain their expected context.\r\n\r\n**Observed Conditions that trigger this problem / Steps to reproduce:** (Check `test-bad.component.html` in the linked project)\r\n1) The html file should have an async pipe in it, like: \r\n```html\r\n<ng-container *ngIf=\"anyObservable | async\"> </ng-container>\r\n```\r\n2) The item tagged for extraction should contain a variable or nested HTML or both to trigger placeholders in the xlf file.\r\n3) The variable or nested HTML should be the first item in the tagged HTML element and should have no leading whitespace, for example: `<span i18n=\"@@test\"> {{test}} hello</span>` will extract properly, but: `<span i18n=\"@@test\">{{test}} hello</span>` will not have accurate equiv-text in its extraction.\r\n\r\n### Stackblitz link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-1zcqro?file=angular-hello%2Fsrc%2Flocale%2Fmessages.xlf\r\n_cd angular-hello_\r\n_npm i_\r\nTo generate xlf file: _ng extract-i18n angular-hello_\r\nTo run the app: _ng serve --open_\r\n\r\nPlease notice the xlf file linked and compare the `<source>` of trans-units with id `badComponentTitle` and `goodComponentTitle` in the linked stackblitz project. This is one of the more \"colorful\" examples that make our work inconvenient with the unexpected characters it has extracted. The only difference is that `test-bad-component` has an async pipe in its HTML file, while `test-good-component` does not.\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```","Url":"https://github.com/angular/angular/issues/52461","RelatedDescription":"Open issue \"ng extract-i18n bug when file has async pipe. Equiv-text extracting wrong characters.\" (#52461)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1973383012","IsPullRequest":false,"CreatedAt":"2023-11-02T02:21:44","Actor":"andrewalderson","Number":"26200","RawContent":null,"Title":"asyncToGenerator needs to be opt out in web workers","State":"open","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRelated #25708 #23546 \r\n\r\nIn reading the linked issues above I understand why the ```asyncToGenerator``` code is added but there needs to be an opt-out option especially when using web workers. I ran into an issue when trying to implement sqlite3 wasm in an Angular project using the ```@sqlite.org/sqlite-wasm``` package.  I have it working except when running in a worker and using the Origin Private File System. The Angular Cli will add ```var _asyncToGenerator = require(\"/{my local path}/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;``` to the top of the ```sqlite3-opfs-async-proxy.js``` file. This causes an ```Uncaught ReferenceError: require is not defined``` error.\r\n\r\nFirst, shouldn't this ```require``` statement have been converted to a ```___webpack-require___``` on the dev server?\r\n\r\nSecond, I know that the cli doesn't know this code is in a web worker so there needs to be a way for a developer to opt out of this behavior. I don't need ```zone.js``` or any Angular code running in my worker.\r\n\r\nThe last problem is that the ```require``` statement is not removed in the production build. Shouldn't this code be inlined if it is required?\n\n### Minimal Reproduction\n\nhttps://github.com/andrewalderson/angular-worker-sqlite3-wasm\r\n\r\nIf you open the console you will see the errors when you run this.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nnode ➜ /workspaces/angular-worker-sqlite3-wasm (main) $ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.9\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: linux x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.9\r\n@angular-devkit/build-angular   16.2.9\r\n@angular-devkit/core            16.2.9\r\n@angular-devkit/schematics      16.2.9\r\n@angular/cli                    16.2.9\r\n@schematics/angular             16.2.9\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26200","RelatedDescription":"Open issue \"asyncToGenerator needs to be opt out in web workers\" (#26200)"},{"Id":"1973192143","IsPullRequest":false,"CreatedAt":"2023-11-01T22:18:05","Actor":"yharaskrik","Number":"26199","RawContent":null,"Title":"Vite dev server fails to serve source maps","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.0-rc.3\n\n### Description\n\nWhen generating a fresh application with `npm init @angular@next --ssr` the application fails to load the sourcemaps when you open the dev tools.\r\n\r\n```\r\nWatch mode enabled. Watching for file changes...\r\n  ➜  Local:   http://localhost:4200/\r\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: '@vite/client.mjs.map'\r\n    at Recognizer.noMatchError (/Users/jaybell/packages/router/src/recognize.ts:61:12)\r\n    at <anonymous> (/Users/jaybell/packages/router/src/recognize.ts:101:20)\r\n    at /Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: 'styles.css.map'\r\n    at Recognizer.noMatchError (/Users/jaybell/packages/router/src/recognize.ts:61:12)\r\n    at <anonymous> (/Users/jaybell/packages/router/src/recognize.ts:101:20)\r\n    at /Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\n```\r\n\r\nIn our private monorepo when I port the configurations for the application builder I get a slightly different but same case, I run into the same sourcemap error but instead if just crashes the server\r\n\r\n\r\n```\r\nCannot optimize dependency: path, present in 'optimizeDeps.include'\r\n  ➜  Local:   http://localhost:60926/\r\nfile:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3695\r\n        return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\r\n               ^\r\n\r\nRuntimeError: NG04002: Cannot match any routes. URL Segment: '@vite/client.mjs.map'\r\n    at Recognizer.noMatchError (file:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3695:16)\r\n    at file:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3724:28\r\n    at /Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\n\r\nNode.js v18.18.2\r\n```\n\n### Minimal Reproduction\n\n`npm init @angular@next --ssr`\r\n`ng serve`\r\nOpen the app\r\nOpen the devtools\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.3\r\n@angular/cli                    17.0.0-rc.3\r\n@angular/ssr                    17.0.0-rc.3\r\n@schematics/angular             17.0.0-rc.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26199","RelatedDescription":"Open issue \"Vite dev server fails to serve source maps\" (#26199)"},{"Id":"1973187844","IsPullRequest":false,"CreatedAt":"2023-11-01T22:13:38","Actor":"manfredsteyer","Number":"26198","RawContent":null,"Title":"dev-server: bypass + [vite] http proxy error: Must provide a proper URL as target","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nworks fine with the webpack-builder \r\n\r\n### Description\r\n\r\nWhen using `bypass` in the proxy config, no (proxy) target should be needed. However, if no target is specified, the `viteProxyMiddleware` reports an error on the command line. Besides this, everything works as expected. However, such an unnecessary error is very confusing and distracts from other console outputs. \r\n\r\nAlso, the webpack-based dev-server does not show such an error.\r\n\r\n### Minimal Reproduction\r\n\r\nAssume this proxy-config in a file ``proxy.mjs``:\r\n\r\n```\r\nexport default {\r\n\r\n  '/': {\r\n    \"bypass\": function (req, res, proxyOptions) {\r\n      if (req.url === '/ping') {\r\n        res.setHeader('Content-Type', \"text/plain\");\r\n        res.end(\"pong\");\r\n        return true;\r\n      }\r\n      else {\r\n        return req.url;\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nThere is no need for a target. In such cases, there might not even be a target.\r\n\r\nStarting `ng serve --proxy-config proxy.mjs` with the webpack-based dev-server works fine. When starting it with the esbuild-based dev-server an exception occurs on the command line:\r\n\r\n```\r\n[vite] http proxy error: Must provide a proper URL as target\r\n```\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\nError: Must provide a proper URL as target\r\n    at ProxyServer.<anonymous> (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:63692:36)\r\n    at viteProxyMiddleware (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:64005:23)\r\n    at call (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:50559:7)\r\n    at next (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:50503:5)\r\n    at cors (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51031:7)\r\n    at file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51067:17\r\n    at originCallback (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51057:15)\r\n    at file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51062:13\r\n    at optionsCallback (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51042:9)\r\n    at corsMiddleware (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51047:7)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.9\r\nNode: 20.9.0 (Unsupported)\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.9\r\n@angular-devkit/build-angular   16.2.9\r\n@angular-devkit/core            16.2.9\r\n@angular-devkit/schematics      16.2.9\r\n@angular/cli                    16.2.9\r\n@schematics/angular             16.2.9\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI've seen the same behavior in the current RC of Angular 17.","Url":"https://github.com/angular/angular-cli/issues/26198","RelatedDescription":"Open issue \"dev-server: bypass + [vite] http proxy error: Must provide a proper URL as target\" (#26198)"},{"Id":"1973096509","IsPullRequest":true,"CreatedAt":"2023-11-01T20:53:44","Actor":"atcastle","Number":"26197","RawContent":null,"Title":"fix(ngtools/webpack): let static scan to find image domains in standlone components","State":"open","Body":"Currently, the static scanning done by the image domain scanner catches domains provided in files following the AppModule pattern, but misses domains when using the standalone component module. This PR adjusts the scan path to fix that. The actual logic governing the detection of domains and inserting them into the index.html file is unchanged, this fix simply tells the scanner to also look in one additional place in files.\r\n\r\nSpecifically, the new scanning route looks for the `static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector(...)` invocation, which exists in post-transform standalone component files, and contains the providers.\r\n\r\nAs with the existing scanning, this new code path is very specific, looking at a constant number of nodes, and should not effect build time. CC: @clydin @AndrewKushnir @kara ","Url":"https://github.com/angular/angular-cli/pull/26197","RelatedDescription":"Open PR \"fix(ngtools/webpack): let static scan to find image domains in standlone components\" (#26197)"},{"Id":"1972955770","IsPullRequest":true,"CreatedAt":"2023-11-01T19:18:34","Actor":"clydin","Number":"26196","RawContent":null,"Title":"test: remove unneeded exceptions and aliases from license validator","State":"open","Body":"The `fs-monkey`, `memfs` and `spdx-license-ids` packages all now have valid license fields and allowed licenses. All three have been removed from the exceptions list.\r\nSeveral SPDX license aliases have been removed as they are no longer used by any dependencies within the project. The aliases only existed due to previous non-standard SPDX identifiers present in used packages. Additionally, the license validator automatically handles SPDX combination syntax and combinations do not need to be listed explicitly.","Url":"https://github.com/angular/angular-cli/pull/26196","RelatedDescription":"Open PR \"test: remove unneeded exceptions and aliases from license validator\" (#26196)"},{"Id":"1972668475","IsPullRequest":true,"CreatedAt":"2023-11-01T18:46:07","Actor":"clydin","Number":"26195","RawContent":null,"Title":"test: enable e2e and test subsets for the E2E tests with application builder","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26195","RelatedDescription":"Closed or merged PR \"test: enable e2e and test subsets for the E2E tests with application builder\" (#26195)"},{"Id":"1972594252","IsPullRequest":true,"CreatedAt":"2023-11-01T18:04:15","Actor":"clydin","Number":"26194","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): reduce complexity of bundle budget threshold regex","State":"closed","Body":"The extra whitespace matching can be removed via a trim call prior to matching and casing can be handled by the `i` flag.","Url":"https://github.com/angular/angular-cli/pull/26194","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): reduce complexity of bundle budget threshold regex\" (#26194)"},{"Id":"1972192131","IsPullRequest":true,"CreatedAt":"2023-11-01T18:03:43","Actor":"alan-agius4","Number":"26193","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fail build on non bundling error when using the esbuild based builders","State":"closed","Body":"\r\nThis change fixes an issue were non bundling related errors that happen during prerendering, index generation and bundle budget failures did not cause the build to terminate with an error.\r\n","Url":"https://github.com/angular/angular-cli/pull/26193","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fail build on non bundling error when using the esbuild based builders\" (#26193)"},{"Id":"1972092954","IsPullRequest":false,"CreatedAt":"2023-11-01T10:22:37","Actor":"zip-fa","Number":"26192","RawContent":null,"Title":"vite dev server crashes when server return 502","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi.\r\nMy dev server crashes when HttpClient receives 502 error from backend REST api.\r\nIf you need repro - please let me know.\n\n### Minimal Reproduction\n\nng serve\n\n### Exception or Error\n\n```text\n/.angular/vite-root/8255c350-0f5c-4412-a828-cfc1d8e3960e/polyfills.server.mjs:175\r\n            throw error;\r\n            ^\r\nHttpErrorResponse {\r\n  headers: HttpHeaders {\r\n    normalizedNames: Map(13) {\r\n      'access-control-allow-origin' => 'access-control-allow-origin',\r\n      'cache-control' => 'cache-control',\r\n      'cf-ray' => 'cf-ray',\r\n      'connection' => 'connection',\r\n      'content-length' => 'content-length',\r\n      'content-type' => 'content-type',\r\n      'date' => 'date',\r\n      'expires' => 'expires',\r\n      'nel' => 'nel',\r\n      'referrer-policy' => 'referrer-policy',\r\n      'report-to' => 'report-to',\r\n      'server' => 'server',\r\n      'x-frame-options' => 'x-frame-options'\r\n    },\r\n    lazyUpdate: null,\r\n    headers: Map(13) {\r\n      'access-control-allow-origin' => [ '*' ],\r\n      'cache-control' => [\r\n        'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0'\r\n      ],\r\n      'cf-ray' => [ '81f35df6af634c80-HEL' ],\r\n      'connection' => [ 'close' ],\r\n      'content-length' => [ '6307' ],\r\n      'content-type' => [ 'text/html; charset=UTF-8' ],\r\n      'date' => [ 'Wed, 01 Nov 2023 10:13:46 GMT' ],\r\n      'expires' => [ 'Thu, 01 Jan 1970 00:00:01 GMT' ],\r\n      'nel' => [\r\n        '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}'\r\n      ],\r\n      'referrer-policy' => [ 'same-origin' ],\r\n      'report-to' => [\r\n        '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/\"}],\"group\":\"cf-nel\",\"max_age\":604800}'\r\n      ],\r\n      'server' => [ 'cloudflare' ],\r\n      'x-frame-options' => [ 'SAMEORIGIN' ]\r\n    }\r\n  },\r\n  status: 502,\r\n  statusText: 'Bad Gateway',\r\n  url: 'http://127.0.0.1:4000/api/status',\r\n  ok: false,\r\n  name: 'HttpErrorResponse',\r\n  message: 'Http failure response for http://127.0.0.1:4000/api/status: 502 Bad Gateway',\r\n  error: SyntaxError: Unexpected token < in JSON at position 0\r\n      at JSON.parse (<anonymous>)\r\n      at FetchBackend.parseBody (file:///C:/node_modules/@angular/common/fesm2022/http.mjs:1546:50)\r\n      at FetchBackend.doRequest (file:///C:/node_modules/@angular/common/fesm2022/http.mjs:1496:29)\r\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n}\r\n\r\nNode.js v18.18.1\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/cdk                    17.0.0-next.6\r\n@angular/cli                    17.0.0-rc.3\r\n@angular/material               17.0.0-rc.0\r\n@angular/ssr                    17.0.0-next.9\r\n@schematics/angular             16.2.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26192","RelatedDescription":"Open issue \"vite dev server crashes when server return 502\" (#26192)"},{"Id":"1971993832","IsPullRequest":true,"CreatedAt":"2023-11-01T09:15:52","Actor":"angular-robot","Number":"26191","RawContent":null,"Title":"build: update dependency ng-packagr to v17.0.0-rc.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`17.0.0-rc.0` -> `17.0.0-rc.1`](https://renovatebot.com/diffs/npm/ng-packagr/17.0.0-rc.0/17.0.0-rc.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v17.0.0-rc.1`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1700-rc1-2023-11-01)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/17.0.0-rc.0...17.0.0-rc.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zNy4xIiwidXBkYXRlZEluVmVyIjoiMzcuNDAuMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26191","RelatedDescription":"Open PR \"build: update dependency ng-packagr to v17.0.0-rc.1\" (#26191)"},{"Id":"1969082301","IsPullRequest":false,"CreatedAt":"2023-11-01T09:03:08","Actor":"web-dave","Number":"26178","RawContent":null,"Title":"CLI ng s cant be killed","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.x\r\n\r\n### Description\r\n\r\nWhen starting the dev process with ng server. This process can't be stoped.\r\nonly tasmkananger process kill works\r\n\r\n### Minimal Reproduction\r\n\r\nng s\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.0-rc.2\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.2\r\n@angular-devkit/build-angular   17.0.0-rc.2\r\n@angular-devkit/core            17.0.0-rc.2\r\n@angular-devkit/schematics      17.0.0-rc.2\r\n@angular/cli                    17.0.0-rc.2\r\n@angular/ssr                    17.0.0-rc.2\r\n@schematics/angular             17.0.0-rc.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nSometimes this works like charm.\r\n\r\nreproduce it:\r\nng s\r\nwait some time.\r\nstrg+c no luck","Url":"https://github.com/angular/angular-cli/issues/26178","RelatedDescription":"Closed issue \"CLI ng s cant be killed\" (#26178)"},{"Id":"1971954376","IsPullRequest":true,"CreatedAt":"2023-11-01T08:50:42","Actor":"alan-agius4","Number":"26190","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26190","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.3 release\" (#26190)"},{"Id":"1971951820","IsPullRequest":true,"CreatedAt":"2023-11-01T08:46:56","Actor":"alan-agius4","Number":"26189","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26189","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.3\" with changelog.\" (#26189)"},{"Id":"1971943536","IsPullRequest":true,"CreatedAt":"2023-11-01T08:40:53","Actor":"alan-agius4","Number":"26188","RawContent":null,"Title":"Bump version to \"v16.2.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26188","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.9\" with changelog.\" (#26188)"},{"Id":"1969883651","IsPullRequest":true,"CreatedAt":"2023-11-01T08:31:04","Actor":"angular-robot","Number":"26185","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`~4.1.0` -> `~4.2.0`](https://renovatebot.com/diffs/npm/rollup/4.1.5/4.2.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | minor | [`5.23.0` -> `5.24.0`](https://renovatebot.com/diffs/npm/terser/5.23.0/5.24.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | minor | [`5.23.0` -> `5.24.0`](https://renovatebot.com/diffs/npm/terser/5.23.0/5.24.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.2.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#420)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v4.1.6...v4.2.0)\n\n*2023-10-31*\n\n##### Features\n\n-   Run parsing in multiple threads and introduce `parseAstAsync` helper function ([#&#8203;5202](https://togithub.com/rollup/rollup/issues/5202))\n\n##### Pull Requests\n\n-   [#&#8203;5202](https://togithub.com/rollup/rollup/pull/5202): perf: introduce `parseAstAsync` and parallelize parsing AST ([@&#8203;sapphi-red](https://togithub.com/sapphi-red))\n\n### [`v4.1.6`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#416)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v4.1.5...v4.1.6)\n\n*2023-10-31*\n\n##### Bug Fixes\n\n-   Fix a bug where emtpy block comments in certain positions could freeze Rollup ([#&#8203;5231](https://togithub.com/rollup/rollup/issues/5231))\n\n##### Pull Requests\n\n-   [#&#8203;5228](https://togithub.com/rollup/rollup/pull/5228): build: ensure rust toolchain components for linting are installed ([@&#8203;jerome-benoit](https://togithub.com/jerome-benoit))\n-   [#&#8203;5231](https://togithub.com/rollup/rollup/pull/5231): Render emtpy block comments after tree-shaken statements ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;5232](https://togithub.com/rollup/rollup/pull/5232): Revert specifying rustfmt and clippy in toolchain file as it breaks REPL build ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.24.0`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5240)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.23.0...v5.24.0)\n\n-   Improve formatting performance in V8 by keeping a small work string and a large output string\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zNi4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzYuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26185","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26185)"},{"Id":"1969915901","IsPullRequest":true,"CreatedAt":"2023-10-31T14:32:44","Actor":"alan-agius4","Number":"26186","RawContent":null,"Title":"fix(@angular-devkit/build-angular): Windows Node.js 20 prerendering failure","State":"closed","Body":"\r\nOn Node.js 20 prerendering failed on Windows with `An unhandled exception occurred: No handler function exported` error. This appears to be caused by transforming Piscina CJS bundles using the `JavaScriptTransformer`. interestingly, this does not effect other OS like Linux and Mac.\r\n","Url":"https://github.com/angular/angular-cli/pull/26186","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): Windows Node.js 20 prerendering failure\" (#26186)"},{"Id":"1969841393","IsPullRequest":false,"CreatedAt":"2023-10-31T11:10:19","Actor":"gp187","Number":"26184","RawContent":null,"Title":"Angular esbuild SCSS import error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI am no longer able to import SCSS files from an NPM package directly in the styles.scss.\r\n\r\n![image](https://github.com/angular/angular/assets/3019963/6b507635-56a1-414b-89e9-bce6398fc986)\r\n\r\n\r\nSteps to reproduce:\r\nnpm i bootstrap\r\ngo to style SCSS\r\nImport any style from bootstrap \r\n\r\n\r\nOnly happens with `\"executor\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\nWorks fine `\"executor\": \"@angular-devkit/build-angular:browser\",`\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17\r\nNode: v19.3.0\r\nPackage manager: npm 9.2.0\r\nOS: Ubuntu\r\n\r\n\"@angular/animations\": \"~16.0.3\",\r\n    \"@angular/common\": \"~16.0.3\",\r\n    \"@angular/compiler\": \"~16.0.3\",\r\n    \"@angular/core\": \"~16.0.3\",\r\n    \"@angular/forms\": \"~16.0.3\",\r\n    \"@angular/localize\": \"^16.0.3\",\r\n    \"@angular/platform-browser\": \"~16.0.3\",\r\n    \"@angular/platform-browser-dynamic\": \"~16.0.3\",\r\n    \"@angular/platform-server\": \"^16.0.3\",\r\n    \"@angular/router\": \"~16.0.3\",\r\n    \"@angular/service-worker\": \"^16.0.3\",\r\n    \"@angular/youtube-player\": \"^16.0.1\",\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26184","RelatedDescription":"Closed issue \"Angular esbuild SCSS import error\" (#26184)"},{"Id":"1969466607","IsPullRequest":true,"CreatedAt":"2023-10-31T11:10:07","Actor":"clydin","Number":"26182","RawContent":null,"Title":"fix(@angular-devkit/build-angular): only watch used files with application builder","State":"closed","Body":"When using the application builder in watch mode (including `ng serve`), the file watching will now only watch files used or relevant to the used files. Previously, all files within the project root were watched. This previous behavior could result in unneeded rebuilds when unrelated files were changed. An environment variable named `NG_BUILD_WATCH_ROOT` is also now available to enable the previous behavior in cases where it is still preferred as well as for testing and debugging purposes.","Url":"https://github.com/angular/angular-cli/pull/26182","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): only watch used files with application builder\" (#26182)"},{"Id":"1970061951","IsPullRequest":true,"CreatedAt":"2023-10-31T10:50:04","Actor":"crisbeto","Number":"26187","RawContent":null,"Title":"Remove setClassDebugInfo calls","State":"closed","Body":"Includes a couple of commits that update the Babel and Webpack plugins to drop calls to the new `ɵsetClassDebugInfo` function which is only used in development mode.","Url":"https://github.com/angular/angular-cli/pull/26187","RelatedDescription":"Closed or merged PR \"Remove setClassDebugInfo calls\" (#26187)"},{"Id":"1969276781","IsPullRequest":false,"CreatedAt":"2023-10-31T10:38:30","Actor":"naveedahmed1","Number":"26179","RawContent":null,"Title":"build-angular:application breaks SSR for apps using .Net Core","State":"closed","Body":"### Command\n\nbuild, run, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.x\n\n### Description\n\nI just tied `build-angular:application` in Mustakbil Angular app, the build time is pretty impressive. \r\n\r\nThe output of browser bundles reduced from 3.9mb to 3.22mb. main bundle reduced from 493kb to 34kb. \r\n\r\nBut we are facing issues with SSR. In .Net Core aApps we still depend on `aspnet-prerendering` plugin as described here (skip to Angular setup section in this article https://pieterjandeclippel.medium.com/server-side-rendering-in-asp-net-core-angular-2022-version-7aaed8157976 ) and current output of ssr doesnt seem to work with this setup.\r\n\r\nAny plans to make it compatable with .Net Core?\n\n### Minimal Reproduction\n\nSetup a project by following the steps provided in the guide https://pieterjandeclippel.medium.com/server-side-rendering-in-asp-net-core-angular-2022-version-7aaed8157976\r\n\r\nUpdate Angular app to use build-angular:application\r\n\r\nRun the app\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.1\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, google-maps, material, platform-browser\r\n... platform-browser-dynamic, platform-server, pwa, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.1\r\n@angular-devkit/build-angular   17.0.0-rc.1\r\n@angular-devkit/core            17.0.0-rc.1\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/fire                   16.0.0\r\n@schematics/angular             17.0.0-rc.1\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26179","RelatedDescription":"Closed issue \"build-angular:application breaks SSR for apps using .Net Core\" (#26179)"},{"Id":"1968327247","IsPullRequest":true,"CreatedAt":"2023-10-31T07:59:16","Actor":"alan-agius4","Number":"26175","RawContent":null,"Title":"fix(@schematics/angular): add missing express `REQUEST` and `RESPONSE` tokens","State":"closed","Body":"\r\n\r\nThis commit updates the nguniversal migration to add `REQUEST` and `RESPONSE` tokens.\r\n\r\nCloses #26110\r\n","Url":"https://github.com/angular/angular-cli/pull/26175","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): add missing express `REQUEST` and `RESPONSE` tokens\" (#26175)"},{"Id":"1969311879","IsPullRequest":true,"CreatedAt":"2023-10-31T07:58:54","Actor":"clydin","Number":"26180","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): lazily initialize JS transformer worker pool","State":"closed","Body":"The Worker thread pool that is used by the JavaScript Transformer within the application builder is now only initialized if there is JavaScript that must be transformed. This removes any overhead associated with the worker pool if no work is required. This is particularly useful when using the development server with caching enabled and all the dependencies have already been prebundled.","Url":"https://github.com/angular/angular-cli/pull/26180","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): lazily initialize JS transformer worker pool\" (#26180)"},{"Id":"1969657823","IsPullRequest":true,"CreatedAt":"2023-10-31T07:58:15","Actor":"angular-robot","Number":"26183","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`6.9.0` -> `6.9.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.9.0/6.9.1) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | minor | [`5.22.0` -> `5.23.0`](https://renovatebot.com/diffs/npm/terser/5.22.0/5.23.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | minor | [`5.22.0` -> `5.23.0`](https://renovatebot.com/diffs/npm/terser/5.22.0/5.23.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.9.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#691-2023-10-30)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.9.0...v6.9.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.23.0`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5230)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.22.0...v5.23.0)\n\n-   When top_retain will keep a variable assignment around, inline the assignee when it's shorter than the name ([#&#8203;1434](https://togithub.com/terser/terser/issues/1434))\n-   Remove empty class `static {}` blocks.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zNi4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzYuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26183","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26183)"},{"Id":"1969348649","IsPullRequest":true,"CreatedAt":"2023-10-31T07:57:42","Actor":"clydin","Number":"26181","RawContent":null,"Title":"test: remove node-fetch package usage","State":"closed","Body":"Native fetch support is now available in Node.js and the `node-fetch` package can now be removed.","Url":"https://github.com/angular/angular-cli/pull/26181","RelatedDescription":"Closed or merged PR \"test: remove node-fetch package usage\" (#26181)"},{"Id":"1968794394","IsPullRequest":true,"CreatedAt":"2023-10-30T16:50:47","Actor":"alan-agius4","Number":"26177","RawContent":null,"Title":"build: use single Node.js toolchain to run unit tests","State":"closed","Body":"E2E tests are used to run tests on multiple platforms and node.js versions.\r\n","Url":"https://github.com/angular/angular-cli/pull/26177","RelatedDescription":"Closed or merged PR \"build: use single Node.js toolchain to run unit tests\" (#26177)"},{"Id":"1968476925","IsPullRequest":true,"CreatedAt":"2023-10-30T16:43:06","Actor":"alan-agius4","Number":"26176","RawContent":null,"Title":"fix(@angular-devkit/build-angular): log number of prerendered routes in console","State":"closed","Body":"\r\n\r\nThis changes add a log to the console to prints the total number of prerendered routes.\r\n","Url":"https://github.com/angular/angular-cli/pull/26176","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): log number of prerendered routes in console\" (#26176)"},{"Id":"1967665055","IsPullRequest":true,"CreatedAt":"2023-10-30T13:12:51","Actor":"angular-robot","Number":"26172","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26172","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#26172)"},{"Id":"1968007758","IsPullRequest":true,"CreatedAt":"2023-10-30T13:12:38","Actor":"alan-agius4","Number":"26174","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only rebundle server polyfills on explicit changes","State":"closed","Body":"\r\n\r\nThe newly introduced incremental bundler result caching is now used for server polyfills. This allows the bundling steps to be skipped in watch mode when no related files have been modified.\r\n","Url":"https://github.com/angular/angular-cli/pull/26174","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): only rebundle server polyfills on explicit changes\" (#26174)"},{"Id":"1967756708","IsPullRequest":true,"CreatedAt":"2023-10-30T11:28:00","Actor":"alan-agius4","Number":"26173","RawContent":null,"Title":"Node.js 20","State":"closed","Body":"Closes https://github.com/angular/angular-cli/issues/26114","Url":"https://github.com/angular/angular-cli/pull/26173","RelatedDescription":"Closed or merged PR \"Node.js 20\" (#26173)"},{"Id":"1967159458","IsPullRequest":true,"CreatedAt":"2023-10-30T10:27:46","Actor":"clydin","Number":"26171","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove unactionable error overlay suggestion from Vite-based dev server","State":"closed","Body":"The Vite-based development server that is used with the esbuild-based builders (`application`/`browser-esbuild`)\r\nwill show an error overlay when the application build encounters an error. This overlay previously provided a\r\nsuggestion to edit the `vite.config.js` configuration file to disable the error overlay. Since Vite usage is\r\nencapsulated within the Angular CLI, this suggestion is unactionable and may lead to user confusion due to\r\nno Vite configuration file being present within the project nor would creating one have an effect on the build\r\nprocess.","Url":"https://github.com/angular/angular-cli/pull/26171","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove unactionable error overlay suggestion from Vite-based dev server\" (#26171)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1973409091","IsPullRequest":true,"CreatedAt":"2023-11-02T02:50:44","Actor":"shinkhouse","Number":"28040","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"open","Body":"This particular example had css for a mdc form field that isn't reference in the mat-expansion docs overview example, so I removed it here. ","Url":"https://github.com/angular/components/pull/28040","RelatedDescription":"Open PR \"docs(material/expansion): remove unused styling\" (#28040)"},{"Id":"1973352384","IsPullRequest":true,"CreatedAt":"2023-11-02T02:50:00","Actor":"shinkhouse","Number":"28039","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"closed","Body":"This particular example had css for a mdc form field that isn't reference in the example, so I removed the css file from the example.","Url":"https://github.com/angular/components/pull/28039","RelatedDescription":"Closed or merged PR \"docs(material/expansion): remove unused styling\" (#28039)"},{"Id":"1973348063","IsPullRequest":true,"CreatedAt":"2023-11-02T01:38:11","Actor":"shinkhouse","Number":"28038","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"closed","Body":"This particular example had css for a mdc form field that isn't reference in the example, so I removed the css file from the example. ","Url":"https://github.com/angular/components/pull/28038","RelatedDescription":"Closed or merged PR \"docs(material/expansion): remove unused styling\" (#28038)"},{"Id":"1973218267","IsPullRequest":false,"CreatedAt":"2023-11-01T22:46:19","Actor":"shinkhouse","Number":"28037","RawContent":null,"Title":"bug(mat-expansion-panel): mat-expansion-indicator is slightly off center","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe mat-expansion-indicator caret icon is slightly off vertical centered on the mat-expansion-panel-header. If you look at your own [documentation](https://material.angular.io/components/expansion/overview), and apply the following style to the mat-expansion-panel-header in Chrome Dev Tools, \r\n`\r\nmat-expansion-panel-header#mat-expansion-panel-header-1::after {\r\n    height: 1px;\r\n    width: 100%;\r\n    position: absolute;\r\n    content: \"\";\r\n    background: red;\r\n}\r\n`\r\n\r\nYou can see a red line centered on the element, but the arrow is slightly below that line.. or above it, if it is expanded. So visually, this seems to not be correct. Is this intentional?\r\n\r\nBelow, I noted this issue in Angular 13, but also reproduced in v16 as well. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-b45cmn?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1.  I had just added the css mentioned above... but you can see it in the StackBlitz as well. \r\n\n\n### Expected Behavior\n\nThe mat-expansion-indicator should be visually centered in the mat-expansion-panel-header component. \n\n### Actual Behavior\n\nIt is visually off centered. \n\n### Environment\n\n```\r\nAngular CLI: 13.1.1\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1\r\nOS: darwin arm64\r\n\r\nAngular: 13.1.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.1\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.1.1\r\n@angular-devkit/schematics      13.1.1\r\n@angular/cli                    13.1.1\r\n@angular/flex-layout            13.0.0-beta.36\r\n@angular/http                   7.2.16\r\n@schematics/angular             13.1.1\r\nrxjs                            6.6.7\r\ntypescript                      4.5.4\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome 118.0.5993.117\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma 14.0\r\n```\r\n\r\n","Url":"https://github.com/angular/components/issues/28037","RelatedDescription":"Open issue \"bug(mat-expansion-panel): mat-expansion-indicator is slightly off center\" (#28037)"},{"Id":"1972892932","IsPullRequest":true,"CreatedAt":"2023-11-01T18:36:29","Actor":"mmalerba","Number":"28036","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28036","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.2 release\" (#28036)"},{"Id":"1972887704","IsPullRequest":true,"CreatedAt":"2023-11-01T18:33:52","Actor":"mmalerba","Number":"28035","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28035","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.2\" with changelog.\" (#28035)"},{"Id":"1972868529","IsPullRequest":true,"CreatedAt":"2023-11-01T18:19:03","Actor":"mmalerba","Number":"28034","RawContent":null,"Title":"docs: release notes for the v16.2.11 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28034","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.11 release\" (#28034)"},{"Id":"1972864612","IsPullRequest":true,"CreatedAt":"2023-11-01T18:16:26","Actor":"mmalerba","Number":"28033","RawContent":null,"Title":"Bump version to \"v16.2.11\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28033","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.11\" with changelog.\" (#28033)"},{"Id":"1971904301","IsPullRequest":true,"CreatedAt":"2023-11-01T17:49:34","Actor":"crisbeto","Number":"28030","RawContent":null,"Title":"refactor(material/button): clean up tokens and use tokens for ripples","State":"closed","Body":"These changes rework the existing button setup for emitting different color palette tokens to match how it's being done in the rest of the project. Then it builds on top of the changes to introduce Angular-specific tokens for each of the buttons so that we can implement the ripples through them, instead of the existing variables that are used for all button types at the same time.","Url":"https://github.com/angular/components/pull/28030","RelatedDescription":"Closed or merged PR \"refactor(material/button): clean up tokens and use tokens for ripples\" (#28030)"},{"Id":"1972779346","IsPullRequest":true,"CreatedAt":"2023-11-01T17:17:24","Actor":"zarend","Number":"28032","RawContent":null,"Title":"build: update version of checkout action in building and deploying de…","State":"open","Body":"…vapp","Url":"https://github.com/angular/components/pull/28032","RelatedDescription":"Open PR \"build: update version of checkout action in building and deploying de…\" (#28032)"},{"Id":"1972602493","IsPullRequest":true,"CreatedAt":"2023-11-01T15:30:57","Actor":"esprehn","Number":"28031","RawContent":null,"Title":"Improve perf of HighContrastModeDetector for micro frontends","State":"open","Body":"If there's more than one copy of angular on the page each will try to apply the high contrast mode classes which triggers a large style recalc and a repaint of the body layer which can be very expensive.\r\n\r\nInstead we put an attribute on the body and use that to decide if we've already checked for the mode when initially creating the service.\r\n\r\nWe were also ignoring the state of the BreakpointObserver and rechecking every time. I changed it to use the emitted initial state to avoid this.\r\n\r\nIn general the HighContrastModeDetector seems like it needs more improvements though:\r\n- getHighContrastMode() recomputes it every time, and some folks call this manually (like critique on every diff view)\r\n- It doesn't handle SSR because there's no initial state provided through ex. cookies. So every new page load will flash in and out of high contrast mode.\r\n\r\nThe SSR issue in particular needs a future fix.","Url":"https://github.com/angular/components/pull/28031","RelatedDescription":"Open PR \"Improve perf of HighContrastModeDetector for micro frontends\" (#28031)"},{"Id":"1969917889","IsPullRequest":true,"CreatedAt":"2023-11-01T15:24:36","Actor":"crisbeto","Number":"28024","RawContent":null,"Title":"fix(material/core): prevent updates to v17 if project uses legacy components","State":"closed","Body":"These changes add a schematic that will log a fatal error and prevent the app from updating to v17 if it's using legacy components. Legacy components have been deleted in v17 so the app won't build if it updates.\r\n\r\nUpdating to Material v17 using `ng update` will look like this:\r\n<img width=\"810\" alt=\"image\" src=\"https://github.com/angular/components/assets/4450522/9a490193-926d-4903-949b-87ce98d87b04\">\r\n","Url":"https://github.com/angular/components/pull/28024","RelatedDescription":"Closed or merged PR \"fix(material/core): prevent updates to v17 if project uses legacy components\" (#28024)"},{"Id":"1964005987","IsPullRequest":false,"CreatedAt":"2023-10-31T21:55:50","Actor":"amybedinghaus","Number":"28011","RawContent":null,"Title":"mat-autocomplete causes invalid aria-owns value when opened and then closed","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nInvalid ARIA aria-owns attribute value with mat-autocomplete when the autocomplete has been opened and then closed again.  I see this previous bug:  https://github.com/angular/components/issues/12332 and the associated PR appears to have partially fixed it but not fully.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1.   open mat-autocomplete\r\n2.  choose option\r\n3.  close mat-autocomplete\r\n4. Run AXE and get \"Invalid ARIA attribute value: aria-owns='mat-autocomplete'\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nThere should be no accessibility issue\r\n\r\n### Actual Behavior\r\n\r\nThere is accessibility issue \"Invalid ARIA attribute value: aria-owns='mat-autocomplete'\"\r\n\r\n### Environment\r\n\r\n- Angular:  16.2.7\r\n- CDK/Material:  16.2.6\r\n- Browser(s):  Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):  Windows\r\n","Url":"https://github.com/angular/components/issues/28011","RelatedDescription":"Closed issue \"mat-autocomplete causes invalid aria-owns value when opened and then closed\" (#28011)"},{"Id":"1971297252","IsPullRequest":true,"CreatedAt":"2023-10-31T21:01:11","Actor":"mmalerba","Number":"28029","RawContent":null,"Title":"perf(cdk/a11y): Don't trigger re-layout when detecting fake mousedown","State":"open","Body":"Fixes #28010\r\n\r\nI found that testing `screenX` / `screenY` as suggested in the issue does not work. Testing `detail` seems to work on Chrome and Safari, but not Firefox (Firefox already had an alternate check). I wasn't able to test on Edge, but as part of the webkit family, it probably works like Chrome/Safari\r\n\r\nEdit: @zarend helped me test some more configurations. Works with Chrome, Firefox, Safari, Edge & VoiceOver, NVDA, JAWS","Url":"https://github.com/angular/components/pull/28029","RelatedDescription":"Open PR \"perf(cdk/a11y): Don't trigger re-layout when detecting fake mousedown\" (#28029)"},{"Id":"1971023122","IsPullRequest":true,"CreatedAt":"2023-10-31T18:00:40","Actor":"wagnermaciel","Number":"28028","RawContent":null,"Title":"fix(material/button): set line-height to normal","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28028","RelatedDescription":"Open PR \"fix(material/button): set line-height to normal\" (#28028)"},{"Id":"1966950844","IsPullRequest":false,"CreatedAt":"2023-10-31T17:50:35","Actor":"dolezaljan","Number":"28019","RawContent":null,"Title":"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected","State":"closed","Body":"### Feature Description\n\nLet's have [MatDialog's member **_dialog**](https://github.com/angular/components/blob/17.0.x/src/material/dialog/dialog.ts#L85) which is the reference to the CDK Dialog _protected_ instead of _private_.\n\n### Use Case\n\nI'm using scoped material dialogs as described by @reppners [here](https://github.com/angular/components/issues/4612#issuecomment-340049922).\r\n\r\nWhen upgrading from ng13 to ng14 (and onwards) the MatDialog started to use CDK Dialog internally.\r\n\r\n[The reference to the CDK Dialog is private](https://github.com/angular/components/blob/main/src/material/dialog/dialog.ts#L85) preventing me from [overwriting](https://github.com/dolezaljan/ngx-cdk-dynamic-overlay-container/commit/8b060ac349ced6807fb4afe40417dc9d8d7bf768#diff-3a91ff9580ab7c0afb986280d3fea2ba4ce1903eb5799a47802ef038eaa1a8c9R22) it with my CustomCdkDialog within my custom CustomMatDialog.\r\n\r\nTo have the use case complete: all this bubbles down to CustomOverlayContainer updating [_containerElement](https://github.com/angular/components/blob/17.0.x/src/cdk/overlay/overlay-container.ts#L16), which makes the dialog scoped.\r\n\r\n(**Is there a reason for this member not to be protected?**)\r\n(The alternative is to keep [patching](https://github.com/dolezaljan/ngx-cdk-dynamic-overlay-container/blob/master/patch.modules.sh) this directly within downloaded npm module.)","Url":"https://github.com/angular/components/issues/28019","RelatedDescription":"Closed issue \"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected\" (#28019)"},{"Id":"1966956558","IsPullRequest":true,"CreatedAt":"2023-10-31T17:50:17","Actor":"dolezaljan","Number":"28020","RawContent":null,"Title":"feat(material/dialog): MatDialog: change member _dialog (cdk) from private to protected (#28019)","State":"closed","Body":"Having customized MatDialog allow to have customized cdk/dialog inside of it.\r\n\r\nc.f. #28019 for details","Url":"https://github.com/angular/components/pull/28020","RelatedDescription":"Closed or merged PR \"feat(material/dialog): MatDialog: change member _dialog (cdk) from private to protected (#28019)\" (#28020)"},{"Id":"1970606851","IsPullRequest":true,"CreatedAt":"2023-10-31T15:00:24","Actor":"crisbeto","Number":"28027","RawContent":null,"Title":"test(material/schematics): fix failing test","State":"closed","Body":"Fixes a failing test in the `ng add` schematic.","Url":"https://github.com/angular/components/pull/28027","RelatedDescription":"Closed or merged PR \"test(material/schematics): fix failing test\" (#28027)"},{"Id":"1970022075","IsPullRequest":true,"CreatedAt":"2023-10-31T14:27:39","Actor":"JeanMeche","Number":"28026","RawContent":null,"Title":"refactor(schematics): don't add the preconnect for fonts","State":"closed","Body":"This is now added automatically by the CLI  angular/angular-cli#25318","Url":"https://github.com/angular/components/pull/28026","RelatedDescription":"Closed or merged PR \"refactor(schematics): don't add the preconnect for fonts\" (#28026)"},{"Id":"1969983721","IsPullRequest":true,"CreatedAt":"2023-10-31T14:26:12","Actor":"crisbeto","Number":"28025","RawContent":null,"Title":"fix(material/schematics): account for browser-esbuild builder","State":"closed","Body":"Fixes that the schematics would throw if the app is using the `browser-esbuild` builder from the CLI.","Url":"https://github.com/angular/components/pull/28025","RelatedDescription":"Closed or merged PR \"fix(material/schematics): account for browser-esbuild builder\" (#28025)"},{"Id":"1969290752","IsPullRequest":false,"CreatedAt":"2023-10-30T21:58:24","Actor":"hisham","Number":"28023","RawContent":null,"Title":"docs-bug(Form field input): Best way to adjust input outlined border width on focus? ","State":"open","Body":"### Documentation Feedback\n\nThe documentation at https://material.angular.io/guide/customizing-component-styles and https://material.angular.io/guide/theming is not specific enough on how to best customize component style properties like the width of an outlined border when the input has focus. \r\n\r\nI came up with the below solution:\r\n```\r\nmat-form-field .mdc-text-field--focused .mdc-notched-outline > * {\r\n  border-width: 1.5px !important;\r\n}\r\n```\r\n\r\nThe react version of material web suggests a mixin type approach but I tried it in angular and it didn't work for me: https://github.com/material-components/material-components-web-react/issues/941\r\n\r\nAny guidance on this would be helpful. \n\n### Affected documentation page\n\nhttps://material.angular.io/guide/customizing-component-styles","Url":"https://github.com/angular/components/issues/28023","RelatedDescription":"Open issue \"docs-bug(Form field input): Best way to adjust input outlined border width on focus? \" (#28023)"},{"Id":"1969146305","IsPullRequest":true,"CreatedAt":"2023-10-30T21:33:56","Actor":"zarend","Number":"28022","RawContent":null,"Title":"fix(cdk/tree): cleanup tree-key-manager token","State":"closed","Body":"Change how tree-key-manager token is provided. Provide default TreeKeyManager at root. Remove provider from NgModule.","Url":"https://github.com/angular/components/pull/28022","RelatedDescription":"Closed or merged PR \"fix(cdk/tree): cleanup tree-key-manager token\" (#28022)"},{"Id":"1969015697","IsPullRequest":false,"CreatedAt":"2023-10-30T18:52:52","Actor":"slivniy","Number":"28021","RawContent":null,"Title":"bug(CDK/SCROLLING): <object> element in *cdkVirtualFor is glitching when using \"templateCacheSize: 0\"","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using No cache strategy (templateCacheSize: 0) for *cdkVirtualFor with <object> element (as image), elements of list  glitch while scrolling. Seems like cdkVirtualFor incorrectly init/reinit or reuse instances of listed elements.\r\n\r\nWhen using <img> tag instead of <object> no bug detected.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/uyv2wg?file=src%2Fexample%2Fcdk-virtual-scroll-template-cache-example.html\r\nSteps to reproduce:\r\n1. Create list of 100 elements, use <object type=\"image/jpeg\"> with image link data.\r\n2. Scroll\r\n\n\n### Expected Behavior\n\nSmooth scrolling, correct reusing/reinit of list elements, no content replacing.\n\n### Actual Behavior\n\nScrolling is not smooth (end sometimes end / start of list is unreachable), elements in list are replaced by content of sibling.\n\n### Environment\n\n- Angular: 17.0.0-rc.0 (and 15)\r\n- CDK/Material: 16.2.10\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/28021","RelatedDescription":"Open issue \"bug(CDK/SCROLLING): <object> element in *cdkVirtualFor is glitching when using \"templateCacheSize: 0\"\" (#28021)"},{"Id":"1966899254","IsPullRequest":true,"CreatedAt":"2023-10-30T16:25:53","Actor":"crisbeto","Number":"28018","RawContent":null,"Title":"refactor(material/core): remove unused compatibility code","State":"closed","Body":"Removes some density-related code that isn't being used anywhere anymore.","Url":"https://github.com/angular/components/pull/28018","RelatedDescription":"Closed or merged PR \"refactor(material/core): remove unused compatibility code\" (#28018)"},{"Id":"1964186009","IsPullRequest":false,"CreatedAt":"2023-10-27T21:37:21","Actor":"clamli","Number":"28012","RawContent":null,"Title":"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events","State":"closed","Body":"### Feature Description\r\n\r\nHi!\r\n\r\nWe are working on a chip announcement feature which listens to chip addition and removal events and live announce a message when any of the event occurs. Is it possible for AM chips to\r\n\r\n1. Expose _chipGrid from MatChipInput\r\n2. Add a stream of chip removal events in MatChipSet like the existing [destroy event stream](https://github.com/angular/components/blob/main/src/material/chips/chip-set.ts#L83C16-L86)?\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28012","RelatedDescription":"Closed issue \"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events\" (#28012)"},{"Id":"1964318229","IsPullRequest":true,"CreatedAt":"2023-10-27T21:26:30","Actor":"clamli","Number":"28013","RawContent":null,"Title":"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events","State":"closed","Body":"The original FR is this (https://github.com/angular/components/issues/28012). There are two changes in this PR,\r\n1. Expose _chipGrid from MatChipInput\r\n2. Add a stream of chip removal events in MatChipSet","Url":"https://github.com/angular/components/pull/28013","RelatedDescription":"Closed or merged PR \"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events\" (#28013)"},{"Id":"1964940220","IsPullRequest":false,"CreatedAt":"2023-10-27T07:33:46","Actor":"ice-blaze","Number":"28017","RawContent":null,"Title":"bug(button-toggle): Accessibility breaks with matTooltip","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen adding the tooltip on a button toggle, the screen reader loses the group detection.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dh5vz6?file=src%2Fexample%2Fbutton-toggle-overview-example.ts,src%2Fexample%2Fbutton-toggle-overview-example.html\r\nSteps to reproduce:\r\n1.  Use NVDA screen reader\r\n2. Navigate with the browse mode\r\n\n\n### Expected Behavior\n\nThe second button toggle should be detected as a whole. Like the first button toggle.\n\n### Actual Behavior\n\nWhen navigating on the second button toggle, the screen reader doesn't mention all the other buttons at once. \n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n- Screen reader: NVDA","Url":"https://github.com/angular/components/issues/28017","RelatedDescription":"Open issue \"bug(button-toggle): Accessibility breaks with matTooltip\" (#28017)"},{"Id":"1964921654","IsPullRequest":false,"CreatedAt":"2023-10-27T07:21:32","Actor":"X-Celcius","Number":"28016","RawContent":null,"Title":"bug(material/theming): get-contrast-color-from-palette doesn't work with pre-defined hue names","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing `get-contrast-color-from-palette` is convenient and explicit as it gives you the contrast color without having to add `-contrast` to the hue value. It seems to me as the right thing to choose, even though the theming documentation currently doesn't mention this function. \r\n\r\nHowever the behavior can be confusing because hues such as `default`, `lighter` or `darker` are added only to the outer map, not the inner contrast map, when calling `define-palette`. Therefore you can only use it with hues that are defined in the contrast-palette from the beginning (such as 500). \r\n\r\nThere is an easy workaround but I also think that it should be fairly easy to add `default`, `lighter`, `darker` etc. to the inner contrast map in `mat.define-palette`. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-egs21k?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Use `mat.get-contrast-color-from-palette` with a pre-defined hue value such as `default` or `lighter`\r\n\n\n### Expected Behavior\n\nI expect `mat.get-contrast-color-from-palette($palette, default)` to return the same color as `mat-get-color-from-palette($palette, default-contrast)` after defining a palette using `mat.define-palette`. \n\n### Actual Behavior\n\n`mat.get-contrast-color-from-palette` looks for a hue called `default` in the inner contrast map but that doesn't get added to the inner contrast map when calling `mat.define-palette`. \n\n### Environment\n\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28016","RelatedDescription":"Open issue \"bug(material/theming): get-contrast-color-from-palette doesn't work with pre-defined hue names\" (#28016)"},{"Id":"1964424325","IsPullRequest":true,"CreatedAt":"2023-10-26T23:51:03","Actor":"mmalerba","Number":"28015","RawContent":null,"Title":"docs(material/theming): Fix broken theme guide formatting","State":"closed","Body":"Our docs site does not support the definition-list markdown, so I switched to headers instead. I also added a link from the generated schematic comment to the relevant documentation so users can learn more.","Url":"https://github.com/angular/components/pull/28015","RelatedDescription":"Closed or merged PR \"docs(material/theming): Fix broken theme guide formatting\" (#28015)"},{"Id":"1964341777","IsPullRequest":true,"CreatedAt":"2023-10-26T20:43:42","Actor":"mmalerba","Number":"28014","RawContent":null,"Title":"feat(material-experimental/theming): add M3 slide-toggle support","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28014","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 slide-toggle support\" (#28014)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-11-02T03:30:02.2852272Z","RunDurationInMilliseconds":1442}