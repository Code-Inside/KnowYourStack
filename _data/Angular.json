{"Data":{"Angular-Issues":{"Issues":[{"Id":"2182860019","IsPullRequest":false,"CreatedAt":"2024-03-12T23:47:16","Actor":"joeldhenry","Number":"54835","RawContent":null,"Title":"Router deactivate failure results in page reload in computed mode","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nwith routerModule as default, a deactivate failure, would still remove the history state causing issues with back button and swipe back on mobile. \r\n\r\nas per instructions, i changed to `RouterModule.forRoot(AppRoutes, { canceledNavigationResolution: 'computed' })`\r\nwhich results in history being reset on deactivate failure, however the page also refreshes causing form data and state to be reset. my understanding is that default deferred update strategy and sameURLNavigation 'ignore' should have caused the route to not be reloaded, however this is not the case.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nrouterModule as default:\r\n\r\nRoute Page 1 -> Page 2\r\nRoute Page 2 -> Page 3\r\nBack & deactivate Failure = history state Page 2\r\n\r\ncanceledNavigationResolution 'computed':\r\n\r\nRoute Page 1 -> Page 2\r\nRoute Page 2 -> Page 3\r\nBack & deactivate Failure = history state Page 3, but refresh page 3\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.6\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.7\r\n... animations, common, compiler-cli, core, language-service\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.6\r\n@angular-devkit/build-angular   16.1.6\r\n@angular-devkit/core            16.1.6\r\n@angular-devkit/schematics      16.1.6\r\n@angular/cli                    16.1.6\r\n@schematics/angular             16.1.6\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54835","RelatedDescription":"Open issue \"Router deactivate failure results in page reload in computed mode\" (#54835)"},{"Id":"2182830549","IsPullRequest":false,"CreatedAt":"2024-03-12T23:13:47","Actor":"danielkleebinder","Number":"54833","RawContent":null,"Title":"NG5002: Allow referencing of expression results in `@else if` block (control flow)","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nThe new Angular control flow has been a great addition to the ecosystem so far. However, the `@else if` block does not allow referencing of expression results thus far. This is a minor bump in the road of Angular DX. An example of correct referencing is listed below:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async) {\r\n  {{ (pets$ | async).length }}\r\n}\r\n```\r\n\r\nThe easier to read and maintain version, however, is currently not supported / allowed:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async; as pets) {\r\n  {{ pets.length }}\r\n}\r\n```\r\n\r\nThis template would yield the following error:\r\n\r\n```bash\r\nX [ERROR] NG5002: \"as\" expression is only allowed on the primary @if block [plugin angular-compiler]\r\n\r\n    src/app/list/list.component.html:3:27:\r\n      3 │ } @else if (pets$ | async; as pets) {\r\n        ╵                            ~~~~~~~\r\n```\r\n\r\nNot allowing this construct might force developers in creating _creative_ workarounds, such as:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else{\r\n  @if (pets$ | async; as pets) {\r\n    {{ pets.length }}\r\n  }\r\n}\r\n```\r\n\r\nWhich is semantically equivalent, but less maintainable and extensible than other solutions.\r\n\r\n### Proposed solution\r\n\r\nAllow referencing of expression results in `@else if` blocks:\r\n\r\n```typescript\r\n@if (animals$ | async; as animals) {\r\n  {{ animals.length }}\r\n} @else if (pets$ | async; as pets) {\r\n  {{ pets.length }}\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\nAdd syntax that allows developers to reference the results of multiple expressions or the creation of view models:\r\n\r\n```typescript\r\n@viewModel (animals$ | async as animals; pets$ | async as pets) {\r\n  @if (animals) {\r\n    {{ animals.length }}\r\n  } @else if (pets) {\r\n    {{ pets.length }}\r\n  }\r\n}\r\n```\r\n\r\nThis approach, however, increases cognitive complexity and is counteracting the lazy evaluation of `@else if` blocks.","Url":"https://github.com/angular/angular/issues/54833","RelatedDescription":"Closed issue \"NG5002: Allow referencing of expression results in `@else if` block (control flow)\" (#54833)"},{"Id":"2182834075","IsPullRequest":true,"CreatedAt":"2024-03-12T23:13:08","Actor":"frost-cy","Number":"54834","RawContent":null,"Title":"refactor(compiler-cli): move DelegatingPerfRecorder initialization into constructor","State":"open","Body":"When TS output target is set to ES2022 or newer, the class fields don't get transpiled. \r\n\r\nThat causes a runtime error [here](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/perf/src/recorder.ts#L130) in the `DelegatingPerfRecorder`. \r\n\r\nThis is because `delegatingPerfRecorder` that gets initialized [here](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/core/src/compiler.ts#L280) passes `this.perfRecorder` as argument. However,  `this.perfRecorder` doesn't get set until the [NgCompiler constructor](https://github.com/angular/angular/blob/main/packages/compiler-cli/src/ngtsc/core/src/compiler.ts#L333) runs. \r\n \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nno change in the behavior\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nno change in the behavior\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54834","RelatedDescription":"Open PR \"refactor(compiler-cli): move DelegatingPerfRecorder initialization into constructor\" (#54834)"},{"Id":"2182780708","IsPullRequest":true,"CreatedAt":"2024-03-12T22:15:03","Actor":"atscott","Number":"54832","RawContent":null,"Title":"refactor(core): clear Dirty flag even in checkNoChanges pass","State":"open","Body":"There are two incorrect statements/assumptions with the existing code:\r\n\r\n1. We don't want components to behave differently depending on whether check no changes is enabled or not.\r\n\r\nThis is not something that can be prevented unless the flag states are saved before running `checkNoChanges` and restored when finished. It is entirely possible that a `checkNoChanges` pass marks views for check. This would result in `checkNoChanges` _hiding_ issues because components that were not marked for check before the pass now are and will be refreshed in the next change detection round.\r\n\r\n2. Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to refresh a `NgClass` binding should work\r\n\r\nThis _does not_ work even today. First, this results in `ExpressionChanged...` errors when the host view is reachable during the `checkNoChanges` pass. Second, even in production, this would require that the host view only has ancestors with `Default` change detection. If any ancestor is `OnPush`, then its `Dirty` flag would have been cleared at the end of change detection, preventing the host view (and class binding) from being reachable in the next round of change detection.\r\n","Url":"https://github.com/angular/angular/pull/54832","RelatedDescription":"Open PR \"refactor(core): clear Dirty flag even in checkNoChanges pass\" (#54832)"},{"Id":"2182596962","IsPullRequest":false,"CreatedAt":"2024-03-12T20:18:37","Actor":"zzmp","Number":"54831","RawContent":null,"Title":"zone.js throws TypeError when passing AbortController as options to addEventListener","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\n`window.addEventListener` takes an options argument, which can be shaped as `{ signal: AbortSignal }`. `AbortController` satisfies this interface, and can be passed to `addEventListener` in the native implementation:\r\n\r\n    window.addEventListener('keydown', () => {}, new AbortController)\r\n\r\nHowever, `zone.js` is clever with passing the `signal`, and un-assigns and re-assigns it to `taskData.options` avoid passing it internally. `taskData.options` is initialized to the original options argument, so it is initialized to an instance of `AbortController`, for which `signal` is a getter. This results in a `TypeError`. Instead, for this to work in `zone.js`, you need to destructure:\r\n\r\n    window.addEventListener('keydown', () => {}, { signal: (new AbortController).signal })\r\n\r\n`zone.js` should not be using the original options argument (to save memory) _and_ assigning to it, as it is of an unknown type and the options properties may not be writable.\n\n### Please provide a link to a minimal reproduction of the bug\n\nN/A - see explanation for one-liners\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Cannot set property signal of [object AbortController] which has only a getter\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nzone.js: 0.14.4\r\nGoogle Chrome: 122.0.6261.94 (Official Build) (arm64)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54831","RelatedDescription":"Closed issue \"zone.js throws TypeError when passing AbortController as options to addEventListener\" (#54831)"},{"Id":"2182505635","IsPullRequest":true,"CreatedAt":"2024-03-12T20:13:09","Actor":"bencodezen","Number":"54830","RawContent":null,"Title":"docs: fix missing security guide in navigation","State":"closed","Body":"The paths for the security guide were flipped in the original PR. As a result, it looked for a markdown file in the best-practices directory when it should have looked for it in the guide directory instead.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nSecurity guide in navigation causes a weird duplicate double loading on the site.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSecurity guide navigation goes to the guide as expected.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54830","RelatedDescription":"Closed or merged PR \"docs: fix missing security guide in navigation\" (#54830)"},{"Id":"2182402421","IsPullRequest":true,"CreatedAt":"2024-03-12T18:26:41","Actor":"JeanMeche","Number":"54829","RawContent":null,"Title":"docs: remove AIO guides","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54829","RelatedDescription":"Open PR \"docs: remove AIO guides\" (#54829)"},{"Id":"2182292684","IsPullRequest":true,"CreatedAt":"2024-03-12T17:37:26","Actor":"bencodezen","Number":"54828","RawContent":null,"Title":"docs: resolve extra padding on tutorial editor","State":"open","Body":"As of this commit, there is a visual discrepancy between the height of the content on the left compared to the separator and editors on the right. It appears that the cause of this is an additional computation of layout padding which is unnecessary for these particular elements.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix: CSS styles on docs\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere is a spacing discrepancy which you can see in the bottom right.\r\n\r\n<img width=\"1920\" alt=\"Screenshot 2024-03-12 at 10 12 06 AM (2)\" src=\"https://github.com/angular/angular/assets/4836334/88a84c89-86b0-410a-a7d7-a10d95039421\">\r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nIt will remove the extra padding causing the gap.\r\n\r\n<img width=\"1920\" alt=\"Screenshot 2024-03-12 at 10 37 46 AM (2)\" src=\"https://github.com/angular/angular/assets/4836334/7310aaa5-bac6-4218-b516-a8864abb061b\">\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54828","RelatedDescription":"Open PR \"docs: resolve extra padding on tutorial editor\" (#54828)"},{"Id":"2179632380","IsPullRequest":true,"CreatedAt":"2024-03-12T17:24:12","Actor":"josephperrott","Number":"54820","RawContent":null,"Title":"fix(docs-infra): remove the prerender directory from adev","State":"closed","Body":"Remove the prerender directory as it is entirely unused and unneeded\r\n","Url":"https://github.com/angular/angular/pull/54820","RelatedDescription":"Closed or merged PR \"fix(docs-infra): remove the prerender directory from adev\" (#54820)"},{"Id":"2179680657","IsPullRequest":true,"CreatedAt":"2024-03-12T17:21:54","Actor":"devversion","Number":"54821","RawContent":null,"Title":"refactor(core): report subscription errors for `OutputEmitterRef` to `ErrorHandler`","State":"closed","Body":"Currently if an `(output)` listener fails, it will be handled gracefully by Angular and\r\nreported to the `ErrorHandler`.\r\n\r\nFor programmatic subscriptions with `OutputEmitterRef`, this is not the case. Instead, as\r\nsoon as any subscription is failing, all other subsequent subscription callbacks are not firing anymore.\r\n\r\nThis commit intends to make this more consistent by gracefully reporting errors from\r\n`OutputEmitterRef#emit` to `ErrorHandler`, allowing for listener execution to continue.\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-op7dqf?file=src%2Fmain.ts","Url":"https://github.com/angular/angular/pull/54821","RelatedDescription":"Closed or merged PR \"refactor(core): report subscription errors for `OutputEmitterRef` to `ErrorHandler`\" (#54821)"},{"Id":"2182212429","IsPullRequest":false,"CreatedAt":"2024-03-12T17:00:59","Actor":"BobDankert","Number":"54827","RawContent":null,"Title":"Form control values do not get set with trailing space, making email validator difficult to diagnose","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen calling setValue() on a FormControl with a value that contains a trailing space, the input element value does not receive that trailing space (however the FormControl value will have the trailing space). This can make it difficult on email form controls with the email validator, as a trailing space will fail the email validator, but the input value does not have the trailing space. To \"fix\" the issue, the user needs to modify the email in the input in anyway (add a space, oddly enough, work) to reset the FormControl value to something that matches the input value.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-bhq16g?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe input value does not match the FormControl value.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.2.3\r\nNode: 18.18.0\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cli                    17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else?\n\nI don't know if it is the browser not setting the trailing space, or something internal to the FormControl setValue() call that does not set the trailing space, but this is certainly creating an odd situation, as shown in the StackBlitz reproduction.","Url":"https://github.com/angular/angular/issues/54827","RelatedDescription":"Open issue \"Form control values do not get set with trailing space, making email validator difficult to diagnose\" (#54827)"},{"Id":"2179228819","IsPullRequest":true,"CreatedAt":"2024-03-12T16:13:58","Actor":"angular-robot","Number":"54815","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/54815","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#54815)"},{"Id":"2180857286","IsPullRequest":false,"CreatedAt":"2024-03-12T06:46:04","Actor":"mark-akturatech","Number":"54825","RawContent":null,"Title":"Alias `afterRender` to `afterEachRender`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/core\r\n\r\n### Description\r\n\r\n@angular/core `afterRender` and `afterNextRender` are great however it is too easy to miss the distinction during a peer review and this can have a big effect on performance.\r\n\r\nIs it possible to alias `afterRender` to `afterEachRender` or similar (I understand that it is too late to change names now). \r\nThe new name would be clear that the code attached will run multiple times (as opposed to once only if using afterNextRender).\r\n\r\n### Proposed solution\r\n\r\nRename `afterRender` to `afterEachRender`\r\n\r\n### Alternatives considered\r\n\r\nCurrently if used I asked the devs to `import { afterRender as afterEachRender }`. We could add a lint task to ensure this is done.\r\n\r\nBTW I don't get a chance to say this elsewhere - so will say it here - thank you for all your work. Every change your team makes is so positive.","Url":"https://github.com/angular/angular/issues/54825","RelatedDescription":"Open issue \"Alias `afterRender` to `afterEachRender`\" (#54825)"},{"Id":"2179186170","IsPullRequest":true,"CreatedAt":"2024-03-11T23:33:04","Actor":"pkozlowski-opensource","Number":"54814","RawContent":null,"Title":"refactor(core): assert presence of the track function","State":"closed","Body":"This commits assert that the repeater instruction gets a reference to a tracking function. This change will allow us to better track occurences of https://github.com/angular/angular/issues/53628 - in certain situations a reference to a tracking function might be undefiened.\r\n\r\nWe are not fixing the underlying issue here, just getting better visibility.\r\n","Url":"https://github.com/angular/angular/pull/54814","RelatedDescription":"Closed or merged PR \"refactor(core): assert presence of the track function\" (#54814)"},{"Id":"2180304661","IsPullRequest":true,"CreatedAt":"2024-03-11T21:40:02","Actor":"atscott","Number":"54824","RawContent":null,"Title":"fix(core): `ComponentFixture` `autoDetect` respects `OnPush` flag of …","State":"open","Body":"…host view\r\n\r\nThis is a follow-up to #53718 that applies the same logic to the `autoDetect` feature of the fixture's host view. This now unifies the logic between `ApplicationRef` and `ComponentFixture` autodetect.\r\n\r\nBREAKING CHANGE: The `ComponentFixture` `autoDetect` feature will no longer refresh the component's host view when the component is `OnPush` and not marked dirty. This exposes existing issues in components which claim to be `OnPush` but do not correctly call `markForCheck` when they need to be refreshed. If this change causes test failures, the easiest fix is to change the component to `ChangeDetectionStrategy.Default`.\r\n","Url":"https://github.com/angular/angular/pull/54824","RelatedDescription":"Open PR \"fix(core): `ComponentFixture` `autoDetect` respects `OnPush` flag of …\" (#54824)"},{"Id":"2179768214","IsPullRequest":true,"CreatedAt":"2024-03-11T20:39:56","Actor":"josephperrott","Number":"54822","RawContent":null,"Title":"docs: bump to 2024 for copyright text","State":"closed","Body":"Bump copyright text to 2024\r\n","Url":"https://github.com/angular/angular/pull/54822","RelatedDescription":"Closed or merged PR \"docs: bump to 2024 for copyright text\" (#54822)"},{"Id":"2178748744","IsPullRequest":false,"CreatedAt":"2024-03-11T19:35:34","Actor":"why520crazy","Number":"54806","RawContent":null,"Title":"use createComponent and ApplicationRef.attachView, the primary router outlet will to be replaced if the dynamically created component contains router-outlet","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore, router\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nIn a router component, using `createComponent` to dynamically create a component, after creation, use `applicationRef.attachView` attach to applicationRef, if the dynamically created component contains `router-outlet`, the current router component will be rendered in dynamically created components, It seems that the primary router-outlet has been replaced.\r\n\r\n```ts\r\n  \r\n@Component({\r\n  selector: 'app-with-router-outlet',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  template: '<p>with-router-outlet</p> <router-outlet />',\r\n})\r\nexport class WithRouterOutletComponent {}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  template: `\r\n    <button (click)=\"useCreateComponent()\">Create component contains router-outlet use createComponent</button>\r\n\r\n    <div class=\"container\" #container>\r\n      Container:\r\n    </div>\r\n  `,\r\n})\r\nexport class Dashboard {\r\n  applicationRef = inject(ApplicationRef);\r\n\r\n  container = viewChild<ElementRef>('container');\r\n\r\n  componentRef!: ComponentRef<WithRouterOutletComponent>;\r\n\r\n  useCreateComponent() {\r\n    this.componentRef = createComponent(WithRouterOutletComponent, {\r\n      environmentInjector: this.applicationRef.injector,\r\n    });\r\n    this.applicationRef.attachView(this.componentRef.hostView);\r\n    (this.container()?.nativeElement as HTMLElement).appendChild(\r\n      (this.componentRef.hostView as EmbeddedViewRef<any>)\r\n        .rootNodes[0] as HTMLElement\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.componentRef) {\r\n      this.applicationRef.detachView(this.componentRef.hostView);\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/ng-create-component-with-outer-outlet\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.2.2\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.2\r\n@angular-devkit/build-angular   17.2.2\r\n@angular-devkit/core            17.2.2\r\n@angular-devkit/schematics      17.2.2\r\n@angular/cdk                    17.2.1\r\n@angular/cli                    17.2.2\r\n@angular/material               17.2.1\r\n@schematics/angular             17.2.2\r\nng-packagr                      17.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nwebpack                         5.90.1\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n1. It is ok using `viewContainerRef.createComponent`\r\n2. This issue appearing in version 16. x, it's ok in 15.x for NgModule's application,  it's same for standalone application in version 15 and 16, with only inconsistent behavior in NgModule's application  in version 15 and 16.","Url":"https://github.com/angular/angular/issues/54806","RelatedDescription":"Closed issue \"use createComponent and ApplicationRef.attachView, the primary router outlet will to be replaced if the dynamically created component contains router-outlet\" (#54806)"},{"Id":"2179883725","IsPullRequest":true,"CreatedAt":"2024-03-11T18:18:35","Actor":"devknoll","Number":"54823","RawContent":null,"Title":"feat(core): add support for i18n hydration ","State":"open","Body":"Add support for hydrating i18n blocks. This is accomplished by serializing information about selected ICU cases for a block during server-side rendering.\r\n\r\nDuring hydration, this data is read and is used to traverse both an AST of the translated message and the DOM, in parallel, to map each LView with an RNode.\r\n\r\nFinally, this mapping is used while nodes are being created (either via i18n or their respective instructions) to locate existing nodes.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54823","RelatedDescription":"Open PR \"feat(core): add support for i18n hydration \" (#54823)"},{"Id":"2179463348","IsPullRequest":true,"CreatedAt":"2024-03-11T18:11:36","Actor":"atscott","Number":"54816","RawContent":null,"Title":"refactor(core): Remove isG3 usages in patch branch","State":"closed","Body":"This commit removes uses of isG3 in the patch branch. G3 always executes against main so any references in patch are unused.\r\n","Url":"https://github.com/angular/angular/pull/54816","RelatedDescription":"Closed or merged PR \"refactor(core): Remove isG3 usages in patch branch\" (#54816)"},{"Id":"2179475809","IsPullRequest":true,"CreatedAt":"2024-03-11T17:59:56","Actor":"theRealc0d3c","Number":"54817","RawContent":null,"Title":"docs: fix typo in tutorial","State":"closed","Body":"## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/54817","RelatedDescription":"Closed or merged PR \"docs: fix typo in tutorial\" (#54817)"},{"Id":"2179563743","IsPullRequest":true,"CreatedAt":"2024-03-11T16:26:10","Actor":"devversion","Number":"54819","RawContent":null,"Title":"Re-use original source file imports for efficient incremental type-checking","State":"open","Body":"See individual commits. The new import manager is more complex, but basically it will allow us to:\r\n\r\n- simplify the consumer side of the manager to generate imports + inserting them into TS transforms/contents\r\n- improve incremental re-use with type checking— by allowing us to avoid structural source file changes\r\n- share the same logic for schematics where we are solving similar problems— intending to re-use existing imports\r\n\r\nThis PR also adds tests for import generation. Something we don't have right now.\r\nIn a follow-up we can replace/remove the schematics import manager then. \r\n\r\nRelated to: https://github.com/angular/angular/pull/53521#pullrequestreview-1778130879","Url":"https://github.com/angular/angular/pull/54819","RelatedDescription":"Open PR \"Re-use original source file imports for efficient incremental type-checking\" (#54819)"},{"Id":"2179165039","IsPullRequest":false,"CreatedAt":"2024-03-11T16:01:50","Actor":"pkozlowski-opensource","Number":"54813","RawContent":null,"Title":"after render hook test is flaky in the repository","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\n[The \"does not execute queueStateUpdate if application is destroyed\" test](https://github.com/angular/angular/blob/54340a9fffcc9e35efa4134840a96df41ebaface/packages/core/test/acceptance/after_render_hook_spec.ts#L141-L168) is flaky when running `test packages/core/test/acceptance` and fails with:\r\n\r\n```\r\nError: 'expect' was used when there was no current spec, this could be because an asynchronous test timed out\r\n    at Env.expect (/Users/pkozlowski/work/github/pkozlowski-opensource/angular/node_modules/jasmine-core/lib/jasmine-core/jasmine.js:1945:15)\r\n    at expect (/Users/pkozlowski/work/github/pkozlowski-opensource/angular/node_modules/jasmine-core/lib/jasmine-core/jasmine.js:8267:18)\r\n    at file:///packages/core/test/acceptance/after_render_hook_spec.ts:165:12\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54813","RelatedDescription":"Closed issue \"after render hook test is flaky in the repository\" (#54813)"},{"Id":"2179505363","IsPullRequest":true,"CreatedAt":"2024-03-11T16:00:45","Actor":"angular-robot","Number":"54818","RawContent":null,"Title":"docs: update Angular CLI help [17.3.x]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/54818","RelatedDescription":"Open PR \"docs: update Angular CLI help [17.3.x]\" (#54818)"},{"Id":"2179012656","IsPullRequest":true,"CreatedAt":"2024-03-11T13:21:20","Actor":"Sholamide","Number":"54810","RawContent":null,"Title":"docs | Update overview.md","State":"closed","Body":"the existing API reference URL directs to \"api/animations,\" but I suggest that the intended URL should be \"guide/animations\"\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54810","RelatedDescription":"Closed or merged PR \"docs | Update overview.md\" (#54810)"},{"Id":"2179015618","IsPullRequest":false,"CreatedAt":"2024-03-11T13:17:07","Actor":"joelrichardvitrana","Number":"54811","RawContent":null,"Title":"CAST Issue (CVE-2024-21490)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe are writing to report a security vulnerability in Angular 14.1.1 that poses a significant risk to our application. We recently upgraded from Angular 8 to 14 to resolve a security vulnerability, at that time we were informed to upgrade to angular 11+, so we were under the impression this would provide a stable and secure foundation for our project.\r\nUnfortunately, discovering a critical vulnerability in a supposedly current version raises concerns about our long-term development strategy.  We understand that Angular 14 is no long supported, but due to the recent upgrade,  upgrading again so soon creates a substantial technical debt for our team.\r\nWe kindly request your assistance in this matter. Ideally, we would like to see a security patch released for this specific vulnerability **(CVE-2024-21490)** in Angular 14 as an exceptional measure. As per CAST, raised issue seems to occur in all versions of Angular above 1.3.0 till 17.2.3.\r\n\r\nIf a patch is not feasible, we would greatly appreciate any guidance you can offer on the following:\r\n* **Upgrade Path:**  Can you provide a detailed upgrade guide that minimizes the disruption caused by migrating to a newer version?\r\n* **Security Best Practices:** Are there any recommended security practices we can implement to mitigate the vulnerability in Angular 14 while we plan the upgrade?\r\nWe would be grateful for your support in resolving this vulnerability and ensuring a smoother upgrade process in the future.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54811","RelatedDescription":"Closed issue \"CAST Issue (CVE-2024-21490)\" (#54811)"},{"Id":"2178926940","IsPullRequest":false,"CreatedAt":"2024-03-11T11:47:44","Actor":"joelrichardvitrana","Number":"54809","RawContent":null,"Title":"@alan-agius4 For the supported versions, is the mentioned issue fixed because they have mentioned that all versions above 1.3.0 would have this issue. If that's the case updating the version wouldn't help us.","State":"closed","Body":"              @alan-agius4 For the supported versions, is the mentioned issue fixed because they have mentioned that all versions above 1.3.0 would have this issue. If that's the case updating the version wouldn't help us.\r\n\r\n![image](https://github.com/angular/angular/assets/131009370/e3b6fa2d-d7d3-484e-a3da-417dc41b555d)\r\n\r\n![image](https://github.com/angular/angular/assets/131009370/31a831bf-f0a3-4c0a-a01d-5eb57e6d3a39)\r\n\r\n_Originally posted by @joelrichardvitrana in https://github.com/angular/angular/issues/54807#issuecomment-1988208706_\r\n            ","Url":"https://github.com/angular/angular/issues/54809","RelatedDescription":"Closed issue \"@alan-agius4 For the supported versions, is the mentioned issue fixed because they have mentioned that all versions above 1.3.0 would have this issue. If that's the case updating the version wouldn't help us.\" (#54809)"},{"Id":"2178831034","IsPullRequest":false,"CreatedAt":"2024-03-11T10:56:23","Actor":"eneajaho","Number":"54808","RawContent":null,"Title":"Automatic migrations for signal inputs, outputs and view queries","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nAngular is moving towards signal inputs and function-based outputs. Should Angular provide official migrations for these types of migrations? \r\n\r\nIn ngxtension library we already have added support for migrating signal inputs and there's a [PR](https://github.com/nartc/ngxtension-platform/pull/301) in the works for the outputs (https://github.com/nartc/ngxtension-platform/pull/301) \r\n\r\nhttps://ngxtension.netlify.app/utilities/migrations/signal-inputs-migration/\r\n\r\nShould we add those migrations to Angular itself, or it's okay if we keep them in a community library. \n\n### Proposed solution\n\nMigrate the migrations from the community library to Angular itself \n\n### Alternatives considered\n\nKeep them in community library only.","Url":"https://github.com/angular/angular/issues/54808","RelatedDescription":"Open issue \"Automatic migrations for signal inputs, outputs and view queries\" (#54808)"},{"Id":"2178813610","IsPullRequest":false,"CreatedAt":"2024-03-11T10:56:16","Actor":"joelrichardvitrana","Number":"54807","RawContent":null,"Title":"CAST Issue raised (CVE-2024-21490) ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe are facing an issue **(CVE-2024-21490)** on CAST scanner report with a score of 7.5\r\nThey had asked to migrate to [@angular/core] for the counter measure but in our project we are already using \"@angular/core\": \"^14.3.0\". How do I resolve this?\r\n\r\nHere is package.json for reference \r\n\r\n\"dependencies\": {\r\n    \"@angular-builders/custom-webpack\": \"^14.1.0\",\r\n    \"@angular/animations\": \"^14.3.0\",\r\n    \"@angular/cdk\": \"^14.2.7\",\r\n    \"@angular/common\": \"^14.3.0\",\r\n    \"@angular/compiler\": \"^14.3.0\",\r\n    \"@angular/core\": \"^14.3.0\",\r\n    \"@angular/forms\": \"^14.3.0\",\r\n    \"@angular/platform-browser\": \"^14.3.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^14.3.0\",\r\n    \"@angular/router\": \"^14.3.0\",\r\n    \"@hilit/hilit-util\": \"0.0.0-alpha.5\",\r\n    \"@hilit/icon-style\": \"0.0.16\",\r\n    \"@hilit/microfrontend-interaction\": \"0.0.0-alpha.1\",\r\n    \"@hilit/tables\": \"0.0.0-alpha.25\",\r\n    \"@kolkov/angular-editor\": \"^1.2.0\",\r\n    \"@ngx-translate/core\": \"0.0.6\",\r\n    \"@ngx-translate/http-loader\": \"^4.0.0\",\r\n    \"@xmldom/xmldom\": \"0.8.7\",\r\n    \"async\": \"^3.2.4\",\r\n    \"chart.js\": \"^2.9.3\",\r\n    \"crypto-js\": \"^4.1.1\",\r\n    \"dexie\": \"^3.2.2\",\r\n    \"diff\": \"^3.3.1\",\r\n    \"express\": \"4.17.3\",\r\n    \"follow-redirects\": \"1.15.2\",\r\n    \"immer\": \"^9.0.15\",\r\n    \"inline-worker\": \"^1.1.0\",\r\n    \"jquery\": \"^3.6.1\",\r\n    \"jsdom\": \"21.1.1\",\r\n    \"json-schema\": \"0.4.0\",\r\n    \"jspdf\": \"^2.3.1\",\r\n    \"jspdf-autotable\": \"^3.5.25\",\r\n    \"minimist\": \"^1.2.6\",\r\n    \"moment\": \"^2.29.4\",\r\n    \"moment-timezone\": \"^0.5.37\",\r\n    \"ngx-extended-pdf-viewer\": \"^9.0.5\",\r\n    \"ngx-owl-carousel-o\": \"^5.1.1\",\r\n    \"optionator\": \"^0.9.1\",\r\n    \"path-parse\": \"^1.0.7\",\r\n    \"primeng\": \"^9.1.3\",\r\n    \"qs\": \"^6.11.0\",\r\n    \"rxjs\": \"~6.6.7\",\r\n    \"single-spa-angular\": \"^7.1.0\",\r\n    \"static-eval\": \"2.1.0\",\r\n    \"tslib\": \"^2.0.0\",\r\n    \"web-animations-js\": \"^2.3.2\",\r\n    \"webpack-merge\": \"^5.9.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^14.2.12\",\r\n    \"@angular/cli\": \"^14.2.12\",\r\n    \"@angular/compiler-cli\": \"^14.3.0\",\r\n    \"@angular/language-service\": \"^14.3.0\",\r\n    \"@types/jasmine\": \"~3.3.8\",\r\n    \"@types/jasminewd2\": \"~2.0.10\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"async\": \"^3.2.4\",\r\n    \"codelyzer\": \"^5.1.2\",\r\n    \"jasmine-core\": \"~3.5.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-coverage\": \"^2.2.1\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"ts-node\": \"~7.0.0\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.6.4\",\r\n    \"webpack\": \"^5.88.2\"\r\n  }\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54807","RelatedDescription":"Closed issue \"CAST Issue raised (CVE-2024-21490) \" (#54807)"},{"Id":"2178387202","IsPullRequest":true,"CreatedAt":"2024-03-11T07:11:54","Actor":"AleksanderBodurri","Number":"54805","RawContent":null,"Title":"Fix devtools iframe backend ready bug","State":"open","Body":"Previously, a race condition could cause DevTools to enter a state where it could not detect an application after a reload. This was caused by a sequencing issue between the content script connection, the devtools panel connection and an event \"backendReady\" that lets DevTools know when a particular frame is ready to be inspected.\r\n\r\nTwo commits that caused this behaviour were reverted, along with the features they implemented.\r\n\r\nThese two commits have been re-reverted, and one new commit has been introduced fixing the issue. This new commit replaces the previously stored backendReady boolean with a promise, so that the devtools panel can eventually run a callback to connect to a content script when that content script emits it's backendReady message.\r\n\r\nRelated https://github.com/angular/angular/issues/53953","Url":"https://github.com/angular/angular/pull/54805","RelatedDescription":"Open PR \"Fix devtools iframe backend ready bug\" (#54805)"},{"Id":"2178119910","IsPullRequest":false,"CreatedAt":"2024-03-11T02:59:14","Actor":"tmx-502","Number":"54804","RawContent":null,"Title":"angular accidentally calls a method in the project's two-party library","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nMy project is angular15, using two-party library for angular13, because using npm i --legacy-peer-deps installation, so in node_modules two-party library shared the parent project angular15 dependencies, The setDisabledState method in the two-party library was accidentally called when the project was running, causing an internal error in my two-party library that the image could not be served due to network problems. After I changed the name of the setDisabledState method in the two-party library code, the program returned to normal. I suspect that there is a problem with angular's code isolation. Is it because my two-party library is referencing a dependency in @angular/core that calls an external setDisabledState method? Because I see a lot of setDisabledState calls in angular15.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.2.10\r\nNode: 20.11.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 15.2.10\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.10\r\n@angular-devkit/build-angular   15.2.10\r\n@angular-devkit/core            15.2.10\r\n@angular-devkit/schematics      15.2.10\r\n@angular/cdk                    15.2.9\r\n@schematics/angular             15.2.10\r\nrxjs                            6.6.7\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n3","Url":"https://github.com/angular/angular/issues/54804","RelatedDescription":"Open issue \"angular accidentally calls a method in the project's two-party library\" (#54804)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2182828692","IsPullRequest":true,"CreatedAt":"2024-03-12T23:06:23","Actor":"clydin","Number":"27266","RawContent":null,"Title":"feat(@schematics/angular): use TypeScript bundler module resolution for new projects","State":"open","Body":"The `bundler` TypeScript resolution mode is now the default for all newly created Angular CLI projects. This mode allows TypeScript to read and use any package.json `exports` and `imports` fields found within packages including the Angular workspace. Unlike the `node16` option value, this value does not require the use of file extensions for each import and does not require modification of all existing application code to use. The TypeScript language service also benefits from this option by allowing import auto-discovery to leverage any `exports` defined for a package. This is particularly useful for packages such as `@angular/material` which makes extensive use of secondary package exports.\r\n\r\nAdditional information regarding this resolution mode can be found here: https://www.typescriptlang.org/tsconfig#moduleResolution","Url":"https://github.com/angular/angular-cli/pull/27266","RelatedDescription":"Open PR \"feat(@schematics/angular): use TypeScript bundler module resolution for new projects\" (#27266)"},{"Id":"2180745080","IsPullRequest":true,"CreatedAt":"2024-03-12T16:46:17","Actor":"angular-robot","Number":"27260","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `1cc23b2` -> `fef1cd2` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `d3e46c1` -> `a6032f3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `65d002a` -> `7879726` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `d8b5323` -> `4631f55` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `042ebac` -> `684da70` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `92dc827` -> `57411c1` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `91d2b25` -> `6e9a411` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `cd4a1e3` -> `9b29ac6` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `908fb7e` -> `1b0cca0` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `f14dee5` -> `8106bee` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `52b5149` -> `7217dba` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `0691eb2` -> `6ad40e8` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c7bbc91` -> `77afda0` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `7dea535` -> `79af385` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `e76565b` -> `1d2196b` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `dc3808b` -> `763cc45` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `a1559ca` -> `605474d` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `730b984` -> `4862772` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `96d734c` -> `5558282` |\n| angular/dev-infra | action | digest | `5774b71` -> `0160e89` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzUuNSIsInVwZGF0ZWRJblZlciI6IjM3LjIzOS4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27260","RelatedDescription":"Closed or merged PR \"build: update angular\" (#27260)"},{"Id":"2180079620","IsPullRequest":true,"CreatedAt":"2024-03-12T16:45:54","Actor":"clydin","Number":"27254","RawContent":null,"Title":"build: remove template string helpers from validation scripts","State":"closed","Body":"The helpers are unneeded and behavior can be reproduced with direct string usage.  Also, this removes a runtime dependency on the packages being validated.","Url":"https://github.com/angular/angular-cli/pull/27254","RelatedDescription":"Closed or merged PR \"build: remove template string helpers from validation scripts\" (#27254)"},{"Id":"2176195836","IsPullRequest":true,"CreatedAt":"2024-03-12T16:45:34","Actor":"clydin","Number":"27241","RawContent":null,"Title":"build: add infrastructure to build local-variant package outputs to main build script","State":"closed","Body":"The main release build script now has the infrastructure needed to build using the `local` bazel configuration. This is not yet used within the build process but provides the base infrastructure to support local builds of the packages in the future. `local` builds are package builds that contain file path dependencies to the other built package archives in the workspace and are used for local development and testing purposes only.","Url":"https://github.com/angular/angular-cli/pull/27241","RelatedDescription":"Closed or merged PR \"build: add infrastructure to build local-variant package outputs to main build script\" (#27241)"},{"Id":"2178767821","IsPullRequest":true,"CreatedAt":"2024-03-12T15:51:03","Actor":"alan-agius4","Number":"27249","RawContent":null,"Title":"    refactor(@angular/cli): remove support for Node.js versions <18.19.1 and <20.11.1","State":"closed","Body":"BREAKING CHANGE: Node.js support for versions <18.19.1 and <20.11.1 has been removed.","Url":"https://github.com/angular/angular-cli/pull/27249","RelatedDescription":"Closed or merged PR \"    refactor(@angular/cli): remove support for Node.js versions <18.19.1 and <20.11.1\" (#27249)"},{"Id":"2181781895","IsPullRequest":false,"CreatedAt":"2024-03-12T15:36:33","Actor":"mangelozzi","Number":"27265","RawContent":null,"Title":"Cant update to Angular 17 if using `nguniversal`","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf one updates to Angular 17, but you are using nguniversal, these pacakge require angular 16:\r\n\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n\r\n### Minimal Reproduction\r\n\r\n1. Put this in your `package.json`:\r\n```\r\n{\r\n    \"name\": \"ng-client\",\r\n    \"version\": \"0.0.0\",\r\n    \"scripts\": {\r\n        \"ng\": \"ng\",\r\n        \"start\": \"ng serve\",\r\n        \"build\": \"ng build\",\r\n        \"build:stats\": \"ng build --stats-json\",\r\n        \"analyze:stats\": \"webpack-bundle-analyzer dist/ngClient/browser/stats.json\",\r\n        \"analyze\": \"source-map-explorer dist/ngClient/browser/*.js\",\r\n        \"watch\": \"ng build --watch --configuration development\",\r\n        \"test\": \"ng test\",\r\n        \"dev:ssr\": \"ng run ngClient:serve-ssr\",\r\n        \"serve:ssr\": \"node dist/ngClient/server/main.js\",\r\n        \"build:ssr\": \"ng build && ng run ngClient:server\",\r\n        \"serve:pre\": \"http-server -g -c-1 dist/ngClient/browser\",\r\n        \"build:pre\": \"ng run ngClient:prerender\"\r\n    },\r\n    \"private\": true,\r\n    \"dependencies\": {\r\n        \"@angular/animations\": \"^17.2.4\",\r\n        \"@angular/cdk\": \"^17.2.2\",\r\n        \"@angular/common\": \"^17.2.4\",\r\n        \"@angular/compiler\": \"^17.2.4\",\r\n        \"@angular/core\": \"^17.2.4\",\r\n        \"@angular/forms\": \"^17.2.4\",\r\n        \"@angular/material\": \"^17.2.2\",\r\n        \"@angular/platform-browser\": \"^17.2.4\",\r\n        \"@angular/platform-browser-dynamic\": \"^17.2.4\",\r\n        \"@angular/platform-server\": \"^17.2.4\",\r\n        \"@angular/router\": \"^17.2.4\",\r\n        \"@nguniversal/express-engine\": \"^16.2.0\",\r\n        \"express\": \"^4.18.3\",\r\n        \"lodash\": \"^4.17.21\",\r\n        \"ngx-skeleton-loader\": \"^9.0.0\",\r\n        \"rxjs\": \"~7.8.1\",\r\n        \"tslib\": \"^2.6.2\",\r\n        \"zone.js\": \"~0.14.4\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@angular-devkit/build-angular\": \"^17.2.3\",\r\n        \"@angular/cli\": \"^17.2.3\",\r\n        \"@angular/compiler-cli\": \"^17.2.4\",\r\n        \"@nguniversal/builders\": \"^16.2.0\",\r\n        \"@types/express\": \"^4.17.21\",\r\n        \"@types/jasmine\": \"~5.1.4\",\r\n        \"@types/lodash\": \"^4.17.0\",\r\n        \"@types/node\": \"^20.11.26\",\r\n        \"jasmine-core\": \"~5.1.2\",\r\n        \"karma\": \"~6.4.3\",\r\n        \"karma-chrome-launcher\": \"~3.2.0\",\r\n        \"karma-coverage\": \"~2.2.1\",\r\n        \"karma-jasmine\": \"~5.1.0\",\r\n        \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n        \"prettier\": \"^3.0.2\",\r\n        \"typescript\": \"~5.3.3\",\r\n        \"webpack-bundle-analyzer\": \"^4.10.1\"\r\n    }\r\n}\r\n```\r\n\r\n2. `npm install`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n$ npm update\r\nnpm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR!\r\nnpm ERR! While resolving: ng-client@0.0.0\r\nnpm ERR! Found: @angular/common@17.2.4\r\nnpm ERR! node_modules/@angular/common\r\nnpm ERR!   @angular/common@\"^17.2.4\" from the root project\r\nnpm ERR!\r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @angular/common@\"^16.0.0 || ^16.1.0-next.0\" from @nguniversal/express-engine@16.2.0\r\nnpm ERR! node_modules/@nguniversal/express-engine\r\nnpm ERR!   @nguniversal/express-engine@\"^16.2.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.2.3\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/material               17.2.2\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nSame issue as https://github.com/angular/angular-cli/issues/26167","Url":"https://github.com/angular/angular-cli/issues/27265","RelatedDescription":"Closed issue \"Cant update to Angular 17 if using `nguniversal`\" (#27265)"},{"Id":"2181038311","IsPullRequest":true,"CreatedAt":"2024-03-12T14:28:19","Actor":"alan-agius4","Number":"27263","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): properly display errors originating in ESM loader hooks","State":"closed","Body":"\r\n\r\nCurrently, errors occurring in ESM loader hooks while using `--import` are not correctly displayed, as they cannot be transferred from the worker to the main thread. Although the error is an instance of Error, it contains non-transferable properties and cannot be transmitted from a worker when --import is used. Consequently, when read outside of the worker, the error object displays as `[Object object]`. To address this issue, we reconstruct the error message.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/27251\r\n","Url":"https://github.com/angular/angular-cli/pull/27263","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): properly display errors originating in ESM loader hooks\" (#27263)"},{"Id":"2180196265","IsPullRequest":false,"CreatedAt":"2024-03-12T14:08:58","Actor":"danielsogl","Number":"27256","RawContent":null,"Title":"Could not resolve tailwind after Angular CLI v17.2.3 upgrade","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.2.2\n\n### Description\n\nAfter upgrading to the latest Angular CLI v17.2.3 I'am unable to resolve tailwind css in my project and the build fails.\n\n### Minimal Reproduction\n\n- add tailwind\r\n- import tailwind as provided in the styles.scss file\r\n\r\n```scss\r\n/* You can add global styles to this file, and also import other style files */\r\n@layer tailwind-base;\r\n\r\n@import 'tailwindcss/base' layer(tailwind-base);\r\n@tailwind components;\r\n@tailwind utilities;\r\n```\n\n### Exception or Error\n\n```text\n> ng build\r\n- Building...\r\n\r\n\r\nApplication bundle generation failed. [13.954 seconds]\r\nError: R] Could not resolve \"tailwindcss/base\"\r\n\r\n    src/styles.scss:3:8:\r\n      3 │ @import 'tailwindcss/base' layer(tailwind-base);\r\n        ╵         ~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"tailwindcss/base\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n\r\n\r\nError: Process completed with exit code 1.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.2\r\nNode: 20.11.0\r\nPackage Manager: npm 10.5.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.2\r\n@angular-devkit/build-angular   17.2.2\r\n@angular-devkit/core            17.2.2\r\n@angular-devkit/schematics      17.2.2\r\n@angular/cli                    17.2.2\r\n@schematics/angular             17.2.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27256","RelatedDescription":"Closed issue \"Could not resolve tailwind after Angular CLI v17.2.3 upgrade\" (#27256)"},{"Id":"2179565818","IsPullRequest":true,"CreatedAt":"2024-03-12T13:46:21","Actor":"clydin","Number":"27252","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded option type casting from several builders","State":"closed","Body":"Multiple cases where builder options were being cast to the `JsonObject` type have been removed. These casts are no longer needed and unnecessarily added complexity to the code.","Url":"https://github.com/angular/angular-cli/pull/27252","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded option type casting from several builders\" (#27252)"},{"Id":"2181351564","IsPullRequest":false,"CreatedAt":"2024-03-12T11:12:25","Actor":"kamilchlebek","Number":"27264","RawContent":null,"Title":"CLI doesn't allow custom builder to pass additional extensions when building app for i18n extractions","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Description\r\n\r\nWe're in the process of migrating from webpack to esbuild. \r\nTo provide custom esbuild plugins we decided to use custom builder (https://github.com/just-jeb/angular-builders).\r\n\r\nIt went smooth until we realised that `extract-i18` no longer works. It ends successfully but `messages.xlf` is empty. \r\n\r\nIt turned out that angular checks `builderName` to choose which bundler to use. \r\n\r\nTo fix that I decided to implement custom `extract-i18n` builder that will trick `angular/cli` and force using esbuild - \r\nhttps://github.com/just-jeb/angular-builders/pull/1711\r\n\r\nFor the record `nrwl/nx` did the same - https://github.com/nrwl/nx/pull/21802\r\n\r\n**The issue** is that `angular/cli` will not let us pass any extensions during i18n application compilation. \r\n\r\nhttps://github.com/angular/angular-cli/blob/1034bb155b58a5f18eecf56409a3ff99d2ca4474/packages/angular_devkit/build_angular/src/builders/extract-i18n/application-extraction.ts#L59\r\n\r\nIt may lead to inconsistency between build and extract flow, which I suppose may lead to issues with i18n.\r\n\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nWe should be able to pass custom extensions as for regular app building. \r\n\r\n(bonus) would be really nice if these `if (builderName === ...` are  replaced by something that is custom builder friendly 🙏 \r\n\r\n### Describe alternatives you've considered\r\n\r\nAlternatively we could rewrite whole `extract-i18n` builder, but as 95% of the code would be the same - it seems pointless ","Url":"https://github.com/angular/angular-cli/issues/27264","RelatedDescription":"Open issue \"CLI doesn't allow custom builder to pass additional extensions when building app for i18n extractions\" (#27264)"},{"Id":"2179116981","IsPullRequest":false,"CreatedAt":"2024-03-12T09:06:28","Actor":"masterwendu","Number":"27251","RawContent":null,"Title":"Build application with prerender routes file fails","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI migrated my app to Angular 17 --> works as expected.\r\n\r\nNow I want to get rid of my webpack build.\r\n\r\nSo I migrate my prerendering to @angular-devkit/build-angular:application:\r\n```\r\n\r\n          \"builder\": \"@angular-devkit/build-angular:application\",\r\n          \"options\": {\r\n              \"outputPath\": \"dist/browser\",\r\n              \"index\": \"src/index.html\",\r\n              \"browser\": \"src/main.ts\",\r\n              \"polyfills\": [ \"src/polyfills.ts\" ],\r\n              \"tsConfig\": \"tsconfig.app.json\",\r\n              \"inlineStyleLanguage\": \"scss\",\r\n              \"assets\": [\r\n                \"src/favicon.ico\",\r\n                \"src/assets\",\r\n                \"src/sitemap.xml\",\r\n                \"src/robots.txt\"\r\n              ],\r\n              \"styles\": [\r\n                \"src/styles.scss\"\r\n              ],\r\n              \"scripts\": [],\r\n              \"prerender\": {\r\n                \"discoverRoutes\": false,\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n          },\r\n....\r\n```\r\n\r\nwhen I run then the build with ng build I get following error:\r\n```\r\nAn unexpected error occurred: [object Object]\r\nerror: script \"build\" exited with code 1\r\n```\r\n\r\nThis only happens when prerender options is:\r\n```\r\n              \"prerender\": {\r\n                \"discoverRoutes\": false,\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n```\r\n```\r\n              \"prerender\": {\r\n                \"routesFile\": \"routes.txt\"\r\n              }\r\n```\r\n```\r\n              \"prerender\": {\r\n                \"discoverRoutes\": true,\r\n              }\r\n```\r\n```\r\n              \"prerender\":  true\r\n```\r\n\r\nmy routes.txt is correct.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\nhttps://github.com/WhizUs-Labs/angular-prerender-test\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nAn unexpected error occurred: [object Object]\r\nerror: script \"build\" exited with code 1\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.2.3\r\nNode: 20.11.1\r\nPackage Manager: bun 1.0.30\r\nOS: linux x64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/google-maps            17.2.2\r\n@angular/ssr                    17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27251","RelatedDescription":"Closed issue \"Build application with prerender routes file fails\" (#27251)"},{"Id":"2179594927","IsPullRequest":true,"CreatedAt":"2024-03-12T09:06:27","Actor":"alan-agius4","Number":"27253","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide better error message when server option is required but missing","State":"closed","Body":"\r\n\r\nThis improves the error message when the server entry-point is required but missing\r\n\r\nCloses #27251\r\n","Url":"https://github.com/angular/angular-cli/pull/27253","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide better error message when server option is required but missing\" (#27253)"},{"Id":"2180317935","IsPullRequest":true,"CreatedAt":"2024-03-12T08:37:27","Actor":"clydin","Number":"27258","RawContent":null,"Title":"build: update aspect_bazel_lib to v2.5.3","State":"closed","Body":"Also removes `asspect_bazel_lib` from the renovate update ignore list. The build problems have since been resolved.","Url":"https://github.com/angular/angular-cli/pull/27258","RelatedDescription":"Closed or merged PR \"build: update aspect_bazel_lib to v2.5.3\" (#27258)"},{"Id":"2180426021","IsPullRequest":false,"CreatedAt":"2024-03-12T07:40:33","Actor":"Ariel-Dayan","Number":"27259","RawContent":null,"Title":"loader-utils vulnerability","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nwhen running `npm audit` after upgrading angular version to `16` or `17`, received the following vulnerability about `loader-utils`.\r\non `npm ls loader-utils` it's seem like it's in used of @angular-devkit/build-angular -> resolve-url-loader@5.0.0\n\n### Minimal Reproduction\n\n`npm audit` & `npm ls loader-utils`\n\n### Exception or Error\n\n```text\nnpm audit report:\r\n\r\n\r\nloader-utils 2.0.0 - 2.0.3\r\nSeverity: critical\r\nloader-utils is vulnerable to Regular Expression Denial of Service (ReDoS) - https://github.com/advisories/GHSA-hhq3-ff78-jv3g\r\nPrototype pollution in webpack loader-utils - https://github.com/advisories/GHSA-76p3-8jx3-jpfq\r\nloader-utils is vulnerable to Regular Expression Denial of Service (ReDoS) via url variable - https://github.com/advisories/GHSA-3rfm-jhwj-7488\r\n```\n```\n\n\n### Your Environment\n\n```text\n16.2.12\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27259","RelatedDescription":"Closed issue \"loader-utils vulnerability\" (#27259)"},{"Id":"2180829029","IsPullRequest":false,"CreatedAt":"2024-03-12T06:56:44","Actor":"laijuthomas","Number":"27262","RawContent":null,"Title":"Getting error ReferenceError: fetch in server after deploy. ","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.11\n\n### Description\n\nI am getting an error ReferenceError: fetch is not defined while building and deploying my angular 17 app in server. While building the same app in my local machine and serving doesn't produce the same issue.\n\n### Minimal Reproduction\n\nng build --configuration staging\n\n### Exception or Error\n\n```text\nReferenceError: fetch is not defined\r\n    at new e (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-DPJU7YM5.mjs:3:13592)\r\n    at Object.e.ɵfac [as factory] (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-DPJU7YM5.mjs:3:15810)\r\n    at Cn.hydrate (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7010)\r\n    at Cn.get (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:6166)\r\n    at Cm (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17498)\r\n    at ae (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17575)\r\n    at Object.r [as factory] (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7900)\r\n    at Cn.hydrate (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:7010)\r\n    at Cn.get (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:8:6166)\r\n    at Cm (file:///var/www/capbargain-seed.fayastage.com/dist/server/chunk-VOQPDT5O.mjs:5:17498)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27262","RelatedDescription":"Closed issue \"Getting error ReferenceError: fetch in server after deploy. \" (#27262)"},{"Id":"2180745369","IsPullRequest":true,"CreatedAt":"2024-03-12T05:10:54","Actor":"angular-robot","Number":"27261","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`7.1.1` -> `7.2.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/7.1.1/7.2.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`7.1.1` -> `7.2.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/7.1.1/7.2.0) |\n| [inquirer](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`9.2.15` -> `9.2.16`](https://renovatebot.com/diffs/npm/inquirer/9.2.15/9.2.16) |\n| [inquirer](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`9.2.15` -> `9.2.16`](https://renovatebot.com/diffs/npm/inquirer/9.2.15/9.2.16) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.105` -> `23.0.106`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.105/23.0.106) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`~4.12.0` -> `~4.13.0`](https://renovatebot.com/diffs/npm/rollup/4.12.1/4.13.0) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`5.1.5` -> `5.1.6`](https://renovatebot.com/diffs/npm/vite/5.1.5/5.1.6) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`5.1.5` -> `5.1.6`](https://renovatebot.com/diffs/npm/vite/5.1.5/5.1.6) |\n| [webpack-dev-server](https://togithub.com/webpack/webpack-dev-server) | dependencies | patch | [`5.0.2` -> `5.0.3`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.0.2/5.0.3) |\n| [webpack-dev-server](https://togithub.com/webpack/webpack-dev-server) | devDependencies | patch | [`5.0.2` -> `5.0.3`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.0.2/5.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v7.2.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#720-2024-03-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.1.1...v7.2.0)\n\n##### 🚀 Features\n\n-   support TS 5.4\n\n-   **eslint-plugin:** \\[prefer-string-starts-ends-with] add allowSingleElementEquality option\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** expose \\*-type-checked-only configs for extension\n\n-   **eslint-plugin:** \\[member-ordering] report alphabetical sorting for all groups instead of just the first failing group\n\n-   **eslint-plugin:** \\[no-var-requires, no-require-imports] support template literal\n\n-   **eslint-plugin:** \\[no-useless-template-literals] detect TemplateLiteral\n\n-   **eslint-plugin:** \\[no-unnecessary-condition] handle union array and tuple type\n\n-   **eslint-plugin:** \\[prefer-find] support ternary branches in prefer-find\n\n##### ❤️  Thank You\n\n-   Arka Pratim Chaudhuri\n-   auvred\n-   Chris Plummer\n-   Fotis Papadogeorgopoulos\n-   Josh Goldberg ✨\n-   Kirk Waiblinger\n-   Wayne Zhang\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v7.2.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#720-2024-03-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.1.1...v7.2.0)\n\n##### 🚀 Features\n\n-   support TS 5.4\n\n##### ❤️  Thank You\n\n-   Arka Pratim Chaudhuri\n-   auvred\n-   Chris Plummer\n-   Fotis Papadogeorgopoulos\n-   Josh Goldberg ✨\n-   Kirk Waiblinger\n-   Wayne Zhang\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>SBoudrias/Inquirer.js (inquirer)</summary>\n\n### [`v9.2.16`](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@9.2.15...inquirer@9.2.16)\n\n[Compare Source](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@9.2.15...inquirer@9.2.16)\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.106`](https://togithub.com/quicktype/quicktype/compare/0b5924db1d3858d6f4abe5923cce53b2f4e581aa...99d4dcac0151d216315000919af14d8b6b53712b)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/0b5924db1d3858d6f4abe5923cce53b2f4e581aa...99d4dcac0151d216315000919af14d8b6b53712b)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.13.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4130)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v4.12.1...v4.13.0)\n\n*2024-03-12*\n\n##### Features\n\n-   Ensure that the location of parse errors and other logs is encoded in the error message as well ([#&#8203;5424](https://togithub.com/rollup/rollup/issues/5424))\n\n##### Pull Requests\n\n-   [#&#8203;5417](https://togithub.com/rollup/rollup/pull/5417): chore(deps): lock file maintenance minor/patch updates ( [@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5418](https://togithub.com/rollup/rollup/pull/5418): chore(deps): lock file maintenance ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5419](https://togithub.com/rollup/rollup/pull/5419): chore: fix typo ([@&#8203;OnlyWick](https://togithub.com/OnlyWick))\n-   [#&#8203;5424](https://togithub.com/rollup/rollup/pull/5424): Add locations to logs, warnings and error messages ( [@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.1.6`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small516-2024-03-11-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.1.5...v5.1.6)\n\n-   chore(deps): update all non-major dependencies ([#&#8203;16131](https://togithub.com/vitejs/vite/issues/16131)) ([a862ecb](https://togithub.com/vitejs/vite/commit/a862ecb)), closes [#&#8203;16131](https://togithub.com/vitejs/vite/issues/16131)\n-   fix: check for publicDir before checking if it is a parent directory ([#&#8203;16046](https://togithub.com/vitejs/vite/issues/16046)) ([b6fb323](https://togithub.com/vitejs/vite/commit/b6fb323)), closes [#&#8203;16046](https://togithub.com/vitejs/vite/issues/16046)\n-   fix: escape single quote when relative base is used ([#&#8203;16060](https://togithub.com/vitejs/vite/issues/16060)) ([8f74ce4](https://togithub.com/vitejs/vite/commit/8f74ce4)), closes [#&#8203;16060](https://togithub.com/vitejs/vite/issues/16060)\n-   fix: handle function property extension in namespace import ([#&#8203;16113](https://togithub.com/vitejs/vite/issues/16113)) ([f699194](https://togithub.com/vitejs/vite/commit/f699194)), closes [#&#8203;16113](https://togithub.com/vitejs/vite/issues/16113)\n-   fix: server middleware mode resolve ([#&#8203;16122](https://togithub.com/vitejs/vite/issues/16122)) ([8403546](https://togithub.com/vitejs/vite/commit/8403546)), closes [#&#8203;16122](https://togithub.com/vitejs/vite/issues/16122)\n-   fix(esbuild): update tsconfck to fix bug that could cause a deadlock  ([#&#8203;16124](https://togithub.com/vitejs/vite/issues/16124)) ([fd9de04](https://togithub.com/vitejs/vite/commit/fd9de04)), closes [#&#8203;16124](https://togithub.com/vitejs/vite/issues/16124)\n-   fix(worker): hide \"The emitted file overwrites\" warning if the content is same ([#&#8203;16094](https://togithub.com/vitejs/vite/issues/16094)) ([60dfa9e](https://togithub.com/vitejs/vite/commit/60dfa9e)), closes [#&#8203;16094](https://togithub.com/vitejs/vite/issues/16094)\n-   fix(worker): throw error when circular worker import is detected and support self referencing worker ([eef9da1](https://togithub.com/vitejs/vite/commit/eef9da1)), closes [#&#8203;16103](https://togithub.com/vitejs/vite/issues/16103)\n-   style(utils): remove null check ([#&#8203;16112](https://togithub.com/vitejs/vite/issues/16112)) ([0d2df52](https://togithub.com/vitejs/vite/commit/0d2df52)), closes [#&#8203;16112](https://togithub.com/vitejs/vite/issues/16112)\n-   refactor(runtime): share more code between runtime and main bundle ([#&#8203;16063](https://togithub.com/vitejs/vite/issues/16063)) ([93be84e](https://togithub.com/vitejs/vite/commit/93be84e)), closes [#&#8203;16063](https://togithub.com/vitejs/vite/issues/16063)\n\n</details>\n\n<details>\n<summary>webpack/webpack-dev-server (webpack-dev-server)</summary>\n\n### [`v5.0.3`](https://togithub.com/webpack/webpack-dev-server/blob/HEAD/CHANGELOG.md#503-2024-03-12)\n\n[Compare Source](https://togithub.com/webpack/webpack-dev-server/compare/v5.0.2...v5.0.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMzUuNSIsInVwZGF0ZWRJblZlciI6IjM3LjIzOS4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27261","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#27261)"},{"Id":"2180123076","IsPullRequest":true,"CreatedAt":"2024-03-11T21:46:12","Actor":"clydin","Number":"27255","RawContent":null,"Title":"build: update less-loader to v12.2.0","State":"closed","Body":"Also removes `less-loader` from the renovate update ignore list. The transitive dependency licensing issue has been resolved upstream.","Url":"https://github.com/angular/angular-cli/pull/27255","RelatedDescription":"Closed or merged PR \"build: update less-loader to v12.2.0\" (#27255)"},{"Id":"2180218909","IsPullRequest":false,"CreatedAt":"2024-03-11T21:45:24","Actor":"ArielDayanDev","Number":"27257","RawContent":null,"Title":"closed","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/issues/27257","RelatedDescription":"Closed issue \"closed\" (#27257)"},{"Id":"2179051215","IsPullRequest":true,"CreatedAt":"2024-03-11T18:00:55","Actor":"alan-agius4","Number":"27250","RawContent":null,"Title":"build: update dependency webpack-dev-server to v5","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27250","RelatedDescription":"Closed or merged PR \"build: update dependency webpack-dev-server to v5\" (#27250)"},{"Id":"2178389761","IsPullRequest":true,"CreatedAt":"2024-03-11T17:00:46","Actor":"angular-robot","Number":"27246","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMTkuNCIsInVwZGF0ZWRJblZlciI6IjM3LjIxOS40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27246","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#27246)"},{"Id":"2178572397","IsPullRequest":true,"CreatedAt":"2024-03-11T16:57:00","Actor":"crisbeto","Number":"27247","RawContent":null,"Title":"build: update vendored TypeScript to final","State":"closed","Body":"In an earlier commit TypeScript was updated to stable, but not the vendored version.","Url":"https://github.com/angular/angular-cli/pull/27247","RelatedDescription":"Closed or merged PR \"build: update vendored TypeScript to final\" (#27247)"},{"Id":"2176844074","IsPullRequest":true,"CreatedAt":"2024-03-11T14:06:37","Actor":"clydin","Number":"27242","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): reduce usage of @angular-devkit/core types","State":"closed","Body":"Logging types are now based on the BuilderContext's type instead of the `@angular-devkit/core` type. This reduces the need to directly depend on this package while also allowing the builder logging type to diverge if needed.","Url":"https://github.com/angular/angular-cli/pull/27242","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): reduce usage of @angular-devkit/core types\" (#27242)"},{"Id":"2176850701","IsPullRequest":true,"CreatedAt":"2024-03-11T14:06:23","Actor":"clydin","Number":"27243","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): improve i18n project option validation","State":"closed","Body":"The `i18n` project field is used to configure i18n behavior for a project. The validation code has been reorganized to use two helper functions to centralize the type validation and exception throwing. This reduces the complexity of the analysis code as well as removing the need to rely on `@angular-devkit/core`.","Url":"https://github.com/angular/angular-cli/pull/27243","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): improve i18n project option validation\" (#27243)"},{"Id":"2177025768","IsPullRequest":true,"CreatedAt":"2024-03-11T14:05:28","Actor":"clydin","Number":"27245","RawContent":null,"Title":"Some Angular schematic cleanup","State":"closed","Body":"See individual commits.","Url":"https://github.com/angular/angular-cli/pull/27245","RelatedDescription":"Closed or merged PR \"Some Angular schematic cleanup\" (#27245)"},{"Id":"2178615410","IsPullRequest":true,"CreatedAt":"2024-03-11T10:49:41","Actor":"angular-robot","Number":"27248","RawContent":null,"Title":"build: update dependency build_bazel_rules_nodejs to v6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | major | `5.8.3` -> `v6.0.5` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs (build_bazel_rules_nodejs)</summary>\n\n### [`v6.0.5`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.5)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/v6.0.4...v6.0.5)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.5\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"a50986c7d2f2dc43a5b9b81a6245fd89bdc4866f1d5e316d9cef2782dd859292\",\n    strip_prefix = \"rules_nodejs-6.0.5\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.5/rules_nodejs-v6.0.5.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3712](https://togithub.com/bazelbuild/rules_nodejs/pull/3712)\n-   chore: cancel previous GHA from the same PR by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/bazelbuild/rules_nodejs/pull/3715](https://togithub.com/bazelbuild/rules_nodejs/pull/3715)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3717](https://togithub.com/bazelbuild/rules_nodejs/pull/3717)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/v6.0.3...v6.0.5\n\n### [`v6.0.4`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.4)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/v6.0.3...v6.0.4)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.4\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"1acabd60b174a75436a78f921bbf4b03614cb892629f0f8ed0ee2ee3e48baf99\",\n    strip_prefix = \"rules_nodejs-6.0.4\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.4/rules_nodejs-v6.0.4.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3712](https://togithub.com/bazelbuild/rules_nodejs/pull/3712)\n-   chore: cancel previous GHA from the same PR by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/bazelbuild/rules_nodejs/pull/3715](https://togithub.com/bazelbuild/rules_nodejs/pull/3715)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3717](https://togithub.com/bazelbuild/rules_nodejs/pull/3717)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/v6.0.3...v6.0.4\n\n### [`v6.0.3`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.3)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/v6.0.2...v6.0.3)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.3\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"f36e4a4747210331767033dc30728ae3df0856e88ecfdc48a0077ba874db16c3\",\n    strip_prefix = \"rules_nodejs-6.0.3\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.3/rules_nodejs-v6.0.3.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Disable Bzlmod explicitly in .bazelrc by [@&#8203;meteorcloudy](https://togithub.com/meteorcloudy) in [https://github.com/bazelbuild/rules_nodejs/pull/3696](https://togithub.com/bazelbuild/rules_nodejs/pull/3696)\n-   Fix issue link by [@&#8203;meteorcloudy](https://togithub.com/meteorcloudy) in [https://github.com/bazelbuild/rules_nodejs/pull/3697](https://togithub.com/bazelbuild/rules_nodejs/pull/3697)\n-   Avoid usage of uname and cleanup os_name logic by [@&#8203;dzbarsky](https://togithub.com/dzbarsky) in [https://github.com/bazelbuild/rules_nodejs/pull/3698](https://togithub.com/bazelbuild/rules_nodejs/pull/3698)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3699](https://togithub.com/bazelbuild/rules_nodejs/pull/3699)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3700](https://togithub.com/bazelbuild/rules_nodejs/pull/3700)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3701](https://togithub.com/bazelbuild/rules_nodejs/pull/3701)\n-   Use `headers` attribute for toolchains only if it is set by [@&#8203;avdv](https://togithub.com/avdv) in [https://github.com/bazelbuild/rules_nodejs/pull/3704](https://togithub.com/bazelbuild/rules_nodejs/pull/3704)\n-   Update MODULE.bazel by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3706](https://togithub.com/bazelbuild/rules_nodejs/pull/3706)\n-   Work properly on intel CPUs on macos. Normalize x86\\_64->amd64 naming in `osname()` method by [@&#8203;sfc-gh-ptabor](https://togithub.com/sfc-gh-ptabor) in [https://github.com/bazelbuild/rules_nodejs/pull/3707](https://togithub.com/bazelbuild/rules_nodejs/pull/3707)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3708](https://togithub.com/bazelbuild/rules_nodejs/pull/3708)\n-   Update update-nodejs-versions.yml by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3710](https://togithub.com/bazelbuild/rules_nodejs/pull/3710)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3709](https://togithub.com/bazelbuild/rules_nodejs/pull/3709)\n\n#### New Contributors\n\n-   [@&#8203;avdv](https://togithub.com/avdv) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3704](https://togithub.com/bazelbuild/rules_nodejs/pull/3704)\n-   [@&#8203;sfc-gh-ptabor](https://togithub.com/sfc-gh-ptabor) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3707](https://togithub.com/bazelbuild/rules_nodejs/pull/3707)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/v6.0.2...v6.0.3\n\n### [`v6.0.2`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.2)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/v6.0.1...v6.0.2)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.2\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"162f4adfd719ba42b8a6f16030a20f434dc110c65dc608660ef7b3411c9873f9\",\n    strip_prefix = \"rules_nodejs-6.0.2\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.2/rules_nodejs-v6.0.2.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Fix `node_repositories` load path in docs/install.md (index.bzl no longer exists) by [@&#8203;jankeromnes](https://togithub.com/jankeromnes) in [https://github.com/bazelbuild/rules_nodejs/pull/3690](https://togithub.com/bazelbuild/rules_nodejs/pull/3690)\n-   Add current_node_cc_headers by [@&#8203;dzbarsky](https://togithub.com/dzbarsky) in [https://github.com/bazelbuild/rules_nodejs/pull/3694](https://togithub.com/bazelbuild/rules_nodejs/pull/3694)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3692](https://togithub.com/bazelbuild/rules_nodejs/pull/3692)\n\n#### New Contributors\n\n-   [@&#8203;jankeromnes](https://togithub.com/jankeromnes) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3690](https://togithub.com/bazelbuild/rules_nodejs/pull/3690)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/v6.0.1...v6.0.2\n\n### [`v6.0.1`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.1)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/v6.0.0...v6.0.1)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.1\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"5ad078287b5f3069735652e1fc933cb2e2189b15d2c9fc826c889dc466c32a07\",\n    strip_prefix = \"rules_nodejs-6.0.1\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.1/rules_nodejs-v6.0.1.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Update release.yml by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3672](https://togithub.com/bazelbuild/rules_nodejs/pull/3672)\n-   chore: update stale issue message by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3673](https://togithub.com/bazelbuild/rules_nodejs/pull/3673)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3674](https://togithub.com/bazelbuild/rules_nodejs/pull/3674)\n-   Expose node headers as a cc_library by [@&#8203;dzbarsky](https://togithub.com/dzbarsky) in [https://github.com/bazelbuild/rules_nodejs/pull/3679](https://togithub.com/bazelbuild/rules_nodejs/pull/3679)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3680](https://togithub.com/bazelbuild/rules_nodejs/pull/3680)\n-   Build with incompatible_disallow_empty_glob by [@&#8203;limdor](https://togithub.com/limdor) in [https://github.com/bazelbuild/rules_nodejs/pull/3621](https://togithub.com/bazelbuild/rules_nodejs/pull/3621)\n-   Add \"npx\" target to node repo by [@&#8203;matthewjh](https://togithub.com/matthewjh) in [https://github.com/bazelbuild/rules_nodejs/pull/3429](https://togithub.com/bazelbuild/rules_nodejs/pull/3429)\n-   fix(windows): unbreak CI with allow_empty by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3681](https://togithub.com/bazelbuild/rules_nodejs/pull/3681)\n-   Update release.yml by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3682](https://togithub.com/bazelbuild/rules_nodejs/pull/3682)\n\n#### New Contributors\n\n-   [@&#8203;dzbarsky](https://togithub.com/dzbarsky) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3679](https://togithub.com/bazelbuild/rules_nodejs/pull/3679)\n-   [@&#8203;limdor](https://togithub.com/limdor) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3621](https://togithub.com/bazelbuild/rules_nodejs/pull/3621)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/v6.0.0...v6.0.1\n\n### [`v6.0.0`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/v6.0.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.8.4...v6.0.0)\n\n#### Using Bzlmod with Bazel 6\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"rules_nodejs\", version = \"6.0.0\")\n```\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"a833b08fc846e27a73ac2b7062e4f48cace0e72a072c6c3fa756847dc44246dd\",\n    strip_prefix = \"rules_nodejs-6.0.0\",\n    url = \"https://github.com/bazelbuild/rules_nodejs/releases/download/v6.0.0/rules_nodejs-v6.0.0.tar.gz\",\n)\n```\n\n#### What's Changed\n\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3622](https://togithub.com/bazelbuild/rules_nodejs/pull/3622)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3628](https://togithub.com/bazelbuild/rules_nodejs/pull/3628)\n-   chore: update release instructions by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3632](https://togithub.com/bazelbuild/rules_nodejs/pull/3632)\n-   chore(6.0): remove concatjs package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3637](https://togithub.com/bazelbuild/rules_nodejs/pull/3637)\n-   chore(6.0): remove packages by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3638](https://togithub.com/bazelbuild/rules_nodejs/pull/3638)\n-   chore(6.0): remove [@&#8203;bazel/esbuild](https://togithub.com/bazel/esbuild) package by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3640](https://togithub.com/bazelbuild/rules_nodejs/pull/3640)\n-   chore(6.x): remove cypress package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3641](https://togithub.com/bazelbuild/rules_nodejs/pull/3641)\n-   chore(6.0): remove terser package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3642](https://togithub.com/bazelbuild/rules_nodejs/pull/3642)\n-   chore(6.0): remove jasmine package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3643](https://togithub.com/bazelbuild/rules_nodejs/pull/3643)\n-   chore(6.0): remove rollup package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3644](https://togithub.com/bazelbuild/rules_nodejs/pull/3644)\n-   chore(6.0): remove typescript package by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3645](https://togithub.com/bazelbuild/rules_nodejs/pull/3645)\n-   chore: update release automation by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3646](https://togithub.com/bazelbuild/rules_nodejs/pull/3646)\n-   chore: bzlmod by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3647](https://togithub.com/bazelbuild/rules_nodejs/pull/3647)\n-   chore(6.x): cleanup examples by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3648](https://togithub.com/bazelbuild/rules_nodejs/pull/3648)\n-   chore(6.0): remove internal typescript tools by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3649](https://togithub.com/bazelbuild/rules_nodejs/pull/3649)\n-   chore(6.0): remove pkg_web by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3651](https://togithub.com/bazelbuild/rules_nodejs/pull/3651)\n-   chore(6.0): remove [@&#8203;bazel/create](https://togithub.com/bazel/create) by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3650](https://togithub.com/bazelbuild/rules_nodejs/pull/3650)\n-   chore(6.0): move providers to build_bazel_rules_nodejs by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3652](https://togithub.com/bazelbuild/rules_nodejs/pull/3652)\n-   ci: add github actions testing by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3654](https://togithub.com/bazelbuild/rules_nodejs/pull/3654)\n-   chore: bump to node 18 LTS as default by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3656](https://togithub.com/bazelbuild/rules_nodejs/pull/3656)\n-   refactor: remove rules_nodejs dependency on bazel_skylib by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3659](https://togithub.com/bazelbuild/rules_nodejs/pull/3659)\n-   chore(6.0): remove all unsupported rules and packages by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3655](https://togithub.com/bazelbuild/rules_nodejs/pull/3655)\n-   chore: restore GHA CI just for main branch by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3660](https://togithub.com/bazelbuild/rules_nodejs/pull/3660)\n-   chore: disable a failing test on windows by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3661](https://togithub.com/bazelbuild/rules_nodejs/pull/3661)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3662](https://togithub.com/bazelbuild/rules_nodejs/pull/3662)\n-   chore: update bcr metadata by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3663](https://togithub.com/bazelbuild/rules_nodejs/pull/3663)\n-   chore(6.0): cleanup unused files, remove references to deleted files by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3664](https://togithub.com/bazelbuild/rules_nodejs/pull/3664)\n-   docs: restore accidentally deleted toolchains docs by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/bazelbuild/rules_nodejs/pull/3667](https://togithub.com/bazelbuild/rules_nodejs/pull/3667)\n-   Update NodeJS versions by [@&#8203;paullewis](https://togithub.com/paullewis) in [https://github.com/bazelbuild/rules_nodejs/pull/3666](https://togithub.com/bazelbuild/rules_nodejs/pull/3666)\n-   fix typo in README.md by [@&#8203;troycarlson](https://togithub.com/troycarlson) in [https://github.com/bazelbuild/rules_nodejs/pull/3670](https://togithub.com/bazelbuild/rules_nodejs/pull/3670)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3668](https://togithub.com/bazelbuild/rules_nodejs/pull/3668)\n\n#### New Contributors\n\n-   [@&#8203;paullewis](https://togithub.com/paullewis) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3666](https://togithub.com/bazelbuild/rules_nodejs/pull/3666)\n-   [@&#8203;troycarlson](https://togithub.com/troycarlson) made their first contribution in [https://github.com/bazelbuild/rules_nodejs/pull/3670](https://togithub.com/bazelbuild/rules_nodejs/pull/3670)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/5.8.2...v6.0.0\n\n### [`v5.8.4`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/5.8.4)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.8.3...5.8.4)\n\nupgrade with:\n\n```starlark\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"8fc8e300cb67b89ceebd5b8ba6896ff273c84f6099fc88d23f24e7102319d8fd\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.4/rules_nodejs-core-5.8.4.tar.gz\"],\n)\n\n### OR\nhttp_archive(\n    name = \"build_bazel_rules_nodejs\",\n    sha256 = \"709cc0dcb51cf9028dd57c268066e5bc8f03a119ded410a13b5c3925d6e43c48\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.4/rules_nodejs-5.8.4.tar.gz\"],\n)\n```\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/5.8.3...5.8.4\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMTkuNCIsInVwZGF0ZWRJblZlciI6IjM3LjIxOS40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27248","RelatedDescription":"Closed or merged PR \"build: update dependency build_bazel_rules_nodejs to v6\" (#27248)"},{"Id":"2177020733","IsPullRequest":false,"CreatedAt":"2024-03-11T10:34:25","Actor":"melroy89","Number":"27244","RawContent":null,"Title":"Do not use Karma via ng new","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nStop generating a Karma example framework via `ng new`. Karma is officially deprecated: https://github.com/karma-runner/karma?tab=readme-ov-file#karma-is-deprecated-and-is-not-accepting-new-features-or-general-bug-fixes\r\n\r\nCurrently `ng new` still seems to add packages like `karma`, `karma-jasmine` and more. And also use this configuration in `angular.json` by default.\n\n### Describe the solution you'd like\n\nUse another test framework, which is at least not deprecated. Like Jest maybe:\r\n\r\n```\r\n        \"test\": {\r\n          \"builder\": \"@angular-builders/jest:run\",\r\n          \"options\": {\r\n            \"tsConfig\": \"tsconfig.spec.json\",\r\n            \"assets\": [\"src/assets\", \"src/favicon.ico\"],\r\n            \"styles\": [\"src/styles.scss\"],\r\n            \"scripts\": []\r\n          }\r\n        },\r\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27244","RelatedDescription":"Closed issue \"Do not use Karma via ng new\" (#27244)"},{"Id":"2175048546","IsPullRequest":true,"CreatedAt":"2024-03-08T17:40:58","Actor":"mmalerba","Number":"27238","RawContent":null,"Title":"build: update dependencies for version 18.0.0","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27238","RelatedDescription":"Closed or merged PR \"build: update dependencies for version 18.0.0\" (#27238)"},{"Id":"2175999474","IsPullRequest":true,"CreatedAt":"2024-03-08T15:24:58","Actor":"clydin","Number":"27240","RawContent":null,"Title":"build: reduce amount of dev tsconfig paths entries","State":"closed","Body":"The use of wildcard entries with the tsconfig `paths` allows the root import of the `@angular-devkit/` packages to be reduced to a single entry.\r\n","Url":"https://github.com/angular/angular-cli/pull/27240","RelatedDescription":"Closed or merged PR \"build: reduce amount of dev tsconfig paths entries\" (#27240)"},{"Id":"2175650021","IsPullRequest":false,"CreatedAt":"2024-03-08T13:58:48","Actor":"weihsma","Number":"27239","RawContent":null,"Title":"Referencing fonts with caret inside path no longer possible - NG17 & Vite","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n# Referencing fonts with caret inside path no longer possible \r\n## Current situation\r\n\r\nWe have a angular libary which includes the Roboto fonts and the necessary font-face definition:\r\n// folder structure:\r\n```\r\n|── lib-name\r\n│   ├── assets\r\n│   ├──   ├── fonts\r\n│   ├──   ├──  ├── ...font-files\r\n```\r\n\r\n// fonts.scss\r\n```\r\n  @font-face {\r\n    font-family: Roboto;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    src: local('Roboto-Regular'), local('RobotoRegular'), url('**^**./assets/fonts/Roboto-Regular');\r\n  }\r\n```\r\n  \r\nWe have this caret for a reason: teams consuming the library do deploy their applications sometime into subdirectories, so this caret was needed to resolve the path correctly.\r\n\r\n// angular.json\r\n  ````\r\n{\r\n    aplication: {\r\n    architect: {\r\n       \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n          \"options\": {\r\n            \"assets\": [\r\n            ...\r\n              {\r\n                \"glob\": \"**/*\",\r\n                \"input\": \"dist/lib-name/assets/\",\r\n                \"output\": \"assets/\"\r\n              },\r\n          }\r\n    }          \r\n}\r\n``````\r\n\r\n# After the upgrade to NG17 and vite builder  \r\nUsing the caret inside the font path is no longer possible (see provided error below). \r\n\r\nThis leads to the issue that angular trys to load the fonts from **http://servername/assets/fonts** with the **base href value** being \"/subfolder/smth/\". \r\nAll the necessary JS files are being loaded from the correct path: \r\nhttp://servername/subfolder/smth/main.hash.js \r\nbut the font path does not change accordingly: \r\nhttp://servername/assets/fonts\r\n\r\nThese are the options I tried when going through a lot of issues & posts:\r\n\r\n- **only tilde** in front of the path                       => url(\"~assets/fonts/Roboto-Regular\");\r\n- **tilde with slash** in front of the path              =>url(\"~/assets/fonts/Roboto-Regular\");\r\n- **dots** in front of the path                               => url(\"./assets/fonts/Roboto-Regular\");\r\n- **caret with absolute path in SCSS variable**    => url($varName + \"/Roboto-Regular\");       varName: '^./assets/fonts'\r\n- wanted to write the baseHref value into a CSS-variable and use this inside the path: https://angular.io/api/common/LocationStrategy#getBaseHref\r\n\r\nSo my questions are: \r\nHow can fonts be referenced, when the angular app is inside subdirectories?\r\nWhere can i find the  `externalDependencies` option the error message is pointing out?\r\n\r\nThanks in advance :)\r\n\r\nP.S. i will try to provide a link to a repo, where this error occurs - but sadly i do have issues with my local right now which im trying to solve at the moment\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nX [ERROR] Could not resolve \"^./assets/fonts/Roboto-Regular\" [plugin angular-css-resource]                            \r\n                                                                                                                   \r\n    apps/application/src/styles.scss:1806:60:                                                                    \r\n      1806 │ ..., local(\"RobotoRegular\"), url(\"^./assets/fonts/Roboto-Regular\");\r\n           ╵                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nYou can remove the caret and add the path to the `externalDependencies` build option, which should remove this error.\r\nPreprocessor stylesheets may not show the exact file location of the error.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.1.1\r\nNode: 21.1.0 (Unsupported)\r\nPackage Manager: npm 10.2.0\r\nOS: win32 x64\r\n\r\nAngular: 17.1.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... elements, forms, material, material-date-fns-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.1\r\n@angular-devkit/build-angular   17.1.1\r\n@angular-devkit/core            14.2.12\r\n@angular-devkit/schematics      14.2.12\r\n@schematics/angular             17.1.1\r\nng-packagr                      17.1.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27239","RelatedDescription":"Closed issue \"Referencing fonts with caret inside path no longer possible - NG17 & Vite\" (#27239)"},{"Id":"2174907546","IsPullRequest":true,"CreatedAt":"2024-03-08T10:55:34","Actor":"angular-robot","Number":"27237","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [critters](https://togithub.com/GoogleChromeLabs/critters) ([source](https://togithub.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | dependencies | patch | [`0.0.20` -> `0.0.22`](https://renovatebot.com/diffs/npm/critters/0.0.20/0.0.22) |\n| [critters](https://togithub.com/GoogleChromeLabs/critters) ([source](https://togithub.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | devDependencies | patch | [`0.0.20` -> `0.0.22`](https://renovatebot.com/diffs/npm/critters/0.0.20/0.0.22) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | dependencies | patch | [`6.7.0` -> `6.7.1`](https://renovatebot.com/diffs/npm/undici/6.7.0/6.7.1) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | devDependencies | patch | [`6.7.0` -> `6.7.1`](https://renovatebot.com/diffs/npm/undici/6.7.0/6.7.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChromeLabs/critters (critters)</summary>\n\n### [`v0.0.22`](https://togithub.com/GoogleChromeLabs/critters/compare/0.0.21...0.0.22)\n\n[Compare Source](https://togithub.com/GoogleChromeLabs/critters/compare/0.0.21...0.0.22)\n\n### [`v0.0.21`](https://togithub.com/GoogleChromeLabs/critters/compare/0.0.20...0.0.21)\n\n[Compare Source](https://togithub.com/GoogleChromeLabs/critters/compare/0.0.20...0.0.21)\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.7.1`](https://togithub.com/nodejs/undici/releases/tag/v6.7.1)\n\n[Compare Source](https://togithub.com/nodejs/undici/compare/v6.7.0...v6.7.1)\n\n##### What's Changed\n\n-   fetch: use EOL of os-module by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2915](https://togithub.com/nodejs/undici/pull/2915)\n-   ci: only send codecov from ubuntu and node by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2914](https://togithub.com/nodejs/undici/pull/2914)\n-   tests: improve skip for unix.js tests, remove skipped tests by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2916](https://togithub.com/nodejs/undici/pull/2916)\n-   chore: fix typo in isHistoryNavigation comments by [@&#8203;kachick](https://togithub.com/kachick) in [https://github.com/nodejs/undici/pull/2920](https://togithub.com/nodejs/undici/pull/2920)\n-   fix(benchmark): set body correctly by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2918](https://togithub.com/nodejs/undici/pull/2918)\n-   chore: increase test coverage to 100% for /lib/api/api-request.js by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2912](https://togithub.com/nodejs/undici/pull/2912)\n-   fix: chunksDecode cuts off 3 characters at the end if having BOM by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2922](https://togithub.com/nodejs/undici/pull/2922)\n-   docs: clarify URI parsing behavior of ProxyAgent constructor by [@&#8203;rossilor95](https://togithub.com/rossilor95) in [https://github.com/nodejs/undici/pull/2893](https://togithub.com/nodejs/undici/pull/2893)\n-   implement sync formdata parser by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2911](https://togithub.com/nodejs/undici/pull/2911)\n-   Fix docs links and add examples to sidebar by [@&#8203;tastypackets](https://togithub.com/tastypackets) in [https://github.com/nodejs/undici/pull/2895](https://togithub.com/nodejs/undici/pull/2895)\n-   doc: update diagnostics channel request headers type change by [@&#8203;jessezhang91](https://togithub.com/jessezhang91) in [https://github.com/nodejs/undici/pull/2925](https://togithub.com/nodejs/undici/pull/2925)\n-   perf: optimize getResolveErrorBodyCallback by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2921](https://togithub.com/nodejs/undici/pull/2921)\n-   override request dispatcher from init by [@&#8203;matthieusieben](https://togithub.com/matthieusieben) in [https://github.com/nodejs/undici/pull/2928](https://togithub.com/nodejs/undici/pull/2928)\n-   add busboy tests by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2924](https://togithub.com/nodejs/undici/pull/2924)\n-   fix(benchmark): make it fair by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2929](https://togithub.com/nodejs/undici/pull/2929)\n-   Revert \"chore: remove no-simd wasm\" by [@&#8203;Uzlopak](https://togithub.com/Uzlopak) in [https://github.com/nodejs/undici/pull/2935](https://togithub.com/nodejs/undici/pull/2935)\n-   build(deps): bump node from `d3271e4` to `8bf9240` in /build by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2936](https://togithub.com/nodejs/undici/pull/2936)\n-   Flip link between docs and README by [@&#8203;mcollina](https://togithub.com/mcollina) in [https://github.com/nodejs/undici/pull/2933](https://togithub.com/nodejs/undici/pull/2933)\n\n##### New Contributors\n\n-   [@&#8203;kachick](https://togithub.com/kachick) made their first contribution in [https://github.com/nodejs/undici/pull/2920](https://togithub.com/nodejs/undici/pull/2920)\n-   [@&#8203;tastypackets](https://togithub.com/tastypackets) made their first contribution in [https://github.com/nodejs/undici/pull/2895](https://togithub.com/nodejs/undici/pull/2895)\n-   [@&#8203;jessezhang91](https://togithub.com/jessezhang91) made their first contribution in [https://github.com/nodejs/undici/pull/2925](https://togithub.com/nodejs/undici/pull/2925)\n-   [@&#8203;matthieusieben](https://togithub.com/matthieusieben) made their first contribution in [https://github.com/nodejs/undici/pull/2928](https://togithub.com/nodejs/undici/pull/2928)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v6.7.0...v6.7.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMTkuNCIsInVwZGF0ZWRJblZlciI6IjM3LjIxOS40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27237","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#27237)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2179093682","IsPullRequest":false,"CreatedAt":"2024-03-12T18:07:14","Actor":"artopaavola","Number":"28708","RawContent":null,"Title":"bug(MatFormField): Resetting will-change breaks stacking context when sticky columns are used with MatTable ","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.2.1\n\n### Description\n\nWhen there is a MatFormField in a MatTable column and that sticky table is scrolled horizontally, the field border does not go \"behind\" sticky column. This regression was introduced in Angular Material 17.2.2 with this commit https://github.com/angular/components/commit/f6e85844a0f5c033763b30276bf5525e8330417a\r\n\r\nRemoving the will-change: auto on row 85 in the above commit fixes the issue.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-alv6me?file=package.json\r\nSteps to reproduce:\r\n1. Create a MatTable with sticky first column\r\n2. Put a MatFormField in the second column (not the sticky one)\r\n3. Scroll table contents horizontally\r\n4. The MatFormField borders will be on top of the sticky column while all other content including the text written in the MatFormField will correctly go behind the sticky column.\r\n\n\n### Expected Behavior\n\nAll the content in non-sticky columns should go \"behind\" the sticky column when scrolled horizontally.\n\n### Actual Behavior\n\nThe MatFormField borders remain on top of the sticky column when scrolled.\n\n### Environment\n\n- Angular: \r\n- CDK/Material:\r\n\r\n```\r\nAngular CLI: 17.2.3\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1702.3\r\n@angular-devkit/build-angular      17.2.3\r\n@angular-devkit/core               17.2.3\r\n@angular-devkit/schematics         17.2.3\r\n@angular/cdk                       17.2.2\r\n@angular/cli                       17.2.3\r\n@angular/material                  17.2.2\r\n@angular/material-moment-adapter   17.2.2\r\n@schematics/angular                17.2.3\r\nng-packagr                         17.2.1\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nzone.js                            0.14.4\r\n```\r\n- Browser(s): Chrome Version 122.0.6261.94 (Official Build) (arm64), Firefox 123.0 \r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28708","RelatedDescription":"Closed issue \"bug(MatFormField): Resetting will-change breaks stacking context when sticky columns are used with MatTable \" (#28708)"},{"Id":"2180975310","IsPullRequest":true,"CreatedAt":"2024-03-12T18:07:12","Actor":"crisbeto","Number":"28713","RawContent":null,"Title":"fix(material/form-field): ensure same stacking context as container","State":"closed","Body":"When `will-change` was removed in #27251, the form field lost its implicit stacking context which means that some of its descendants may be stacked on top of the container.\r\n\r\nThese changes add an explicit `z-index` on the container to resolve the issue.\r\n\r\nFixes #28708.","Url":"https://github.com/angular/components/pull/28713","RelatedDescription":"Closed or merged PR \"fix(material/form-field): ensure same stacking context as container\" (#28713)"},{"Id":"2180482807","IsPullRequest":true,"CreatedAt":"2024-03-12T16:59:53","Actor":"mmalerba","Number":"28711","RawContent":null,"Title":"ci: Ban introduction of more zone-dependent code","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28711","RelatedDescription":"Closed or merged PR \"ci: Ban introduction of more zone-dependent code\" (#28711)"},{"Id":"2181792124","IsPullRequest":false,"CreatedAt":"2024-03-12T14:40:02","Actor":"sschoorens","Number":"28716","RawContent":null,"Title":"bug(THEME): Using css var() in palette contrast is not applied on all components","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen I defined a theme like that\r\n```\r\n@use '@angular/material' as mat;\r\n@include mat.core();\r\n\r\n:root {\r\n  --primary: #2656cf;\r\n  --primary-contrast: #FFFFFF;\r\n}\r\n\r\n$light-primary-palette: (\r\n  700: var(--primary),\r\n  500: var(--primary),\r\n  100: var(--primary),\r\n  contrast: (\r\n    700: var(--primary-contrast),\r\n    500: var(--primary-contrast),\r\n    100: var(--primary-contrast)\r\n  )\r\n);\r\n\r\n$light-theme: mat.define-light-theme((\r\n color: (\r\n   primary: mat.define-palette($light-primary-palette),\r\n   accent: mat.define-palette(mat.$pink-palette)\r\n ),\r\n typography: mat.define-typography-config( ),\r\n density: 0\r\n));\r\n\r\n@include mat.all-component-themes($light-theme);\r\n```\r\n\r\nButtons don't apply the `--primary-contrast` but some other components use it\r\n\r\n![image](https://github.com/angular/components/assets/728750/d843487d-4d4f-4618-8957-a3d2238a25c3)\r\n\r\nBadges apply it\r\n```\r\n  --mat-badge-background-color: var(--primary);\r\n  --mat-badge-text-color: var(--primary-contrast);\r\n```\r\n\r\nButtons don't apply it\r\n```\r\n  --mdc-protected-button-container-color: var(--primary);\r\n  --mdc-protected-button-label-text-color: #000;\r\n  --mat-protected-button-state-layer-color: #000;\r\n  --mat-protected-button-ripple-color: rgba(0, 0, 0, 0.1);\r\n```\r\n\r\n`--mdc-protected-button-label-text-color` should be `--mdc-protected-button-label-text-color:  var(--primary-contrast);`\r\n\r\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/components-issue-u6e7fj\r\nSteps to reproduce:\r\n1. apply theme in styles.scss\r\n2. look at the result on a primary button\r\n\n\n### Expected Behavior\n\nButton contrast should work\n\n### Actual Behavior\n\nButton contrast doesn't work\n\n### Environment\n\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1702.1\r\n@angular-devkit/build-angular      17.2.1\r\n@angular-devkit/core               17.2.1\r\n@angular-devkit/schematics         17.2.1\r\n@angular/cdk                       17.2.1\r\n@angular/cli                       17.2.1\r\n@angular/material                  17.2.1\r\n@angular/material-moment-adapter   17.2.1\r\n@schematics/angular                17.2.1\r\nng-packagr                         17.2.0\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nzone.js                            0.14.4\r\n","Url":"https://github.com/angular/components/issues/28716","RelatedDescription":"Open issue \"bug(THEME): Using css var() in palette contrast is not applied on all components\" (#28716)"},{"Id":"2181496126","IsPullRequest":false,"CreatedAt":"2024-03-12T12:27:02","Actor":"pedroestabruxelles","Number":"28715","RawContent":null,"Title":"bug(form-field): floatLabel moves outside of it's container","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.x\n\n### Description\n\nUp until v14 form-field had a margin-top to accommodate the floating label when using appearance outline, since v16 that was removed. \r\nThis causes a number of regressions where a form-field is at the very top of, for example, a container that has overflow: hidden. \r\n\r\nA similar issue has been reported on a different context but this is not particular to the tabs it's a broad issue:\r\nhttps://github.com/angular/components/issues/27764\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/pix6qb\r\n\r\nStackBlitz on the latest working version: https://stackblitz.com/edit/tfsfgk\r\n\n\n### Expected Behavior\n\n![image](https://github.com/angular/components/assets/46717433/7b0cda1d-4e34-40b4-8631-4f548ce7bb85)\r\n\n\n### Actual Behavior\n\n![image](https://github.com/angular/components/assets/46717433/856fedfe-e54e-4c1b-88d1-018759392f75)\r\n\n\n### Environment\n\n- Angular: 15.x, 16.x, 17.x\r\n- CDK/Material: 15.x, 16.x, 17.x\r\n- Browser(s): any browser\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any system\r\n","Url":"https://github.com/angular/components/issues/28715","RelatedDescription":"Open issue \"bug(form-field): floatLabel moves outside of it's container\" (#28715)"},{"Id":"2181262555","IsPullRequest":false,"CreatedAt":"2024-03-12T10:27:04","Actor":"ibrahimgabsi","Number":"28714","RawContent":null,"Title":"feat(bottom-sheet): Access container instance elementRef","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/material/bottom-sheet\r\n\r\n### Description\r\n\r\nConsider this service:\r\n```\r\n....\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyBottomSheetService {\r\n  private bottomSheet = inject(MatBottomSheet);\r\n\r\n  private bottomSheetRef?: MatBottomSheetRef;\r\n\r\n  open(templateRef: TemplateRef<unknown>): void {\r\n     this.bottomSheetRef = this.bottomSheet.open(templateRef);\r\n  }\r\n}\r\n```\r\n\r\nThis service opens bottom sheets with dynamic content using the given template.\r\nOnce it's opened, we want to access to mat bottom sheet container or its DOM content using the `bottomSheetRef` in order to execute a generic behavior based in the projected content.\r\n\r\n### Proposed solution\r\n\r\n```bottomSheetRef``` returned by the `open()` method gives access to `containerInstance` property.\r\n\r\nConvert `elementRef` of `containerInstance` from private to public property. \r\n\r\n### Alternatives considered\r\n\r\n_No alternatives considered..._","Url":"https://github.com/angular/components/issues/28714","RelatedDescription":"Open issue \"feat(bottom-sheet): Access container instance elementRef\" (#28714)"},{"Id":"2180643303","IsPullRequest":false,"CreatedAt":"2024-03-12T03:22:57","Actor":"honibis","Number":"28712","RawContent":null,"Title":"bug(mat-calendar): Next&Prev Buttons does not fire monthSelected event","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nNext&Prev buttons changes month of calendar yet does not fire any event back to us.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\n It should fire monthSelected event as it happens when month is selected from year view.\n\n### Actual Behavior\n\nNo event fired on next&prev button clicks\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28712","RelatedDescription":"Open issue \"bug(mat-calendar): Next&Prev Buttons does not fire monthSelected event\" (#28712)"},{"Id":"2180440676","IsPullRequest":false,"CreatedAt":"2024-03-11T23:32:57","Actor":"keatkeat87","Number":"28710","RawContent":null,"Title":"feat(ListKeyManager): Support Signal-based Query","State":"open","Body":"### Feature Description\r\n\r\n![image](https://github.com/angular/components/assets/8691013/079f234f-3721-4789-bb17-9e52b5a6e30e)\r\n\r\nSignal-based query doesn't return QueryList anymore, it only returns readonly Array.\r\nso ListKeyManager should support it.\r\n\r\nand another thing\r\n![image](https://github.com/angular/components/assets/8691013/ba23925c-cc98-42b4-aee9-37ed3f0b0875)\r\nwe should have a way to watch Signal like previously watching QueryList.\r\n\r\nWorkaround:\r\nif array will not changes, we can just cast to not readonly\r\n\r\n`const keyManager = new ListKeyManager(this.items() as FocusableOptionDerective[]);`\r\n\r\nif we need watch the array, we can access private QueryList from Signal.\r\n```\r\nconst signalNode = this.items[SIGNAL] as { _queryList: QueryList<FocusableOptionDerective> };\r\nconst keyManager = new ListKeyManager(signalNode._queryList);\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28710","RelatedDescription":"Open issue \"feat(ListKeyManager): Support Signal-based Query\" (#28710)"},{"Id":"2179832304","IsPullRequest":false,"CreatedAt":"2024-03-11T17:59:10","Actor":"wildcardalice","Number":"28709","RawContent":null,"Title":"bug(MatSelect): MatSelect in a CdkOverlay panel is not accessible to screen readers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing a screenreader to interact with a MatSelect dropdown inside an overlay panel prevents it from reading out the options\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/bqqfav-gaxbdf\r\nSteps to reproduce:\r\n1. Active VoiceOver or other screen reader\r\n2. Using a keyboard, click on the 'Launch dialog' button\r\n3. Using a keyboard, navigate to the select and attempt to read the options\r\n\r\n<img width=\"448\" alt=\"image\" src=\"https://github.com/angular/components/assets/81990996/5b607de6-5828-42ba-882b-9238a30885c2\">\r\n\r\n\r\n\n\n### Expected Behavior\n\nVoiceOver should read out the options, much like it does when interacting with the examples at https://material.angular.io/components/select/examples\r\n\r\n\n\n### Actual Behavior\n\nVoiceOver does not read out the options. It only reads \"expanded, completion selected\". Pressing ctrl+option+space causes it to read \"confirm Favorite pet, list box pop-up, Menu popup combobox\".\n\n### Environment\n\n- Angular: 17.2.0\r\n- Browser(s): Google Chrome\r\n- Operating System: macOS\r\n- Screen reader: VoiceOver\r\n","Url":"https://github.com/angular/components/issues/28709","RelatedDescription":"Open issue \"bug(MatSelect): MatSelect in a CdkOverlay panel is not accessible to screen readers\" (#28709)"},{"Id":"2177744838","IsPullRequest":true,"CreatedAt":"2024-03-11T16:56:46","Actor":"crisbeto","Number":"28707","RawContent":null,"Title":"fix(material/core): theming validation for m2 themes firing incorrectly","State":"closed","Body":"Fixes that theming validation for M2 themes was firing incorrectly, because the validation code was going through the `get-color-config`, `get-density-config` and `get-typography-config` functions which in turn were reading the internalized version of the theme where all the values were the same. Since Sass maps are immutable, they were being compared based on their values and always considered as the same theme.","Url":"https://github.com/angular/components/pull/28707","RelatedDescription":"Closed or merged PR \"fix(material/core): theming validation for m2 themes firing incorrectly\" (#28707)"},{"Id":"2177147642","IsPullRequest":true,"CreatedAt":"2024-03-11T15:58:12","Actor":"crisbeto","Number":"28705","RawContent":null,"Title":"docs: remove current work from readme","State":"closed","Body":"The \"What we're working on\" section is more than a year out of date and historically we've kept forgetting to update it. These changes remove it for now.","Url":"https://github.com/angular/components/pull/28705","RelatedDescription":"Closed or merged PR \"docs: remove current work from readme\" (#28705)"},{"Id":"2176911499","IsPullRequest":true,"CreatedAt":"2024-03-11T15:52:27","Actor":"wagnermaciel","Number":"28704","RawContent":null,"Title":"fix(material/slider): fix animation issue","State":"closed","Body":"* the slider track animation would break in the case where a user clicks one thumb, tabs to the other, then uses an arrow key to change value.\r\n* for some reason, this bug only happens when the slider is not discrete.","Url":"https://github.com/angular/components/pull/28704","RelatedDescription":"Closed or merged PR \"fix(material/slider): fix animation issue\" (#28704)"},{"Id":"2174862819","IsPullRequest":true,"CreatedAt":"2024-03-11T15:44:49","Actor":"atscott","Number":"28701","RawContent":null,"Title":"refactor(cdk/a11y): only call currentResolve if defined","State":"closed","Body":"Should it be possible for it to be undefined within the timeout body? No. But ZoneJS and test environments do weird things so it's better to be safe.","Url":"https://github.com/angular/components/pull/28701","RelatedDescription":"Closed or merged PR \"refactor(cdk/a11y): only call currentResolve if defined\" (#28701)"},{"Id":"2177606363","IsPullRequest":false,"CreatedAt":"2024-03-10T08:44:04","Actor":"kibetmasi","Number":"28706","RawContent":null,"Title":"bug(COMPONENT): Angular Material custom theme button ripple is white when clicked","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.1.2\n\n### Description\n\nI have a custom theme on my Angular project. Everything had worked as expected\r\nHowever, updating my Angular Material from 17.1.2 to the latest version makes the ripple white and does not work as expected.\r\n\r\n\n\n### Reproduction\n\n// Custom Theming for Angular Material\r\n// For more information: https://material.angular.io/guide/theming\r\n@use '@angular/material' as mat;\r\n// Plus imports for other components in your app.\r\n\r\n// Include the common styles for Angular Material. We include this here so that you only\r\n// have to load a single css file for Angular Material in your app.\r\n// Be sure that you only ever include this mixin once!\r\n@include mat.core();\r\n\r\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n// hue. Available color palettes: https://material.io/design/color/\r\n$dark-primary-text: rgba(rgb(106, 106, 106), 0.87);\r\n$dark-secondary-text: rgba(rgb(189, 189, 189), 0.54);\r\n$dark-disabled-text: rgba(rgb(184, 184, 184), 0.38);\r\n$dark-dividers: rgba(rgb(151, 151, 151), 0.12);\r\n$dark-focused: rgba(rgb(205, 203, 203), 0.12);\r\n$light-primary-text: rgb(222, 222, 222);\r\n$light-secondary-text: rgba(white, 0.7);\r\n$light-disabled-text: rgba(white, 0.5);\r\n\r\n$custom-palette: (\r\n  50: var(--50),\r\n  100: var(--100),\r\n  200: var(--200),\r\n  300: var(--300),\r\n  400: var(--400),\r\n  500: var(--500),\r\n  600: var(--600),\r\n  700: var(--700),\r\n  800: var(--800),\r\n  900: var(--900),\r\n  contrast: (\r\n    50: var(--text-contrast),\r\n    100: var(--text-contrast),\r\n    200: var(--text-contrast),\r\n    300: var(--text-contrast),\r\n    400: var(--text-contrast),\r\n    500: var(--text-contrast),\r\n    600: var(--text-contrast),\r\n    700: var(--text-contrast),\r\n    800: var(--text-contrast),\r\n    900: var(--text-contrast),\r\n  )\r\n);\r\n\r\n$tafari-primary: mat.define-palette($custom-palette, 500);\r\n$tafari-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$typography-config: mat.define-typography-config(\r\n  $font-family: '\"Open Sans\", \"Helvetica Neue\", sans-serif',\r\n  $headline-1: mat.define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\r\n  $headline-2: mat.define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\r\n  $headline-3: mat.define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\r\n  $headline-4: mat.define-typography-level(34px, 40px, 400),\r\n  $headline-5: mat.define-typography-level(24px, 32px, 400),\r\n  $headline-6: mat.define-typography-level(20px, 32px, 400),\r\n  $subtitle-1: mat.define-typography-level(16px, 28px, 400),\r\n  $body-1: mat.define-typography-level(14px, 20px, 400),\r\n  $body-2: mat.define-typography-level(14px, 20px, 400),\r\n  $subtitle-2: mat.define-typography-level(16px, 28px, 400),\r\n  $caption: mat.define-typography-level(12px, 20px, 400),\r\n);\r\n\r\n// Create the theme object. A theme consists of configurations for individual\r\n// theming systems such as \"color\" or \"typography\".\r\n$tafari-theme: mat.define-light-theme((\r\n  color: (\r\n    primary: $tafari-primary,\r\n    accent: $tafari-accent,\r\n  ),\r\n  typography: $typography-config,\r\n  density: 1,\r\n));\r\n\r\n// Include theme styles for core and each component used in your app.\r\n// Alternatively, you can import and @include the theme mixins for each component\r\n// that you are using.\r\n@include mat.all-component-themes($tafari-theme);\r\n@include mat.typography-hierarchy($typography-config);\r\n\r\n/* You can add global styles to this file, and also import other style files */\r\n\r\n\r\n// HTML file\r\n<button (click)=\"registerForm.valid ? register() : ''\" class=\"w-full\" mat-raised-button color=\"primary\">Register</button>\n\n### Expected Behavior\n\nButton ripple should be not be white when clicked\n\n### Actual Behavior\n\nmat-button ripple is white when clicked\n\n### Environment\n\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.2\r\n@angular/cli                    17.2.3\r\n@angular/material               17.2.2\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3","Url":"https://github.com/angular/components/issues/28706","RelatedDescription":"Open issue \"bug(COMPONENT): Angular Material custom theme button ripple is white when clicked\" (#28706)"},{"Id":"2174708209","IsPullRequest":true,"CreatedAt":"2024-03-08T20:48:38","Actor":"mmalerba","Number":"28700","RawContent":null,"Title":"build: bump angular deps to include angular/angular#54774","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28700","RelatedDescription":"Closed or merged PR \"build: bump angular deps to include angular/angular#54774\" (#28700)"},{"Id":"2176677304","IsPullRequest":false,"CreatedAt":"2024-03-08T19:51:25","Actor":"dylandrendel","Number":"28703","RawContent":null,"Title":"bug(MaterialLuxonAdapter): Parsing format for some text inputs fails due to iso check before format check","State":"open","Body":"### Is this a regression?\r\n\r\n- No\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nN/A\r\n\r\n### Description\r\n\r\nIn `/src/material-luxon-adapter/adapter/luxon-date-adapter.ts#L174` the date is formatted with ISO before the user provided formats.\r\n\r\nThis leads to a bug where specific text inputs are not parsing correctly according to the user provided formats.\r\n\r\nFor example, I provide the format `MMyyyy` to the parse dateInputs array. This gets ignored for certain string inputs. One example is `082001`. This gets parsed as `yyyyMM` by the ISO check before checking my provided formats array and returns incorrectly as `01/0820` instead of the desired `08/2001`.\r\n\r\n```\r\nparse(value: any, parseFormat: string | string[]): LuxonDateTime | null {\r\n    const iso8601Date = LuxonDateTime.fromISO(value, options);\r\n    \r\n    if (this.isValid(iso8601Date)) {\r\n      return iso8601Date;\r\n    }\r\n    \r\n    const formats = Array.isArray(parseFormat) ? parseFormat : [parseFormat];\r\n    \r\n    if (!parseFormat.length) {\r\n      throw Error('Formats array must not be empty.');\r\n    }\r\n    \r\n    for (const format of formats) {\r\n      const fromFormat = LuxonDateTime.fromFormat(value, format, options);\r\n    \r\n      if (this.isValid(fromFormat)) {\r\n        return fromFormat;\r\n      }\r\n    }\r\n\r\n...\r\n```\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/ocbei5?file=package.json\r\nSteps to reproduce:\r\n1.  provide the format `MMyyyy` to the parse dateInputs array\r\n2. type 082001 into the date input with luxon date times and tab off to enter\r\n\r\n\r\n### Expected Behavior\r\n\r\nGets parsed correctly as 08/2001 and displays as 08/2001.\r\n\r\n### Actual Behavior\r\n\r\nGets parsed incorrectly by ISO check as 01/0820 and displays as 01/0820.\r\n\r\n### Environment\r\n\r\n- Angular: 16.0.4\r\n- CDK/Material:\r\n  - \"@angular/material\": \"^16.0.3\",\r\n  - \"@angular/material-luxon-adapter\": \"^16.2.4\",\r\n- Browser(s): Chrome\r\n- Operating System: macOS\r\n","Url":"https://github.com/angular/components/issues/28703","RelatedDescription":"Open issue \"bug(MaterialLuxonAdapter): Parsing format for some text inputs fails due to iso check before format check\" (#28703)"},{"Id":"2172318358","IsPullRequest":false,"CreatedAt":"2024-03-08T19:00:09","Actor":"wildcardalice","Number":"28694","RawContent":null,"Title":"bug(MatSelect): MatSelect does not read out options to VoiceOver when using keyboard navigation","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using a screenreader to interact with a select-based form field, the options are not always read out. I notice that focus remains on the mat-select itself when you use the keyboard to activate it (see https://i.imgur.com/MwKPWxW.png). I would expect this focus to be on the options panel instead.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Navigate to https://v5.material.angular.io/components/select/examples \r\n2. Use the keyboard to navigate to an example dropdown, such as the \"Select with form field features\"\r\n3. Activate the dropdown using the keyboard, and attempt to get a readout of the options\r\n\r\n### Expected Behavior\r\n\r\nThe screenreader should read out all options, or provide a way to read all options\r\n\r\n### Actual Behavior\r\n\r\nI am unable to get the screen reader to read out dog, cat, cow, or fox. The only option I can read out is the first option (\"In text -- not selected\") by using ctrl+opt+shift+down, but continued navigation does not shift focus or read additional options.\r\n\r\n### Environment\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n- Screen Reader: VoiceOver \r\n","Url":"https://github.com/angular/components/issues/28694","RelatedDescription":"Closed issue \"bug(MatSelect): MatSelect does not read out options to VoiceOver when using keyboard navigation\" (#28694)"},{"Id":"2171634735","IsPullRequest":false,"CreatedAt":"2024-03-08T18:09:00","Actor":"undsoft","Number":"28690","RawContent":null,"Title":"feat(MatSelectHarness): Allow harnesses to be extended","State":"closed","Body":"### Feature Description\n\nIt would be helpful if `private` fields were replaced with `protected` fields in `MatSelectHarness` and other harnesses.\r\n\r\nI understand that you generally don't want to make things `protected` if they are not extended in the codebase, but I think it would make life easier for the consumers.\n\n### Use Case\n\nWe have html code for tooltips in some of our select options. It gets parsed when calling `getOptions[0].getText()`.\r\nPreviously I could just extend the harness and override `_optionClass` to get a custom behaviour for `getText()`. After version 17 this is no longer possible and I need to reimplement more things.","Url":"https://github.com/angular/components/issues/28690","RelatedDescription":"Closed issue \"feat(MatSelectHarness): Allow harnesses to be extended\" (#28690)"},{"Id":"2172306648","IsPullRequest":false,"CreatedAt":"2024-03-08T18:00:18","Actor":"zeshan-tech","Number":"28693","RawContent":null,"Title":"Google cloud style sidebar","State":"closed","Body":"### Feature Description\r\nI haven't found any component that is like google cloud sidenav menu. Is there any plan about this.\r\n\r\n\r\n![Uploading Screenshot 2024-03-07 at 12.51.04 AM.png…]()\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28693","RelatedDescription":"Closed issue \"Google cloud style sidebar\" (#28693)"},{"Id":"2176305936","IsPullRequest":false,"CreatedAt":"2024-03-08T15:57:42","Actor":"97571522","Number":"28702","RawContent":null,"Title":"does not include a component for selecting year, month, day, hour, minute, and second.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?\n\n### Proposed solution\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?\n\n### Alternatives considered\n\nIt is quite surprising that the Angular Material UI framework, known for its excellence, does not include a component for selecting year, month, day, hour, minute, and second. Are there any effective solutions available? Is there any plan for the official Angular Material team to introduce this component?","Url":"https://github.com/angular/components/issues/28702","RelatedDescription":"Closed issue \"does not include a component for selecting year, month, day, hour, minute, and second.\" (#28702)"},{"Id":"2174167009","IsPullRequest":true,"CreatedAt":"2024-03-07T15:44:54","Actor":"RussellSprouts","Number":"28699","RawContent":null,"Title":"feat(material/core): Allow namespacing ripple-loader event handler","State":"open","Body":"ripple-loader registers an event handler on the document to do event delegation. If there are multiple instances of ripple-loader on one page, then they will both try to handle events for [mat-ripple-loader-uninitialized] elements. If a namespace is provided, then the handler will only handle events for [mat-ripple-loader-uninitialized=\"{namespace}\"] elements.","Url":"https://github.com/angular/components/pull/28699","RelatedDescription":"Open PR \"feat(material/core): Allow namespacing ripple-loader event handler\" (#28699)"},{"Id":"2174142964","IsPullRequest":false,"CreatedAt":"2024-03-07T15:33:50","Actor":"jsoref","Number":"28698","RawContent":null,"Title":"feat(themes): Document/Improve identifying first duplicated definition","State":"open","Body":"### Feature Description\n\nhttps://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md talks about duplicate theming styles, and it's referenced by the build system...\r\n\r\nThat's great, except it only tells users about the _second_ instance of a definition.\r\n\r\nIf at all possible, it'd be great if there was either tooling or documentation to help users find the _first_ instance of a definition\n\n### Use Case\n\nWe had some buggy theming code of the form:\r\n\r\n`style.scss`:\r\n```scss\r\n@import \"themes\";\r\n@import \"extra-themes\";\r\n```\r\n\r\n`themes.scss`:\r\n```scss\r\n@use '@angular/material' as mat;\r\n@import \"extra-themes\";\r\n\r\n$light-theme: mat.define-light-theme((color: ...));\r\n$dark-theme: mat.define-dark-theme((color: ...));\r\n\r\n@include mat.all-component-themes($light-theme);\r\n\r\n.dark-theme {\r\n  // This mixin only generates the color styles now.\r\n  @include mat.all-component-colors($dark-theme);\r\n}\r\n```\r\n\r\n`extra-themes.scss`\r\n```scss\r\n@use \"@angular/material\" as mat;\r\n@import \"themes\";\r\n\r\n@mixin extra-themes($theme) {\r\n   ...\r\n}\r\n\r\n@include extra-themes($light-theme);\r\n\r\n.dark-theme {\r\n  @include extra-colors($dark-theme);\r\n}\r\n```\r\n\r\nUnfortunately, all of the output about duplication appeared like this:\r\n\r\n```css\r\nnode_modules/@angular/material/core/theming/_theming.scss 352:7          private-check-duplicate-theme-styles()\r\nnode_modules/@angular/material/legacy-core/theming/_all-theme.scss 43:3  all-legacy-component-themes()\r\nnode_modules/@angular/material/legacy-core/color/_all-color.scss 17:3    all-legacy-component-colors()\r\n```","Url":"https://github.com/angular/components/issues/28698","RelatedDescription":"Open issue \"feat(themes): Document/Improve identifying first duplicated definition\" (#28698)"},{"Id":"2172804576","IsPullRequest":false,"CreatedAt":"2024-03-07T08:10:59","Actor":"mattiLeBlanc","Number":"28697","RawContent":null,"Title":"youtube-player: initial image to improve load performance is not loading and we she broken video image","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nhttps://github.com/angular/components/pull/28207\n\n### Description\n\n<img width=\"1726\" alt=\"image\" src=\"https://github.com/angular/components/assets/5285035/c5aae0e5-ea40-4544-877a-cc10994b429c\">\r\n\r\nIn the feature requests (https://github.com/angular/components/pull/28207) an image with a loading button was put in front of the youtube iframe to improve loading speed.\r\nHowever, we have more and more video's  displaying a loading error on that background image.\r\nThe youtube video reference is XKdBeRE5E9A and when you embed the iframe directly, it shows a correct image.\r\nI am not sure why this image is loaded https://i.ytimg.com/vi_webp/XKdBeRE5E9A/sddefault.webp 404 (Not Found) since it doesn't seem to exist.\n\n### Reproduction\n\nStackBlitz link: \r\nAdd angular youtube player:\r\n```\r\n<youtube-player videoId=\"XKdBeRE5E9A\" ></youtube-player>\r\n```\n\n### Expected Behavior\n\nIf image can not be retrieved, do not show this broken video image but maybe just load the youtube iframe?\n\n### Actual Behavior\n\nWhen failing to get the cover image, it shows a broken video image with play button. This is not pretty behaviour.\n\n### Environment\n\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs latest\r\n","Url":"https://github.com/angular/components/issues/28697","RelatedDescription":"Closed issue \"youtube-player: initial image to improve load performance is not loading and we she broken video image\" (#28697)"},{"Id":"2172349053","IsPullRequest":true,"CreatedAt":"2024-03-06T20:18:52","Actor":"amysorto","Number":"28696","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.4.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.3.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/28696","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.4.0-next.0\".\" (#28696)"},{"Id":"2172341262","IsPullRequest":true,"CreatedAt":"2024-03-06T20:13:57","Actor":"amysorto","Number":"28695","RawContent":null,"Title":"Bump version to \"v17.3.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28695","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-rc.0\" with changelog.\" (#28695)"},{"Id":"2172190482","IsPullRequest":true,"CreatedAt":"2024-03-06T18:49:07","Actor":"amysorto","Number":"28692","RawContent":null,"Title":"docs: release notes for the v17.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28692","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.2 release\" (#28692)"},{"Id":"2172186328","IsPullRequest":true,"CreatedAt":"2024-03-06T18:44:26","Actor":"amysorto","Number":"28691","RawContent":null,"Title":"Bump version to \"v17.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28691","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.2\" with changelog.\" (#28691)"},{"Id":"2169967523","IsPullRequest":true,"CreatedAt":"2024-03-06T17:50:55","Actor":"anwalkers","Number":"28687","RawContent":null,"Title":"fix(material/form-field): mat-label disappears when density < -1","State":"closed","Body":"Fixes a bug in the Angular Material `form-field` where the floating\r\nlabel is not presented in densities more compact than -1\r\n\r\nFixes https://github.com/angular/components/issues/26579","Url":"https://github.com/angular/components/pull/28687","RelatedDescription":"Closed or merged PR \"fix(material/form-field): mat-label disappears when density < -1\" (#28687)"},{"Id":"2171327613","IsPullRequest":false,"CreatedAt":"2024-03-06T17:37:36","Actor":"Akxe","Number":"28688","RawContent":null,"Title":"bug(CORE): HasErrorState interface has incorrect types","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `HasErrorState` interface used in `mixinErrorState` do require `_parentFormGroup` and `_parentForm` to be non-null. But the `_ErrorStateTracker` that is using it does not care.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-ovhttn?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Build\r\n2. See error\r\n\n\n### Expected Behavior\n\nThe `HasErrorState` interface should mimic type requirements from `_ErrorStateTracker` and therefore work.\n\n### Actual Behavior\n\nError that `_parentFormGroup` and `_parentForm` cannot be null.\n\n### Environment\n\nAngular CLI: 17.2.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1702.1\r\n@angular-devkit/core         17.2.1\r\n@angular-devkit/schematics   17.2.0\r\n@angular/cdk                 17.2.0\r\n@angular/cli                 17.2.0\r\n@angular/material            17.2.0\r\n@schematics/angular          17.0.3\r\nrxjs                         7.8.1\r\ntypescript                   5.3.3\r\nzone.js                      0.14.3","Url":"https://github.com/angular/components/issues/28688","RelatedDescription":"Closed issue \"bug(CORE): HasErrorState interface has incorrect types\" (#28688)"},{"Id":"2171495556","IsPullRequest":true,"CreatedAt":"2024-03-06T17:37:35","Actor":"crisbeto","Number":"28689","RawContent":null,"Title":"fix(material/core): mark fields on HasErrorState as nullable","State":"closed","Body":"Updates a couple of the fields on `HasErrorState` to be nullable to align them with the `_ErrorStateTracker`.\r\n\r\nFixes #28688.","Url":"https://github.com/angular/components/pull/28689","RelatedDescription":"Closed or merged PR \"fix(material/core): mark fields on HasErrorState as nullable\" (#28689)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-13T03:30:02.0358197Z","RunDurationInMilliseconds":1292}