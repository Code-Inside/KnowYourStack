{"Data":{"Angular-Issues":{"Issues":[{"Id":"1764142679","IsPullRequest":false,"CreatedAt":"2023-06-19T19:58:25","Actor":"moniuch","Number":"50773","RawContent":null,"Title":"Add convenience methods to eliminate control getters","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nOftentimes when working with reactive forms, we need to create control getters in order to be able to get a reference to `AbstractControl` with a coercion to a more specific type:\r\n\r\n```ts\r\nget myArrayCtrl(){\r\n  return this.form.get('path.to.control') as FormArray\r\n}\r\n```\r\n\r\n```html\r\n<div *ngFor=\"let control of myArrayCtrl.controls; let i = index\">\r\n...\r\n</div>\r\n```\r\n\r\nThis happens usually when working with FormArrays, but also when you need a`[formGroup]` in order to be able to use `formControlName` in `ng-template` (Error: NG01050: formControlName must be used with a parent formGroup directive.). Unfortunately, in the template it doesn't seem possible to provide the coercion, so we need to go and create a getter.\r\n\r\nWith just one getter this might not be a big deal, but with complex forms every single getter contributes to unnecessary boilerplate code.\n\n### Proposed solution\n\nTherefore, I would propose (assuming that this is feasible at all) that reactive forms provide a collection of convenience methods `getFormGroup | getFormArray | getFormControl | getFormRecord` which internally would do the necessary coercion and **could be used directly within templates**:\r\n\r\n```html\r\n<ng-template [formGroup]=\"form.getFormGroup('path.to.form.group')\">\r\n...\r\n</ng-template>\r\n\r\n<div *ngFor=\"let control of form.getFormArray('my.array').controls; let i = index\">\r\n...\r\n</div>\r\n```\r\n\r\n(or `getAsFormGroup | ...` etc)\r\n\r\nThis would eliminate the getters and slim our code a bit.\n\n### Alternatives considered\n\nLet's make the alternative obsolete.","Url":"https://github.com/angular/angular/issues/50773","RelatedDescription":"Open issue \"Add convenience methods to eliminate control getters\" (#50773)"},{"Id":"1763901506","IsPullRequest":true,"CreatedAt":"2023-06-19T17:05:36","Actor":"devversion","Number":"50772","RawContent":null,"Title":"build: update angular dev-infra and chromium","State":"open","Body":"Updates Angular dev-infra and Chromium. Fixed up version of https://github.com/angular/angular/pull/50111\r\n","Url":"https://github.com/angular/angular/pull/50772","RelatedDescription":"Open PR \"build: update angular dev-infra and chromium\" (#50772)"},{"Id":"1763834124","IsPullRequest":true,"CreatedAt":"2023-06-19T16:09:51","Actor":"pkozlowski-opensource","Number":"50771","RawContent":null,"Title":"feat(benchpress): report gc and render time spent in script","State":"open","Body":"GC and render events can happen _while_ running scripts as well as outside of the script blocks. The new metric entries capture both the gc and render time happening in the scrip blocks.\r\n","Url":"https://github.com/angular/angular/pull/50771","RelatedDescription":"Open PR \"feat(benchpress): report gc and render time spent in script\" (#50771)"},{"Id":"1763776430","IsPullRequest":false,"CreatedAt":"2023-06-19T15:49:59","Actor":"keatkeat87","Number":"50770","RawContent":null,"Title":"Support Flexible @Input Required on Directive composition API","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nlet's say we have a simple directive that has a required input property 'color'\r\n```\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appHighlightOnHover]',\r\n  standalone: true,\r\n})\r\nexport class HighlightOnHoverDirective {\r\n  @Input({ required: true })\r\n  color!: string;\r\n}\r\n```\r\n\r\nwe want to use it as Host Directives in a component\r\n```\r\n@Component({\r\n  selector: 'app-my-h1',\r\n  standalone: true,\r\n  imports: [CommonModule, HighlightOnHoverDirective],\r\n  templateUrl: './my-h1.component.html',\r\n  styleUrls: ['./my-h1.component.scss'],\r\n  hostDirectives: [\r\n    {\r\n      directive: HighlightOnHoverDirective,\r\n    },\r\n  ],\r\n})\r\nexport class MyH1Component {\r\n   \r\n}\r\n```\r\nboom! it forces us to expose it.\r\n![image](https://github.com/angular/angular/assets/8691013/447988f4-3df3-423c-b6e2-33aee44f1654)\r\nbut...why? \r\nand we don't want to expose it, we do set up internally as below\r\n```\r\nexport class MyH1Component implements OnInit {\r\n  constructor() {\r\n    inject(HighlightOnHoverDirective).color = 'red'; \r\n  }\r\n\r\n  private highlightOnHoverDir = inject(HighlightOnHoverDirective);\r\n  ngOnInit(): void {\r\n    this.highlightOnHoverDir.color = 'red';\r\n  }\r\n}\r\n```\r\n\n\n### Proposed solution\n\ncurrently, I don't have any idea. Because both are new things. \n\n### Alternatives considered\n\nI will love to join to further discuss when someone give me a direction.","Url":"https://github.com/angular/angular/issues/50770","RelatedDescription":"Closed issue \"Support Flexible @Input Required on Directive composition API\" (#50770)"},{"Id":"1763649899","IsPullRequest":true,"CreatedAt":"2023-06-19T14:16:57","Actor":"devversion","Number":"50769","RawContent":null,"Title":"ci: update codeowners for benchpress","State":"open","Body":"Pawel and myself have investigated benchpress for quite some time now (and made changes),\r\nand I believe we have the most up-to-date understanding in the team- so it would make sense\r\nto add us to the owners.","Url":"https://github.com/angular/angular/pull/50769","RelatedDescription":"Open PR \"ci: update codeowners for benchpress\" (#50769)"},{"Id":"1763487112","IsPullRequest":true,"CreatedAt":"2023-06-19T13:55:43","Actor":"devversion","Number":"50766","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"test","Url":"https://github.com/angular/angular/pull/50766","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50766)"},{"Id":"1763535019","IsPullRequest":true,"CreatedAt":"2023-06-19T13:38:07","Actor":"devversion","Number":"50768","RawContent":null,"Title":"build: resolve benchmark compare ref from upstream if rev-parse fails","State":"closed","Body":"`rev-parse` returns the original ref name in stdout, even if it wasn't able to resolve the reference. This was preventing the upstream resolution from never happening- causing `main` to be never resolved to the actual SHA.","Url":"https://github.com/angular/angular/pull/50768","RelatedDescription":"Closed or merged PR \"build: resolve benchmark compare ref from upstream if rev-parse fails\" (#50768)"},{"Id":"1763496635","IsPullRequest":true,"CreatedAt":"2023-06-19T13:04:08","Actor":"devversion","Number":"50767","RawContent":null,"Title":"build: fix benchmark sha resolution breaking when compare ref is abbreviated","State":"closed","Body":"When we fetch e.g. `main`, the branch name will not be available locally, and `rev-parse`\r\nwill fail later. We can make the logic more safe by just using `FETCH_HEAD` then.\r\n","Url":"https://github.com/angular/angular/pull/50767","RelatedDescription":"Closed or merged PR \"build: fix benchmark sha resolution breaking when compare ref is abbreviated\" (#50767)"},{"Id":"1763460654","IsPullRequest":true,"CreatedAt":"2023-06-19T12:55:00","Actor":"devversion","Number":"50764","RawContent":null,"Title":"build: resolve benchmark compare SHA from PR branch or upstream remote","State":"closed","Body":"If we try to resolve the benchmark compare ref (which may be just `main`), we are just looking inside the PR branch- but that may not include the `main` SHA. i.e. it's possible to run a comparison where the PR is slightly behind of the `main` branch, or a comparison commit from a different branch is used.\r\n\r\nWe fix this/ and simplify the logic by resolving the SHAs directly in the TypeScript code, instead of relying on the rather brittle Bash.\r\n\r\nNote that current solution still works, but we sometimes may not be able to resolve to an actual SHA- causing issues as in 864bd72cb22bb87f83284959297ab3734230fa91","Url":"https://github.com/angular/angular/pull/50764","RelatedDescription":"Closed or merged PR \"build: resolve benchmark compare SHA from PR branch or upstream remote\" (#50764)"},{"Id":"1763474046","IsPullRequest":false,"CreatedAt":"2023-06-19T12:48:27","Actor":"hebaibrahim76","Number":"50765","RawContent":null,"Title":"Hydration is not being applied in my angular project","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI created a new ssr angular project that uses angular version 16, here is the repo to my project https://github.com/hebaibrahim76/my-angular-ssr-project\r\n\r\nI added provideClientHydration() in my providers in app.module.ts,  but no console related to hydration showed up\r\n\r\nAny ideas on why hydration is not working?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50765","RelatedDescription":"Open issue \"Hydration is not being applied in my angular project\" (#50765)"},{"Id":"1762422934","IsPullRequest":true,"CreatedAt":"2023-06-19T12:46:32","Actor":"angular-robot","Number":"50754","RawContent":null,"Title":"build: update dependency @octokit/graphql to v6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@octokit/graphql](https://togithub.com/octokit/graphql.js) | devDependencies | major | [`^5.0.0` -> `^6.0.0`](https://renovatebot.com/diffs/npm/@octokit%2fgraphql/5.0.6/6.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>octokit/graphql.js</summary>\n\n### [`v6.0.0`](https://togithub.com/octokit/graphql.js/releases/tag/v6.0.0)\n\n[Compare Source](https://togithub.com/octokit/graphql.js/compare/v5.0.6...v6.0.0)\n\n##### Features\n\n-   v6 ([#&#8203;473](https://togithub.com/octokit/graphql.js/issues/473)) ([031b124](https://togithub.com/octokit/graphql.js/commit/031b124ae33e79809cde232fdc9f5f55f8469334))\n\n##### BREAKING CHANGES\n\n-   Drop support for NodeJS v14, v16\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [x] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/50754","RelatedDescription":"Closed or merged PR \"build: update dependency @octokit/graphql to v6\" (#50754)"},{"Id":"1763411439","IsPullRequest":true,"CreatedAt":"2023-06-19T12:20:48","Actor":"devversion","Number":"50763","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"Test","Url":"https://github.com/angular/angular/pull/50763","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50763)"},{"Id":"1763387133","IsPullRequest":true,"CreatedAt":"2023-06-19T12:10:32","Actor":"devversion","Number":"50762","RawContent":null,"Title":"Follow-up improvements to benchmark setup","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/50762","RelatedDescription":"Closed or merged PR \"Follow-up improvements to benchmark setup\" (#50762)"},{"Id":"1763259850","IsPullRequest":true,"CreatedAt":"2023-06-19T11:16:02","Actor":"devversion","Number":"50759","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/50759","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50759)"},{"Id":"1763273148","IsPullRequest":false,"CreatedAt":"2023-06-19T11:00:26","Actor":"krismadden","Number":"50761","RawContent":null,"Title":"\\","State":"closed","Body":"","Url":"https://github.com/angular/angular/issues/50761","RelatedDescription":"Closed issue \"\\\" (#50761)"},{"Id":"1763272034","IsPullRequest":true,"CreatedAt":"2023-06-19T10:49:59","Actor":"pkozlowski-opensource","Number":"50760","RawContent":null,"Title":"fix(benchpress): correctly report memory usage numbers","State":"open","Body":"This PR fixes GC memory numbers reported by benchpress, where previously reported amount was always 0.\r\n\r\n## The problem\r\n\r\nTo understand the fix we need to look into all the layers of the benchpress data processing from numbers reported by a browser, all the way up to the UI. Generally speaking there are 3 \"interesting\" layers involved:\r\n* a browser\r\n* a webdriver extension\r\n* perflog metrics processing inside benchpress\r\n\r\nLet's look at the GC memory numbers and data structures at each layer.\r\n\r\nFirstly, the browser is going to report an event similar to:\r\n\r\n```json\r\n{\r\n    \"args\": {\r\n      \"type\": \"finalize incremental marking via stack guard\",\r\n      \"usedHeapSizeAfter\": 19686548,\r\n      \"usedHeapSizeBefore\": 23869760\r\n    },\r\n    \"cat\": \"devtools.timeline,v8\",\r\n    \"dur\": 2250,\r\n    \"name\": \"MajorGC\",\r\n    \"ph\": \"X\",\r\n    \"pid\": 89342,\r\n    \"tdur\": 2090,\r\n    \"tid\": 259,\r\n    \"ts\": 367056011625,\r\n    \"tts\": 239430\r\n  },\r\n```\r\n\r\nWithout going into the details, we can see that a GC event reports duration and before / after heap sizes (`usedHeapSizeBefore`, `usedHeapSizeAfter`). It seems like at this point we've got all the necessary information to report in the UI.\r\n\r\nThe data reported by the browser are then [normalized](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/webdriver/chrome_driver_extension.ts#L149-L162) to the `PerfLogEvent` data structure and the normalization process would produce:\r\n\r\n```javascript\r\n {\r\n    pid: 89342,\r\n    ph: 'X',\r\n    cat: 'timeline',\r\n    ts: 367056011.625,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n```\r\n\r\n[This is the source of the bug](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/webdriver/chrome_driver_extension.ts#L149-L162) as we are **loosing information** (notice that we only capture `usedHeapSizeAfter` !).\r\n\r\nThe final transformation step [takes place in the metrics processing](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/metric/perflog_metric.ts#L186-L196) where the `X` event is split into a pair of begin / end events with the timestamp of the end event update to account for the duration:\r\n\r\n```javascript\r\n{\r\n    pid: 89342,\r\n    ph: 'B',\r\n    cat: 'timeline',\r\n    ts: 367056011.625,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n{\r\n    pid: 89342,\r\n    ph: 'E',\r\n    cat: 'timeline',\r\n    ts: 367056013.875,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n```\r\n\r\nNotice that we are still loosing information here - one events was just split into a pair of events but each item in this pair only contains `usedHeapSize`.\r\n\r\nGiven this data the GC reporting logic can only calculate 0 as [the logic](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/metric/perflog_metric.ts#L347-L348) looks like follows:\r\n\r\n```typescript\r\nconst amount =\r\n                (startEvent['args']!['usedHeapSize']! - event['args']!['usedHeapSize']!) / 1000;\r\n```\r\n\r\n## The fix\r\n\r\nThe fix sketched in this PR adds a new `gcAmount` filed to the `PerfLogEvent` data structure and populates this data structure in the `ChromeDriverExtension`. \r\n\r\nThis approach works only for Chrome, obviously. Open questions:\r\n* what about other browsers?\r\n* what about the Chrome version update - is the latest version of Chrome producing the same events?","Url":"https://github.com/angular/angular/pull/50760","RelatedDescription":"Open PR \"fix(benchpress): correctly report memory usage numbers\" (#50760)"},{"Id":"1763185793","IsPullRequest":true,"CreatedAt":"2023-06-19T10:41:06","Actor":"devversion","Number":"50758","RawContent":null,"Title":"ci: fix benchmark compare to work with fork pull requests","State":"closed","Body":"The checkout action always assumes the main repository, but the branch name/SHA of the\r\npull request will be from a fork.\r\n\r\nWe fix this by using an updated action that exposes the branch repo owner and name, so that\r\nwe can check out the actual PR branch/SHA.\r\n\r\nAlso commits some lock file changes that seem to be necessary on `main`\r\n","Url":"https://github.com/angular/angular/pull/50758","RelatedDescription":"Closed or merged PR \"ci: fix benchmark compare to work with fork pull requests\" (#50758)"},{"Id":"1763018567","IsPullRequest":false,"CreatedAt":"2023-06-19T08:25:50","Actor":"MikaStark","Number":"50757","RawContent":null,"Title":"Migrate from constructor-based dependency injection to inject() function","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nupgrade\n\n### Description\n\nHi Angular team :)\r\n\r\nFirst of all, thanks for the hard work and the wonderful new features (special mentions to signals and input-route binding).\r\n\r\nTaking from what was said in the last [Building Games and Q/A](https://www.youtube.com/watch?v=ZR_r1H8-Y_E&t=3370s), I think it could be very great to add a schematics to migrate from constructor-based dependency injection to the new `inject()` function.\r\n\r\nAngular team already did something similar in v16 for Standalone APIs and I personally really appreciated what was done.  \n\n### Proposed solution\n\nAdd some clarification on the official documentation to expose advantages of `inject()` function usage\n\n### Alternatives considered\n\nAdd a schematics to simplify migration from constructor-based injection.","Url":"https://github.com/angular/angular/issues/50757","RelatedDescription":"Open issue \"Migrate from constructor-based dependency injection to inject() function\" (#50757)"},{"Id":"1762820746","IsPullRequest":false,"CreatedAt":"2023-06-19T06:11:46","Actor":"JohnnyDevNull","Number":"50756","RawContent":null,"Title":"zone.js update from 0.13.0 to 0.13.1 regression","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nBefore Update to 0.13.1 all Unit-Tests where green in zone.js 0.13.0. After Update to 0.13.1 some Unit-Tests are failing with errors, which  seems not belonging to zone.js, but the changelog let's assuming that patching the node Promise API causes the error.\r\n\r\nThe problem is the mocking logic from jest, which can't `spyOn` some ways now:\r\n\r\ne.g.\r\n\r\n```\r\nimport * as utils from '@redngapps/shared/util';\r\n\r\n...\r\n\r\njest.spyOn(utils, 'sanitizeHtml').mockImplementation(value => value);\r\n```\r\nis failing now, errors see below.\r\n\r\n```\r\nimport * as arrayBufferUtils from '@redngapps/shared/util';\r\n\r\n...\r\n\r\njest.spyOn(arrayBufferUtils, 'generateRandomHexString').mockReturnValue('mock-state');\r\n```\r\nis failing now, errors see below.\r\n\r\nand all other kind of `spyOn` defined the mentioned way above are failing now\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nTypeError: Cannot redefine property: sanitizeHtml\r\nTypeError: Cannot redefine property: generateRandomHexString\r\nTypeError: Cannot redefine property: fetchEntity\r\nTypeError: Cannot redefine property: generateRandomUint8Array\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nNx Version:\r\n- Local: v15.9.4\r\n```\r\n\r\n```\r\n    \"@angular/animations\": \"15.2.9\",\r\n    \"@angular/cdk\": \"15.2.9\",\r\n    \"@angular/common\": \"15.2.9\",\r\n    \"@angular/compiler\": \"15.2.9\",\r\n    \"@angular/core\": \"15.2.9\",\r\n    \"@angular/forms\": \"15.2.9\",\r\n    \"@angular/localize\": \"15.2.9\",\r\n    \"@angular/material\": \"15.2.9\",\r\n    \"@angular/platform-browser\": \"15.2.9\",\r\n    \"@angular/platform-browser-dynamic\": \"15.2.9\",\r\n    \"@angular/router\": \"15.2.9\",\r\n    \"zone.js\": \"0.13.1\"\r\n\r\n\r\n    \"@angular-devkit/architect\": \"0.1502.8\",\r\n    \"@angular-devkit/build-angular\": \"15.2.8\",\r\n    \"@angular-devkit/core\": \"15.2.8\",\r\n    \"@angular-devkit/schematics\": \"15.2.8\",\r\n    \"@angular-eslint/eslint-plugin\": \"15.2.1\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"15.2.1\",\r\n    \"@angular-eslint/template-parser\": \"15.2.1\",\r\n    \"@angular/cli\": \"15.2.8\",\r\n    \"@angular/compiler-cli\": \"15.2.9\",\r\n    \"@angular/language-service\": \"15.2.9\",\r\n```\r\n","Url":"https://github.com/angular/angular/issues/50756","RelatedDescription":"Open issue \"zone.js update from 0.13.0 to 0.13.1 regression\" (#50756)"},{"Id":"1762329256","IsPullRequest":true,"CreatedAt":"2023-06-18T20:19:09","Actor":"simonhock","Number":"50753","RawContent":null,"Title":"docs: Improve Dependency Injection","State":"closed","Body":"\r\n- Fix @Inject(Service) animal=>value notations\r\n- Fix <#VIEW> closing tag\r\n- Add app-root <#VIEW> value ","Url":"https://github.com/angular/angular/pull/50753","RelatedDescription":"Closed or merged PR \"docs: Improve Dependency Injection\" (#50753)"},{"Id":"1762431713","IsPullRequest":true,"CreatedAt":"2023-06-18T19:39:19","Actor":"devversion","Number":"50755","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"Hey","Url":"https://github.com/angular/angular/pull/50755","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50755)"},{"Id":"1760614483","IsPullRequest":true,"CreatedAt":"2023-06-18T19:32:40","Actor":"devversion","Number":"50745","RawContent":null,"Title":"build: setup to run benchmarks and perform comparisons","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/50745","RelatedDescription":"Closed or merged PR \"build: setup to run benchmarks and perform comparisons\" (#50745)"},{"Id":"1761952133","IsPullRequest":true,"CreatedAt":"2023-06-17T18:32:28","Actor":"EmmanuelRoux","Number":"50752","RawContent":null,"Title":"fix(forms): fix FormRecord type inference","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #50751\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50752","RelatedDescription":"Open PR \"fix(forms): fix FormRecord type inference\" (#50752)"},{"Id":"1761950597","IsPullRequest":false,"CreatedAt":"2023-06-17T18:26:37","Actor":"EmmanuelRoux","Number":"50751","RawContent":null,"Title":"Incorrect type inference for FormRecord","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n`FormRecord` is sometimes incorrectly inferred to be a `FormGroup`.\r\n\r\nThis is apparently caused by:\r\n- `FormRecord` class actually extends `FormGroup`\r\n-  The way [`ɵElement`](https://github.com/angular/angular/blob/9588b11e5b556fdc64e075e97d8f707f29cddcdf/packages/forms/src/form_builder.ts#L64) is implemented (first checks for instance of `FormGroup`, before `FormRecord`)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nThis appeared as a TS error while working on #50750 (which adds a new method on `FormRecord`)\r\nhttps://github.com/EmmanuelRoux/angular/tree/formrecord-clear\r\n\r\nRevealed by some Angular's own tests, such as [this one](https://github.com/angular/angular/blob/9588b11e5b556fdc64e075e97d8f707f29cddcdf/packages/forms/test/typed_integration_spec.ts#L1401) (extract below):\r\n```ts\r\n        const c = fb.array([fb.record({bar: 'foo'})]);\r\n        {\r\n          type ControlsType = Array<FormRecord<FormControl<string|null>>>;\r\n          let t: ControlsType = c.controls; // <-- incorrectly inferred as controls of `FormGroup` instead of `FormRecord`\r\n          let t1 = c.controls;\r\n          t1 = null as unknown as ControlsType;\r\n        }\r\n```\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nWorking on PR #50750 which adds a new method on `FormRecord` (but not on `FormGroup`)\r\n\r\nAngular CLI: 16.0.0-rc.4\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.0-rc.4\r\n@angular-devkit/build-angular   16.0.0-rc.4\r\n@angular-devkit/core            16.0.0-rc.4\r\n@angular-devkit/schematics      16.0.0-rc.4\r\n@angular/build-tooling          0.0.0-5f06c4774df908ed69e1441f4ec63b898acf0c68\r\n@angular/cdk                    16.0.0-rc.2\r\n@angular/cli                    16.0.0-rc.4\r\n@angular/material               16.0.0-rc.2\r\n@angular/ng-dev                 <error>\r\n@bazel/bazelisk                 1.12.1\r\n@bazel/buildifier               6.1.2\r\n@bazel/concatjs                 5.8.1\r\n@bazel/esbuild                  5.8.1\r\n@bazel/ibazel                   v0.16.2\r\n@bazel/jasmine                  5.8.1\r\n@bazel/protractor               5.8.1\r\n@bazel/rollup                   5.8.1\r\n@bazel/runfiles                 5.8.1\r\n@bazel/terser                   5.8.1\r\n@bazel/worker                   5.8.1\r\n@schematics/angular             16.0.0-rc.4\r\nrxjs                            6.6.7\r\ntypescript                      5.1.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/50751","RelatedDescription":"Open issue \"Incorrect type inference for FormRecord\" (#50751)"},{"Id":"1761949670","IsPullRequest":true,"CreatedAt":"2023-06-17T18:23:43","Actor":"EmmanuelRoux","Number":"50750","RawContent":null,"Title":"feat(forms): add ability to clear a FormRecord","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #50748\r\n\r\n\r\n## What is the new behavior?\r\n\r\nNew method `FormRecord.clearControls()` is available.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes \r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50750","RelatedDescription":"Open PR \"feat(forms): add ability to clear a FormRecord\" (#50750)"},{"Id":"1761711795","IsPullRequest":false,"CreatedAt":"2023-06-17T08:36:00","Actor":"moniuch","Number":"50748","RawContent":null,"Title":"Add .clear() to remove all member controls of FormGroup|FormRecord","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\n`FormArray` has its convenience method [FormArray.clear](https://angular.io/api/forms/FormArray#clear) to help with swiftly removing all controls. `FormRecord` and `FormGroup` should have theirs too.\r\n\r\n#### Use case\r\n\r\nWhen building a set of checkboxes, besides using `FormArray` for this, one can also use a `FormGroup|FormRecord` approach, where the set has a value in shape of an object:\r\n\r\n```ts\r\nthis.fb.record({\r\n   [ key: string ]: this.fb.control(false | true)\r\n});\r\n```\r\n\r\nso that the value becomes very natural to read and understand **and to set**:\r\n\r\n```\r\nhasPrivateBathroom: true,\r\nhasTv: false,\r\nhasBalcony: true,\r\nhasMinibar: true,\r\n```\r\n\r\nWhen building the form record out of an array, you'd have code along these lines somewhere:\r\n\r\n```ts\r\nbuildOptionsRecord(availableOptions: Option[]): void {\r\n    // before constructing the FormRecord you need to first empty it\r\n    // instead of iterating over the members and having to `.removeControl()` by name\r\n    // I'd like to be able to say this.availableOptionsRecord.clear()\r\n    // and have it emptied in one go\r\n    \r\n    // now build the controls\r\n    availableOptions.forEach(option => {\r\n      this.availableOptionsRecord.addControl(option.id, false)\r\n    });\r\n}\r\n```\r\n\r\nIn response to the incoming array of available options you would need to first empty the current `FormGroup`|`FormRecord`. Currently this requires a very clumsy `while` loop.\n\n### Proposed solution\n\nadd `FormGroup#clear()` as well `FormRecord#clear()`\n\n### Alternatives considered\n\n```\r\nwhile(Object.keys(formGroup.controls).length){\r\n      const toRemove = Object.keys(formGroup.controls)[0];\r\n      formGroup.removeControl(toRemove)\r\n}\r\n```\r\n\r\nNo one want to have to write this type of code.","Url":"https://github.com/angular/angular/issues/50748","RelatedDescription":"Open issue \"Add .clear() to remove all member controls of FormGroup|FormRecord\" (#50748)"},{"Id":"1761162909","IsPullRequest":true,"CreatedAt":"2023-06-16T19:04:39","Actor":"puckowski","Number":"50747","RawContent":null,"Title":"feat(compiler): scope selectors in @scope queries","State":"open","Body":"This pull request makes sure selectors inside @scope queries are correctly scoped.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\nCurrently there is no support in the Angular compiler for the scope at-rule [CSSWG](https://drafts.csswg.org/css-cascade-6/#scope-atrule) [1] which is targeted for support in Chrome 117 [Chrome Status](https://chromestatus.com/feature/5100672734199808) [2] which means usage of this feature results in CSS that is not correctly scoped.\r\n\r\n## What is the new behavior?\r\n\r\nUsing the CSS scope at-rule results in properly scoped CSS.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nAngular will be ready for the new browser features when they ship.","Url":"https://github.com/angular/angular/pull/50747","RelatedDescription":"Open PR \"feat(compiler): scope selectors in @scope queries\" (#50747)"},{"Id":"1760620829","IsPullRequest":false,"CreatedAt":"2023-06-16T13:15:46","Actor":"rosostolato","Number":"50746","RawContent":null,"Title":"@Input with signals","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nSorry for opening another issue to talk about Input and signals but I had to ask about this. I saw discussions about `@Input` and `Signal` in https://github.com/angular/angular/issues/50190 and https://github.com/angular/angular/discussions/49682#:~:text=request%20for%20Angular.-,Signal%2Dbased%20inputs,-In%20signal%2Dbased but they only said about creating a new different decorator for signal inputs or create a totally different component with signal inputs which I think it's not necessary, we can just use what Angular already have and just add an extra option.\n\n### Proposed solution\n\nMy proposal is to add one extra prop to the `@Input()` decorator options called `signal` which will tell Angular to not reassign the input but use the current signal reference to `set` the new value. See this rewrite of the RFC proposal:\r\n\r\n```ts\r\n@Component({\r\n  standalone: true,\r\n  selector: 'user-profile',\r\n  template: `\r\n    <p>Name: {{ firstName() }} {{ lastName() }}</p>\r\n    <p>Account suspended: {{ suspended() }}</p>\r\n  `,\r\n})\r\nexport class UserProfile {\r\n  // Create an optional input without an initial value.\r\n  @Input({ signal: true })\r\n  firstName = signal<string | undefined>(undefined); // Signal<string | undefined>\r\n\r\n  // Create an input with a default value\r\n  @Input({ signal: true })\r\n  lastName = signal('Smith'); // Signal<string>\r\n\r\n  // Create an input with options.\r\n  @Input({ signal: true, alias: 'disabled' })\r\n  suspended = signal(false); // Signal<boolean>\r\n}\r\n```\n\n### Alternatives considered\n\nThe proposed solution would work just like if you had used getter and setter to set a private `Signal` value.\r\n\r\n```ts\r\n@Input()\r\nget name(): string {\r\n  return this._name();\r\n}\r\nset name(value: string) {\r\n  this._name.set(value);\r\n}\r\nprivate _name = signal('');\r\n```\r\n\r\nPlease, I ask to consider this, I've been waiting for reactive inputs so long, we already have the tools in our hands to make it possible 🙏 ","Url":"https://github.com/angular/angular/issues/50746","RelatedDescription":"Open issue \"@Input with signals\" (#50746)"},{"Id":"1760294861","IsPullRequest":false,"CreatedAt":"2023-06-16T11:06:27","Actor":"infacto","Number":"50743","RawContent":null,"Title":"Get element inside ng-template.","State":"closed","Body":"","Url":"https://github.com/angular/angular/issues/50743","RelatedDescription":"Closed issue \"Get element inside ng-template.\" (#50743)"},{"Id":"1760280015","IsPullRequest":false,"CreatedAt":"2023-06-16T09:40:20","Actor":"stanchev89","Number":"50742","RawContent":null,"Title":"NG0908 error observed","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js, Don't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nHey everyone! About a month and a half ago, we included monitoring events in the Angular bootstrap failure events to gain a clearer understanding of all the cases where the app is broken. \r\nWe’re already aware of the typical errors for unsupported (old) browsers like “ut.flat is not a function,” and they’re not a major concern. \r\nHowever, in the past 3-4 weeks, we’ve been noticing errors named **NG0908**, and their count has reached around 850 per week.\r\n\r\nI’ve been trying to gather more information about this particular error, but there isn’t much available. It’s not documented in the official Angular error list https://angular.io/errors. The only source I found mentioning this error is https://stackoverflow.com/questions/75485862/error-conflict-multiple-chunks-emit-assets-to-the-same-filename-app-js-chunks.\r\n\r\n\r\nCould you provide assistance in identifying the source of the issue and suggesting appropriate actions to resolve it?\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: NG0908\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n@angular-devkit/architect       0.1502.2\r\n@angular-devkit/build-angular   15.2.2\r\n@angular-devkit/core            15.2.2\r\n@angular-devkit/schematics      15.2.2\r\n@angular/cdk                    15.2.9\r\n@angular/material               15.2.9\r\n@schematics/angular             15.2.2\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\r\n\r\n\r\nNode: 16.19.1\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/50742","RelatedDescription":"Open issue \"NG0908 error observed\" (#50742)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1764552305","IsPullRequest":false,"CreatedAt":"2023-06-20T03:29:30","Actor":"sergey-morenets","Number":"25402","RawContent":null,"Title":"Data path \"\" must have required property 'project'.","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi\r\n\r\nWe have two projects that use Angular and Angular CLI. After we've upgraded both projects to Angular 16.x we can't use schematics for one of the projects (second project is fine). \r\nWe tried to clear node_modules or cache folders but it didn't help.\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nAny time we try to use schematics we always receive an error:\r\n\r\n`ng generate class Test`\n\n### Exception or Error\n\n```text\nSchematic input does not validate against the Schema: {\"name\":\"Test\",\"path\":\"src/app/model\"}\r\nErrors:\r\n\r\n  Data path \"\" must have required property 'project'.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: yarn 3.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... google-maps, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25402","RelatedDescription":"Open issue \"Data path \"\" must have required property 'project'.\" (#25402)"},{"Id":"1762908147","IsPullRequest":true,"CreatedAt":"2023-06-19T07:15:38","Actor":"angular-robot","Number":"25401","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25401","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25401)"},{"Id":"1762177012","IsPullRequest":false,"CreatedAt":"2023-06-18T08:19:21","Actor":"leon","Number":"25400","RawContent":null,"Title":"using tailwind with esbuild doesn't trigger reload of styles","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI setup a bare minimum angular project  using css (also tried scss but no different), and follow the guide here\r\nhttps://tailwindcss.com/docs/guides/angular\r\n\r\nusing webpack `ng serve` will correctly handle changes when changing any components class such as `class=\"bg-white text-blue\"`\r\n\r\nBut If I then switch to the new esbuild version by changing angular.json to `@angular-devkit/build-angular:browser-esbuild`\r\nThe browser reloads, but the tailwind css is not getting updated.\r\nIf I stop `ng serve` and start up again the changes are there.\r\n\r\n\r\nHas anyone else got esbuild and tailwind working well together?\r\n\n\n### Minimal Reproduction\n\n- pnpx @angular/cli new --routing --standalone --strict --style=css --view-encapsulation=None --package-manager=pnpm myapp\r\n- follow https://tailwindcss.com/docs/guides/angular\r\n- change angular.json to use `@angular-devkit/build-angular:browser-esbuild` for serve executor\r\n- change the app.component.html to contain some tailwind classes\r\n\r\nHere is a reproduction repo\r\nhttps://github.com/leon/bug-angular-esbuild-tailwind\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: pnpm 8.6.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25400","RelatedDescription":"Open issue \"using tailwind with esbuild doesn't trigger reload of styles\" (#25400)"},{"Id":"1761899271","IsPullRequest":false,"CreatedAt":"2023-06-17T15:38:17","Actor":"sir-babagee","Number":"25399","RawContent":null,"Title":"Cannot add @angular/pwa to my angular project","State":"open","Body":"### Command\r\n\r\nadd\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm trying to add @angular/pwa to my angular project but I keep running into this error.\r\n\r\n`× Unable to load package information from registry: The \"timeout\" argument must be of type number. Received type string ('6000000')`\r\n\r\nI've been looking and I can't seem to find anywhere where this error occurred. I would appreciate if a solution to this can be provided.\r\n\r\n### Minimal Reproduction\r\n\r\nCan't really say what caused the issue or how to reproduce as this project is pretty large and has been in the works for a while\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.7\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1502.7\r\n@angular-devkit/build-angular       15.2.7\r\n@angular-devkit/core                16.1.0\r\n@angular-devkit/schematics          16.1.0\r\n@angular/animations                 15.2.8\r\n@angular/cdk                        15.2.8\r\n@angular/cli                        15.2.7\r\n@angular/common                     15.2.8\r\n@angular/compiler                   15.2.8\r\n@angular/compiler-cli               15.2.8\r\n@angular/fire                       7.5.0\r\n@angular/forms                      15.2.8\r\n@angular/material                   15.2.8\r\n@angular/platform-browser           15.2.8\r\n@angular/platform-browser-dynamic   15.2.8\r\n@angular/router                     15.2.8\r\n@schematics/angular                 16.1.0\r\nrxjs                                7.8.1\r\ntypescript                          4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25399","RelatedDescription":"Open issue \"Cannot add @angular/pwa to my angular project\" (#25399)"},{"Id":"1761761356","IsPullRequest":false,"CreatedAt":"2023-06-17T11:25:54","Actor":"zygarios","Number":"25398","RawContent":null,"Title":"Add HMR support for esbuild","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI would like to have the option of using HMR when using esbuild:\r\n@angular-devkit/build-angular:browser-esbuild.\r\n\r\nCurrently, this is possible when using the classic approach, but esbuild is faster, and this functionality is highly anticipated by me.\n\n### Proposed solution\n\nAdd HMR support for ESbuild :)\n\n### Alternatives considered\n\nNo idea","Url":"https://github.com/angular/angular-cli/issues/25398","RelatedDescription":"Closed issue \"Add HMR support for esbuild\" (#25398)"},{"Id":"1761097072","IsPullRequest":true,"CreatedAt":"2023-06-16T18:08:41","Actor":"alan-agius4","Number":"25397","RawContent":null,"Title":"build: update critters to 0.19.0","State":"open","Body":"Update critters to the latest version.\r\n\r\nCloses #25388\r\n","Url":"https://github.com/angular/angular-cli/pull/25397","RelatedDescription":"Open PR \"build: update critters to 0.19.0\" (#25397)"},{"Id":"1760911123","IsPullRequest":true,"CreatedAt":"2023-06-16T16:28:58","Actor":"clydin","Number":"25396","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded static block workaround","State":"closed","Body":"esbuild 0.18.2 contains a fix that removes the need for the workaround of disabling support for static class blocks.\r\nRelated issue: https://github.com/evanw/esbuild/issues/2950","Url":"https://github.com/angular/angular-cli/pull/25396","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded static block workaround\" (#25396)"},{"Id":"1760278216","IsPullRequest":true,"CreatedAt":"2023-06-16T16:05:22","Actor":"alan-agius4","Number":"25390","RawContent":null,"Title":"build: update build-tooling package and enable Node.js 18 tests","State":"closed","Body":"This commit updates the build-tooling package which contains fixes for RBE on Node.js 18. It also enables the Node.js 18 test suit.","Url":"https://github.com/angular/angular-cli/pull/25390","RelatedDescription":"Closed or merged PR \"build: update build-tooling package and enable Node.js 18 tests\" (#25390)"},{"Id":"1760482674","IsPullRequest":false,"CreatedAt":"2023-06-16T15:51:33","Actor":"LanderBeeuwsaert","Number":"25393","RawContent":null,"Title":"es-build starts to fail when upgrading from 16.0.5 to 16.1.0","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.5\n\n### Description\n\nes-build starts to fail when upgrading from 16.0.5 to 16.1.0\r\n\r\n<img width=\"1259\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/1098243/b9130ad6-dca9-4c67-bc53-d5d018a54828\">\r\n\n\n### Minimal Reproduction\n\n---\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nPS C:\\lander\\devprojects\\acro-companion> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 8.6.0\r\nOS: win32 x64\r\n\r\nAngular: 16.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1601.0\r\n@angular-devkit/build-angular        16.1.0\r\n@angular-devkit/core                 16.1.0\r\n@angular-devkit/schematics           16.1.0\r\n@angular/cdk                         14.2.4\r\n@angular/fire                        7.6.1\r\n@angular/google-maps                 14.2.4\r\n@angular/material                    14.2.4\r\n@angular/material-date-fns-adapter   14.2.4\r\n@angular/youtube-player              14.2.4\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.1.0\r\nrxjs                                 7.8.1\r\ntypescript                           5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25393","RelatedDescription":"Closed issue \"es-build starts to fail when upgrading from 16.0.5 to 16.1.0\" (#25393)"},{"Id":"1760839362","IsPullRequest":false,"CreatedAt":"2023-06-16T15:16:30","Actor":"atsjo","Number":"25395","RawContent":null,"Title":"esbuild ng serve not watching html and css files outside project root","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is a follow-up to https://github.com/angular/angular-cli/issues/25011\r\n\r\n16.1 fixed watching ts files, but it still doesn't pick up changes in html and css files in library components. It picks up the change if first changing html, then a dummy write to the component ts file, but changes to the html/css doesn't trigger re-generation itself.\n\n### Minimal Reproduction\n\nhttps://github.com/angular/angular-cli/issues/25011\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nNode   : 18.16.0\r\n   OS     : win32 x64\r\n   pnpm   : 8.6.2\r\n   Hasher : Native\r\n   \r\n   nx                 : 16.3.2\r\n   @nx/js             : 16.3.2\r\n   @nx/jest           : 16.3.2\r\n   @nx/linter         : 16.3.2\r\n   @nx/workspace      : 16.3.2\r\n   @nx/angular        : 16.3.2\r\n   @nx/cypress        : 16.3.2\r\n   @nx/devkit         : 16.3.2\r\n   @nx/esbuild        : 16.3.2\r\n   @nx/eslint-plugin  : 16.3.2\r\n   @nrwl/tao          : 16.3.2\r\n   @nx/webpack        : 16.3.2\r\n   typescript         : 5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25395","RelatedDescription":"Open issue \"esbuild ng serve not watching html and css files outside project root\" (#25395)"},{"Id":"1760664647","IsPullRequest":true,"CreatedAt":"2023-06-16T14:20:28","Actor":"clydin","Number":"25394","RawContent":null,"Title":"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"","State":"closed","Body":"These changes are causing imported types to be incorrectly retained.\r\n\r\nThis reverts commit https://github.com/angular/angular-cli/commit/c462d9cb90377342980384c6bccb3ddfef533282.","Url":"https://github.com/angular/angular-cli/pull/25394","RelatedDescription":"Closed or merged PR \"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"\" (#25394)"},{"Id":"1760263416","IsPullRequest":true,"CreatedAt":"2023-06-16T14:14:07","Actor":"alan-agius4","Number":"25389","RawContent":null,"Title":"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/25379","Url":"https://github.com/angular/angular-cli/pull/25389","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`\" (#25389)"},{"Id":"1759341493","IsPullRequest":true,"CreatedAt":"2023-06-16T14:13:53","Actor":"clydin","Number":"25385","RawContent":null,"Title":"fix(@angular-devkit/build-angular): actually disable Vite prebundling file discovery","State":"closed","Body":"The `entries` option should be used instead of the `includes` option to disable the file entry based discovery for Vite's prebundling. This discovery is unneeded due to the built application files existing only in memory.","Url":"https://github.com/angular/angular-cli/pull/25385","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): actually disable Vite prebundling file discovery\" (#25385)"},{"Id":"1758052767","IsPullRequest":true,"CreatedAt":"2023-06-16T14:13:09","Actor":"angular-robot","Number":"25382","RawContent":null,"Title":"build: update dependency piscina to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [piscina](https://togithub.com/piscinajs/piscina) | dependencies | major | [`3.2.0` -> `4.0.0`](https://renovatebot.com/diffs/npm/piscina/3.2.0/4.0.0) |\n| [piscina](https://togithub.com/piscinajs/piscina) | devDependencies | major | [`3.2.0` -> `4.0.0`](https://renovatebot.com/diffs/npm/piscina/3.2.0/4.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>piscinajs/piscina</summary>\n\n### [`v4.0.0`](https://togithub.com/piscinajs/piscina/releases/tag/v4.0.0)\n\n[Compare Source](https://togithub.com/piscinajs/piscina/compare/v3.2.0...v4.0.0)\n\n##### What's Changed\n\n##### Breaking Change\n\n-   Drop support to Node.js <=14\n\n##### Minor/Patch\n\n-   Add dependabot by [@&#8203;nicholas-l](https://togithub.com/nicholas-l) in [https://github.com/piscinajs/piscina/pull/162](https://togithub.com/piscinajs/piscina/pull/162)\n-   Add Node.js 17.x to the CI matrix by [@&#8203;jasnell](https://togithub.com/jasnell) in [https://github.com/piscinajs/piscina/pull/165](https://togithub.com/piscinajs/piscina/pull/165)\n-   feat: expose `maxThreads` and `minThreads` out of Piscina instance by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/149](https://togithub.com/piscinajs/piscina/pull/149)\n-   Add communication from worker to main thread by [@&#8203;Elyahou](https://togithub.com/Elyahou) in [https://github.com/piscinajs/piscina/pull/213](https://togithub.com/piscinajs/piscina/pull/213)\n-   Update README.md by [@&#8203;Prinzhorn](https://togithub.com/Prinzhorn) in [https://github.com/piscinajs/piscina/pull/308](https://togithub.com/piscinajs/piscina/pull/308)\n-   test: fix issue at new Node versions by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/350](https://togithub.com/piscinajs/piscina/pull/350)\n-   doc: update Node.js recommendation to v16+ by [@&#8203;RafaelGSS](https://togithub.com/RafaelGSS) in [https://github.com/piscinajs/piscina/pull/351](https://togithub.com/piscinajs/piscina/pull/351)\n-   chore: Update CI by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/349](https://togithub.com/piscinajs/piscina/pull/349)\n-   v4.0.0 by [@&#8203;RafaelGSS](https://togithub.com/RafaelGSS) in [https://github.com/piscinajs/piscina/pull/353](https://togithub.com/piscinajs/piscina/pull/353)\n\n**Full Changelog**: https://github.com/piscinajs/piscina/compare/v3.2.0...v4.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25382","RelatedDescription":"Closed or merged PR \"build: update dependency piscina to v4\" (#25382)"},{"Id":"1758052470","IsPullRequest":true,"CreatedAt":"2023-06-16T14:12:54","Actor":"angular-robot","Number":"25381","RawContent":null,"Title":"build: update github/codeql-action action to v2.20.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | minor | `v2.3.6` -> `v2.20.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.20.0`](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25381","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.20.0\" (#25381)"},{"Id":"1756414133","IsPullRequest":true,"CreatedAt":"2023-06-16T14:12:41","Actor":"alan-agius4","Number":"25379","RawContent":null,"Title":"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`","State":"closed","Body":"This is in an effort to reduce errors like `\"Unknown version 114 of edge (While processing: \"base$0$0\")\"` which are caused by mismatching versions.\r\n\r\nCloses #25377\r\n","Url":"https://github.com/angular/angular-cli/pull/25379","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`\" (#25379)"},{"Id":"1760429096","IsPullRequest":false,"CreatedAt":"2023-06-16T11:27:50","Actor":"gmfun","Number":"25392","RawContent":null,"Title":"esbuild dev server thowing error","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0.1\n\n### Description\n\n`Uncaught SyntaxError: The requested module '/.angular/cache/16.1.0/vite/deps/@angular_core.js?v=73a37d0a' does not provide an export named 'Signal'`\r\n\r\nI am seeing the above error when running `ng serve` with esbuild\n\n### Minimal Reproduction\n\n- Create a new standalone app using nx (application should be inside apps directory)\r\n- Add `someSignal: Signal<any> = signal('123')` in `app.component.ts`\r\n- switch to esbuild\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.0.3\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.0.5\r\nng-packagr                      16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25392","RelatedDescription":"Open issue \"esbuild dev server thowing error\" (#25392)"},{"Id":"1760198864","IsPullRequest":false,"CreatedAt":"2023-06-16T08:44:32","Actor":"mbertuzzi","Number":"25388","RawContent":null,"Title":"v16.1 build escapes special characters in index.html","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0\n\n### Description\n\nBuilding a project with some special characters in index.html (e.g. '$' or '&') makes them to be escaped in HTML format (&#x24; or &amp;)\r\n\r\n<img width=\"1335\" alt=\"immagine\" src=\"https://github.com/angular/angular-cli/assets/103991825/995f522e-87e7-4dfd-b1c0-7794f0407dd2\">\r\n\n\n### Minimal Reproduction\n\nCreate a new empty angular 16.1 project, change the title e.g. with ${title} in index.html and build it.\r\nIn the dist folder the index.html has the escaped string &#x24;{title} instead of the original string\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25388","RelatedDescription":"Open issue \"v16.1 build escapes special characters in index.html\" (#25388)"},{"Id":"1759556293","IsPullRequest":false,"CreatedAt":"2023-06-15T21:13:39","Actor":"JSMike","Number":"25387","RawContent":null,"Title":"Blue Oak license in dependency tree is not OSI approved","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRecent changes to `glob` result in issues with licenses. `glob` now depends on `jackspeak` and `path-scurry` which are using the new `Blue Oak` license. The `Blue Oak` license is not approved by OSI. This is impacting my company's ability to pull in `@angular-devkit/build-angular@16` and `@angular/cli@15`, along with any other company that relies on OSI standards for legal.\r\n\r\nhttps://github.com/isaacs/path-scurry/issues/7\n\n### Minimal Reproduction\n\n`npx @angular/cli@latest new blueoak16 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls jackspeak\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls path-scurry\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── path-scurry@1.9.2\r\n\r\nor:\r\n\r\n`npx @angular/cli@l15.2.4 new blueoak15 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls jackspeak\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls path-scurry\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── path-scurry@1.9.2\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25387","RelatedDescription":"Open issue \"Blue Oak license in dependency tree is not OSI approved\" (#25387)"},{"Id":"1759490305","IsPullRequest":false,"CreatedAt":"2023-06-15T20:34:31","Actor":"zip-fa","Number":"25386","RawContent":null,"Title":"Dev server crashing with &:host in scss","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccidentally added & before :host could lead to devserver crash\n\n### Minimal Reproduction\n\nThese styles crashed my dev-server:\r\n\r\n```\r\n&:host {\r\n  position: relative;\r\n  display: block;\r\n}\r\n```\n\n### Exception or Error\n\n```text\nnode:internal/event_target:1037\r\n  process.nextTick(() => { throw err; });\r\n                           ^\r\nTypeError [Error]: Cannot read properties of undefined (reading 'column')\r\n    at convertSourceSpan (/Users/name/Documents/project/node_modules/@angular-devkit/build-angular/src/sass/worker.js:146:30)\r\n    at MessagePort.<anonymous> (/Users/name/Documents/project/node_modules/@angular-devkit/build-angular/src/sass/worker.js:111:27)\r\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:762:20)\r\n    at exports.emitMessage (node:internal/per_context/messageport:23:28)\r\nEmitted 'error' event on Worker instance at:\r\n    at [kOnErrorMessage] (node:internal/worker:326:10)\r\n    at [kOnMessage] (node:internal/worker:337:37)\r\n    at MessagePort.<anonymous> (node:internal/worker:232:57)\r\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:762:20)\r\n    at exports.emitMessage (node:internal/per_context/messageport:23:28)\r\n\r\nNode.js v20.3.0\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.0.1\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.1\r\n@angular-devkit/build-angular   16.0.1\r\n@angular-devkit/core            16.0.1\r\n@angular-devkit/schematics      16.0.1\r\n@angular/cdk                    16.0.1\r\n@angular/cli                    16.0.1\r\n@angular/material               16.0.1\r\n@nguniversal/builders           16.0.1\r\n@nguniversal/express-engine     16.0.1\r\n@schematics/angular             16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25386","RelatedDescription":"Closed issue \"Dev server crashing with &:host in scss\" (#25386)"},{"Id":"1758637942","IsPullRequest":true,"CreatedAt":"2023-06-15T11:37:25","Actor":"alan-agius4","Number":"25384","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add initial application builder implementation","State":"open","Body":"\r\nThis commits add the initial application builder schema and build configuration and refactors several files.\r\n","Url":"https://github.com/angular/angular-cli/pull/25384","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): add initial application builder implementation\" (#25384)"},{"Id":"1758452812","IsPullRequest":false,"CreatedAt":"2023-06-15T11:09:20","Actor":"edimitchel","Number":"25383","RawContent":null,"Title":"Vite prebundling issue with Angular 16.1","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, platform-browser\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm trying the Vite compiler by running our application with the latest version of Angular 16.1.\r\n\r\nI run the app with nx: `pnpm nx serve app -- --force-esbuild`. Server run but when I start the application in the browser, I got following error:\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-rsyx1w?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nUncaught Error: Dynamic require of \"@angular/platform-browser\" is not supported\r\n    at main.js:27:9\r\n    at packages/app/src/main.ts (app.module.ts:61:14)\r\n    at __require2 (main.js:45:50)\r\n    at main.ts:7:37\r\n(anonymes) @ main.js:27\r\npackages/app/src/main.ts @ app.module.ts:61\r\n__require2 @ main.js:45\r\n(anonymes) @ main.ts:7\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: pnpm 8.5.0\r\nOS: linux x64\r\n\r\nAngular: 16.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nwebpack                         5.86.0\n```\n\n\n### Anything else?\n\nThe reproduction link is not showing the issue, will try to make it but I don't have time","Url":"https://github.com/angular/angular-cli/issues/25383","RelatedDescription":"Closed issue \"Vite prebundling issue with Angular 16.1\" (#25383)"},{"Id":"1756226403","IsPullRequest":false,"CreatedAt":"2023-06-14T16:08:43","Actor":"bjornharvold","Number":"25377","RawContent":null,"Title":"🐛 Upgrading to v16.1.0 gives me \"Unknown version 114 of edge (While processing: \"base$0$0\")\"","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n- I upgraded from 16.0.5 to 16.1.0\r\n- I made sure all Angular related libs were on 16.1.0\r\n- I upgraded Typescript to 5.1.4\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\nWhen I start my app, I now receive:\r\n\r\n./apps/travel-agent/src/main.ts - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):\r\nBrowserslistError: [BABEL] /Users/crash/git/monorepo-typescript/apps/travel-agent/src/main.ts: Unknown version 114 of edge (While processing: \"base$0$0\")\r\n\r\n./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):\r\nBrowserslistError: [BABEL] /Users/crash/git/monorepo-typescript/node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js: Unknown version 114 of edge (While processing: \"base$0$0\")\r\n```\n```\n\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25377","RelatedDescription":"Closed issue \"🐛 Upgrading to v16.1.0 gives me \"Unknown version 114 of edge (While processing: \"base$0$0\")\"\" (#25377)"},{"Id":"1756785996","IsPullRequest":false,"CreatedAt":"2023-06-14T12:48:11","Actor":"szape89","Number":"25380","RawContent":null,"Title":"serve proxy configuration incorrect path / target URL match","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen running `ng serve`, it seems that the `/` character is not taken into consideration in the proxy configuration file.\r\nA request to `/somethingelse/whatever` matches `/something/*`, which does not feel right, it acts like it should for `/something*` (without the `/` character at the end).\r\nThis feels like a bug, but if there is a reasonable explanation, please elaborate.\r\n\r\n### Minimal Reproduction\r\n\r\nproxy.conf.json\r\n\r\n```\r\n{\r\n  \"/something/*\": {\r\n    \"target\": \"http://localhost:1234\"\r\n  },\r\n  \"/somethingelse/*\": {\r\n    \"target\": \"http://localhost:5678\"\r\n  }\r\n}\r\n```\r\n\r\nng serve logs\r\n\r\n```\r\n[webpack-dev-server] [HPM] GET /something/whatever -> http://localhost:1234\r\n[webpack-dev-server] [HPM] GET /somethingelse/whatever -> http://localhost:1234\r\n```\r\n\r\nproxy.conf.json\r\n\r\n```\r\n{\r\n  \"/somethingelse/*\": {\r\n    \"target\": \"http://localhost:5678\"\r\n  },\r\n  \"/something/*\": {\r\n    \"target\": \"http://localhost:1234\"\r\n  }\r\n}\r\n```\r\n\r\nng serve logs\r\n\r\n```\r\n[webpack-dev-server] [HPM] GET /something/whatever -> http://localhost:1234\r\n[webpack-dev-server] [HPM] GET /somethingelse/whatever -> http://localhost:5678\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.8\r\nNode: 18.14.2\r\nPackage Manager: npm 9.5.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.8\r\n@angular-devkit/build-angular   15.2.8\r\n@angular-devkit/core            15.2.8\r\n@angular-devkit/schematics      15.2.8\r\n@angular/cli                    15.2.8\r\n@schematics/angular             15.2.8\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25380","RelatedDescription":"Closed issue \"serve proxy configuration incorrect path / target URL match\" (#25380)"},{"Id":"1756269753","IsPullRequest":true,"CreatedAt":"2023-06-14T07:44:07","Actor":"aanchal88","Number":"25378","RawContent":null,"Title":"refactor: add the parameter input implicity with type any","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25378","RelatedDescription":"Open PR \"refactor: add the parameter input implicity with type any\" (#25378)"},{"Id":"1755341262","IsPullRequest":true,"CreatedAt":"2023-06-13T17:18:58","Actor":"dgp1130","Number":"25376","RawContent":null,"Title":"docs: release notes for the v16.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25376","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.1.0 release\" (#25376)"},{"Id":"1755311927","IsPullRequest":true,"CreatedAt":"2023-06-13T17:14:39","Actor":"dgp1130","Number":"25375","RawContent":null,"Title":"Bump version to \"v16.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25375","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.1.0\" with changelog.\" (#25375)"},{"Id":"1755282939","IsPullRequest":true,"CreatedAt":"2023-06-13T16:48:28","Actor":"dgp1130","Number":"25374","RawContent":null,"Title":"build: bump versions for minor release","State":"closed","Body":"(cherry picked from commit d4a2849010f5151bf7ad2bd390d1ec0a8b26a0f5)\r\n\r\nManual cherry pick of https://github.com/angular/angular-cli/pull/25373 because I accidentally targeted `minor` instead of `rc`.","Url":"https://github.com/angular/angular-cli/pull/25374","RelatedDescription":"Closed or merged PR \"build: bump versions for minor release\" (#25374)"},{"Id":"1755219585","IsPullRequest":true,"CreatedAt":"2023-06-13T16:22:39","Actor":"dgp1130","Number":"25373","RawContent":null,"Title":"build: bump versions for minor release","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25373","RelatedDescription":"Closed or merged PR \"build: bump versions for minor release\" (#25373)"},{"Id":"1755193869","IsPullRequest":true,"CreatedAt":"2023-06-13T15:48:39","Actor":"dgp1130","Number":"25372","RawContent":null,"Title":"docs: release notes for the v16.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25372","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.0.6 release\" (#25372)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1763551173","IsPullRequest":false,"CreatedAt":"2023-06-19T13:28:35","Actor":"bradws","Number":"27329","RawContent":null,"Title":"bug(Table Schematic Code): Build warning error in the 'table' schematic code","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen creating a fresh Angular v16.1.0 project, then adding Angular Material to the project, and finally adding the 'table' schematic to produce an example component, the component produces an Angular build warning error in line 20 of the html template stating that the '?.' operator can be replaced with the '.' operator.\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [Build Warning Error](https://stackblitz.com/edit/stackblitz-starters-barqkq?file=src%2Fmy-table%2Fmy-table.component.html)\r\nSteps to reproduce:\r\n1. Create a fresh Angular v16.1.0 project:\r\n>ng new angular-material-ex2 --standalone\r\n2. Change directory:\r\n>cd angular-material-ex2/src/app\r\n3. Add Angular Material:\r\n>ng add @angular/material\r\n4. Generate the 'table' schematic:\r\n>ng g @angular/material:table MyTable\r\n5. Modify code to accept the newly-created MyTable\r\n  5.1 In app.component.ts file, change code line from:\r\n    imports: [CommonModule],\r\n    ..to..\r\n    imports: [CommonModule, MyTableComponent],\r\n  5.2 In app.component.ts file, after the code line:\r\n    import { CommonModule } from '@angular/common';\r\n    ..put an additional code line..\r\n    import { MyTableComponent } from './my-table/my-table.component';\r\n6. Build the project:\r\n>ng run build\r\n7. You will be presented with the Angular build warning error:\r\n\"Warning: src/app/my-table/my-table.component.html:20:29 - warning NG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be replaced with the '.' operator.\"\r\n**Note**: _The Stackblitz code sample should show the error_\r\n8. To fix, just remove the two Optional Chaining operators; i.e. the two question marks\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo Build warning error will appear.\r\n\r\n### Actual Behavior\r\n\r\nCode will compile with out any errors.\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.0\r\n- CDK/Material: 16.1.1 / 16.1.1\r\n- Browser(s): Any (Firefox & Chrome)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27329","RelatedDescription":"Open issue \"bug(Table Schematic Code): Build warning error in the 'table' schematic code\" (#27329)"},{"Id":"1763459460","IsPullRequest":false,"CreatedAt":"2023-06-19T12:39:49","Actor":"dkimmich-onventis","Number":"27328","RawContent":null,"Title":"bug(snack-bar): action button color not changeable","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nI have a snack bar with a custom component. In this component I have a custom action button. I want this button to be in the primary color, so I set the `color` attribute of the button to `\"primary\"`:\r\n\r\n```\r\n<button mat-button color=\"primary\" matSnackBarAction>\r\n  My custom action\r\n</button>\r\n```\r\n\r\nBefore MDC, the `color` attribute was respected, and the button changed its color accordingly. After MDC migration, the button stays in the accent color regardless of what `color` is set.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/kbv7nf\r\n\r\nSteps to reproduce:\r\n1. Create a custom snack bar component / template\r\n2. Add an action button to the custom snack bar\r\n3. Set the `color` of the action button to `\"primary\"`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe button is displayed in the primary color\r\n\r\n### Actual Behavior\r\n\r\nThe button is displayed in the accent color\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n\r\n### Further notes\r\n\r\nI investigated the issue a bit, and it seems like using the `matSnackBarAction` directive overrides the color of the button. Omitting this directive fixes the issue, however the [docs](https://material.angular.io/components/snack-bar/api#MatSnackBarAction) state that this directive should be used.\r\n","Url":"https://github.com/angular/components/issues/27328","RelatedDescription":"Open issue \"bug(snack-bar): action button color not changeable\" (#27328)"},{"Id":"1763359271","IsPullRequest":false,"CreatedAt":"2023-06-19T12:33:00","Actor":"JoranLive","Number":"27327","RawContent":null,"Title":"feat(COMPONENT): Customize component size","State":"closed","Body":"### Feature Description\n\nHello,\r\n\r\nWe usually needs to customize the size of angular material components.\r\n\r\nEspecially, mat form fields & buttons.\r\n\r\nFrom what I know, there isn't any elegant way to customize the default size of Angular components.\r\nUsually, we have to play with the deprecated \"::ngdeep\".\r\nWorking at class levels can also make our application incompatible with future versions.\r\n\r\nCould it be good to adapt all the components size according to the font-size of the parent ?\r\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27327","RelatedDescription":"Closed issue \"feat(COMPONENT): Customize component size\" (#27327)"},{"Id":"1762994944","IsPullRequest":false,"CreatedAt":"2023-06-19T08:10:46","Actor":"rcb98","Number":"27326","RawContent":null,"Title":"feat(theming): roadmap for the theming API","State":"open","Body":"Since a new token-based theming API is on the works, we would like to get some insight as to what exactly we will be getting on future versions of Angular Material, perhaps in the form of a roadmap.\r\n\r\nFor instance, Material 3 support [Shapes](https://m3.material.io/styles/shape/overview), offering full range of roundedness for components, which would be very useful, but when can we expect to be able to use all of these features?","Url":"https://github.com/angular/components/issues/27326","RelatedDescription":"Open issue \"feat(theming): roadmap for the theming API\" (#27326)"},{"Id":"1762886222","IsPullRequest":true,"CreatedAt":"2023-06-19T07:02:28","Actor":"crisbeto","Number":"27325","RawContent":null,"Title":"refactor(material/paginator): switch to tokens API","State":"open","Body":"Reworks the paginator use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27325","RelatedDescription":"Open PR \"refactor(material/paginator): switch to tokens API\" (#27325)"},{"Id":"1762151074","IsPullRequest":true,"CreatedAt":"2023-06-18T21:44:12","Actor":"crisbeto","Number":"27323","RawContent":null,"Title":"refactor(material/select): rename some tokens for more clarity","State":"closed","Body":"Renames some of the `mat-select` tokens to make it clearer what they're referring to.","Url":"https://github.com/angular/components/pull/27323","RelatedDescription":"Closed or merged PR \"refactor(material/select): rename some tokens for more clarity\" (#27323)"},{"Id":"1762317822","IsPullRequest":true,"CreatedAt":"2023-06-18T19:49:29","Actor":"SaishNarvekar","Number":"27324","RawContent":null,"Title":"docs(material/theming): add missing theme variable to theming guide docs","State":"closed","Body":"Fixes missing $theme variable in [Reading color values](https://material.angular.io/guide/theming-your-components#reading-color-values) in [Theme your own components](https://material.angular.io/guide/theming-your-components)\r\n\r\nFixes https://github.com/angular/components/issues/24405","Url":"https://github.com/angular/components/pull/27324","RelatedDescription":"Closed or merged PR \"docs(material/theming): add missing theme variable to theming guide docs\" (#27324)"},{"Id":"1761684333","IsPullRequest":true,"CreatedAt":"2023-06-18T17:57:50","Actor":"crisbeto","Number":"27319","RawContent":null,"Title":"test(cdk/testing): attempt to deflake webdriver tests","State":"closed","Body":"The Selenium Webdriver tests for harnesses have been flaky for a while now, because the click coordinates haven't been consistent across test runs. My theory is that it's due to the page being scrolled down on some of them.\r\n\r\nThese changes attempt to reduce the flakes by making the clicked element fixed.","Url":"https://github.com/angular/components/pull/27319","RelatedDescription":"Closed or merged PR \"test(cdk/testing): attempt to deflake webdriver tests\" (#27319)"},{"Id":"1762083441","IsPullRequest":false,"CreatedAt":"2023-06-18T02:43:10","Actor":"robmv","Number":"27322","RawContent":null,"Title":"bug(datepicker): Date range picker emit repeated events after the first date is selected","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a date range picker is opened and the start date is selected, two consecutive `valueChanges` event are triggered, and after the end date is selected the final event is triggered, in total 3 events happens instead of only two.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/shrtut?\r\nSteps to reproduce:\r\n1. Click on the `mat-datepicker-toggle` button.\r\n2. Select a start date like: 6/18/2023\r\n3. Notice on the _Changes_ section below that two events were triggered.\r\n4. Select the end date: 6/24/2023.\r\n5. A final event in logged on the _Changes_ section.\r\n\n\n### Expected Behavior\n\nAfter selecting the first date only a single `valueChanges` event should be triggered.\r\n\r\nThe expected behavior is show on the _Workaround Changes_ section where a `debounceTime(0)` is forced in order to remove the spurious repeated event.\n\n### Actual Behavior\n\nTwo events are triggered after selecting the start date\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Firefox, Chrome.\r\n- Operating System: Linux (Fedora)\r\n","Url":"https://github.com/angular/components/issues/27322","RelatedDescription":"Open issue \"bug(datepicker): Date range picker emit repeated events after the first date is selected\" (#27322)"},{"Id":"1762064791","IsPullRequest":false,"CreatedAt":"2023-06-18T01:11:02","Actor":"CrowhopTech","Number":"27321","RawContent":null,"Title":"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle","State":"open","Body":"### Feature Description\n\nWith newer updates of Angular Material, the Material Slider now has a checkmark when activated, and a minus sign when deactivated. This is good for \"activate/deactivate\" cases, but makes it less useful for cases where I just want a toggle when neither is the \"active\" one.\r\n\r\nMy preferred fix would be a boolean (true by default) to show/hide the icons. If false, it would make it into a simple slide toggle, with no checkmark or minus sign, though the colors would still change.\n\n### Use Case\n\nIn my case, I was using this toggle to indicate \"match any/match all\". While the new slide toggle still technically works for this, it would be more appealing without implying one is the \"active\" choice.","Url":"https://github.com/angular/components/issues/27321","RelatedDescription":"Open issue \"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle\" (#27321)"},{"Id":"1761702917","IsPullRequest":true,"CreatedAt":"2023-06-17T11:28:31","Actor":"crisbeto","Number":"27320","RawContent":null,"Title":"build: fix out of sync file","State":"closed","Body":"Fixes that the select.scss is out of sync with g3.","Url":"https://github.com/angular/components/pull/27320","RelatedDescription":"Closed or merged PR \"build: fix out of sync file\" (#27320)"},{"Id":"1761349985","IsPullRequest":false,"CreatedAt":"2023-06-16T21:07:52","Actor":"DJayFreshBlock","Number":"27318","RawContent":null,"Title":"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n6\r\n\r\n### Description\r\n\r\nExpansion panels currently render with a flash of content when nested in MatStepper -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\nReported fixed by #13870 \r\nHowever this is just when opened in a dialog without any other nesting\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://angular-issue13870-stepper-dialog.stackblitz.io](https://angular-issue13870-stepper-dialog.stackblitz.io)\r\nSteps to reproduce:\r\n1. Create a MatStepper component to contain an expansion panel\r\n3. Add a MatExpansionPanel\r\n4. Set [expanded]=\"false\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nMatExpansionPanels currently render with a flash of content when nested -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\n### Actual Behavior\r\n\r\nMatExpansionPanels should appear as collapsed when the dialog opens when `expanded=false` instead of briefly appearing as expanded, then collapsing after a delay.\r\n\r\n### Environment\r\n\r\n- Angular: 14.2\r\n- CDK/Material: 14.2\r\n- Browser(s): Chrome\r\n- Operating System : Windows\r\n\r\n","Url":"https://github.com/angular/components/issues/27318","RelatedDescription":"Open issue \"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]\" (#27318)"},{"Id":"1758173483","IsPullRequest":true,"CreatedAt":"2023-06-16T20:47:31","Actor":"crisbeto","Number":"27310","RawContent":null,"Title":"refactor(material/select): switch to tokens API","State":"closed","Body":"Reworks the select to use the new tokens-based theming API.","Url":"https://github.com/angular/components/pull/27310","RelatedDescription":"Closed or merged PR \"refactor(material/select): switch to tokens API\" (#27310)"},{"Id":"1761293746","IsPullRequest":true,"CreatedAt":"2023-06-16T20:32:55","Actor":"zarend","Number":"27317","RawContent":null,"Title":"fix(material/chips): remove button role from editable chips","State":"open","Body":"Removes the button role from editable input chips. Fix accessibility issue in ChipRow where the chip action element is mislabeled as a button (#27106).\r\n\r\nFix #27106","Url":"https://github.com/angular/components/pull/27317","RelatedDescription":"Open PR \"fix(material/chips): remove button role from editable chips\" (#27317)"},{"Id":"1757273699","IsPullRequest":true,"CreatedAt":"2023-06-16T20:26:02","Actor":"wagnermaciel","Number":"27302","RawContent":null,"Title":"fix(material/slider): fix voiceover on ios","State":"closed","Body":"* fixes issue #15037","Url":"https://github.com/angular/components/pull/27302","RelatedDescription":"Closed or merged PR \"fix(material/slider): fix voiceover on ios\" (#27302)"},{"Id":"1760746801","IsPullRequest":false,"CreatedAt":"2023-06-16T14:24:14","Actor":"jbgtmartin","Number":"27316","RawContent":null,"Title":"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIn iOS Safari, when the [step] input is used, the slider can not be dragged from outside of the thumb. It means that if I start dragging on the slider track for instance, but not on the slider thumb itself, the thumb's ripple will show, but the thumb won't move to my finger's location.\r\n\r\nIf I remove the [step] input, the thumb is behaving correctly.\r\n\r\nI didn't have this issue with the legacy implementation.\r\n\r\nIt can be measleading, because if the user drags a little outside the \"drag target\", the ripple will show as if the interaction was working, but the thumb will not move.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-bf7qpd?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the stackblitz on iOS. You can also see it on Angular's website in the [first example](https://material.angular.io/components/slider/examples), by switching between 0 and non-0 step value.\r\n2. Start dragging on the track, not on the thumb itself\r\n\n\n### Expected Behavior\n\nThe thumb should move to the finger's location, and then follow the finger.\n\n### Actual Behavior\n\nThe thumb's ripple shows, but the thumb does not move.\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Safari on iOS\r\n- Operating System (e.g. Windows, macOS, Ubuntu): iOS 16.3.1, iPad OS 16.2, iPad OS 15.6\r\n","Url":"https://github.com/angular/components/issues/27316","RelatedDescription":"Open issue \"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS\" (#27316)"},{"Id":"1760047954","IsPullRequest":true,"CreatedAt":"2023-06-16T11:24:04","Actor":"crisbeto","Number":"27315","RawContent":null,"Title":"fix(cdk/a11y): don't emit blurred events on the server","State":"closed","Body":"The `FocusMonitor` is set up to emit `null` when an element is blurred and we have some components that depend on that value to mark themselves as touched. However, it's also set up to return an rxjs observale `of(null)` on the server which means that it'll emit and complete immediately. This is problematic, because it can mark components as touched even though they haven't been.\r\n\r\nThese changes remove the parameter from `of()` so it never emits.\r\n\r\nFixes #27234.","Url":"https://github.com/angular/components/pull/27315","RelatedDescription":"Closed or merged PR \"fix(cdk/a11y): don't emit blurred events on the server\" (#27315)"},{"Id":"1759206737","IsPullRequest":true,"CreatedAt":"2023-06-15T17:36:45","Actor":"devversion","Number":"27314","RawContent":null,"Title":"build: speed up RBE by allowing more concurrent jobs","State":"closed","Body":"Bazel detects maximum number of jobs based on host resources. Since we run remotely, we can increase this number significantly.","Url":"https://github.com/angular/components/pull/27314","RelatedDescription":"Closed or merged PR \"build: speed up RBE by allowing more concurrent jobs\" (#27314)"},{"Id":"1758377423","IsPullRequest":false,"CreatedAt":"2023-06-15T17:14:51","Actor":"GarfieldDeepClone","Number":"27312","RawContent":null,"Title":"Button inside Datepicker has mdc* classes though I'm using legacy","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi\r\n\r\nFirst, I wanted to open a discussion and not a bug because I'm not sure if I'm doing something wrong.\r\n\r\nI upgraded from Angular 14 to 15 and also updated Material with this command:\r\nng update @angular/material@15\r\n\r\nI'd like to use all the legacy stuff and migrate at a later point.\r\nAll material components look like before except the datepicker.\r\n\r\nI'm using the datepicker like:\r\n`<mat-form-field appearance=\"legacy\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tmatInput\r\n\t\t\t\t[formControl]=\"datepickerInputControl\"\r\n\t\t\t\t[matDatepicker]=\"datePicker\"\r\n\t\t\t\t[min]=\"dateRange.start\"\r\n\t\t\t\t[max]=\"dateRange.end\"\r\n\t\t\t\t(dateChange)=\"onDateChange()\"\r\n\t\t\t/>\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #datePicker></mat-datepicker>\r\n\t\t</mat-form-field>`\r\n\r\nWe styled the datepicker on our own and after the material update it looks different than before.\r\nI noticed that the button inside the datepicker for selecting a period has some additional classes (the mdc* ones) which destroys our styling.\r\n\r\n`<button mat-button=\"\" type=\"button\" aria-live=\"polite\" class=\"mat-calendar-period-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\"`\r\n\r\nmdc is the new styling right? So why is this added when I'm using legacy?\r\n\r\nSo I thought I'm not really using the legacy button and imported it explicitly in the module where this component is used:\r\n`import { MatLegacyButtonModule } from '@angular/material/legacy-button';\r\nimports: [\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatButtonModule,\r\n\t\tMatDatepickerModule,\r\n\t]`\r\n\r\nBut that didn't change anything. And I also noticed that there isn't a MatLegacyDatepickerModule?\r\n\r\nSo what I'm doing wrong?\r\n\r\n\r\n### Expected Behavior\r\n\r\nButton without mdc classes\r\n\r\n### Actual Behavior\r\n\r\nbutton with mdc classes\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.2.8\r\nNode: 16.18.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.8\r\n@angular-devkit/build-angular   15.2.8\r\n@angular-devkit/core            15.2.8\r\n@angular-devkit/schematics      15.2.8\r\n@angular/cli                    15.2.8\r\n@schematics/angular             15.2.8\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\nwebpack                         5.75.0\r\n\r\n\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27312","RelatedDescription":"Closed issue \"Button inside Datepicker has mdc* classes though I'm using legacy\" (#27312)"},{"Id":"1758377272","IsPullRequest":false,"CreatedAt":"2023-06-15T17:06:05","Actor":"SebastianRzk","Number":"27311","RawContent":null,"Title":"bug(MatSelect): Translated (Transloco) Mat select does not show text without interaction when transloco string is the only non-whitepace character","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nI don't know, I am using transloco the first time and with nx-translate I experienced no inconvenience. \r\n\r\n### Description\r\n\r\nWhen my option text contains only a translated string (with transloco), the initial value selection is not presented\r\n\r\nExample code:\r\n\r\n```html\r\n<mat-form-field>\r\n    <mat-label>nach Erfolg</mat-label>\r\n    <mat-select value=\"only-fehlerhaft\" (selectionChange)=\"onChange()\" [(value)]=\"selectedOption\">\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_FEHLERHAFT\">\r\n            {{\"some.cool.key.nurFehlerhaft\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_ERFOLGREICH\">{{\"some.cool.key.nurErfolgreich\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ALLE\">{{\"some.cool.key.alle\" | transloco}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n```\r\nResults in:\r\n![drowdown_broken](https://github.com/angular/components/assets/5215946/12f903bd-390f-439c-b350-57bd1c9e1f3e)\r\n\r\nWhen I put text / or a non-whitespace character (e.g. `&zwnj;` ) next to a translation-key, it works as expected:\r\n\r\n```html\r\n<mat-form-field>\r\n    <mat-label>nach Erfolg</mat-label>\r\n    <mat-select value=\"only-fehlerhaft\" (selectionChange)=\"onChange()\" [(value)]=\"selectedOption\">\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_FEHLERHAFT\">\r\n            &zwnj;{{\"some.cool.key.nurFehlerhaft\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_ERFOLGREICH\">{{\"some.cool.key.nurErfolgreich\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ALLE\">{{\"some.cool.key.alle\" | transloco}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n```\r\n![drowdown_workaround](https://github.com/angular/components/assets/5215946/0921e8a2-adeb-4be9-b1da-6fbba931165d)\r\n\r\n\r\nWhat I've already tried:\r\n\r\n* Calling ChangeDetectorRef manually -> Does not help\r\n* Change ChangeDetectionStrategy from OnPush to Default -> Does not help\r\n* Inserting cool whitespace char-hack -> works :D\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould show translated text.\r\n\r\n### Actual Behavior\r\n\r\nDoes not show the text. But there is a workaround. \r\n\r\n### Environment\r\n\r\n- Angular: 16.0.0\r\n- CDK/Material: 16.0.0\r\n- Transloco: 4.2.6\r\n- Browser(s): Firefox and Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27311","RelatedDescription":"Closed issue \"bug(MatSelect): Translated (Transloco) Mat select does not show text without interaction when transloco string is the only non-whitepace character\" (#27311)"},{"Id":"1757817290","IsPullRequest":false,"CreatedAt":"2023-06-15T16:42:38","Actor":"leonandroid","Number":"27308","RawContent":null,"Title":"bug(DatePicker): Not working with [(ngModel)] anymore","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n11.2.12\r\n\r\n### Description\r\n\r\nWhen using Angular Material Datepicker with model (using ngModel) the values are not set in the variable when the date is finally picked.\r\n\r\nUsing the code in the example, I added the ngModel:\r\n```\r\n\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"someDate\">\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n```\r\n\r\nThe someDate value will never have the value from the picker after it is chosen.\r\nThe same code works fine in previous versions of Angular Material.\r\n\r\nbtw, the workaround I came up is this:\r\nReplace `[(ngModel)]=\"someDate\"` with\r\n```\r\n[value]=\"someDate\"\r\n(dateChange)=\"someValue = $event. Value\"\r\n```\r\n\r\n### Reproduction\r\n\r\n\r\nSteps to reproduce:\r\n1. Create an example with the code provided, using datepicker\r\n2. Add a variable to bind it to ngModel\r\n3. Pick a date\r\n4. Inspect the variable\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe variable should have the value from the picker.\r\n\r\n### Actual Behavior\r\n\r\nThe variable is empty.\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chromium\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27308","RelatedDescription":"Closed issue \"bug(DatePicker): Not working with [(ngModel)] anymore\" (#27308)"},{"Id":"1758777471","IsPullRequest":false,"CreatedAt":"2023-06-15T12:59:39","Actor":"AntonEvseev","Number":"27313","RawContent":null,"Title":"bug(table): Table with sticky header 'jumping'","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen scrolling, a table with a sticky header \"jumps\" if you add an element that has a absolute position. For example, if you display the tooltip and scroll, then the sticky header will change position for a short time. \r\nThis is also true with the mat-progress-bar element.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Open [link](https://stackblitz.com/edit/gatzhq-oe6hfq?file=src%2Fexample%2Ftable-sticky-header-example.ts) \r\n2. The sticky header changes the position on scroll when there is another element on the page with absolute position\r\n\r\nhttps://github.com/angular/components/assets/16895663/bf5172c5-8cba-4a0b-b5da-89afab55d7ee\r\n\r\n\n\n### Expected Behavior\n\nThe sticky header should not change position on scroll when there is another element on the page with an absolute position\n\n### Actual Behavior\n\nThe sticky header changes the position on scroll when there is another element on the page with absolute position\n\n### Environment\n\n- Angular: v12, v15, v16\r\n- CDK/Material:  v12, v15, v16\r\n- Browser(s): **Chrome Version 114.0.5735.110 (Official Build) (64-bit)**\r\n- Operating System (e.g. Windows, macOS, Ubuntu): **Windows**\r\n","Url":"https://github.com/angular/components/issues/27313","RelatedDescription":"Open issue \"bug(table): Table with sticky header 'jumping'\" (#27313)"},{"Id":"1757843276","IsPullRequest":true,"CreatedAt":"2023-06-15T00:34:45","Actor":"mmalerba","Number":"27309","RawContent":null,"Title":"refactor(material-experimental/theming): condense matx.theme and matx.retheme into a single mixin","State":"open","Body":"Rather than having a separate mixin for \"retheming\" we have a single mixin `matx.theme` that can either emit fallback token defaults or not depending on how its configured. Added `matx.token-defaults` which can be used to configure the fallbacks.","Url":"https://github.com/angular/components/pull/27309","RelatedDescription":"Open PR \"refactor(material-experimental/theming): condense matx.theme and matx.retheme into a single mixin\" (#27309)"},{"Id":"1756882165","IsPullRequest":false,"CreatedAt":"2023-06-14T20:55:57","Actor":"iKrishnaSahu","Number":"27300","RawContent":null,"Title":"bug(menu): stackblitz is not working","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nstackblitz is not working\r\n\r\n\r\n```\r\n./src/theme.scss?ngGlobalStyle - Error: Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\r\nHookWebpackError: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):\r\nBrowserslistError: [BABEL] /home/projects/3rpzyc--run/node_modules/css-loader/dist/runtime/sourceMaps.js: Unknown version 114 of edge (While processing: \"base$0$0\")\r\n```\r\n\r\n<img width=\"946\" alt=\"image\" src=\"https://github.com/angular/components/assets/34937515/45d40ac5-22ac-46ae-851f-6f29c97f2758\">\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Visit https://material.angular.io/components/menu/examples\r\n2. Scorll to `Menu with icons` example (or else search for `Menu with icons`)\r\n3. Open the same example in stackblitz\r\n\n\n### Expected Behavior\n\nStackblitz server should work\n\n### Actual Behavior\n\nStackblitz server is not working\n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27300","RelatedDescription":"Closed issue \"bug(menu): stackblitz is not working\" (#27300)"},{"Id":"1757632188","IsPullRequest":true,"CreatedAt":"2023-06-14T20:54:43","Actor":"mmalerba","Number":"27307","RawContent":null,"Title":"docs: release notes for the v16.1.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27307","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.1.1 release\" (#27307)"},{"Id":"1757630165","IsPullRequest":true,"CreatedAt":"2023-06-14T20:51:29","Actor":"mmalerba","Number":"27306","RawContent":null,"Title":"Bump version to \"v16.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27306","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.1.1\" with changelog.\" (#27306)"},{"Id":"1757604394","IsPullRequest":true,"CreatedAt":"2023-06-14T20:34:23","Actor":"BobobUnicorn","Number":"27305","RawContent":null,"Title":"feat(cdk/tree): general bug fixes, error handling, updating examples & docs","State":"open","Body":"Follows #27285.","Url":"https://github.com/angular/components/pull/27305","RelatedDescription":"Open PR \"feat(cdk/tree): general bug fixes, error handling, updating examples & docs\" (#27305)"},{"Id":"1757479937","IsPullRequest":true,"CreatedAt":"2023-06-14T20:29:43","Actor":"mmalerba","Number":"27303","RawContent":null,"Title":"build: bump Angular version to 16.1.1","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27303","RelatedDescription":"Closed or merged PR \"build: bump Angular version to 16.1.1\" (#27303)"},{"Id":"1757498680","IsPullRequest":true,"CreatedAt":"2023-06-14T20:29:17","Actor":"mmalerba","Number":"27304","RawContent":null,"Title":"build: bump Angular version to 16.1.1","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27304","RelatedDescription":"Closed or merged PR \"build: bump Angular version to 16.1.1\" (#27304)"},{"Id":"1756991770","IsPullRequest":false,"CreatedAt":"2023-06-14T14:05:48","Actor":"iKrishnaSahu","Number":"27301","RawContent":null,"Title":"bug(menu): menu is triggering custom animation of a custom component used inside it ","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nbug(menu): menu is triggering custom animation of a custom component used inside it\r\n\r\nStackBlitz link - https://stackblitz.com/edit/8ve6wn?file=src%2Fapp%2Fmenu-icons-example.html\r\n\r\n![chrome-capture-2023-5-14](https://github.com/angular/components/assets/34937515/b0c0830b-004e-4ef3-a402-9aa70af86c6f)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Visit this stackblitz - https://stackblitz.com/edit/8ve6wn?file=src%2Fapp%2Fmenu-icons-example.html\r\n2. Once the UI loads, click on vertical ellipsis button\r\n3. Click outside the popup. For a fraction of section, you will see the animation of `demo-statusbar` has been triggered and content is visible\r\n4. Open the menu again and check extra content from `demo-statusbar` is visible\r\n\n\n### Expected Behavior\n\nClosing menu should not trigger any custom component's custom animation\n\n### Actual Behavior\n\nClosing menu is triggering custom component's custom animation\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27301","RelatedDescription":"Open issue \"bug(menu): menu is triggering custom animation of a custom component used inside it \" (#27301)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-20T03:30:02.9694114Z","RunDurationInMilliseconds":1875}