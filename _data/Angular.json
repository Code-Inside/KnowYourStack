{"Data":{"Angular-Issues":{"Issues":[{"Id":"2024761415","IsPullRequest":true,"CreatedAt":"2023-12-06T01:20:16","Actor":"JeanMeche","Number":"53353","RawContent":null,"Title":"refactor(devtools): run control flow migration.","State":"closed","Body":"Let's update the devtools with the latest improvements !\r\n\r\n","Url":"https://github.com/angular/angular/pull/53353","RelatedDescription":"Closed or merged PR \"refactor(devtools): run control flow migration.\" (#53353)"},{"Id":"2026450491","IsPullRequest":false,"CreatedAt":"2023-12-06T01:19:46","Actor":"mattlewis92","Number":"53361","RawContent":null,"Title":"Control flow schematic: ngIf with else condition template not migrated correctly","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSorry, it looks like I missed a few straggling issues! 😅 \r\n\r\nInput (`defaultTemplate` is assumed to be a template passed in via a component input):\r\n```\r\n<button *ngIf=\"active; else defaultTemplate\">Hello!</button> \r\n```\r\n\r\nOutput:\r\n```\r\n@if (active) {\r\n  <button>Hello!</button>\r\n} @else {\r\n  #defaultTemplate|\r\n}\r\n```\r\n\r\nExpected output:\r\n```\r\n@if (active) {\r\n  <button>Hello!</button>\r\n} @else {\r\n  <ng-template [ngTemplateOutlet]=\"defaultTemplate\"></ng-template>\r\n}\r\n\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5+sha-2d2eaec\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nThis is using the latest core-builds version via `\"@angular/core\": \"angular/core-builds#17.0.5+2d2eaec\",`","Url":"https://github.com/angular/angular/issues/53361","RelatedDescription":"Closed issue \"Control flow schematic: ngIf with else condition template not migrated correctly\" (#53361)"},{"Id":"2026453748","IsPullRequest":false,"CreatedAt":"2023-12-06T01:19:45","Actor":"mattlewis92","Number":"53362","RawContent":null,"Title":"Control flow schematic: nested ng-template + ngIf not migrated correctly","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nInput:\r\n```\r\n<ng-container *ngIf=\"!(condition$ | async); else template\">\r\n  Hello!\r\n</ng-container>\r\n\r\n<ng-template #bar>Bar</ng-template>\r\n\r\n<ng-template #foo>Foo</ng-template>\r\n\r\n<ng-template #template>\r\n  <ng-container\r\n    *ngIf=\"(foo$ | async) === true; then foo; else bar\"\r\n  ></ng-container>\r\n</ng-template>\r\n```\r\n\r\nOutput:\r\n```\r\n@if (!(condition$ | async)) {\r\n  Hello!\r\n} @else {\r\n  @if ((foo$ | async) === true) {\r\n    #foo|\r\n  } @else {\r\n    #bar|\r\n  }\r\n}\r\n<ng-template #foo>Foo</ng-template>\r\n<ng-template #template>\r\n  @if ((foo$ | async) === true) {\r\n    Foo\r\n  } @else {\r\n    Bar\r\n  }\r\n</ng-template>\r\n```\r\n\r\nExpected output:\r\n```\r\n@if (!(condition$ | async)) {\r\n  Hello!\r\n} @else {\r\n  @if ((foo$ | async) === true) {\r\n    Foo\r\n  } @else {\r\n    Bar\r\n  }\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5+sha-2d2eaec\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nThis is using the latest core-builds version via `\"@angular/core\": \"angular/core-builds#17.0.5+2d2eaec\",`","Url":"https://github.com/angular/angular/issues/53362","RelatedDescription":"Closed issue \"Control flow schematic: nested ng-template + ngIf not migrated correctly\" (#53362)"},{"Id":"2026835943","IsPullRequest":true,"CreatedAt":"2023-12-06T01:19:44","Actor":"jessicajaniuk","Number":"53368","RawContent":null,"Title":"fix(migrations): fixes control flow migration bugs with ng-template handling","State":"closed","Body":"This fixes two reported issues with ng-template handling in the control flow migration.\r\n\r\n1. ng-templates that have more templates nested inside not migrating properly\r\n2. references to templates that are not present in the given component, requiring conversion to a template outlet\r\n\r\nfixes: #53361\r\nfixes: #53362\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53368","RelatedDescription":"Closed or merged PR \"fix(migrations): fixes control flow migration bugs with ng-template handling\" (#53368)"},{"Id":"2027447892","IsPullRequest":true,"CreatedAt":"2023-12-06T01:16:38","Actor":"dylhunn","Number":"53376","RawContent":null,"Title":"Template Pipeline: i18n refactoring and blocks support","State":"open","Body":"See individual commits for details.","Url":"https://github.com/angular/angular/pull/53376","RelatedDescription":"Open PR \"Template Pipeline: i18n refactoring and blocks support\" (#53376)"},{"Id":"2027270954","IsPullRequest":true,"CreatedAt":"2023-12-05T22:52:21","Actor":"santoshyadavdev","Number":"53375","RawContent":null,"Title":"docs: add link for control flow migration","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: fixes #53147\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53375","RelatedDescription":"Open PR \"docs: add link for control flow migration\" (#53375)"},{"Id":"2027186243","IsPullRequest":false,"CreatedAt":"2023-12-05T22:03:37","Actor":"raylablue","Number":"53373","RawContent":null,"Title":"Tutorial link - 404 page","State":"closed","Body":"### Describe the problem that you experienced\n\nOn the Angular getting started tutorial \r\n[angular.dev/tutorials/learn-angular/updating-the-component-class](https://angular.dev/tutorials/learn-angular/updating-the-component-class) \r\nthere is a link to Type inference in TypeScript that has the address of [angular.dev/typescript.org/type-inference]( https://angular.dev/typescript.org/type-inference) but only displays a page not found. \n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/typescript.org/type-inference\n\n### Describe what you were looking for in the documentation\n\nI was looking for information about type inference\n\n### Describe the actions that led you to experience the problem\n\nclicking the link to open in a new tab, or copy/pasting the link in a new tab, or opening in the same tab. \n\n### Describe what you want to experience that would fix the problem\n\nIdeal experience would be for the page to be found. \n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53373","RelatedDescription":"Closed issue \"Tutorial link - 404 page\" (#53373)"},{"Id":"2027193800","IsPullRequest":true,"CreatedAt":"2023-12-05T21:57:24","Actor":"clydin","Number":"53374","RawContent":null,"Title":"refactor: reduce direct babel dependencies","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe `@babel/core` package provides the functionality of multiple other babel packages without the need to directly depend or import the other babel packages. Since the `@babel/core` package is already used and imported in the locations that previously used the other babel packages, an overall reduction in both imports and dependencies is possible. Six babel related packages were able to be removed from the root `package.json` and one (also present in the aforementioned six) was removed as a dependency from the `@angular/localize` package. Unfortunately, the functionality used from the `@babel/generator` package is not provided by `@babel/core` and is still present. Further refactoring may allow its removal as well in the future.\r\n\r\nThe following packages were removed:\r\n* @babel/parser\r\n* @babel/template\r\n* @babel/traverse\r\n* @babel/types\r\n* @types/babel__template\r\n* @types/babel__traverse\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53374","RelatedDescription":"Open PR \"refactor: reduce direct babel dependencies\" (#53374)"},{"Id":"2027184168","IsPullRequest":true,"CreatedAt":"2023-12-05T21:51:01","Actor":"ducin","Number":"53372","RawContent":null,"Title":"refactor(devtools): filtering injector tree by token names","State":"open","Body":"Added 3 pieces of \"Injector Tree\" devtools tab:\r\n- \"clear selection\" button which draws initial graphs without highlighted edges and nodes, also closes the list of providers for a given injector\r\n- input \"filter injectors\" which will filter the injector tree showing only those injectors which include a certain name matching token\r\n- number of visible providers within an injector in parenthesis\r\n\r\nElement providers have been added for the sake of testing\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\n1. once an injector gets selected, it highlights the edges and nodes, but there's no way to clear the selection\r\n2. there's no way to see in which injectors a certain provider is\r\n\r\n## What is the new behavior?\r\n\r\n1. the selection clear has been added\r\n2. by typing the name of the provider, the displayed injector hierarchy trees get filtered - showing only the injectors which actually include them. **This way, if someone provides e.g. multiple providers of a certain type on element injectors - and loses track of them - they can easily find it where exactly they are now.**\r\n\r\n[DEMO available here](https://twitter.com/tomasz_ducin/status/1732155754751143982).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/53372","RelatedDescription":"Open PR \"refactor(devtools): filtering injector tree by token names\" (#53372)"},{"Id":"2027169946","IsPullRequest":true,"CreatedAt":"2023-12-05T21:41:25","Actor":"atscott","Number":"53371","RawContent":null,"Title":"refactor(core): Move code out of application_ref","State":"open","Body":"The application_ref is somewhat of a dumping ground for code. This commit moves things around into more appropriately separate files.\r\n","Url":"https://github.com/angular/angular/pull/53371","RelatedDescription":"Open PR \"refactor(core): Move code out of application_ref\" (#53371)"},{"Id":"2027162674","IsPullRequest":true,"CreatedAt":"2023-12-05T21:35:58","Actor":"atcastle","Number":"53370","RawContent":null,"Title":"fix(common): don't error on duplicate LCP image urls","State":"open","Body":"This PR fixes an error in how NgOptimizedImage's LCP image checker handles images with duplicate URLs. Previously, because the registered images are tracked by URL, a new image with the same URL would simply overwrite the entry for the previous one. This could cause false-positive error messages when the overwritten image had `priority` and the new one does not. \r\n\r\nThe fix simply disables the priority error when a duplicate image is encountered, and either one has priority. It also always disables the modified warning if a duplicate URL is encountered. This introduces a risk of false negatives, but only in very narrow edge cases. Particularly for the priority warning,  you would have to include duplicate copies of your LCP image, and put `priority` on only the wrong one of them in order to encounter a false negative. \r\n\r\nCC: @AndrewKushnir @kara \r\n\r\nCloses #53278 \r\n\r\n","Url":"https://github.com/angular/angular/pull/53370","RelatedDescription":"Open PR \"fix(common): don't error on duplicate LCP image urls\" (#53370)"},{"Id":"2026896398","IsPullRequest":false,"CreatedAt":"2023-12-05T18:46:58","Actor":"simpleman383","Number":"53369","RawContent":null,"Title":"Standalone injectors seem not to be completely isolated","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nActually, this is more like a Stackoverflow question. But I'd appreciate if someone could help me and shed some light on this topic 😅\r\n\r\nJust getting familiar with the concept of standalone components and now I'm a little curious about standalone injectors.\r\n\r\n[The official documentation](https://angular.io/guide/standalone-components#standalone-injectors) says that such injectors are created in order to isolate the providers imported by a standalone component from the rest of an application. Indeed, that sounds right to me - especially in terms of \"self-contained components\". \r\n\r\nHowever, It seems that different standalone injectors are not fully isolated from each other in some cases ([stackblitz](https://stackblitz.com/edit/stackblitz-starters-zgv74k)). \r\n\r\nIn the provided example the optional presense of providers at the routing configuration level deeply affects the entire tree of environment injectors.\r\n\r\n1. When you define the \"`providers`\" property in the routing config (even if you leave it empty), Angular creates the corresponding `EnvironmentInjector` for a router scope and the outcome hierarchy has the following shape. As we can see, `Standalone[_AppComponent]` and `Standalone[_ChildComponent]` injectors are completely isolated and cannot affect each other.\r\n\r\n![image](https://github.com/angular/angular/assets/17178718/a0c8c41e-78fd-420a-91fd-123ca6c3c0f2)\r\n(isolated injectors)\r\n\r\n2. However, if you don't define providers in the routing configuration, the hierarchy looks completely different. Now `Standalone[_AppComponent]` and `Standalone[_ChildComponent]` injectors are chained one by one and dependencies from `Standalone[_AppComponent]` are suddenly available inside the scope of `ChildComponent`. This looks like quite the opposite thing to what the official documentation initially states.\r\n\r\n![image](https://github.com/angular/angular/assets/17178718/93622ce5-aad9-4730-b6e5-34603a1b3e5c)\r\n(not isolated injectors)\r\n\r\n\r\nIs this correct behaviour? And if it was added intentionally - what was supposed to be achieved? \r\n\r\nI admit that I may be misunderstanding the concept of standalone injectors. But for me it looks like that some dependencies provided in parent standalone components might unexpectedly leak to its child component injector's scope. Please explain me if I'm wrong 😅 \r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-zgv74k\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.5\r\nNode: 20.10.0\r\nPackage Manager: yarn 1.22.21\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53369","RelatedDescription":"Open issue \"Standalone injectors seem not to be completely isolated\" (#53369)"},{"Id":"2026775682","IsPullRequest":false,"CreatedAt":"2023-12-05T18:24:24","Actor":"VishalPawar1010","Number":"53365","RawContent":null,"Title":"docs : (fix) Broken Markdown Link References in bootstrapping.md File","State":"closed","Body":"### Describe the problem that you experienced\n\nWhile going through documentation in adev :  https://github.com/angular/angular/blob/main/adev/src/content/guide/ngmodules/bootstrapping.md file. There are several broken Markdown Link References in files (e.g. Angular CLI, components, directives).\r\nAlso code snippets visualisation need to be updated.\n\n### Enter the URL of the topic with the problem\n\nhttps://github.com/angular/angular/blob/main/tools/cli does not points to Angular CLI readme file\n\n### Describe what you were looking for in the documentation\n\nLooking/navigating through reference markdown documents in folder: https://github.com/angular/angular/tree/main/adev/src/content/guide\n\n### Describe the actions that led you to experience the problem\n\nClick on any .md document references\n\n### Describe what you want to experience that would fix the problem\n\nPlease update all the broken references or add required file if it's not there. \n\n### Add a screenshot if that helps illustrate the problem\n\n![Screenshot from 2023-12-05 20-30-20](https://github.com/angular/angular/assets/118156462/857d0105-5804-451b-8277-c931ada50825)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n404 - page not found\r\nThe main branch of angular does not contain the path tools/cli.\r\n```\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nNA\n```\n\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53365","RelatedDescription":"Closed issue \"docs : (fix) Broken Markdown Link References in bootstrapping.md File\" (#53365)"},{"Id":"2026834682","IsPullRequest":false,"CreatedAt":"2023-12-05T18:23:53","Actor":"Alhajras","Number":"53367","RawContent":null,"Title":"Pressing the escape button in Angular makes the website hangs for two seconds","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI am using Angular 15 and PrimeNG, I have an application and one of the views uses two tables. One table contain 200 row and the other 10 rows. Each row has children components. \r\n\r\nThe website works fine but one user found a bug. When I press on escape, this is what I get: the next stack shown in the screenshot, and the site hangs for two seconds.\r\n\r\n![image](https://github.com/angular/angular/assets/36598060/70128f71-c014-46f2-849c-bac79b547da1)\r\n\r\n\r\nThe solution I tried and worked on was to listen to the escape button and stop the propagation of the event. However, this means I have to implement an extra service to handle the default escape behavior like Closing a dialog, closing an overlay, unfocusing an input button, and so on. THis handeling feels like an extra effort that I would be surprised I would have to do myself for somthing I feel a mistake I made.\r\n\r\nNote: changing the detection strategy did not work!\r\n\r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n[Violation] 'keydown' handler took 2577ms\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53367","RelatedDescription":"Closed issue \"Pressing the escape button in Angular makes the website hangs for two seconds\" (#53367)"},{"Id":"2026810055","IsPullRequest":true,"CreatedAt":"2023-12-05T18:02:07","Actor":"VishalPawar1010","Number":"53366","RawContent":null,"Title":"docs upgrade: Update readme reference docs","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n- update in documentation\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n- https://github.com/angular/angular/issues/53365\r\n\r\nIssue Number: #53365\r\n\r\n\r\n## What is the new behavior?\r\n- Fixed broken references to Markdown files - now references points to given files\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53366","RelatedDescription":"Closed or merged PR \"docs upgrade: Update readme reference docs\" (#53366)"},{"Id":"2026546975","IsPullRequest":false,"CreatedAt":"2023-12-05T16:01:31","Actor":"ChristianJSd","Number":"53364","RawContent":null,"Title":"misspelling","State":"open","Body":"### Describe the problem that you experienced\n\ndescription for router-outlet tag inaccurate\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/api/router/RouterOutlet#description\n\n### Describe what you were looking for in the documentation\n\nDescription\r\nEach outlet can have a unique name, determined by the optional name attribute. The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53364","RelatedDescription":"Open issue \"misspelling\" (#53364)"},{"Id":"2026510631","IsPullRequest":true,"CreatedAt":"2023-12-05T15:44:15","Actor":"clydin","Number":"53363","RawContent":null,"Title":"refactor(compiler): provide a private API to perform direct style encapsulation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nTo support the development of component specific HMR capabilities, the build/serve tooling may need to directly process styles to match the view encapsulation expectations of individual components. To allow for this scenario and to avoid tooling to need to re-implement the emulated encapsulation logic, an private API is now available in the `@angular/compiler` package named `encapsulateStyle` that converts a stylesheet content string to an encapsulated form. This function is not considered part of the public API nor does it have any of its respective support or versioning guarantees.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53363","RelatedDescription":"Open PR \"refactor(compiler): provide a private API to perform direct style encapsulation\" (#53363)"},{"Id":"2025765552","IsPullRequest":false,"CreatedAt":"2023-12-05T12:34:37","Actor":"FerdinandoCavaliere","Number":"53355","RawContent":null,"Title":" Please verify that the package.json has a valid \"main\" entry","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm new to development on Angular. If I try to follow the basic ng new example.... and ng serves... \r\n\r\nPlease verify that the package.json has a valid \"main\" entry\r\n\r\nSame thing for all downloaded examples\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular latest\r\nNode v21.2.0\r\nNpm v7.6.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53355","RelatedDescription":"Closed issue \" Please verify that the package.json has a valid \"main\" entry\" (#53355)"},{"Id":"2026061917","IsPullRequest":false,"CreatedAt":"2023-12-05T12:16:54","Actor":"pkozlowski-opensource","Number":"53360","RawContent":null,"Title":"Add failing CI safety checks to the release tooling","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCurrently the dev-infra releasing tooling allows us to release framework even if the CI build is red. This was noticed during the v17 major release that was published despite the legitimate failing build (see https://github.com/angular/angular/commit/fecd141dfa541eb3e1c62767820474265e9a2443 and the failing commit prior to the release: https://github.com/angular/angular/commit/6b83328577867783b242abf07b4edd5eb57ea58f).\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nLink to the failing job: https://github.com/angular/angular/actions/runs/6778078484/job/18481969411\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\nSuggest that the tooling should prevent and / or clearly warn about the failing build prior to releasing.","Url":"https://github.com/angular/angular/issues/53360","RelatedDescription":"Open issue \"Add failing CI safety checks to the release tooling\" (#53360)"},{"Id":"2026000549","IsPullRequest":true,"CreatedAt":"2023-12-05T11:42:29","Actor":"chintankavathia","Number":"53359","RawContent":null,"Title":"feat(core): add reflectDirectiveType method","State":"open","Body":"provide `reflectDirectiveType` similar to `reflectComponentType` to give subset of directive metadata.\r\n\r\ncloses #53112 \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nPlease see https://github.com/angular/angular/issues/53112 for the details\r\n\r\nIssue Number: 53112\r\n\r\n\r\n## What is the new behavior?\r\nprovides `reflectDirectiveType` to give subset of directive metadata\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53359","RelatedDescription":"Open PR \"feat(core): add reflectDirectiveType method\" (#53359)"},{"Id":"2025942907","IsPullRequest":false,"CreatedAt":"2023-12-05T11:14:24","Actor":"devversion","Number":"53358","RawContent":null,"Title":"Consider sharing partial output interfaces between linker and JIT","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nCurrently, there are three places where the structure of e.g. `declareDirective` is maintained:\r\n\r\n1. JIT compiler facade in core\r\n2. JIT compiler facade in compiler\r\n3. Semi-output AST interface in the `linker`.\r\n\r\nThe confusing part is that the interface in the linker only partially deals with the output AST, and uses literal types in some places. Overall, the interface seems pretty mixed and inconsistent and **also** there is **no type-safety** where the definitions map values are checked for type assignability. In practice the interface is only used for validating that certain keys are set in the definition map. For this, the JIT facade interfaces could also be used more effectively and safe.\r\n\r\nIt's unclear if we can do better, but right now- it seems like a lot of duplication for no benefit? (except for potentially documenting the emitted structure better)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\nRelated internal discussion:\r\nhttps://angular-team.slack.com/archives/C4WHZQMRA/p1701774881545059","Url":"https://github.com/angular/angular/issues/53358","RelatedDescription":"Open issue \"Consider sharing partial output interfaces between linker and JIT\" (#53358)"},{"Id":"2025906969","IsPullRequest":false,"CreatedAt":"2023-12-05T10:54:58","Actor":"liesahead","Number":"53357","RawContent":null,"Title":"Possibility to configure `Validators.required` behavior or new `Validators.strictlyRequired` validator","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\nCurrently `Validators.required` works so you can enter a `space` character and form would become valid. Therefore, we need to use a custom `required` validator\r\n```ts\r\npublic static required({ value }: AbstractControl): ValidationErrors | null {\r\n    return String(value ?? '').trim() ? null : { required: true };\r\n}\r\n```\r\n\r\nBut that is causing issues with material form fields, the `required` asterisks are not displayed near to the label because this check does not pass\r\n![image](https://github.com/angular/angular/assets/32300784/fe9aac08-ef3a-43c2-affb-cb28061125df)\r\n\r\n### Proposed solution\r\n\r\nCan you add an option to pass some boolean flag (ignore spaces or something) when initializing this validator or add some `strictlyRequired` validator in addition to avoid modifying existing one?\r\n\r\n### Alternatives considered\r\n\r\nCurrently we have to use this work-around simply to override `required` asterisks.\r\n```ts\r\npublic get hasRequiredValidator(): boolean {\r\n    return !!this.control.validator?.({} as AbstractControl)?.required;\r\n}\r\n```","Url":"https://github.com/angular/angular/issues/53357","RelatedDescription":"Open issue \"Possibility to configure `Validators.required` behavior or new `Validators.strictlyRequired` validator\" (#53357)"},{"Id":"2025854523","IsPullRequest":true,"CreatedAt":"2023-12-05T10:26:28","Actor":"yelhouti","Number":"53356","RawContent":null,"Title":"feat(service-worker): finish implementation of refreshAhead feature","State":"open","Body":"Copy and document the refreshAhead option that allows to refresh cache entries before they expire. This allows to mark cached entries as stale while still retruning them until maxAge in case of service outage.\r\n\r\nCloses #46729\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #46729 \r\n\r\n\r\n## What is the new behavior?\r\nrefreshAhead config is honored\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53356","RelatedDescription":"Open PR \"feat(service-worker): finish implementation of refreshAhead feature\" (#53356)"},{"Id":"2024582394","IsPullRequest":false,"CreatedAt":"2023-12-05T08:29:37","Actor":"ferhado","Number":"53352","RawContent":null,"Title":"Feature Request for New Control Flow Syntax: @include, @input in Angular Templates","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler-cli, compiler, core\n\n### Description\n\nThe new Control Flow in Angular enhances template management, but it lacks a direct way to include external HTML files with scope binding. An `@include` feature, like `@include('./example.html', item)`, would enable including 'example.html' in the template, using the local `item` variable.\r\n\n\n### Proposed solution\n\nIntroduce an `@include` directive in Angular:\r\n\r\n```html\r\n@include('./example.html', {item: someItem, item2: otherItem})\r\n```\r\n\r\nIn 'example.html', use an `@input(){}` block to bind to `item`:\r\n\r\n```html\r\n@input(item) {\r\n  <h1>{{ item.title }}</h1>\r\n  <p>{{ item.description}}</p>\r\n}\r\n\r\n@input(item2) {\r\n  <h1>{{ item2.title }}</h1>\r\n  <p>{{ item2.description}}</p>\r\n}\r\n```\r\n\r\nThis allows directly including HTML content with scope binding, without creating a full component.\n\n### Alternatives considered\n\nThe current method involves creating full components for reusable sections. This can be overkill for simple template parts, leading to unnecessary complexity.\r\n","Url":"https://github.com/angular/angular/issues/53352","RelatedDescription":"Closed issue \"Feature Request for New Control Flow Syntax: @include, @input in Angular Templates\" (#53352)"},{"Id":"2025173618","IsPullRequest":false,"CreatedAt":"2023-12-05T08:21:41","Actor":"trinhtuanvy","Number":"53354","RawContent":null,"Title":"Thank you so much","State":"closed","Body":"https://github.com/angular/angular/blob/acd6100960a17e5425f3895883bc91f1499ecb28/packages/compiler/src/template/pipeline/src/instruction.ts#L317-L321","Url":"https://github.com/angular/angular/issues/53354","RelatedDescription":"Closed issue \"Thank you so much\" (#53354)"},{"Id":"2024426725","IsPullRequest":true,"CreatedAt":"2023-12-05T05:41:50","Actor":"JoostK","Number":"53351","RawContent":null,"Title":"fix(core): cleanup signal consumers for all views","State":"closed","Body":"This commit fixes a memory leak where signal consumers would not be cleaned up for descendant views when a view is destroyed, because the cleanup logic was only invoked for the view that is itself being destroyed.\r\n","Url":"https://github.com/angular/angular/pull/53351","RelatedDescription":"Closed or merged PR \"fix(core): cleanup signal consumers for all views\" (#53351)"},{"Id":"2024113352","IsPullRequest":true,"CreatedAt":"2023-12-05T05:41:50","Actor":"jessicajaniuk","Number":"53350","RawContent":null,"Title":"fix(migrations): remove setting that removes comments in CF migration","State":"closed","Body":"This setting was added to prevent comment duplication, since the TS AST printer includes prior line comments as part of a given line with no way to really avoid that. However in component imports, it is not safe to remove comments as they could be load bearing for some.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53350","RelatedDescription":"Closed or merged PR \"fix(migrations): remove setting that removes comments in CF migration\" (#53350)"},{"Id":"2023771013","IsPullRequest":false,"CreatedAt":"2023-12-04T15:26:42","Actor":"brianreinhold","Number":"53349","RawContent":null,"Title":"Conflict between Server-Side-Events and Dialogs","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore, Don't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen receiving data from an SSE connection, and storing that data into an array, invoking a dialog to view that data is not only empty but possesses a height (very small) that is not that in the CSS (96vh). However, if the SSE is stopped and restarted, the data in the array received previously WILL be correctly visible in the dialog with the correct height. On the other hand, any new data received that is placed in the same array will, once again, be rendered empty with the wrong height.\r\n\r\nThus on the same page where I display the received data in a table, clicking on those table items received in the previous stream will bring up a dialog correctly rendered, but those received in the current stream will not.\r\n\r\nPrinting out the data that should be rendered in the dialog in a console.log() statement shows the data in all cases.\r\n\r\nA very interesting twist is if I attempt to invoke a toast message followed by the dialog, for the newly received data there is a delay of about 5-8 seconds and then the toast appears, disappears, and the dialog shows correctly. For the previously received data, both the toast message and the dialog appear immediately.\r\n\r\nI have no idea what is going on. The array is just a simple array of JSON strings defined in a service. There is no way to tell which of the elements are new and which are old (I actually load the newest at the start). So the only thing I can think of is the *ngFor loop in the html.\r\n\r\nOn each SSE reception a `ChangeDetectorRef.detectChanges()` is called so the *ngFor can update the display. The new data is displayed in a new table row where the first <td> element in the row contains a clickable icon that invokes the dialog. There has got to be something going on with the new rows added that somehow prevents the dialog from being correctly rendered.\r\n\r\nThis will be a very difficult bug to reproduce given it requires data coming from an SSE server. But perhaps you know of some underlying behavior of the EventSource in Angular that would lead to such a conflict. Maybe I am doing something that cannot be done in the Angular framework. The dialog is a CDK dialog and not raw html. Maybe I need to move to raw html to circumvent this problem.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nIt is a display error. \r\n\r\nWith previously received data, a dialog pops up on the screen displaying a FHIR Bundle as a formatted JSON string.\r\n\r\nWith newly received data, there is a dialog box that displays across the top of the screen (correct CSS width) but with a height of 37 pixels (CSS height is 96vh) and is empty.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.8\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.8\r\n@angular-devkit/build-angular   16.2.8\r\n@angular-devkit/core            16.2.8\r\n@angular-devkit/schematics      16.2.8\r\n@angular/cdk                    16.2.10\r\n@angular/cli                    16.2.8\r\n@angular/material               16.2.10\r\n@schematics/angular             16.2.8\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI have a stackoverflow issue submitted but I bet no one is going to have any idea of what is going on.\r\n\r\nhttps://stackoverflow.com/questions/77594696/dialog-text-not-showing-in-angular-16-during-an-sse-stream\r\n\r\n","Url":"https://github.com/angular/angular/issues/53349","RelatedDescription":"Closed issue \"Conflict between Server-Side-Events and Dialogs\" (#53349)"},{"Id":"2023707505","IsPullRequest":true,"CreatedAt":"2023-12-04T12:07:15","Actor":"dougmbarcellos","Number":"53348","RawContent":null,"Title":"docs(forms): fix typo in learn-angular/reactive-forms example","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n- Doc typo fix\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nIncorrect `templateUrl` in example.\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nCorrect `template` in example.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53348","RelatedDescription":"Open PR \"docs(forms): fix typo in learn-angular/reactive-forms example\" (#53348)"},{"Id":"2023686526","IsPullRequest":false,"CreatedAt":"2023-12-04T12:01:16","Actor":"alexandresebrao","Number":"53347","RawContent":null,"Title":"Angular v17 Vite not serving server.ts on development even when ssr: true","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI'm migrating from Webpack to Vite, but I got stucked with SSR and server.ts\r\n\r\nOn my angular.json i set this.\r\n\r\n ```\r\n\"development\": {\r\n              \"buildOptimizer\": false,\r\n              \"optimization\": false,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true,\r\n              \"ssr\": true,\r\n              \"namedChunks\": true\r\n            }\r\n```\r\n\r\nbut ng serve is not using server.ts as development so I can't make request to custom endpoints that I need to execute on my project, any help is really appreciated!\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53347","RelatedDescription":"Closed issue \"Angular v17 Vite not serving server.ts on development even when ssr: true\" (#53347)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2027420621","IsPullRequest":true,"CreatedAt":"2023-12-06T00:52:15","Actor":"clydin","Number":"26591","RawContent":null,"Title":"build: update dependency vite to v4.5.1","State":"open","Body":"17.0.x variant of #26590","Url":"https://github.com/angular/angular-cli/pull/26591","RelatedDescription":"Open PR \"build: update dependency vite to v4.5.1\" (#26591)"},{"Id":"2027392350","IsPullRequest":true,"CreatedAt":"2023-12-06T00:24:14","Actor":"angular-robot","Number":"26590","RawContent":null,"Title":"build: update dependency vite to v5.0.5 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | dependencies | patch | [`5.0.4` -> `5.0.5`](https://renovatebot.com/diffs/npm/vite/5.0.4/5.0.5) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | devDependencies | patch | [`5.0.4` -> `5.0.5`](https://renovatebot.com/diffs/npm/vite/5.0.4/5.0.5) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2023-49293](https://togithub.com/vitejs/vite/security/advisories/GHSA-92r3-m2mg-pj97)\n\n### Summary\nWhen Vite's HTML transformation is invoked manually via `server.transformIndexHtml`, the original request URL is passed in unmodified, and the `html` being transformed contains inline module scripts (`<script type=\"module\">...</script>`), it is possible to inject arbitrary HTML into the transformed output by supplying a malicious URL query string to `server.transformIndexHtml`.\n\n### Impact\nOnly apps using `appType: 'custom'` and using the default Vite HTML middleware are affected. The HTML entry must also contain an inline script. The attack requires a user to click on a malicious URL while running the dev server. Restricted files aren't exposed to the attacker.\n\n### Patches\nFixed in vite@5.0.5, vite@4.5.1, vite@4.4.12\n\n### Details\nSuppose `index.html` contains an inline module script:\n\n```html\n<script type=\"module\">\n  // Inline script\n</script>\n```\n\nThis script is transformed into a proxy script like\n\n```html\n<script type=\"module\" src=\"/index.html?html-proxy&index=0.js\"></script>\n```\n\ndue to Vite's HTML plugin:\n\nhttps://github.com/vitejs/vite/blob/7fd7c6cebfcad34ae7021ebee28f97b1f28ef3f3/packages/vite/src/node/plugins/html.ts#L429-L465\n\nWhen `appType: 'spa' | 'mpa'`, Vite serves HTML itself, and `htmlFallbackMiddleware` rewrites `req.url` to the canonical path of `index.html`,\n\nhttps://github.com/vitejs/vite/blob/73ef074b80fa7252e0c46a37a2c94ba8cba46504/packages/vite/src/node/server/middlewares/htmlFallback.ts#L44-L47\n\nso the `url` passed to `server.transformIndexHtml` is `/index.html`.\n\nHowever, if `appType: 'custom'`, HTML is served manually, and if `server.transformIndexHtml` is called with the unmodified request URL (as the SSR docs suggest), then the path of the transformed `html-proxy` script varies with the request URL. For example, a request with path `/` produces\n\n```html\n<script type=\"module\" src=\"/@&#8203;id/__x00__/index.html?html-proxy&index=0.js\"></script>\n```\n\nIt is possible to abuse this behavior by crafting a request URL to contain a malicious payload like\n\n```\n\"></script><script>alert('boom')</script>\n```\n\nso a request to http://localhost:5173/?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E produces HTML output like\n\n```html\n<script type=\"module\" src=\"/@&#8203;id/__x00__/?\"></script><script>alert(\"boom\")</script>?html-proxy&index=0.js\"></script>\n```\n\nwhich demonstrates XSS.\n\n### PoC\n\n- Example 1. Serving HTML from `vite dev` middleware with `appType: 'custom'`\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=dev-html\n    - \"Open in New Tab\"\n    - Edit URL to set query string to `?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E` and navigate\n    - Witness XSS:\n    - ![image](https://user-images.githubusercontent.com/2456381/287434281-13757894-7a63-4a73-b1e9-d2b024c19d14.png)\n- Example 2. Serving HTML from SSR-style Express server (Vite dev server runs in middleware mode):\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=server\n    - (Same steps as above)\n- Example 3. Plain `vite dev` (this shows that vanilla `vite dev` is _not_ vulnerable, provided `htmlFallbackMiddleware` is used)\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=dev\n    - (Same steps as above)\n    - You should _not_ see the alert box in this case\n\n### Detailed Impact\n\nThis will probably predominantly affect [development-mode SSR](https://vitejs.dev/guide/ssr#setting-up-the-dev-server), where `vite.transformHtml` is called using the original `req.url`, per the docs:\n\nhttps://github.com/vitejs/vite/blob/7fd7c6cebfcad34ae7021ebee28f97b1f28ef3f3/docs/guide/ssr.md?plain=1#L114-L126\n\nHowever, since this vulnerability affects `server.transformIndexHtml`, the scope of impact may be higher to also include other ad-hoc calls to `server.transformIndexHtml` from outside of Vite's own codebase.\n\nMy best guess at bisecting which versions are vulnerable involves the following test script\n\n```js\nimport fs from 'node:fs/promises';\nimport * as vite from 'vite';\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n  </head>\n  <body>\n    <script type=\"module\">\n      // Inline script\n    </script>\n  </body>\n</html>\n`;\nconst server = await vite.createServer({ appType: 'custom' });\nconst transformed = await server.transformIndexHtml('/?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E', html);\nconsole.log(transformed);\nawait server.close();\n```\n\nand using it I was able to narrow down to #&#8203;13581. If this is correct, then vulnerable Vite versions are 4.4.0-beta.2 and higher (which includes 4.4.0).\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.5`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small505-2023-12-04-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.4...v5.0.5)\n\n-   fix: emit `vite:preloadError` for chunks without deps ([#&#8203;15203](https://togithub.com/vitejs/vite/issues/15203)) ([d8001c5](https://togithub.com/vitejs/vite/commit/d8001c5)), closes [#&#8203;15203](https://togithub.com/vitejs/vite/issues/15203)\n-   fix: esbuild glob import resolve error ([#&#8203;15140](https://togithub.com/vitejs/vite/issues/15140)) ([676804d](https://togithub.com/vitejs/vite/commit/676804d)), closes [#&#8203;15140](https://togithub.com/vitejs/vite/issues/15140)\n-   fix: json error with position ([#&#8203;15225](https://togithub.com/vitejs/vite/issues/15225)) ([14be75f](https://togithub.com/vitejs/vite/commit/14be75f)), closes [#&#8203;15225](https://togithub.com/vitejs/vite/issues/15225)\n-   fix: proxy html path should be encoded ([#&#8203;15223](https://togithub.com/vitejs/vite/issues/15223)) ([5b85040](https://togithub.com/vitejs/vite/commit/5b85040)), closes [#&#8203;15223](https://togithub.com/vitejs/vite/issues/15223)\n-   fix(deps): update all non-major dependencies ([#&#8203;15233](https://togithub.com/vitejs/vite/issues/15233)) ([ad3adda](https://togithub.com/vitejs/vite/commit/ad3adda)), closes [#&#8203;15233](https://togithub.com/vitejs/vite/issues/15233)\n-   fix(hmr): don't consider CSS dep as a circular dep ([#&#8203;15229](https://togithub.com/vitejs/vite/issues/15229)) ([5f2cdec](https://togithub.com/vitejs/vite/commit/5f2cdec)), closes [#&#8203;15229](https://togithub.com/vitejs/vite/issues/15229)\n-   feat: add '\\*.mov' to client.d.ts ([#&#8203;15189](https://togithub.com/vitejs/vite/issues/15189)) ([d93a211](https://togithub.com/vitejs/vite/commit/d93a211)), closes [#&#8203;15189](https://togithub.com/vitejs/vite/issues/15189)\n-   feat(server): allow disabling built-in shortcuts ([#&#8203;15218](https://togithub.com/vitejs/vite/issues/15218)) ([7fd7c6c](https://togithub.com/vitejs/vite/commit/7fd7c6c)), closes [#&#8203;15218](https://togithub.com/vitejs/vite/issues/15218)\n-   chore: replace 'some' with 'includes' in resolveEnvPrefix ([#&#8203;15220](https://togithub.com/vitejs/vite/issues/15220)) ([ee12f30](https://togithub.com/vitejs/vite/commit/ee12f30)), closes [#&#8203;15220](https://togithub.com/vitejs/vite/issues/15220)\n-   chore: update the website url for homepage in package.json ([#&#8203;15181](https://togithub.com/vitejs/vite/issues/15181)) ([282bd8f](https://togithub.com/vitejs/vite/commit/282bd8f)), closes [#&#8203;15181](https://togithub.com/vitejs/vite/issues/15181)\n-   chore: update vitest to 1.0.0-beta.6 ([#&#8203;15194](https://togithub.com/vitejs/vite/issues/15194)) ([2fce647](https://togithub.com/vitejs/vite/commit/2fce647)), closes [#&#8203;15194](https://togithub.com/vitejs/vite/issues/15194)\n-   refactor: make HMR agnostic to environment ([#&#8203;15179](https://togithub.com/vitejs/vite/issues/15179)) ([0571b7c](https://togithub.com/vitejs/vite/commit/0571b7c)), closes [#&#8203;15179](https://togithub.com/vitejs/vite/issues/15179)\n-   refactor: use dedicated regex methods ([#&#8203;15228](https://togithub.com/vitejs/vite/issues/15228)) ([0348137](https://togithub.com/vitejs/vite/commit/0348137)), closes [#&#8203;15228](https://togithub.com/vitejs/vite/issues/15228)\n-   perf: remove debug only prettifyUrl call ([#&#8203;15204](https://togithub.com/vitejs/vite/issues/15204)) ([73e971f](https://togithub.com/vitejs/vite/commit/73e971f)), closes [#&#8203;15204](https://togithub.com/vitejs/vite/issues/15204)\n-   perf: skip computing sourceRoot in injectSourcesContent ([#&#8203;15207](https://togithub.com/vitejs/vite/issues/15207)) ([1df1fd1](https://togithub.com/vitejs/vite/commit/1df1fd1)), closes [#&#8203;15207](https://togithub.com/vitejs/vite/issues/15207)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26590","RelatedDescription":"Open PR \"build: update dependency vite to v5.0.5 [security]\" (#26590)"},{"Id":"2027373482","IsPullRequest":true,"CreatedAt":"2023-12-06T00:07:24","Actor":"clydin","Number":"26589","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"Fixed version of https://github.com/angular/angular-cli/pull/26571","Url":"https://github.com/angular/angular-cli/pull/26589","RelatedDescription":"Open PR \"build: lock file maintenance\" (#26589)"},{"Id":"2026852380","IsPullRequest":true,"CreatedAt":"2023-12-05T20:23:44","Actor":"alan-agius4","Number":"26588","RawContent":null,"Title":"refactor: update rxjs imports","State":"closed","Body":"Remove `rxjs/operators` legacy import\r\n","Url":"https://github.com/angular/angular-cli/pull/26588","RelatedDescription":"Closed or merged PR \"refactor: update rxjs imports\" (#26588)"},{"Id":"2025062853","IsPullRequest":true,"CreatedAt":"2023-12-05T18:22:08","Actor":"clydin","Number":"26582","RawContent":null,"Title":"build: change ng-dev config files to mjs with type jsdoc","State":"closed","Body":"To minimize the need for ts-node, the ng-dev configuration files are now ESM JavaScript files. To support type-checking of the files, JSDoc `@type` comments are added to each file. This allows for IDE support while also removing the need for ts-node to execute the files. Unfortunately, the `lib/packages.ts` file is still present and used by the configurations. This prevents full removal of ts-node for the ng-dev execution at this time.","Url":"https://github.com/angular/angular-cli/pull/26582","RelatedDescription":"Closed or merged PR \"build: change ng-dev config files to mjs with type jsdoc\" (#26582)"},{"Id":"2026518467","IsPullRequest":true,"CreatedAt":"2023-12-05T15:48:15","Actor":"alan-agius4","Number":"26587","RawContent":null,"Title":"feat(@angular-devkit/build-angular): move `browser-sync` as optional dependency","State":"open","Body":"\r\n`browser-sync` is now an optional dependency of `@angular-devkit/build-angular`. This package is only needed when using the legacy `@angular-devkit/build-angular:ssr-dev-server` builder.\r\n\r\nCloses #26349\r\n","Url":"https://github.com/angular/angular-cli/pull/26587","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): move `browser-sync` as optional dependency\" (#26587)"},{"Id":"2026218134","IsPullRequest":false,"CreatedAt":"2023-12-05T15:25:14","Actor":"ChristianOss","Number":"26585","RawContent":null,"Title":"New application builder (v17) does not live reload changes in linked libraries","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.10\n\n### Description\n\nThe new application builder does not live reload changes to linked libraries using `npm link`\r\n\r\nIn order to make it work for now, revert to the old builder. For a new project, change `@angular-devkit/build-angular:application` to `@angular-devkit/build-angular:browser` and `\"browser\": \"src/main.ts\",` to `\"main\": \"src/main.ts\",` in `angular.json`.\n\n### Minimal Reproduction\n\nFirstly, create a new library using terminal\r\n```shell\r\nng new lib-workspace --no-create-application\r\ncd lib-workspace\r\nng generate library my-lib\r\nng build\r\ncd dist/my-lib\r\nnpm link\r\ncd ../..\r\nng build --watch\r\n```\r\nStart another terminal\r\n```shell\r\n# Use SCSS and no SSR\r\nng new application-with-lib\r\ncd application-with-lib\r\nnpm link my-lib\r\n```\r\n\r\nReplace app.component.ts\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { MyLibComponent } from 'my-lib';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [MyLibComponent],\r\n  template: '<lib-my-lib></lib-my-lib>'\r\n})\r\nexport class AppComponent {\r\n}\r\n```\r\nAdd preserveSymlinks = true to `angular.json`\r\n```json\r\n\"projects\": {\r\n    \"application-with-lib\": {\r\n      ...\r\n      \"architect\": {\r\n        \"build\": {\r\n          ...\r\n          \"options\": {\r\n            \"preserveSymlinks\": true,\r\n            ...\r\n}\r\n```\r\n\r\nRun the app\r\n```shell\r\nng serve\r\n```\r\nNow change something in your library's `my-lib.component.ts`. Result is that no changes are reflected in your browser.\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nng-packagr                      17.0.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26585","RelatedDescription":"Closed issue \"New application builder (v17) does not live reload changes in linked libraries\" (#26585)"},{"Id":"2026426820","IsPullRequest":true,"CreatedAt":"2023-12-05T15:25:12","Actor":"alan-agius4","Number":"26586","RawContent":null,"Title":"fix(@angular-devkit/build-angular): watch symlink when using `preserveSymlinks` option","State":"closed","Body":"When using the esbuild based builder symlinks are not watched when `preserveSymlinks` is enabled.\r\n\r\nCloses #26585\r\n","Url":"https://github.com/angular/angular-cli/pull/26586","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): watch symlink when using `preserveSymlinks` option\" (#26586)"},{"Id":"2025726561","IsPullRequest":true,"CreatedAt":"2023-12-05T15:06:14","Actor":"angular-robot","Number":"26584","RawContent":null,"Title":"build: update dependency undici to v6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | dependencies | major | [`5.28.2` -> `6.0.0`](https://renovatebot.com/diffs/npm/undici/5.28.2/6.0.0) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | devDependencies | major | [`5.28.2` -> `6.0.0`](https://renovatebot.com/diffs/npm/undici/5.28.2/6.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.0.0`](https://togithub.com/nodejs/undici/releases/tag/v6.0.0)\n\n[Compare Source](https://togithub.com/nodejs/undici/compare/v5.28.2...v6.0.0)\n\n##### What's Changed\n\n-   16 eol by [@&#8203;ronag](https://togithub.com/ronag) in [https://github.com/nodejs/undici/pull/2480](https://togithub.com/nodejs/undici/pull/2480)\n-   update spec & wpts by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2482](https://togithub.com/nodejs/undici/pull/2482)\n-   version cleanup by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2483](https://togithub.com/nodejs/undici/pull/2483)\n-   perf: avoid Response initialization by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2489](https://togithub.com/nodejs/undici/pull/2489)\n-   perf: optimize `parseHeaders` by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2492](https://togithub.com/nodejs/undici/pull/2492)\n-   chore: fix typo by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2490](https://togithub.com/nodejs/undici/pull/2490)\n-   feat: print attempted addresses on ConnectTimeoutError by [@&#8203;fengmk2](https://togithub.com/fengmk2) in [https://github.com/nodejs/undici/pull/2494](https://togithub.com/nodejs/undici/pull/2494)\n-   Expose HTTP errors that are not meant to be retried by [@&#8203;MzUgM](https://togithub.com/MzUgM) in [https://github.com/nodejs/undici/pull/2496](https://togithub.com/nodejs/undici/pull/2496)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v5.28.2...v6.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26584","RelatedDescription":"Closed or merged PR \"build: update dependency undici to v6\" (#26584)"},{"Id":"2023150164","IsPullRequest":false,"CreatedAt":"2023-12-05T15:04:47","Actor":"iKrishnaSahu","Number":"26570","RawContent":null,"Title":"`Third party library using an exported scss variable from another third party library` is throwing issue while using application builder","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`Third party library using a exported scss variable from another third party library` is throwing issue while using application builder\r\n\r\n`I am facing this issue in my private library. I am sharing same issue with some different third party package.`\r\n\r\nThis issue will not reproduce if we use the old browser builder - `@angular-devkit/build-angular:browser`.\r\nThis issue is occurring in application builder - `@angular-devkit/build-angular:application`\r\n\r\n<img width=\"628\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/34937515/288a381d-a898-4be4-90db-5b251e32ae82\">\r\n\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create new ng application - `npx @angular/cli@latest new`\r\n2. Add ng material - `ng add @angular/material`\r\n3. Add another UI lib - `npm i --save ag-grid-community ag-grid-angular`\r\n4. Create a `test.scss` inside `./node_modules/@angular/material` with below content\r\n```scss\r\n$test-logo: 'https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci80YWI1YjNjOTg2MmZjOTFlNTFlMmU2ZjY5YTY2ZTk5Mz9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.UtT5fUih8Q7JxRFrDLEnxn8KXUZiUNzXX6gW3Y105F4';\r\n```\r\n5. export it from `index.scss (./node_modules/@angular/material/index.scss)`\r\n```scss\r\n...\r\n@forward './test.scss' show $test-logo;\r\n```\r\n6. Import a scss file from ag-grid inside application's scss file (style.scss)\r\n```scss\r\n@use \"ag-grid-community/styles/shared\";\r\n...\r\n```\r\n7. Now go inside `./node_modules/ag-grid-community/styles/_shared.scss` and add below code\r\n```scss\r\n@use '@angular/material' as material;\r\n\r\n.my-class {\r\n  background-image: url(material.$test-logo);\r\n}\r\n```\r\n8. Now try to compile your application with browser and application builder\r\n\r\n### Exception or Error\r\n\r\n```text\r\nAbove scenario should work with application builder as well\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nC:\\Projects\\projects\\angular nws\\ng17latest2>ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.5\r\nNode: 18.18.2\r\nPackage Manager: npm 8.19.3\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.2\r\n@angular/material               17.0.2\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26570","RelatedDescription":"Closed issue \"`Third party library using an exported scss variable from another third party library` is throwing issue while using application builder\" (#26570)"},{"Id":"2024275599","IsPullRequest":true,"CreatedAt":"2023-12-05T15:04:46","Actor":"clydin","Number":"26577","RawContent":null,"Title":"fix(@angular-devkit/build-angular): check namespaced Sass variables when rebasing URLs","State":"closed","Body":"The `@use` Sass directive allows Sass variables to be accessed via a namespace. This was previously not checked when performing URL path rebasing on imported Sass stylesheets. These type of Sass variable references are now also ignored when attempting to rebase URL paths during loading. The final rebased URL now also does not add a leading relative prefix indicator (`./`) unless not already present.\r\n\r\nCloses #26570","Url":"https://github.com/angular/angular-cli/pull/26577","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): check namespaced Sass variables when rebasing URLs\" (#26577)"},{"Id":"2024391999","IsPullRequest":true,"CreatedAt":"2023-12-05T15:04:33","Actor":"clydin","Number":"26578","RawContent":null,"Title":"test: correct misconfigured saucelabs platform/OS combination","State":"closed","Body":"Using Linux in certain combinations on Saucelabs can lead to unsupported errors when initializing Saucelab environments prior to any actual testing.","Url":"https://github.com/angular/angular-cli/pull/26578","RelatedDescription":"Closed or merged PR \"test: correct misconfigured saucelabs platform/OS combination\" (#26578)"},{"Id":"2023533478","IsPullRequest":false,"CreatedAt":"2023-12-05T08:53:59","Actor":"hillin","Number":"26574","RawContent":null,"Title":"Unable to locate stylesheet `styles.<hash>.css` after upgarding to Angular 17","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.12\n\n### Description\n\nAfter upgrading to Angular 17(.0.5), `ng build` reports warning:\r\n\r\n> ✔ Browser application bundle generation complete.\r\n> ✔ Copying assets complete.\r\n> ⠋ Generating index html...Unable to locate stylesheet: < output-path >\\styles.531a032ac3e91589.css\r\n> ✔ Index html generation complete.\r\n> ✔ Service worker generation complete.\r\n\r\nThe path which was unable to locate does not exist, indeed, because it's the destination of the output bundled css file.\r\nNone of the chunk files are copied to the output folder, but they are successfully generated in the `dist` folder. Copying them manually into the output folder works.\r\n\r\n`ng serve` could run the project without any problem.\n\n### Minimal Reproduction\n\nI'm sorry but I can't create a minimal repro, and my project cannot be provided. I understand this may well be a configuration problem or an issue in my code, but I'm running out of options to debug this problem.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 18.16.1\r\nPackage Manager: yarn 1.22.17\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.0\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.2\r\n@angular/material               17.0.2\r\n@schematics/angular             17.0.0\r\nng-packagr                      17.0.0\r\nrxjs                            7.5.6\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26574","RelatedDescription":"Closed issue \"Unable to locate stylesheet `styles.<hash>.css` after upgarding to Angular 17\" (#26574)"},{"Id":"2022431853","IsPullRequest":false,"CreatedAt":"2023-12-05T08:37:46","Actor":"pjms","Number":"26563","RawContent":null,"Title":"Esbuild does not work with custom Locale IDs","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nThe new builder (either one of `browser-esbuild` or `application`) seems to break the build(`exit code 1`) when ALL of following conditions are met:\r\n- The build task is ran on a CI runner\r\n- The project is enabled with Angular Localize\r\n- **The project has one or more \"custom\" locale ids that is on the Angular repository but in a different case.**\r\n\r\nFor instance,\r\n- \"en\" is on the ng's repository, and it does not break the build.\r\n- \"ja-jp\" is not on the repository, but Angular manages to find alternative(`jp`), so it does not break the build either.\r\n- \"sw-ke\" is on the repository but in a different case(`sw-KE`), the builder does manage to spot the corresponding locale, but the build exits with error code 1 nonetheless.\n\n### Minimal Reproduction\n\nThis is my repro: https://gitlab.com/moonsub.um/repro-angular17-esbuild-localeid\r\n\r\nThis project consists of three locales:\r\n- `en-US` as sourceLocale\r\n- `ja-jp`\r\n- `sw-ke`\r\n\r\nalso with repro build results:\r\n- using `browser` builder (success): https://gitlab.com/moonsub.um/repro-angular17-esbuild-localeid/-/pipelines/1093519674\r\n- using `browser-esbuild` builder (failed): https://gitlab.com/moonsub.um/repro-angular17-esbuild-localeid/-/pipelines/1093520358\r\n- using `application` builder (failed): https://gitlab.com/moonsub.um/repro-angular17-esbuild-localeid/-/pipelines/1093519163\r\n\r\n**The build was successful on the local environment, regardless of the builder used.**\n\n### Exception or Error\n\n```text\n# In case of this project:\r\n\r\n✘ [ERROR] Could not read from file: /builds/moonsub.um/repro-angular17-esbuild-localeid/node_modules/@angular/common/locales/global/sw-ke.js\r\n    angular:polyfills:angular:polyfills:1:7:\r\n      1 │ import 'angular:locale/data:sw-ke';\r\n        ╵        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nApplication bundle generation failed. [10.672 seconds]\r\n\r\n\r\n---\r\n# An excerpt from another project with slightly different configuration(probably how polyfills is imported):\r\n\r\n✘ [ERROR] ENOENT: no such file or directory, open '/builds/.../node_modules/@angular/common/locales/global/sw-ke.js' [plugin angular-compiler]\r\n    angular:polyfills:angular:polyfills:3:7:\r\n      3 │ import 'angular:locale/data:sw-ke';\r\n        ╵        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  This error came from the \"onLoad\" callback registered here:\r\n    node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:295:18:\r\n      295 │             build.onLoad({ filter: /\\.[cm]?js$/ }, (0, load_resul...\r\n          ╵                   ~~~~~~\r\n    at setup (/builds/.../node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:295:19)\r\n    at async handlePlugins (/builds/.../node_modules/@angular-devkit/build-angular/node_modules/esbuild/lib/main.js:1340:9)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26563","RelatedDescription":"Closed issue \"Esbuild does not work with custom Locale IDs\" (#26563)"},{"Id":"2022447400","IsPullRequest":false,"CreatedAt":"2023-12-05T07:51:14","Actor":"rattrayalex","Number":"26564","RawContent":null,"Title":"Angular Zones break promises in `openai` package (return null)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\n[Users making requests](https://github.com/openai/openai-node/issues/232#issuecomment-1820088056) with the `openai` package while using Zones receive `null` on all requests.\r\n\r\nEg; \r\n\r\n```ts\r\nconst response = await this.openai!.chat.completions.create({\r\n  model: 'gpt-3.5-turbo',\r\n  messages: [\r\n    {role: \"system\", content: \"Explain me the purpose of life\"},\r\n  ],\r\n});\r\n// response === null, but shouldn't be\r\n```\r\n\r\n[Users report](https://github.com/openai/openai-node/issues/232#issuecomment-1806001114) that upgrading zone.js to ^0.14.2 allows things to work with `.then()`, but not with `await`. \r\n\r\nThis is likely related to the `openai` package [subclassing Promise](https://github.com/openai/openai-node/blob/a048174c0e53269a01993a573a10f96c4c9ec79e/src/core.ts#L79) to add helper methods, [like `.asResponse()`](https://github.com/openai/openai-node/blob/a048174c0e53269a01993a573a10f96c4c9ec79e/src/core.ts#L79).\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/openai/openai-node/issues/232#issuecomment-1820088056\n\n### Please provide the exception or error you saw\n\n```true\ncompletion is `null`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nI am a maintainer of `openai`, not an Angular user. Users have reported this with Angular v17 (and earlier) and zone.js@0.14.2 (and earlier).\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26564","RelatedDescription":"Closed issue \"Angular Zones break promises in `openai` package (return null)\" (#26564)"},{"Id":"2025365401","IsPullRequest":true,"CreatedAt":"2023-12-05T06:17:41","Actor":"angular-robot","Number":"26583","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `f320cb4` -> `dd088cd` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `fff23b0` -> `8201859` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `f264d0d` -> `a86b9eb` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `db273b0` -> `b7e11d6` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `1dacf8c` -> `eca0729` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `905c751` -> `d0d14bc` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `febeeb1` -> `4ebfb6d` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `dcd4a02` -> `646adb8` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `20bd8c2` -> `c178cca` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6a0c35c` -> `bc8dbb1` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f77589b` -> `0af5006` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `fa0e231` -> `558767f` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `419a15c` -> `a1c4741` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `ad922d8` -> `6231d95` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `931ccb8` -> `c82d103` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `ce31e2d` -> `84daefc` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `14fcb46` -> `c12891f` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26583","RelatedDescription":"Open PR \"build: update angular\" (#26583)"},{"Id":"2024920749","IsPullRequest":false,"CreatedAt":"2023-12-04T22:48:10","Actor":"james-albanese","Number":"26581","RawContent":null,"Title":"SSR: Request & Response objects","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nIt would be great to have access to the Request & Response objects. This was possible with `@nguniversal/express-engine` via the respective injection tokens. \n\n### Describe the solution you'd like\n\n`REQUEST` & `RESPONSE` injection tokens.\r\n\r\nThese should be automatically accessible from the app when running on the dev server. They can then be provided from `server.ts` in a production environment.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26581","RelatedDescription":"Closed issue \"SSR: Request & Response objects\" (#26581)"},{"Id":"2024665282","IsPullRequest":true,"CreatedAt":"2023-12-04T21:46:40","Actor":"clydin","Number":"26580","RawContent":null,"Title":"test: disable new failing default typescript eslint rules to allow upgrading","State":"closed","Body":"The latest major (v6) of the typescript eslint plugin contains several new rule defaults that currently cause errors in the repository code while linting. To facilitate an upgrade, these rules are now preemptively disabled. Once the update is complete, these rules can be evaluated for inclusion.\r\n\r\nThe rules are as follows:\r\n   * @typescript-eslint/no-unsafe-enum-comparison\r\n   * @typescript-eslint/no-redundant-type-constituents\r\n   * @typescript-eslint/no-base-to-string\r\n\r\nUnblocks #25522","Url":"https://github.com/angular/angular-cli/pull/26580","RelatedDescription":"Closed or merged PR \"test: disable new failing default typescript eslint rules to allow upgrading\" (#26580)"},{"Id":"2024649197","IsPullRequest":true,"CreatedAt":"2023-12-04T20:17:17","Actor":"clydin","Number":"26579","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): convert watching to use watchpack package","State":"open","Body":"The underlying file watching functionality now uses the `watchpack` library for all builders. This includes the Webpack-based `browser` and the esbuild-based `application`/ `browser-esbuild`. This not only has the advantage of a single dependency for both but also provides more consistent behavior between the two build system in regards to file watching. Since the implementation of the file watching is fully encapsulated, there is no change to the options or configurations of consuming applications.","Url":"https://github.com/angular/angular-cli/pull/26579","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): convert watching to use watchpack package\" (#26579)"},{"Id":"2024044126","IsPullRequest":true,"CreatedAt":"2023-12-04T16:39:56","Actor":"clydin","Number":"26576","RawContent":null,"Title":"test: update browser compatibility test versions for v17","State":"closed","Body":"The browser compatibility CI job contains a hardcoded set of browsers and platform combinations that should be updated for each major release. This update adjusts the versions for the Angular v17 release based on the support matrix at the time of release. Based on the release cadence of chrome-based browsers, the range was increased by 2 last versions to test a larger segment of the browser usage space.","Url":"https://github.com/angular/angular-cli/pull/26576","RelatedDescription":"Closed or merged PR \"test: update browser compatibility test versions for v17\" (#26576)"},{"Id":"2023989810","IsPullRequest":false,"CreatedAt":"2023-12-04T14:29:12","Actor":"santam85","Number":"26575","RawContent":null,"Title":"Raw import of .ts files as text with `build-angular:application`","State":"open","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Description\r\n\r\nA similar issue (https://github.com/angular/angular-cli/issues/26368) has been opened and resolved already with the `loader` config options for custom extensions/types.\r\n\r\nUnfortunately the implemented solution still lacks the ability to perform raw imports of `.ts` files. This is vital for some use-cases where documenting the examples shown in an application (IE: technical docs for a library) is achieved by including the plain source files themselves as part of the text content rendered in the app.\r\n\r\n### Describe the solution you'd like\r\n\r\nThe loader prefix used in webpack to force a particular behaviour was quite a neat solution. Anything done when defining the import file path (ie: `import textContent from 'raw:./file.ts'`) is preferable over a generic project metadata config, imho.\r\n\r\n### Describe alternatives you've considered\r\n\r\nThe only possible solution at the moment seems to maintain a copy of the source file with a `.txt` extension.","Url":"https://github.com/angular/angular-cli/issues/26575","RelatedDescription":"Open issue \"Raw import of .ts files as text with `build-angular:application`\" (#26575)"},{"Id":"2023491224","IsPullRequest":true,"CreatedAt":"2023-12-04T10:15:32","Actor":"angular-robot","Number":"26573","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`6.13.1` -> `6.13.2`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.13.1/6.13.2) |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/ng-packagr/17.1.0-next.1/17.1.0-next.2) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | minor | [`5.24.0` -> `5.25.0`](https://renovatebot.com/diffs/npm/terser/5.24.0/5.25.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | minor | [`5.24.0` -> `5.25.0`](https://renovatebot.com/diffs/npm/terser/5.24.0/5.25.0) |\n| [verdaccio](https://verdaccio.org) ([source](https://togithub.com/verdaccio/verdaccio)) | devDependencies | minor | [`5.27.1` -> `5.28.0`](https://renovatebot.com/diffs/npm/verdaccio/5.27.1/5.28.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.13.2`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6132-2023-12-04)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.1...v6.13.2)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v17.1.0-next.2`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1710-next2-2023-12-05)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/17.1.0-next.1...17.1.0-next.2)\n\n##### Performance\n\n-   do not update package.json version on watch mode ([1225a24](https://togithub.com/ng-packagr/ng-packagr/commit/1225a241e765b4e37a55958268725d13da5e8e30))\n-   embeed assets in css using esbuild instead of postcss ([fe3e052](https://togithub.com/ng-packagr/ng-packagr/commit/fe3e0521099c53d769ca690ebcefdf1178b1cf2f))\n-   only process component styles with postcss when needed ([84cf578](https://togithub.com/ng-packagr/ng-packagr/commit/84cf578001ef2a8ef2ef15047cb78aea7c098a65))\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.25.0`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5250)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.24.0...v5.25.0)\n\n-   Regex properties added to reserved property mangler ([#&#8203;1471](https://togithub.com/terser/terser/issues/1471))\n-   `pure_new` option added to drop unused `new` expressions.\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio (verdaccio)</summary>\n\n### [`v5.28.0`](https://togithub.com/verdaccio/verdaccio/releases/tag/v5.28.0)\n\n[Compare Source](https://togithub.com/verdaccio/verdaccio/compare/v5.27.1...v5.28.0)\n\n##### Features\n\n-   update docker base image to node20 ([#&#8203;4231](https://togithub.com/verdaccio/verdaccio/issues/4231)) ([adf6927](https://togithub.com/verdaccio/verdaccio/commit/adf6927374d4d3c060435341b816f1922eddc3b2))\n\n##### Bug Fixes\n\n-   restore search all endpoint ([#&#8203;4233](https://togithub.com/verdaccio/verdaccio/issues/4233)) ([591ad20](https://togithub.com/verdaccio/verdaccio/commit/591ad20ee840b50aa9e0932587cb3f6d8d8a932e))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26573","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#26573)"},{"Id":"2023474785","IsPullRequest":false,"CreatedAt":"2023-12-04T10:06:53","Actor":"Akxe","Number":"26572","RawContent":null,"Title":"Failed to fetch dynamically imported module for one route with ESBuild","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nOut of all the routes in my app, only one is not accessible. The module that is not able to be downloaded is `our-carriers.module-PNSZ4EEZ.js`. For some reason, it is always this module and at the end of its size is `m`. I did not add the letter `m` myself; it is always there and only there. The file `our-carriers.module-PNSZ4EEZ.js` is **not** generated, the file is generated under the name `chunk-PWPQDDBC.js`. In prod mode, the chunk is generated with an aligned name and filename of `chunk-PWPQDDBC`.\r\n\r\nThis is the output from `ng serve`\r\n```\r\nInitial Chunk Files                | Names                  |  Raw Size\r\nchunk-SDNCR5MF.js                  | -                      |   1.18 MB | \r\npolyfills.js                       | polyfills              | 432.84 kB | \r\nchunk-AUKJNR2G.js                  | -                      | 246.74 kB | \r\nstyles.css                         | styles                 | 199.52 kB | \r\nmain.js                            | main                   | 133.36 kB | \r\nchunk-WHPMNZNR.js                  | -                      |   4.70 kB | \r\nchunk-7TMU4YQV.js                  | -                      |   4.49 kB | \r\nchunk-ANO7H7MC.js                  | -                      |   4.23 kB | \r\nchunk-VKMYJVAG.js                  | -                      |   4.19 kB | \r\nchunk-UTWFV6PQ.js                  | -                      |   3.13 kB | \r\nchunk-IOITSHYQ.js                  | -                      |   2.30 kB | \r\nchunk-JI4S4GJY.js                  | -                      | 941 bytes | \r\n\r\n                                   | Initial Total          |   2.19 MB\r\n\r\nLazy Chunk Files                   | Names                  |  Raw Size\r\npermits.module-5CYUNLWT.js         | permits-module         | 306.06 kB | \r\nshow-in-map.module-6XG6JXZS.js     | show-in-map-module     | 189.50 kB | \r\ninquiry.module-PPNSWAYP.js         | inquiry-module         | 142.72 kB | \r\ncreate-invoice.module-D6MRIEBQ.js  | create-invoice-module  |  95.10 kB | \r\nprocess-mapper.module-CS4SFB2C.js  | process-mapper-module  |  81.99 kB | \r\ntask.module-LKZMQ5A2.js            | task-module            |  45.96 kB | \r\nchunk-J7PY3V6B.js                  | -                      |  32.65 kB | \r\nmapper.module-PY2OPC4W.js          | mapper-module          |  25.47 kB | \r\ninvoicing.module-U7PC2253.js       | invoicing-module       |  21.73 kB | \r\nprofile.module-JS6YN7QO.js         | profile-module         |  20.04 kB | \r\nchunk-BSRT6VUQ.js                  | -                      |  19.70 kB | \r\nofferings.module-P7DMCCJE.js       | offerings-module       |  16.36 kB | \r\nadmin.module-U5IK6H4X.js           | admin-module           |  16.36 kB | \r\noffering.module-NSFIV3U4.js        | offering-module        |  13.61 kB | \r\nchunk-MF3Q5ELX.js                  | -                      |  13.52 kB | \r\nmap.module-4AU2BX2G.js             | map-module             |  12.48 kB | \r\nchunk-C6A6IGMR.js                  | -                      |  10.83 kB | \r\nour-carriers.module-PNSZ4EEZ.js    | our-carriers-module    |   5.57 kBm | \r\nsettings.module-6AT4YESA.js        | settings-module        |   5.48 kB | \r\nshow-folder-gps.module-OEATXTTT.js | show-folder-gps-module |   5.25 kB | \r\nchunk-IZARFIZU.js                  | -                      |   4.57 kB | \r\nchunk-T76RBWOY.js                  | -                      |   2.39 kB | \r\nchunk-6EDY57G5.js                  | -                      |   2.29 kB | \r\nissues.module-L4VVJ4PY.js          | issues-module          |   2.04 kB | \r\nchunk-Y2WNJNYG.js                  | -                      |   1.39 kB | \r\n```\r\n\n\n### Minimal Reproduction\n\nThis error is not reproduced in smaller project. I do not know how to produce minimal reproduction error.\n\n### Exception or Error\n\n```text\napp-routing.module.ts:64\r\nGET http://localhost:4200/our-carriers.module-PNSZ4EEZ.js net::ERR_ABORTED 404 (Not Found)\r\n```\r\n```\r\napp-routing.module.ts:64 TypeError: Failed to fetch dynamically imported module: http://localhost:4200/our-carriers.module-PNSZ4EEZ.js\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.3\r\nNode: 21.2.0 (Unsupported)\r\nPackage Manager: npm 9.6.6\r\nOS: win32 x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.3\r\n@angular-devkit/core         17.0.3\r\n@angular-devkit/schematics   17.0.3\r\n@angular/cdk                 17.0.1\r\n@angular/cdk-experimental    17.0.1\r\n@angular/cli                 17.0.3\r\n@angular/google-maps         17.0.1\r\n@angular/material            17.0.1\r\n@schematics/angular          17.0.3\r\nrxjs                         7.8.1\r\ntypescript                   5.2.2\r\nzone.js                      0.14.2\n```\n\n\n### Anything else relevant?\n\nI am using `nx`.","Url":"https://github.com/angular/angular-cli/issues/26572","RelatedDescription":"Open issue \"Failed to fetch dynamically imported module for one route with ESBuild\" (#26572)"},{"Id":"2022650165","IsPullRequest":true,"CreatedAt":"2023-12-04T08:33:17","Actor":"clydin","Number":"26566","RawContent":null,"Title":"fix(@angular-devkit/build-angular): normalize locale tags with `Intl` API when resolving in application builder","State":"closed","Body":"All specified locales in the i18n configuration for an application use the `application` or `browser-esbuild` builders will now be normalized using the `Intl` API. This ensures that the provided locale tags are both well-formed and correctly cased. This also more easily allowed an optimization for the default locale which is already embedded into the framework and will now no longer be injected by the build process if active.","Url":"https://github.com/angular/angular-cli/pull/26566","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): normalize locale tags with `Intl` API when resolving in application builder\" (#26566)"},{"Id":"2023276815","IsPullRequest":true,"CreatedAt":"2023-12-04T08:16:56","Actor":"angular-robot","Number":"26571","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26571","RelatedDescription":"Open PR \"build: lock file maintenance\" (#26571)"},{"Id":"2022843979","IsPullRequest":false,"CreatedAt":"2023-12-04T07:57:44","Actor":"HCenggel","Number":"26569","RawContent":null,"Title":"[es-build] Can the Browser file name be modified during ng build?","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nOur project is being upgraded to angular17, but ng build has caused a huge workload on our project, resulting in the possibility that the upgrade work will be terminated.\r\n\r\nIs it possible to add something like --browser-output-path --server-output-path to solve this problem?\r\n\r\nAt present, I modified the source file of @angular-devkit to achieve the goal, but this is not a good solution.\r\n\r\nAre there any official plans for this issue? This is very important for our company's subsequent upgrade work.\r\n\r\n### Describe the solution you'd like\r\n\r\n--browser-output-path --server-output-path ?\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26569","RelatedDescription":"Closed issue \"[es-build] Can the Browser file name be modified during ng build?\" (#26569)"},{"Id":"2022771813","IsPullRequest":false,"CreatedAt":"2023-12-04T07:27:57","Actor":"nicolae536","Number":"26567","RawContent":null,"Title":"Typescript path alias not working when using the new @angular-devkit/build-angular:application","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn webpack build we could define path aliases for certain folders and imports things using an index.ts file in the root of the folder. After upgrade to 17 and migrating the build system to new @angular-devkit/build-angular:application it seems typescrpt paths are ignored. Is there an alternative way to define them ?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/nicolae536/angular-typescript-paths\n\n### Please provide the exception or error you saw\n\n```true\n⠏ Building...✘ [ERROR] TS2307: Cannot find module '@components' or its corresponding type declarations. [plugin angular-compiler]\r\n\r\n    src/app/app.component.ts:4:23:\r\n      4 │ import { testFn } from \"@components\";\r\n        ╵                        ~~~~~~~~~~~~~\r\n\r\n\r\n✘ [ERROR] Could not resolve \"@components\"\r\n\r\n    src/app/app.component.ts:4:23:\r\n      4 │ import { testFn } from \"@components\";\r\n        ╵                        ~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"@components\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n\r\n\r\nApplication bundle generation failed. [2.524 seconds]\r\nWatch mode enabled. Watching for file changes...\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26567","RelatedDescription":"Closed issue \"Typescript path alias not working when using the new @angular-devkit/build-angular:application\" (#26567)"},{"Id":"2022787685","IsPullRequest":false,"CreatedAt":"2023-12-04T00:15:38","Actor":"michaeljota","Number":"26568","RawContent":null,"Title":"The main.server file is not being updated with the Angular 17 schematic update","State":"open","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm unsure if the \"update\" schematic should leave the same structure and content as if you are creating a new app with Angular CLI v17, or if this should create a different but consistent state, but neither is happening right now. If you have an Angular v16 app, with the default configuration for nguniversal, and you try to update, the application will be broken.\r\n\r\n- The update will modify the `server.ts` file with some code that will expect `'./src/main.server'` to export a default function called bootstrap. However, the content of `'./src/main.server'` is not being updated, and neither is another file being created with the expected content. \r\n\r\nIf you create a new application using the Angular CLI v17 with the option to use ssr, then a `'./src/main.server'` will be created with a default export of a bootstrap function. \r\n\r\nYou can review the same error being reported in this issue angular/angular#52998, however, in the issue is not mentioned that the default project created with Angular CLI v17 does create the expected file. \r\n\r\n### Minimal Reproduction\r\n\r\nUsing CLI\r\n\r\n```bash\r\nnpx -p @angular/cli@16 ng new angular-ssr-migrated\r\n```\r\n```bash\r\nnpx ng add @nguniversal/express-engine\r\n```\r\n```bash\r\ngit commit -m \"chore: add nguniversal\"\r\n```\r\n```bash\r\nnpx ng update @angular/core@17 @angular/cli@17\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5 (cli-only)\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5 (cli-only)\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nUpdate: From the schematic, seems like `isStandalone` is being considered true when evaluated in a migration. \r\n\r\n```\r\nimport <% if (isStandalone) { %>bootstrap<% } else { %>AppServerModule<% } %> from './src/main.server';\r\n```\r\n\r\nIf `isStandalone` is evaluated as false, then the `./src/main.server.ts` file shouldn't be updated.  \r\n\r\n\r\n<details>\r\n<summary>Original:</summary>\r\n\r\nI guess the correct content of the `'./src/main.server'` file should be: \r\n\r\n```ts\r\nimport { AppServerModule } from './app/app.server.module';\r\n\r\nexport default AppServerModule;\r\n```\r\n\r\nConsidering this don't want to do too many updates to the code.\r\n\r\n</details>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/26568","RelatedDescription":"Open issue \"The main.server file is not being updated with the Angular 17 schematic update\" (#26568)"},{"Id":"2022268244","IsPullRequest":false,"CreatedAt":"2023-12-03T00:31:51","Actor":"Carlosamouco","Number":"26562","RawContent":null,"Title":"`ng serve` randomly stops watching for file changes","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe `ng serve` randomly stops watching for file changes using the new builder after rebuilding a library in watch mode. \r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new workspace: `ng new my-app`;\r\n1. Create a library: `ng generate library my-lib`;\r\n2. Run `ng build my-lib --watch`;\r\n3. Run `ng serve`;\r\n4. Save any *.ts file within \"my-lib\";\r\n\r\nResult:\r\nThe application is rebuilt a couple of times in a row and the dev-server stops watching for file changes;\r\nSometimes it still works after saving a file for a couple of times and other times, it stops working just after the first save.\r\n\r\n### Exception or Error\r\n\r\n```text\r\nN.A.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.5\r\nNode: 18.18.0\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nng-packagr                      17.0.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI am using vs code as IDEE.\r\n\r\nFrom version 7.0.3 onwards, the dev server rebuilds twice in a row for any file change in a library, making the problem easier to reproduce. I think that's also a bug since in version 7.0.2 the application was rebuilding just once as it should. It seams the builder is picking up the *.ts file of the library as a trigger to rebuild.","Url":"https://github.com/angular/angular-cli/issues/26562","RelatedDescription":"Open issue \"`ng serve` randomly stops watching for file changes\" (#26562)"},{"Id":"2022650111","IsPullRequest":false,"CreatedAt":"2023-12-02T22:36:29","Actor":"radvil","Number":"26565","RawContent":null,"Title":"Live reloading not working after 3rd changes to the same file","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter I change for example buttons color with different value let's say\r\n- initial value was `red`\r\n- change to `yellow` (this still works)\r\n- change back to `red` (from here the change not working)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/radvil/angular-repro/tree/v17-hot-reload\n\n### Please provide the exception or error you saw\n\n```true\nThere was no errors nor exception found either in `angular-cli` output or in the `chrome-devtools` console\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n----------------\r\nOS: Arch Linux x86_64\r\nHost: Swift SF314-43 V1.06\r\nKernel: 6.1.64-1-lts\r\nPackages: 1387 (pacman)\r\n\r\n{\r\n  \"name\": \"angular-repro\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^17.0.5\",\r\n    \"@angular/cli\": \"^17.0.5\",\r\n    \"@angular/compiler-cli\": \"^17.0.0\",\r\n    \"typescript\": \"~5.2.2\"\r\n  }\r\n}\n```\n\n\n### Anything else?\n\nmy initial setup\r\n- style=scss\r\n- minimal\r\n- skip-tests\r\n- no ssr/ssg\r\n- routing\r\n\r\nI've been facing this issue since last couple weeks, I tried to search for the similar issue on this repo's issue list but I can't anything helpful, so I started this issue my own. TBH I still don't know whether this is related to my OS, kernel version, angular cli, or anything else.","Url":"https://github.com/angular/angular-cli/issues/26565","RelatedDescription":"Open issue \"Live reloading not working after 3rd changes to the same file\" (#26565)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2027280605","IsPullRequest":true,"CreatedAt":"2023-12-05T23:02:14","Actor":"zarend","Number":"28238","RawContent":null,"Title":"refactor(material/tree): docs updates and rename variables","State":"open","Body":"Make miscelaneous fixes to documentation. Rename variables. Responding to PR feedback.\r\n\r\n * remove comment about API contract of CdkTreeNodeToggle\r\n * rename CdkTree#_groups to CdkTree#_ariaSets\r\n * move documentation about default key manager configuration from TreeKeyManagerStrategy interface to TreeKeyManager class.\r\n * add JSDoc style comments for NoopTreeKeyManager","Url":"https://github.com/angular/components/pull/28238","RelatedDescription":"Open PR \"refactor(material/tree): docs updates and rename variables\" (#28238)"},{"Id":"2027114267","IsPullRequest":true,"CreatedAt":"2023-12-05T21:00:26","Actor":"zarend","Number":"28237","RawContent":null,"Title":"refactor(material/tree): add unit tests for opt-out","State":"open","Body":"Add unit tests to cover the use of LegacyTreeKeyManager, which opts out of updated focus management behavior.","Url":"https://github.com/angular/components/pull/28237","RelatedDescription":"Open PR \"refactor(material/tree): add unit tests for opt-out\" (#28237)"},{"Id":"2022037380","IsPullRequest":false,"CreatedAt":"2023-12-05T13:15:35","Actor":"prasantht96","Number":"28222","RawContent":null,"Title":"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16\r\n\r\n### Description\r\n\r\nUsing @defer causes this error, but without defer block it's working fine.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nyqsqs?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. in main.ts, remove @defer from template, No error. \r\n2. but if you add @defer, the error will come in console.\r\n\r\n\r\n### Expected Behavior\r\n\r\nthis shouldn't cause any error and everything should work.\r\n\r\n### Actual Behavior\r\n\r\n`ERROR\r\nError: R3InjectorError(Environment Injector)[InjectionToken mat-datepicker-scroll-strategy -> InjectionToken mat-datepicker-scroll-strategy]:\r\nNullInjectorError: No provider for InjectionToken mat-datepicker-scroll-strategy!`\r\n\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28222","RelatedDescription":"Closed issue \"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error\" (#28222)"},{"Id":"2025584555","IsPullRequest":true,"CreatedAt":"2023-12-05T12:58:15","Actor":"crisbeto","Number":"28235","RawContent":null,"Title":"Remove dedicated required validator directives","State":"closed","Body":"Currently `MatCheckbox` and `MatSlideToggle` implement required validation with separate directives, similarly to how `@angular/forms` handles it. This is problematic, because it would require `standalone` users to add two imports.\r\n\r\nThese changes deprecate the separate directives and move the required validation into the components.","Url":"https://github.com/angular/components/pull/28235","RelatedDescription":"Closed or merged PR \"Remove dedicated required validator directives\" (#28235)"},{"Id":"2025204653","IsPullRequest":true,"CreatedAt":"2023-12-05T12:10:37","Actor":"AleArevalo","Number":"28234","RawContent":null,"Title":"fix(material/datepicker): fix create control value when null","State":"closed","Body":"Datepicker emulating a Year and month picker:\r\n\r\nIf the user deletes the value of the control manually leaving the value of the control as null, the function \"setMonthAndYear\" breaks because the variable \"ctrlValue\" does not have the functions that assign the month and year (year, month). Allowing to enter the day (option that should not be shown).","Url":"https://github.com/angular/components/pull/28234","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): fix create control value when null\" (#28234)"},{"Id":"2025809060","IsPullRequest":true,"CreatedAt":"2023-12-05T10:02:14","Actor":"crisbeto","Number":"28236","RawContent":null,"Title":"fix(multiple): consolidate and tokenize internal form field","State":"open","Body":"We have multiple components that depend on MDC's form field styles (not to be confused with our form field which uses MDC's text field).\r\n\r\nCurrently each one includes the styles itself, both the structural ones and the theme. This is problematic because it ships the same styles multiple times and it means that we need to do refactors in multiple places.\r\n\r\nThese changes move the styles into a common component that is reused between all instances. They also switch it to the new tokens-based theming API.","Url":"https://github.com/angular/components/pull/28236","RelatedDescription":"Open PR \"fix(multiple): consolidate and tokenize internal form field\" (#28236)"},{"Id":"2022515255","IsPullRequest":false,"CreatedAt":"2023-12-05T07:45:25","Actor":"Anan014","Number":"28224","RawContent":null,"Title":"bug(COMPONENT): Unexpected Behavior with Number Input and MatTooltip Scrolling","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn Angular Material, when a <input type='number'> with matInput is used, the expected behavior is that scrolling over this input field scrolls the page. However, if I hover over any element with MatTooltip, then focus back on the number input field, the scrolling behavior unexpectedly changes. Instead of scrolling the page, it increments or decrements the number in the input. This issue can also occur on the Angular Material official [website](https://v11.material.angular.io/components/tooltip/overview).\r\n\r\n![Screenshot 2023-12-03 at 15 08 30](https://github.com/angular/components/assets/89395304/eef26764-cf11-4f7c-b5bb-a819239abcd6)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/angular/porobbapdry?file=src%2Fapp%2Ftooltip-delay-example.ts\r\nSteps to reproduce:\r\n\r\n1. Navigate to a page with a <input type='number'> with matInput.\r\n2. Hover over an element with MatTooltip.\r\n3. Focus on the number input field.\r\n4. Try scrolling over the number input field.\n\n### Expected Behavior\n\nThe expected and consistent user experience is that scrolling over a number input field should scroll the page, not change the input's value. This unexpected behavior disrupts the user experience, especially in forms with tooltips and number inputs.\n\n### Actual Behavior\n\nWhen a <input type='number'> field with matInput is focused, and the user scrolls with the mouse wheel, the default behavior is for the page itself to scroll, not the number in the input field. However, this behavior changes after interacting with an element that has MatTooltip. Specifically, after hovering over a MatTooltip element and then focusing on the number input field, scrolling with the mouse wheel no longer scrolls the page. Instead, it changes the value in the number input field, incrementing or decrementing it. This is inconsistent with the expected behavior and occurs even on the Angular Material official website.\n\n### Environment\n\n- Angular: 11\r\n- CDK/Material: 11\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS","Url":"https://github.com/angular/components/issues/28224","RelatedDescription":"Closed issue \"bug(COMPONENT): Unexpected Behavior with Number Input and MatTooltip Scrolling\" (#28224)"},{"Id":"2025074755","IsPullRequest":true,"CreatedAt":"2023-12-05T00:54:41","Actor":"kryshac","Number":"28233","RawContent":null,"Title":"fix(cdk/overlay): fix overlay margin in isBoundedByLeftViewportEdge","State":"open","Body":"When the overlay is opening 'left-ward' (the content flows to the left) the margin is not calculated correctly because the margin is subtracted twice from the width ([line: 1092](https://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/cdk/overlay/position/flexible-connected-position-strategy.ts#L1092)), but [here](https://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/cdk/overlay/position/flexible-connected-position-strategy.ts#L805) it is added only once","Url":"https://github.com/angular/components/pull/28233","RelatedDescription":"Open PR \"fix(cdk/overlay): fix overlay margin in isBoundedByLeftViewportEdge\" (#28233)"},{"Id":"2024750637","IsPullRequest":true,"CreatedAt":"2023-12-04T21:12:35","Actor":"angular-robot","Number":"28232","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `3069be8` -> `605fc83` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `6f2e63f` -> `117c852` |\n| angular/dev-infra | action | digest | `2113cd7` -> `1337ad7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28232","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#28232)"},{"Id":"2024358681","IsPullRequest":false,"CreatedAt":"2023-12-04T17:31:25","Actor":"hafnerpw","Number":"28231","RawContent":null,"Title":"bug(MatSelect): MatOptionGroup template bug with new @If Control-Flow ","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`                                <mat-select [formControl]=\"sourceTypeControl\" placeholder=\"Select SourceType\"\r\n                                            required minlength=\"1\"\r\n                                            appSelectOnePerGroup\r\n                                            multiple>\r\n                                    @if (vm.library && vm.library.referencedSourceLibraryIds) {\r\n                                        @for (sLibId of vm.library.referencedSourceLibraryIds;track sLibId) {\r\n                                            <mat-optgroup [label]=\"sLibId\">\r\n                                                @for(st of vm.sourceTypes; track st.id){\r\n                                                        <mat-option *ngIf=\"st.sourceLibraryId === sLibId\" class=\"mat-primary\" [value]=\"st.id\">\r\n                                                            {{ st.derivedPlcType?.plcDataType }}\r\n                                                        </mat-option>\r\n                                                }\r\n                                            </mat-optgroup>\r\n                                        }\r\n                                    }\r\n                                </mat-select>`\r\n                                \r\n                                is not the same as this: `<mat-select [formControl]=\"sourceTypeControl\" placeholder=\"Select SourceType\"\r\n                                            required minlength=\"1\"\r\n                                            appSelectOnePerGroup\r\n                                            multiple>\r\n                                    @if (vm.library && vm.library.referencedSourceLibraryIds) {\r\n                                        @for (sLibId of vm.library.referencedSourceLibraryIds;track sLibId) {\r\n                                            <mat-optgroup [label]=\"sLibId\">\r\n                                                @for(st of vm.sourceTypes; track st.id){\r\n                                                    @if(st.sourceLibraryId === sLibId){\r\n                                                        <mat-option class=\"mat-primary\" [value]=\"st.id\">\r\n                                                            {{ st.derivedPlcType?.plcDataType }}\r\n                                                        </mat-option>\r\n                                                    }\r\n                                                }\r\n                                            </mat-optgroup>\r\n                                        }\r\n                                    }\r\n                                </mat-select>`\r\n                                \r\n                                \r\n                                with the @if it adds some weird padding to the options: \r\n                                \r\n![image](https://github.com/angular/components/assets/60545335/6e9801c3-d629-423e-98a5-e4908ad3758f)\r\nand with the old *ngIf it looks normal:\r\n![image](https://github.com/angular/components/assets/60545335/345f0de7-b39b-42dd-ac01-b9eb82318fae)\r\n\r\nYes I am customizing material styles but this inconsistency is not result of my overrides.\r\n                                \n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\n*ngIf should behave the same way as @if() \r\n\n\n### Actual Behavior\n\n@if control flow does not produce the same output as *ngIf\n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.1\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows 11\r\n","Url":"https://github.com/angular/components/issues/28231","RelatedDescription":"Closed issue \"bug(MatSelect): MatOptionGroup template bug with new @If Control-Flow \" (#28231)"},{"Id":"2024280442","IsPullRequest":false,"CreatedAt":"2023-12-04T16:40:45","Actor":"lylebuchanan","Number":"28230","RawContent":null,"Title":"bug(mat-select): aria-owns and modal accessibility issue.","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using a mat-select inside of a dialog the select applies the aria-owns attribute to the aria-modal=\"true\" element when the select panel is opened. After a selection is made, a critical accessibility issue in axeDevTools v 4.8.2 with error \"Ensures all ARIA attributes have valid values\" appears. This is due to the previously applied aria-owns id no longer existing on the dom after a selection is made. The aria-owns attribute is only removed from the modal on destroy of the select. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-mxpfyf?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the modal.\r\n2. Select an option\r\n3. Scan with axeDevTools or inspect dom to see aria-owns still exists on mat-dialog-container\r\n\n\n### Expected Behavior\n\nThe aria-owns label is removed from mat-dialog-container when the select panel is closed.\n\n### Actual Behavior\n\nThe aria-owns label is only removed on destroy of the select.\n\n### Environment\n\n- Angular: 16.2\r\n- CDK/Material: 16.2\r\n- Browser(s): chrome/edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/28230","RelatedDescription":"Open issue \"bug(mat-select): aria-owns and modal accessibility issue.\" (#28230)"},{"Id":"2023951543","IsPullRequest":false,"CreatedAt":"2023-12-04T14:12:06","Actor":"csisy-btw","Number":"28229","RawContent":null,"Title":"bug(MatTabLink): Underline (MatTabInk) is missing if combined with route reuse strategy","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe have an application with multiple layer of tabs combined with custom route reuse strategy. Most of the tabs are detached and reattached until the tab is closed.\r\n\r\nThe active tab is determined from the currently active route on each navigation end event. This way if the application is loaded with a specific url, the appropriate tab is selected.\r\n\r\nConsider the following routes:\r\n```\r\n- /tab1\r\n- /tab2\r\n- /tab2/sub1\r\n- /tab2/sub2\r\n```\r\n\r\nOn the `/tab2` route, another tab group is present with links to the sub routes (and of course a sub router-outlet as well).\r\n\r\nIf we load the app with the `/tabs2/sub2` route, the components of `/tab2` and `/tab2/sub2` are loaded, which also means that the tab2's ink is initialized to the second tab in the header.\r\n\r\nNow, if we navigate to `/tab1`, these components are not destroyed, however the tab link active flags are set to false because neither `/tab2/sub1` nor `/tab2/sub2` is active after the navigation ends.\r\n\r\nThen if we navigate back to `/tab2/sub2`, the components are not reinitialized (because of the reuse strategy). but the active flag is changed for the `/tab2/sub2` tab link (because it is now active after navigation end).\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nckgfk?file=src%2Ftab-active-tracker.directive.ts\r\n\r\nSteps to reproduce:\r\n1. Click on Tab 1 -> Tab 1 highlighted [OK]\r\n2. Click on Tab 2 -> Tab 2 highlighted [OK], inner tab group loaded [OK]\r\n3. Click on Sub-Tab 1 -> upper Sub-Tab 1 highlighted [OK], inner Sub-Tab 1 highlighted [OK]\r\n4. Click on Sub-Tab 2 -> upper Sub-Tab 2 highlighted [OK], inner Sub-Tab 2 highlighted [OK]\r\n5. Click on Tab 1 -> Tab 1 highlighted [OK]\r\n6. Click on Sub-Tab 2 -> Tab 2 highlighted [OK], **inner Sub 2 is NOT highlighted [NOK]**\r\n\r\n### Expected Behavior\r\n\r\nAfter the step 6 the ink should be re-initialized even if set to the same value.\r\n\r\n### Actual Behavior\r\n\r\nAs you can see, the active status is properly set (font is bold on the inner Sub-Tab 2 header element) but the ink is missing.\r\n\r\nHowever, I think I found the root cause of the problem.\r\n\r\nWhen we navigate from the `/tab2/sub2` back to `/tab1`, neither the `/tab2/sub1` nor the `/tab2/sub2` routes are active so the `selectedIndex` is set to `-1` and the ink's `hide()` is called. However, the index just set is not processed until the next `ngAfterContentChecked` call.\r\n\r\nNow, when we navigate back to `/tab2/sub2` (which was the last active inner tab) the ink handler thinks that despite the selection index is changed (from `-1` ro `1`), the selection itself is not changed.\r\n\r\nI think that in the `hide()` function of `MatInkBar` the `this._currentItem` should be set to `null`. Because next time when `alignToElement` is called, the `correspondingItem === currentItem` check will be true (but the index was changed from `1 -> -1 -> 1` but it was not processed due to a missing `ngAfterContentChecked` call)\r\n\r\nhttps://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/material/tabs/ink-bar.ts#L40\r\n\r\n### Environment\r\n\r\n```\r\nAngular CLI: 17.0.5\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.2\r\n@angular/material               17.0.2\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```","Url":"https://github.com/angular/components/issues/28229","RelatedDescription":"Open issue \"bug(MatTabLink): Underline (MatTabInk) is missing if combined with route reuse strategy\" (#28229)"},{"Id":"2023770717","IsPullRequest":false,"CreatedAt":"2023-12-04T12:42:19","Actor":"iosipov27","Number":"28228","RawContent":null,"Title":"bug(mat-form-field): when using appearance=\"outline\", input fields increases in height. ","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using mat-form-field with appearance=\"outline\", text input field increases in height after entering a text\r\nReproduces on mobile devices with iOS 17+\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Open Safari 17 on a mobile device (it is the default browser for iOS 17)\r\n2. Open Angular Material Page at https://material.angular.io/components/form-field/overview\r\n3. Find Outline form field\r\n4. Enter any text. Probably need to clear the field and enter the text again.\n\n### Expected Behavior\n\nThe height of the field should be the same as the field without text\r\n![image](https://github.com/angular/components/assets/10838804/e30f248c-4e49-4853-a190-87aada38a1b7)\n\n### Actual Behavior\n\nThe field height is different compared to the field without text\r\n![image](https://github.com/angular/components/assets/10838804/40351a90-d07f-4a99-b6a2-a09026faacc6)\n\n### Environment\n\n- Angular: 15-17\r\n- CDK/Material: 15-17\r\n- Browser(s): mobile Safari 17\r\n- Operating System iOS 17.1.2","Url":"https://github.com/angular/components/issues/28228","RelatedDescription":"Open issue \"bug(mat-form-field): when using appearance=\"outline\", input fields increases in height. \" (#28228)"},{"Id":"2022431974","IsPullRequest":true,"CreatedAt":"2023-12-04T11:08:15","Actor":"crisbeto","Number":"28223","RawContent":null,"Title":"build: set up hydration in universal app","State":"closed","Body":"Reworks the Universal app so that it's runnable and that it serves an SSR-generated `index.html`, allowing us to test hydration locally.","Url":"https://github.com/angular/components/pull/28223","RelatedDescription":"Closed or merged PR \"build: set up hydration in universal app\" (#28223)"},{"Id":"2023257134","IsPullRequest":true,"CreatedAt":"2023-12-04T10:45:47","Actor":"crisbeto","Number":"28227","RawContent":null,"Title":"build: update to TypeScript 5.3","State":"closed","Body":"Updates the project to the next Angular release and TypeScript 5.3.","Url":"https://github.com/angular/components/pull/28227","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.3\" (#28227)"},{"Id":"2023242589","IsPullRequest":false,"CreatedAt":"2023-12-04T07:55:24","Actor":"tHe-AK","Number":"28226","RawContent":null,"Title":"bug(mat-calendar-header): icons for navigating to prev & next month not disabled for edge values","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv12\r\n\r\n### Description\r\n\r\nCheck the icon for navigating to the previous month, it is not disabled in v16 version:\r\n\r\n![image](https://github.com/angular/components/assets/19654243/6e0b1312-8a28-4b6f-98d2-5572bb70c0c5)\r\nv12 Screenshot\r\n\r\n![image](https://github.com/angular/components/assets/19654243/a9dc6483-793a-4e18-ab9c-2cf948af805e)\r\nv16 Screenshot\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/qpapjy\r\n\r\nSteps to reproduce: \r\n1. Click the calendar icon, it will open the popup for date selection. \r\n2. Click the left or right arrow icon to change the month. \r\n\r\n### Expected Behavior\r\n\r\nThe previous and next icons should be disabled when no further dates can be selected. \r\n\r\n### Actual Behavior\r\n\r\nThe previous and next icons look the same and don't get disabled. \r\n\r\n### Environment\r\n\r\n- Angular: 16.2.11 \r\n- CDK/Material: 16.2.10 \r\n- Browser(s): MS Edge Version 119.0.2151.93 (Official build) (64-bit) \r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows \r\n\r\nAlso, I have noticed that the Angular team haven't released a Legacy version for mat-datepicker but internal classes for mat-datepicker are changed as we are using new mat-button from mdc inside mat-datepicker. This breaks some stylings in our codebase.","Url":"https://github.com/angular/components/issues/28226","RelatedDescription":"Open issue \"bug(mat-calendar-header): icons for navigating to prev & next month not disabled for edge values\" (#28226)"},{"Id":"2021179352","IsPullRequest":true,"CreatedAt":"2023-12-04T07:41:32","Actor":"angular-robot","Number":"28218","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `069ea40` -> `3069be8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f00eb4c` -> `6f2e63f` |\n| angular/dev-infra | action | digest | `1d3d98f` -> `2113cd7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28218","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28218)"},{"Id":"2023217670","IsPullRequest":false,"CreatedAt":"2023-12-04T07:38:57","Actor":"Bschitter","Number":"28225","RawContent":null,"Title":"feat(mat-select): The selected option shows at the bottom when opening. Make this position configurable.","State":"open","Body":"### Feature Description\n\n**Version:** Angular Material 17.0.2\r\n\r\n## Description\r\n\r\nWhen I have a mat-select with many options, the selected value will always be at the bottom when opening the mat-select.\r\n\r\n![image](https://github.com/angular/components/assets/22681168/dbfdde4c-fa7f-4e0e-8571-92a890b425af)\r\n\r\n\r\n## Suggestion\r\n\r\nMake where the selected option shows configurable with values like `bottom (default) | middle | top` as shown in the screenshot below.\r\n\r\n![image](https://github.com/angular/components/assets/22681168/c15f6190-7b4b-4505-b69c-58634c487867)\r\n\n\n### Use Case\n\nFor some use cases, it might be better to have the selected option at the top or in the middle, so the previous resp. the previous and next values can be seen.\r\nE.g. the select list is sorted and I'm iterating through the select (for whatever reason) then I always have to scroll when I want to select the next item.","Url":"https://github.com/angular/components/issues/28225","RelatedDescription":"Open issue \"feat(mat-select): The selected option shows at the bottom when opening. Make this position configurable.\" (#28225)"},{"Id":"2020603628","IsPullRequest":false,"CreatedAt":"2023-12-03T16:46:59","Actor":"XEvansWTW","Number":"28215","RawContent":null,"Title":"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using a custom filter (as shown in the example in the autocomplete documentation https://material.angular.io/components/autocomplete/overview), the valueChanges functionality does not work when requireSelection is added to the component.\r\n\r\n### Reproduction\r\n\r\nStack Blitz\r\nhttps://stackblitz.com/edit/vyil2i?file=src%2Fexample%2Fautocomplete-filter-example.ts,src%2Fexample%2Fautocomplete-filter-example.html\r\n\r\n1. valueChanges pipe does not run when requireSelection is on autocomplete component.\r\n2. Removing requireSelection causes it to work (see output in console).\r\n3. This does not happen on a normal autocomplete component which doesn't have a custom filter.\r\n\r\nNote that this demo uses minimal changes from the example given in the component's documentation.\r\n\r\n### Expected Behavior\r\n\r\nvalueChanges pipe works as it does with a normal autocomplete without a custom filter.\r\n\r\n### Actual Behavior\r\n\r\nvalueChanges pipe does not work at all.\r\n\r\n### Environment\r\n\r\nAngular 17 \r\nAngular 17.0.1 material\r\n","Url":"https://github.com/angular/components/issues/28215","RelatedDescription":"Closed issue \"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges\" (#28215)"},{"Id":"2021636078","IsPullRequest":true,"CreatedAt":"2023-12-01T22:29:26","Actor":"zarend","Number":"28221","RawContent":null,"Title":"docs: release notes for the v17.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28221","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.2 release\" (#28221)"},{"Id":"2021629972","IsPullRequest":true,"CreatedAt":"2023-12-01T21:53:30","Actor":"zarend","Number":"28220","RawContent":null,"Title":"Bump version to \"v17.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28220","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.2\" with changelog.\" (#28220)"},{"Id":"2021618380","IsPullRequest":true,"CreatedAt":"2023-12-01T21:44:49","Actor":"zarend","Number":"28219","RawContent":null,"Title":"Bump version to \"v17.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28219","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.1\" with changelog.\" (#28219)"},{"Id":"2020812627","IsPullRequest":false,"CreatedAt":"2023-12-01T12:43:49","Actor":"WoMayr","Number":"28217","RawContent":null,"Title":"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen providing services via a route, MatDialog.open is not able to create a component instance that injects this service\r\n\r\nMatDialog.open is called like this\r\n```\r\nthis.matDialog.open(MyServiceConsumerComponent, {\r\n  viewContainerRef: this.viewContainerRef,\r\n});\r\n```\r\n\r\nStructure of the routes and components looks like this:\r\n![image](https://github.com/angular/components/assets/1965557/58fba84c-d769-4f51-8bdf-225ab58266e7)\r\n\r\n\r\nI did try to debug into MatDialog.open but the created Injectors were all able to get the service. So I don't really know what prevents the dialog component to be created.\r\n\r\nIt did correctly work, when declaring the Service in the `providers`-part of the component itself (see comment in my stack-blitz in my-feature.component.ts)\r\n\r\nAlso I'm not sure if this is an issue of Angular Material, CDK or Angular itself.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/angular-standalone-ts-strict-ijt5jr\r\nSteps to reproduce:\r\n1. Use standalone components\r\n2. Create a service (`MyFeatureService`)\r\n3. Create a route with a component (`MyFeatureComponent`) and define the service in the providers\r\n4. Create a component (`MyServiceConsumerComponent`) that consumes the service\r\n5. Open a dialog in `MyFeatureComponent` using `matDialog.open(MyServiceConsumerComponent, { viewContainerRef: this.viewContainerRef })`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe Dialog is able to resolve the requested service\r\n\r\n### Actual Behavior\r\n\r\nThe Dialog failes to resolve the service:\r\n```\r\nERROR NullInjectorError: R3InjectorError(Environment Injector)[MyFeatureService -> MyFeatureService]: \r\n  NullInjectorError: No provider for MyFeatureService!\r\n    at NullInjector.get (injector_token.ts:27:5)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at ChainedInjector.get (component_ref.ts:238:23)\r\n    at lookupTokenUsingModuleInjector (di.ts:372:8)\r\n    at getOrCreateInjectable (di.ts:424:2)\r\n    at Object.ɵɵdirectiveInject (shared.ts:86:5)\r\n    at NodeInjectorFactory.MyServiceConsumerComponent_Factory [as factory] (my-service-consumer.component.ts:8:40)\r\n    at getNodeInjectable (di.ts:661:20)\r\n    at createRootComponent (inherit_definition_feature.ts:43:27)\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 17.0.5\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/28217","RelatedDescription":"Open issue \"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef\" (#28217)"},{"Id":"2020627408","IsPullRequest":false,"CreatedAt":"2023-12-01T10:54:50","Actor":"pawelkondraciuk","Number":"28216","RawContent":null,"Title":"feat(mat-datepicker): Custom day cell template","State":"open","Body":"### Feature Description\n\nAdd ability to provide custom template for the day cell in datepicker with date as template context. Something like\r\n\r\n```\r\n<mat-datepicker>\r\n  <ng-container *matDatepickerCell=\"let date\">\r\n    {{ date | date:\"d\" }}\r\n  <ng-container>\r\n</mat-datepicker>\r\n```\n\n### Use Case\n\nFairy simple use case would be to add name of the holiday below the day number or add the tooltip when you hover over the day with extra content.","Url":"https://github.com/angular/components/issues/28216","RelatedDescription":"Open issue \"feat(mat-datepicker): Custom day cell template\" (#28216)"},{"Id":"2018372384","IsPullRequest":false,"CreatedAt":"2023-11-30T19:01:41","Actor":"felhag","Number":"28210","RawContent":null,"Title":"bug(mat-chip-listbox): Harness getChips() does not return mat-chip","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\n\r\nWhen using `MatChipListboxHarness.getChips()` it only returns `mat-chip-option` elements, but not `mat-chip`. Because of this a mat-chip-listbox like [this example](https://material.angular.io/components/chips/examples#chips-avatar) cannot be tested using the listbox harness. Not sure what is the correct solution for this because it can be solved using `mat-chip-set` instead of listbox.\r\n\r\nPossible solutions imho: \r\n1. Change example to use `mat-chip-set` instead of `mat-chip-listbox`.\r\n2. Change `getChips()` signature to return `MatChipHarness[]` which would be a breaking change.\r\n3. Add an additional method like `getStaticChips()`.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/qykqid\n\n### Expected Behavior\n\n`MatChipListboxHarness.getChips()` should include `mat-chip` as well.\n\n### Actual Behavior\n\n`MatChipListboxHarness.getChips()` only returns `mat-chip-option`.\n\n### Environment\n\n- Angular: 17.0.1\r\n- CDK/Material: 17.0.1\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28210","RelatedDescription":"Closed issue \"bug(mat-chip-listbox): Harness getChips() does not return mat-chip\" (#28210)"},{"Id":"2018956425","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:42","Actor":"walberglez","Number":"28214","RawContent":null,"Title":"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe screen reader JAWS version 2023 does not announce a checked option as selected in a multiple selection mat-select. It does announce unchecked options as selected.\r\n\r\nI tried other Windows screen readers, NVDA does not announce it either but Narrator does. So it could be a screen reader implementation issue.\r\n\r\nAlso, this issue has been discussed before: https://github.com/angular/components/issues/21949 and it was considered to be working as expected. But I want to bring this up again because I consider that the mat-option component is not following the WAI ARIA Listbox pattern completely, please see Note 1 in this section https://www.w3.org/WAI/ARIA/apg/patterns/listbox/#roles_states_properties.\r\n\r\n> 1. Some factors to consider when choosing whether to indicate selection with aria-selected or aria-checked are:\r\nSome design systems use aria-selected for single-select widgets and aria-checked for multi-select widgets. In the absence of factors that would make an alternative convention more appropriate, this is a recommended convention.\r\n\r\nMat Option uses aria-select for both single and multiple selection. Based on this recommendation, it should use aria-selected for single selection and aria-checked for multiple selection.\r\n\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Start JAWS in a Windows machine.\r\n2. Go to https://material.angular.io/components/select/overview#select-multiple\r\n3. Select the multiple selection dropdown.\r\n4. Navigate through the options using the arrow keys.\r\n5. Select a few options.\r\n6. Navigate through selected and unselected options and check how the screen reader announces them.\r\n\n\n### Expected Behavior\n\nI expect screen readers to announce if an option is selected or unselected.\n\n### Actual Behavior\n\nJAWS only announces the status of an unselected option.\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Chrome 119.0.6045.199\r\n- Operating System: Windows 10 Enterprise\r\n","Url":"https://github.com/angular/components/issues/28214","RelatedDescription":"Open issue \"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select\" (#28214)"},{"Id":"2018889690","IsPullRequest":false,"CreatedAt":"2023-11-30T15:15:48","Actor":"sonallux","Number":"28213","RawContent":null,"Title":"bug(list): matListItemIcon color is wrong for disabled list items","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe color of `matListItemIcon` is wrong for disabled list items. It is different to the [list component from material-web](https://material-web.dev/components/list)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ir6zfh?file=src%2Fexample%2Flist-overview-example.html\r\nSteps to reproduce:\r\n1. Hover over \"Item 2 (disabled)\"\r\n2. See the `matListItemIcon` changing its color\r\n\n\n### Expected Behavior\n\nThe color of the `matListItemIcon` stays constant if the list item is disabled.\n\n### Actual Behavior\n\nThe color of the `matListItemIcon` is changing.\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router, ssr\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.1\r\n@angular/material                  17.0.1\r\n@angular/material-moment-adapter   17.0.1\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0","Url":"https://github.com/angular/components/issues/28213","RelatedDescription":"Open issue \"bug(list): matListItemIcon color is wrong for disabled list items\" (#28213)"},{"Id":"2018861939","IsPullRequest":false,"CreatedAt":"2023-11-30T15:02:11","Actor":"bmayen","Number":"28212","RawContent":null,"Title":"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nNot sure if this is a regression or not\r\n\r\n### Description\r\n\r\nThe floating label transform is normally applied via the label `.mdc-floating-label--float-above` class. However, when matTextPrefix is used on the mat-form-field, the transform is instead applied to the `label` element itself via inline style attribute. This makes attaching custom styles to the floated label inconsistent since the inline style has higher specificity than `.mdc-floating-label--float-above` class. \r\n\r\n### Reproduction\r\n\r\nApply matTextPrefix to an outline mat-form-field with a mat-label. Observe how transform styling is applied inline to the label.\r\n\r\nhttps://components-issue-da4zuo.stackblitz.io/\r\n\r\n### Expected Behavior\r\n\r\nI would expect transform styling to be applied consistently via `.mdc-floating-label--float-above` class.\r\n\r\n### Actual Behavior\r\n\r\nTransform styling is applied via `.mdc-floating-label--float-above` class when matTextPrefix is not present, but applied via inline styling on the label element when matTextPrefix is present.\r\n\r\n### Environment\r\n\r\n- Angular: 16.x\r\n- CDK/Material: 16.x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28212","RelatedDescription":"Open issue \"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class\" (#28212)"},{"Id":"2018700189","IsPullRequest":false,"CreatedAt":"2023-11-30T13:43:19","Actor":"alex-waverley","Number":"28211","RawContent":null,"Title":"bug(Slider): Tooltip is not showed on thumb hover","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSlider component doesn't work properly in Safari after changing slider's value.\r\n\r\nhttps://github.com/angular/components/assets/84070515/186bb5cc-36bb-47d2-a7c1-8e86f9c5adc3\r\n\r\nReason: mat-slider-visual-thumb element is not getting `mdc-slider__thumb--with-indicator` css class on thumb hover \n\n### Reproduction\n\nSteps to reproduce:\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-2ytten?file=src%2Fapp%2Fexample-component.html\r\n1. hover thumb - tooltop is showed\r\n2. click on slider to change its value\r\n3. hover thumb - now tooltip is not showed\r\n\n\n### Expected Behavior\n\nTooltip must be always showed on thumb hover.\n\n### Actual Behavior\n\nTooltip is not showed on thumb hover after changing slider's value.\r\n\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser: Safari 16.6 (18615.3.12.11.2)\r\n- Operating System: macOS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/28211","RelatedDescription":"Open issue \"bug(Slider): Tooltip is not showed on thumb hover\" (#28211)"},{"Id":"2018213200","IsPullRequest":false,"CreatedAt":"2023-11-30T09:19:48","Actor":"khobabc","Number":"28209","RawContent":null,"Title":"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI recently upgraded to Angular ~16.2.10, and noticed that cdk-virtual-scroll-viewport is not working in RTL mode for horizontal scroll. Initial data is rendered but then on scroll subsequent records are not rendered.\r\n\r\nOn investigations I came to know that getRtlScrollAxisType is returning 2 (Inverted) instead of 1 (Negated). If I make it return 1 during debug, things start to work fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-yehn5j?file=src%2Fapp%2Fcdk-platform-overview-example.html\r\nSteps to reproduce:\r\nNotice that at the bottom of information, getRtlScrollAxisType is 2\r\n![image](https://github.com/angular/components/assets/17024937/4e9b569d-82a9-4d99-b437-d94b9d2faeac)\n\n### Expected Behavior\n\ngetRtlScrollAxisType() should return 1 for chrome.\n\n### Actual Behavior\n\ngetRtlScrollAxisType() returns 2 for chrome\n\n### Environment\n\n- Angular: ~16.2.10\r\n- CDK/Material: ~16.2.10\r\n- Browser(s): Chrome 119.0.6045.160, Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 Pro\r\n","Url":"https://github.com/angular/components/issues/28209","RelatedDescription":"Open issue \"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome\" (#28209)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-06T03:30:02.3740784Z","RunDurationInMilliseconds":1489}