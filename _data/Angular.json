{"Data":{"Angular-Issues":{"Issues":[{"Id":"2551750644","IsPullRequest":true,"CreatedAt":"2024-09-27T00:20:23","Actor":"AndrewKushnir","Number":"57986","RawContent":null,"Title":"ci: update integration test payload size","State":"open","Body":"This commit updates a golden file with payload sizes for integration apps. One of the sizes got dropped below the threshold (but not significantly), most likely due to changes merged earlier (dependency updates, CLI changes, etc).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/57986","RelatedDescription":"Open PR \"ci: update integration test payload size\" (#57986)"},{"Id":"2551712646","IsPullRequest":true,"CreatedAt":"2024-09-26T23:57:47","Actor":"AndrewKushnir","Number":"57985","RawContent":null,"Title":"ci: make PullApprove config up-to-date","State":"open","Body":"This commit updates PullApprove config:\r\n\r\n- Removes Dylan\r\n- Adds Alex to the `fw-forms` group\r\n- Adds Charles to the `fw-language-service` group\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/57985","RelatedDescription":"Open PR \"ci: make PullApprove config up-to-date\" (#57985)"},{"Id":"2551166328","IsPullRequest":true,"CreatedAt":"2024-09-26T21:31:41","Actor":"josephperrott","Number":"57980","RawContent":null,"Title":"[Patch Version] build: update @angular/build-tooling to latest version","State":"closed","Body":"Update @angular/build-tooling to the latest version\r\n","Url":"https://github.com/angular/angular/pull/57980","RelatedDescription":"Closed or merged PR \"[Patch Version] build: update @angular/build-tooling to latest version\" (#57980)"},{"Id":"2551157271","IsPullRequest":true,"CreatedAt":"2024-09-26T21:30:18","Actor":"josephperrott","Number":"57979","RawContent":null,"Title":"build: update @angular/build-tooling to latest version","State":"closed","Body":"Update @angular/build-tooling to the latest version\r\n\r\nFixes #57778","Url":"https://github.com/angular/angular/pull/57979","RelatedDescription":"Closed or merged PR \"build: update @angular/build-tooling to latest version\" (#57979)"},{"Id":"2550216042","IsPullRequest":true,"CreatedAt":"2024-09-26T21:29:48","Actor":"alan-agius4","Number":"57970","RawContent":null,"Title":"fix(docs-infra): update `getAnswerFiles` to ensure compatibility with non-POSIX file systems","State":"closed","Body":"\r\n\r\nThis update modifies the `getAnswerFiles` function to support file systems that do not adhere to POSIX standards.\r\n\r\nPrior to this change this method will always fail with the below:\r\n\r\n```\r\nError: Invalid state: could not find start of answers path\r\n```","Url":"https://github.com/angular/angular/pull/57970","RelatedDescription":"Closed or merged PR \"fix(docs-infra): update `getAnswerFiles` to ensure compatibility with non-POSIX file systems\" (#57970)"},{"Id":"2548641778","IsPullRequest":true,"CreatedAt":"2024-09-26T21:29:06","Actor":"devversion","Number":"57961","RawContent":null,"Title":"refactor(migrations): fix batch test of signal input migration failing ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/57961","RelatedDescription":"Closed or merged PR \"refactor(migrations): fix batch test of signal input migration failing \" (#57961)"},{"Id":"2551540521","IsPullRequest":true,"CreatedAt":"2024-09-26T21:12:46","Actor":"angular-robot","Number":"57984","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/57984","RelatedDescription":"Open PR \"docs: update Angular CLI help [main]\" (#57984)"},{"Id":"2551411872","IsPullRequest":false,"CreatedAt":"2024-09-26T20:04:52","Actor":"griest024","Number":"57983","RawContent":null,"Title":"`ServerModule` overrides `HttpClient` customizations","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nplatform-server\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nWhen using SSR with the module setup generated with `ng new --standalone=false --ssr=true` (or by `ng add @angular/ssr` to an existing module application), any `HttpClient` customizations are overridden by `ServerModule`. This is because `ServerModule` imports `HttpClientModule`. https://github.com/angular/angular/blob/1549afe10eddc92845cd1fde862aaa010c2395af/packages/platform-server/src/server.ts#L83-L88\r\n\r\nThe repro uses `angular-in-memory-web-api` to demo the customization behavior.\r\n\r\nThe following things fix this:\r\n- Moving the `ServerModule` import above the `AppModule` in `AppServerModule` (https://github.com/griest024/ng18-ssr-module/tree/module-order)\r\n- Replacing the `ServerModule` import with `provideServerRendering()` (https://github.com/griest024/ng18-ssr-module/tree/server-provider)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/griest024/ng18-ssr-module\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 18.2.6\r\nNode: 18.20.4\r\nPackage Manager: npm 10.7.0\r\nOS: linux x64\r\n\r\nAngular: 18.2.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1802.6\r\n@angular-devkit/build-angular   18.2.6\r\n@angular-devkit/core            18.2.6\r\n@angular-devkit/schematics      18.2.6\r\n@schematics/angular             18.2.6\r\nrxjs                            7.8.1\r\ntypescript                      5.5.4\r\nzone.js                         0.14.10\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nIMO the *correct* fix is the replace `ServerModule` with `provideServerRendering()` in `@angular/ssr` scaffolding. `HttpClientModule` should probably not be imported by `ServerModule` either.\r\n\r\nRelated to https://github.com/angular/angular/issues/50454","Url":"https://github.com/angular/angular/issues/57983","RelatedDescription":"Closed issue \"`ServerModule` overrides `HttpClient` customizations\" (#57983)"},{"Id":"2551370207","IsPullRequest":true,"CreatedAt":"2024-09-26T19:23:19","Actor":"JeanMeche","Number":"57982","RawContent":null,"Title":"refactor(forms): Expose a union type for parent form containers.","State":"open","Body":"This commit exposes a new type to the public api.\r\nIt is intented to also include the upcomming `FormArrayDirective` (#55880)\r\n","Url":"https://github.com/angular/angular/pull/57982","RelatedDescription":"Open PR \"refactor(forms): Expose a union type for parent form containers.\" (#57982)"},{"Id":"2551259618","IsPullRequest":true,"CreatedAt":"2024-09-26T18:21:36","Actor":"mgechev","Number":"57981","RawContent":null,"Title":"Add expiry to the top banner on adev and close the survey","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/57981","RelatedDescription":"Open PR \"Add expiry to the top banner on adev and close the survey\" (#57981)"},{"Id":"2551123828","IsPullRequest":false,"CreatedAt":"2024-09-26T17:11:18","Actor":"naris","Number":"57978","RawContent":null,"Title":"ng build fails with ENAMETOOLONG if there are a lot of uncommitted files","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli, compiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI have run into a problem working with a JHipster application after migrating to a new version that ng build fails with ENAMETOOLONG. I googled the issue and according to this StackOverflow [[How to fix spawn ENAMETOOLONG error nrwl nx workspace](https://stackoverflow.com/questions/71185967/how-to-fix-spawn-enametoolong-error-nrwl-nx-workspace)](https://stackoverflow.com/questions/71185967/how-to-fix-spawn-enametoolong-error-nrwl-nx-workspace) this issue is because there are \"too many\" uncommitted  files, which tracks because after migrating the JHipster application there are indeed quite a lot of uncommitted files (856 of them). However, I really need to be able to compile and run the application before committing the files to ensure the migration did not break anything :(\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nUnfortunately, it is not possible to provide a link to a project with uncommitted files :(\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n[INFO] > ng build --configuration development\r\n[INFO]\r\n[INFO] - Generating browser application bundles (phase: setup)...\r\n[INFO] âœ” Browser application bundle generation complete.\r\n[INFO] node:internal/child_process:421\r\n[INFO]     throw new ErrnoException(err, 'spawn');\r\n[INFO]           ^\r\n[INFO]\r\n[INFO] Error: spawn ENAMETOOLONG\r\n[INFO]     at ChildProcess.spawn (node:internal/child_process:421:11)\r\n[INFO]     at spawn (node:child_process:762:9)\r\n[INFO]     at Object.execFile (node:child_process:351:17)\r\n[INFO]     at module.exports.fileCommand (C:\\src\\totalfact\\node_modules\\webpack-notifier\\node_modules\\node-notifier\\lib\\utils.js:76:13)\r\n[INFO]     at C:\\src\\totalfact\\node_modules\\webpack-notifier\\node_modules\\node-notifier\\notifiers\\toaster.js:145:11\r\n[INFO]     at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\r\n[INFO]   errno: -4064,\r\n[INFO]   code: 'ENAMETOOLONG',\r\n[INFO]   syscall: 'spawn'\r\n[INFO] }\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 18.2.5\r\nNode: 20.16.0\r\nPackage Manager: npm 10.8.1\r\nOS: win32 x64\r\n\r\nAngular: 18.2.5\r\n... cli, common, compiler, compiler-cli, core, forms, localize\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1802.5\r\n@angular-devkit/build-angular   18.2.5\r\n@angular-devkit/core            18.2.5\r\n@angular-devkit/schematics      18.2.5\r\n@angular/animations             18.0.4\r\n@angular/cdk                    18.0.4\r\n@schematics/angular             18.2.5\r\nrxjs                            7.8.1\r\ntypescript                      5.5.4\r\nzone.js                         0.14.10\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/57978","RelatedDescription":"Closed issue \"ng build fails with ENAMETOOLONG if there are a lot of uncommitted files\" (#57978)"},{"Id":"2550691051","IsPullRequest":false,"CreatedAt":"2024-09-26T14:07:38","Actor":"irojgurung","Number":"57976","RawContent":null,"Title":"Leading comma in canActivate list is not reported during build time but crashes out in run time. Error logged is also not helpful in debugging.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAdding a leading comma by mistake in canActivate list of guards is not caught duuring build time and crashes out during run time with error that is not helpful.\r\nSample Code:\r\n{ \r\n  path:'',\r\n canActivate: [, AuthGuard],\r\n}\r\n\r\nNo Error in build time.\r\n\r\nRun time error:\r\n![image](https://github.com/user-attachments/assets/4ef698de-e013-4597-ac79-7fe143ac4a41)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/57976","RelatedDescription":"Closed issue \"Leading comma in canActivate list is not reported during build time but crashes out in run time. Error logged is also not helpful in debugging.\" (#57976)"},{"Id":"2550568667","IsPullRequest":true,"CreatedAt":"2024-09-26T13:17:34","Actor":"devversion","Number":"57975","RawContent":null,"Title":"feat(language-service): support migrating full classes to signal inputs in VSCode","State":"open","Body":"This commit expands the VSCode integration of the signal input migration\r\nto allow migration of full classes and all their inputs. This enables a\r\nfaster workflow than just migrating every member individually.\r\n\r\n**See individual commits**","Url":"https://github.com/angular/angular/pull/57975","RelatedDescription":"Open PR \"feat(language-service): support migrating full classes to signal inputs in VSCode\" (#57975)"},{"Id":"2550332159","IsPullRequest":true,"CreatedAt":"2024-09-26T11:41:39","Actor":"JeanMeche","Number":"57974","RawContent":null,"Title":"docs: remove mention of `allowSignalWrites`","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/57974","RelatedDescription":"Open PR \"docs: remove mention of `allowSignalWrites`\" (#57974)"},{"Id":"2550326738","IsPullRequest":true,"CreatedAt":"2024-09-26T11:38:54","Actor":"cexbrayat","Number":"57973","RawContent":null,"Title":"fix(core): allow signal write error","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nNow that effects allow to write to signals (see https://github.com/angular/angular/commit/4e890cc5ac6eaa04a6f7ca988908812a65991c14), the SIGNAL_WRITE_FROM_ILLEGAL_CONTEXT error is only thrown in `computed` functions.\r\n\r\n## What is the new behavior?\r\n\r\nThis commit updates the error message to remove the mention of effects and of the deprecated `allowSignalWrites` option.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/57973","RelatedDescription":"Open PR \"fix(core): allow signal write error\" (#57973)"},{"Id":"2550314135","IsPullRequest":false,"CreatedAt":"2024-09-26T11:33:05","Actor":"montella1507","Number":"57972","RawContent":null,"Title":"Creating custom CVA based components is STILL  almost impossible to in most not-super-basic  scenarios (regardless the unified event api)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\nIt is still impossible to implement working custom CVA based components in 50% of scenarios. \r\n\r\nMain cause of this is non-existing way how to get ALL information about AbstractControl. \r\n\r\nWhy?\r\n- there is not any 100% working way how to get information about important control state (valid/invalid/pristine/touched).\r\n- it is important to know control states like valid/invalid/pristine/touched to correctly implement smarter components than hello world \r\n\r\nWhy current implementation does not work?\r\n\r\n- CVA interface does not provide ANY way how to get information about status changes (it can only react to ValueChanges - writevalue and disabled changes - setDisabled), there is not anything like setValid(), setTouched() pristine etc.\r\n\r\n-  You can get ngControl from injector (because CVA is solving only 20% of domain...) .Control has now \"unified events api\"  https://angular.dev/api/forms/AbstractControl#events unfortunately, it is preserved when {emitEvent: false} during the method calls \r\n\r\n- It is EVEN BIGGER Problem as far as disabled control has BOTH valid and invalid SET TO FALSE (lol), so you just DO NOT HAVE ANY way how to get any information about the state of validity, when your control is enabled with {emitEvent:false} (check source code below)\r\n\r\n- it is so sad that the only way how to get 100% information about control state is to LISTEN for DOM mutation on Host element (to read ng-invalid, ng-valid, ng-pending, ng-prisitine, etc. classes)\r\n- the same problem when validity of the control changes when the new value is set - you have NO WAY how to get the new valid / invalid status when user patch/set value with emitEvent: false.  You cannot even handle this inside of writeValue() because validators are executed after that....  So not any workaround..\r\n\r\n\r\nFORCING user not to use {emitEvent:false } which is his way to prevent emiting valueChanges \"ON THE OUTSIDE SIDE\" - aka. consumer of the component (in bigger form) is definitely not a solution to this problem, where Component creator has not any legit way how to get state of the control.  \r\n\r\n```\r\n\r\nimport { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormControl, PristineChangeEvent, ReactiveFormsModule, StatusChangeEvent, TouchedChangeEvent} from '@angular/forms';\r\nimport {  bootstrapApplication } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, CommonModule],\r\n  template: `\r\n    <input type=\"number\"  [formControl]=\"number\"/>\r\n    Valid: {{number.valid}}\r\n    Invalid: {{number.invalid}}\r\n    Errors: {{number.errors | json}}\r\n\r\n    <button (click)=\"number.enable({emitEvent: false})\">ENABLE</button>\r\n    <hr/>\r\n    Problems:\r\n    <ul>\r\n      <li>Disabled input has both VALID and INVALID set TRUE - eventhogh there is no validator and it NO ERRORS</li>\r\n      <li>When you enable control - it is now valid, but NO events is fired from Control.Events</li>\r\n    </ul>\r\n\r\n    <hr/>\r\n    Events: \r\n    <ul>\r\n    @for(event of events; track $index) {\r\n       <li>{{event | json}}</li>\r\n    }\r\n  </ul>\r\n  `,\r\n})\r\nexport class App {\r\n\r\n  events: any[] =[]; \r\n  number = new FormControl();\r\n\r\n\r\n\r\n  ngOnInit( ){\r\n    this.number.disable();\r\n    this.number.events.subscribe(e=> {\r\n      if (e instanceof StatusChangeEvent) {\r\n        this.events.push(\"Status - \" + e.status);\r\n      } else if (e instanceof TouchedChangeEvent) {\r\n        this.events.push(\"Touched - \"+ e.touched);\r\n      } else if (e instanceof PristineChangeEvent) {\r\n        this.events.push(\"Pristine - \"+ e.pristine);\r\n      }\r\n    }\r\n    );\r\n  }\r\n}\r\n\r\nbootstrapApplication(App);\r\n\r\n```\r\n\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\n- more methods in CVA interface\r\n- event emitter on AbstractControl which emits everytime, regardless the emitEvent settings\r\n\r\n\r\n### Alternatives considered\r\n\r\n- our only WAY how to solve this is to write our own AbstractControl's implementations (inherit the base ones from angular) and to add additional event emiiters...\r\n-  in this case where is the main problem the valid/invalid state of control, you can \"rebind\" your internal valid/invalid/pristine/touched state when setDisabled() of CVA is called.\r\n- in case of changed valid/invalid state when the new value is set to control with emitEvent:false, there is not any way except to \"queue\" sync check after \"writeValue\"\r\n\r\n<img width=\"452\" alt=\"image\" src=\"https://github.com/user-attachments/assets/89225650-c8b5-45cc-8a07-d198a8fe1b51\">\r\n\r\n\r\n\r\nJust sad state.","Url":"https://github.com/angular/angular/issues/57972","RelatedDescription":"Open issue \"Creating custom CVA based components is STILL  almost impossible to in most not-super-basic  scenarios (regardless the unified event api)\" (#57972)"},{"Id":"2550281488","IsPullRequest":false,"CreatedAt":"2024-09-26T11:17:04","Actor":"rozpuszczalny","Number":"57971","RawContent":null,"Title":"Spawning Web Worker from previous AppVersion results in network fallback","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nYes\n\n### Description\n\nConsider the following scenario:\r\n\r\n- There is an existing Angular app with Service Worker\r\n- An angular app has an on-demand web worker, that is cached via Service Worker\r\n- A web worker is updated and a new version of an Angular app is deployed\r\n- Existing client received a new version of an Angular app, but did not refresh an already opened tab\r\n\r\nIn that scenario, when an existing client, that already received a new version of an Angular app, but did not refresh an already opened tab, triggers a code path, where a new Web Worker is created, a Web Worker script is fetched from the network, instead of from a cache. Because of the nature of deployment, scripts from a previous version are not stored on a server, meaning a request for an old Web Worker script results in a 404 error, and eventually in a Web Worker initialization failure.\r\n\r\nI'd expect a Service Worker to serve a Web Worker script for an old version if a fetch is initiated from an old Angular app version.\r\n\r\nPlease use a minimal reproduction repository and follow the steps in the video to simulate the issue.\r\n\r\n[ngsw-web-worker.webm](https://github.com/user-attachments/assets/2da4f484-747a-42c4-ac5b-fd56cc412e01)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/rozpuszczalny/ngsw-web-worker\n\n### Please provide the exception or error you saw\n\n```true\nWorker emitted an Event on 'error' callback; service worker called network, where it should use cache.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.6\r\nNode: 20.12.0\r\nPackage Manager: npm 10.5.0\r\nOS: linux x64\r\n\r\nAngular: 18.2.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1802.6\r\n@angular-devkit/build-angular   18.2.6\r\n@angular-devkit/core            18.2.6\r\n@angular-devkit/schematics      18.2.6\r\n@schematics/angular             18.2.6\r\nrxjs                            7.8.1\r\ntypescript                      5.5.4\r\nzone.js                         0.14.10\n```\n\n\n### Anything else?\n\nWe are experiencing such an issue in our production setup, which makes an update process quite painful for the users. Weirdly, for some users, simply reloading a tab does not solve the issue - we have to instruct the users to manually delete a Service Worker via `chrome://serviceworker-internals`. We still didn't identify nor reproduce that scenario where reload is not working.\r\n\r\n---\r\n\r\nProbably introduced by https://github.com/angular/angular/pull/42607, which was first released with Angular v12.\r\n\r\n---\r\n\r\nA possible solution is to check if `clientId` and `resultingClientId` are both set. If that's true, `clientId` should be used over `resultingClientId`. My crude testing showed (at least in Chrome browser) that `resultingClientId` is the client ID of a newly created web worker, and `clientId` is the client ID of a tab that spawned a web worker.\r\n\r\nSince `resultingClientId` is relevant when opening a new tab, I've tested and noticed that `clientId` is set to an empty string when opening a website in a separate tab. However, opening `window.open('/', '_top')` sets both `clientId` and `resultingClientId` - similar to a web worker scenario. Unfortunately, `location.reload()` also sets both `clientId` and `resultingClientId`, which further complicates a potential solution.\r\n\r\nhttps://github.com/angular/angular/blob/1549afe10eddc92845cd1fde862aaa010c2395af/packages/service-worker/worker/src/driver.ts#L713-L713","Url":"https://github.com/angular/angular/issues/57971","RelatedDescription":"Open issue \"Spawning Web Worker from previous AppVersion results in network fallback\" (#57971)"},{"Id":"2549693839","IsPullRequest":false,"CreatedAt":"2024-09-26T07:44:04","Actor":"fantasy0v0","Number":"57967","RawContent":null,"Title":"The effect was not called when the input property changed","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI am writing a component that needs to listen for changes to the input property. Since I am using signals, I tried using effect, but I found that the effect was not called when the input property changed.\r\n\r\n**I found that if I call the signal in the effect, everything works fine.**\r\n\r\n```javascript\r\neffect(() => {\r\n  // this.id();\r\n  untracked(() => {\r\n    console.log(this.id());\r\n  });\r\n});\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/sqh7rz?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nThe effect was not called when the input property changed.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 18.2.6\r\nNode: 18.19.1\r\nPackage Manager: npm 10.2.4\r\nOS: linux x64\r\n\r\nAngular: 18.2.6\r\n... animations, build, cdk, cli, common, compiler, compiler-cli\r\n... core, forms, material, platform-browser\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1802.6\r\n@angular-devkit/core         18.2.6\r\n@angular-devkit/schematics   18.2.6\r\n@schematics/angular          18.2.6\r\nrxjs                         7.8.1\r\ntypescript                   5.5.4\r\nzone.js                      0.14.10\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/57967","RelatedDescription":"Closed issue \"The effect was not called when the input property changed\" (#57967)"},{"Id":"2549725108","IsPullRequest":false,"CreatedAt":"2024-09-26T07:42:55","Actor":"wxyer","Number":"57968","RawContent":null,"Title":"more time click,more time cost","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\n![屏幕截图 2024-09-26 150555](https://github.com/user-attachments/assets/baaf7440-1fac-407f-a6fd-19f443dcc1e3)\r\ni pop a modal by using cdk in code,\r\n![屏幕截图 2024-09-26 151604](https://github.com/user-attachments/assets/fc920426-907d-46b8-8de2-47f07e41928d)\r\n\r\npopup code below\r\n`\r\n![屏幕截图 2024-09-26 151712](https://github.com/user-attachments/assets/b71b6a46-da4d-43d2-9ed1-bd9956c9014e)\r\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nthe funcion calling costs so much times, and with more time i popup the modal,more time needed,\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.0\r\nNode: 20.9.0\r\nPackage Manager: pnpm 8.10.5\r\nOS: win32 x64\r\n\r\nAngular: 18.2.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1802.0 (cli-only)\r\n@angular-devkit/build-angular   18.2.0\r\n@angular-devkit/core            18.2.0 (cli-only)\r\n@angular-devkit/schematics      18.2.0 (cli-only)\r\n@angular/cdk                    18.1.2\r\n@angular/localize               18.1.2\r\n@angular/material               18.1.2\r\n@schematics/angular             18.2.0 (cli-only)\r\nrxjs                            7.8.1\r\ntypescript                      5.5.4\r\nzone.js                         0.14.10\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/57968","RelatedDescription":"Closed issue \"more time click,more time cost\" (#57968)"},{"Id":"2549587273","IsPullRequest":true,"CreatedAt":"2024-09-26T05:55:02","Actor":"arturovt","Number":"57966","RawContent":null,"Title":"fix(common): skip checking whether SVGs are oversized","State":"open","Body":"Prior to this commit, the `ImagePerformanceWarning` class was checking all `img` elements in the DOM to determine whether they were oversized after the DOM loading was complete. We should not check SVGs because they are vector-based and can scale infinitely without losing quality.\r\n\r\nCloses #57941","Url":"https://github.com/angular/angular/pull/57966","RelatedDescription":"Open PR \"fix(common): skip checking whether SVGs are oversized\" (#57966)"},{"Id":"2548984639","IsPullRequest":true,"CreatedAt":"2024-09-25T20:56:19","Actor":"Zetsword","Number":"57964","RawContent":null,"Title":"docs(guide): Updated event-listeners.md doc to use correct term, even -> every","State":"open","Body":"event time -> every time\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/57964","RelatedDescription":"Open PR \"docs(guide): Updated event-listeners.md doc to use correct term, even -> every\" (#57964)"},{"Id":"2548965590","IsPullRequest":true,"CreatedAt":"2024-09-25T20:43:55","Actor":"NathanJohnNJ","Number":"57963","RawContent":null,"Title":"Docs: Update installation.md","State":"open","Body":"Corrected grammar/spelling error.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n## What is the new behavior?  N/A\r\n## Does this PR introduce a breaking change?\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/57963","RelatedDescription":"Open PR \"Docs: Update installation.md\" (#57963)"},{"Id":"2548747213","IsPullRequest":true,"CreatedAt":"2024-09-25T18:52:58","Actor":"atscott","Number":"57962","RawContent":null,"Title":"docs: export ComponentInputBindingFeature which is part of the public…","State":"open","Body":"… API\r\n\r\nthis fixes a missing export of ComponentInputBindingFeature\r\n","Url":"https://github.com/angular/angular/pull/57962","RelatedDescription":"Open PR \"docs: export ComponentInputBindingFeature which is part of the public…\" (#57962)"},{"Id":"2548546307","IsPullRequest":true,"CreatedAt":"2024-09-25T17:14:36","Actor":"atscott","Number":"57960","RawContent":null,"Title":"Bump version to \"v19.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/57960","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.7\" with changelog.\" (#57960)"},{"Id":"2548296423","IsPullRequest":true,"CreatedAt":"2024-09-25T17:04:27","Actor":"devversion","Number":"57957","RawContent":null,"Title":"refactor(migrations): do not insert TODO for skipped inputs ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/57957","RelatedDescription":"Closed or merged PR \"refactor(migrations): do not insert TODO for skipped inputs \" (#57957)"},{"Id":"2548521116","IsPullRequest":true,"CreatedAt":"2024-09-25T17:02:45","Actor":"atscott","Number":"57959","RawContent":null,"Title":"docs: release notes for the v18.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/57959","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.6 release\" (#57959)"},{"Id":"2548517273","IsPullRequest":true,"CreatedAt":"2024-09-25T17:00:10","Actor":"atscott","Number":"57958","RawContent":null,"Title":"Bump version to \"v18.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/57958","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.6\" with changelog.\" (#57958)"},{"Id":"2548275903","IsPullRequest":false,"CreatedAt":"2024-09-25T15:23:57","Actor":"KMikeeU","Number":"57956","RawContent":null,"Title":"Angular DevTools on Firefox causes massive lag and browser freeze on Microsoft Business(?) Login pages","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n0. Install the most recent version of Angular Devtools on the most recent version of Firefox\r\n1. Disable all other extensions\r\n2. Try to log in to any Microsoft service (via login.microsoftonline.com)\r\n3. Enter Email (belonging to an organisation managed account!), click \"Next\"\r\n4. \"Trying to sign you in\" takes much longer than usual and browser starts to lag\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\nThe console is being spammed with the error\r\n\r\n\"IFrame: origin https://autologon.microsoftazuread-sso.com is not in the allowed list.\"\r\n\r\nroughly 10k times\n```\n\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\nWindows 11 23H2, Firefox 130.0.1\n```\n\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/57956","RelatedDescription":"Closed issue \"Angular DevTools on Firefox causes massive lag and browser freeze on Microsoft Business(?) Login pages\" (#57956)"},{"Id":"2547741230","IsPullRequest":false,"CreatedAt":"2024-09-25T14:34:35","Actor":"Vastlaan","Number":"57954","RawContent":null,"Title":"Template update failure with async pipe, signal inputs, store selectors, and @defer directive","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n## Description\r\n\r\nI encountered an issue where my component's HTML template doesn't update as expected when combining the async pipe, signal inputs, store selectors, and the @defer directive. I’m not sure which part of the setup is causing the problem, or if the issue lies within my code. However, the behavior varies depending on the approach used to bind the data.\r\n\r\nIn my component, different HTML tags are rendered based on the status, which can be one of three values: loading, updating, or finished.\r\nSteps to Reproduce\r\n\r\nIn the provided [StackBlitz reproduction](https://stackblitz.com/edit/stackblitz-starters-qabqoy?file=src%2Fcomponents%2Fstatus%2Fbroken-status.component.ts), you can observe three variations of the component:\r\n\r\n1. Good Component: Uses a signal to store the observable value emitted from the store status selector. This implementation works correctly.\r\n2. Broken Component: Uses the store status selector with the async pipe in the template, combined with @defer blocks. Occasionally, the component fails to update, particularly when the updating state is triggered.\r\n3. Just Status Component: Uses the store status selector with the async pipe in the template, but only renders the status without using @defer. This version works as expected, which indicates that the store selector itself is functioning properly.\r\n\r\n## Issue\r\n\r\nWhen testing, you may notice that sometimes the updating state fails to render in the Broken Component. This behavior occurs sporadically, and can be observed by refreshing the StackBlitz project.\r\n## What I've Tried\r\n\r\n1. Change Detection (markForCheck): Called markForCheck on the pipe inside the selector, but it didn’t resolve the issue.\r\n2. Change Detection (detectChanges): Explicitly invoked detectChanges in the pipe inside the selector, but no improvement.\r\n3. Member Variable for Status: Substituted signal with a member variable to store the status and updated it via a subscription to the selector. This also failed to resolve the issue.\r\n\r\n## Environment\r\n\r\n    Angular CLI 18.1.0\r\n    Node 18.20.3\r\n    Chrome (fails sometimes)\r\n    Firefox (fails always)\r\n\r\n## Expected Behavior\r\n\r\nThe component should consistently update the template based on the emitted status, regardless of the rendering mechanism or how the data is bound.\r\n## Actual Behavior\r\n\r\nThe component intermittently fails to render certain states (e.g., updating) when using the async pipe combined with @defer. However, this behavior is absent when using signal or when not using the @defer directive.\r\n\r\n[Reproduction Project](https://stackblitz.com/edit/stackblitz-starters-qabqoy?file=src%2Fcomponents%2Fstatus%2Fbroken-status.component.ts)\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-qabqoy?file=src%2Fcomponents%2Fstatus%2Fbroken-status.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nThe UI occasionally does not update.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI 18.1.0\r\nNode 18.20.3\r\nChrome (fails sometimes)\r\nFirefox (fails always)\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/57954","RelatedDescription":"Closed issue \"Template update failure with async pipe, signal inputs, store selectors, and @defer directive\" (#57954)"},{"Id":"2548105388","IsPullRequest":false,"CreatedAt":"2024-09-25T14:07:46","Actor":"paulnaber","Number":"57955","RawContent":null,"Title":"DeepSignal Inputs and Models","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, Angular's signal-based inputs and models work well for primitive types, but they become cumbersome when dealing with complex objects. This feature request proposes the implementation of \"DeepSignal\" inputs and models, which would provide a more convenient way to work with nested properties in objects, especially in scenarios involving two-way binding and forms.\r\n\r\nThe main benefits of this feature would be:\r\n\r\n- Easier listening to specific properties of complex objects without the need for additional computeds or equality checks.\r\n- Simplified template usage for nested properties.\r\n- More convenient handling of forms and filters with multiple fields.\r\n- Improved developer experience when working with complex data structures.\n\n### Proposed solution\n\nIntroduce two new functions: deepInput() and deepModel(), which would create DeepSignal instances. These would behave similarly to the existing input() and model() functions but with enhanced capabilities for nested properties.\r\n\r\nExample usage:\r\n``` \r\n@Component({...})\r\nexport class MyComponent {\r\n  filterParams = deepInput<{param1: string, param2: string}>();\r\n  viewModel = deepModel<{name: string, password: string}>();\r\n}\r\n```\r\n\r\nIn the template:\r\n```\r\n{{ filterParams.param2() }}\r\n<input type=\"text\" [(ngModel)]=\"viewModel.name\">\r\n```\r\n\r\nThe DeepSignal type would need to be writable to support two-way binding scenarios.\r\n\r\nThis solution would be particularly beneficial in views with multiple filters, selections, and inputs, allowing developers to work with a single object rather than individual signals for each property. For example:\r\n\r\n```\r\ninterface SomeProps {\r\n    dateRange: { start: Date, end: Date },\r\n    category: string,\r\n    searchTerm: string,\r\n    isActive: boolean\r\n}\r\n@Component({...})\r\nexport class FilterComponent {\r\n  filters = deepInput<SomeProps>();\r\n} \r\n```\r\nThis approach simplifies handling complex filter objects without creating separate inputs for each property.\n\n### Alternatives considered\n\n1. Using computed signals for each nested property: This approach works but leads to verbose code and doesn't solve the two-way binding issue elegantly.\r\n2. Creating custom operators or utility functions: While this could provide similar functionality, it wouldn't be as seamless as having built-in support in Angular.\r\n\r\nBy implementing DeepSignal inputs and models, we can significantly improve the developer experience when working with complex objects in Angular applications, especially in scenarios involving forms and filtering.","Url":"https://github.com/angular/angular/issues/57955","RelatedDescription":"Open issue \"DeepSignal Inputs and Models\" (#57955)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2551722324","IsPullRequest":true,"CreatedAt":"2024-09-27T00:07:24","Actor":"nosaku","Number":"28510","RawContent":null,"Title":"fix(@angular/build): add animateMotion, animateTransform, and feBlend etc. to valid self-closing elements","State":"open","Body":"fix(@angular/build): add animateMotion, animateTransform, and feBlend etc. to valid self-closing elements\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: 28502\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28510","RelatedDescription":"Open PR \"fix(@angular/build): add animateMotion, animateTransform, and feBlend etc. to valid self-closing elements\" (#28510)"},{"Id":"2550090320","IsPullRequest":true,"CreatedAt":"2024-09-26T20:50:37","Actor":"alan-agius4","Number":"28500","RawContent":null,"Title":"fix(@angular/ssr): improve handling of route mismatches between Angular server routes and Angular router","State":"closed","Body":"fix(@angular/ssr): show error when multiple routes are set with `RenderMode.AppShell`**\r\n\r\nThis change introduces error handling to ensure that when multiple routes are configured with `RenderMode.AppShell`, an error message is displayed. This prevents misconfiguration and enhances clarity in route management.\r\n\r\n---\r\n\r\n**fix(@angular/ssr): improve handling of route mismatches between Angular server routes and Angular router**\r\n\r\nThis commit resolves an issue where routes defined in the Angular server routing configuration did not match those in the Angular router. Previously, discrepancies between these routes went unnoticed by users. With this update, appropriate error messages are now displayed when mismatches occur, enhancing the developer experience and facilitating easier troubleshooting.\r\n","Url":"https://github.com/angular/angular-cli/pull/28500","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): improve handling of route mismatches between Angular server routes and Angular router\" (#28500)"},{"Id":"2551434604","IsPullRequest":true,"CreatedAt":"2024-09-26T20:30:24","Actor":"jkrems","Number":"28507","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove implicit localize polyfill","State":"closed","Body":"In the v19 application builder, the localize polyfill should not be added implicitly.\r\n\r\nSee: https://github.com/angular/angular-cli/commit/d6a34034d7489c09753090642ade4c606cd98ece\r\n\r\n### What Changes\r\n\r\n1. Test: Reference `./src/polyfills.ts` in the base options so we have an easy way to inject the polyfill based on which builder is used.\r\n2. Test: Make the `setupTarget` function async so we can write to the polyfills file as part of the setup.\r\n3. Builder: Remove the code in the application-builder based Karma support to inject localize.","Url":"https://github.com/angular/angular-cli/pull/28507","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove implicit localize polyfill\" (#28507)"},{"Id":"2551439692","IsPullRequest":true,"CreatedAt":"2024-09-26T20:18:55","Actor":"clydin","Number":"28508","RawContent":null,"Title":"Bump version to \"v19.0.0-next.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28508","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.8\" with changelog.\" (#28508)"},{"Id":"2551455381","IsPullRequest":true,"CreatedAt":"2024-09-26T20:14:39","Actor":"jkrems","Number":"28509","RawContent":null,"Title":"feat(@angular-devkit/build-angular): karma-coverage w/ app builder","State":"open","Body":"## Tasks to Cover (🥁)\r\n\r\n- [ ] Determine list/filtering of files to instrument for coverage.\r\n- [ ] Actually instrument those files. Importantly, using a recent version of `istanbul-lib-instrument` and not the one that `karma-coverage` depends on.\r\n- [ ] Preserve source maps so that coverage is mapped back to source files.\r\n\r\nThings that _don't_ work:\r\n\r\n- Instrument entire output chunks. `karma-coverage` really doesn't want to filter data from coverage data after the fact. Not to mention that it could be fairly expensive to send that data back to the karma process if it's then just discarded.\r\n- Implied above: Use `karma-coverage`'s built-in preprocessor. The outdated instrumentation code it's using doesn't handle async function correctly and gives bad function coverage data because of it.\r\n\r\nThings that _could've_ worked:\r\n\r\n- Apply source maps while instrumenting instead of while post-processing the coverage data. But that would've been swimming against the stream.","Url":"https://github.com/angular/angular-cli/pull/28509","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): karma-coverage w/ app builder\" (#28509)"},{"Id":"2548899117","IsPullRequest":true,"CreatedAt":"2024-09-26T16:24:15","Actor":"niklas-wortmann","Number":"28493","RawContent":null,"Title":"feat(editorconfig): support single quote setting in JetBrains IDEs","State":"closed","Body":"\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe editorConfig generated by `ng new` specified `quote_type = single` for ts files. This is not a valid configuration option within editorConfig, instead editor could use it, but AFAIK no one utilizes this (https://github.com/editorconfig/editorconfig-vscode/issues/95). JetBrains IDEs have the option with the `ij_` prefix to set custom settings, and `ij_use_double_quote=false` will lead to autogenerated code (e.g. autoimports) to use single quotes\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nJetBrains IDEs will use single quotes by default\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/28493","RelatedDescription":"Closed or merged PR \"feat(editorconfig): support single quote setting in JetBrains IDEs\" (#28493)"},{"Id":"2550914475","IsPullRequest":true,"CreatedAt":"2024-09-26T16:14:53","Actor":"jkrems","Number":"28506","RawContent":null,"Title":"perf(@angular/ssr): prevent potential stampede in entry-points cache","State":"closed","Body":"If multiple concurrent requests hit `getEntryPointExports`, all of\nthem would previously see the cache miss for entry point. With this\nchange, only the first request will and the others can leverage the\ncache.\n\nThis can be important when instances are added to a pool under high\ntraffic.\n\n## PR Checklist\n\nPlease check to confirm your PR fulfills the following requirements:\n\n<!-- Please check all that apply using \"x\". -->\n\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n## PR Type\n\nWhat kind of change does this PR introduce?\n\n<!-- Please check the one that applies to this PR using \"x\". -->\n\n- [x] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, local variables)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] CI related changes\n- [ ] Documentation content changes\n- [ ] Other... Please describe:\n\n## What is the current behavior?\n\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\n\nIssue Number: N/A\n\n## What is the new behavior?\n\n<!-- Please describe the new behavior that. -->\n\n## Does this PR introduce a breaking change?\n\n- [ ] Yes\n- [ ] No\n\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\n\n## Other information\n","Url":"https://github.com/angular/angular-cli/pull/28506","RelatedDescription":"Closed or merged PR \"perf(@angular/ssr): prevent potential stampede in entry-points cache\" (#28506)"},{"Id":"2550912132","IsPullRequest":true,"CreatedAt":"2024-09-26T15:54:44","Actor":"alan-agius4","Number":"28505","RawContent":null,"Title":"refactor(@angular/build): improve HTML Code Sanitization in Manifest","State":"closed","Body":"See: https://github.com/angular/angular-cli/security/code-scanning/74","Url":"https://github.com/angular/angular-cli/pull/28505","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): improve HTML Code Sanitization in Manifest\" (#28505)"},{"Id":"2550266779","IsPullRequest":true,"CreatedAt":"2024-09-26T15:02:33","Actor":"alan-agius4","Number":"28501","RawContent":null,"Title":"perf(@angular/ssr): cache resolved entry-points","State":"closed","Body":"Improve request throughput by 4.34% and reduce latency by caching resolved entry-points.\r\n","Url":"https://github.com/angular/angular-cli/pull/28501","RelatedDescription":"Closed or merged PR \"perf(@angular/ssr): cache resolved entry-points\" (#28501)"},{"Id":"2549532068","IsPullRequest":true,"CreatedAt":"2024-09-26T14:43:33","Actor":"angular-robot","Number":"28494","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `3571818` -> `374ba8c` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.5` -> `19.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-next.5/19.0.0-next.6) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `b606b78` -> `0116693` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.5` -> `19.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-next.5/19.0.0-next.6) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `be0bf8e` -> `00a89e5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-next.6`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-next6-topaz-tornado-2024-09-25)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-next.5...19.0.0-next.6)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9b4085c6e3](https://redirect.github.com/angular/components/commit/9b4085c6e3eee78556000c0f60ef2c51c0668ed9) | feat | **private:** create cdk-visually-hidden style loader ([#&#8203;29757](https://redirect.github.com/angular/components/pull/29757)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d206225c58](https://redirect.github.com/angular/components/commit/d206225c58d071e6cb6b680ef11d1c7bab7a73cc) | feat | **core:** create focus-indicator structural styles loader ([#&#8203;29763](https://redirect.github.com/angular/components/pull/29763)) |\n| [4adc3725dd](https://redirect.github.com/angular/components/commit/4adc3725dd08ef3cf3868f9c752e16c8c1492466) | feat | **schematics:** create v19 core removal schematic ([#&#8203;29768](https://redirect.github.com/angular/components/pull/29768)) |\n| [49af49bb01](https://redirect.github.com/angular/components/commit/49af49bb019b93e48a1f6386a1b0b9ab20989a23) | fix | **datepicker:** set explicit line height on calendar ([#&#8203;29770](https://redirect.github.com/angular/components/pull/29770)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28494","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28494)"},{"Id":"2549532121","IsPullRequest":true,"CreatedAt":"2024-09-26T14:43:13","Actor":"angular-robot","Number":"28495","RawContent":null,"Title":"build: update actions/checkout action to v4.2.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | minor | `v4.1.7` -> `v4.2.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.0`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v420)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.1.7...v4.2.0)\n\n-   Add Ref and Commit outputs by [@&#8203;lucacome](https://redirect.github.com/lucacome) in [https://github.com/actions/checkout/pull/1180](https://redirect.github.com/actions/checkout/pull/1180)\n-   Dependency updates by [@&#8203;dependabot-](https://redirect.github.com/dependabot-) [https://github.com/actions/checkout/pull/1777](https://redirect.github.com/actions/checkout/pull/1777), [https://github.com/actions/checkout/pull/1872](https://redirect.github.com/actions/checkout/pull/1872)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28495","RelatedDescription":"Closed or merged PR \"build: update actions/checkout action to v4.2.0\" (#28495)"},{"Id":"2548887555","IsPullRequest":true,"CreatedAt":"2024-09-26T13:31:54","Actor":"clydin","Number":"28492","RawContent":null,"Title":"refactor(@angular/build): use new encapsulate style helper for HMR","State":"closed","Body":"The `@angular/compiler` package now has an updated `encapsulateStyle` helper\r\nthat allows directly providing the component identifier as an argument.\r\nThis avoids needing to perform an additional regular expression replace\r\nwith the internal marker text.","Url":"https://github.com/angular/angular-cli/pull/28492","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): use new encapsulate style helper for HMR\" (#28492)"},{"Id":"2550362187","IsPullRequest":false,"CreatedAt":"2024-09-26T13:19:54","Actor":"cattermo","Number":"28502","RawContent":null,"Title":"\"Invalid self-closing element in index HTML file\" error when using SVG animate in said index.html file since Angular 18","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.x.x\n\n### Description\n\nWhen fixing this issue https://github.com/angular/angular-cli/issues/27702 it seems like the 'animate' tag was forgotten. \r\nhttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate \r\nSo when using an svg with an animate tag inside index.hml there is an error in the build.\n\n### Minimal Reproduction\n\n```index.html\r\n<!doctype html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n\t<base href=\"/\">\r\n\r\n\t<meta charset=\"utf-8\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n\r\n\t<link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n\t\r\n\t<style type=\"text/css\">\r\n\t\r\n\t</style>\r\n\t\r\n</head>\r\n\r\n<body>\r\n\r\n\r\n\t\t<svg image-rendering=\"auto\" baseProfile=\"basic\" version=\"1.1\" x=\"0px\" y=\"0px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n\t\t\t<g transform=\"scale(0.2 0.2)\">\r\n\t\t\t\t<g >\r\n\t\t\t\t\t<g>\r\n\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t\t<path fill=\"#000\" stroke=\"none\" d=\"M331.75 315.75Q331.75 316.65 332.4 317.3 333.05 318 334 318 334.9 318 335.55 317.3 336.25 316.65 336.25 315.75 336.25 314.85 335.55 314.15 334.9 313.45 334 313.45 333.05 313.45 332.4 314.15 331.75 314.85 331.75 315.75Z\"/>\r\n\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t<animate attributeName=\"display\" repeatCount=\"indefinite\" dur=\"1.92s\" keyTimes=\"0;.896;.917;1\" values=\"none;inline;none;none\"/>\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\r\n\t<app></app>\r\n\r\n</body>\r\n\r\n</html>\r\n\r\n```\n\n### Exception or Error\n\n```text\nInvalid self-closing element in index HTML file: '<animate attributeName=\"display\" repeatCount=\"indefinite\" dur=\"1.92s\" keyTimes=\"0;.896;.917;1\" values=\"none;inline;none;none\"/>'\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 18.2.6\r\nNode: 20.12.2\r\nPackage Manager: npm 10.5.0\r\nOS: darwin arm64\r\n\r\nAngular: 18.2.6\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1802.6\r\n@angular-devkit/build-angular   18.2.6\r\n@angular-devkit/core            18.2.6\r\n@angular-devkit/schematics      18.2.6\r\n@angular/flex-layout            15.0.0-beta.42\r\n@schematics/angular             18.2.6\r\nrxjs                            7.4.0\r\ntypescript                      5.4.5\r\nzone.js                         0.14.10\n```\n\n\n### Anything else relevant?\n\nNo","Url":"https://github.com/angular/angular-cli/issues/28502","RelatedDescription":"Closed issue \"\"Invalid self-closing element in index HTML file\" error when using SVG animate in said index.html file since Angular 18\" (#28502)"},{"Id":"2550525948","IsPullRequest":true,"CreatedAt":"2024-09-26T13:19:53","Actor":"alan-agius4","Number":"28504","RawContent":null,"Title":"fix(@angular/build): add `animate` to valid self-closing elements","State":"closed","Body":"The `<animate>` tag, used for SVG animations, was incorrectly treated as a non-self-closing tag by the Angular build process. This resulted in errors during the build, as the parser expected a closing `</animate>` tag even when unnecessary.\r\n\r\nCloses #28502","Url":"https://github.com/angular/angular-cli/pull/28504","RelatedDescription":"Closed or merged PR \"fix(@angular/build): add `animate` to valid self-closing elements\" (#28504)"},{"Id":"2550493410","IsPullRequest":true,"CreatedAt":"2024-09-26T12:51:16","Actor":"alan-agius4","Number":"28503","RawContent":null,"Title":"perf(@angular/ssr): cache generated inline CSS for HTML","State":"open","Body":"Implement LRU cache for inlined CSS in server-side rendered HTML. \r\n\r\nThis optimization significantly improves server-side rendering performance by reusing previously inlined styles and reducing the overhead of repeated CSS inlining.\r\n\r\nPerformance improvements observed:\r\n* **Latency:** Reduced by ~18.1% (from 1.01s to 827.47ms)\r\n* **Requests per Second:** Increased by ~24.1% (from 381.16 to 472.85)\r\n* **Transfer per Second:** Increased by ~24.1% (from 0.87MB to 1.08MB) \r\n\r\nThese gains demonstrate the effectiveness of caching inlined CSS for frequently accessed pages, resulting in a faster and more efficient user experience.\r\n___\r\n\r\n**Edit**:  Previously the numbers were calculated not using the Average but the Max.","Url":"https://github.com/angular/angular-cli/pull/28503","RelatedDescription":"Open PR \"perf(@angular/ssr): cache generated inline CSS for HTML\" (#28503)"},{"Id":"2549757323","IsPullRequest":false,"CreatedAt":"2024-09-26T07:39:02","Actor":"ramkumar-SHS","Number":"28499","RawContent":null,"Title":"ng update not working for a multi workspace angular project","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n- Try updating angular with a multi workspace angular project.\r\n- If you run ng update in the location where the root/common package.json is present, it throws an error saying 'this is not an angular workspace.\r\n- If run ng update inside any one of the workspace, we get the error saying \"angular cli is not available.\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nexpected:\r\nng update should be updating in the location where the root/common package.json is present\r\n\r\nActual:\r\nit throws an error saying 'this is not an angular workspace.\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28499","RelatedDescription":"Closed issue \"ng update not working for a multi workspace angular project\" (#28499)"},{"Id":"2549709441","IsPullRequest":true,"CreatedAt":"2024-09-26T07:16:34","Actor":"angular-robot","Number":"28498","RawContent":null,"Title":"build: update dependency @types/express to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/express](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/express) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/express)) | dependencies | major | [`^4.17.17` -> `^5.0.0`](https://renovatebot.com/diffs/npm/@types%2fexpress/4.17.21/5.0.0) |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28498","RelatedDescription":"Closed or merged PR \"build: update dependency @types/express to v5\" (#28498)"},{"Id":"2549617630","IsPullRequest":true,"CreatedAt":"2024-09-26T06:48:07","Actor":"angular-robot","Number":"28497","RawContent":null,"Title":"build: update dependency @types/express to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/express](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/express) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/express)) | devDependencies | major | [`^4.16.0` -> `^5.0.0`](https://renovatebot.com/diffs/npm/@types%2fexpress/4.17.21/5.0.0) |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28497","RelatedDescription":"Closed or merged PR \"build: update dependency @types/express to v5\" (#28497)"},{"Id":"2549617500","IsPullRequest":true,"CreatedAt":"2024-09-26T06:16:52","Actor":"angular-robot","Number":"28496","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | minor | `v4.1.7` -> `v4.2.0` |\n| [aspect_bazel_lib](https://redirect.github.com/aspect-build/bazel-lib) | http_archive | patch | `v2.9.0` -> `v2.9.1` |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | dependencies | minor | [`5.33.0` -> `5.34.0`](https://renovatebot.com/diffs/npm/terser/5.33.0/5.34.0) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | devDependencies | minor | [`5.33.0` -> `5.34.0`](https://renovatebot.com/diffs/npm/terser/5.33.0/5.34.0) |\n| [webpack](https://redirect.github.com/webpack/webpack) | devDependencies | minor | [`5.94.0` -> `5.95.0`](https://renovatebot.com/diffs/npm/webpack/5.94.0/5.95.0) |\n| [webpack](https://redirect.github.com/webpack/webpack) | dependencies | minor | [`5.94.0` -> `5.95.0`](https://renovatebot.com/diffs/npm/webpack/5.94.0/5.95.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.0`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v420)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.1.7...v4.2.0)\n\n-   Add Ref and Commit outputs by [@&#8203;lucacome](https://redirect.github.com/lucacome) in [https://github.com/actions/checkout/pull/1180](https://redirect.github.com/actions/checkout/pull/1180)\n-   Dependency updates by [@&#8203;dependabot-](https://redirect.github.com/dependabot-) [https://github.com/actions/checkout/pull/1777](https://redirect.github.com/actions/checkout/pull/1777), [https://github.com/actions/checkout/pull/1872](https://redirect.github.com/actions/checkout/pull/1872)\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib (aspect_bazel_lib)</summary>\n\n### [`v2.9.1`](https://redirect.github.com/bazel-contrib/bazel-lib/releases/tag/v2.9.1)\n\n[Compare Source](https://redirect.github.com/aspect-build/bazel-lib/compare/v2.9.0...v2.9.1)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"2.9.1\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your `WORKSPACE` file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"f93d386d8d0b0149031175e81df42a488be4267c3ca2249ba5321c23c60bc1f0\",\n    strip_prefix = \"bazel-lib-2.9.1\",\n    url = \"https://github.com/bazel-contrib/bazel-lib/releases/download/v2.9.1/bazel-lib-v2.9.1.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\", \"aspect_bazel_lib_register_toolchains\")\n\n### Required bazel-lib dependencies\n\naspect_bazel_lib_dependencies()\n\n### Register bazel-lib toolchains\n\naspect_bazel_lib_register_toolchains()\n\n```\n\n#### What's Changed\n\n-   fix: declare host_platform as non-dev dep by [@&#8203;jbedard](https://redirect.github.com/jbedard) in [https://github.com/bazel-contrib/bazel-lib/pull/945](https://redirect.github.com/bazel-contrib/bazel-lib/pull/945)\n-   fix(presets): restore build runfile links for the 'coverage' command by [@&#8203;alexeagle](https://redirect.github.com/alexeagle) in [https://github.com/bazel-contrib/bazel-lib/pull/943](https://redirect.github.com/bazel-contrib/bazel-lib/pull/943)\n\n**Full Changelog**: https://github.com/bazel-contrib/bazel-lib/compare/v2.9.0...v2.9.1\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.34.0`](https://redirect.github.com/terser/terser/blob/HEAD/CHANGELOG.md#v5340)\n\n[Compare Source](https://redirect.github.com/terser/terser/compare/v5.33.0...v5.34.0)\n\n-   internal: stop assigning properties to objects they don't belong in\n-   internal: run compress tests in parallel\n-   `drop_console`: emit an empty function if the return value of `console.METHOD(...)` may be called.\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n### [`v5.95.0`](https://redirect.github.com/webpack/webpack/releases/tag/v5.95.0)\n\n[Compare Source](https://redirect.github.com/webpack/webpack/compare/v5.94.0...v5.95.0)\n\n##### Bug Fixes\n\n-   Fixed hanging when attempting to read a symlink-like file that it can't read\n-   Handle `default` for import context element dependency\n-   Merge duplicate chunks call after split chunks\n-   Generate correctly code for dynamically importing the same file twice and destructuring\n-   Use content hash as \\[base] and \\[name] for extracted DataURI's\n-   Distinguish `module` and `import` in `module-import` for externals `import`'s\n-   \\[Types] Make `EnvironmentPlugin` default values types less strict\n-   \\[Types] Typescript 5.6 compatibility\n\n##### New Features\n\n-   Add new `optimization.entryIife` option (`true` by default for the `production` mode)\n-   Pass output.hash\\* options to loader context\n\n##### Performance\n\n-   Avoid unneeded re-visit in build chunk graph\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28496","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#28496)"},{"Id":"2548320043","IsPullRequest":true,"CreatedAt":"2024-09-25T17:02:43","Actor":"clydin","Number":"28491","RawContent":null,"Title":"docs: release notes for the v18.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28491","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.6 release\" (#28491)"},{"Id":"2548244060","IsPullRequest":true,"CreatedAt":"2024-09-25T15:32:01","Actor":"clydin","Number":"28490","RawContent":null,"Title":"Bump version to \"v18.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28490","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.6\" with changelog.\" (#28490)"},{"Id":"2547523763","IsPullRequest":true,"CreatedAt":"2024-09-25T15:08:43","Actor":"alan-agius4","Number":"28486","RawContent":null,"Title":"fix(@angular/ssr): export `RESPONSE_INIT`, `REQUEST`, and `REQUEST_CONTEXT` tokens","State":"closed","Body":"\r\n\r\nThis commit exports that the `RESPONSE_INIT`, `REQUEST`, and `REQUEST_CONTEXT` tokens.\r\n","Url":"https://github.com/angular/angular-cli/pull/28486","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): export `RESPONSE_INIT`, `REQUEST`, and `REQUEST_CONTEXT` tokens\" (#28486)"},{"Id":"2548217737","IsPullRequest":true,"CreatedAt":"2024-09-25T14:53:39","Actor":"clydin","Number":"28489","RawContent":null,"Title":"docs: release notes for the v17.3.10 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28489","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.10 release\" (#28489)"},{"Id":"2548171497","IsPullRequest":true,"CreatedAt":"2024-09-25T14:48:40","Actor":"clydin","Number":"28488","RawContent":null,"Title":"Bump version to \"v17.3.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28488","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.10\" with changelog.\" (#28488)"},{"Id":"2548020767","IsPullRequest":true,"CreatedAt":"2024-09-25T13:53:03","Actor":"clydin","Number":"28487","RawContent":null,"Title":"test: update E2E snapshot versions to stable v17.3.x","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28487","RelatedDescription":"Closed or merged PR \"test: update E2E snapshot versions to stable v17.3.x\" (#28487)"},{"Id":"2547138940","IsPullRequest":true,"CreatedAt":"2024-09-25T13:46:29","Actor":"alan-agius4","Number":"28484","RawContent":null,"Title":"refactor(@angular/build): add `NG_BUILD_PARTIAL_SSR` environment variable to disable prerendering and manifest generation","State":"closed","Body":"\r\n\r\nThis change allows for forced disabling of prerendering and route extraction when using Vite with Angular CLI. In certain scenarios, such as when the application builder is invoked directly and not in watch mode (e.g. ADEV), an external configuration may be necessary.\r\n","Url":"https://github.com/angular/angular-cli/pull/28484","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add `NG_BUILD_PARTIAL_SSR` environment variable to disable prerendering and manifest generation\" (#28484)"},{"Id":"2547049977","IsPullRequest":true,"CreatedAt":"2024-09-25T13:45:56","Actor":"alan-agius4","Number":"28483","RawContent":null,"Title":"test: delay file modifications to mitigate flaky tests","State":"closed","Body":"Introduce a delay in amending files during tests to reduce flakiness.\r\n","Url":"https://github.com/angular/angular-cli/pull/28483","RelatedDescription":"Closed or merged PR \"test: delay file modifications to mitigate flaky tests\" (#28483)"},{"Id":"2546947743","IsPullRequest":true,"CreatedAt":"2024-09-25T13:13:15","Actor":"angular-robot","Number":"28482","RawContent":null,"Title":"build: update github/codeql-action action to v3.26.9","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.26.8` -> `v3.26.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.26.9`](https://redirect.github.com/github/codeql-action/compare/v3.26.8...v3.26.9)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.8...v3.26.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC45NC4xIiwidXBkYXRlZEluVmVyIjoiMzguOTQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28482","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.26.9\" (#28482)"},{"Id":"2547292570","IsPullRequest":true,"CreatedAt":"2024-09-25T08:13:02","Actor":"alan-agius4","Number":"28485","RawContent":null,"Title":"refactor(@schematics/angular): Remove Webpack Support from App-Shell and SSR Schematics","State":"open","Body":"\r\n\r\nThis change is in preparation for supporting schematics that utilize the new Server Routing Configuration API, which is exclusively compatible with the application builder.\r\n\r\nBREAKING CHANGE: The App-Shell and SSR schematics are no longer compatible with Webpack-based builders.","Url":"https://github.com/angular/angular-cli/pull/28485","RelatedDescription":"Open PR \"refactor(@schematics/angular): Remove Webpack Support from App-Shell and SSR Schematics\" (#28485)"},{"Id":"2546134609","IsPullRequest":true,"CreatedAt":"2024-09-24T19:42:55","Actor":"jkrems","Number":"28480","RawContent":null,"Title":"fix(@angular/build): update rollup to 4.22.4","State":"closed","Body":"Contains fix for CVE-2024-47068.\r\n\r\nSee: https://github.com/advisories/GHSA-gcx4-mw62-g8wm\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n```\r\nyarn up rollup@4.22.4\r\n```\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nRollup version is affected by a CVE.\r\n\r\nIssue Number: https://github.com/angular/angular-cli/issues/28478\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28480","RelatedDescription":"Closed or merged PR \"fix(@angular/build): update rollup to 4.22.4\" (#28480)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2551775914","IsPullRequest":true,"CreatedAt":"2024-09-27T00:46:01","Actor":"naaajii","Number":"29794","RawContent":null,"Title":"fix(material/bottom-sheet): add `height` `minHeight` `maxHeight` to config","State":"open","Body":"these properties were missing from the config but still worked as they were passed to dialog under the hood to avoid type errors\r\n\r\nfixes #28832","Url":"https://github.com/angular/components/pull/29794","RelatedDescription":"Open PR \"fix(material/bottom-sheet): add `height` `minHeight` `maxHeight` to config\" (#29794)"},{"Id":"2543959611","IsPullRequest":true,"CreatedAt":"2024-09-26T11:47:18","Actor":"naaajii","Number":"29779","RawContent":null,"Title":"feat(material/tabs): add `alignTabs` in `MatTabsConfig`","State":"closed","Body":"users can align tabs label via config now rather than adding `mat-tab-align` property on each tab group\r\n\r\nfixes #29685","Url":"https://github.com/angular/components/pull/29779","RelatedDescription":"Closed or merged PR \"feat(material/tabs): add `alignTabs` in `MatTabsConfig`\" (#29779)"},{"Id":"2549718747","IsPullRequest":true,"CreatedAt":"2024-09-26T07:14:14","Actor":"crisbeto","Number":"29793","RawContent":null,"Title":"Chips focus issues","State":"open","Body":"Resolves a couple of issues with how focus is managed in the chips. Includes: \r\n\r\n### fix(material/chips): chip grid not re-focusing first item\r\nThere was some logic that assumed that if a chip is the active item in the key manager, it must have focus. That's incorrect since the active item isn't reset on blur. This prevented the chip grid from re-focusing the first chip when the user tabs into it a second time.\r\n\r\nThese changes add a `focus` call whenever the grid receives focus.\r\n\r\nFixes #29785.\r\n\r\n### fix(material/chips): focus escape not working consistently\r\nFixes that the chip grid was using change detection to allow focus to escape on tab presses. That's unreliable, because change detection might not be executed immediately. These changes fix the issue by changing the DOM node directly.","Url":"https://github.com/angular/components/pull/29793","RelatedDescription":"Open PR \"Chips focus issues\" (#29793)"},{"Id":"2547050549","IsPullRequest":false,"CreatedAt":"2024-09-26T06:43:06","Actor":"Urvishdudhagara","Number":"29787","RawContent":null,"Title":"google.maps.importLibrary Not Working in Firefox Private Window","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n When opening the application for the first time in a Firefox private window, the following error is thrown:\r\n \r\n ERROR TypeError: google.maps.importLibrary is not a function\r\n \r\n This issue occurs consistently in Firefox's private mode but seems to work fine in other browsers and regular Firefox windows.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\n- Open Firefox in private mode.\r\n- Navigate to the application that uses google.maps.importLibrary for loading Google Maps libraries.\r\n- Observe the error in the console.\r\n\r\n### Expected Behavior\r\n\r\ngoogle.maps.importLibrary should work in Firefox private mode, and Google Maps libraries should load -without throwing an error.\r\n\r\n\r\n### Actual Behavior\r\n\r\nThe function google.maps.importLibrary is not recognised, leading to a TypeError.\r\n\r\n\r\n### Environment\r\n\r\nBrowser: Firefox (Private Mode)\r\nGoogle Maps API version: [provide your version here]\r\nAngular version: [provide your Angular version here]\r\nOperating System: [provide OS details]\r\nAdditional Information:\r\n","Url":"https://github.com/angular/components/issues/29787","RelatedDescription":"Closed issue \"google.maps.importLibrary Not Working in Firefox Private Window\" (#29787)"},{"Id":"2548803550","IsPullRequest":true,"CreatedAt":"2024-09-25T19:21:48","Actor":"amysorto","Number":"29792","RawContent":null,"Title":"Bump version to \"v19.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29792","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.6\" with changelog.\" (#29792)"},{"Id":"2548783298","IsPullRequest":true,"CreatedAt":"2024-09-25T19:10:30","Actor":"amysorto","Number":"29791","RawContent":null,"Title":"docs: release notes for the v18.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29791","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.6 release\" (#29791)"},{"Id":"2548773177","IsPullRequest":true,"CreatedAt":"2024-09-25T19:06:23","Actor":"amysorto","Number":"29790","RawContent":null,"Title":"Bump version to \"v18.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29790","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.6\" with changelog.\" (#29790)"},{"Id":"2548278168","IsPullRequest":true,"CreatedAt":"2024-09-25T15:23:50","Actor":"devversion","Number":"29789","RawContent":null,"Title":"refactor: migrate example inputs to signal inputs","State":"closed","Body":"This commit was generated using the signal input migration.","Url":"https://github.com/angular/components/pull/29789","RelatedDescription":"Closed or merged PR \"refactor: migrate example inputs to signal inputs\" (#29789)"},{"Id":"2544981645","IsPullRequest":true,"CreatedAt":"2024-09-25T09:06:05","Actor":"matikowi","Number":"29780","RawContent":null,"Title":"docs(material/datepicker): Fixed typo in date-range-picker-selection-…","State":"closed","Body":"…strategy-example\r\n\r\nCurrent description is not gramatically correct","Url":"https://github.com/angular/components/pull/29780","RelatedDescription":"Closed or merged PR \"docs(material/datepicker): Fixed typo in date-range-picker-selection-…\" (#29780)"},{"Id":"2547162381","IsPullRequest":false,"CreatedAt":"2024-09-25T07:19:10","Actor":"perotom","Number":"29788","RawContent":null,"Title":"bug(BADGE): Content truncated","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\n![Screenshot 2024-09-25 at 09 16 09](https://github.com/user-attachments/assets/d6ff47cf-cf82-42f8-a6fc-da8012643c68)\r\n\n\n### Reproduction\n\nJust take a look at the latest version: https://material.angular.io/components/badge/overview\n\n### Expected Behavior\n\nBadge should grow based on content\n\n### Actual Behavior\n\nOnly shows one letter, rest is truncated.\n\n### Environment\n\n- Angular: 18.2\r\n- CDK/Material: 18.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/29788","RelatedDescription":"Open issue \"bug(BADGE): Content truncated\" (#29788)"},{"Id":"2537246226","IsPullRequest":true,"CreatedAt":"2024-09-25T00:05:04","Actor":"wagnermaciel","Number":"29768","RawContent":null,"Title":"feat(material/schematics): create v19 core removal schematic","State":"closed","Body":"* Removes uses of the core mixin and replaces them with two mixins. One to generate the mat-app-background class, and one to generate the mat-elevation classes.","Url":"https://github.com/angular/components/pull/29768","RelatedDescription":"Closed or merged PR \"feat(material/schematics): create v19 core removal schematic\" (#29768)"},{"Id":"2546445417","IsPullRequest":true,"CreatedAt":"2024-09-24T22:13:36","Actor":"wagnermaciel","Number":"29786","RawContent":null,"Title":"refactor: create mixins for core classes","State":"closed","Body":"* This is an intermediary step so we can roll out calls to these empty mixins progressively.\r\n* Once all of the instances of mat.core have been updated to also call mat.app-background and mat.elevation-classes we can move the styles over without breaking any clients","Url":"https://github.com/angular/components/pull/29786","RelatedDescription":"Closed or merged PR \"refactor: create mixins for core classes\" (#29786)"},{"Id":"2546096492","IsPullRequest":false,"CreatedAt":"2024-09-24T18:38:21","Actor":"clamli","Number":"29785","RawContent":null,"Title":"bug(MatChipGrid): The focus indicator is not displayed for the chip grid when navigating through a MatChipGrid component the second time","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe focus indicator is not displayed for the chip grid when navigating through a MatChipGrid component the second and subsequent time.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/run?file=package.json\r\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/chips/overview#chips-input\r\n2. Tab through this MatChipGrid example\r\n3. Click anywhere on the page to reset the focus\r\n4. Tab through the example again\r\n5. Notice that the focus indicator is not rendered around the chip grid the second time\r\n\n\n### Expected Behavior\n\nThe focus indicator should always be displayed around the chip grid when navigating through.\n\n### Actual Behavior\n\nThe focus indicator is not rendered around the chip grid the second (and subsequent) time.\n\n### Environment\n\n- Angular:\r\n- CDK/Material: 18.2.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/29785","RelatedDescription":"Open issue \"bug(MatChipGrid): The focus indicator is not displayed for the chip grid when navigating through a MatChipGrid component the second time\" (#29785)"},{"Id":"2545852303","IsPullRequest":false,"CreatedAt":"2024-09-24T16:26:52","Actor":"miszol1","Number":"29784","RawContent":null,"Title":"bug(TABLE): cell with mat-cell directive is missing role=\"cell\" attribute","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.14\n\n### Description\n\nWhen using mat-table and mat-cell it used to have role=\"cell\" for each cell in the table. Now there is not role attribute in cell elements.\n\n### Reproduction\n\nReproduction link: https://v17.material.angular.io/components/table/examples\r\nYou can check examples in 'Examples' tab on official docs website. \r\nSteps to reproduce:\r\n1. Inspect any cell in table and you will find that there is no role=\"cell\" attribute.\r\n\r\nPrevious version with expected behavior: https://v16.material.angular.io/components/table/examples\r\nSteps to reproduce:\r\n1. Inspect any cell in table and you will find that there is role=\"cell\" attribute.\n\n### Expected Behavior\n\nCell has role=\"cell\" attribute.\n\n### Actual Behavior\n\nCell does not have role=\"cell\" attribute.\n\n### Environment\n\n- Angular: 17.3.12\r\n- CDK/Material: 17.3.10\r\n- Browser(s): Google Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/29784","RelatedDescription":"Open issue \"bug(TABLE): cell with mat-cell directive is missing role=\"cell\" attribute\" (#29784)"},{"Id":"2545547532","IsPullRequest":false,"CreatedAt":"2024-09-24T14:18:19","Actor":"gremlin896","Number":"29783","RawContent":null,"Title":"bug(MatChipOption): Unable to disable individual mat-chip-option when used inside a form tag and with template-driven forms","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`[disabled]` used on a `mat-chip-option` that is part of a `mat-chip-listbox` is ignored when used with template-driven forms and is there is a parent `form` tag used.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/84akr3-apxcdy\r\n\r\nTwo identical examples, but the first example is enclosed within `<form>`\n\n### Expected Behavior\n\nIn the first example, the first option should be disabled. As it is in the second example\n\n### Actual Behavior\n\nIn the first example, the first option is not disabled.\n\n### Environment\n\nAngular CLI: 19.0.0-next.2\r\nNode: 18.20.3\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 19.0.0-next.2\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, localize, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1900.0-next.2\r\n@angular-devkit/build-angular   19.0.0-next.2\r\n@angular-devkit/core            19.0.0-next.2\r\n@angular-devkit/schematics      19.0.0-next.2\r\n@schematics/angular             19.0.0-next.2\r\nrxjs                            7.4.0\r\ntypescript                      5.5.4\r\nzone.js                         0.15.0","Url":"https://github.com/angular/components/issues/29783","RelatedDescription":"Open issue \"bug(MatChipOption): Unable to disable individual mat-chip-option when used inside a form tag and with template-driven forms\" (#29783)"},{"Id":"2545472189","IsPullRequest":true,"CreatedAt":"2024-09-24T13:49:37","Actor":"YoutacRandS-VA","Number":"29782","RawContent":null,"Title":"VedariusARussell","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29782","RelatedDescription":"Closed or merged PR \"VedariusARussell\" (#29782)"},{"Id":"2538045427","IsPullRequest":true,"CreatedAt":"2024-09-24T13:34:23","Actor":"crisbeto","Number":"29770","RawContent":null,"Title":"fix(material/datepicker): set explicit line height on calendar","State":"closed","Body":"Sets a `line-height` on the calendar, otherwise it inherits the one from the `body` which can throw off the layout.\r\n\r\nFixes #29756.","Url":"https://github.com/angular/components/pull/29770","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): set explicit line height on calendar\" (#29770)"},{"Id":"2545128849","IsPullRequest":false,"CreatedAt":"2024-09-24T11:27:05","Actor":"naithagoni","Number":"29781","RawContent":null,"Title":"bug(Stepper): Stepper `reset()` Method Marks Form Controls as `Touched/Dirty`, Triggering Validation Errors","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `reset()` method of Angular Material's `mat-stepper` component is expected to reset the stepper and associated form groups to their initial state, clearing any user input and resetting form validation states. However, when using the `reset()` method with reactive forms, the form controls are unexpectedly marked as `touched` or `dirty`, causing **validation errors** to display immediately. This behavior is not intuitive and negatively impacts user experience, as the form appears to have errors even though no user interaction has occurred post-reset.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create a stepper with multiple steps using Angular Material and reactive forms.\r\n2. Assign required validators to form controls in each step.\r\n3. Complete the stepper steps, then use the `reset()` method on the stepper to reset it.\r\n4. Observe that form controls are marked as `touched` or `dirty` even though the stepper was reset, and validation errors are displayed.\r\n5. Alternatively, you can also use the native `mat-stepper`: https://material.angular.io/components/stepper/examples#stepper-errors\r\n\r\n\n\n### Expected Behavior\n\nAfter calling `stepper.reset()`, all form controls should be reset to their initial state, marked as pristine and untouched. No validation errors should be displayed until the user interacts with the form controls again.\r\n\r\n\n\n### Actual Behavior\n\nCalling `stepper.reset()` resets the stepper and form groups but marks all form controls as `touched` or `dirty`, triggering validation errors to display immediately.\n\n### Environment\n\n- Angular: `18.1.1`\r\n- CDK/Material: `18.1.1`\r\n- Browser(s): `Google Chrome`_(Version 127.0.6533.73 (Official Build) (arm64))_\r\n- Operating System (e.g. Windows, macOS, Ubuntu): `macOS(Sonoma 14.7)`, _Apple M1_\r\n","Url":"https://github.com/angular/components/issues/29781","RelatedDescription":"Open issue \"bug(Stepper): Stepper `reset()` Method Marks Form Controls as `Touched/Dirty`, Triggering Validation Errors\" (#29781)"},{"Id":"2540752632","IsPullRequest":true,"CreatedAt":"2024-09-24T06:28:37","Actor":"crisbeto","Number":"29775","RawContent":null,"Title":"refactor(youtube-player): switch to inject function","State":"closed","Body":"Reworks the `youtube-player` to use the `inject` function instead of constructor-based injection.","Url":"https://github.com/angular/components/pull/29775","RelatedDescription":"Closed or merged PR \"refactor(youtube-player): switch to inject function\" (#29775)"},{"Id":"2543298796","IsPullRequest":true,"CreatedAt":"2024-09-23T17:58:08","Actor":"wagnermaciel","Number":"29778","RawContent":null,"Title":"refactor: move classes out of core","State":"open","Body":"* Moves the mat-app-background class out of core\r\n* Moves the mat-elevation-* classes out of core","Url":"https://github.com/angular/components/pull/29778","RelatedDescription":"Open PR \"refactor: move classes out of core\" (#29778)"},{"Id":"2537084758","IsPullRequest":true,"CreatedAt":"2024-09-23T17:53:39","Actor":"wagnermaciel","Number":"29766","RawContent":null,"Title":"refactor: move mat-elevation-* classes out of core","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29766","RelatedDescription":"Closed or merged PR \"refactor: move mat-elevation-* classes out of core\" (#29766)"},{"Id":"2537061637","IsPullRequest":true,"CreatedAt":"2024-09-23T17:53:35","Actor":"wagnermaciel","Number":"29765","RawContent":null,"Title":"refactor: move mat-app-background out of core","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29765","RelatedDescription":"Closed or merged PR \"refactor: move mat-app-background out of core\" (#29765)"},{"Id":"2543202768","IsPullRequest":true,"CreatedAt":"2024-09-23T17:06:03","Actor":"jacob-noble","Number":"29777","RawContent":null,"Title":"fix(cdk/scrolling): virtual scroll flickers in zoneless mode.","State":"open","Body":"When `provideExperimentalZonelessChangeDetection` is enabled, virtual-scroll-viewport flickers during scroll because the transform operation becomes visible. This fix moves the style transform into the `afterNextRender` phase to ensure it stays invisible.\r\n\r\nFixes #29174","Url":"https://github.com/angular/components/pull/29777","RelatedDescription":"Open PR \"fix(cdk/scrolling): virtual scroll flickers in zoneless mode.\" (#29777)"},{"Id":"2540039088","IsPullRequest":true,"CreatedAt":"2024-09-23T16:54:16","Actor":"crisbeto","Number":"29774","RawContent":null,"Title":"refactor(google-maps): switch to inject function","State":"closed","Body":"Reworks the Google Maps module to use the `inject` function instead of constructor-based injection.","Url":"https://github.com/angular/components/pull/29774","RelatedDescription":"Closed or merged PR \"refactor(google-maps): switch to inject function\" (#29774)"},{"Id":"2542718712","IsPullRequest":false,"CreatedAt":"2024-09-23T13:48:25","Actor":"LukasSefcik","Number":"29776","RawContent":null,"Title":"bug(cdkMenu): cdkMenu is scrolled down when max-height is set","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using max-height on cdkMenu with overflow-y: auto, menu is scrolled down a bit when first shown.\r\nBad:\r\n![image](https://github.com/user-attachments/assets/de4088d6-9839-4b10-afc6-4c55f287a2a1)\r\nGood:\r\n![image](https://github.com/user-attachments/assets/a72de3ed-76a1-4f4f-b5ea-815fec658a56)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gbirs4?file=src/example/cdk-menu-standalone-menu-example.html,src/example/cdk-menu-standalone-menu-example.css\r\nSteps to reproduce:\r\n1. Add cdk menu with options with at least one cdkMenuHeaderItem.\r\n2. Set max-height on cdkMenu.\r\n3. Open menu.\r\n\n\n### Expected Behavior\n\nMenu should not be scrolled at all.\n\n### Actual Behavior\n\nMenu is scrolled a bit down.\n\n### Environment\n\n- Angular: 18.2.2\r\n- CDK/Material: 18.2.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/29776","RelatedDescription":"Open issue \"bug(cdkMenu): cdkMenu is scrolled down when max-height is set\" (#29776)"},{"Id":"2538074579","IsPullRequest":true,"CreatedAt":"2024-09-20T07:20:34","Actor":"crisbeto","Number":"29773","RawContent":null,"Title":"docs: release notes for the v18.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29773","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.5 release\" (#29773)"},{"Id":"2538071543","IsPullRequest":true,"CreatedAt":"2024-09-20T07:18:10","Actor":"crisbeto","Number":"29772","RawContent":null,"Title":"Bump version to \"v18.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29772","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.5\" with changelog.\" (#29772)"},{"Id":"2538060928","IsPullRequest":true,"CreatedAt":"2024-09-20T07:12:33","Actor":"crisbeto","Number":"29771","RawContent":null,"Title":"Bump version to \"v19.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29771","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.5\" with changelog.\" (#29771)"},{"Id":"2537446273","IsPullRequest":false,"CreatedAt":"2024-09-19T23:49:27","Actor":"mrshllstock","Number":"29769","RawContent":null,"Title":"bug(form_field): Autofill pseudo-selector is not dark mode responsive","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`mat-form-field` has the ability to apply the `:autofill` pseudo-selector, which Chrome's current user agent stylesheet has \r\n```\r\ninput:internal-autofill-selected {\r\n    appearance: menulist-button;\r\n    background-image: none !important;\r\n    background-color: light-dark(rgb(232, 240, 254), rgba(70, 90, 126, 0.4)) !important;\r\n    color: fieldtext !important;\r\n}\r\n```\r\n\r\nThe infrastructure to support light and dark contexts in GM2/GM3 do not assign `color-scheme: light/dark`, which causes these [system-colors](https://developer.mozilla.org/en-US/docs/Web/CSS/system-color) to be unresponsive to the currently selected color-context. \r\n\r\nI'm not entirely sure at which point a framework is capable of over-riding user agent stylesheets, but the framework should be accepting and work with these new settings when the infrastructure already has controls to choose between these contexts to have a less breaking experience.\r\n\r\n### Reproduction\r\n\r\nMaterial demo:  https://material.angular.io/components/form-field/overview#form-field-overview\r\n1. Select either of the dark themes on the page (I chose magenta and violet)\r\n2. Enter text into any of the form fields\r\n3. Force the :autofill pseudo selector to be enabled via dev-console\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nI would expect to see lighter colored font and a darker background-color\r\n\r\nThis can be achieved by following the above example and then\r\n4. assign `color-scheme: dark` to any parent to the <input> element.\r\n\r\n![image](https://github.com/user-attachments/assets/089574f8-5ba3-4dd0-a5e4-eb17b2db5593)\r\n\r\n\r\n### Actual Behavior\r\n\r\n5. Note that the color and background-color of the input field have been changed to [system-color](https://developer.mozilla.org/en-US/docs/Web/CSS/system-color):` fieldtext` and `background-color:light-dark(hex,hex)`\r\n6. The colors are non-compatible with dark theme contexts\r\n\r\n![image](https://github.com/user-attachments/assets/f2a768cd-141b-4bc9-a739-a38c6b030cb3)\r\n\r\n### Environment\r\n\r\n- Angular: 18\r\n- CDK/Material: 18.2.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/29769","RelatedDescription":"Closed issue \"bug(form_field): Autofill pseudo-selector is not dark mode responsive\" (#29769)"},{"Id":"2537158790","IsPullRequest":false,"CreatedAt":"2024-09-19T19:04:13","Actor":"slivniy","Number":"29767","RawContent":null,"Title":"bug(MatSlider): MatSliderThumb stays active after drag ending","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen you start dragging slider **MatSliderThumb** became active. Sometimes, it doesn't loose active state, when you ending dragging.  It stays active even after click outside.  Only way to 'release' it - drag it again.\r\n\r\nWithin this issue **dragStart** event is fired, but **dragEnd** not. Variable **_isActive** of MatSliderThumb stays true.\r\nThat leads to inconsistence of MatSliderThumb view (it looks as active all time) and **makes setting it's value programmatically impossible** (if you are trying to set Value from component).\r\n\r\nBug is not stable but can be easily reproduced at official doc examples.\r\nMostly occur, when dragging ends little lower than MatSliderThumb position.\r\n\r\nhttps://github.com/user-attachments/assets/77b99e5e-5bb4-4a47-9442-d7a3fbd5e423\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/ikftbm?file=src%2Fexample%2Fslider-overview-example.html\r\nSteps to reproduce:\r\n1. Drag slider a little \r\n2. Release on bottom side\r\n\r\n### Expected Behavior\r\n\r\ndragEnd should be fired each time when user actually ending it.\r\n\r\n### Actual Behavior\r\n\r\nSometimes dragEnd event is not fired after actual dragging end.\r\n\r\n### Environment\r\n\r\n- Angular: 18\r\n- CDK/Material: 18\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/29767","RelatedDescription":"Open issue \"bug(MatSlider): MatSliderThumb stays active after drag ending\" (#29767)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-09-27T03:30:02.8392352Z","RunDurationInMilliseconds":1784}