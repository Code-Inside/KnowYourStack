{"Data":{"Angular-Issues":{"Issues":[{"Id":"1911676631","IsPullRequest":false,"CreatedAt":"2023-09-26T02:20:51","Actor":"JeanMeche","Number":"51888","RawContent":null,"Title":"multi:true token no injected in NgModule when boostraping a standalone component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nSuppose we have a token, that is provided multiple times with `multi:true` : \r\n\r\n```ts\r\nconst TOKEN = new InjectionToken<number[]>('test');\r\n\r\n@Component({ selector: 'test', template: 'Tokens: {{tokens}}' })\r\nexport class TestComponent {\r\n  constructor(@Inject(TOKEN) public tokens: number[]) {}\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TestComponent],\r\n  exports: [TestComponent],\r\n  providers: [{ provide: TOKEN, useValue: 'foo', multi: true }],\r\n})\r\nexport class MyModule {}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [MyModule],\r\n  template: `\r\n    Expects foo & bar values but ....\r\n\r\n    <test />\r\n  `,\r\n})\r\nexport class App {}\r\n\r\nbootstrapApplication(App, {\r\n  providers: [{ provide: TOKEN, useValue: 'bar', multi: true }],\r\n});\r\n```\r\nIn the case of a standalone app, the `TestComponent` will only display `foo`. \r\n\r\nBut if we bootstrap an NgModule instead of the standalone component, \r\n\r\n```ts\r\n@NgModule({\r\n  declarations: [App],\r\n  bootstrap: [App],\r\n  imports:[MyModule, BrowserModule,],\r\n  providers: [{ provide: TOKEN, useValue: 'bar', multi: true }],\r\n})\r\nexport class AppModule {}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n```\r\nthe `TestComponent`  will display `foo, bar`. \r\n\r\nI understand this is likely related to #47460 but I'm kind of surprised that we have 2 different behaviors for something seemingly equivalent. \r\n\r\nWdty ? \r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-multi-provider-standalone?file=src%2Fmain.ts\r\n","Url":"https://github.com/angular/angular/issues/51888","RelatedDescription":"Closed issue \"multi:true token no injected in NgModule when boostraping a standalone component\" (#51888)"},{"Id":"1912448641","IsPullRequest":true,"CreatedAt":"2023-09-25T23:49:51","Actor":"angular-robot","Number":"51896","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"open","Body":"Updated Angular CLI help contents.\n\nCloses #51890","Url":"https://github.com/angular/angular/pull/51896","RelatedDescription":"Open PR \"docs: update Angular CLI help [main]\" (#51896)"},{"Id":"1911884121","IsPullRequest":true,"CreatedAt":"2023-09-25T23:49:50","Actor":"angular-robot","Number":"51890","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51890","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51890)"},{"Id":"1912435994","IsPullRequest":true,"CreatedAt":"2023-09-25T23:48:58","Actor":"AndrewKushnir","Number":"51895","RawContent":null,"Title":"test(core): disable flaky tests temporarily","State":"closed","Body":"This commit disables a couple newly-added tests related to `on idle` trigger condition for @defer blocks. Tests would be re-enabled back once we identify the reason of flakiness and fix it.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51895","RelatedDescription":"Closed or merged PR \"test(core): disable flaky tests temporarily\" (#51895)"},{"Id":"1912399844","IsPullRequest":true,"CreatedAt":"2023-09-25T23:00:08","Actor":"AndrewKushnir","Number":"51894","RawContent":null,"Title":"[test-only] refactor(core): add batching for defer blocks with on idle conditions","State":"open","Body":"Checking CI behavior with a copy of https://github.com/angular/angular/pull/51750.","Url":"https://github.com/angular/angular/pull/51894","RelatedDescription":"Open PR \"[test-only] refactor(core): add batching for defer blocks with on idle conditions\" (#51894)"},{"Id":"1911968075","IsPullRequest":true,"CreatedAt":"2023-09-25T17:22:29","Actor":"pkozlowski-opensource","Number":"51892","RawContent":null,"Title":"fix(core): allow toSignal calls in reactive context (#51831)","State":"open","Body":"This is a cherry pick of #51831 to the 16.2 branch","Url":"https://github.com/angular/angular/pull/51892","RelatedDescription":"Open PR \"fix(core): allow toSignal calls in reactive context (#51831)\" (#51892)"},{"Id":"1911936882","IsPullRequest":true,"CreatedAt":"2023-09-25T17:00:49","Actor":"crisbeto","Number":"51891","RawContent":null,"Title":"feat(core): implement new block syntax","State":"open","Body":"Switches the syntax for blocks from `{#block}{/block}` to `@block {}` based on the feedback from the community.\r\n\r\nRead more about the decision-making process in our blog: https://blog.angular.io/meet-angulars-new-control-flow-a02c6eee7843\r\n\r\nThe existing block types changed in the following ways:\r\n\r\n**Conditional blocks:**\r\n```html\r\n<!-- Before -->\r\n{#if cond}\r\n  Main content\r\n  {:else if otherCond}\r\n    Else if content\r\n  {:else}\r\n    Else content\r\n{/if}\r\n\r\n<!-- After -->\r\n@if (cond) {\r\n  Main content\r\n} @else if (otherCond) {\r\n  Else if content\r\n} @else {\r\n  Else content\r\n}\r\n```\r\n\r\n**Deferred blocks**\r\n```html\r\n<!-- Before -->\r\n{#defer when isLoaded}\r\n  Main content\r\n  {:loading} Loading...\r\n  {:placeholder} <icon>pending</icon>\r\n  {:error} Failed to load\r\n{/defer}\r\n\r\n<!-- After -->\r\n@defer (when isLoaded) {\r\n  Main content\r\n} @loading {\r\n  Loading...\r\n} @placeholder {\r\n  <icon>pending</icon>\r\n} @error {\r\n  Failed to load\r\n}\r\n```\r\n\r\n**Switch blocks:**\r\n```html\r\n<!-- Before -->\r\n{#switch value}\r\n  {:case 1}\r\n    One\r\n  {:case 2}\r\n    Two\r\n  {:default}\r\n    Default\r\n{/switch}\r\n\r\n<!-- After -->\r\n@switch (value) {\r\n  @case (1) {\r\n    One\r\n  }\r\n\r\n  @case (2) {\r\n    Two\r\n  }\r\n\r\n  @default {\r\n    Default\r\n  }\r\n}\r\n```\r\n\r\n**For loops**\r\n```html\r\n<!-- Before -->\r\n{#for item of items; track item}\r\n  {{item.name}}\r\n  {:empty} No items\r\n{/for}\r\n\r\n<!-- After -->\r\n@for (item of items; track item) {\r\n  {{item.name}}\r\n} @empty {\r\n  No items\r\n}\r\n```","Url":"https://github.com/angular/angular/pull/51891","RelatedDescription":"Open PR \"feat(core): implement new block syntax\" (#51891)"},{"Id":"1911867216","IsPullRequest":true,"CreatedAt":"2023-09-25T16:18:53","Actor":"angular-robot","Number":"51889","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.\n\nCloses #51875","Url":"https://github.com/angular/angular/pull/51889","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51889)"},{"Id":"1909486066","IsPullRequest":true,"CreatedAt":"2023-09-25T16:18:05","Actor":"angular-robot","Number":"51875","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51875","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51875)"},{"Id":"1909474541","IsPullRequest":true,"CreatedAt":"2023-09-25T16:17:16","Actor":"crisbeto","Number":"51874","RawContent":null,"Title":"Add defer viewport and hover triggers","State":"closed","Body":"Adds the implementations for the `on viewport` and `on hover` triggers in `defer` blocks. Includes the following commits:\r\n\r\n### feat(core): support deferred hover triggers\r\nAdds support for `on hover` and `prefetch on hover` triggers. Some code had to be moved around so it could be reused from the `on interaction` triggers.\r\n\r\n### feat(core): support deferred viewport triggers\r\nAdds support for `on viewport` and `prefetch on viewport` triggers which will load the deferred content when the element comes into the view.","Url":"https://github.com/angular/angular/pull/51874","RelatedDescription":"Closed or merged PR \"Add defer viewport and hover triggers\" (#51874)"},{"Id":"1910839064","IsPullRequest":true,"CreatedAt":"2023-09-25T07:17:33","Actor":"devversion","Number":"51887","RawContent":null,"Title":"Revert making context of `EmbeddedViewRef` assignable","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/51887","RelatedDescription":"Open PR \"Revert making context of `EmbeddedViewRef` assignable\" (#51887)"},{"Id":"1910824710","IsPullRequest":true,"CreatedAt":"2023-09-25T07:08:31","Actor":"angular-robot","Number":"51886","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\nðŸ”§ This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/51886","RelatedDescription":"Open PR \"build: lock file maintenance\" (#51886)"},{"Id":"1910230791","IsPullRequest":true,"CreatedAt":"2023-09-24T13:14:57","Actor":"JeanMeche","Number":"51885","RawContent":null,"Title":"fix(service-worker): throw a critical error when `handleFetch` fails","State":"open","Body":"On Safari, the cache might fail on methods like `match` with an `Internal error`. Critical errors allows to fallback to `safeFetch()` in the `Driver`.\r\n\r\nfixes: #50378\r\n\r\nNB: This caching will still be broken since apparantly there a bug on Safari. This fix will only allow the app to recover from the bug. It can be considered as a workaround. ","Url":"https://github.com/angular/angular/pull/51885","RelatedDescription":"Open PR \"fix(service-worker): throw a critical error when `handleFetch` fails\" (#51885)"},{"Id":"1910229949","IsPullRequest":true,"CreatedAt":"2023-09-24T13:13:19","Actor":"JeanMeche","Number":"51884","RawContent":null,"Title":"fix(service-worker): throw a critical error when `handleFetch` fails","State":"closed","Body":"On Safari, the cache might fail on methods like `match` with an `Internal error`. Critical errors allows to fallback to `safeFetch()` in the `Driver`. \r\n\r\nfixes: #50378\r\n","Url":"https://github.com/angular/angular/pull/51884","RelatedDescription":"Closed or merged PR \"fix(service-worker): throw a critical error when `handleFetch` fails\" (#51884)"},{"Id":"1910057805","IsPullRequest":true,"CreatedAt":"2023-09-24T01:38:50","Actor":"AndrewKushnir","Number":"51883","RawContent":null,"Title":"refactor(core): add hydration support for built-in `if` and `switch`","State":"open","Body":"This commit updates the `if` and `switch` logic to support hydration. On the server, we annotate a `template` instruction that is used to host and render selected branch. On the client, we lookup dehydrated views in case we detect that the flag is present.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51883","RelatedDescription":"Open PR \"refactor(core): add hydration support for built-in `if` and `switch`\" (#51883)"},{"Id":"1909979844","IsPullRequest":false,"CreatedAt":"2023-09-23T19:42:03","Actor":"andrewalderson","Number":"51882","RawContent":null,"Title":"NgIf with ShadowDom not removing projected content on first render","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNot sure\r\n\r\n### Description\r\n\r\nFor components with ```ViewEncapsulation.ShadowDom``` and a template using ```*ngIf``` the projected content that should not be shown is not removed from the dom on first render.\r\n\r\nExample component \r\n```\r\n@Component({\r\n  selector: 'app-shadowdom',\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  template: `<ng-container *ngIf=\"!useFallback() else fallback\">\r\n  <ng-content />\r\n  </ng-container>\r\n  <ng-template #fallback><span>Fallback Content</span></ng-template>`,\r\n  encapsulation: ViewEncapsulation.ShadowDom,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShadowDomComponent {\r\n  useFallback = signal<boolean>(true);\r\n}\r\n```\r\n\r\nUsage of component\r\n```\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [CommonModule, ShadowDomComponent],\r\n  template: `\r\n    <app-shadowdom><span>Projected Content</span></app-shadowdom>\r\n  `,\r\n})\r\nexport class App {}\r\n```\r\n\r\nOn first render of the component the content that is projected appears in the dom.\r\n\r\nIf you open the devtools and inspect the element in the provided stackblitz you can see the template and the projected content are both in the dom.\r\n\r\n<img width=\"296\" alt=\"image\" src=\"https://github.com/angular/angular/assets/16738284/4693aa33-896d-4cb1-b444-d9e4665ff568\">\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-trsytv?file=src%2Fshadowdom.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\nI discovered this bug while working on a component library. This only happens on first render and only if using ShadowDom. If you toggle the value for the ```ngIf``` then everything renders as expected. Also, I am using a signal for the ```ngIf``` but this doesn't matter. In trying to figure this out I also tried using a variable with ChangeDetection and got the same result.","Url":"https://github.com/angular/angular/issues/51882","RelatedDescription":"Open issue \"NgIf with ShadowDom not removing projected content on first render\" (#51882)"},{"Id":"1909959255","IsPullRequest":false,"CreatedAt":"2023-09-23T18:23:56","Actor":"ammarmashfj-sy","Number":"51881","RawContent":null,"Title":"invalid server configuration for apache2","State":"open","Body":"### Describe the problem that you experienced\n\nthe provided snippet for htaccess file for deploying on apache2 servers doesn't work \r\n\r\nwhen copying the provided snippet, I get the following error in the apache2 logs \r\n\r\n\"AH00526 Syntax Error and Invalid \"command '\\xc2\\xa0'\"\r\n\r\n\r\nthis is because of hidden whitespace characters\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/deployment#server-configuration\n\n### Describe what you were looking for in the documentation\n\nhtaccess file example \n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\nremoving the hidden whitespaces from the snippet solves the issue\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nInvalid command '\\xc2\\xa0',\r\nperhaps misspelled or defined by a module not included in the server configuration\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/51881","RelatedDescription":"Open issue \"invalid server configuration for apache2\" (#51881)"},{"Id":"1909723289","IsPullRequest":false,"CreatedAt":"2023-09-23T05:38:45","Actor":"krp12345","Number":"51880","RawContent":null,"Title":"ViewContainerRef behaviour specification","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nconsider component template:\r\n```\r\n<div #ref>\r\n<ul>\r\n<li>A</li>\r\n<li>B</li>\r\n</ul>\r\n<p>\r\nTest Paragraph\r\n</p>\r\n</div>\r\n```\r\nNow, I can get ViewContainerref of div element. When first time I learnt about ViewContaineref, I expected that it will represent all elements inside it. But, that is not the case. ViewContainerRef.length value is zero. when insert an element then it inserts in sibling of the element, not inside the element. Why is the case? \r\nI think there is no clear specification that what exactly is expected from the ViewContainerRef. \r\n\r\nDocs says \"Represents a container where one or more views can be attached to a component.\"\r\nBut based on observations, it should be said as \"Represents a container where one or more views can be attached in the sibling of the element\"\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.io/api/core/ViewContainerRef\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\ndetailed explanation and behaviour specification of ViewContainerRef. \r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\n_No response_\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51880","RelatedDescription":"Open issue \"ViewContainerRef behaviour specification\" (#51880)"},{"Id":"1909690047","IsPullRequest":false,"CreatedAt":"2023-09-23T03:21:11","Actor":"examan","Number":"51879","RawContent":null,"Title":"Template binding does not recognize the 'inert' property.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThe 'inert' property under HTMLElement can be accessed correctly in TypeScript, but it cannot be used with template binding.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/i7jj8y?file=src%2Fapp%2Fapp.component.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nerror NG8002: Can't bind to 'inert' since it isn't a known property of 'a'.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.3\r\nNode: 16.20.0\r\nPackage Manager: npm 9.4.2\r\nOS: linux x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51879","RelatedDescription":"Open issue \"Template binding does not recognize the 'inert' property.\" (#51879)"},{"Id":"1909608757","IsPullRequest":false,"CreatedAt":"2023-09-22T23:09:16","Actor":"cusher","Number":"51878","RawContent":null,"Title":"Type safe Input setting on components created with createComponent","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nWhen a component is created via the `createComponent` method on `ViewContainerRef`, there are two ways inputs can currently be set:\r\n1. Setting properties directly on the component instance. This seems to generally not be recommended due to the changes not respecting lifecycle hooks.\r\n2. Using the `setInput` method on the `ComponentRef`. This seems to be the recommended method, however it comes with its own set of issues:\r\na. The `name` can be any `string`, and thus is not guaranteed to be the name of an actual input.\r\nb. The `value` type is `unknown`, so even if you are always using the right names, there is no way to have any sort of type-checking on the value itself.\r\n\r\nAdditionally, for both options, because the inputs are being set one-by-one, there is no way to check for missing `required` inputs.\r\n\r\nAs a result, setting inputs on components created with `createComponent` is quite a bit riskier than using components in templates. It would be great if the API for creating component instances dynamically in TypeScript felt just as robust as instantiating a component inside of a template. Additionally, improvements here this could trickle down to provide a better interface for setting inputs in other use cases e.g. [Dialog creation in Angular Components](https://github.com/angular/components/issues/27776).\n\n### Proposed solution\n\nAdd an `inputs` field to the options parameter of `createComponent` which allows passing in initial values for each input on the component. Ideally, this should:\r\n1. Have full type info matching the inputs on the component itself.\r\n2. Respect the `required` flag, so if an required input is missing, an error is passed along.\n\n### Alternatives considered\n\n- Alternative signature for `setInput` on `ComponentRef` which allows setting inputs in a type safe manner. This would be a more flexible option than the proposed solution, but has no ability to check if required inputs have been set.","Url":"https://github.com/angular/angular/issues/51878","RelatedDescription":"Open issue \"Type safe Input setting on components created with createComponent\" (#51878)"},{"Id":"1909560634","IsPullRequest":true,"CreatedAt":"2023-09-22T21:56:16","Actor":"dylhunn","Number":"51877","RawContent":null,"Title":"refactor(compiler): Add source maps in template pipeline for expressions and additional ops","State":"open","Body":"Enable source maps in a variety of new cases, including most AST expressions, as well as several ops that didn't yet have them.\r\n","Url":"https://github.com/angular/angular/pull/51877","RelatedDescription":"Open PR \"refactor(compiler): Add source maps in template pipeline for expressions and additional ops\" (#51877)"},{"Id":"1909495742","IsPullRequest":true,"CreatedAt":"2023-09-22T20:41:13","Actor":"mmalerba","Number":"51876","RawContent":null,"Title":"refactor(compiler): Add support for i18n expressions","State":"open","Body":"Adds support for i18n on templates and i18n expressions. See individual commit messages for more detail.","Url":"https://github.com/angular/angular/pull/51876","RelatedDescription":"Open PR \"refactor(compiler): Add support for i18n expressions\" (#51876)"},{"Id":"1909228521","IsPullRequest":true,"CreatedAt":"2023-09-22T20:27:34","Actor":"angular-robot","Number":"51870","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51870","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51870)"},{"Id":"1909322073","IsPullRequest":true,"CreatedAt":"2023-09-22T18:05:14","Actor":"angular-robot","Number":"51873","RawContent":null,"Title":"build: update actions/checkout digest to 8ade135","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://togithub.com/actions/checkout) | action | digest | `3df4ab1` -> `8ade135` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/51873","RelatedDescription":"Open PR \"build: update actions/checkout digest to 8ade135\" (#51873)"},{"Id":"1909308889","IsPullRequest":true,"CreatedAt":"2023-09-22T17:53:49","Actor":"JeanMeche","Number":"51872","RawContent":null,"Title":"feat: allow customization of the HttpTransferCache.","State":"open","Body":"`withHttpTransferCache()` accepts a set of options to allow customization of the cache :\r\n*  `exclude`: a callback to determine wether a request should be cached or not\r\n* more to come...\r\n\r\nFixes #50117\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Feature\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51872","RelatedDescription":"Open PR \"feat: allow customization of the HttpTransferCache.\" (#51872)"},{"Id":"1909136256","IsPullRequest":false,"CreatedAt":"2023-09-22T17:38:33","Actor":"undsoft","Number":"51868","RawContent":null,"Title":"ngSwitchCase doesn't cast numbers to true","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\n[NgSwitchCase documentation](https://angular.io/api/common/NgSwitchCase) states:\r\n\r\n> Unlike JavaScript, which uses strict equality, Angular uses loose equality. This means that the empty string, \"\" matches 0.\r\n\r\nThis is however not true when true is compared with a number.\r\n\r\n```html\r\n<ng-container [ngSwitch]=\"true\">\r\n    <div *ngSwitchCase=\"69\">Nice</div>\r\n    <div *ngSwitchDefault>Not nice</div>\r\n</ng-container>\r\n```\r\n\r\nwill evaluate to `Not nice`.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-f1u6tf?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n@angular - 16.2.6\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51868","RelatedDescription":"Closed issue \"ngSwitchCase doesn't cast numbers to true\" (#51868)"},{"Id":"1909254728","IsPullRequest":true,"CreatedAt":"2023-09-22T17:07:55","Actor":"angular-robot","Number":"51871","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular-devkit/architect-cli](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`0.1700.0-next.4` -> `0.1700.0-next.5`](https://renovatebot.com/diffs/npm/@angular-devkit%2farchitect-cli/0.1700.0-next.4/0.1700.0-next.5) |\n| [@angular-devkit/build-angular](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular-devkit%2fbuild-angular/17.0.0-next.4/17.0.0-next.5) |\n| [@angular-devkit/build-angular](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular-devkit%2fbuild-angular/17.0.0-next.4/17.0.0-next.5) |\n| [@angular-devkit/core](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular-devkit%2fcore/17.0.0-next.4/17.0.0-next.5) |\n| [@angular-devkit/schematics](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular-devkit%2fschematics/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/animations](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `9c8f716` -> `12c5594` |\n| [@angular/cdk](https://togithub.com/angular/components) | dependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/cli](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcli/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/cli](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcli/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/common](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/compiler](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/core](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/elements](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2felements/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/forms](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/localize](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/material](https://togithub.com/angular/components) | dependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8affb31` -> `cc96f9c` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/platform-server](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/upgrade](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fupgrade/17.0.0-next.4/17.0.0-next.5) |\n| [@schematics/angular](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@schematics%2fangular/17.0.0-next.4/17.0.0-next.5) |\n| angular/dev-infra | action | digest | `ba9b448` -> `d8f1e06` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular-cli (@&#8203;angular-devkit/architect-cli)</summary>\n\n### [`v0.1700.0-next.5`](https://togithub.com/angular/angular-cli/compare/229ebe86242d18c1d60aa25b373be5955f8eaea8...00c1b575d74ba03f1d679c52b1cf341317d13238)\n\n[Compare Source](https://togithub.com/angular/angular-cli/compare/229ebe86242d18c1d60aa25b373be5955f8eaea8...00c1b575d74ba03f1d679c52b1cf341317d13238)\n\n</details>\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.0.0-next.5`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1700-next5-2023-09-20)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.0.0-next.4...17.0.0-next.5)\n\n#### Breaking Changes\n\n#####\n\n-   Node.js v16 support has been removed and the minimum support version has been bumped to 18.13.0.\n\n    Node.js v16 is planned to be End-of-Life on 2023-09-11. Angular will stop supporting Node.js v16 in Angular v17. For Node.js release schedule details, please see: https://github.com/nodejs/release#release-schedule\n\n##### common\n\n-\n\n##### core\n\n-   Angular now required `zone.js` version `~0.14.0`\n-   Versions of TypeScript older than 5.2 are no longer supported.\n\n##### router\n\n-   `malformedUriErrorHandler` is no longer available in\n    the `RouterModule.forRoot` options. URL parsing errors should instead be\n    handled in the `UrlSerializer.parse` method.\n\n##### zone.js\n\n-   Deep and legacy `dist/` imports like `zone.js/bundles/zone-testing.js` and `zone.js/dist/zone` are no longer allowed. `zone-testing-bundle` and `zone-testing-node-bundle` are also no longer part of the package.\n\n    The proper way to import `zone.js` and `zone.js/testing` is:\n\n    ```js\n    import 'zone.js';\n    import 'zone.js/testing';\n    ```\n\n#####\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [59aa0634f4](https://togithub.com/angular/angular/commit/59aa0634f4d4694203f2a69c40017fe5a3962514) | build | remove support for Node.js v16 ([#&#8203;51755](https://togithub.com/angular/angular/pull/51755)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fe2fd7e1a8](https://togithub.com/angular/angular/commit/fe2fd7e1a898a4525c219065a6d0908988dfd7e2) | feat | make the warning for lazy-loaded lcp image an error ([#&#8203;51748](https://togithub.com/angular/angular/pull/51748)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [7f6d9a73ab](https://togithub.com/angular/angular/commit/7f6d9a73ab8b658d0d8148080dfefb2550bee6b4) | feat | expand class api doc extraction ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [c7daf7ea16](https://togithub.com/angular/angular/commit/c7daf7ea1692391f7cac8f794ed777887a2764af) | feat | extract directive docs info ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [e0b1bb33d7](https://togithub.com/angular/angular/commit/e0b1bb33d77babe881f77f52cb1b71e345f5696b) | feat | extract doc info for JsDoc ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [b9c70158ab](https://togithub.com/angular/angular/commit/b9c70158abecd81a5af512c8b4da685851cf159f) | feat | extract docs for accessors, rest params, and types ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [a24ae994a0](https://togithub.com/angular/angular/commit/a24ae994a0470fdac09a69937fd0580cff6c6d68) | feat | extract docs for top level functions and consts ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [2e41488296](https://togithub.com/angular/angular/commit/2e41488296879685b19dfba8d78037690347bda3) | feat | extract docs info for enums, pipes, and NgModules ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n| [34495b3533](https://togithub.com/angular/angular/commit/34495b35337892ab209d9955ff7fe2897a0c5d41) | feat | extract docs via exports ([#&#8203;51828](https://togithub.com/angular/angular/pull/51828)) |\n| [7e82df45c5](https://togithub.com/angular/angular/commit/7e82df45c5bb72ec3dafaa07dc1eaa5d463b006c) | feat | initial skeleton for API doc extraction ([#&#8203;51733](https://togithub.com/angular/angular/pull/51733)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5b66330329](https://togithub.com/angular/angular/commit/5b66330329fd066a7c347f040a330b4c7f2a0a2b) | fix | allow non-array imports for standalone component in local compilation mode ([#&#8203;51819](https://togithub.com/angular/angular/pull/51819)) |\n| [19c3dc18d3](https://togithub.com/angular/angular/commit/19c3dc18d3c0cfd83efec2c8f81b40860d570346) | fix | fix NgModule injector def in local compilation mode when imports/exports are non-array expressions ([#&#8203;51819](https://togithub.com/angular/angular/pull/51819)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [81b67aa987](https://togithub.com/angular/angular/commit/81b67aa98767078aebae22150d3441372772c28f) | feat | add support for zone.js 0.14.0 ([#&#8203;51774](https://togithub.com/angular/angular/pull/51774)) |\n| [e23aaa7d75](https://togithub.com/angular/angular/commit/e23aaa7d75efdd52be4dd7ca9267bc60d36059c2) | feat | drop support for older TypeScript versions ([#&#8203;51792](https://togithub.com/angular/angular/pull/51792)) |\n| [5ead7d412d](https://togithub.com/angular/angular/commit/5ead7d412d847c85176a321e58d12dcdfc0dab67) | fix | ensure a consumer drops all its stale producers ([#&#8203;51722](https://togithub.com/angular/angular/pull/51722)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e2416a284f](https://togithub.com/angular/angular/commit/e2416a284ff086752c809689ef74588f02e5f0e4) | feat | Enable go to definition of styleUrl ([#&#8203;51746](https://togithub.com/angular/angular/pull/51746)) |\n\n##### localize\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5a20a44c64](https://togithub.com/angular/angular/commit/5a20a44c64066e47894ca3cbe26327766ca89a42) | fix | ng-add schematics for application builder ([#&#8203;51777](https://togithub.com/angular/angular/pull/51777)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0b3e6a41d0](https://togithub.com/angular/angular/commit/0b3e6a41d025997d2947125d875ac26ecd1b86d9) | fix | Remove malformedUriErrorHandler from `ExtraOptions` ([#&#8203;51745](https://togithub.com/angular/angular/pull/51745)) |\n| [c03baed854](https://togithub.com/angular/angular/commit/c03baed8547c2c1da576307c708d2682dfdf3742) | fix | use DOCUMENT token instead of document directly in view transitions ([#&#8203;51814](https://togithub.com/angular/angular/pull/51814)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.4`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next4-titanium-turtle-2023-09-20)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.3...17.0.0-next.4)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2409e7071](https://togithub.com/angular/components/commit/2409e7071a4c1e035a6f212249e96ba36d7aeb4f) | fix | **schematics:** account for single string in styles and new styleUrl ([#&#8203;27798](https://togithub.com/angular/components/pull/27798)) |\n| [31187abae](https://togithub.com/angular/components/commit/31187abae619cf76e7f0a7771ca6e5900a50e90c) | fix | **scrolling:** unsubscribe from scrolled stream when viewport is destroyed ([#&#8203;27800](https://togithub.com/angular/components/pull/27800)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8c3d8d645](https://togithub.com/angular/components/commit/8c3d8d645857a381cb2a752a600796c36338ea9e) | fix | **form-field:** style the cursor the same way as the rest of the input ([#&#8203;26491](https://togithub.com/angular/components/pull/26491)) ([#&#8203;27795](https://togithub.com/angular/components/pull/27795)) |\n| [c7db4960e](https://togithub.com/angular/components/commit/c7db4960e16d0f74b0764cfa5be752392e8c30f6) | fix | **list:** Emit tokens under mixin root selector ([#&#8203;27711](https://togithub.com/angular/components/pull/27711)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/51871","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#51871)"},{"Id":"1909173053","IsPullRequest":false,"CreatedAt":"2023-09-22T17:07:53","Actor":"spock123","Number":"51869","RawContent":null,"Title":"Angular 16.2.4 breaks when activating Firestore with Angular/Fire (standalone app)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWe are using the @angular/fire package to communicate with Firebase.\r\n\r\nWhen upgrading from Angular 16.2.3 -> 16.2.4 we noticed an error that occurs as soon as Firestore is initialized.\r\nThe app is a standalone app. \r\n\r\n```\r\nconst firebaseProviders: EnvironmentProviders = importProvidersFrom([\r\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\r\n    provideFirestore(() => getFirestore()), // THIS LINE NOW BREAKS!!\r\n    provideAuth(() =>\r\n        initializeAuth(getApp(), {\r\n            persistence: [browserSessionPersistence, browserLocalPersistence],\r\n            popupRedirectResolver: browserPopupRedirectResolver\r\n        })\r\n    )\r\n]);\r\n```\r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nUnfortunately our repo is private and part of larger monorepo so cannot give access but can maybe try if the fix is not obvious\n\n### Please provide the exception or error you saw\n\n```true\nNG0203: inject() must be called from an injection context such as a constructor, a factory function, a field initializer, or a function used with `runInInjectionContext`. Find more at https://angular.io/errors/NG0203\r\n    at injectInjectorOnly (core.mjs:731:15)\r\n    at ÉµÉµinject (core.mjs:744:42)\r\n    at Object.FirebaseAppModule_Factory [as useFactory] (angular-fire-app.js:57:42)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.0\r\nNode: 18.15.0\r\nPackage Manager: pnpm 8.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.3\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.0.3\r\n@angular-devkit/schematics      16.0.3\r\n@angular/cli                    16.2.0\r\n@angular/fire                   7.6.1\r\n@schematics/angular             16.0.3\r\nrxjs                            7.5.6\r\ntypescript                      5.0.4\r\nzone.js                         0.13.0\n```\n\n\n### Anything else?\n\nUpdate to Angular 16.2.4+ and Firestore gives the error when initializing.","Url":"https://github.com/angular/angular/issues/51869","RelatedDescription":"Closed issue \"Angular 16.2.4 breaks when activating Firestore with Angular/Fire (standalone app)\" (#51869)"},{"Id":"1909088663","IsPullRequest":true,"CreatedAt":"2023-09-22T16:03:00","Actor":"sidofdountio","Number":"51867","RawContent":null,"Title":"Create Cannot_read_properties","State":"closed","Body":"Cannot read properties of undefined (reading 'kind')\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51867","RelatedDescription":"Closed or merged PR \"Create Cannot_read_properties\" (#51867)"},{"Id":"1909085804","IsPullRequest":false,"CreatedAt":"2023-09-22T15:08:21","Actor":"kemsky","Number":"51866","RawContent":null,"Title":"Long standing problems with template driven forms","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n- built-in validators like `required` are still imported with `FormsModule`\r\n- `ngModel` type and type of the corresponding custom value accessor are not checked, effectively `[ngModel]` has `any` type and there is zero typecheck, you can pass any property of any type to `[ngModel]` (e.g `Date` instead of `string`) and compiler will be happy.\r\n- control value accessor does not have access to its validity status, component can only rely on css classes like `ng-valid`, but it wont work in case you want to show a dropdown which simply does not inherit these classes because it is rendered outside of the component\r\n- no way to disable built-in css classes like `ng-valid`\r\n- validation errors are still not propagated to the parent form\r\n- `[ngModel]` still delays write operation one tick compared to any other input property\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51866","RelatedDescription":"Open issue \"Long standing problems with template driven forms\" (#51866)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1912237448","IsPullRequest":true,"CreatedAt":"2023-09-25T20:30:52","Actor":"sp90","Number":"25901","RawContent":null,"Title":"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe:\r\n\r\nI often feel that skipTests add a lot of code that is unessary for non test applications and could probably benefit from adding it if there are added tests later on\r\n\r\n## What is the current behavior?\r\n\r\n`ng new newApp --skip-tests` it only skip `.spec.ts` \r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nIt does also skip the angular.json build configuration for tests\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n\r\nI think this could be a first PR in a series of PR's where we go towards having skip-tests applied by default to reduce boilerplate of a base angular app. \r\n\r\nAnd then i think we should later on create scripts/packages like `ng add @angular/test/jest` or `ng add @angular/e2e/playwright` \r\n\r\nThis also aligns perfectly with making rxjs optional and having angular/ssr as an optional part of angular\r\n","Url":"https://github.com/angular/angular-cli/pull/25901","RelatedDescription":"Open PR \"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed\" (#25901)"},{"Id":"1910887014","IsPullRequest":true,"CreatedAt":"2023-09-25T18:17:02","Actor":"alan-agius4","Number":"25899","RawContent":null,"Title":"feat(@schematics/angular): add `ng new --ssr`","State":"closed","Body":"\r\n\r\nThis commit enabled users to opt-in adding SSR and SSG to their application during the `ng new` experience. This can be done either by using the `--ssr` option or answer `Yes` when prompted.","Url":"https://github.com/angular/angular-cli/pull/25899","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add `ng new --ssr`\" (#25899)"},{"Id":"1909717207","IsPullRequest":true,"CreatedAt":"2023-09-25T10:28:59","Actor":"angular-robot","Number":"25896","RawContent":null,"Title":"build: update actions/checkout action to v4.1.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://togithub.com/actions/checkout) | action | minor | `v4.0.0` -> `v4.1.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.1.0`](https://togithub.com/actions/checkout/blob/HEAD/CHANGELOG.md#v410)\n\n[Compare Source](https://togithub.com/actions/checkout/compare/v4.0.0...v4.1.0)\n\n-   [Add support for partial checkout filters](https://togithub.com/actions/checkout/pull/1396)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25896","RelatedDescription":"Closed or merged PR \"build: update actions/checkout action to v4.1.0\" (#25896)"},{"Id":"1910968239","IsPullRequest":true,"CreatedAt":"2023-09-25T08:33:41","Actor":"alan-agius4","Number":"25900","RawContent":null,"Title":"feat(@schematics/angular): generate functional interceptors by default","State":"open","Body":"This commit updates the interceptor schematic to generate function intererceptors by default.\r\n\r\nBREAKING CHANGE: `ng g interceptor` now generate a functional interceptor by default. or guard by default. To generate a class-based interceptor the `--no-functional` command flag should be used.\r\n","Url":"https://github.com/angular/angular-cli/pull/25900","RelatedDescription":"Open PR \"feat(@schematics/angular): generate functional interceptors by default\" (#25900)"},{"Id":"1910839707","IsPullRequest":true,"CreatedAt":"2023-09-25T07:17:58","Actor":"angular-robot","Number":"25898","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\nðŸ”§ This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25898","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25898)"},{"Id":"1910163574","IsPullRequest":false,"CreatedAt":"2023-09-24T10:33:10","Actor":"hubnerd","Number":"25897","RawContent":null,"Title":"Building angular using webpack is not importing modules correctly","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\n\r\nI have build a small example app to show off this issue. It seems when importing modules in the module declaration it does import the modules declarations. For example when I import the browser module it does not import NgIf, NgFor etc etc and when I import NgSelect it does not import any of its Schema or components. I am building the app without using angular-cli as I am currently migrating an app from angularjs to angular and moving it to use angular-cli would be an issue.\r\n\r\nI have set up the webpack config like\r\n\r\n```\r\nconst path = require('path'),\r\nAngularWebpackPlugin = require('@ngtools/webpack'),\r\nwebpack = require('webpack'),\r\nHtmlWebpackPlugin = require('html-webpack-plugin'),\r\nWebpackDevServer = require('webpack-dev-server');\r\n\r\nmodule.exports = {\r\n    entry: {\r\n        'test': { import: \"./app/app.module.ts\", filename: 'js/[name].bundle.min.js' },\r\n    },\r\n    mode: 'none',\r\n    output: {\r\n        path: path.resolve(__dirname, \"dist\"),\r\n        clean: true\r\n    },\r\n    resolve: {\r\n        //extensions: ['.ts', '...'],\r\n        extensions: ['.tsx', '.ts', '.js', '.mjs', '.json']\r\n    },\r\n    optimization: {\r\n    },\r\n    plugins: [\r\n        new webpack.ProvidePlugin({\r\n            moment: 'moment'\r\n        }),\r\n        new HtmlWebpackPlugin({\r\n            title: 'Test',\r\n            template: './app/index.hbs',\r\n            cache: false,\r\n            hash: true,\r\n            inject: false\r\n        }),\r\n        new AngularWebpackPlugin.AngularWebpackPlugin({\r\n            'tsconfig': 'tsconfig.json',\r\n            //\"compilerOptions\": {},\r\n            \"sourceMap\": true,\r\n            'jitMode': true\r\n        })\r\n    ],\r\n    module: {\r\n        rules: \r\n            [\r\n                { \r\n                    test: /\\.hbs$/i, \r\n                    use: \"handlebars-loader\",\r\n                    exclude: /node_modules/, \r\n                },\r\n                {\r\n                    test: /\\.[jt]sx?$/,\r\n                    loader: '@ngtools/webpack',\r\n                     include: /app[\\\\/]/,\r\n                    exclude: [ /node_modules/ ]                \r\n                },\r\n                {\r\n                    test: /\\.[cm]?js$/,\r\n                    use: {\r\n                      loader: 'babel-loader',\r\n                      options: {\r\n                        cacheDirectory: true,\r\n                        compact: false,\r\n                        plugins: ['@angular/compiler-cli/linker/babel'],\r\n                      },\r\n                      \r\n                    },\r\n                },\r\n                {\r\n                    test: /\\.template\\.html$/,\r\n                    exclude: /node_modules/,\r\n                    use: \r\n                        [\r\n                            {\r\n                                loader: 'raw-loader',\r\n                                options: \r\n                                {\r\n                                    esModule: false,\r\n                                },\r\n                            }\r\n                        ],   \r\n                }, \r\n                {\r\n                    test: /\\.css$/i,\r\n                    exclude: /node_modules/,\r\n                    use: \r\n                        [  \r\n                            {\r\n                                loader: 'css-loader',\r\n                                options: {\r\n                                    import: false,\r\n                                    url: false,\r\n                                    modules: false\r\n                                }\r\n                            }    \r\n                        ]\r\n                }\r\n            ],\r\n        },\r\n        devServer: {\r\n            static: {\r\n              directory: path.join(__dirname, 'dist'),\r\n              watch: true\r\n            },\r\n            host: \"localhost\",\r\n            compress: true,\r\n            port: 5000,\r\n            server: 'https',\r\n            open: true,\r\n            liveReload: false,\r\n            hot: true,\r\n            client: {\r\n                overlay: true,\r\n                progress: true,\r\n            }\r\n          }\r\n}\r\n```\r\n\r\nand the angular test app is\r\n\r\n```\r\napp.module.ts\r\n\r\nimport 'zone.js';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        NgSelectModule,\r\n    ],\r\n    providers: [\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)  \r\n  .catch(err => console.error(err));   \r\n```\r\n\r\napp.component.ts\r\n\r\n```\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: require('./app.template.html'),\r\n})\r\nexport class AppComponent implements OnInit {\r\n    public source = [ { id: 1, name: \"moo\" }]\r\n    public selected = null;\r\n\r\n    ngOnInit(): void {\r\n        console.log(\"YAY!\");        \r\n    }\r\n}\r\n\r\n```\r\napp.template.html\r\n```\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <title ng-bind=\"title\">T.I.E.R</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <meta content=\"IE=edge, chrome=1\" http-equiv=\"X-UA-Compatible\" />\r\n</head>\r\n<body>\r\n    <app-root></app-root>\r\n    <script defer src=\"js/test.bundle.min.js?904b25da0a6807f141ae\"></script>\r\n</body></html>\r\n```\r\n\r\nand my tsconfig is:\r\n\r\n```\r\n{\r\n    \"compileOnSave\": false,\r\n    \"compilerOptions\": {\r\n      \"baseUrl\": \"./\",\r\n      \"outDir\": \"./dist/out-tsc\",\r\n      \"resolveJsonModule\": true,\r\n      \"forceConsistentCasingInFileNames\": true,\r\n      \"strict\": false,\r\n      \"noImplicitOverride\": false,\r\n      \"noPropertyAccessFromIndexSignature\": false,\r\n      \"noImplicitReturns\": true,\r\n      \"noFallthroughCasesInSwitch\": true,\r\n      \"sourceMap\": true,\r\n      \"declaration\": true,\r\n      \"emitDecoratorMetadata\": true,\r\n      \"downlevelIteration\": true,\r\n      \"experimentalDecorators\": true,\r\n      \"moduleResolution\": \"Node\",\r\n      \"importHelpers\": true,\r\n      \"target\": \"ES2022\",\r\n      \"module\": \"ES2022\",\r\n      \"useDefineForClassFields\": false,\r\n      \"lib\": [\r\n        \"ES2022\",\r\n        \"dom\"\r\n      ]\r\n    },\r\n    \"angularCompilerOptions\": {\r\n      \"enableI18nLegacyMessageIdFormat\": false,\r\n      \"strictInjectionParameters\": true,\r\n      \"strictInputAccessModifiers\": true,\r\n      \"strictTemplates\": true,\r\n      \"compilationMode\": \"partial\"\r\n    }\r\n  }\r\n```\r\n\r\nAs far as I can tell I am building the Ivy partials but I am getting the errors:\r\n\r\nNG0304: 'ng-select' is not a known element (used in the 'AppComponent' component template):\r\n\r\n    If 'ng-select' is an Angular component, then verify that it is a part of an @NgModule where this component is declared.\r\n    If 'ng-select' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n\r\nand\r\n\r\nNG0303: Can't bind to 'ngModel' since it isn't a known property of 'ng-select' (used in the 'AppComponent' component template).\r\n\r\n    If 'ng-select' is an Angular component and it has the 'ngModel' input, then verify that it is a part of an @NgModule where this component is declared.\r\n    If 'ng-select' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n    To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n\r\nas if it is not imported. Apart from that angular is working fine. If I put NgIf in imports I can use it but it should be imported from BrowserModule or CommonModule.\n\n### Minimal Reproduction\n\n- Create webpack.config.js with above config\r\n- Run webpack\r\n- Run webpack dev server\r\n- Check console.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n$ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.4\r\nNode: 18.13.0\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core\r\n... platform-browser, platform-browser-dynamic, upgrade\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1601.4 (cli-only)\r\n@angular-devkit/core         16.1.4 (cli-only)\r\n@angular-devkit/schematics   16.1.4 (cli-only)\r\n@schematics/angular          16.1.4 (cli-only)\r\nrxjs                         7.8.1\r\nwebpack                      5.88.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25897","RelatedDescription":"Closed issue \"Building angular using webpack is not importing modules correctly\" (#25897)"},{"Id":"1909717150","IsPullRequest":true,"CreatedAt":"2023-09-23T05:11:50","Actor":"angular-robot","Number":"25895","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `914324e` -> `beb5bc7` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `029a92c` -> `28fc1dc` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `4ed5693` -> `12c5594` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `3dbb262` -> `d741733` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `6f48ac1` -> `c75b854` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `cded431` -> `720c2ef` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `0c285d6` -> `4d01e68` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `ba20742` -> `23a3234` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `3cf1bf0` -> `d3c2565` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `9f73400` -> `e1ec981` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `b3d875d` -> `60f5e34` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `b96b50d` -> `a772340` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `fa84136` -> `1a8288c` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `5eb122d` -> `cc96f9c` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `66d8c79` -> `f6a10dc` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `b4eed00` -> `c08eabc` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `e1f56c2` -> `748b75a` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `f0e11a9` -> `12b1288` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `1b2f44f` -> `e22b4e2` |\n| angular/dev-infra | action | digest | `c71cf50` -> `d8f1e06` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25895","RelatedDescription":"Open PR \"build: update angular\" (#25895)"},{"Id":"1908900426","IsPullRequest":false,"CreatedAt":"2023-09-22T23:42:19","Actor":"MicahThierry","Number":"25892","RawContent":null,"Title":"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/issues/25892","RelatedDescription":"Closed issue \"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\" (#25892)"},{"Id":"1909189966","IsPullRequest":true,"CreatedAt":"2023-09-22T17:56:32","Actor":"alan-agius4","Number":"25893","RawContent":null,"Title":"    fix(@angular/cli): add `@angular/ssr` as part of the ng update `packageGroup`","State":"closed","Body":"This ensures that when the CLI is updates so is `@angular/ssr`","Url":"https://github.com/angular/angular-cli/pull/25893","RelatedDescription":"Closed or merged PR \"    fix(@angular/cli): add `@angular/ssr` as part of the ng update `packageGroup`\" (#25893)"},{"Id":"1909194243","IsPullRequest":true,"CreatedAt":"2023-09-22T17:56:19","Actor":"alan-agius4","Number":"25894","RawContent":null,"Title":"fix(@schematics/angular): update `@angular/cli` version specifier to use `^`","State":"closed","Body":"\r\n\r\nThis is to match all other Angular framework and Angular devkit dependencies\r\n","Url":"https://github.com/angular/angular-cli/pull/25894","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): update `@angular/cli` version specifier to use `^`\" (#25894)"},{"Id":"1908776309","IsPullRequest":true,"CreatedAt":"2023-09-22T15:34:46","Actor":"alan-agius4","Number":"25891","RawContent":null,"Title":"fix(@angular/ssr): enable `prerender` and `ssr` for all build configuration","State":"closed","Body":"\r\n\r\nThis commit configures both `ssr` and `prerender` both both development and production configurations. This is needed to improve DX and allow for a better debugging.\r\n","Url":"https://github.com/angular/angular-cli/pull/25891","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): enable `prerender` and `ssr` for all build configuration\" (#25891)"},{"Id":"1908612066","IsPullRequest":true,"CreatedAt":"2023-09-22T15:34:21","Actor":"alan-agius4","Number":"25889","RawContent":null,"Title":" feat(@schematics/angular): enable hydration when adding SSR, SSG or AppShell","State":"closed","Body":"This commits updates the internal server schematic that is used by SSR and AppShell schematics to include `provideClientHydration` in the list of providers, which causes hydration to be enabled for application.\r\n    \r\nFor more information about `provideClientHydration`, see: https://angular.io/api/platform-browser/provideClientHydration\r\n\r\nFYI @AndrewKushnir ","Url":"https://github.com/angular/angular-cli/pull/25889","RelatedDescription":"Closed or merged PR \" feat(@schematics/angular): enable hydration when adding SSR, SSG or AppShell\" (#25889)"},{"Id":"1908195578","IsPullRequest":true,"CreatedAt":"2023-09-22T14:48:35","Actor":"angular-robot","Number":"25887","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b8b41c5` -> `4ed5693` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `5af68f6` -> `3dbb262` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `6a436c9` -> `b96b50d` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bd1435d` -> `fa84136` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `3bde09e` -> `5eb122d` |\n| angular/dev-infra | action | digest | `62e28b7` -> `c71cf50` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.4`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next4-titanium-turtle-2023-09-20)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.3...17.0.0-next.4)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2409e7071](https://togithub.com/angular/components/commit/2409e7071a4c1e035a6f212249e96ba36d7aeb4f) | fix | **schematics:** account for single string in styles and new styleUrl ([#&#8203;27798](https://togithub.com/angular/components/pull/27798)) |\n| [31187abae](https://togithub.com/angular/components/commit/31187abae619cf76e7f0a7771ca6e5900a50e90c) | fix | **scrolling:** unsubscribe from scrolled stream when viewport is destroyed ([#&#8203;27800](https://togithub.com/angular/components/pull/27800)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8c3d8d645](https://togithub.com/angular/components/commit/8c3d8d645857a381cb2a752a600796c36338ea9e) | fix | **form-field:** style the cursor the same way as the rest of the input ([#&#8203;26491](https://togithub.com/angular/components/pull/26491)) ([#&#8203;27795](https://togithub.com/angular/components/pull/27795)) |\n| [c7db4960e](https://togithub.com/angular/components/commit/c7db4960e16d0f74b0764cfa5be752392e8c30f6) | fix | **list:** Emit tokens under mixin root selector ([#&#8203;27711](https://togithub.com/angular/components/pull/27711)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDAuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25887","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25887)"},{"Id":"1908052887","IsPullRequest":true,"CreatedAt":"2023-09-22T14:47:56","Actor":"clydin","Number":"25886","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support basic web worker bundling with esbuild builders","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser`), Web Workers that use the supported syntax will now be bundled. The bundling process currently uses an additional synchronous internal esbuild execution. The execution must be synchronous due to the usage within a TypeScript transformer. TypeScript's compilation process is fully synchronous. The bundling itself currently does not provide all the features of the Webpack-based builder. \r\nThe following limitations are present in the current implementation but will be addressed in upcoming changes:\r\n- Worker code is not type-checked\r\n- Nested workers are not supported","Url":"https://github.com/angular/angular-cli/pull/25886","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support basic web worker bundling with esbuild builders\" (#25886)"},{"Id":"1906963829","IsPullRequest":true,"CreatedAt":"2023-09-22T14:42:36","Actor":"alan-agius4","Number":"25884","RawContent":null,"Title":"feat(@schematics/angular): enable standalone by default in new applications","State":"closed","Body":"This commit update the schematics to generate a standalone application by default.","Url":"https://github.com/angular/angular-cli/pull/25884","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): enable standalone by default in new applications\" (#25884)"},{"Id":"1908772046","IsPullRequest":true,"CreatedAt":"2023-09-22T13:41:59","Actor":"alan-agius4","Number":"25890","RawContent":null,"Title":"perf(@angular-devkit/build-angular): disable ahead of time prerendering in vite dev-server","State":"closed","Body":"\r\n\r\nWhen using the devserver, instead of prerendering every page for every incremental change, we now perform a server rendering on the page during request time. This ensures that incremental build times are faster when prerending is enabled as we avoid rendering of pages that are never viewed.\r\n","Url":"https://github.com/angular/angular-cli/pull/25890","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): disable ahead of time prerendering in vite dev-server\" (#25890)"},{"Id":"1908551421","IsPullRequest":true,"CreatedAt":"2023-09-22T09:57:54","Actor":"alan-agius4","Number":"25888","RawContent":null,"Title":"test: update output regexp in i18n tests to account for change in filename","State":"closed","Body":"\r\nThis update the regexp to account for the change in https://github.com/angular/angular-cli/pull/25877. A filename that has the hash included will be `main.[hash]` in Webpack and `main-[hash]` when using esbuild.","Url":"https://github.com/angular/angular-cli/pull/25888","RelatedDescription":"Closed or merged PR \"test: update output regexp in i18n tests to account for change in filename\" (#25888)"},{"Id":"1907279392","IsPullRequest":false,"CreatedAt":"2023-09-21T15:45:26","Actor":"ilyakonrad","Number":"25885","RawContent":null,"Title":"Karma/Jasmine tests don't run after upgrading from Angular 14 to 15","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nAfter upgrading from Angular 14 to Angular 15, my Karma unit tests don't run anymore.\r\nI have 10 on them, so I used to see `Executed 10 of 10 SUCCESS`, now I see `Executed 0 of 0 SUCCESS`.\r\n\r\nI noticed that the upgrade removed few lines of code in `test.ts` but bringing them back doesn't help.\r\n\r\n<img width=\"615\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/25200186/d483a91e-87c3-467f-91c0-dcaa837eb32a\">\r\n\r\n[Playing around with `includes` property](https://stackoverflow.com/questions/74890907/after-migration-to-angular-15-context-was-removed-from-test-ts) in `angular.json` didn't help.\r\n\r\n[This gentleman's solution](https://github.com/angular/angular-cli/issues/24389#issuecomment-1342861688) didn't help me either.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Upgrade from 14 to 15.\r\n2. Question life choices.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.9\r\nNode: 18.12.1\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1502.9\r\n@angular-devkit/build-angular      15.2.9\r\n@angular-devkit/core               15.2.9\r\n@angular-devkit/schematics         15.2.9\r\n@angular/cdk                       14.2.7\r\n@angular/fire                      7.5.0\r\n@angular/material                  14.2.7\r\n@angular/material-moment-adapter   14.2.7\r\n@schematics/angular                15.2.9\r\nrxjs                               7.8.0\r\ntypescript                         4.8.4\r\nwebpack                            5.76.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nHere's my `tsconfig.spec.ts`\r\n\r\n```\r\n{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../out-tsc/spec\",\r\n    \"baseUrl\": \"./\",\r\n    \"downlevelIteration\": true,\r\n    \"types\": [\r\n      \"jasmine\",\r\n      \"node\"\r\n    ]\r\n  },\r\n  \"files\": [\r\n    \"test.ts\",\r\n    \"polyfills.ts\"\r\n  ],\r\n  \"include\": [\r\n    \"**/*.spec.ts\",\r\n    \"**/*.d.ts\"\r\n  ]\r\n}\r\n```\r\n\r\nHere's my test config in `angular.json`\r\n```\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"preserveSymlinks\": true,\r\n            \"main\": \"src/test.ts\",\r\n            \"karmaConfig\": \"./karma.conf.js\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"src/tsconfig.spec.json\",\r\n            \"scripts\": [],\r\n            \"styles\": [\"src/styles.css\"],\r\n            \"assets\": [\"src/assets\", \"src/favicon.ico\", \"src/manifest.webmanifest\"]\r\n          }\r\n        }\r\n```\r\n\r\nHere's my Karma config\r\n```\r\n// Karma configuration file, see link for more information\r\n// https://karma-runner.github.io/1.0/config/configuration-file.html\r\n\r\nmodule.exports = function (config) {\r\n  config.set({\r\n    basePath: '',\r\n    frameworks: ['jasmine', '@angular-devkit/build-angular'],\r\n    plugins: [\r\n      require('karma-jasmine'),\r\n      require('karma-chrome-launcher'),\r\n      require('karma-jasmine-html-reporter'),\r\n      require('karma-junit-reporter'),\r\n      require('karma-coverage-istanbul-reporter'),\r\n      require('@angular-devkit/build-angular/plugins/karma')\r\n    ],\r\n    client:{\r\n      clearContext: false // leave Jasmine Spec Runner output visible in browser\r\n    },\r\n    coverageIstanbulReporter: {\r\n      reports: [ 'html', 'lcovonly' ],\r\n      fixWebpackSourcePaths: true\r\n    },\r\n    angularCli: {\r\n      environment: 'test'\r\n    },\r\n    reporters: ['progress', 'kjhtml'],\r\n    port: 9876,\r\n    colors: true,\r\n    logLevel: config.LOG_INFO,\r\n    autoWatch: true,\r\n    browsers: ['Chrome'],\r\n    singleRun: false,\r\n    junitReporter: {\r\n      outputDir: process.env.TEST_RESULTS,\r\n      outputFile: 'karma-results.xml',\r\n      useBrowserName: false\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nHere's one of my tests\r\n```\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { TestBed, waitForAsync, ComponentFixture } from '@angular/core/testing'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { By } from '@angular/platform-browser'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { TranslateModule } from '@ngx-translate/core'\r\nimport { Store } from '@ngxs/store'\r\nimport { Observable, of } from 'rxjs'\r\n\r\nimport { SharedModule } from '../../shared/modules/shared.module'\r\nimport { AuthService } from '../../core/services'\r\nimport { LoginComponent } from './login.component'\r\nimport { PhoneNumberModule } from '../../shared/modules/phone-number/phone-number.module'\r\nimport { Organization } from '../../core/interfaces/organization/organization'\r\n\r\ndescribe('LoginComponent', () => {\r\n  let fixture: ComponentFixture<LoginComponent>\r\n  let fakeAuthService: AuthService\r\n\r\n  class ActivatedRouteMock {\r\n    queryParams = new Observable((observer) => {\r\n      const urlParams = { redirectTo: '' }\r\n      observer.next(urlParams)\r\n      observer.complete()\r\n    })\r\n  }\r\n\r\n  class StoreMock {}\r\n\r\n  beforeEach(waitForAsync(() => {\r\n    fakeAuthService = jasmine.createSpyObj<AuthService>('AuthService', {\r\n      loginAdminDashboard: of({ clubs: [{ name: 'Organization' } as Organization], sponsors: [] })\r\n    })\r\n\r\n    TestBed.configureTestingModule({\r\n      declarations: [LoginComponent],\r\n      imports: [TranslateModule.forRoot(), BrowserAnimationsModule, SharedModule, PhoneNumberModule],\r\n      providers: [\r\n        { provide: ActivatedRoute, useClass: ActivatedRouteMock },\r\n        { provide: Store, useClass: StoreMock },\r\n        { provide: AuthService, useValue: fakeAuthService }\r\n      ]\r\n    }).compileComponents()\r\n\r\n    fixture = TestBed.createComponent(LoginComponent)\r\n    fixture.detectChanges()\r\n  }))\r\n\r\n  it('submits the form succesfully', () => {\r\n    fixture.componentInstance.loginForm.patchValue({\r\n      phoneCountryCode: '+47',\r\n      phoneMobile: '91910101',\r\n      password: 'password'\r\n    })\r\n\r\n    const form = fixture.debugElement.query(By.css(`[data-testid=\"form\"]`))\r\n    form.triggerEventHandler('ngSubmit')\r\n\r\n    expect(fakeAuthService.loginAdminDashboard).toHaveBeenCalled()\r\n  })\r\n\r\n  it(`does not submit the form when it's not valid`, () => {\r\n    fixture.componentInstance.loginForm.patchValue({\r\n      phoneCountryCode: '+47',\r\n      phoneMobile: '',\r\n      password: ''\r\n    })\r\n\r\n    const form = fixture.debugElement.query(By.css(`[data-testid=\"form\"]`))\r\n    form.triggerEventHandler('ngSubmit')\r\n\r\n    expect(fakeAuthService.loginAdminDashboard).not.toHaveBeenCalled()\r\n  })\r\n})\r\n```","Url":"https://github.com/angular/angular-cli/issues/25885","RelatedDescription":"Open issue \"Karma/Jasmine tests don't run after upgrading from Angular 14 to 15\" (#25885)"},{"Id":"1906121721","IsPullRequest":true,"CreatedAt":"2023-09-21T14:10:17","Actor":"angular-robot","Number":"25882","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `4eac3f5` -> `914324e` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `184fafd` -> `029a92c` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `846fcd1` -> `b8b41c5` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `099cb0d` -> `5af68f6` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `09c3098` -> `6f48ac1` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `9828266` -> `cded431` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `554d9dd` -> `0c285d6` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `d9cbc03` -> `ba20742` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `1016359` -> `3cf1bf0` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `fd42eee` -> `9f73400` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `7aebba4` -> `b3d875d` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `b017bb9` -> `6a436c9` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `351a9d3` -> `bd1435d` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1eb7b57` -> `3bde09e` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `0330d68` -> `66d8c79` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `20e6874` -> `b4eed00` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `acf8a26` -> `e1f56c2` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `8e3be4c` -> `f0e11a9` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `c78aff5` -> `1b2f44f` |\n| angular/dev-infra | action | digest | `b574141` -> `62e28b7` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi45OS4wIiwidXBkYXRlZEluVmVyIjoiMzYuOTkuMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25882","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25882)"},{"Id":"1905981138","IsPullRequest":true,"CreatedAt":"2023-09-21T09:02:20","Actor":"clydin","Number":"25881","RawContent":null,"Title":"feat(@angular-devkit/build-angular): initial support for application Web Worker discovery with esbuild","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser-esbuild`), Web Workers following the previously\r\nsupported syntax as used in the Webpack-based builder will now be discovered. The worker entry points are not\r\nyet bundled or otherwise processed. Currently, a warning will be issued to notify that the worker will not\r\nbe present in the built output.\r\nAdditional upcoming changes will add the processing and bundling support for the workers.\r\n\r\nWeb Worker syntax example: `new Worker(new URL('./my-worker-file', import.meta.url), { type: 'module' });`","Url":"https://github.com/angular/angular-cli/pull/25881","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): initial support for application Web Worker discovery with esbuild\" (#25881)"},{"Id":"1905372773","IsPullRequest":true,"CreatedAt":"2023-09-21T08:58:48","Actor":"cexbrayat","Number":"25877","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use a dash in bundle names","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe files generated by the esbuild-based builder are named `main.xxx.js`, `polyfills.xxx.js` but the chunks are named `chunk-xxx.js`\r\n\r\n## What is the new behavior?\r\n\r\nThis updates the esbuild-based builder to use a dash in bundles and media instead of a dot to be consistent with the chunks files `chunk-xxx.js`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25877","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use a dash in bundle names\" (#25877)"},{"Id":"1906398675","IsPullRequest":false,"CreatedAt":"2023-09-21T08:23:02","Actor":"cexbrayat","Number":"25883","RawContent":null,"Title":"`application` builder generates different linenumber for i18n messages than `browser` builder","State":"open","Body":"### Command\n\nextract-i18n\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ntemplate:\r\n```html\r\n<!-- comment -->\r\n<h1 i18n>Welcome</h1>\r\n<!-- comment -->\r\n```\r\nWhen extracting the messages, `browser` builder gives:\r\n```xml\r\n      <trans-unit id=\"7627914200888412251\" datatype=\"html\">\r\n        <source>Welcome</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.html</context>\r\n          <context context-type=\"linenumber\">2</context>\r\n        </context-group>\r\n      </trans-unit>\r\n```\r\nwhereas application builder gives:\r\n```xml\r\n      <trans-unit id=\"7627914200888412251\" datatype=\"html\">\r\n        <source>Welcome</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.html</context>\r\n          <context context-type=\"linenumber\">2,3</context>\r\n        </context-group>\r\n      </trans-unit>\r\n```\r\n\r\n`linenumber` includes 3 whereas the element is only on line 2.\n\n### Minimal Reproduction\n\n\r\nRun\r\n```\r\nnpx @angular/cli@next new i18n-linenumber --defaults --no-routing\r\ncd i18n-linenumber\r\nng add @angular/localize\r\n```\r\n\r\nReplace the `app.component.html` file with:\r\n```html\r\n<!-- comment -->\r\n<h1 i18n>Welcome</h1>\r\n<!-- comment -->\r\n```\r\n\r\nRun:\r\n```\r\nng extract-i18n --output-path src/locale/\r\n```\r\n\r\nThe generated file is:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\r\n  <file source-language=\"en-US\" datatype=\"plaintext\" original=\"ng2.template\">\r\n    <body>\r\n      <trans-unit id=\"3492007542396725315\" datatype=\"html\">\r\n        <source>Welcome</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.html</context>\r\n          <context context-type=\"linenumber\">2,3</context>\r\n        </context-group>\r\n      </trans-unit>\r\n    </body>\r\n  </file>\r\n</xliff>\r\n```\r\n\r\nSwitch the builder to `browser` in `angular.json` and run the extraction command again.\r\nThe generated file has the correct line number `2`.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.5\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.5\r\n@angular-devkit/build-angular   17.0.0-next.5\r\n@angular-devkit/core            17.0.0-next.5\r\n@angular-devkit/schematics      17.0.0-next.5\r\n@schematics/angular             17.0.0-next.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25883","RelatedDescription":"Open issue \"`application` builder generates different linenumber for i18n messages than `browser` builder\" (#25883)"},{"Id":"1905795928","IsPullRequest":true,"CreatedAt":"2023-09-20T22:48:26","Actor":"clydin","Number":"25880","RawContent":null,"Title":"Bump version to \"v17.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25880","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.5\" with changelog.\" (#25880)"},{"Id":"1905453477","IsPullRequest":true,"CreatedAt":"2023-09-20T19:27:36","Actor":"alan-agius4","Number":"25879","RawContent":null,"Title":"Update Angular and Zone.js","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25879","RelatedDescription":"Closed or merged PR \"Update Angular and Zone.js\" (#25879)"},{"Id":"1905329717","IsPullRequest":true,"CreatedAt":"2023-09-20T17:48:55","Actor":"cexbrayat","Number":"25875","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): typo in ignore list plugin function","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25875","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): typo in ignore list plugin function\" (#25875)"},{"Id":"1905405289","IsPullRequest":true,"CreatedAt":"2023-09-20T17:46:43","Actor":"alan-agius4","Number":"25878","RawContent":null,"Title":"ci: run all unit tests in CI","State":"closed","Body":"At the moment not all tests under `//packages/`. This commit removes the matrix for `test` and always execute all tests.\r\n","Url":"https://github.com/angular/angular-cli/pull/25878","RelatedDescription":"Closed or merged PR \"ci: run all unit tests in CI\" (#25878)"},{"Id":"1905361482","IsPullRequest":true,"CreatedAt":"2023-09-20T17:31:29","Actor":"cexbrayat","Number":"25876","RawContent":null,"Title":"docs: update outdated goldens","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n`yarn public-api:check` is currently failing\r\n\r\n## What is the new behavior?\r\n\r\nThe goldens have been updated with `yarn public-api:update`\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25876","RelatedDescription":"Closed or merged PR \"docs: update outdated goldens\" (#25876)"},{"Id":"1905238576","IsPullRequest":true,"CreatedAt":"2023-09-20T16:36:12","Actor":"cexbrayat","Number":"25873","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use a dot in chunk names","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe esbuild based builder generates chunks named `chunk-xxx.js`.\r\n\r\n## What is the new behavior?\r\n\r\nThis updates the esbuild based builder to use `chunk.xxx.js` instead of `chunk-xxx.js` to be consistent with the other generated files (`main.xxx.js`, `polyfills.xxx.js`, etc).\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25873","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use a dot in chunk names\" (#25873)"},{"Id":"1905282885","IsPullRequest":false,"CreatedAt":"2023-09-20T15:48:53","Actor":"shawnweeks","Number":"25874","RawContent":null,"Title":"ng serve ignores public-host when live reload disabled","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFor the test I setup an /etc/hosts entry for test.example.local pointing at 127.0.0.1 to simulate running ng serve behind a reverse proxy.\r\n\r\nWhen running ng serve behind a reverse proxy where the public-host is not localhost you will receive and invalid host header if you disable live reload with `--no-live-reload` or `--live-reload=false`\n\n### Minimal Reproduction\n\nAdd an /etc/hosts entry for test.example.local then run the following.\r\n\r\n```shell\r\nng new public-host-test # Use all default options\r\ncd public-host-test\r\nng serve --public-host test.example.local --no-live-reload\r\n```\r\n\r\nThen open a browser and try to access the app at `http://test.example.local:4200` where you'll notice the `Invalid Host header` error, if I leave live reload enabled this all works fine. I've confirmed this behavior on MacOS and RHEL 8. \n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.2.3\r\nNode: 16.18.0\r\nPackage Manager: npm 9.6.5\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25874","RelatedDescription":"Open issue \"ng serve ignores public-host when live reload disabled\" (#25874)"},{"Id":"1904930413","IsPullRequest":true,"CreatedAt":"2023-09-20T13:49:57","Actor":"alan-agius4","Number":"25872","RawContent":null,"Title":"feat(@angular-devkit/build-angular): apply global CSS updates without a live-reload when using `vite`","State":"closed","Body":"\r\nThis commit changes the way that global style updates are applied when using `vite`.  When either live-reload or hmr are enabled the styles are replaced in placed (HMR style) without a live-reload.\r\n","Url":"https://github.com/angular/angular-cli/pull/25872","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): apply global CSS updates without a live-reload when using `vite`\" (#25872)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1912374790","IsPullRequest":true,"CreatedAt":"2023-09-25T22:31:39","Actor":"stephanietuerk","Number":"27846","RawContent":null,"Title":"docs(material/slider): clarify behavior of slider range thumbs","State":"open","Body":"Clarifies possible behavior/values of matStartThumb and matEndThumb in slider component 'Selecting a range' documentation.\r\n\r\nAddresses #27837","Url":"https://github.com/angular/components/pull/27846","RelatedDescription":"Open PR \"docs(material/slider): clarify behavior of slider range thumbs\" (#27846)"},{"Id":"1909468822","IsPullRequest":false,"CreatedAt":"2023-09-25T20:26:45","Actor":"emilyzhang242","Number":"27831","RawContent":null,"Title":"bug(Autocomplete): Flickering/reappearing dropdown menu ","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nUsing the legacy autocomplete component. We migrated to MDC. \n\n### Description\n\nWhen you select an option in the matAutocomplete menu, the option dropdown flickers/flashes briefly. You can see this in any of the examples on the material angular page.\r\n\r\nhttps://material.angular.io/components/autocomplete/examples\r\n\r\nThis is problematic because when I try to reopen the matAutocomplete panel using `requestAnimationFrame`, the old panel still exists and it pushes the new panel to the side for a brief moment while it reappears, causing really strange flickering behavior.\n\n### Reproduction\n\nN/A\n\n### Expected Behavior\n\nThe dropdown should not flicker/reappear and should just vanish when an option is selected.\n\n### Actual Behavior\n\nThe dropdown disappears and then reappears very briefly after selecting an option.\n\n### Environment\n\n- Angular: 2 \r\n- CDK/Material: Material\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27831","RelatedDescription":"Closed issue \"bug(Autocomplete): Flickering/reappearing dropdown menu \" (#27831)"},{"Id":"1911724682","IsPullRequest":false,"CreatedAt":"2023-09-25T20:14:39","Actor":"nbianka99","Number":"27842","RawContent":null,"Title":"bug(mat.core()): Undeclared mixin","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to make a custom theme for my Angular Project and I receive the 'Undeclared mixin' error even though I insert the following line at the top of my theme file: @use '@angular/material' as mat;\r\nWhen I try to @include mat.core(); I receive this error.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create a .scss file \r\n2. Add the following code to it:\r\n`@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n$my-primary: mat.define-palette(mat.$indigo-palette, 500);\r\n$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-theme: mat.define-light-theme((\r\n color: (\r\n   primary: $my-primary,\r\n   accent: $my-accent,\r\n ),\r\n typography: mat.define-typography-config(),\r\n density: 0,\r\n));\r\n\r\n@include mat.all-component-themes($my-theme);`\r\n4. \r\n\n\n### Expected Behavior\n\nIt should not throw an error\n\n### Actual Behavior\n\nIt throws an error\n\n### Environment\n\n- Angular:  16.2.3\r\n- CDK/Material: 16.2.5\r\n- Browser(s): Chrome/Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27842","RelatedDescription":"Closed issue \"bug(mat.core()): Undeclared mixin\" (#27842)"},{"Id":"1907014560","IsPullRequest":false,"CreatedAt":"2023-09-25T20:05:59","Actor":"iKrishnaSahu","Number":"27823","RawContent":null,"Title":"bug(mat-paginator): need a way to add custom class on button's tooltip","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe have created a theming system in our private library around angular material which consumes all the material components and created custom stylings for all those components.\r\nWe have custom stylings for tooltip as well which we apply using a custom class/attribute.\r\n\r\nIs there any way I can assign a custom class on tooltip of the paginator's button?\r\n\r\nAlso there is no unique class applied to the tooltip of paginator's button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThere should be a way to add custom class on tooltip of paginator's button\r\n\r\n### Actual Behavior\r\n\r\nThere isn't any way to add custom class on tooltip of paginator's button\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27823","RelatedDescription":"Closed issue \"bug(mat-paginator): need a way to add custom class on button's tooltip\" (#27823)"},{"Id":"1911981696","IsPullRequest":false,"CreatedAt":"2023-09-25T17:23:00","Actor":"stnor","Number":"27845","RawContent":null,"Title":"MatFormField (outline) label cut off in MatDialog","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen setting theme density to -1 and using `<mat-form-field>` with appearance: 'outline' the top of the form field gets cut off in a MatDialog unless using the following rule as a global style:\r\n```\r\n  .mat-mdc-dialog-content > mat-form-field {\r\n    margin-top: 4px !important;\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/27845","RelatedDescription":"Open issue \"MatFormField (outline) label cut off in MatDialog\" (#27845)"},{"Id":"1911852979","IsPullRequest":false,"CreatedAt":"2023-09-25T16:11:06","Actor":"raphael22","Number":"27844","RawContent":null,"Title":"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS","State":"open","Body":"### Feature Description\n\nAdd a token to allow default options for mat-badge.\n\n### Use Case\n\nAlignment with other DEFAULT_OPTIONS token.","Url":"https://github.com/angular/components/issues/27844","RelatedDescription":"Open issue \"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS\" (#27844)"},{"Id":"1911826099","IsPullRequest":false,"CreatedAt":"2023-09-25T15:56:01","Actor":"Simona25","Number":"27843","RawContent":null,"Title":"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPreviously the mat-tab-nav-bar tabs could be activated both with space and enter, while now the space key still works but the enter doesn't trigger the action anymore. \n\n### Reproduction\n\nLink:  https://material.angular.io/components/tabs/examples official material example (Basic tab nav bar)\r\nSteps to reproduce:\r\n1. Use the keyboard to move the focus inside the tab nav bar,\r\n2. Pressing Enter nothing happen,\r\n3. Pressing the Space the tab is correctly activated.\r\n\n\n### Expected Behavior\n\nPressing Enter the tab should be activated like when using hte Space.\n\n### Actual Behavior\n\nPressing Space works, while pressing Enter doesn't and the tab link isn't activated.\n\n### Environment\n\n- Angular: 16.2.5 (but also on the 15.2.5 for example)\r\n- CDK/Material:  16.2.5 (but also on the 15.2.5 for example)\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27843","RelatedDescription":"Open issue \"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key\" (#27843)"},{"Id":"1911717338","IsPullRequest":false,"CreatedAt":"2023-09-25T15:04:22","Actor":"PatnamBalaji","Number":"27841","RawContent":null,"Title":"MatDialog: When using in dynamically loaded component using module federation throws error No provider for MatDialogRef","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n**test.component.ts**\r\n```\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-test-dialog',\r\n  template: `<h1>Hello world</h1>`,\r\n})\r\nexport class TestDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TestDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // console.log(this.data)\r\n  }\r\n}\r\n```\r\n\r\n**webpack.config.ts**\r\n```\r\nplugins: [\r\n    new ModuleFederationPlugin({\r\n      name: 'test',\r\n      library: { type: 'var', name: 'test' },\r\n      filename: 'remoteEntry.js',\r\n      exposes: {\r\n        TestModule: './src/app/feature/test/test.module.ts',\r\n        TestDialogComponent: './src/app/feature/test-dialog/test-dialog.component.ts',\r\n      },\r\n})\r\n```\r\n\r\n\r\n**app.component.ts**\r\n```\r\nconst { TestDialogComponent } = await loadRemoteModule({\r\n      remoteName: 'test',\r\n      remoteEntry: 'http://localhost:4200/remoteEntry.js',\r\n      exposedModule: 'TestModule',\r\n    });\r\n    this.dialog.open(TestDialogComponent, {\r\n      width: '80%',\r\n      data: {\r\n        person: {\r\n          name: 'Simon',\r\n          age: 32,\r\n        },\r\n      },\r\n    });\r\n```\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create any dialog component and inject (MatDialogRef/MAT_DIALOG_DATA)\r\n2. Expose the component in the webpack.config.ts file\r\n3. Install loadRemoteModule package\r\n4. Load the remoteEntry url and open component using mat-dialog\r\n\r\n\r\n### Expected Behavior\r\n\r\nIt should work without throwing any error.\r\n\r\n\r\n\r\n### Actual Behavior\r\n\r\nThrows below error:\r\n\r\n```\r\nvendor.js:115817 ERROR Error: Uncaught (in promise): NullInjectorError: R3InjectorError(AppModule)[MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef]: \r\n  NullInjectorError: No provider for MatDialogRef!\r\nNullInjectorError: R3InjectorError(AppModule)[MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef]: \r\n  NullInjectorError: No provider for MatDialogRef!\r\n    at NullInjector.get (vendor.js:119280:27)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at Object.get (vendor.js:133226:35)\r\n    at resolvePromise (polyfills.js:212556:31)\r\n    at polyfills.js:212463:17\r\n    at polyfills.js:212479:33\r\n    at asyncGeneratorStep (src_app_feature_app_module_ts-_7c230.js:5645:5)\r\n    at _next (src_app_feature_app_module_ts-_7c230.js:5664:9)\r\n    at _ZoneDelegate.invoke (polyfills.js:211717:26)\r\n    at Object.onInvoke (vendor.js:136853:33)\r\n    at _ZoneDelegate.invoke (polyfills.js:211716:52)\r\n    at Zone.run (polyfills.js:211479:43)\r\n    at polyfills.js:212620:36\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.0\r\n- CDK/Material:12.2.0\r\n- Browser(s):Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):Windows & Chrome\r\n","Url":"https://github.com/angular/components/issues/27841","RelatedDescription":"Open issue \"MatDialog: When using in dynamically loaded component using module federation throws error No provider for MatDialogRef\" (#27841)"},{"Id":"1911522085","IsPullRequest":false,"CreatedAt":"2023-09-25T13:31:41","Actor":"ilyakonrad","Number":"27840","RawContent":null,"Title":"feat(theming): Provide reasonable theme defaults if no themes are included","State":"open","Body":"### Feature Description\n\nI'm working on upgrading to version 15 and after running the migration and starting to investigate the changes required, I noticed that if you don't define a custom theme or import a default one, components' styles will be broken.\r\n\r\nWhen I went with a default theme, I wanted to fix some structural strangeness like this:\r\n<img width=\"294\" alt=\"image\" src=\"https://github.com/angular/components/assets/25200186/0013e819-d5f8-471f-8208-803cc9e51568\">\r\nThen I noticed that this and other structural styles (like paddings etc...) are defined in a theme file instead of being a part of the core.\r\n\r\nWhy? Aren't they supposed to be the same? Shouldn't theme be about color and typography?\r\nAm I missing the density here? But even if so, why not have a default styles that can **optionally** be overwritten by applying a theme?\n\n### Use Case\n\nIncluding (at least) structural styles into the core styles imo would make it clearer and easier to start using the library, since you wouldn't have to learn about the theming (you gotta admit, it's confusing). Also it feels less of a hack to overwrite library's CSS from one source than multiple.","Url":"https://github.com/angular/components/issues/27840","RelatedDescription":"Open issue \"feat(theming): Provide reasonable theme defaults if no themes are included\" (#27840)"},{"Id":"1909491704","IsPullRequest":false,"CreatedAt":"2023-09-25T11:33:15","Actor":"varzaman","Number":"27832","RawContent":null,"Title":"bug(CdkMenu): Context Menu closes after opening when using ctrl+ left click in Safari","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Safari, the CDK Menu upon being triggered with control + left click opens, and then automatically closes on mouse up.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-kxocsn?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the StackBlitz link in Safari \r\n2. Right click in the application screen. A context menu will show up. Close it. (This is just to verify you get the context menu).\r\n3. Open up the context menu using ctrl + left click.\r\n4. Observe the behavior.\r\n\n\n### Expected Behavior\n\n- Context Menu opens up the same way as using right click. \r\n- Context Menu gets dismissed when the context menu is clicked off of.\n\n### Actual Behavior\n\n- Context Menu opens, and automatically closes on mouse up\n\n### Environment\n\n- Angular: 16.2.2\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Safari 16.6\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MAC OS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/27832","RelatedDescription":"Closed issue \"bug(CdkMenu): Context Menu closes after opening when using ctrl+ left click in Safari\" (#27832)"},{"Id":"1910841615","IsPullRequest":true,"CreatedAt":"2023-09-25T11:33:14","Actor":"crisbeto","Number":"27838","RawContent":null,"Title":"fix(cdk/menu): context menu closing immediately on control + click on Safari","State":"closed","Body":"Works around a browser inconsistency that was causing the context menu to close immediately when it is opened with control + left click on Safari.\r\n\r\nFixes #27832.","Url":"https://github.com/angular/components/pull/27838","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): context menu closing immediately on control + click on Safari\" (#27838)"},{"Id":"1911141517","IsPullRequest":false,"CreatedAt":"2023-09-25T10:08:28","Actor":"poveu","Number":"27839","RawContent":null,"Title":"bug(material/chip): textContent of any HTML element inside mat-chip-row is being appended to FormControl value on focus out (blur) event","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWhen there is any HTML element inside `<mat-chip-row>`, or even just the matChipRemove button is wrapped inside some `<ng-container>` (like with `*ngIf`, checking if the user has the privilege to delete), then the whole chip-row's value contains this element's textContent (button with `<mat-icon>cancel</mat-icon>` in this case) after focusing out of the component.\r\n\r\nSo for example, value `[\"Apple\"]` becomes `[\"Apple cancel\"]` (because `cancel` is part of `<mat-icon>`'s textContent).\r\n\r\n```\r\n<mat-chip-row *ngFor=\"let fruit of formControl.value\">\r\n  {{ fruit }}\r\n  <ng-container *ngIf=\"true\">\r\n    <button matChipRemove>\r\n      <mat-icon>cancel</mat-icon>\r\n    </button>\r\n  </ng-container>\r\n</mat-chip-row>\r\n```\r\n\r\n(when `matChipRemove` button is not wrapped inside `<ng-container>` or any other HTML element then its textContent is being ignored, which, I guess, is correct behavior)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link:\r\nhttps://stackblitz.com/edit/ovb2sn-s41kjs?file=src%2Fapp%2Fchips-autocomplete-example.html,src%2Fapp%2Fchips-autocomplete-example.ts\r\n\r\nSteps to reproduce:\r\nClick on the text input and then focus it out.\r\nThis will run Material's blur/focusOut code and update the form control value with the chips' textContent which becomes `[\"Apple cancel\"]`.\r\nMore focus in/out clicks will keep appending ` cancel` to the form control's value.\r\n\r\n### Expected Behavior\r\n\r\nNot appending HTML elements' textContent to chip's form control value\r\n\r\n### Actual Behavior\r\n\r\nHTML element's textContent is being appended to chip's form control value\r\n\r\n### Environment\r\n\r\n- Angular: 15+\r\n- CDK/Material: 15+\r\n- Browser(s): Any browser\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Any OS\r\n","Url":"https://github.com/angular/components/issues/27839","RelatedDescription":"Open issue \"bug(material/chip): textContent of any HTML element inside mat-chip-row is being appended to FormControl value on focus out (blur) event\" (#27839)"},{"Id":"1910137335","IsPullRequest":true,"CreatedAt":"2023-09-25T07:20:32","Actor":"crisbeto","Number":"27836","RawContent":null,"Title":"build: update to latest version of Sass","State":"closed","Body":"Updates the repo to the latest version of Sass since we had fallen behind a bit.","Url":"https://github.com/angular/components/pull/27836","RelatedDescription":"Closed or merged PR \"build: update to latest version of Sass\" (#27836)"},{"Id":"1910375906","IsPullRequest":false,"CreatedAt":"2023-09-24T20:54:02","Actor":"stephanietuerk","Number":"27837","RawContent":null,"Title":"docs-bug(slider): Clarify doc description of ability for range sider thumbs to overlap","State":"open","Body":"### Documentation Feedback\n\nThe Slider docs in the [Selecting a range](https://material.angular.io/components/slider/overview#selecting-a-range) section may benefit from some clarification. Currently the documentation states that:\r\n\r\n> Each of the thumbs has an independent value, but they won't be allowed to overlap\r\n\r\nbut very clearly the two thumbs in a range slider can be positioned to have the same value. \r\n\r\nI'm not sure what is intended by \"they won't be allowed to overlap,\" but to me this is confusing text given the behavior. \r\n\r\n![image](https://github.com/angular/components/assets/13357861/ba14791a-554f-493f-b06b-ea761f6c7005)\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/slider/overview#selecting-a-range","Url":"https://github.com/angular/components/issues/27837","RelatedDescription":"Open issue \"docs-bug(slider): Clarify doc description of ability for range sider thumbs to overlap\" (#27837)"},{"Id":"1909774757","IsPullRequest":true,"CreatedAt":"2023-09-24T17:23:19","Actor":"crisbeto","Number":"27833","RawContent":null,"Title":"build: replace custom lint rule with compiler option","State":"closed","Body":"We currently have a lint rule that prevents dotted access in `SimpleChanges` objects, because it will break with property minification. These changes replace the rule with the built-in `noPropertyAccessFromIndexSignature` compiler option which has the same effect with the added benefit of aligning us closer with g3 and reducing the amount of code we need to maintain.","Url":"https://github.com/angular/components/pull/27833","RelatedDescription":"Closed or merged PR \"build: replace custom lint rule with compiler option\" (#27833)"},{"Id":"1910025897","IsPullRequest":true,"CreatedAt":"2023-09-23T22:56:52","Actor":"wartab","Number":"27835","RawContent":null,"Title":"feat(material/core): improve date parsing in the NativeDateAdapter","State":"open","Body":"Improve date parsing by taking the supplied locale into account for date component ordering and inferring current year if it hasn't been supplied.\r\n\r\nThis partially addresses the issue https://github.com/angular/components/issues/27412 and should make the NativeDateAdapter become significantly more useful, especially for non English locales.\r\n\r\nThis also addresses things discussed in (mainly that it was too complicated):\r\nhttps://github.com/angular/components/pull/27495","Url":"https://github.com/angular/components/pull/27835","RelatedDescription":"Open PR \"feat(material/core): improve date parsing in the NativeDateAdapter\" (#27835)"},{"Id":"1909863502","IsPullRequest":false,"CreatedAt":"2023-09-23T12:54:56","Actor":"LanderBeeuwsaert","Number":"27834","RawContent":null,"Title":"bug(OVERLAY): Overlay scrollblock always adds a scrollbar even if there is no scrolling possible","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nMake sure that:\r\n- the browser tab is zoomed to more than 100%\r\n- you're on a page that doesn't have a vertical scrollbar\r\n\r\nactivate a CDK overlay, even the one serving as the mat-dialog background is good enough.\r\nthe page will now have a vertical scrollbar:\r\n<img width=\"1920\" alt=\"image\" src=\"https://github.com/angular/components/assets/1098243/6f5a134c-d433-4247-b166-ddef3e23fbd0\">\r\n\r\n\r\nOverriding \r\n<img width=\"263\" alt=\"image\" src=\"https://github.com/angular/components/assets/1098243/7caa5b3b-86d3-47ba-969f-92b250672735\">\r\ndoes the trick.\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo scrollbar if there is no scrollbar in the page.\r\n\r\n### Actual Behavior\r\n\r\nA scrollbar if there is no scrollbar in the page.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2\r\n- CDK/Material: 16.2 half MDC half not\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/27834","RelatedDescription":"Open issue \"bug(OVERLAY): Overlay scrollblock always adds a scrollbar even if there is no scrolling possible\" (#27834)"},{"Id":"1907872649","IsPullRequest":true,"CreatedAt":"2023-09-22T22:11:11","Actor":"mmalerba","Number":"27826","RawContent":null,"Title":"feat(material-experimental/theming): add M3 slider support","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27826","RelatedDescription":"Closed or merged PR \"feat(material-experimental/theming): add M3 slider support\" (#27826)"},{"Id":"1907825810","IsPullRequest":true,"CreatedAt":"2023-09-22T21:43:14","Actor":"mmalerba","Number":"27824","RawContent":null,"Title":"feat(material-experimental/theming): add M3 snackbar support","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27824","RelatedDescription":"Closed or merged PR \"feat(material-experimental/theming): add M3 snackbar support\" (#27824)"},{"Id":"1907833811","IsPullRequest":true,"CreatedAt":"2023-09-22T21:13:49","Actor":"mmalerba","Number":"27825","RawContent":null,"Title":"refactor(material/card): remove legacy theme normalization","State":"closed","Body":"This is no longer needed now that everything is using the new theme inspection APIs","Url":"https://github.com/angular/components/pull/27825","RelatedDescription":"Closed or merged PR \"refactor(material/card): remove legacy theme normalization\" (#27825)"},{"Id":"1908651222","IsPullRequest":false,"CreatedAt":"2023-09-22T16:49:33","Actor":"Junaid0067","Number":"27829","RawContent":null,"Title":"bug(Service): On hover the ChatGPT icon background color not changing","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIn hovering on ChatGPT icon and Low Code Development icon, background color is not changing like it is changing for every icon\r\n\r\n![image](https://github.com/angular/components/assets/96833116/62fd2462-20ff-46ef-b056-544ed9b5a410)\r\n\r\n\r\n### Reproduction\r\n\r\n\r\nSteps to reproduce:\r\n1. Got to Home Page\r\n2. Hover on Service in menu bar\r\n3. then Hover on ChatGPT development icon\r\n\r\n\r\n### Expected Behavior\r\n\r\nIcon backgound color should be change for icon\r\n\r\n### Actual Behavior\r\n\r\nIcon bg color as it is on hovering\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27829","RelatedDescription":"Closed issue \"bug(Service): On hover the ChatGPT icon background color not changing\" (#27829)"},{"Id":"1908923224","IsPullRequest":true,"CreatedAt":"2023-09-22T13:34:18","Actor":"amysorto","Number":"27830","RawContent":null,"Title":"fix(material/dialog): Emit tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27830","RelatedDescription":"Open PR \"fix(material/dialog): Emit tokens under mixin root selector\" (#27830)"},{"Id":"1908326239","IsPullRequest":true,"CreatedAt":"2023-09-22T08:18:17","Actor":"crisbeto","Number":"27827","RawContent":null,"Title":"Clean up shared test files","State":"closed","Body":"Cleans up the various `shared.spec.ts` files. They were introduced so we could ensure that the MDC and non-MDC harnesses behaved identically. Now that we only have one set of components, we don't need to separate the tests anymore.","Url":"https://github.com/angular/components/pull/27827","RelatedDescription":"Closed or merged PR \"Clean up shared test files\" (#27827)"},{"Id":"1908361793","IsPullRequest":false,"CreatedAt":"2023-09-22T07:40:40","Actor":"ice-blaze","Number":"27828","RawContent":null,"Title":"bug(badge): Badge doesn't react to the browser font size","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen you change the size of the font through the browser settings. The badges remain the same size.\r\n\r\nComparison images:\r\nsmall\r\n![image](https://github.com/angular/components/assets/3356843/68ca940f-049e-40c7-8a8e-a69e115ba2e1)\r\nlarge\r\n![image](https://github.com/angular/components/assets/3356843/1381910a-5658-4626-b995-767a6c5f7db1)\r\nchrome option\r\n![image](https://github.com/angular/components/assets/3356843/1b3f7e7d-b571-4fc4-82f2-f028b1858d7d)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go in the Chrome options\r\n2. Search for \"Font size\"\r\n3. Set to \"Very small\"\r\n4. Go on https://material.angular.io/components/badge/overview\r\n5. Now change to \"Very large\"\r\n6. Compare again on the doc page\n\n### Expected Behavior\n\nI have a feeling the badges should follow the size of the font. \n\n### Actual Behavior\n\nBadges font remain unchanged between very small or very large font option.\n\n### Environment\n\n- Angular: 16.2.5\r\n- CDK/Material: 16.2.5\r\n- Browser(s): Chrome 116.0.5845.187\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS 13.5.2\r\n","Url":"https://github.com/angular/components/issues/27828","RelatedDescription":"Open issue \"bug(badge): Badge doesn't react to the browser font size\" (#27828)"},{"Id":"1905857549","IsPullRequest":true,"CreatedAt":"2023-09-21T14:40:25","Actor":"zarend","Number":"27821","RawContent":null,"Title":"Bump version to \"v17.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27821","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.4\" with changelog.\" (#27821)"},{"Id":"1906588583","IsPullRequest":false,"CreatedAt":"2023-09-21T09:59:53","Actor":"masse","Number":"27822","RawContent":null,"Title":"bug(DatePicker): min-date validation causes ExpressionChangedAfterItHasBeenCheckedError","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWrapping the Material datepicker in a custom component will cause ExpressionChangedAfterItHasBeenCheckedError **if** the bound form control initially has an invalid date value (with respect to the **min** date set.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/angular-k8zusv?devToolsHeight=33&file=src%2Fapp%2Fcustom-datepicker.component.ts\r\n\r\nSteps to reproduce:\r\n1.  Run the app\r\n2. Note the  ExpressionChangedAfterItHasBeenCheckedError in the console.\r\n3. Edit the code and have an valid initial date > minDate and there is no error.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe form control should be invalid and no ExpressionChangedAfterItHasBeenCheckedError should be thrown\r\n\r\n### Actual Behavior\r\n\r\nWhen an Custom datepicker has en [min] date requirment and the form control has initial invalid value (i.e < minDate) you get an ExpressionChangedAfterItHasBeenCheckedError.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs\r\n\r\nI've reproduced the error in earlier versions as well such as Angular 15.x","Url":"https://github.com/angular/components/issues/27822","RelatedDescription":"Open issue \"bug(DatePicker): min-date validation causes ExpressionChangedAfterItHasBeenCheckedError\" (#27822)"},{"Id":"1905825285","IsPullRequest":true,"CreatedAt":"2023-09-20T23:43:01","Actor":"zarend","Number":"27820","RawContent":null,"Title":"docs: release notes for the v16.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27820","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.5 release\" (#27820)"},{"Id":"1905822073","IsPullRequest":true,"CreatedAt":"2023-09-20T23:02:50","Actor":"zarend","Number":"27819","RawContent":null,"Title":"Bump version to \"v16.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27819","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.5\" with changelog.\" (#27819)"},{"Id":"1905377464","IsPullRequest":false,"CreatedAt":"2023-09-20T16:45:40","Actor":"peterhodges","Number":"27818","RawContent":null,"Title":"bug(CdkMenu): Selectable menu items (radio/checkbox) don't stay open when spacebar used","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFrom looking at the cdk/menu code, it seems the intention is for the menu to stay open when selectable menu items (cdkMenuItemRadio/cdkMenuItemCheckbox) are clicked with a CTRL modifier, or if the user uses the space bar.\r\n\r\nhttps://github.com/angular/components/blob/main/src/cdk/menu/menu-item.ts#L194\r\n\r\nThis doesn't seem to be working (even in the online examples), unless I'm missing something?\r\n\r\nhttps://material.angular.io/cdk/menu/examples\n\n### Reproduction\n\nStackBlitz link: https://components-issue-aea5jm.stackblitz.io\r\nSteps to reproduce:\r\n1. Focus menu button\r\n2. Open menu with ENTER\r\n3. Navigate to one of the buttons (note that they are all MenuItemRadio's)\r\n4. Press SPACE\r\n\n\n### Expected Behavior\n\nMenu closes\n\n### Actual Behavior\n\nMenuItemCheckbox should keep the menu open.\n\n### Environment\n\nLatest (based on CDK docs).\r\n\r\n---\r\n\r\nAngular CLI: 16.1.5\r\nNode: 18.10.0\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 16.1.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.5\r\n@angular-devkit/build-angular   16.1.5\r\n@angular-devkit/core            16.1.5\r\n@angular-devkit/schematics      16.1.5\r\n@angular/cdk                    16.1.5\r\n@angular/cli                    16.1.5\r\n@angular/flex-layout            13.0.0-beta.38\r\n@angular/material               16.1.5\r\n@schematics/angular             16.1.5\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nwebpack                         5.86.0\r\nzone.js                         0.13.0\r\n","Url":"https://github.com/angular/components/issues/27818","RelatedDescription":"Open issue \"bug(CdkMenu): Selectable menu items (radio/checkbox) don't stay open when spacebar used\" (#27818)"},{"Id":"1904700906","IsPullRequest":false,"CreatedAt":"2023-09-20T10:37:13","Actor":"DaSchTour","Number":"27817","RawContent":null,"Title":"bug(radio-group): form scope is not respecated","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nOther than with vanilla radio buttons with angular material radio groups the form is not used as a scope. Radios groups with the same name interfere with each other even if in different forms. This makes it very hard to use them in template driven forms when wanting to pull the data from the NgForm value.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vaq4dq?file=src%2Fexample%2Fradio-overview-example.html\r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nThe form element is used as a scope for radio-groups\n\n### Actual Behavior\n\nRadio groups from all forms are connected by name\n\n### Environment\n\nOS: linux x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1601.0\r\n@angular-devkit/build-angular      16.1.0\r\n@angular-devkit/core               16.1.0\r\n@angular-devkit/schematics         16.1.0\r\n@angular/cdk                       16.2.4\r\n@angular/cli                       16.1.0\r\n@angular/material                  16.2.4\r\n@angular/material-moment-adapter   16.2.4\r\n@schematics/angular                16.1.0\r\nrxjs                               7.4.0\r\ntypescript                         5.0.3","Url":"https://github.com/angular/components/issues/27817","RelatedDescription":"Open issue \"bug(radio-group): form scope is not respecated\" (#27817)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-26T03:30:03.0137562Z","RunDurationInMilliseconds":1947}