{"Data":{"Angular-Issues":{"Issues":[{"Id":"2038796598","IsPullRequest":true,"CreatedAt":"2023-12-13T01:32:52","Actor":"pmvald","Number":"53543","RawContent":null,"Title":"Lcm extra imports2","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53543","RelatedDescription":"Open PR \"Lcm extra imports2\" (#53543)"},{"Id":"2038735676","IsPullRequest":true,"CreatedAt":"2023-12-13T00:18:23","Actor":"kara","Number":"53542","RawContent":null,"Title":"fix(core): update feature usage marker","State":"open","Body":"This commit updates the name of the 'performance.mark' counter used to track feature usage. It now matches the name agreed upon by W3C for this use case:\r\nhttps://github.com/w3c/user-timing/pull/108\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n","Url":"https://github.com/angular/angular/pull/53542","RelatedDescription":"Open PR \"fix(core): update feature usage marker\" (#53542)"},{"Id":"2038719901","IsPullRequest":true,"CreatedAt":"2023-12-12T23:57:53","Actor":"atscott","Number":"53541","RawContent":null,"Title":"fix(core): Multiple subscribers to ApplicationRef.isStable should all…","State":"open","Body":"… see values\r\n\r\nThe behavior of `ApplicationRef.isStable` changed in 16.1 due to https://github.com/angular/angular/commit/28c68f709cdc930e12bac51a266e7bf790656034. This change added a `share` to the `isStable` observable, which prevents additional subscribers from getting a value until a new one emits. One solution to the problem would be `shareReplay(1)`. However, that would increase the bundle size since we do not use `shareReplay` elsewhere. Instead, we don't even really need to share the observable.\r\n\r\nThe `Observable` available in `ApplicationRef.isStable` before the above commit was the zone stable observable, without a `share`. The new behavior adds only an additional observable to the stream, `hasPendingTasks` (a `BehaviorSubject`). The observables in this stream are not expensive to subscribe to. The only one with side effects is the `isStable` (because it subscirbes to onStable), but that one already has the `share` operator on it. Omitting the `share` in `ApplicationRef` also means that applications on `zoneless` will not have to pay the cost of the operator when we make zones optional because the zone stable observable is the only place we use it.\r\n","Url":"https://github.com/angular/angular/pull/53541","RelatedDescription":"Open PR \"fix(core): Multiple subscribers to ApplicationRef.isStable should all…\" (#53541)"},{"Id":"2038707607","IsPullRequest":true,"CreatedAt":"2023-12-12T23:48:51","Actor":"josephperrott","Number":"53540","RawContent":null,"Title":"feat(docs-infra): put the editor back in angular/angular","State":"closed","Body":"Puts the editor back in angular/angular until we are able to set up a package containing a worker as needed for this project\r\n","Url":"https://github.com/angular/angular/pull/53540","RelatedDescription":"Closed or merged PR \"feat(docs-infra): put the editor back in angular/angular\" (#53540)"},{"Id":"2038586594","IsPullRequest":true,"CreatedAt":"2023-12-12T22:32:19","Actor":"mgechev","Number":"53537","RawContent":null,"Title":"docs: add state of js survey link","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/53537","RelatedDescription":"Closed or merged PR \"docs: add state of js survey link\" (#53537)"},{"Id":"2038021957","IsPullRequest":false,"CreatedAt":"2023-12-12T22:31:33","Actor":"fireflysemantics","Number":"53522","RawContent":null,"Title":"Warn when SSR text file routes don't match the configured routes","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nIt would be nice if we received a warning when the `routes.txt` file contains routes not configured in the Angular router.\r\n\r\nIt's related to this issue.\r\nhttps://github.com/angular/angular-cli/issues/26639\n\n### Describe the solution you'd like\n\nIf the routes in `routes.txt`  don't match configured routes log a warning.\r\n\r\nFor example if `routes.txt` looks like this:\r\n\r\n```\r\n/\r\n/products/Jeep\r\n/products/Bronco%  \r\n```\r\n\r\nBut we've only configured a route path like this `product/:id`, then ideally we would get a warning saying that `/products/Jeep` does not match any of the configured route paths.\n\n### Describe alternatives you've considered\n\nBe very careful when crafting `routes.txt`.","Url":"https://github.com/angular/angular/issues/53522","RelatedDescription":"Closed issue \"Warn when SSR text file routes don't match the configured routes\" (#53522)"},{"Id":"2038056055","IsPullRequest":true,"CreatedAt":"2023-12-12T22:31:32","Actor":"alan-agius4","Number":"53523","RawContent":null,"Title":"fix(router): provide more actionable error message when route is not matched in production mode","State":"closed","Body":"\r\nPrior to this commit when a route is not matched and the application was running in production mode an `[Error]: NG04002` was logged in the console. This however, is not actionable when the application is running on the server where there can be multiple pages being rendered at the same time.\r\n\r\nNow we change this to also log the route example: `[Error]: NG04002: 'products/Jeep'`.\r\n\r\nCloses #53522\r\n","Url":"https://github.com/angular/angular/pull/53523","RelatedDescription":"Closed or merged PR \"fix(router): provide more actionable error message when route is not matched in production mode\" (#53523)"},{"Id":"2037213456","IsPullRequest":true,"CreatedAt":"2023-12-12T22:30:42","Actor":"crisbeto","Number":"53515","RawContent":null,"Title":"fix(compiler-cli): generate less type checking code in for loops","State":"closed","Body":"The ops for the implicit variables in `@for` loops (e.g. `$index`) are marked as being mandatory which means that they're generated even if they aren't used. These changes make them optional so they're only added when necessary.","Url":"https://github.com/angular/angular/pull/53515","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): generate less type checking code in for loops\" (#53515)"},{"Id":"2038617440","IsPullRequest":false,"CreatedAt":"2023-12-12T22:04:14","Actor":"Will-at-FreedomDev","Number":"53539","RawContent":null,"Title":"Feature to expand @Input() router binding to work with @Output()","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, router\n\n### Description\n\nSorry if this was already proposed (or something similar). Since [this feature](https://github.com/angular/angular/pull/49633 ) was introduced it makes sense (to me) that there would be an `@Output()` binding counter-part. \n\n### Proposed solution\n\n```\r\nexport class CounterComponent {  \r\n  @Input({ transform: numberAttribute }) currentCount = 0;\r\n  @Output({ queryParam: true }) currentCountChange = new EventEmitter<number>();\r\n\r\n  incrementCounter() {\r\n    this.currentCountChange.emit(++this.currentCount);\r\n  }\r\n}\r\n```\r\nSome notes about this use-case/solution:\r\n- it would be nice if the default functionality was to use the output name (without \"Change\") as the query parameter name.\r\n- it would be nice/necessary to allow a different name for the query parameter (`@Output({ queryParam: 'current-count' })`)\n\n### Alternatives considered\n\nThis works today but is dog-gone verbose.\r\n\r\n```\r\nexport class CounterComponent {  \r\n  @Input({ transform: numberAttribute }) currentCount = 0;\r\n\r\n  private readonly route = inject(ActivatedRoute);\r\n  private readonly router = inject(Router);\r\n\r\n  incrementCounter() {\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParamsHandling: \"merge\",\r\n      queryParams: {\r\n        currentCount : ++this.currentCount,\r\n      } satisfies Partial<CounterComponent>,\r\n    });\r\n  }\r\n}","Url":"https://github.com/angular/angular/issues/53539","RelatedDescription":"Open issue \"Feature to expand @Input() router binding to work with @Output()\" (#53539)"},{"Id":"2038611638","IsPullRequest":true,"CreatedAt":"2023-12-12T21:59:08","Actor":"jessicajaniuk","Number":"53538","RawContent":null,"Title":"refactor(migrations): CF migration - add support for not reformatting i18n tags","State":"open","Body":"Internationalization is whitespace sensitive. This change updates the formatting code to process for i18n attributes and prevent reformatting those sections of the template.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53538","RelatedDescription":"Open PR \"refactor(migrations): CF migration - add support for not reformatting i18n tags\" (#53538)"},{"Id":"2038488645","IsPullRequest":false,"CreatedAt":"2023-12-12T21:44:46","Actor":"mrttrifork","Number":"53535","RawContent":null,"Title":"Make @error catch @defer work with Observable","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nAfter poking around with `@error`, i have come to the conclusion that it only works when the deferred file doesn't load.\r\n\r\nI would like if `@defer` also worked with an `Observable`, so that it would `subscribe` on the `Observable` similarly to `AsyncPipe` and, where it would also go to `@error` if the `Observable` `throws` an `error`\r\n\r\nThe `@error` could be combined with this issue https://github.com/angular/angular/issues/52800\r\n\r\nAnd using `as` syntax is also requested here https://github.com/angular/angular/issues/52898\n\n### Proposed solution\n\n```html\r\n@defer(when observable; as result) {\r\n   <result-cmp [data]=result></result-cmp>\r\n} @placeholder {\r\n   <skeleton-cmp></skeleton-cmp>\r\n} @loading {\r\n   <animating-skeleton-cmp></animating-skeleton-cmp>\r\n} @error(err) {\r\n   <div>\r\n       <span>It failed to load component</span>\r\n       <button click=\"retryDefer()\">Reload</button>\r\n   </div>\r\n}\r\n``` \n\n### Alternatives considered\n\nWhen the `Observable` fails or when the an `error` is `thrown` inside the deferred component, it doesn't end up in the `@error` block, so as of now i don't think it is possible","Url":"https://github.com/angular/angular/issues/53535","RelatedDescription":"Closed issue \"Make @error catch @defer work with Observable\" (#53535)"},{"Id":"2038555946","IsPullRequest":true,"CreatedAt":"2023-12-12T21:11:11","Actor":"JeanMeche","Number":"53536","RawContent":null,"Title":"build: remove `seek-bzip` dependency","State":"open","Body":"`seek-bzip` isn't used anymore, let's remove it.\r\n","Url":"https://github.com/angular/angular/pull/53536","RelatedDescription":"Open PR \"build: remove `seek-bzip` dependency\" (#53536)"},{"Id":"2038461367","IsPullRequest":true,"CreatedAt":"2023-12-12T19:57:59","Actor":"atscott","Number":"53534","RawContent":null,"Title":"refactor(core): Pending render tasks always contributes to appRef sta…","State":"open","Body":"…bleness\r\n\r\nThe `InitialRenderPendingTasks` currently only contributes to the `ApplicationRef` stableness one time to support SSR. This commit updates the service to always contribute to stableness. This will allow services which use the render tasks to always contribute to application ref stableness. This could be used by the zoneless scheduler as an alternative to the way NgZone continuously contributes to the stableness today.\r\n","Url":"https://github.com/angular/angular/pull/53534","RelatedDescription":"Open PR \"refactor(core): Pending render tasks always contributes to appRef sta…\" (#53534)"},{"Id":"2038450355","IsPullRequest":true,"CreatedAt":"2023-12-12T19:50:09","Actor":"julio-lemos","Number":"53533","RawContent":null,"Title":"docs(core): remove duplicate code block in `aplication_init` documentation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53533","RelatedDescription":"Open PR \"docs(core): remove duplicate code block in `aplication_init` documentation\" (#53533)"},{"Id":"2038441075","IsPullRequest":true,"CreatedAt":"2023-12-12T19:42:49","Actor":"dylhunn","Number":"53532","RawContent":null,"Title":"wip: Icu as root","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/53532","RelatedDescription":"Open PR \"wip: Icu as root\" (#53532)"},{"Id":"2038404635","IsPullRequest":true,"CreatedAt":"2023-12-12T19:16:05","Actor":"sasidharansd","Number":"53531","RawContent":null,"Title":"docs: fix broken code example","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #53526\r\n\r\n\r\n## What is the new behavior?\r\nThe broken example will be working and fixed a grammatical mistake\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53531","RelatedDescription":"Open PR \"docs: fix broken code example\" (#53531)"},{"Id":"2038364707","IsPullRequest":true,"CreatedAt":"2023-12-12T18:47:19","Actor":"jessicajaniuk","Number":"53530","RawContent":null,"Title":"fix(migrations): Fix CF migration issues with switch and template parsing","State":"open","Body":"This resolves cases when there was invalid HTML syntax resulting in migrated code that fails to parse and situations where ngswitch migrations have elements in it that aren't cases or default. These would cause problems with buildability post migration.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53530","RelatedDescription":"Open PR \"fix(migrations): Fix CF migration issues with switch and template parsing\" (#53530)"},{"Id":"2038362712","IsPullRequest":true,"CreatedAt":"2023-12-12T18:45:46","Actor":"9kubczas4","Number":"53529","RawContent":null,"Title":"test(docs-infra): reference - unit tests","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe:\r\nUnit tests for `Reference` pages in `adev`.\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53529","RelatedDescription":"Open PR \"test(docs-infra): reference - unit tests\" (#53529)"},{"Id":"2038315667","IsPullRequest":false,"CreatedAt":"2023-12-12T18:35:28","Actor":"brian-w-smith","Number":"53527","RawContent":null,"Title":"Link to CLI command reference broken","State":"closed","Body":"### Describe the problem that you experienced\r\n\r\nFrom the CLI documentation page, the link to the command reference is broken. it currently points to https://angular.dev/cli/commands\r\nWith further browsing, looks like the correct URL should be https://angular.dev/cli\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/tools/cli\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nThe command reference\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nclicking the link\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\n_No response_\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53527","RelatedDescription":"Closed issue \"Link to CLI command reference broken\" (#53527)"},{"Id":"2038345397","IsPullRequest":false,"CreatedAt":"2023-12-12T18:35:00","Actor":"DimitriTsikaridze","Number":"53528","RawContent":null,"Title":"angular devtools: allow changing of signal value inside devtools","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\ncurrently there is no way to change signal value in angular devtools, signal has this getter value which just links to its source code, where as if I assign value directly to a class property I can update it normally.\r\n![image](https://github.com/angular/angular/assets/56136563/02002599-6ef1-4de6-86f8-b1abb1c756e5)\r\n\r\n\r\n### Proposed solution\r\n\r\nno proposed solution\r\n\r\n### Alternatives considered\r\n\r\nno alternatives considered","Url":"https://github.com/angular/angular/issues/53528","RelatedDescription":"Closed issue \"angular devtools: allow changing of signal value inside devtools\" (#53528)"},{"Id":"2038294073","IsPullRequest":false,"CreatedAt":"2023-12-12T17:59:11","Actor":"kabrunko-dev","Number":"53526","RawContent":null,"Title":"(adev) Example for CanActivateFn is broken","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nIn the section [Stack frame in context](https://angular.dev/guide/di/dependency-injection-context#stack-frame-in-context), of the  Dependency Injection guide, the example is broken even though the Markdown file is correct.\r\n\r\nCould be the missing blank line before `<docs-code language=\"typescript\" highlight=\"[3]\">`:\r\n\r\n```\r\n## Stack frame in context\r\n\r\nSome APIs are designed to be run in an injection context. This is the case, for example, of the router guards. It allows the use of [`inject`](api/core/inject) to access a service within the guard function.\r\n\r\nHere is an example for `CanActivateFn`\r\n<docs-code language=\"typescript\" highlight=\"[3]\">\r\nconst canActivateTeam: CanActivateFn =\r\n    (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n      return inject(PermissionsService).canActivate(inject(UserToken), route.params.id);\r\n    };\r\n</docs-code>\r\n```\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/di/dependency-injection-context#stack-frame-in-context\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n![image](https://github.com/angular/angular/assets/142346548/73c18e5d-c8ef-48e2-a116-8011558059da)","Url":"https://github.com/angular/angular/issues/53526","RelatedDescription":"Open issue \"(adev) Example for CanActivateFn is broken\" (#53526)"},{"Id":"2038286914","IsPullRequest":true,"CreatedAt":"2023-12-12T17:53:50","Actor":"cexbrayat","Number":"53525","RawContent":null,"Title":"refactor(core): remove no longer needed FlushableEffectRunner private export","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIt is no longer needed after https://github.com/angular/angular/commit/70a442eb023096b329ea2c0c7010df5339993fe7\r\n\r\n## What is the new behavior?\r\n\r\nThe export is removed\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53525","RelatedDescription":"Open PR \"refactor(core): remove no longer needed FlushableEffectRunner private export\" (#53525)"},{"Id":"2036980750","IsPullRequest":true,"CreatedAt":"2023-12-12T17:04:50","Actor":"JiaLiPassion","Number":"53514","RawContent":null,"Title":"feat(zone.js): implement Promise.withResolvers()","State":"closed","Body":"Implement `Promise.withResolvers()`\r\n\r\n```\r\nconst {promise, resolve, reject} = Promise.withResolvers();\r\n```\r\n\r\n\r\nClose #53507","Url":"https://github.com/angular/angular/pull/53514","RelatedDescription":"Closed or merged PR \"feat(zone.js): implement Promise.withResolvers()\" (#53514)"},{"Id":"2037770018","IsPullRequest":false,"CreatedAt":"2023-12-12T16:46:14","Actor":"sdedieu","Number":"53519","RawContent":null,"Title":"Be able to use Observable and toSignal inside a computed call","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nUsing the `toSignal` function inside a `computed` function lead to the following error: `Error: NG0602: toSignal() cannot be called from within a reactive context. Invoking `toSignal` causes new subscriptions every time. Consider moving `toSignal` outside of the reactive context and read the signal value where needed. Find more at https://angular.io/errors/NG0602`.\r\n\r\nI understand the risk of having multiple subscritpions generated by the change of a signal value into the `computed` function.\r\nBut on the other hand it make sense to have a signal to store data that is build from a computed calls which contains the server call like this: \r\n```\r\nproduct = computed(() =>\r\n   toSignal(this.productService.getProduct(this.productId() /* <- a signal */), {\r\n      initialValue: null,\r\n  })()\r\n);\r\n```\r\n\r\nHere `this.productId` can be a signal comming from an `input` or a route param.\r\n\r\nAt the moment, we would have to write something like this:\r\n```\r\nproduct = toSignal(\r\n    toObservable(this.productId)\r\n    .pipe(\r\n      switchMap(productId => this.productService.getProduct(productId))\r\n    )\r\n  , { initialValue: null })\r\n```\r\n\r\nWould it be possible to have Angular compiling the first showed code into the second one ?\r\n\r\nI've created a [stackblitz](https://stackblitz.com/edit/stackblitz-starters-nqf5mn?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fmain.ts,package.json&title=Angular%20Starter) as a playground.\r\n\r\n### Proposed solution\r\n\r\nI'm definetly not an expert with tools like babel or so...\r\nSo I asked chatGPT few questions and he suggested me a solution which can be a good start for a line of thought (even if the proposed solution is not generic).\r\n\r\n```\r\nconst babel = require('@babel/core');\r\n\r\n// Original code as a string\r\nconst originalCode = `\r\n  computed(() => toSignal(this.productService.getProduct(this._productId()), { initialValue: null })())\r\n`;\r\n\r\n// Modify code using Babel\r\nconst modifiedCode = babel.transformSync(originalCode, {\r\n  plugins: [\r\n    // Use a custom Babel plugin to modify the AST\r\n    function ({ types }) {\r\n      return {\r\n        visitor: {\r\n          // Visit ArrowFunctionExpression nodes\r\n          ArrowFunctionExpression(path) {\r\n            // Check if the arrow function is part of the computed function\r\n            if (\r\n              path.parent.type === 'CallExpression' &&\r\n              path.parent.callee.name === 'computed'\r\n            ) {\r\n              // Replace the arrow function with a new one\r\n              path.replaceWith(\r\n                types.arrowFunctionExpression(\r\n                  path.node.params,\r\n                  // Create a new AST for the desired modified code\r\n                  types.callExpression(\r\n                    types.identifier('toSignal'),\r\n                    [\r\n                      types.callExpression(\r\n                        types.identifier('toObservable'),\r\n                        [path.node.body.arguments[0].object.property]\r\n                      ),\r\n                      types.objectExpression([\r\n                        types.objectProperty(\r\n                          types.identifier('initialValue'),\r\n                          types.nullLiteral()\r\n                        ),\r\n                      ]),\r\n                    ]\r\n                  )\r\n                )\r\n              );\r\n            }\r\n          },\r\n        },\r\n      };\r\n    },\r\n  ],\r\n}).code;\r\n\r\n// Log the modified code\r\nconsole.log(modifiedCode);\r\n\r\n```\r\n\r\n### Alternatives considered\r\n\r\nI know that in the vue ecosystem, there is the [vueuse](https://vueuse.org/) which exposes a [computedAsync](https://vueuse.org/core/computedAsync/#computedasync) function which broadly does what we want.","Url":"https://github.com/angular/angular/issues/53519","RelatedDescription":"Closed issue \"Be able to use Observable and toSignal inside a computed call\" (#53519)"},{"Id":"2038166514","IsPullRequest":false,"CreatedAt":"2023-12-12T16:41:30","Actor":"haladamateusz","Number":"53524","RawContent":null,"Title":"Using the browser-esbuild builder requires one more additional step which is not mentioned in docs.","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nI was not able to run `ng build` after changing builder to `browser-esbuild` which should be the only step to make, according to [documentation](https://angular.dev/tools/cli/esbuild#using-the-browser-esbuild-builder)\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/tools/cli/esbuild#using-the-browser-esbuild-builder\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nI came to [this topic](https://github.com/angular/angular-cli/issues/26304#issuecomment-1817233019) and tried to follow the guidance from angular.dev documentation. I changed the \"builder\" property to `\"@angular-devkit/build-angular:browser-esbuild\"`. Then, upon running `ng build` I received an error `Data path \"\" must have required property 'main'`. Then I realized, I need to exhchange `browser` property to `main` in order to get it work.\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nI wanted to deploy a new angular 17 app to one of many cloud providers. Surprisingly, after running `ng build` my code is not outputted to location from `outputPath` property in angular.json. It's nested in additional `browser/` folder. \r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nAdd extra paragraph to docs, where the property update (from `browser` to `main`)  is mentioned.\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n![image](https://github.com/angular/angular/assets/26378632/46882182-8146-4a1e-8c24-f6e628665a5f)\r\n\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53524","RelatedDescription":"Open issue \"Using the browser-esbuild builder requires one more additional step which is not mentioned in docs.\" (#53524)"},{"Id":"2037898198","IsPullRequest":true,"CreatedAt":"2023-12-12T14:40:31","Actor":"devversion","Number":"53521","RawContent":null,"Title":"#1 Initial PR for signal inputs","State":"open","Body":" See individual commits.\r\n\r\n---\r\n\r\nImplements signal inputs for existing Zone based components.\r\nThis is a next step we are taking to bring signal inputs earlier to the Angular community.\r\n\r\nThe goal is to enable early access for the ecosystem to signal inputs, while we are continuing\r\ndevelopment of full signal components as outlined in the RFC. This will allow the ecosystem\r\nto start integrating signals more deeply, prepare for future migrations, and improves code quality\r\nand DX for existing components (especially for OnPush).\r\n\r\nBased on our work on full signal components, we've gathered more information and learned\r\nnew things. We've improved the API by introducing a way to intuitively declare required inputs,\r\nas well as improved the API around initial values. We even support non-primitive initial values \r\nas the first argument to the `input` function now.\r\n\r\n```ts\r\n@Directive({..})\r\nexport class MyDir {\r\n  firstName = input<string>();            // string|undefined\r\n  lastName = input.required<string>();    // string\r\n  age = input(0);                         // number\r\n```\r\n\r\n_**Technical notes**_\r\nBe aware that signal inputs in Zone components do not necessarily follow all the semantics\r\nas expected in the RFC. Signal inputs in Zone components are not treated as \"computeds\". \r\nThis means, signal inputs are only updated when change detection runs. Not to be confused\r\nwith the semantics for full signal components in the [RFC](https://github.com/angular/angular/discussions/49684#:~:text=Signal%2Dbased%20inputs%20as%20computations). \r\n\r\nComponents can have inputs defined with the `@Input` decorator and `input()` function for signal inputs. The aim is to ease\r\nmigration/adoption of signal inputs.  Full signal components are not expected to support this. For example:\r\n\r\n```ts\r\n// Both of these are valid in the same component\r\nage = input();\r\n@Input() name = '';\r\n```\r\n\r\nAs stated above, we have slightly changed the API signature for `inputs` based on our learnings\r\nwith the RFC-proposed API. We were facing a technical limitation that made it impractical to support\r\nthe API where the first argument of `input` could take either options or an initial value. This was mostly\r\nrelated to complexity around static analysis and enabling future single file compilations. Other than that,\r\nthe changes also allowed us to unlock a few more things as mentioned above.","Url":"https://github.com/angular/angular/pull/53521","RelatedDescription":"Open PR \"#1 Initial PR for signal inputs\" (#53521)"},{"Id":"2037778225","IsPullRequest":false,"CreatedAt":"2023-12-12T13:39:20","Actor":"muhamedkarajic","Number":"53520","RawContent":null,"Title":"Overwrite functions like afterRender etc","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI have a website framework which allowes me to build a website quick and easy however I have a problme that I'm using locomotive scroll and I need to let Angular render the hole DOM and after that I want to execute the refresh function of the locomotive scroll so it calculates how long the scrolling is etc. \r\n\r\nIn order for me to do this in a efficient way I would like to have a way to overwrite the afterRender function to extend a default behavior for all components in my app but still keep the chance to extend the functionality for an individual component.\r\n\r\nWhen I try the following:\r\n```typescript\r\nlet original = afterRender;\r\n(afterRender as any) = function(callback: VoidFunction, options?: AfterRenderOptions) {\r\n  console.log('afterRender overwritten');\r\n  original(callback, options);\r\n}\r\n```\r\n\r\nI'm getting the following result:\r\n```\r\n⠹ Changes detected. Rebuilding...✘ [ERROR] Cannot assign to import \"afterRender\"\r\n\r\n    src/app/initial-loading/initial-loading.component.ts:9:0:\r\n      9 │ afterRender = function (callback, options) {\r\n        ╵ ~~~~~~~~~~~\r\nImports are immutable in JavaScript. To modify the value of this import, you must export a setter function in the imported file (e.g. \"setAfterRender\") and then import and call that function here instead.\r\n```\r\n\r\n### Proposed solution\r\n\r\nAllow me if possible to overwrite aka extend the current behavior of the afterRender.\r\n\r\n### Alternatives considered\r\n\r\nNot sure what else to consider.","Url":"https://github.com/angular/angular/issues/53520","RelatedDescription":"Open issue \"Overwrite functions like afterRender etc\" (#53520)"},{"Id":"2037633331","IsPullRequest":false,"CreatedAt":"2023-12-12T12:58:01","Actor":"kernle27","Number":"53518","RawContent":null,"Title":" Unexpected character \"EOF\" Since Upgrading to vs 17+  ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello, i Upgraded my Project with ng update and it worked seemlesly. I can use the new Features like @if,@for etc... \r\nBut my Problem is that my html Code where i use the new Control flow Syntax get this error :  Unexpected character \"EOF\" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)ngtsc(-995002). I Mean the Program Compiles but the Error is realy ugly and confusing. Hope u guys cold help me.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nUnexpected character \"EOF\" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)ngtsc(-995002)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0\r\nNode: 20.1.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 17.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0\r\n@angular-devkit/build-angular   17.0.0\r\n@angular-devkit/core            17.0.0\r\n@angular-devkit/schematics      17.0.0\r\n@angular/cdk                    17.0.0\r\n@angular/cli                    17.0.0\r\n@schematics/angular             17.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53518","RelatedDescription":"Closed issue \" Unexpected character \"EOF\" Since Upgrading to vs 17+  \" (#53518)"},{"Id":"2037285721","IsPullRequest":false,"CreatedAt":"2023-12-12T09:52:01","Actor":"Ruffeng","Number":"53516","RawContent":null,"Title":"Cli commands page is not available in angular.dev","State":"closed","Body":"### Describe the problem that you experienced\r\n\r\nEvery time I reach [cli commands]( https://angular.dev/cli/commands ) page, I get a Page not found error\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/cli/commands\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nDocumentation with all the commands for the CLI\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n- Inside the Angular.dev, search for docs -> Angular CLI (under developer tools)\r\n- There's an explanation about CLI and 4 boxes on where to go after reading the page\r\n- Click on \"Command Reference\" box\r\n- it leads into [](https://angular.dev/tools/cli), which is a Page not found\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nSee an equivalent section of [https://angular.io/cli](https://angular.io/cli)\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n<img width=\"1068\" alt=\"image\" src=\"https://github.com/angular/angular/assets/18511772/85c01dd3-9056-42fe-bddd-512ab0a7247d\">\r\n\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53516","RelatedDescription":"Closed issue \"Cli commands page is not available in angular.dev\" (#53516)"},{"Id":"2037292178","IsPullRequest":false,"CreatedAt":"2023-12-12T09:09:38","Actor":"arkajitEY","Number":"53517","RawContent":null,"Title":"Bad performance on google lighthouse due to zone.js","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm running lighthouse report on my angular app which also uses spartacus storefront, getting high execution time on pollyfills.js, I am seeing zone.js is the only import in the polyfills.ts file.\r\n\r\npolyfills.ts contains zone.js import only\r\n```\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js';  // Included with Angular CLI.\r\n```\r\nLightHouse report for reference:\r\nhttps://i.stack.imgur.com/uFFiO.png\r\n\r\nI tried updating the zone.js version to latest version but didn't reduce time.\r\n\r\n\r\n\r\nany approach that can reduce the script evaluation time? \r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\nAngular CLI: 15.2.9\r\nNode: 16.16.0","Url":"https://github.com/angular/angular/issues/53517","RelatedDescription":"Closed issue \"Bad performance on google lighthouse due to zone.js\" (#53517)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2038752507","IsPullRequest":false,"CreatedAt":"2023-12-13T00:39:03","Actor":"ryanrivest","Number":"26653","RawContent":null,"Title":"@import with Sass causes errors with browser-esbuild and application builders","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf you use an import without referencing anything in the scss file, the import statement gets included in the generated component styles, which results in a 404 when you load the app. As soon as you reference something, this issue goes away and the styles are properly generated.\r\n\r\nBelow is a snippet of the generated bundle with the issue, and after referencing a variable in the imported scss.\r\n\r\n**Nothing referenced, import statement included (which causes the 404 error)**\r\n```\r\n    t.\\u0275cmp = Sr({\r\n        selectors: [[\"app-root\"]],\r\n        styles: [`@import \"variables\";\\r\r\n\\r\r\n//[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\r\n//   color: $text-default;\\r\r\n// }`]\r\n    });\r\n```\r\n\r\n**Variable referenced, works as expected**\r\n```\t\r\n    t.\\u0275cmp = Sr({\r\n        selectors: [[\"app-root\"]],\r\n        styles: [\"p[_ngcontent-%COMP%]{color:#1a1a1a}\"]\r\n    });\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nHere's a reprod (steps below taken to create: https://github.com/ryanrivest/sass-issue-reprod). To reproduce, you just need to run:\r\n- `npm install`\r\n- `npm run build`\r\n- `npx http-server .\\dist\\sass-output-issue\\browser\\ -a localhost -p 4200`\r\n\r\nAs soon as you load up the app, you should see 404 errors in the output:\r\n> [2023-12-13T00:19:43.508Z]  \"GET /variables\" Error (404): \"Not found\"\r\n\r\nIf you uncomment the following from the `app.component.scss`, the error will go away.\r\n\r\n```\r\n// p {\r\n//   color: $text-default;\r\n// }\r\n```\r\n\r\nSteps taken to create reprod:\r\n- `ng new sass-output-issue`, select SCSS\r\n- update `app.component.scss` to include this line: `@import \"variables\";`\r\n- create a `sass` folder, and add a `_variables.scss` file that defines some variables\r\n- update `angular.json` to include this folder:\r\n\r\n```\r\n            \"stylePreprocessorOptions\": {\r\n              \"includePaths\": [\"src/sass\"]\r\n            },\r\n```\r\n\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\n[2023-12-13T00:19:43.508Z] \"GET /variables\" Error (404): \"Not found\"\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.6\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n- The issue does not occur for `ng serve`.\r\n- The issue goes away if I change to the old `browser` builder.","Url":"https://github.com/angular/angular-cli/issues/26653","RelatedDescription":"Open issue \"@import with Sass causes errors with browser-esbuild and application builders\" (#26653)"},{"Id":"2038412610","IsPullRequest":false,"CreatedAt":"2023-12-12T19:21:11","Actor":"SetoKaiba","Number":"26652","RawContent":null,"Title":"Angular SSR with SSL is broken with the http client get for relative url","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n```typescript\r\nhttpClient.get('assets/test.json')\r\n```\r\nIt's working without SSL.\r\nBut it is broken after I use SSL.\r\nThe url becomes `https://undefined/assets/test.json`.\r\n\r\n### Minimal Reproduction\r\n\r\n```typescript\r\nhttpClient.get('assets/test.json')\r\n```\r\n\r\n### Exception or Error\r\n\r\n```\r\nERROR HttpErrorResponse {\r\n  headers: _HttpHeaders {\r\n    normalizedNames: Map(0) {},\r\n    lazyUpdate: null,\r\n    headers: Map(0) {}\r\n  },\r\n  status: 0,\r\n  statusText: 'Unknown Error',\r\n  url: 'https://undefined/assets/test.json',\r\n  ok: false,\r\n  name: 'HttpErrorResponse',\r\n  message: 'Http failure response for https://undefined/assets/test.json: 0 undefined',\r\n  error: TypeError: fetch failed\r\n      at node:internal/deps/undici/undici:12442:11\r\n      at _ZoneDelegate.invoke (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:368:26)\r\n      at Object.onInvoke (e:/WebstormProjects/ciyuan-frontend/node_modules/@angular/core/fesm2022/core.mjs:14695:33)\r\n      at _ZoneDelegate.invoke (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:367:52)\r\n      at _Zone.run (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:129:43)\r\n      at eval (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:1188:36)\r\n      at _ZoneDelegate.invokeTask (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:402:31)\r\n      at eval (e:/WebstormProjects/ciyuan-frontend/node_modules/@angular/core/fesm2022/core.mjs:14369:55)\r\n      at AsyncStackTaggingZoneSpec.onInvokeTask (e:/WebstormProjects/ciyuan-frontend/node_modules/@angular/core/fesm2022/core.mjs:14369:36)\r\n      at _ZoneDelegate.invokeTask (e:/WebstormProjects/ciyuan-frontend/node_modules/zone.js/fesm2015/zone-node.js:401:60) {\r\n    cause: Error: getaddrinfo ENOTFOUND undefined\r\n        at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:118:26) {\r\n      errno: -3008,\r\n      code: 'ENOTFOUND',\r\n      syscall: 'getaddrinfo',\r\n      hostname: 'undefined'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nNode.js version v21.4.0 detected.                                                                                                                                              \r\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.\r\n\r\n     _                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/                                        \r\n                                                             \r\n\r\nAngular CLI: 17.0.6       \r\nNode: 21.4.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@angular/cdk                    17.0.3\r\n@angular/material               17.0.3\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n\r\nWarning: The current version of Node (21.4.0) is not supported by Angular.\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26652","RelatedDescription":"Open issue \"Angular SSR with SSL is broken with the http client get for relative url\" (#26652)"},{"Id":"2037817718","IsPullRequest":false,"CreatedAt":"2023-12-12T19:19:53","Actor":"awdorrin","Number":"26645","RawContent":null,"Title":"16.2.10 - ng build fails: Inlining of fonts failed, self-signed certificate in certificate chain","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.1.8\n\n### Description\n\nAfter updating to angular 16.2.10 our application builds are failing with:\r\n```\r\n✖ Index html generation failed.\r\nInlining of fonts failed. An error has occurred while retrieving https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap over the internet.\r\nself-signed certificate in certificate chain\r\n```\r\nOur index.html contains:\r\n```\r\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap\" rel=\"stylesheet\">\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n```\r\nBuild works if I remove those lines, and fonts seem to be working fine, with an SCSS file importing the fonts with:\r\n```\r\n@import url('https://fonts.googleapis.com/css?family=Material+Icons');\r\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500');\r\n```\r\nConfiguring .npmrc with cafile reference, or strict-ssl=false has no effect.\n\n### Minimal Reproduction\n\nAngular 16.2.10 application with index.html that contains link hrefs to fonts.googleapis.com\r\nExample:\r\n```\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Test App</title>\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap\" rel=\"stylesheet\">\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n  <app-root></app-root>\r\n</body>\r\n</html>\r\n```\r\nWill build under 16.1.8, will not build under 16.2.10\n\n### Exception or Error\n\n```text\n>ng build --configuration production\r\n✔ Browser application bundle generation complete.\r\n✔ Copying assets complete.\r\n✖ Index html generation failed.\r\nInlining of fonts failed. An error has occurred while retrieving https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap over the internet.\r\nself-signed certificate in certificate chain\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.10\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.12\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.10\r\n@angular-devkit/build-angular   16.2.10\r\n@angular-devkit/core            16.2.10\r\n@angular-devkit/schematics      16.2.10\r\n@angular/cli                    16.2.10\r\n@schematics/angular             16.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\nHave not yet found a work-around other than removing the <link> references from index.html","Url":"https://github.com/angular/angular-cli/issues/26645","RelatedDescription":"Closed issue \"16.2.10 - ng build fails: Inlining of fonts failed, self-signed certificate in certificate chain\" (#26645)"},{"Id":"2038397973","IsPullRequest":true,"CreatedAt":"2023-12-12T19:10:48","Actor":"m4s7","Number":"26651","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): unify proxy config loading i…","State":"open","Body":"…n dev-server and ssr-dev-server\r\n\r\nThis improvement harmonizes the proxy configuration loading mechanisms between the dev-server and ssr-dev-server. Previously, these servers used different methods for loading the proxy configuration, leading to inconsistencies. Notably, the ssr-dev-server was limited to loading configurations only in JSON format. This change enables the ssr-dev-server to support various configuration formats, aligning it with the dev-server's capabilities and impunify proxy config loading in dev-server and ssr-dev-server\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe two dev-servers use different methods for loading the proxy configuration, leading to inconsistencies. Notably, the ssr-dev-server was limited to loading configurations only in JSON format.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThe proxy configuration loading mechanism is now harmonized between the dev-server and ssr-dev-server. The ssr-dev-server now supports various configuration formats, aligning it with the dev-server's capabilities.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26651","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): unify proxy config loading i…\" (#26651)"},{"Id":"2036365514","IsPullRequest":false,"CreatedAt":"2023-12-12T17:37:41","Actor":"anhallbe","Number":"26635","RawContent":null,"Title":"ng serve no longer works without AoT","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16, might've worked in an earlier 17.0.x version\r\n\r\n### Description\r\n\r\nWhen using `\"aot\": false`, there are two critical issues with `ng serve`.\r\n\r\n1. `.html` files do not seem to be watched, so changes do not trigger a rebuild/refresh.\r\n2. Saving `.ts` files trigger a rebuild, but the build always fail (see error below). NOTE: Does not happen on every save, but can be reproduced consistently.\r\n\r\nThe above means that `ng serve` has to be exited and re-run on every change, which makes it pretty much unusable.\r\n\r\n### Minimal Reproduction\r\n\r\n1. `ng new myproject`\r\n2. `cd myproject`\r\n3. Add `\"aot\": false` to the angular.json builder options (`projects.myproject.architect.build.options.aot`)\r\n4. `ng serve`\r\n5. Make changes to and save `app.component.html` and `app.component.ts`\r\n\r\n### Exception or Error\r\n\r\n```text\r\nTwo issues:\r\n\r\n1. Changes to `app.component.html` does not trigger rebuild. The only way for the changes to take effect is to quit and run `ng serve` again.\r\n\r\n\r\n2. When saving `app.component.ts`, an error is shown:\r\n⠋ Changes detected. Rebuilding...\r\n✘ [ERROR] File 'src/app/app.component.ts' is missing from the TypeScript compilation. [plugin angular-compiler]\r\n\r\n    src/main.ts:3:29:\r\n      3 │ import { AppComponent } from './app/app.component';\r\n        ╵                              ~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  Ensure the file is part of the TypeScript program via the 'files' or 'include' property.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.6\r\nNode: 20.9.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nThis happens both with the `browser-eslint` and the `application` builder.\r\n\r\nRelated: https://github.com/angular/angular-cli/issues/26379","Url":"https://github.com/angular/angular-cli/issues/26635","RelatedDescription":"Closed issue \"ng serve no longer works without AoT\" (#26635)"},{"Id":"2037284253","IsPullRequest":true,"CreatedAt":"2023-12-12T17:37:40","Actor":"alan-agius4","Number":"26640","RawContent":null,"Title":"fix(@angular-devkit/build-angular): file is missing from the TypeScript compilation with JIT","State":"closed","Body":"\r\n\r\nBefore this update, removing the modified file entry from `typeScriptFileCache` when a file was saved but unmodified created an issue. The TypeScript compiler didn't re-emit the file using `emitNextAffectedFile` because the file hashes remained unchanged. Consequently, this led to missing files in the esbuild compilation process.\r\n\r\nIn the current update, we no longer delete entries from typeScriptFileCache. This adjustment resolves the problem by ensuring the proper handling of file recompilation and prevents files from going missing during the esbuild compilation.\r\n\r\nCloses #26635\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26640","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): file is missing from the TypeScript compilation with JIT\" (#26640)"},{"Id":"2038015188","IsPullRequest":false,"CreatedAt":"2023-12-12T17:10:38","Actor":"awaragi","Number":"26648","RawContent":null,"Title":"Building SSR project using NodeJS v18.19.0 fails with obscure error message An unexpected error occurred: [object Object]","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI initially found out about this bug while successfully building locally my SSR project using v18.14.2 and when building in github workflow ubuntu runner using v18.x which defaulted to v18.19.0. When I switched locally to the same version v18.19.0 I got the same error.  Switching the github workflow to use v18.14.2 was a valid workaround. I am reporting this issue in case there is a hidden issue that Node v18.19.0 unhid.\r\n\r\nI tried it with a vanilla project and the error is easily replicated. Here are the steps to replicate:\r\n- nvm install v18.19.0\r\n- ng new --ssr (default CSS)\r\n- npm run build\r\n\r\nHere is the log of my local execution with both v18.14.2 and v18.19.0 showing that the build works in one and not in the other.\r\n\r\n developer  ~  Develop  Projects  npx @angular/cli new --ssr\r\n? What name would you like to use for the new workspace and initial project? test-node\r\n? Which stylesheet format would you like to use? CSS\r\nCREATE test-node/README.md (1062 bytes)\r\nCREATE test-node/.editorconfig (274 bytes)\r\nCREATE test-node/.gitignore (548 bytes)\r\nCREATE test-node/angular.json (2753 bytes)\r\nCREATE test-node/package.json (1272 bytes)\r\nCREATE test-node/tsconfig.json (903 bytes)\r\nCREATE test-node/tsconfig.app.json (324 bytes)\r\nCREATE test-node/tsconfig.spec.json (273 bytes)\r\nCREATE test-node/server.ts (1703 bytes)\r\nCREATE test-node/.vscode/extensions.json (130 bytes)\r\nCREATE test-node/.vscode/launch.json (470 bytes)\r\nCREATE test-node/.vscode/tasks.json (938 bytes)\r\nCREATE test-node/src/main.ts (250 bytes)\r\nCREATE test-node/src/favicon.ico (15086 bytes)\r\nCREATE test-node/src/index.html (294 bytes)\r\nCREATE test-node/src/styles.css (80 bytes)\r\nCREATE test-node/src/main.server.ts (264 bytes)\r\nCREATE test-node/src/app/app.component.css (0 bytes)\r\nCREATE test-node/src/app/app.component.html (20884 bytes)\r\nCREATE test-node/src/app/app.component.spec.ts (925 bytes)\r\nCREATE test-node/src/app/app.component.ts (367 bytes)\r\nCREATE test-node/src/app/app.config.ts (321 bytes)\r\nCREATE test-node/src/app/app.routes.ts (77 bytes)\r\nCREATE test-node/src/app/app.config.server.ts (350 bytes)\r\nCREATE test-node/src/assets/.gitkeep (0 bytes)\r\n✔ Packages installed successfully.\r\nhint: Using 'master' as the name for the initial branch. This default branch name\r\nhint: is subject to change. To configure the initial branch name to use in all\r\nhint: of your new repositories, which will suppress this warning, call:\r\nhint: \r\nhint: \tgit config --global init.defaultBranch <name>\r\nhint: \r\nhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\r\nhint: 'development'. The just-created branch can be renamed via this command:\r\nhint: \r\nhint: \tgit branch -m <name>\r\n    Successfully initialized git.\r\n✔ Packages installed successfully.\r\n developer  ~  Develop  Projects  cd test-node/\r\n developer   master  ~  Develop  Projects  test-node  node -v\r\nv18.19.0\r\n developer   master  ~  Develop  Projects  test-node  npm run build\r\n\r\n> test-node@0.0.0 build\r\n> ng build\r\n\r\nAn unexpected error occurred: [object Object]\r\n\r\n developer   master  ~  Develop  Projects  test-node  1  nvm use v18.14.2 \r\nNow using node v18.14.2 (npm v9.6.0)\r\n developer   master  ~  Develop  Projects  test-node  node -v\r\nv18.14.2\r\n developer   master  ~  Develop  Projects  test-node  npm run build\r\n\r\n> test-node@0.0.0 build\r\n> ng build\r\n\r\nPrerendered 1 static route.\r\n\r\n\r\nInitial Chunk Files   | Names         |  Raw Size | Estimated Transfer Size\r\nmain-SS6UDOSF.js      | main          | 204.02 kB |                56.57 kB\r\npolyfills-LZBJRJJE.js | polyfills     |  32.69 kB |                10.59 kB\r\nstyles-5INURTSO.css   | styles        |   0 bytes |                 0 bytes\r\n\r\n                      | Initial Total | 236.72 kB |                67.16 kB\r\n\r\nApplication bundle generation complete. [15.972 seconds]\r\n\r\n developer   master  ~  Develop  Projects  test-node  1  npx ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.6\r\nNode: 18.14.2\r\nPackage Manager: npm 9.6.0\r\nOS: linux x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n\r\n\r\nthe generated package.json is untouched:\r\n\r\n{\r\n  \"name\": \"test-node\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\",\r\n    \"serve:ssr:test-node\": \"node dist/test-node/server/server.mjs\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/platform-server\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"@angular/ssr\": \"^17.0.6\",\r\n    \"express\": \"^4.18.2\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^17.0.6\",\r\n    \"@angular/cli\": \"^17.0.6\",\r\n    \"@angular/compiler-cli\": \"^17.0.0\",\r\n    \"@types/express\": \"^4.17.17\",\r\n    \"@types/jasmine\": \"~5.1.0\",\r\n    \"@types/node\": \"^18.18.0\",\r\n    \"jasmine-core\": \"~5.1.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n    \"typescript\": \"~5.2.2\"\r\n  }\r\n}\r\n\r\n![image](https://github.com/angular/angular-cli/assets/24778363/bc9adaf1-5715-44ac-a419-b08c0c34c672)\r\n\n\n### Minimal Reproduction\n\n- nvm install v18.19.0\r\n- ng new --ssr (default CSS)\r\n- npm run build\n\n### Exception or Error\n\n```text\nAn unexpected error occurred: [object Object]\n```\n\n\n### Your Environment\n\n```text\nNodeJS v18.19.0 (locally and on github ubuntu runner)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26648","RelatedDescription":"Closed issue \"Building SSR project using NodeJS v18.19.0 fails with obscure error message An unexpected error occurred: [object Object]\" (#26648)"},{"Id":"2038168684","IsPullRequest":true,"CreatedAt":"2023-12-12T17:10:36","Actor":"alan-agius4","Number":"26650","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update ESM loader to work with Node.js 18.19.0","State":"closed","Body":"\r\n\r\nIn Node.js 18.19 ESM loaders works the same way as Node.js 20.9+\r\n\r\nCloses #26648\r\n","Url":"https://github.com/angular/angular-cli/pull/26650","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update ESM loader to work with Node.js 18.19.0\" (#26650)"},{"Id":"2037418536","IsPullRequest":false,"CreatedAt":"2023-12-12T16:43:31","Actor":"jinbijin","Number":"26641","RawContent":null,"Title":"Loading TypeScript file assets via HttpClient can cause dev-server errors with the browser-esbuild and application builders","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhile running the application through the dev-server via `npm start`, when a TypeScript file is loaded from the assets via the HttpClient, it seems to be analyzed by the vite:import-analysis plugin. If there are any references that cannot be resolved, this plugin will cause the load of this TypeScript asset file to fail and display an error message on the page.\n\n### Minimal Reproduction\n\nMinimal reproduction repository: https://github.com/jinbijin/vite-ts-assets\r\n\r\n* Run `ng serve`, and navigate to the served page.\r\n\r\nExpected result: Both HTTP calls succeed.\r\n\r\nActual result: The HTTP call into the asset folder fails, and an error is displayed on the page.\n\n### Exception or Error\n\n```text\n11:09:24 [vite] Internal server error: Failed to resolve import \"unresolved\" from \"src\\assets\\unresolved.ts\". Does the file exist?\r\n  Plugin: vite:import-analysis\r\n  File: D:/Workspace/vite-ts-assets/src/assets/unresolved.ts:1:29\r\n  1  |  import { unresolved } from 'unresolved';\r\n     |                              ^\r\n  2  |  \r\n  3  |  export function testUnresolved(): void {\r\n      at formatError (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:44062:46)\r\n      at TransformContext.error (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:44058:19)\r\n      at normalizeUrl (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:41844:33)\r\n      at async file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:41998:47\r\n      at async Promise.all (index 0)\r\n      at async TransformContext.transform (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:41914:13)\r\n      at async Object.transform (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:44352:30)\r\n      at async loadAndTransform (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:55026:29)\r\n      at async viteTransformMiddleware (file:///D:/Workspace/vite-ts-assets/node_modules/vite/dist/node/chunks/dep-68d1a114.js:64430:32)\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.6\r\nNode: 20.10.0\r\nPackage Manager: npm 10.0.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26641","RelatedDescription":"Closed issue \"Loading TypeScript file assets via HttpClient can cause dev-server errors with the browser-esbuild and application builders\" (#26641)"},{"Id":"2037604904","IsPullRequest":true,"CreatedAt":"2023-12-12T16:43:29","Actor":"alan-agius4","Number":"26643","RawContent":null,"Title":"fix(@angular-devkit/build-angular): allow vite to serve JavaScript and TypeScript assets","State":"closed","Body":"\r\n\r\nThis commit fixes an issue which caused vite to transform JavaScript and TypeScript assets.\r\n\r\nCloses #26641\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26643","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): allow vite to serve JavaScript and TypeScript assets\" (#26643)"},{"Id":"2038132953","IsPullRequest":true,"CreatedAt":"2023-12-12T16:35:54","Actor":"alan-agius4","Number":"26649","RawContent":null,"Title":"fix(@angular/cli): print error code when available on unexpected error occurred","State":"closed","Body":"\r\n\r\nIn some cases, Node.js expection would only contain an error code, example `ERR_UNSUPPORTED_ESM_URL_SCHEME`. This caused `An unexpected error occurred: [object Object]` to be logged in the console.\r\n\r\nCloses #26648\r\n","Url":"https://github.com/angular/angular-cli/pull/26649","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): print error code when available on unexpected error occurred\" (#26649)"},{"Id":"2037853077","IsPullRequest":true,"CreatedAt":"2023-12-12T15:04:42","Actor":"clydin","Number":"26646","RawContent":null,"Title":"[17.0.x] fix(@angular-devkit/build-angular): cache loading of component resources in JIT mode","State":"closed","Body":"The load result caching capabilities of the Angular compiler plugin used within the `application` and `browser-esbuild` builders is now used for both stylesheet and template component resources when building in JIT mode. This limits the amount of file system access required during a rebuild in JIT mode and also more accurately captures the full set of watched files.\r\n\r\n17.0.x variant of https://github.com/angular/angular-cli/pull/26636","Url":"https://github.com/angular/angular-cli/pull/26646","RelatedDescription":"Closed or merged PR \"[17.0.x] fix(@angular-devkit/build-angular): cache loading of component resources in JIT mode\" (#26646)"},{"Id":"2037747377","IsPullRequest":false,"CreatedAt":"2023-12-12T13:23:33","Actor":"mirobo","Number":"26644","RawContent":null,"Title":"Allow exclusion of files / folders from being watched by `@angular-devkit/build-angular:application` (ESBuild + Vite)","State":"open","Body":"### Command\n\nserve\n\n### Description\n\nAccording to https://angular.io/guide/esbuild it says:\r\n```The usage of Vite, much like the Webpack-based development server, is encapsulated within the Angular CLI dev-server builder and currently cannot be directly configured.```\r\n\r\nWebpack previously allowed a `customWebpackConfig` and therefore it was possible to exclude certain files and folders from the \"watch\" mechanism. With Vite this option is completely gone. In bigger setups with lots of libraries and Cypress/Jest tests residing in the folder of each library, the app gets rebuilt every time an irrelevant file (i.e. `my-test.e2e.spec.ts`, `my-test.spec.ts` or `my-test.cy.ts`) was changed.\r\n\r\nEspecially creating and editing Cypress tests becomes a real an absolute struggle because you have to wait for the build to be completed before you can run a test properly.\r\n\r\nWhat I also find strange is this line: https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/dev-server/vite-server.ts#L483\r\n\r\nSo where is the actual \"watching\" done, if not by Vite itself? Haven't found other hints..\n\n### Describe the solution you'd like\n\nIdeas\r\n- Provide a bundler-agnostic solution for excluding files to watch :D\r\n- Use the Vite watcher internally and expose the configuration ( see https://github.com/vitejs/vite/blob/main/packages/vite/src/node/watch.ts#L18 )\r\n- Give me a hint to where the code for the watcher lies, so I can find a workaround to make ESBuild + Vite viable for us\r\n\r\n\r\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26644","RelatedDescription":"Open issue \"Allow exclusion of files / folders from being watched by `@angular-devkit/build-angular:application` (ESBuild + Vite)\" (#26644)"},{"Id":"2037425932","IsPullRequest":true,"CreatedAt":"2023-12-12T10:47:00","Actor":"angular-robot","Number":"26642","RawContent":null,"Title":"build: update dependency vite to v5.0.8","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | dependencies | patch | [`5.0.7` -> `5.0.8`](https://renovatebot.com/diffs/npm/vite/5.0.7/5.0.8) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | devDependencies | patch | [`5.0.7` -> `5.0.8`](https://renovatebot.com/diffs/npm/vite/5.0.7/5.0.8) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.8`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small508-2023-12-12-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.7...v5.0.8)\n\n-   perf: cached fs utils ([#&#8203;15279](https://togithub.com/vitejs/vite/issues/15279)) ([c9b61c4](https://togithub.com/vitejs/vite/commit/c9b61c4)), closes [#&#8203;15279](https://togithub.com/vitejs/vite/issues/15279)\n-   fix: missing warmupRequest in transformIndexHtml ([#&#8203;15303](https://togithub.com/vitejs/vite/issues/15303)) ([103820f](https://togithub.com/vitejs/vite/commit/103820f)), closes [#&#8203;15303](https://togithub.com/vitejs/vite/issues/15303)\n-   fix: public files map will be updated on add/unlink in windows ([#&#8203;15317](https://togithub.com/vitejs/vite/issues/15317)) ([921ca41](https://togithub.com/vitejs/vite/commit/921ca41)), closes [#&#8203;15317](https://togithub.com/vitejs/vite/issues/15317)\n-   fix(build): decode urls in CSS files (fix [#&#8203;15109](https://togithub.com/vitejs/vite/issues/15109)) ([#&#8203;15246](https://togithub.com/vitejs/vite/issues/15246)) ([ea6a7a6](https://togithub.com/vitejs/vite/commit/ea6a7a6)), closes [#&#8203;15109](https://togithub.com/vitejs/vite/issues/15109) [#&#8203;15246](https://togithub.com/vitejs/vite/issues/15246)\n-   fix(deps): update all non-major dependencies ([#&#8203;15304](https://togithub.com/vitejs/vite/issues/15304)) ([bb07f60](https://togithub.com/vitejs/vite/commit/bb07f60)), closes [#&#8203;15304](https://togithub.com/vitejs/vite/issues/15304)\n-   fix(ssr): check esm file with normal file path ([#&#8203;15307](https://togithub.com/vitejs/vite/issues/15307)) ([1597170](https://togithub.com/vitejs/vite/commit/1597170)), closes [#&#8203;15307](https://togithub.com/vitejs/vite/issues/15307)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26642","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v5.0.8\" (#26642)"},{"Id":"2037059398","IsPullRequest":true,"CreatedAt":"2023-12-12T09:10:39","Actor":"angular-robot","Number":"26637","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.5/7.23.6) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.5/7.23.6) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.23.5/7.23.6) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.23.5/7.23.6) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.4` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.23.4/7.23.6) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.4` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.23.4/7.23.6) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.5/7.23.6) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.5/7.23.6) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.5/7.23.6) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.5` -> `7.23.6`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.5/7.23.6) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.13.2` -> `6.14.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/6.13.2/6.14.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.13.2` -> `6.14.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.13.2/6.14.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.23.6`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7236-2023-12-11)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.23.5...v7.23.6)\n\n##### :eyeglasses: Spec Compliance\n\n-   `babel-generator`, `babel-parser`, `babel-types`\n    -   [#&#8203;16154](https://togithub.com/babel/babel/pull/16154) Remove `TSPropertySignature.initializer` ([@&#8203;fisker](https://togithub.com/fisker))\n-   `babel-helpers`, `babel-plugin-proposal-decorators`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-runtime`, `babel-preset-env`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`, `babel-types`\n    -   [#&#8203;16139](https://togithub.com/babel/babel/pull/16139) Apply `toPropertyKey` on decorator context name ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :bug: Bug Fix\n\n-   `babel-generator`\n    -   [#&#8203;16166](https://togithub.com/babel/babel/pull/16166) fix: Correctly indenting when `retainLines` is enabled ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helpers`, `babel-plugin-proposal-explicit-resource-management`\n    -   [#&#8203;16150](https://togithub.com/babel/babel/pull/16150) `using`: Allow looking up `Symbol.dispose` on a function ([@&#8203;odinho](https://togithub.com/odinho))\n-   `babel-plugin-proposal-decorators`, `babel-plugin-transform-class-properties`\n    -   [#&#8203;16161](https://togithub.com/babel/babel/pull/16161) Ensure the `[[@&#8203;@&#8203;toPrimitive]]` call of a decorated class member key is invoked once ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;16148](https://togithub.com/babel/babel/pull/16148) Support named evaluation for decorated anonymous class exp ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-transform-for-of`, `babel-preset-env`\n    -   [#&#8203;16011](https://togithub.com/babel/babel/pull/16011) fix: `for of` with `iterableIsArray` and shadowing variable  ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helpers`, `babel-plugin-proposal-decorators`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;16144](https://togithub.com/babel/babel/pull/16144) Set function name for decorated private non-field elements ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;16137](https://togithub.com/babel/babel/pull/16137) Fix references to enum values with merging ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :microscope: Output optimization\n\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-transform-class-properties`\n    -   [#&#8203;16159](https://togithub.com/babel/babel/pull/16159) Reuse computed key memoiser ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-helpers`, `babel-plugin-proposal-decorators`\n    -   [#&#8203;16160](https://togithub.com/babel/babel/pull/16160) Optimize decorator helper size ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v6.14.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#6140-2023-12-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.2...v6.14.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** add no-unsafe-unary-minus, prefer-destructuring to disable-type-checked ([#&#8203;8038](https://togithub.com/typescript-eslint/typescript-eslint/issues/8038)) ([431cd15](https://togithub.com/typescript-eslint/typescript-eslint/commit/431cd1559f91795e958e03fd060ceaf79fb96f3a))\n-   **eslint-plugin:** correct message for `no-unsafe-unary-minus` ([#&#8203;7998](https://togithub.com/typescript-eslint/typescript-eslint/issues/7998)) ([705370a](https://togithub.com/typescript-eslint/typescript-eslint/commit/705370ac0d9c54081657b8855b398e57d6ea4ddb))\n\n##### Features\n\n-   **eslint-plugin:** \\[explicit-function-return-type] add support for typed class property definitions ([#&#8203;8027](https://togithub.com/typescript-eslint/typescript-eslint/issues/8027)) ([bff47d7](https://togithub.com/typescript-eslint/typescript-eslint/commit/bff47d7885bee3bbcb3a81eff273fe2f48580940))\n-   **eslint-plugin:** \\[require-await] allow yielding Promise in async generators ([#&#8203;8003](https://togithub.com/typescript-eslint/typescript-eslint/issues/8003)) ([4c3e704](https://togithub.com/typescript-eslint/typescript-eslint/commit/4c3e704b97e698df7f72174c2d20714836d4d243))\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n#### [6.13.2](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.1...v6.13.2) (2023-12-04)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n#### [6.13.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.0...v6.13.1) (2023-11-28)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.14.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6140-2023-12-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.2...v6.14.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n#### [6.13.2](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.1...v6.13.2) (2023-12-04)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n#### [6.13.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.13.0...v6.13.1) (2023-11-28)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26637","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26637)"},{"Id":"2036806701","IsPullRequest":true,"CreatedAt":"2023-12-12T08:42:02","Actor":"clydin","Number":"26636","RawContent":null,"Title":"fix(@angular-devkit/build-angular): cache loading of component resources in JIT mode","State":"closed","Body":"The load result caching capabilities of the Angular compiler plugin used within the `application` and `browser-esbuild` builders is now used for both stylesheet and template component resources when building in JIT mode. This limits the amount of file system access required during a rebuild in JIT mode and also more accurately captures the full set of watched files.","Url":"https://github.com/angular/angular-cli/pull/26636","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): cache loading of component resources in JIT mode\" (#26636)"},{"Id":"2037153324","IsPullRequest":false,"CreatedAt":"2023-12-12T07:40:04","Actor":"fireflysemantics","Number":"26639","RawContent":null,"Title":"SSR Fails","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler, core\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThe SSR fails.  I did a writeup of the process I used to generate the static pages here.  \r\n\r\nhttps://fireflysemantics.medium.com/creating-an-angular-application-with-route-prerendering-39d6cd4df22a\r\n\r\nHowever there is no data in the pages.\r\n\r\nI asked about it on Stackoverflow here:\r\n\r\nhttps://stackoverflow.com/questions/77641999/prerendering-with-angular-17-and-viewing-prerendered-results\r\n\r\nThoughts?\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/fireflysemantics/ssr/tree/main/src\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nhttps://stackoverflow.com/questions/77641999/prerendering-with-angular-17-and-viewing-prerendered-results\r\n\r\nThe route data is not reflected in any of the static pages.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.6\r\nNode: 20.8.0\r\nPackage Manager: npm 10.2.4\r\nOS: darwin arm64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.6 (cli-only)\r\n@angular-devkit/core         17.0.6 (cli-only)\r\n@angular-devkit/schematics   17.0.6 (cli-only)\r\n@schematics/angular          17.0.6 (cli-only)\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nAngular 17 ROCKS!!  ","Url":"https://github.com/angular/angular-cli/issues/26639","RelatedDescription":"Closed issue \"SSR Fails\" (#26639)"},{"Id":"2037152545","IsPullRequest":false,"CreatedAt":"2023-12-12T07:31:41","Actor":"kimanderssonm3cs","Number":"26638","RawContent":null,"Title":"'ng generate guard' guard types uneccesary","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDue to the new function based route guards, the guard types that you're able to choose from when calling `ng generate guard auth` doesn't get generated anymore.\r\n\r\nWhen calling `ng generate guard auth` you're presented with 4 choices:\r\n![image](https://github.com/angular/angular-cli/assets/105789291/931d1eac-e459-4d36-a99e-c163313236c5)\r\n\r\nHowever, no matter which choice or choices you make, you're presented with the same guard.ts file which looks like this:\r\n`import { CanActivateFn } from '@angular/router';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  return true;\r\n};`\r\n\r\nI guess this option could be removed, as it doesn't seem to do anything at this point?\n\n### Minimal Reproduction\n\n1. Run `ng generate guard auth`\r\n2. Choose whatever guard type\r\n3. Check the generated auth.guard.ts file\r\n4. Go to step 1 but choose another type on step 2\r\n5. Compare and you'll see the same files generated no matter what type you chose. \n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0\r\nNode: 21.1.0 (Unsupported)\r\nPackage Manager: npm 10.2.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0\r\n@angular-devkit/build-angular   17.0.0\r\n@angular-devkit/core            17.0.0\r\n@angular-devkit/schematics      17.0.0\r\n@angular/cli                    17.0.0\r\n@schematics/angular             17.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26638","RelatedDescription":"Open issue \"'ng generate guard' guard types uneccesary\" (#26638)"},{"Id":"2035940090","IsPullRequest":false,"CreatedAt":"2023-12-11T15:30:35","Actor":"nawlbergs","Number":"26634","RawContent":null,"Title":"[Vite + Docker/Proxy] = Pending Requests","State":"open","Body":"### Is this a bug report or a feature request?\r\n\r\n- [X] Bug Report\r\n- [ ] Feature Request\r\n\r\n### Please provide the steps to reproduce the issue [Bug Report only]\r\n\r\nI've posted this on Docker and Vite and now here.. because I'm not sure where/who the problem lies with.\r\n\r\n_**TLDR**_: I cannot run angular with the Vite builder when using our docker proxy in front of it.\r\n\r\n--------------------------------\r\nUsing the new `@angular-devkit/build-angular:application` vite build... and at work we always throw an apache (or nginx - tried both) proxy in front of our angular app and server so we can run it on something other than localhost  ie `client1.app.local`.   \r\n\r\nWorks great... until you refresh browser a few times.  It will get hung up on a random network request...  then requests just start going into a \"pending\" state.... the app becomes completely broken and cannot load anything for like 20-30 seconds...  (assuming until something times-out).\r\n\r\nWhile the app is in this borked \"pending\" state... you can still go to localhost:3333 (the ng app) and it serves any files fine (tho the app is broken from invalid paths).... so somethings getting hosed in the connection between apache and vite.\r\n\r\n**If I switch back to the webpack based dev server... everything runs fine.**\r\n\r\nDinked around with ChatGPT and wireshark for several hours last night trying to figure out more specifics... but... failed.\r\n\r\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\r\n\r\nThe site should consistently load when refreshing.  (whether its webpack or vite)\r\n\r\n### Please provide a screenshot if possible [Bug Report only]\r\n\r\n![image](https://github.com/angular/angular/assets/1325984/8967586a-c66f-4e92-b30e-fe45421c0394)\r\n\r\n\r\n\r\n### Please provide the exception or error you saw [Bug Report only]\r\n\r\n```true\r\n[Tue Dec 12 02:39:25.552749 2023] [proxy:error] [pid 92:tid 139911755712256] (70007)The timeout specified has expired: AH00957: http: attempt to connect to 192.168.65.254:4200 (host.docker.internal:4200) failed\r\napache       | [Tue Dec 12 02:39:25.552777 2023] [proxy_http:error] [pid 92:tid 139911755712256] [client 172.22.0.1:53410] AH01114: HTTP: failed to make connection to backend: host.docker.internal, referer: http://spro.actifi.local/spro/auth/login\r\n```\r\n\r\n\r\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\r\n\r\n```true\r\nNo. Tried multiple browsers.  Incognito mode. Different node versions (18, 20).  \r\nTried both httpd for proxy, nginx for proxy.\r\n\r\n\r\n\r\n# shared.conf\r\nDefine local_node      \"http://host.docker.internal:3333\"\r\nDefine local_spro       \"http://host.docker.internal:4200\"\r\n\r\n# proxy.conf\r\n<VirtualHost *:80>\r\n\r\n  ServerName localhost\r\n  DocumentRoot \"/usr/local/apache2/htdocs\"\r\n  DirectoryIndex index.html\r\n\r\n  <Location /api>\r\n    Order allow,deny\r\n    Allow from all\r\n    ProxyPass ${local_node} disablereuse=on\r\n    ProxyPassReverse ${local_node}\r\n  </Location>\r\n\r\n  # the angular app\r\n  <Location /spro>  \r\n      Order allow,deny\r\n      Allow from all\r\n      ProxyPass ${local_spro}/spro disablereuse=on # I tried removing this yes\r\n      ProxyPassReverse ${local_spro}/spro\r\n  </Location>\r\n\r\n</VirtualHost>\r\n\r\n\r\n\r\nrun command\r\n```bash\r\nng serve --hmr --disable-host-check --host=0.0.0.0 --port=4200 --public-host=http://0.0.0.0:4200\r\n```\r\n```\r\n\r\n\r\n### Description [Feature Request only]\r\n\r\n_No response_\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\n_No response_\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26634","RelatedDescription":"Open issue \"[Vite + Docker/Proxy] = Pending Requests\" (#26634)"},{"Id":"2033093883","IsPullRequest":false,"CreatedAt":"2023-12-11T14:46:09","Actor":"LanderBeeuwsaert","Number":"26624","RawContent":null,"Title":"part 2: es-build regression 17.1.0-next.1 rebuild causes \"the request url \"...\" is outside of Vite serving allow list","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.6\n\n### Description\n\nwith the new release of 17.1.0-next.1 the issue in\r\nhttps://github.com/angular/angular-cli/issues/26555\r\nisn't really fixed.\r\n\r\nWhen you build & serve the application, it is; but the moment you change your code and a rebuild happens, it starts to complain again\n\n### Minimal Reproduction\n\n-\n\n### Exception or Error\n\n```text\n-\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0-next.1\r\nNode: 20.9.0\r\nPackage Manager: npm 8.19.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1701.0-next.1\r\n@angular-devkit/build-angular        17.1.0-next.1\r\n@angular-devkit/core                 16.2.6\r\n@angular-devkit/schematics           16.2.6\r\n@angular/cdk                         17.0.2\r\n@angular/cli                         17.1.0-next.1\r\n@angular/fire                        16.0.0\r\n@angular/google-maps                 17.0.2\r\n@angular/material                    17.0.2\r\n@angular/material-date-fns-adapter   17.0.2\r\n@angular/youtube-player              17.0.2\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.2.6\r\nrxjs                                 7.8.1\r\ntypescript                           5.2.2\r\nzone.js                              0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26624","RelatedDescription":"Closed issue \"part 2: es-build regression 17.1.0-next.1 rebuild causes \"the request url \"...\" is outside of Vite serving allow list\" (#26624)"},{"Id":"2035126072","IsPullRequest":true,"CreatedAt":"2023-12-11T14:46:08","Actor":"alan-agius4","Number":"26629","RawContent":null,"Title":"fix(@angular-devkit/build-angular): the request url \"...\" is outside of Vite serving allow list for all assets","State":"closed","Body":"\r\n\r\nVite's fs.allow was being populated incorrectly.\r\n\r\nCloses #26624\r\n","Url":"https://github.com/angular/angular-cli/pull/26629","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): the request url \"...\" is outside of Vite serving allow list for all assets\" (#26629)"},{"Id":"2035209824","IsPullRequest":true,"CreatedAt":"2023-12-11T14:45:56","Actor":"alan-agius4","Number":"26630","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle updates of an `npm link` library from another workspace when `preserveSymlinks` is `true`","State":"closed","Body":"\r\n\r\nPrior to this change, watching of an `npm link` of a library in another workspace when `preserveSymlinks` was set to `true` was not being picked up as `node_modules` files were always ignored.\r\n\r\nCloses #25753\r\n","Url":"https://github.com/angular/angular-cli/pull/26630","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): handle updates of an `npm link` library from another workspace when `preserveSymlinks` is `true`\" (#26630)"},{"Id":"2035862747","IsPullRequest":false,"CreatedAt":"2023-12-11T14:36:43","Actor":"blogcraft","Number":"26633","RawContent":null,"Title":"Angular Wont Update code changes while debugging after save","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nSince Angular 17 if I am debugging and app with ng serve, code changes made in my submodules trigger a recompile, browser refreshes, but the same unchanged code is still running.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/blogcraft/WontUpdateWhileDebugging\n\n### Please provide the exception or error you saw\n\n```true\nThere is no error or Exception, the cli just recompiles as normal and shows the usual chunk files message and the message:\r\n\r\nApplication bundle generation complete. [0.077 seconds]\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.6\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@angular/cdk                    17.0.3\r\n@angular/material               17.0.3\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\nTo see the behaviour while debugging, try to change the message in the `src\\app\\modules\\signed-out-module\\signed-out.component.ts` file.","Url":"https://github.com/angular/angular-cli/issues/26633","RelatedDescription":"Open issue \"Angular Wont Update code changes while debugging after save\" (#26633)"},{"Id":"2035656888","IsPullRequest":false,"CreatedAt":"2023-12-11T13:14:38","Actor":"e-oz","Number":"26632","RawContent":null,"Title":"Config option for `application` builder to set the exact path to output files, without hardcoded `browser` path","State":"open","Body":"### Command\r\n\r\nbuild, new\r\n\r\n### Description\r\n\r\nPlease create an option to set the exact output path for \"browser\" and \"server\" files for `application` builder, to override the default `browser` path and avoid issues, described in #26304.\r\n\r\nWould also be great to have some option in `ng new` to set this path during application/workspace initialization.\r\n\r\n### Describe the solution you'd like\r\n\r\nAs an idea: add `clientFilesFolder` field and give it the default value `'browser'`, so users could re-define it to `''` to get the desired behavior. Maybe `serverFilesFolder` as well (or some better name).\r\n\r\n### Describe alternatives you've considered\r\n\r\nAs we found in #26627, the only existing alternative is a temporary solution that will be removed.","Url":"https://github.com/angular/angular-cli/issues/26632","RelatedDescription":"Open issue \"Config option for `application` builder to set the exact path to output files, without hardcoded `browser` path\" (#26632)"},{"Id":"2035437383","IsPullRequest":true,"CreatedAt":"2023-12-11T11:16:24","Actor":"angular-robot","Number":"26631","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `e87f54e` -> `1f331f5` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `b0f7cdc` -> `38c1629` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `8827faa` -> `c0e875d` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `97412d5` -> `e391b1f` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `04642bf` -> `3b946fd` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `a9c8edd` -> `6bdfac8` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `23955d4` -> `bb65aca` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `137471b` -> `55af6cd` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `910c1ca` -> `b0e9753` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `eace4e5` -> `1036d85` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `553f7d5` -> `49d660b` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `cd694eb` -> `02c0c60` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bbf4b35` -> `fffd165` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `db2a07e` -> `c4c9155` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `dc73c9f` -> `0634875` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e0afbbf` -> `b7561a1` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `a0dcb15` -> `3ea2cf7` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `59e81b4` -> `669e375` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `6bfb1aa` -> `a2eff4b` |\n| angular/dev-infra | action | digest | `98c6cb2` -> `49ea533` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26631","RelatedDescription":"Open PR \"build: update angular\" (#26631)"},{"Id":"2034223396","IsPullRequest":true,"CreatedAt":"2023-12-11T09:29:59","Actor":"angular-robot","Number":"26626","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.19.8` -> `0.19.9`](https://renovatebot.com/diffs/npm/esbuild/0.19.8/0.19.9) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.8` -> `0.19.9`](https://renovatebot.com/diffs/npm/esbuild/0.19.8/0.19.9) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.19.8` -> `0.19.9`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.8/0.19.9) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.8` -> `0.19.9`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.8/0.19.9) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`~4.7.0` -> `~4.8.0`](https://renovatebot.com/diffs/npm/rollup/4.7.0/4.8.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.19.9`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0199)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.8...v0.19.9)\n\n-   Add support for transforming new CSS gradient syntax for older browsers\n\n    The specification called [CSS Images Module Level 4](https://www.w3.org/TR/css-images-4/) introduces new CSS gradient syntax for customizing how the browser interpolates colors in between color stops. You can now control the color space that the interpolation happens in as well as (for \"polar\" color spaces) control whether hue angle interpolation happens clockwise or counterclockwise. You can read more about this in [Mozilla's blog post about new CSS gradient features](https://developer.mozilla.org/en-US/blog/css-color-module-level-4/).\n\n    With this release, esbuild will now automatically transform this syntax for older browsers in the `target` list. For example, here's a gradient that should appear as a rainbow in a browser that supports this new syntax:\n\n    ```css\n    /* Original code */\n    .rainbow-gradient {\n      width: 100px;\n      height: 100px;\n      background: linear-gradient(in hsl longer hue, #&#8203;7ff, #&#8203;77f);\n    }\n\n    /* New output (with --target=chrome99) */\n    .rainbow-gradient {\n      width: 100px;\n      height: 100px;\n      background:\n        linear-gradient(\n          #&#8203;77ffff,\n          #&#8203;77ffaa 12.5%,\n          #&#8203;77ff80 18.75%,\n          #&#8203;84ff77 21.88%,\n          #&#8203;99ff77 25%,\n          #eeff77 37.5%,\n          #fffb77 40.62%,\n          #ffe577 43.75%,\n          #ffbb77 50%,\n          #ff9077 56.25%,\n          #ff7b77 59.38%,\n          #ff7788 62.5%,\n          #ff77dd 75%,\n          #ff77f2 78.12%,\n          #f777ff 81.25%,\n          #cc77ff 87.5%,\n          #&#8203;7777ff);\n    }\n    ```\n\n    You can now use this syntax in your CSS source code and esbuild will automatically convert it to an equivalent gradient for older browsers. In addition, esbuild will now also transform \"double position\" and \"transition hint\" syntax for older browsers as appropriate:\n\n    ```css\n    /* Original code */\n    .stripes {\n      width: 100px;\n      height: 100px;\n      background: linear-gradient(#e65 33%, #ff2 33% 67%, #&#8203;99e 67%);\n    }\n    .glow {\n      width: 100px;\n      height: 100px;\n      background: radial-gradient(white 10%, 20%, black);\n    }\n\n    /* New output (with --target=chrome33) */\n    .stripes {\n      width: 100px;\n      height: 100px;\n      background:\n        linear-gradient(\n          #e65 33%,\n          #ff2 33%,\n          #ff2 67%,\n          #&#8203;99e 67%);\n    }\n    .glow {\n      width: 100px;\n      height: 100px;\n      background:\n        radial-gradient(\n          #ffffff 10%,\n          #aaaaaa 12.81%,\n          #&#8203;959595 15.62%,\n          #&#8203;7b7b7b 21.25%,\n          #&#8203;5a5a5a 32.5%,\n          #&#8203;444444 43.75%,\n          #&#8203;323232 55%,\n          #&#8203;161616 77.5%,\n          #&#8203;000000);\n    }\n    ```\n\n    You can see visual examples of these new syntax features by looking at [esbuild's gradient transformation tests](https://esbuild.github.io/gradient-tests/).\n\n    If necessary, esbuild will construct a new gradient that approximates the original gradient by recursively splitting the interval in between color stops until the approximation error is within a small threshold. That is why the above output CSS contains many more color stops than the input CSS.\n\n    Note that esbuild deliberately *replaces* the original gradient with the approximation instead of inserting the approximation before the original gradient as a fallback. The latest version of Firefox has multiple gradient rendering bugs (including incorrect interpolation of partially-transparent colors and interpolating non-sRGB colors using the incorrect color space). If esbuild didn't replace the original gradient, then Firefox would use the original gradient instead of the fallback the appearance would be incorrect in Firefox. In other words, the latest version of Firefox supports modern gradient syntax but interprets it incorrectly.\n\n-   Add support for `color()`, `lab()`, `lch()`, `oklab()`, `oklch()`, and `hwb()` in CSS\n\n    CSS has recently added lots of new ways of specifying colors. You can read more about this in [Chrome's blog post about CSS color spaces](https://developer.chrome.com/docs/css-ui/high-definition-css-color-guide).\n\n    This release adds support for minifying colors that use the `color()`, `lab()`, `lch()`, `oklab()`, `oklch()`, or `hwb()` syntax and/or transforming these colors for browsers that don't support it yet:\n\n    ```css\n    /* Original code */\n    div {\n      color: hwb(90deg 20% 40%);\n      background: color(display-p3 1 0 0);\n    }\n\n    /* New output (with --target=chrome99) */\n    div {\n      color: #&#8203;669933;\n      background: #ff0f0e;\n      background: color(display-p3 1 0 0);\n    }\n    ```\n\n    As you can see, colors outside of the sRGB color space such as `color(display-p3 1 0 0)` are mapped back into the sRGB gamut and inserted as a fallback for browsers that don't support the new color syntax.\n\n-   Allow empty type parameter lists in certain cases ([#&#8203;3512](https://togithub.com/evanw/esbuild/issues/3512))\n\n    TypeScript allows interface declarations and type aliases to have empty type parameter lists. Previously esbuild didn't handle this edge case but with this release, esbuild will now parse this syntax:\n\n    ```ts\n    interface Foo<> {}\n    type Bar<> = {}\n    ```\n\n    This fix was contributed by [@&#8203;magic-akari](https://togithub.com/magic-akari).\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.8.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#480)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v4.7.0...v4.8.0)\n\n*2023-12-11*\n\n##### Features\n\n-   Improve `experimentalMinChunkSize` to take already loaded modules from dynamic imports into account ([#&#8203;5294](https://togithub.com/rollup/rollup/issues/5294))\n\n##### Pull Requests\n\n-   [#&#8203;5294](https://togithub.com/rollup/rollup/pull/5294): Find more merge targets for experimentalMinChunkSize ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26626","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26626)"},{"Id":"2034504348","IsPullRequest":true,"CreatedAt":"2023-12-11T09:29:46","Actor":"clydin","Number":"26628","RawContent":null,"Title":"fix(@angular-devkit/build-angular): retain symlinks to output platform directories on builds","State":"closed","Body":"The `deleteOutputPath` option will now empty specific build artifact directories instead of\r\nremoving them completely. This allows for symlinking or mounting the directories via Docker.\r\nThis is similar to the current behavior of emptying the root output path to allow similar\r\nactions. All previous files will still be removed when the `deleteOutputPath` option is enabled.\r\nThis is useful in situations were the browser output files may be symlinked onto another\r\nlocation on disk that is setup as a development server, or a Docker configuration mounts the browser\r\nand server output to different locations on the host machine.","Url":"https://github.com/angular/angular-cli/pull/26628","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): retain symlinks to output platform directories on builds\" (#26628)"},{"Id":"2033950145","IsPullRequest":true,"CreatedAt":"2023-12-11T09:28:04","Actor":"dominicbachmann","Number":"26625","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deployUrl from browser-esbuild builder-status-warnings","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe logBuilderStatusWarnings function of browser-esbuild builder checks if unsupportedOption is \"deployUrl\". However, deployUrl is not in the UNSUPPORTED_OPTIONS array.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThe logBuilderStatusWarnings function of browser-esbuild builder does not check if unsupportedOption is \"deployUrl\".\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26625","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove deployUrl from browser-esbuild builder-status-warnings\" (#26625)"},{"Id":"2034438824","IsPullRequest":false,"CreatedAt":"2023-12-10T17:00:07","Actor":"e-oz","Number":"26627","RawContent":null,"Title":"`ng new --ssr=false` creates `angular.json` with `application` builder","State":"closed","Body":"### Command\r\n\r\n`ng new`\r\n\r\n### Description\r\n\r\nRight now `ng new` creates `angular.json` with `@angular-devkit/build-angular:application` in the `builder` field, even if SSR was not selected (or --ssr=false was applied).\r\nIt should set `@angular-devkit/build-angular:browser-esbuild` there and generate fields, related to this builder (right now it creates field `browser`).\r\nOtherwise, the default config will lead to issues, described in #26304.\r\n\r\n### Minimal Reproduction\r\n\r\n`ng new example --ssr=false`","Url":"https://github.com/angular/angular-cli/issues/26627","RelatedDescription":"Closed issue \"`ng new --ssr=false` creates `angular.json` with `application` builder\" (#26627)"},{"Id":"2032919089","IsPullRequest":true,"CreatedAt":"2023-12-09T06:57:26","Actor":"alan-agius4","Number":"26623","RawContent":null,"Title":"fix(@angular-devkit/build-angular): inlining of fonts results in jagged fonts for Windows users","State":"closed","Body":"We now replace the user agent string used to perform font inlining with a Windows one. This is because Google fonts will including hinting in fonts for Windows. Hinting is a technique used with Windows files to improve appearance however results in 20-50% larger file sizes, however this will make the fonts display correctly on all platforms.\r\n\r\nMore information about this can be found in:\r\n- https://fonts.google.com/knowledge/glossary/hinting\r\n- https://glyphsapp.com/learn/hinting-manual-truetype-hinting\r\n- http://google3/java/com/google/fonts/css/OpenSansWebFontsCssBuilder.java?l=22\r\n\r\nNote: this has been discussed with Katie Hempenius from the Chrome Aurora team.\r\n\r\nCloses #22248\r\n","Url":"https://github.com/angular/angular-cli/pull/26623","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): inlining of fonts results in jagged fonts for Windows users\" (#26623)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2038649931","IsPullRequest":false,"CreatedAt":"2023-12-12T22:36:33","Actor":"kevindqc","Number":"28271","RawContent":null,"Title":"bug(autocomplete): Clicking inside the form field (ie. hint) but outside the input does not close the panel","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I click inside the form field (ie. the hint), the autocomplete panel does not close. I can then use the TAB key to go to another field for example, and the panel is still opened. I can see in the code that it checks explicitly that if the click is in the form field, it doesn't close the panel, but that leads to this situation. \r\n\r\nNormally the hint would probably be under the panel, so you can't really click on it, but in my case, the autocomplete is near the bottom of the screen, which is way in the stackblitz link I also put it at the bottom\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/6qeuke?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\r\nSteps to reproduce:\r\n1. Open the autocomplete on the last form field\r\n2. Click on the hint\r\n3. Use tab to go to the first form field\r\n\r\n![autocomplete panel not closing](https://github.com/angular/components/assets/228313/5ba6199a-111b-4259-90d1-17bfb8d4c758)\r\n\n\n### Expected Behavior\n\nThe autocomplete panel should close when you click on the hint\n\n### Actual Behavior\n\nThe autocomplete panel does not close when you click on the hint\n\n### Environment\n\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28271","RelatedDescription":"Open issue \"bug(autocomplete): Clicking inside the form field (ie. hint) but outside the input does not close the panel\" (#28271)"},{"Id":"2038461172","IsPullRequest":false,"CreatedAt":"2023-12-12T19:57:49","Actor":"incy-tron","Number":"28270","RawContent":null,"Title":"SnackBar no longer supports panelClass","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular 14.\n\n### Description\n\nhttps://github.com/angular/components/issues/26928#issuecomment-1533422940\r\nResponding to closing of the referenced issue, which indicates \"... we generally don't support style overrides like this\".  Which contradicts the fact that you can provide a MatSnackBarConfig object when calling open on snackbar.  This config allows the passing in of \"Extra CSS classes to be added to the snack bar container.\", which doesn't work with the new MDC migration.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nI was expecting to see my css class definition honored.\n\n### Actual Behavior\n\nClass definition not honored.  And there is no easy way to fix this without referencing the hidden css class definitions for the Snackbar.\n\n### Environment\n\n \"@angular/cdk\": \"^15.2.9\",\r\n    \"@angular/common\": \"^15.2.10\",\r\n    \"@angular/compiler\": \"^15.2.10\",\r\n    \"@angular/core\": \"^15.2.10\",\r\n    \"@angular/forms\": \"^15.2.10\",\r\n    \"@angular/material\": \"^15.2.9\",\r\n","Url":"https://github.com/angular/components/issues/28270","RelatedDescription":"Open issue \"SnackBar no longer supports panelClass\" (#28270)"},{"Id":"2038350030","IsPullRequest":true,"CreatedAt":"2023-12-12T19:13:41","Actor":"crisbeto","Number":"28269","RawContent":null,"Title":"Revert \"refactor(material/form-field): tokenize density overrides (#28249)\"","State":"closed","Body":"This reverts commit 087cf15c571d1d9c299e44f0a2f12aa9cdbbd9fd.","Url":"https://github.com/angular/components/pull/28269","RelatedDescription":"Closed or merged PR \"Revert \"refactor(material/form-field): tokenize density overrides (#28249)\"\" (#28269)"},{"Id":"2031430844","IsPullRequest":true,"CreatedAt":"2023-12-12T16:51:27","Actor":"andrewseguin","Number":"28244","RawContent":null,"Title":"fix(material/tabs): add header divider for m3","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28244","RelatedDescription":"Closed or merged PR \"fix(material/tabs): add header divider for m3\" (#28244)"},{"Id":"2032403253","IsPullRequest":true,"CreatedAt":"2023-12-12T15:14:24","Actor":"crisbeto","Number":"28249","RawContent":null,"Title":"refactor(material/form-field): tokenize density overrides","State":"closed","Body":"Switches the custom density implementation of the form field to be based on tokens.","Url":"https://github.com/angular/components/pull/28249","RelatedDescription":"Closed or merged PR \"refactor(material/form-field): tokenize density overrides\" (#28249)"},{"Id":"2033955593","IsPullRequest":false,"CreatedAt":"2023-12-12T12:30:03","Actor":"terabajt","Number":"28255","RawContent":null,"Title":"bug(Main Site v6.material.angular.io/components/sidenav/examples): Error when try to see example on stackblitz.com","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nI can't to run help: https://stackblitz.com/angular/dyljjkygjgl?file=app%2Fsidenav-autosize-example.ts\r\n\r\nError in material-module.ts\r\nThe entrypoint for '@angular/cdk' could not successfully be resolved. The file '/turbo_modules/@angular/cdk@6.4.7/drag-drop' does not exist. Please log an issue with the package author or check for an updated version of the package.\r\n<img width=\"1501\" alt=\"Zrzut ekranu 2023-12-9 o 18 22 58\" src=\"https://github.com/angular/components/assets/78153419/3e2faec8-8adb-41d3-911d-468b0024b0ad\">\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nI want to see example on site: https://v6.material.angular.io/components/sidenav/examples when i click to show on https://stackblitz.com/angular/rkxymaevjpj?file=app%2Fsidenav-overview-example.ts\n\n### Actual Behavior\n\nI see a bug: Error in material-module.ts\r\nThe entrypoint for '@angular/cdk' could not successfully be resolved. The file '/turbo_modules/@angular/cdk@6.4.7/drag-drop' does not exist. Please log an issue with the package author or check for an updated version of the package.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28255","RelatedDescription":"Closed issue \"bug(Main Site v6.material.angular.io/components/sidenav/examples): Error when try to see example on stackblitz.com\" (#28255)"},{"Id":"2037628773","IsPullRequest":false,"CreatedAt":"2023-12-12T12:24:07","Actor":"seyfer","Number":"28268","RawContent":null,"Title":"Type MatChipGrid is not assignable to type MatChipGrid & MatLegacyChipList","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nJust by following the example of Chips with Input from official documentation for v16 Material\r\n\r\nhttps://v16.material.angular.io/components/chips/overview#chips-connected-to-an-input-field\r\n\r\nI have the following error with this code \r\n\r\n```\r\n<mat-form-field class=\"example-chip-list\">\r\n  <mat-label>Favorite Fruits</mat-label>\r\n  <mat-chip-grid #chipGrid aria-label=\"Enter fruits\">\r\n    <mat-chip-row *ngFor=\"let fruit of fruits\"\r\n                  (removed)=\"remove(fruit)\"\r\n                  [editable]=\"true\"\r\n                  (edited)=\"edit(fruit, $event)\"\r\n                  [aria-description]=\"'press enter to edit ' + fruit.name\">\r\n      {{fruit.name}}\r\n      <button matChipRemove [attr.aria-label]=\"'remove ' + fruit.name\">\r\n        <mat-icon>cancel</mat-icon>\r\n      </button>\r\n    </mat-chip-row>\r\n    <input placeholder=\"New fruit...\"\r\n           [matChipInputFor]=\"chipGrid\"\r\n           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n           [matChipInputAddOnBlur]=\"addOnBlur\"\r\n           (matChipInputTokenEnd)=\"add($event)\"/>\r\n  </mat-chip-grid>\r\n</mat-form-field>\r\n```\r\n\r\nspecifically, at `[matChipInputFor]=\"chipGrid\"`\r\n\r\nthe error is:\r\n\r\n> Type MatChipGrid is not assignable to type MatChipGrid & MatLegacyChipList   \r\n> Type MatChipGrid is not assignable to type MatLegacyChipList \r\n\r\nThere is SO question with the same issue, without an answer.\r\nhttps://stackoverflow.com/questions/76497544/mat-chip-grid-is-not-assignable-to-mat-chip-grid-and-mat-legacy-chip-list\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. just follow https://v16.material.angular.io/components/chips/overview#chips-connected-to-an-input-field\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo TS error when assigning chip grid template to matChipInputFor\r\n` [matChipInputFor]='chipGrid'`\r\n\r\n### Actual Behavior\r\n\r\nTS error at ` [matChipInputFor]='chipGrid'`, see in the description.\r\n\r\n### Environment\r\n\r\n- Angular: v16 latest\r\n- CDK/Material: v16 latest\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Linux, any\r\n","Url":"https://github.com/angular/components/issues/28268","RelatedDescription":"Closed issue \"Type MatChipGrid is not assignable to type MatChipGrid & MatLegacyChipList\" (#28268)"},{"Id":"2036701829","IsPullRequest":false,"CreatedAt":"2023-12-12T12:22:34","Actor":"jakemraz20","Number":"28265","RawContent":null,"Title":"bug(MatChipGrid): Mat Chip Input includes its own styling which overwrite custom styles","State":"closed","Body":"### Is this a regression?\r\n\r\n- Unsure\r\n\r\n### Description\r\n\r\nI am working with a matChipInput and once added, it added its own styling which made the cursor blue and shifted it slightly. I should be able to have a simple matChipInput which will not overwrite my input styling.\r\n\r\n![AnuZswTPB3iaeiw](https://github.com/angular/components/assets/38114304/13ff4515-d6a8-4795-8a6b-59ad7f6532c3)\r\n\r\n\r\n### Reproduction\r\n\r\nCreate a mat chip grid and an associated input with the following line\r\n [matChipInputFor]=\"chipGrid\" where chipGrid is the mat chip grid which will be associated with this input.\r\n\r\n### Expected Behavior\r\n\r\nA regular non-styled cursor\r\n\r\n### Actual Behavior\r\n\r\na blue and shifted styled cursor\r\n\r\n### Environment\r\n\r\nAngular material on Chrome on Mac\r\n","Url":"https://github.com/angular/components/issues/28265","RelatedDescription":"Closed issue \"bug(MatChipGrid): Mat Chip Input includes its own styling which overwrite custom styles\" (#28265)"},{"Id":"2037608729","IsPullRequest":true,"CreatedAt":"2023-12-12T12:02:42","Actor":"stijnvn","Number":"28267","RawContent":null,"Title":"Do not deselect comparable already selected value with setSelection","State":"open","Body":"Do not deselect comparable already selected value with setSelection.","Url":"https://github.com/angular/components/pull/28267","RelatedDescription":"Open PR \"Do not deselect comparable already selected value with setSelection\" (#28267)"},{"Id":"2036550964","IsPullRequest":true,"CreatedAt":"2023-12-12T08:21:15","Actor":"mdemichele","Number":"28264","RawContent":null,"Title":"fix(google-maps): missing setZoom()","State":"closed","Body":"Exposes the setZoom() method made available by  the underlying Google Maps API.\r\n\r\nFixes [Issue #25274 ](https://github.com/angular/components/issues/25274)","Url":"https://github.com/angular/components/pull/28264","RelatedDescription":"Closed or merged PR \"fix(google-maps): missing setZoom()\" (#28264)"},{"Id":"2037159548","IsPullRequest":false,"CreatedAt":"2023-12-12T07:36:47","Actor":"milanstamenkovic","Number":"28266","RawContent":null,"Title":"bug(CdkDragDrop): reordering smaller against larger items produce flickering effect","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\n\r\nWhen using CdkDragDrop for reordering items with different sizes (e.g. width for horizontal orientation) in a container with greater height then of the elements there is a flickering effects. CdkDragDrop moves larger item really quickly from one side to another.\r\n\r\nTry to drag \"Iron age\" over empty space in container against some wider item (e.g. \"Early modern period\")\r\n\r\nExample uses angular 12, but in angular 17 it works the same.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-fhqz1h?file=src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.css,src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.ts,src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.html\r\n\n\n### Expected Behavior\n\nReorder elements without flickering effects, as it is when reordering elements of the same size or when container is not larger (e.g. greater height for horizontal list).\n\n### Actual Behavior\n\nLarger element in the list that is reordered against moves fast from one side to another.\n\n### Environment\n\n- Angular: 12\r\n- CDK/Material: 12\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/28266","RelatedDescription":"Open issue \"bug(CdkDragDrop): reordering smaller against larger items produce flickering effect\" (#28266)"},{"Id":"2030448921","IsPullRequest":true,"CreatedAt":"2023-12-11T21:45:14","Actor":"crisbeto","Number":"28242","RawContent":null,"Title":"feat(material/button): add the ability to interact with disabled buttons","State":"closed","Body":"Native disabled buttons don't allow focus and prevent the button from dispatching events. In some cases this can be problematic, because it prevents the app from showing to the user why the button is disabled.\r\n\r\nThese changes introduce a new opt-in input that will style buttons as disabled and set `aria-disabled=\"true\"`, but not set the native `disabled` attribute, allowing them to be interactive.\r\n\r\n**Note for reviewers:** there's an example of the feature in the button demo, but you have to scroll down and check the \"Allow disabled button interactivity\" checkbox. Afterwards you should see tooltips when hovering over the disabled buttons.","Url":"https://github.com/angular/components/pull/28242","RelatedDescription":"Closed or merged PR \"feat(material/button): add the ability to interact with disabled buttons\" (#28242)"},{"Id":"2035462579","IsPullRequest":true,"CreatedAt":"2023-12-11T18:28:51","Actor":"andrewseguin","Number":"28262","RawContent":null,"Title":"fix(material/tabs): deprecate backgroundColor API","State":"closed","Body":"Tabs background colors should be customized using the theming API instead of using component inputs. Adding a boolean check that can be modified internally to perform cleanup before v20.","Url":"https://github.com/angular/components/pull/28262","RelatedDescription":"Closed or merged PR \"fix(material/tabs): deprecate backgroundColor API\" (#28262)"},{"Id":"2035923185","IsPullRequest":false,"CreatedAt":"2023-12-11T15:23:02","Actor":"mzeitzcf","Number":"28263","RawContent":null,"Title":"bug(Datepicker): Datepicker with Moment ignores locale","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nSince updating to Angular 17, my mat-datepicker ignores my locale. Everything should be in German but instead it's all in English now.\n\n### Reproduction\n\nStackBlitz link: https://components-issue-uudyxr.stackblitz.io\r\nSteps to reproduce:\r\n1. Open the datepicker to select a date\r\n2. Select a year and a month\r\n\n\n### Expected Behavior\n\nThe months are displayed in German (screenshot taken from production environment that doesn't have the update to Angular 17 yet).\r\n\r\n![image](https://github.com/angular/components/assets/141422285/662124c9-f17b-4181-a378-a103ee3c9d25)\r\n![image](https://github.com/angular/components/assets/141422285/ce836090-536a-448b-b58f-80e88172da78)\r\n\r\n\n\n### Actual Behavior\n\nThe months are displayed in English\r\n\r\n![image](https://github.com/angular/components/assets/141422285/dc658296-25f4-4221-9938-1b0b62df07e8)\r\n![image](https://github.com/angular/components/assets/141422285/5ff86a70-2566-4979-8117-aa35ce27a4f8)\r\n\n\n### Environment\n\n- Angular: 17.0.6\r\n- CDK/Material: 17.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28263","RelatedDescription":"Open issue \"bug(Datepicker): Datepicker with Moment ignores locale\" (#28263)"},{"Id":"2033989595","IsPullRequest":true,"CreatedAt":"2023-12-11T11:16:04","Actor":"akashar13","Number":"28256","RawContent":null,"Title":"FIX: Example of mat-tabs deletion is showing wrong index","State":"closed","Body":"bug(mat-tabs): Example of mat-tabs deletion is showing wrong index : FIXED\r\nSet Selected value at time of splicing the array","Url":"https://github.com/angular/components/pull/28256","RelatedDescription":"Closed or merged PR \"FIX: Example of mat-tabs deletion is showing wrong index\" (#28256)"},{"Id":"2035227130","IsPullRequest":true,"CreatedAt":"2023-12-11T11:10:27","Actor":"crisbeto","Number":"28260","RawContent":null,"Title":"fix(material/chips): enable hydration","State":"closed","Body":"Removes the `ngSkipHydration` from `mat-chip-listbox` since it seems to work fine in the test app.","Url":"https://github.com/angular/components/pull/28260","RelatedDescription":"Closed or merged PR \"fix(material/chips): enable hydration\" (#28260)"},{"Id":"2034275008","IsPullRequest":true,"CreatedAt":"2023-12-11T11:09:13","Actor":"crisbeto","Number":"28258","RawContent":null,"Title":"fix(material/button): remove duplicate typography styles from FAB","State":"closed","Body":"The FAB was already tokenized some time ago, but we still included typography styles both through the `without-ripple` mixin in the theme and the `static-styles` in the base component styles.\r\n\r\nThese changes remove the unnecessary styles and re-add the font smoothing since it can affect internal tests.","Url":"https://github.com/angular/components/pull/28258","RelatedDescription":"Closed or merged PR \"fix(material/button): remove duplicate typography styles from FAB\" (#28258)"},{"Id":"2035414678","IsPullRequest":false,"CreatedAt":"2023-12-11T11:04:11","Actor":"andrewseguin","Number":"28261","RawContent":null,"Title":"feat(tabs): add support for primary type","State":"open","Body":"Material 3 spec defines two tab types: primary and secondary. Angular Material currently only supports the secondary version. This issue tracks the request to add the primary version.\r\n\r\n![image](https://github.com/angular/components/assets/22898577/bf4f3696-65ec-44fb-8c79-65cec15a7cca)\r\n","Url":"https://github.com/angular/components/issues/28261","RelatedDescription":"Open issue \"feat(tabs): add support for primary type\" (#28261)"},{"Id":"2033729453","IsPullRequest":true,"CreatedAt":"2023-12-11T10:59:44","Actor":"crisbeto","Number":"28254","RawContent":null,"Title":"fix(material/button): resolve memory leaks in ripples","State":"closed","Body":"The `MatRippleLoader` that is used in the button doesn't track any ripples, but instead patches the ripples onto the DOM nodes which in theory should avoid leaks since the ripple will be collected together with the node. The problem is that each ripple registers itself with the `RippleEventManager` which needs to be notified on destroy so that it can dereference the DOM nodes and remove the event listeners.\r\n\r\nThese changes avoid the leaks by:\r\n1. Destroying the ripple when the trigger is destroyed.\r\n2. Cleaning up all the ripples when the ripple loader is destroyed.\r\n3. No longer patching directives onto the DOM nodes.\r\n\r\nFixes #28240.","Url":"https://github.com/angular/components/pull/28254","RelatedDescription":"Closed or merged PR \"fix(material/button): resolve memory leaks in ripples\" (#28254)"},{"Id":"2035196484","IsPullRequest":true,"CreatedAt":"2023-12-11T10:54:12","Actor":"crisbeto","Number":"28259","RawContent":null,"Title":"[Patch only] fix(multiple): add fallback root providers to injection tokens","State":"closed","Body":"Cherry-picks some of the changes from #28155 to the patch branch since they're necessary for compatibility with `@defer`.\r\n\r\nFixes #28198.","Url":"https://github.com/angular/components/pull/28259","RelatedDescription":"Closed or merged PR \"[Patch only] fix(multiple): add fallback root providers to injection tokens\" (#28259)"},{"Id":"2034187219","IsPullRequest":true,"CreatedAt":"2023-12-10T02:11:22","Actor":"mruanova","Number":"28257","RawContent":null,"Title":"docs(material/slider): value should go in the input tag","State":"open","Body":"this screen is correct\r\n![Screen Shot 2023-12-09 at 8 12 10 PM](https://github.com/angular/components/assets/15058177/424d941e-e81f-43da-9f12-04d167088b7d)\r\nbut this screen is wrong because the value should go in the input tag\r\n![Screen Shot 2023-12-09 at 8 13 10 PM](https://github.com/angular/components/assets/15058177/607cf309-069c-41cf-91ac-235825bc2361)","Url":"https://github.com/angular/components/pull/28257","RelatedDescription":"Open PR \"docs(material/slider): value should go in the input tag\" (#28257)"},{"Id":"2033447149","IsPullRequest":true,"CreatedAt":"2023-12-08T23:58:15","Actor":"zarend","Number":"28253","RawContent":null,"Title":"docs(material/chips): remove instructions to announce deletion","State":"open","Body":"Update Chips a11y documentation. Remove instructions to make an announcement when deleting chips.\r\n\r\nRemove the call to LiveAnnouncer. Remove unnecessary live regions to avoid disrupting users who use Assistive Technology.","Url":"https://github.com/angular/components/pull/28253","RelatedDescription":"Open PR \"docs(material/chips): remove instructions to announce deletion\" (#28253)"},{"Id":"2033444024","IsPullRequest":true,"CreatedAt":"2023-12-08T23:51:39","Actor":"zarend","Number":"28252","RawContent":null,"Title":"fix(material/select): remove unnecessary announcement","State":"open","Body":"Fix accessibility issue in MatSelect component. Remove announcement when making selections while popup is closed. Address disruption announcement causes when using MatSelect with assistive technology. Address difficultly using MatSelect with Braile device.","Url":"https://github.com/angular/components/pull/28252","RelatedDescription":"Open PR \"fix(material/select): remove unnecessary announcement\" (#28252)"},{"Id":"2033418901","IsPullRequest":true,"CreatedAt":"2023-12-08T23:10:50","Actor":"zarend","Number":"28251","RawContent":null,"Title":"fix(cdk/tree): implement typeahead label","State":"open","Body":"Implement typeahead labels for Tree. Follow the established pattern that Menu and List use.\r\n - implement CdkTreeNode#cdkTreeNodeTypeaheadLabel\r\n - implement CdkTreeNode#getLabel","Url":"https://github.com/angular/components/pull/28251","RelatedDescription":"Open PR \"fix(cdk/tree): implement typeahead label\" (#28251)"},{"Id":"2032954079","IsPullRequest":true,"CreatedAt":"2023-12-08T16:15:44","Actor":"wagnermaciel","Number":"28250","RawContent":null,"Title":"fix(material/slider): fix value indicator bubble for m3","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28250","RelatedDescription":"Open PR \"fix(material/slider): fix value indicator bubble for m3\" (#28250)"},{"Id":"2031612945","IsPullRequest":true,"CreatedAt":"2023-12-07T22:30:15","Actor":"mmalerba","Number":"28248","RawContent":null,"Title":"Bump version to \"v17.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28248","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.2\" with changelog.\" (#28248)"},{"Id":"2031599250","IsPullRequest":true,"CreatedAt":"2023-12-07T22:03:18","Actor":"mmalerba","Number":"28247","RawContent":null,"Title":"docs: release notes for the v17.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28247","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.3 release\" (#28247)"},{"Id":"2031591306","IsPullRequest":true,"CreatedAt":"2023-12-07T21:58:52","Actor":"mmalerba","Number":"28246","RawContent":null,"Title":"Bump version to \"v17.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28246","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.3\" with changelog.\" (#28246)"},{"Id":"2031555043","IsPullRequest":false,"CreatedAt":"2023-12-07T21:26:05","Actor":"benclarkdev","Number":"28245","RawContent":null,"Title":"docs-bug(Customizing Typography): Input?","State":"open","Body":"### Documentation Feedback\n\nIt seems that `input` was deprecated as a typography level in v15, but in \"Customizing Typography\" for v15-current, we have:\r\n\r\n> The button and input typography levels do not map to CSS classes.\r\n\r\nIt seems like that is an oversight?\n\n### Affected documentation page\n\nguide/typography","Url":"https://github.com/angular/components/issues/28245","RelatedDescription":"Open issue \"docs-bug(Customizing Typography): Input?\" (#28245)"},{"Id":"2030989447","IsPullRequest":true,"CreatedAt":"2023-12-07T15:24:09","Actor":"wagnermaciel","Number":"28243","RawContent":null,"Title":"fix(material/slider): fix internal focus state on safari","State":"open","Body":"* Fixes https://github.com/angular/components/issues/28211","Url":"https://github.com/angular/components/pull/28243","RelatedDescription":"Open PR \"fix(material/slider): fix internal focus state on safari\" (#28243)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-13T03:30:02.6637582Z","RunDurationInMilliseconds":1646}