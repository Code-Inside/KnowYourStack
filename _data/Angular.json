{"Data":{"Angular-Issues":{"Issues":[{"Id":"1973664302","IsPullRequest":true,"CreatedAt":"2023-11-04T00:38:41","Actor":"AleksanderBodurri","Number":"52489","RawContent":null,"Title":"DevTools Injector Graph Visualization polishing","State":"closed","Body":"Some cleanup before release.\r\n\r\nSee individual commits","Url":"https://github.com/angular/angular/pull/52489","RelatedDescription":"Closed or merged PR \"DevTools Injector Graph Visualization polishing\" (#52489)"},{"Id":"1976852272","IsPullRequest":true,"CreatedAt":"2023-11-03T20:00:02","Actor":"arturovt","Number":"52512","RawContent":null,"Title":"refactor(common): remove `load` event listener once it is fired","State":"open","Body":"This commit removes the `load` event listener once it has fired within the `ImagePerformanceWarning`. The `load` event listener prevents the zone stuff from being garbage collected in development mode when debugging microfrontend applications that may be destroyed multiple times.","Url":"https://github.com/angular/angular/pull/52512","RelatedDescription":"Open PR \"refactor(common): remove `load` event listener once it is fired\" (#52512)"},{"Id":"1976826016","IsPullRequest":true,"CreatedAt":"2023-11-03T19:41:53","Actor":"swami-sanapathi","Number":"52511","RawContent":null,"Title":"docs: defer guide typo fix","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/52511","RelatedDescription":"Open PR \"docs: defer guide typo fix\" (#52511)"},{"Id":"1976203336","IsPullRequest":true,"CreatedAt":"2023-11-03T17:54:38","Actor":"alan-agius4","Number":"52508","RawContent":null,"Title":"release: cut the zone.js-0.14.2 release","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52508","RelatedDescription":"Closed or merged PR \"release: cut the zone.js-0.14.2 release\" (#52508)"},{"Id":"1976660664","IsPullRequest":true,"CreatedAt":"2023-11-03T17:43:44","Actor":"JeanMeche","Number":"52510","RawContent":null,"Title":"refactor(http): return chunks with progress event","State":"open","Body":"With `reportProgress:true`, it is now possible to read the individual chunks in a `HttpDownloadProgressEvent` when using the `FetchBackend`.\r\n\r\nfixes #52494\r\n","Url":"https://github.com/angular/angular/pull/52510","RelatedDescription":"Open PR \"refactor(http): return chunks with progress event\" (#52510)"},{"Id":"1976118540","IsPullRequest":true,"CreatedAt":"2023-11-03T16:50:29","Actor":"alan-agius4","Number":"52506","RawContent":null,"Title":"Minor updates to the SSR doc","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52506","RelatedDescription":"Closed or merged PR \"Minor updates to the SSR doc\" (#52506)"},{"Id":"1974580023","IsPullRequest":true,"CreatedAt":"2023-11-03T16:33:27","Actor":"JiaLiPassion","Number":"52492","RawContent":null,"Title":"fix(zone.js): disable wrapping unhandled promise error by default","State":"closed","Body":"Before this commit, zone.js wraps the uncaught promise rejection error to a new Error object includes more information such as Zone stack traces. This feature is provided from the very beginning of Zone.js, but this feature becomes very annoying and make the user difficult to debug.\r\n\r\nSo this commit disable this wrapping behavior by default, and user can enable this feature back by setting\r\n`DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION` to `false`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\nPlease refer to the commit message above.\r\n","Url":"https://github.com/angular/angular/pull/52492","RelatedDescription":"Closed or merged PR \"fix(zone.js): disable wrapping unhandled promise error by default\" (#52492)"},{"Id":"1975252297","IsPullRequest":false,"CreatedAt":"2023-11-03T16:33:03","Actor":"naveedahmed1","Number":"52502","RawContent":null,"Title":"control-flow migration doesnt migrate code with *ngIf else directive","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI recently tried control flow migration schematics for my project using command `ng generate @angular/core:control-flow` although this time the command didnt throw any error but it didnt work either.\r\n\r\nFor eample for below teamplate:\r\n```\r\n<div *ngIf=\"list?.length>0;else noItemFound\">\r\n</div>\r\n<ng-template #noItemFound>No item found</ng-template>\r\n```\r\n\r\nBelow is the code that this migration produced:\r\n\r\n```\r\n @if (list?.length>0;else noItemFound) {\r\n\r\n}\r\n\r\n<ng-template #noItemFound>No item found</ng-template>\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nFor this I can add you to a private repo\n\n### Please provide the exception or error you saw\n\n```true\nNo exception was thrown but migrations didn't work\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.3\r\n@angular/cdk                    17.0.0-rc.1\r\n@angular/cli                    17.0.0-rc.3\r\n@angular/fire                   16.0.0\r\n@angular/google-maps            17.0.0-rc.1\r\n@angular/material               17.0.0-rc.1\r\n@angular/pwa                    17.0.0-rc.3\r\n@schematics/angular             17.0.0-rc.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52502","RelatedDescription":"Closed issue \"control-flow migration doesnt migrate code with *ngIf else directive\" (#52502)"},{"Id":"1975637275","IsPullRequest":true,"CreatedAt":"2023-11-03T16:33:02","Actor":"crisbeto","Number":"52504","RawContent":null,"Title":"fix(migrations): handle ngIf else condition with no whitespaces","State":"closed","Body":"Fixes that the control flow migration wasn't migrating an `*ngIf` with an `else` condition that doesn't have spaces before the `else`.\r\n\r\nFixes #52502.","Url":"https://github.com/angular/angular/pull/52504","RelatedDescription":"Closed or merged PR \"fix(migrations): handle ngIf else condition with no whitespaces\" (#52504)"},{"Id":"1976519433","IsPullRequest":false,"CreatedAt":"2023-11-03T16:16:21","Actor":"trukhinyuri","Number":"52509","RawContent":null,"Title":"rename recommended-devcontainer.json in devcontainer.json in repo","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nNeed rename recommended-devcontainer.json in devcontainer.json in repo. recommended–devcontainer is not valid file.\r\nUsers cant build devcontainer from repo without it in IntelliJ IDEA 2023.3 and another IDEs!\r\nhttps://containers.dev/implementors/spec/\r\n\r\n[devcontainer.json](https://containers.dev/implementors/spec/#devcontainerjson)\r\nWhile the structure of this metadata is critical, it is also important to call out how this data can be represented on disk where appropriate. While other representations may be added over time, metadata can be stored in a JSON with Comments file called devcontainer.json today. Products using it should expect to find a devcontainer.json file in one or more of the following locations (in order of precedence):\r\n\r\n.devcontainer/devcontainer.json\r\n.devcontainer.json\r\n.devcontainer/<folder>/devcontainer.json (where <folder> is a sub-folder, one level deep)\r\nIt is valid that these files may exist in more than one location, so consider providing a mechanism for users to select one when appropriate.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/angular/angular/blob/main/.devcontainer/recommended-Dockerfile\n\n### Please provide the exception or error you saw\n\n```true\nNeed rename recommended-devcontainer.json in devcontainer.json in repo. recommended–devcontainer is not valid file.\r\nUsers cant build devcontainer from repo without it in IntelliJ IDEA 2023.3 and another IDEs!\r\nhttps://containers.dev/implementors/spec/\r\n\r\n[devcontainer.json](https://containers.dev/implementors/spec/#devcontainerjson)\r\nWhile the structure of this metadata is critical, it is also important to call out how this data can be represented on disk where appropriate. While other representations may be added over time, metadata can be stored in a JSON with Comments file called devcontainer.json today. Products using it should expect to find a devcontainer.json file in one or more of the following locations (in order of precedence):\r\n\r\n.devcontainer/devcontainer.json\r\n.devcontainer.json\r\n.devcontainer/<folder>/devcontainer.json (where <folder> is a sub-folder, one level deep)\r\nIt is valid that these files may exist in more than one location, so consider providing a mechanism for users to select one when appropriate.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nNeed rename recommended-devcontainer.json in devcontainer.json in repo. recommended–devcontainer is not valid file.\r\nUsers cant build devcontainer from repo without it in IntelliJ IDEA 2023.3 and another IDEs!\r\nhttps://containers.dev/implementors/spec/\r\n\r\n[devcontainer.json](https://containers.dev/implementors/spec/#devcontainerjson)\r\nWhile the structure of this metadata is critical, it is also important to call out how this data can be represented on disk where appropriate. While other representations may be added over time, metadata can be stored in a JSON with Comments file called devcontainer.json today. Products using it should expect to find a devcontainer.json file in one or more of the following locations (in order of precedence):\r\n\r\n.devcontainer/devcontainer.json\r\n.devcontainer.json\r\n.devcontainer/<folder>/devcontainer.json (where <folder> is a sub-folder, one level deep)\r\nIt is valid that these files may exist in more than one location, so consider providing a mechanism for users to select one when appropriate.\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52509","RelatedDescription":"Closed issue \"rename recommended-devcontainer.json in devcontainer.json in repo\" (#52509)"},{"Id":"1974640794","IsPullRequest":true,"CreatedAt":"2023-11-03T14:52:04","Actor":"atscott","Number":"52493","RawContent":null,"Title":"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove ex…","State":"closed","Body":"…isting InternalViewRef\r\n\r\nThe `ViewRef<T>` interface extends `InternalViewRef` and is already not part of the public API. There is no need for the extra `InternalViewRef` interface. This confusing setup is likely leftover from the types necessary to support both Ivy and ViewEngine.","Url":"https://github.com/angular/angular/pull/52493","RelatedDescription":"Closed or merged PR \"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove ex…\" (#52493)"},{"Id":"1976009162","IsPullRequest":true,"CreatedAt":"2023-11-03T14:43:43","Actor":"alan-agius4","Number":"52505","RawContent":null,"Title":"fix(core): guard usages of `performance.mark`","State":"closed","Body":"While `performance.mark` is available on all supported browsers and node.js version this API is not available in JSDOM which is used by Jest and Cloudflare worker.\r\n\r\nThis commit, updates the usage to a safer variant.","Url":"https://github.com/angular/angular/pull/52505","RelatedDescription":"Closed or merged PR \"fix(core): guard usages of `performance.mark`\" (#52505)"},{"Id":"1976177367","IsPullRequest":true,"CreatedAt":"2023-11-03T13:10:30","Actor":"alxhub","Number":"52507","RawContent":null,"Title":"fix(core): only call `performance.mark` optionally","State":"closed","Body":"Some test environments don't have the `performance.mark` API available, so we can use optional chaining to avoid an error in those circumstances. We should follow this up with a utility method to abstract this logic.","Url":"https://github.com/angular/angular/pull/52507","RelatedDescription":"Closed or merged PR \"fix(core): only call `performance.mark` optionally\" (#52507)"},{"Id":"1975484093","IsPullRequest":true,"CreatedAt":"2023-11-03T05:31:02","Actor":"mmalerba","Number":"52503","RawContent":null,"Title":"Improve support for ICUs in template pipeline","State":"open","Body":"Refactor how the template pipeline handles i18n ops and add support for ICUs nested within other translated messages. See individual commits for more details.","Url":"https://github.com/angular/angular/pull/52503","RelatedDescription":"Open PR \"Improve support for ICUs in template pipeline\" (#52503)"},{"Id":"1974316911","IsPullRequest":true,"CreatedAt":"2023-11-02T22:29:58","Actor":"alxhub","Number":"52490","RawContent":null,"Title":"refactor(core): mark `effect` as developer preview again","State":"closed","Body":"Hi, Enea ❤️","Url":"https://github.com/angular/angular/pull/52490","RelatedDescription":"Closed or merged PR \"refactor(core): mark `effect` as developer preview again\" (#52490)"},{"Id":"1975113188","IsPullRequest":true,"CreatedAt":"2023-11-02T22:07:08","Actor":"alxhub","Number":"52501","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/52501","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.2 release\" (#52501)"},{"Id":"1975110375","IsPullRequest":true,"CreatedAt":"2023-11-02T22:03:39","Actor":"alxhub","Number":"52500","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52500","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.2\" with changelog.\" (#52500)"},{"Id":"1975105767","IsPullRequest":true,"CreatedAt":"2023-11-02T21:59:27","Actor":"jelbourn","Number":"52499","RawContent":null,"Title":"build: configure cross-pkg resolution for api extraction","State":"open","Body":"This commit adds path mapping and source dependencies necessary to fully resolve types during api doc extraction.","Url":"https://github.com/angular/angular/pull/52499","RelatedDescription":"Open PR \"build: configure cross-pkg resolution for api extraction\" (#52499)"},{"Id":"1975084871","IsPullRequest":true,"CreatedAt":"2023-11-02T21:44:58","Actor":"alxhub","Number":"52498","RawContent":null,"Title":"docs: release notes for the v16.2.12 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/52498","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.12 release\" (#52498)"},{"Id":"1975080952","IsPullRequest":true,"CreatedAt":"2023-11-02T21:41:54","Actor":"alxhub","Number":"52497","RawContent":null,"Title":"Bump version to \"v16.2.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52497","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.12\" with changelog.\" (#52497)"},{"Id":"1975013409","IsPullRequest":false,"CreatedAt":"2023-11-02T21:13:18","Actor":"Marvv90","Number":"52496","RawContent":null,"Title":"@Keyframes in Media-Queries doesnt work","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe Following SCSS Code works in Production Mode & Development Mode:\r\n\r\n`span img {\r\n                height: 78px;\r\n                aspect-ratio: 1;\r\n                pointer-events: none;\r\n                user-select: none;\r\n                animation: rotate var(--duration) infinite forwards linear;\r\n}`\r\n\r\nWhen i move the Animation in a Media Querie in Development Mode it also Works but in Production Mode it doesnt Work anymore.\r\n\r\n`@media (hover: none) and (pointer: coarse) {\r\n    button.cursor-button {\r\n        display: block;\r\n        span img {\r\n            animation: rotate var(--duration) infinite forwards linear;\r\n        }\r\n    }\r\n}`\r\n\r\nThe `rotate` Animation: are a simple rotate animation \n\n### Please provide a link to a minimal reproduction of the bug\n\nSimple Animation with Media Querie\n\n### Please provide the exception or error you saw\n\n```true\nNone\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.6\r\nNode: 18.18.2\r\nPackage Manager: npm 10.2.0\r\nOS: darwin x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.6 (cli-only)\r\n@angular-devkit/core         16.2.6 (cli-only)\r\n@angular-devkit/schematics   16.2.6 (cli-only)\r\n@schematics/angular          16.2.6 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52496","RelatedDescription":"Closed issue \"@Keyframes in Media-Queries doesnt work\" (#52496)"},{"Id":"1974954230","IsPullRequest":true,"CreatedAt":"2023-11-02T20:05:12","Actor":"atscott","Number":"52495","RawContent":null,"Title":"test(core): Ensure signals can be read after view creation during cha…","State":"open","Body":"…nge detection\r\n\r\nThese tests ensure signals can be read in a template after embedded views are created in the middle of template execution of an update pass. The embedded view templates are executed in create mode in the middle of the component template being executed in update mode. This behavior was found to not work correctly in past implementations of the reactive template consumers.\r\n\r\n","Url":"https://github.com/angular/angular/pull/52495","RelatedDescription":"Open PR \"test(core): Ensure signals can be read after view creation during cha…\" (#52495)"},{"Id":"1974879885","IsPullRequest":false,"CreatedAt":"2023-11-02T19:06:16","Actor":"alessbell","Number":"52494","RawContent":null,"Title":"Allow consumers to read individual `ReadableStream` chunks when using `FetchBackend`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nHi Angular team 👋 \r\n\r\nI work on Apollo Client and have been looking into adding support for a GraphQL feature called `@defer` in the [Apollo Angular](https://github.com/kamilkisiela/apollo-angular) library.\r\n\r\nThe `@defer` and `@stream` directives (and increasingly other features in GraphQL, like [batching](https://chillicream.com/docs/hotchocolate/v13/server/batching#response-formats) in HotChocolate, or [subscriptions](https://www.apollographql.com/docs/router/executing-operations/subscription-multipart-protocol/) in Apollo Router) use the `multipart/mixed` response format to allow clients to read individual chunks off a `ReadableStream` and update as they're streamed in.\r\n\r\nWith `FetchBackend`, I see that all the chunks are assembled, and once the final chunk arrives the observable returns the entire response: https://github.com/angular/angular/blob/f615f4f90d3a053de2f273f6bd6d3e00ebfbb790/packages/common/http/src/fetch.ts#L115-L126\r\n\r\nI'm wondering if there would be any appetite for an API that exposes access to/iterates an observable on each chunk, though I recognize this is perhaps far afield from the traditional use cases you all need to support :) But I thought I'd open an issue anyways given the increasing usage of this response format in the GraphQL ecosystem. Thanks!\r\n\r\n### Proposed solution\r\n\r\nWanted to get a sense of whether this feature would be considered at all, but happy to participate in the design phase if it's given the green light.\r\n\r\n### Alternatives considered\r\n\r\nNot using `HttpClientModule`: I'm not very familiar with the Angular ecosystem, so I'm not sure whether it would be acceptable to use plain `fetch` (meaning without the added benefits of `HttpClientModule`) for this use case or what the tradeoffs would be.","Url":"https://github.com/angular/angular/issues/52494","RelatedDescription":"Open issue \"Allow consumers to read individual `ReadableStream` chunks when using `FetchBackend`\" (#52494)"},{"Id":"1972881881","IsPullRequest":true,"CreatedAt":"2023-11-02T18:06:28","Actor":"clydin","Number":"52485","RawContent":null,"Title":"docs: additional application builder SSR conversion information","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nN/A\r\n\r\n## What is the new behavior?\r\n\r\nThis change updates the new build system migration guide with additional information regarding the steps needed to convert an existing SSR project to use the new integrated SSR capabilities.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52485","RelatedDescription":"Closed or merged PR \"docs: additional application builder SSR conversion information\" (#52485)"},{"Id":"1973241297","IsPullRequest":true,"CreatedAt":"2023-11-02T18:04:29","Actor":"atcastle","Number":"52486","RawContent":null,"Title":"fix(common): apply fixed_srcset_width values only to fixed srcsets","State":"closed","Body":"(This PR is a copy of #52459, targeting 16.2.x. This bug effects applications using this feature in Angular 16, so the fix makes sense to apply as a patch.)\r\n\r\nThis fixes a bug in NgOptimizedImage where the FIXED_SRCSET_WIDTH_LIMIT was being applied to both \"fixed\" and \"responsive\" srcsets. As the constant name indicates, this is only supposed to apply to fixed images. For responsive images, not generating the srcset in this case is an antipattern, as it prevents the automatic srcset from correctly suggesting a smaller version of the image.\r\n\r\nNew tests included to prevent regression. CC: @AndrewKushnir @kara","Url":"https://github.com/angular/angular/pull/52486","RelatedDescription":"Closed or merged PR \"fix(common): apply fixed_srcset_width values only to fixed srcsets\" (#52486)"},{"Id":"1971999205","IsPullRequest":true,"CreatedAt":"2023-11-02T18:03:49","Actor":"arturovt","Number":"52482","RawContent":null,"Title":"refactor(core): do not run CDs when setting up image perf warnings","State":"closed","Body":"This commit wraps the `load` event listener with `runOutsideAngular` to avoid running unnecessary change detections on asynchronous tasks spawned within the scope of the `ImagePerformanceWarning` functionality. This was previously causing extra change detection cycles in development mode and interfering with debugging.","Url":"https://github.com/angular/angular/pull/52482","RelatedDescription":"Closed or merged PR \"refactor(core): do not run CDs when setting up image perf warnings\" (#52482)"},{"Id":"1974435006","IsPullRequest":true,"CreatedAt":"2023-11-02T14:54:25","Actor":"devknoll","Number":"52491","RawContent":null,"Title":"docs(core): deprecate `ElementRef` constructor","State":"open","Body":"`ElementRef` should be an abstract class whose instances are primarily constructed by Angular. As a first step, the public constructor should be deprecated. A future major version will make `ElementRef` abstract.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52491","RelatedDescription":"Open PR \"docs(core): deprecate `ElementRef` constructor\" (#52491)"},{"Id":"1973469156","IsPullRequest":true,"CreatedAt":"2023-11-02T04:43:27","Actor":"alxhub","Number":"52488","RawContent":null,"Title":"refactor(core): add a flag for whether we skip logic in checkNoChanges","State":"closed","Body":"This can be used to patch different behavior in g3.","Url":"https://github.com/angular/angular/pull/52488","RelatedDescription":"Closed or merged PR \"refactor(core): add a flag for whether we skip logic in checkNoChanges\" (#52488)"},{"Id":"1973244437","IsPullRequest":true,"CreatedAt":"2023-11-02T04:02:55","Actor":"alxhub","Number":"52487","RawContent":null,"Title":"Revert \"fix(compiler): project control flow root elements into correct slot (#52414)","State":"closed","Body":"This reverts commit eb153584791a30a015469269a62fc9eb43dbf16a.","Url":"https://github.com/angular/angular/pull/52487","RelatedDescription":"Closed or merged PR \"Revert \"fix(compiler): project control flow root elements into correct slot (#52414)\" (#52487)"},{"Id":"1972625077","IsPullRequest":true,"CreatedAt":"2023-11-01T17:13:29","Actor":"alxhub","Number":"52484","RawContent":null,"Title":"Revert \"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove existing InternalViewRef (#52430)","State":"closed","Body":"This reverts commit a568bc5d97d143d72ed420890aa216b5ecb1699d as it breaks tests in g3.","Url":"https://github.com/angular/angular/pull/52484","RelatedDescription":"Closed or merged PR \"Revert \"refactor(core): rename ViewRef<T> to InternalViewRef<T> and remove existing InternalViewRef (#52430)\" (#52484)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1977101775","IsPullRequest":true,"CreatedAt":"2023-11-04T01:34:02","Actor":"hirotoKirimaru","Number":"26228","RawContent":null,"Title":"docs: fix the node.js's link that not working","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe Node.js's release link is not working.\r\n![image](https://github.com/angular/angular-cli/assets/30658134/4fa110e8-a559-4be4-950a-cce16d6678ec)\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThe Node.js's release link is working.\r\n![image](https://github.com/angular/angular-cli/assets/30658134/4d5217f5-cdaf-469f-81ff-143acd9ca4c0)\r\n\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26228","RelatedDescription":"Open PR \"docs: fix the node.js's link that not working\" (#26228)"},{"Id":"1976883293","IsPullRequest":true,"CreatedAt":"2023-11-03T20:23:15","Actor":"clydin","Number":"26227","RawContent":null,"Title":"fix(@angular-devkit/build-angular): avoid in-memory prerendering ESM loader errors","State":"open","Body":"The in-memory ESM loader hooks have been adjusted to avoid potential errors when\r\nresolving and loading the bundled server code during prerendering. These errors\r\ncould result in hard to diagnose build failures. E2E testing via the deprecated\r\nprotractor builder, would silently exit, for instance. To ensure on disk files\r\nincluding node modules are resolved from the workspace root, a virtual file root\r\nis used for all in memory files. This path does not actually exist but is used to\r\noverlay the in memory files with the actual filesystem for resolution purposes.\r\nA custom URL schema (such as `memory://`) cannot be used for the resolve output\r\nbecause the in-memory files may use `import.meta.url` in ways that assume a file\r\nURL. `createRequire` from the Node.js `module` builtin is one example of this usage.\r\n\r\nPassing Windows CI run: https://github.com/angular/angular-cli/actions/runs/6750057482/job/18352859851?pr=26227","Url":"https://github.com/angular/angular-cli/pull/26227","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): avoid in-memory prerendering ESM loader errors\" (#26227)"},{"Id":"1975275833","IsPullRequest":false,"CreatedAt":"2023-11-03T17:56:39","Actor":"yjaaidi","Number":"26213","RawContent":null,"Title":"Vite stuck in `Building...`","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen running `ng serve` using the new builder, Vite seems to get stuck at `Building...`.\r\n\n\n### Minimal Reproduction\n\n- run `npm create @angular@next repro`\r\n- downgrade typescript to `5.1.6`\r\n- create an empty `src/polyfills.ts`\r\n- replace `['zone.js']` with `['src/polyfills.ts']`\r\n- run `ng serve`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 20.8.0\r\nPackage Manager: pnpm 8.9.2\r\nOS: darwin x64\r\n\r\nAngular: 17.0.0-rc.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.3\r\n@angular/cli                    17.0.0-rc.3\r\n@schematics/angular             17.0.0-rc.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.14.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26213","RelatedDescription":"Closed issue \"Vite stuck in `Building...`\" (#26213)"},{"Id":"1976616082","IsPullRequest":true,"CreatedAt":"2023-11-03T17:56:38","Actor":"clydin","Number":"26225","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure secondary Angular compilations are unblocked on start errors","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser-esbuild`), the secondary Angular compilations will wait for the primary compilation to finish prior to bundling. This can potentially occur for polyfills that contain TypeScript files and the server code if enabled. However, if the Angular compilation throws an error during the start of the bundling process, the secondary compilations were never notified and instead would wait indefinitely. To avoid this situation, the compilations will now always be notified at the end of the compilation which will occur regardless. The build error that will be generated in these situations is currently not ideal and more verbose than needed but will provide information pertaining to the root cause.\r\n\r\nCloses #26213","Url":"https://github.com/angular/angular-cli/pull/26225","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure secondary Angular compilations are unblocked on start errors\" (#26225)"},{"Id":"1976620556","IsPullRequest":false,"CreatedAt":"2023-11-03T17:22:47","Actor":"pdaneshmand","Number":"26226","RawContent":null,"Title":"SSR and development bundler selection on create app","State":"closed","Body":"### Command\n\ngenerate\n\n### Description\n\nIt would be great if you could choose to run the server side, for example, between fastify or Express or any other framework. Also, choose the execution engine, for example, choose Viteas the default. The less time a developer spends on such issues, the more creative he will be.\n\n### Describe the solution you'd like\n\nFor example ask me on app creation : \r\n\r\nWhats your favorite SSR engine (express default ) ?\r\n1 - fastify\r\n2 - Nest\r\n3 - etc\r\n\r\nWhats your favorite boundless (webpack default ) ?\r\n\r\n1 - Vite\r\n2 - etc\r\n\r\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26226","RelatedDescription":"Closed issue \"SSR and development bundler selection on create app\" (#26226)"},{"Id":"1975645967","IsPullRequest":false,"CreatedAt":"2023-11-03T15:47:03","Actor":"cexbrayat","Number":"26215","RawContent":null,"Title":"application builder: font download failing","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf a component uses a font like fontawesome in its template to display an icon, then the served application does not display the icon and the browser console has an error:\r\n\r\n```\r\ndownloadable font: download failed (font-family: \"Font Awesome 6 Free\" style:normal weight:900 stretch:100 src index:0): status=2147746065 source: http://localhost:4200/media/fa-solid-900.woff2 \r\n```\r\n\r\nThis issue arises with the `application` builder but does not happen with the `browser` builder\n\n### Minimal Reproduction\n\n```\r\nnpx @angular/cli@next new fonts-vite --defaults --no-routing --skip-tests\r\ncd fonts-vite\r\nnpm install --save-exact @fortawesome/fontawesome-free\r\n```\r\n\r\nUpdate styles.css to use:\r\n```css\r\n@import '@fortawesome/fontawesome-free/css/all.css';\r\n```\r\n\r\nand change app.component.html to:\r\n```html\r\n<span class=\"fa fa-power-off\"></span>\r\n```\r\n\r\nRun `ng serve` and see the error in the browser console.\n\n### Exception or Error\n\n```text\ndownloadable font: download failed (font-family: \"Font Awesome 6 Free\" style:normal weight:900 stretch:100 src index:0): status=2147746065 source: http://localhost:4200/media/fa-solid-900.woff2\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.2\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.3\r\n@angular/cli                    17.0.0-rc.3\r\n@schematics/angular             17.0.0-rc.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\n```\n\n\n### Anything else relevant?\n\nUsing the `browser` builder fixes the issue","Url":"https://github.com/angular/angular-cli/issues/26215","RelatedDescription":"Closed issue \"application builder: font download failing\" (#26215)"},{"Id":"1975786568","IsPullRequest":true,"CreatedAt":"2023-11-03T15:47:02","Actor":"alan-agius4","Number":"26218","RawContent":null,"Title":"fix(@angular-devkit/build-angular): media files download files in vite","State":"closed","Body":"Unlike assets, output file were not prefixed with a `/`. This change alings these and now files are always prefixed with a slash.\r\n\r\nCloses #26215\r\n","Url":"https://github.com/angular/angular-cli/pull/26218","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): media files download files in vite\" (#26218)"},{"Id":"1976471846","IsPullRequest":true,"CreatedAt":"2023-11-03T15:41:42","Actor":"alan-agius4","Number":"26224","RawContent":null,"Title":"perf(@angular-devkit/build-angular): cache dependency optimization babel transformations in memory","State":"open","Body":"\r\nCurrently, dependencies which are used in both the server and browser bundles are optimized twice. This causes Babel to transform the same file multiple times, with this change we cache the transformation in memory and re-use the previously transformed if present.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26224","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): cache dependency optimization babel transformations in memory\" (#26224)"},{"Id":"1976441724","IsPullRequest":false,"CreatedAt":"2023-11-03T15:25:07","Actor":"pcbowers","Number":"26223","RawContent":null,"Title":"deleteOutputPath Option on build fails when the output path is mounted as a docker bind mount","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCalling ng build --delete-output-path=true in a docker container where the `dist` folder is mounted as a volume leads to the following error:\r\n\r\n```\r\nEBUSY: resource busy or locked, rmdir '/app/dist'\r\n```\r\n\r\nDocker does not allow deleting the root folder of a volume, making it difficult to bind to the dist. (Normally, you wouldn't need to bind the dist folder, but if you're building a custom image to maximize caching, you don't want to bind the volume to the working directory, but just the specific output directories).\r\n\r\nYou can get around the issue by calling `rm -rf ./dist/* && ng build --delete-output-path=false`. However, this is not tied to the actual configuration, where the output path may be different depending on the configuration.\n\n### Minimal Reproduction\n\nThis is slightly contrived, but illustrates the problem (you wouldn't actually want to do this, but it's easier than building an image from scratch):\r\n\r\n- Run `docker run -it -v ./dist:/app/dist -v .:/app --rm node:18 /bin/bash` in an angular project\r\n- Run `cd /app` to go to the app\r\n- Run `npx ng build --delete-output-path=true` in the docker container\n\n### Exception or Error\n\n```text\nEBUSY: resource busy or locked, rmdir '/app/dist'\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.8\r\nNode: 18.18.0\r\nPackage Manager: pnpm 8.10.2\r\nOS: linux x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.8 (cli-only)\r\n@angular-devkit/build-angular   16.2.8\r\n@angular-devkit/core            16.2.8 (cli-only)\r\n@angular-devkit/schematics      16.2.8 (cli-only)\r\n@angular/cdk                    16.2.10\r\n@angular/cli                    16.2.8\r\n@angular/material               16.2.10\r\n@schematics/angular             16.2.8 (cli-only)\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\nIt looks like angular calls the `deleteOutputDir` method [here in the browser](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/browser/index.ts#L110) and [here in the server](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/server/index.ts#L220) to delete the output path. The method in question can be found [here](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/utils/delete-output-dir.ts#L15). If we used something like fs-extra's `emptyDirSync` (see [here](https://github.com/jprichardson/node-fs-extra/blob/a277cbbdf630424482b1e7418749ccaac0db98fe/lib/empty/index.js#L20)) instead, we could just empty the output directory rather than deleting it. This would make it a lot more usable and should have theoretically the same impact without running into lock errors or permission errors on the file.\r\n\r\nI would put in a PR, but I'm not currently on a machine where that's easy to do!\r\n\r\nIf this would be considered a breaking change, another thought would be to add another flag. Potentially `--empty-output-path`. That way you could do one or the other.","Url":"https://github.com/angular/angular-cli/issues/26223","RelatedDescription":"Open issue \"deleteOutputPath Option on build fails when the output path is mounted as a docker bind mount\" (#26223)"},{"Id":"1976039437","IsPullRequest":true,"CreatedAt":"2023-11-03T15:06:33","Actor":"alan-agius4","Number":"26219","RawContent":null,"Title":"perf(@angular-devkit/build-angular): optimize server or browser only dependencies once","State":"closed","Body":"\r\nThis commit splits the retrieval of external dependencies into two. Server imports and browser imports. This is so that we avoid vite from optimizing server or browser only dependencies twice.\r\n\r\nThis also fixes an issue were in some cases Vite would issue a warning like `Cannot optimize dependency: path, present in 'optimizeDeps.include'`. This was caused because of server only dependencies ended up trying to be optimized for a browser build.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26219","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): optimize server or browser only dependencies once\" (#26219)"},{"Id":"1973192143","IsPullRequest":false,"CreatedAt":"2023-11-03T14:47:13","Actor":"yharaskrik","Number":"26199","RawContent":null,"Title":"Vite dev server fails to serve source maps","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.0-rc.3\n\n### Description\n\nWhen generating a fresh application with `npm init @angular@next --ssr` the application fails to load the sourcemaps when you open the dev tools.\r\n\r\n```\r\nWatch mode enabled. Watching for file changes...\r\n  ➜  Local:   http://localhost:4200/\r\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: '@vite/client.mjs.map'\r\n    at Recognizer.noMatchError (/Users/jaybell/packages/router/src/recognize.ts:61:12)\r\n    at <anonymous> (/Users/jaybell/packages/router/src/recognize.ts:101:20)\r\n    at /Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: 'styles.css.map'\r\n    at Recognizer.noMatchError (/Users/jaybell/packages/router/src/recognize.ts:61:12)\r\n    at <anonymous> (/Users/jaybell/packages/router/src/recognize.ts:101:20)\r\n    at /Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/angular-17-ssr-application-builder/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\n```\r\n\r\nIn our private monorepo when I port the configurations for the application builder I get a slightly different but same case, I run into the same sourcemap error but instead if just crashes the server\r\n\r\n\r\n```\r\nCannot optimize dependency: path, present in 'optimizeDeps.include'\r\n  ➜  Local:   http://localhost:60926/\r\nfile:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3695\r\n        return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\r\n               ^\r\n\r\nRuntimeError: NG04002: Cannot match any routes. URL Segment: '@vite/client.mjs.map'\r\n    at Recognizer.noMatchError (file:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3695:16)\r\n    at file:///Users/jaybell/WebstormProjects/shinkansen/node_modules/@angular/router/fesm2022/router.mjs:3724:28\r\n    at /Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/operators/catchError.js:13:51\r\n    at OperatorSubscriber._this._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30)\r\n    at Subscriber.error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:60:18)\r\n    at Subscriber._error (/Users/jaybell/WebstormProjects/shinkansen/node_modules/rxjs/dist/cjs/internal/Subscriber.js:84:30) {\r\n  code: 4002\r\n}\r\n\r\nNode.js v18.18.2\r\n```\n\n### Minimal Reproduction\n\n`npm init @angular@next --ssr`\r\n`ng serve`\r\nOpen the app\r\nOpen the devtools\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.3\r\n@angular/cli                    17.0.0-rc.3\r\n@angular/ssr                    17.0.0-rc.3\r\n@schematics/angular             17.0.0-rc.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26199","RelatedDescription":"Closed issue \"Vite dev server fails to serve source maps\" (#26199)"},{"Id":"1976248664","IsPullRequest":true,"CreatedAt":"2023-11-03T14:47:12","Actor":"alan-agius4","Number":"26222","RawContent":null,"Title":"fix(@angular-devkit/build-angular): in vite skip SSR middleware for path with extensions","State":"closed","Body":"\r\nDo not try to SSR a request that has extensions.\r\n\r\nCloses #26199\r\n","Url":"https://github.com/angular/angular-cli/pull/26222","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): in vite skip SSR middleware for path with extensions\" (#26222)"},{"Id":"1975713720","IsPullRequest":true,"CreatedAt":"2023-11-03T13:50:55","Actor":"alan-agius4","Number":"26217","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove CJS usage warnings for inactionable packages","State":"closed","Body":"\r\n\r\nThis commit add `critters` and `express` to the CJS allowed deps.\r\n","Url":"https://github.com/angular/angular-cli/pull/26217","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove CJS usage warnings for inactionable packages\" (#26217)"},{"Id":"1974236749","IsPullRequest":true,"CreatedAt":"2023-11-03T13:50:43","Actor":"alan-agius4","Number":"26205","RawContent":null,"Title":"refactor(@angular/ssr): use `join` instead of `resolve`","State":"closed","Body":"With this change we replace `resolve` with `join` to avoid potential path traversal vulnerability.\r\n\r\nMore context about the reasoning behind this change can be found in https://buganizer.corp.google.com/issues/299878755#comment26\r\n\r\n//cc @securityMB, @AndrewKushnir \r\n","Url":"https://github.com/angular/angular-cli/pull/26205","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): use `join` instead of `resolve`\" (#26205)"},{"Id":"1976150692","IsPullRequest":true,"CreatedAt":"2023-11-03T12:51:58","Actor":"alan-agius4","Number":"26221","RawContent":null,"Title":"Revert \"test: temporary disable Jest E2E tests\"","State":"open","Body":"Reverts angular/angular-cli#26220","Url":"https://github.com/angular/angular-cli/pull/26221","RelatedDescription":"Open PR \"Revert \"test: temporary disable Jest E2E tests\"\" (#26221)"},{"Id":"1974949561","IsPullRequest":true,"CreatedAt":"2023-11-03T12:51:09","Actor":"clydin","Number":"26212","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): add experimental extension points to Vite-based dev server","State":"closed","Body":"When using the experimental programmatic API for the development server with an esbuild-based builder (`application`/`browser-esbuild`), express compatible middleware can now be added. Also, the index HTML transformer that previously only worked with the Webpack-based development server is also now enabled.\r\nHowever, usage of these options may result in unexpected application output and/or build failures. They are also not officially supported and SemVer guarantees are not present. Stable and supported methods for build process extension are being evaluated for a future release.","Url":"https://github.com/angular/angular-cli/pull/26212","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): add experimental extension points to Vite-based dev server\" (#26212)"},{"Id":"1976043930","IsPullRequest":true,"CreatedAt":"2023-11-03T12:49:01","Actor":"alan-agius4","Number":"26220","RawContent":null,"Title":"test: temporary disable Jest E2E tests","State":"closed","Body":"More context in https://github.com/angular/angular/pull/52505\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26220","RelatedDescription":"Closed or merged PR \"test: temporary disable Jest E2E tests\" (#26220)"},{"Id":"1974617540","IsPullRequest":true,"CreatedAt":"2023-11-03T12:06:34","Actor":"alan-agius4","Number":"26210","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove `__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION` code","State":"closed","Body":"This is now done by default in zone.js versions greater than  `0.14.1`\r\n\r\n\r\nSee https://github.com/angular/angular/pull/52492","Url":"https://github.com/angular/angular-cli/pull/26210","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove `__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION` code\" (#26210)"},{"Id":"1974849208","IsPullRequest":true,"CreatedAt":"2023-11-03T09:36:27","Actor":"clydin","Number":"26211","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): cache compiled load ESM file helper","State":"closed","Body":"The dynamically compiled ESM import helper is now cached to prevent the need to recompile the helper function everytime a load ESM helper call is made. This helper is currently used to workaround dynamic import limitations with the TypeScript compilation output. Once the build process is updated, it will no longer be required.","Url":"https://github.com/angular/angular-cli/pull/26211","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): cache compiled load ESM file helper\" (#26211)"},{"Id":"1975622710","IsPullRequest":true,"CreatedAt":"2023-11-03T09:35:20","Actor":"cexbrayat","Number":"26214","RawContent":null,"Title":"fix(@angular/ssr): enable performance profiler option name","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe option `enablePeformanceProfiler` has a typo\r\n\r\n## What is the new behavior?\r\n\r\nThe option is now properly named `enablePerformanceProfiler`\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26214","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): enable performance profiler option name\" (#26214)"},{"Id":"1975664394","IsPullRequest":false,"CreatedAt":"2023-11-03T09:30:00","Actor":"arturober","Number":"26216","RawContent":null,"Title":"ng serve doesn't generate media directory","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIt seems that all resources referenced from CSS  using url() are put in media/ directory (in this case, fonts) are put in **media/** directory. This directory (including the fonts) is created inside **dist/** when executing **ng build**, but it's not being generated with **ng serve**.\r\n\r\nFor example, installing @fortawesome/fontawesome-free, and importing the CSS in angular.json (\"node_modules/@fortawesome/fontawesome-free/css/all.css\").\r\n\r\nWhen I put an icon in the app (<i class=\"fa-regular fa-thumbs-up\"></i> for example), I get a 404 error -> doens't find http://localhost:4200/media/fa-regular-400.woff2.\r\n\r\nUntil it's resolved, I have to manually create a media directory inside src and copy the font files there. Then include that directory in the assets section in angular.json.\n\n### Minimal Reproduction\n\nnpm i @fortawesome/fontawesome-free\r\n\r\nInclude \"node_modules/@fortawesome/fontawesome-free/css/all.css\" in the styles section (angular.json)\r\n\r\nCreate an icon in any template: <i class=\"fa-regular fa-thumbs-up\"></i>\r\n\r\nExecute **ng serve**\r\n\r\nGet a 404 error (doesn't find the font file inside the media directory)\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.2\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.0-rc.3 (cli-only)\r\n@angular-devkit/core         17.0.0-rc.3 (cli-only)\r\n@angular-devkit/schematics   17.0.0-rc.3 (cli-only)\r\n@schematics/angular          17.0.0-rc.3 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26216","RelatedDescription":"Closed issue \"ng serve doesn't generate media directory\" (#26216)"},{"Id":"1973383012","IsPullRequest":false,"CreatedAt":"2023-11-02T18:16:14","Actor":"andrewalderson","Number":"26200","RawContent":null,"Title":"asyncToGenerator needs to be opt out in web workers","State":"closed","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nRelated #25708 #23546 \r\n\r\nIn reading the linked issues above I understand why the ```asyncToGenerator``` code is added but there needs to be an opt-out option especially when using web workers. I ran into an issue when trying to implement sqlite3 wasm in an Angular project using the ```@sqlite.org/sqlite-wasm``` package.  I have it working except when running in a worker and using the Origin Private File System. The Angular Cli will add ```var _asyncToGenerator = require(\"/{my local path}/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;``` to the top of the ```sqlite3-opfs-async-proxy.js``` file. This causes an ```Uncaught ReferenceError: require is not defined``` error.\r\n\r\nFirst, shouldn't this ```require``` statement have been converted to a ```___webpack-require___``` on the dev server?\r\n\r\nSecond, I know that the cli doesn't know this code is in a web worker so there needs to be a way for a developer to opt out of this behavior. I don't need ```zone.js``` or any Angular code running in my worker.\r\n\r\nThe last problem is that the ```require``` statement is not removed in the production build. Shouldn't this code be inlined if it is required?\r\n\r\n### Minimal Reproduction\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-fnwhlu\r\n\r\nIf you open the console you will see the errors when you run this.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nnode ➜ /workspaces/angular-worker-sqlite3-wasm (main) $ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.9\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: linux x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.9\r\n@angular-devkit/build-angular   16.2.9\r\n@angular-devkit/core            16.2.9\r\n@angular-devkit/schematics      16.2.9\r\n@angular/cli                    16.2.9\r\n@schematics/angular             16.2.9\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26200","RelatedDescription":"Closed issue \"asyncToGenerator needs to be opt out in web workers\" (#26200)"},{"Id":"1974611996","IsPullRequest":false,"CreatedAt":"2023-11-02T17:21:43","Actor":"zip-fa","Number":"26209","RawContent":null,"Title":"Unexpected token 'export' with vite dev server","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi. I am not sure if this related to angular, but vite throws an error and continues to work.\r\nIt builds dependency without an issue.\r\n\r\nMore details, repro: https://github.com/EsotericSoftware/spine-runtimes/issues/2407\r\n\r\n### Minimal Reproduction\r\n\r\nng serve\r\n\r\n### Exception or Error\r\n\r\n```text\r\nError when evaluating SSR module /main.server.mjs: failed to import \"@esotericsoftware/spine-webgl\"\r\n|- C:\\ng-spine-vite-bug\\node_modules\\@esotericsoftware\\spine-webgl\\dist\\index.js:1\r\nexport * from \"./AssetManager\";\r\n^^^^^^\r\n\r\nSyntaxError: Unexpected token 'export'\r\n    at internalCompileFunction (node:internal/vm:73:18)\r\n    at wrapSafe (node:internal/modules/cjs/loader:1178:20)\r\n    at Module._compile (node:internal/modules/cjs/loader:1220:27)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1310:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1119:32)\r\n    at Module._load (node:internal/modules/cjs/loader:960:12)\r\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:169:29)\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.0-rc.3\r\nNode: 18.18.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.3\r\n@angular-devkit/build-angular   17.0.0-rc.3\r\n@angular-devkit/core            17.0.0-rc.3\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/cdk                    17.0.0-next.6\r\n@angular/cli                    17.0.0-rc.3\r\n@angular/material               17.0.0-rc.0\r\n@angular/ssr                    17.0.0-next.9\r\n@schematics/angular             16.2.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26209","RelatedDescription":"Closed issue \"Unexpected token 'export' with vite dev server\" (#26209)"},{"Id":"1974447150","IsPullRequest":true,"CreatedAt":"2023-11-02T16:12:50","Actor":"alan-agius4","Number":"26207","RawContent":null,"Title":"test(@angular/cli): delay changes to reduce `tests/legacy-cli/e2e/tests/basic/rebuild.ts` flakiness","State":"closed","Body":"\r\nIt appears that the changes where being done to quicky to be picked up by the watcher.\r\n","Url":"https://github.com/angular/angular-cli/pull/26207","RelatedDescription":"Closed or merged PR \"test(@angular/cli): delay changes to reduce `tests/legacy-cli/e2e/tests/basic/rebuild.ts` flakiness\" (#26207)"},{"Id":"1974479384","IsPullRequest":true,"CreatedAt":"2023-11-02T15:35:23","Actor":"angular-robot","Number":"26208","RawContent":null,"Title":"build: update dependency ng-packagr to v17.0.0-rc.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`17.0.0-rc.0` -> `17.0.0-rc.1`](https://renovatebot.com/diffs/npm/ng-packagr/17.0.0-rc.0/17.0.0-rc.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v17.0.0-rc.1`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1700-rc1-2023-11-01)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/17.0.0-rc.0...17.0.0-rc.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MC4wIiwidXBkYXRlZEluVmVyIjoiMzcuNDAuMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26208","RelatedDescription":"Closed or merged PR \"build: update dependency ng-packagr to v17.0.0-rc.1\" (#26208)"},{"Id":"1974425018","IsPullRequest":true,"CreatedAt":"2023-11-02T15:18:03","Actor":"alan-agius4","Number":"26206","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove JavaScriptTransformer from ESM loader","State":"closed","Body":"\r\nThe JavaScriptTransformer is no longer required in the ESM loader hook. This is because during development this pipeline is no longer called. Prendering and App-shell generation are not called from vite, instead we do prerendered on requests bases.\r\n","Url":"https://github.com/angular/angular-cli/pull/26206","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove JavaScriptTransformer from ESM loader\" (#26206)"},{"Id":"1973187844","IsPullRequest":false,"CreatedAt":"2023-11-02T15:13:13","Actor":"manfredsteyer","Number":"26198","RawContent":null,"Title":"dev-server: bypass + [vite] http proxy error: Must provide a proper URL as target","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nworks fine with the webpack-builder \r\n\r\n### Description\r\n\r\nWhen using `bypass` in the proxy config, no (proxy) target should be needed. However, if no target is specified, the `viteProxyMiddleware` reports an error on the command line. Besides this, everything works as expected. However, such an unnecessary error is very confusing and distracts from other console outputs. \r\n\r\nAlso, the webpack-based dev-server does not show such an error.\r\n\r\n### Minimal Reproduction\r\n\r\nAssume this proxy-config in a file ``proxy.mjs``:\r\n\r\n```\r\nexport default {\r\n\r\n  '/': {\r\n    \"bypass\": function (req, res, proxyOptions) {\r\n      if (req.url === '/ping') {\r\n        res.setHeader('Content-Type', \"text/plain\");\r\n        res.end(\"pong\");\r\n        return true;\r\n      }\r\n      else {\r\n        return req.url;\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nThere is no need for a target. In such cases, there might not even be a target.\r\n\r\nStarting `ng serve --proxy-config proxy.mjs` with the webpack-based dev-server works fine. When starting it with the esbuild-based dev-server an exception occurs on the command line:\r\n\r\n```\r\n[vite] http proxy error: Must provide a proper URL as target\r\n```\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\nError: Must provide a proper URL as target\r\n    at ProxyServer.<anonymous> (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:63692:36)\r\n    at viteProxyMiddleware (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:64005:23)\r\n    at call (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:50559:7)\r\n    at next (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:50503:5)\r\n    at cors (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51031:7)\r\n    at file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51067:17\r\n    at originCallback (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51057:15)\r\n    at file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51062:13\r\n    at optionsCallback (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51042:9)\r\n    at corsMiddleware (file:///C:/temp/ping/node_modules/vite/dist/node/chunks/dep-3b8eb186.js:51047:7)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.9\r\nNode: 20.9.0 (Unsupported)\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.9\r\n@angular-devkit/build-angular   16.2.9\r\n@angular-devkit/core            16.2.9\r\n@angular-devkit/schematics      16.2.9\r\n@angular/cli                    16.2.9\r\n@schematics/angular             16.2.9\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI've seen the same behavior in the current RC of Angular 17.","Url":"https://github.com/angular/angular-cli/issues/26198","RelatedDescription":"Closed issue \"dev-server: bypass + [vite] http proxy error: Must provide a proper URL as target\" (#26198)"},{"Id":"1974192906","IsPullRequest":true,"CreatedAt":"2023-11-02T15:03:35","Actor":"alan-agius4","Number":"26202","RawContent":null,"Title":"fix(@angular-devkit/build-angular): prebundle dependencies for SSR when using Vite","State":"closed","Body":"\r\nThe commit introduces dependencies prebundling and optimisation for SSR dependencies. This is primarily needed for Angular linking and async/await downlevelling. To enable this, we need to use the undocumented `optimizeDeps` setting under the `ssr` option. This is because, the top level `optimizeDeps` vite config option  only controls browser dependencies.\r\n\r\nFor the above mentioned option to take effect and transform node packages, we also need to use `noExternal` and use a catch all `RegExp`. Note: setting this option to `true` has a different effect from a catch all `RegExp`, as the former will cause the `external` option to be ignored.\r\n\r\nAdditionally together with `externalMetadata.explicit` we add Node.js build-ins as `external`.\r\n\r\nCloses: #26192\r\n","Url":"https://github.com/angular/angular-cli/pull/26202","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): prebundle dependencies for SSR when using Vite\" (#26202)"},{"Id":"1974200650","IsPullRequest":true,"CreatedAt":"2023-11-02T13:01:49","Actor":"alan-agius4","Number":"26203","RawContent":null,"Title":"Revert \"build: update dependency ng-packagr to v17.0.0-rc.1\"","State":"closed","Body":"Reverts angular/angular-cli#26191","Url":"https://github.com/angular/angular-cli/pull/26203","RelatedDescription":"Closed or merged PR \"Revert \"build: update dependency ng-packagr to v17.0.0-rc.1\"\" (#26203)"},{"Id":"1974010600","IsPullRequest":true,"CreatedAt":"2023-11-02T13:00:52","Actor":"leosvelperez","Number":"26201","RawContent":null,"Title":"fix(@angular-devkit/build-angular): expose ssr-dev-server builder in the public api","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe `ssr-dev-server` builder function is not exposed in the public API.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\nThe `ssr-dev-server` builder function is exposed in the public API.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26201","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): expose ssr-dev-server builder in the public api\" (#26201)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1976925646","IsPullRequest":true,"CreatedAt":"2023-11-03T21:00:43","Actor":"essjay05","Number":"28054","RawContent":null,"Title":"docs: update document bullet formatting","State":"open","Body":"Update bulleted points in CODE_REVIEWS.md to remove '.' at the end of each point to be cohesive with CONTRIBUTING.md guidelines.\r\n\r\n","Url":"https://github.com/angular/components/pull/28054","RelatedDescription":"Open PR \"docs: update document bullet formatting\" (#28054)"},{"Id":"1976592117","IsPullRequest":true,"CreatedAt":"2023-11-03T16:56:10","Actor":"devversion","Number":"28053","RawContent":null,"Title":"ci: deploy dev-app to ng-comp-devapp.web.app","State":"closed","Body":"Instead of using a preview channel, we are deploying to a live channel so that we have a static URL for team members.\r\n\r\nFor this we created a separate new sub-site in the ng-dev-previews Firebase project- still allowing us to benefit from the dev-infra maintenance of the project (and token/secret management).","Url":"https://github.com/angular/components/pull/28053","RelatedDescription":"Closed or merged PR \"ci: deploy dev-app to ng-comp-devapp.web.app\" (#28053)"},{"Id":"1976481618","IsPullRequest":true,"CreatedAt":"2023-11-03T15:47:42","Actor":"pmvald","Number":"28052","RawContent":null,"Title":"refactor: use enum instead of const enum","State":"open","Body":"Const enums prevent enabling the `isolatedModules` check which is needed for fast TS compilation based on transpileModule API.\r\n\r\nThis the counterpart of #51670 in Angular repo.","Url":"https://github.com/angular/components/pull/28052","RelatedDescription":"Open PR \"refactor: use enum instead of const enum\" (#28052)"},{"Id":"1976412731","IsPullRequest":false,"CreatedAt":"2023-11-03T15:12:05","Actor":"DevLapar","Number":"28051","RawContent":null,"Title":"bug(CDK DragAndDrop): Dragging items between CdkDropLists from which at least one is contained in an element with transition property (for transform) does not work","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nDragged items from one CdkDropList to another CdkDropList (let's call it Droplist2)  that is contained in an HTML element that moves by the means of transform: translate(x,y) **with a transition property** does not respond to the Droplist2 and can therefore not be dropped in it. However when commenting out the transition property but retaining the transform(x,y) property everything works fine and as intended\r\n\r\nBug happens when you enable transition on .example-container.hello.\r\nIf transition is disabled draggin items from To do to Done is working fine\r\nHowever, when enabling transition (anything above 0s) the items from To Do\r\ndo not respond to the Done droplist anymore and you can't drop an item in it.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/drag-drop-inside-another-container-mprxck?file=app%2Fcdk-drag-drop-connected-sorting-example.html,app%2Fcdk-drag-drop-connected-sorting-example.ts,app%2Fcdk-drag-drop-connected-sorting-example.css\r\nSteps to reproduce:\r\n1. Open the CSS panel (cdk-drag-drop-connected-sorting-example.css)\r\n2. Comment or Uncomment the \"transition\" property from .example-container.hello\r\n3. Try dragging an item from the To Do list to the Done line\r\n4. When transition property is commented out (so it's not active) dragging items works fine between Lists\r\n5. When transition property is not commented (so it's active) dragging items does not work between Lists\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe dragged item should respond to the Done CdkDropList and should put itself into the Done list when entered/hovered over the Done list\r\n\r\n### Actual Behavior\r\n\r\nIf transition property is active the dragged item does not respond to the Done CdkDropList and is therefore **not able** to put itself in the Done list. \r\n\r\nHowever if you comment out the transition property on .example-container.hello (in CSS file), the dragged item does respond to the Drop list and **is able** to put itself into it\r\n\r\n### Environment\r\n\r\n- Angular: v14\r\n- CDK/Material: 7.3.6\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28051","RelatedDescription":"Open issue \"bug(CDK DragAndDrop): Dragging items between CdkDropLists from which at least one is contained in an element with transition property (for transform) does not work\" (#28051)"},{"Id":"1976285243","IsPullRequest":false,"CreatedAt":"2023-11-03T14:07:43","Actor":"natechiarello","Number":"28050","RawContent":null,"Title":"bug(mat-select): Select component options truncate when the option text doesn't contain any white spaces","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSince version 15, very long text options in a mat-select element are no longer truncated, but break onto multiple lines.\r\n\r\nHowever, if you have no white spaces in the option text, then the option will truncate.\r\n\r\nThe expected behaviour is to have some consistency across all options, whether it be that they all truncate or they wrap onto multiple lines.\r\n\r\nBy inspecting the code it seems that options are using truncation applied to list items, with which they share the \"mdc-list-item__primary-text\" class \r\n![image](https://github.com/angular/components/assets/26441392/6b36f910-0e95-470e-bcd6-2abd24e91cea)\r\n\r\nHowever, that is been overridden for options in a select element (the white-space: normal property below)\r\n![image](https://github.com/angular/components/assets/26441392/2b3f3740-b21f-4363-bab7-3f7917eab13d)\r\n\r\nwhich is indeed causing options to wrap if too long, but not if they don't contain any white space.\r\n\n\n### Reproduction\n\nThis can be reproduced in the Angular Material Documentation by changing the text in any two options in dev tools https://v15.material.angular.io/components/select/examples\r\n\r\n![image](https://github.com/angular/components/assets/26441392/b98b9b3c-e0b0-4f1a-ab33-190f4b94a72a)\n\n### Expected Behavior\n\nAll options with long text, with or without white-spaces, should have a consistent behaviour, either truncate or wrap onto multiple lines.\n\n### Actual Behavior\n\nTwo different behaviours as described in the description above\n\n### Environment\n\n- Angular: 16.2.8\r\n- CDK/Material: 16.2.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28050","RelatedDescription":"Open issue \"bug(mat-select): Select component options truncate when the option text doesn't contain any white spaces\" (#28050)"},{"Id":"1975914639","IsPullRequest":true,"CreatedAt":"2023-11-03T11:29:54","Actor":"devversion","Number":"28049","RawContent":null,"Title":"ci: add deployment status for automatic dev-app deployments","State":"closed","Body":"This will make it easier to discover the URL for the dev-app deployment.","Url":"https://github.com/angular/components/pull/28049","RelatedDescription":"Closed or merged PR \"ci: add deployment status for automatic dev-app deployments\" (#28049)"},{"Id":"1975520877","IsPullRequest":true,"CreatedAt":"2023-11-03T06:18:16","Actor":"crisbeto","Number":"28048","RawContent":null,"Title":"Remove most remaining usages of TypeScript mixins","State":"open","Body":"These changes remove all the remaining usages of `mixinColor`, `mixinDisabled`, `mixinDisableRipple` and `mixinTabindex` in favor of using input transforms and host bindings. There are still some usages of `mixinErrorState` and `mixinInitialized` that have to be migrated separately.\r\n\r\nI've made this refactor, because:\r\n1. We need to switch away from `mixinColor`, because it uses direct DOM manipulation. This is problematic for future hydration and SSR efforts.\r\n2. Mixins add a lot of boilerplate, increase the prototype chain and can be difficult to reason about. `mixinDisabled`, `mixinDisableRipple` and `mixinTabindex` were only used for input coercion which can be replaced with input transforms.","Url":"https://github.com/angular/components/pull/28048","RelatedDescription":"Open PR \"Remove most remaining usages of TypeScript mixins\" (#28048)"},{"Id":"1972779346","IsPullRequest":true,"CreatedAt":"2023-11-02T20:58:04","Actor":"zarend","Number":"28032","RawContent":null,"Title":"build: update version of checkout action in building and deploying de…","State":"closed","Body":"…vapp","Url":"https://github.com/angular/components/pull/28032","RelatedDescription":"Closed or merged PR \"build: update version of checkout action in building and deploying de…\" (#28032)"},{"Id":"1974693175","IsPullRequest":true,"CreatedAt":"2023-11-02T17:10:39","Actor":"devversion","Number":"28047","RawContent":null,"Title":"ci: properly build dev-app for automatic deploy","State":"closed","Body":"The deploy script seems rather legacy and also doesn't ensure that the dist directory is actually present. We can simplify the logic and potentially delete the script in the future.","Url":"https://github.com/angular/components/pull/28047","RelatedDescription":"Closed or merged PR \"ci: properly build dev-app for automatic deploy\" (#28047)"},{"Id":"1974673123","IsPullRequest":true,"CreatedAt":"2023-11-02T16:59:05","Actor":"DBowen33","Number":"28046","RawContent":null,"Title":"fix(material/paginator) Visual order does not match reading order","State":"open","Body":"On certain mobile devices like iPhone 12 and Google Pixel 5, the reading order of the pagination controls does not match the visual order which can be disorienting to visual users who do use screen readers or keyboard only to navigate the page.  The following fix changes the reading order from top to bottom instead of bottom to top. \r\n**Screenshot of incorrect reading order**:\r\n ![paginator-reading-order-bug](https://github.com/angular/components/assets/42016383/fa9a34d9-30df-40bf-b83b-4a2ebfe9cffe)\r\n\r\n","Url":"https://github.com/angular/components/pull/28046","RelatedDescription":"Open PR \"fix(material/paginator) Visual order does not match reading order\" (#28046)"},{"Id":"1974631147","IsPullRequest":true,"CreatedAt":"2023-11-02T16:34:18","Actor":"DBowen33","Number":"28045","RawContent":null,"Title":"fix(material/paginator): visual order does not match reading order","State":"closed","Body":"OBSERVED RESULTS:\r\n\r\nThe reading order of the pagination controls does not match the visual order which can be disorienting to visual users who do use screen readers or keyboard only to navigate the page.\r\n\r\nScreenshot/screencast: https://screenshot.googleplex.com/Bd6psV6wJZ4sgji.png\r\nUser provided screenshot\r\n\r\nEXPECTED RESULTS:\r\n\r\nIf possible, try to match the reading/focus order of elements with the visual order. Typically it is left to right, top to bottom.\r\nSTEPS TO REPRODUCE:\r\n\r\nEnable screen reader\r\nNavigate to https://xap-gallery.corp.google.com/embed/a11y/mdc-paginator\r\nNavigate to the pagination controls\r\nObserve\r\n[RELEVANT GAR SHEET](https://docs.google.com/spreadsheets/d/1-_8Tppqw-ylYLRHkGSwTdoCIsAqh_eq-I6YjwVcP7jI/edit#gid=1798853167)\r\n\r\n[RELEVANT GAR GUIDELINE](http://go/gar-mobile-run-through-screen-reader)\r\n\r\nENVIRONMENT DETAILS:\r\n\r\nGoogle Pixel 5\r\n\r\nAndroid version 13\r\nTalkback\r\nCanary 116.0.5813.0\r\niPhone 12\r\n\r\niOS 16.4.1\r\nVoiceOver\r\nDev 116.0.5805.1\r\nBug filing time:\r\n\r\n10min","Url":"https://github.com/angular/components/pull/28045","RelatedDescription":"Closed or merged PR \"fix(material/paginator): visual order does not match reading order\" (#28045)"},{"Id":"1973725915","IsPullRequest":true,"CreatedAt":"2023-11-02T16:19:36","Actor":"crisbeto","Number":"28042","RawContent":null,"Title":"refactor(material/core): switch ripple to tokens theming API","State":"closed","Body":"Switches the ripple element color to be controlled through a token.","Url":"https://github.com/angular/components/pull/28042","RelatedDescription":"Closed or merged PR \"refactor(material/core): switch ripple to tokens theming API\" (#28042)"},{"Id":"1974321201","IsPullRequest":true,"CreatedAt":"2023-11-02T16:05:26","Actor":"devversion","Number":"28044","RawContent":null,"Title":"ci: automatically deploy dev-app to firebase for main branch","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/components/pull/28044","RelatedDescription":"Closed or merged PR \"ci: automatically deploy dev-app to firebase for main branch\" (#28044)"},{"Id":"1973962168","IsPullRequest":false,"CreatedAt":"2023-11-02T10:36:50","Actor":"alex36077","Number":"28043","RawContent":null,"Title":"feat(MatStepper): Provide a template directive for displaying summary of a completed step","State":"open","Body":"### Feature Description\n\nIt would be interesting to have a template directive that would allow to set content for summary of a completed step.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/28043","RelatedDescription":"Open issue \"feat(MatStepper): Provide a template directive for displaying summary of a completed step\" (#28043)"},{"Id":"1973719985","IsPullRequest":false,"CreatedAt":"2023-11-02T08:09:36","Actor":"Catscratch","Number":"28041","RawContent":null,"Title":"bug(material-date-fns-adapter): MatDateFnsAdapter not imported into standalone dialog component","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm not sure if it is a bug or just how it works atm, but when using a MatDatepicker with MatDateFnsModule it will not find the DateAdapter when using this in a standalone dialog component. (it's working in all other standalone components which are not a dialog).\r\n\r\nIf I add the MatDateFnsAdapter to the imports of the component which opens the dialog, everything is fine. But with standalone components I usually expect the imports in the component that really needs it.\r\n\r\nI prepared a StackBlitz example.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-35ebyd?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. Wait for the dev server to load\r\n2. Click \"Open Dialog\"\r\n3. Click on the calendar icon in the input field\r\n4. See the console log\r\n\n\n### Expected Behavior\n\nNo error message should appear on the console and the datepicker should open.\n\n### Actual Behavior\n\nDatepicker does not open because of the console error.\n\n### Environment\n\n- Angular: 16.2.11\r\n- CDK/Material: 16.2.11\r\n- Browser(s): Edge, Chrome\r\n","Url":"https://github.com/angular/components/issues/28041","RelatedDescription":"Open issue \"bug(material-date-fns-adapter): MatDateFnsAdapter not imported into standalone dialog component\" (#28041)"},{"Id":"1973409091","IsPullRequest":true,"CreatedAt":"2023-11-02T07:40:00","Actor":"shinkhouse","Number":"28040","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"closed","Body":"This particular example had css for a mdc form field that isn't reference in the mat-expansion docs overview example, so I removed it here. ","Url":"https://github.com/angular/components/pull/28040","RelatedDescription":"Closed or merged PR \"docs(material/expansion): remove unused styling\" (#28040)"},{"Id":"1973352384","IsPullRequest":true,"CreatedAt":"2023-11-02T02:50:00","Actor":"shinkhouse","Number":"28039","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"closed","Body":"This particular example had css for a mdc form field that isn't reference in the example, so I removed the css file from the example.","Url":"https://github.com/angular/components/pull/28039","RelatedDescription":"Closed or merged PR \"docs(material/expansion): remove unused styling\" (#28039)"},{"Id":"1973348063","IsPullRequest":true,"CreatedAt":"2023-11-02T01:38:11","Actor":"shinkhouse","Number":"28038","RawContent":null,"Title":"docs(material/expansion): remove unused styling","State":"closed","Body":"This particular example had css for a mdc form field that isn't reference in the example, so I removed the css file from the example. ","Url":"https://github.com/angular/components/pull/28038","RelatedDescription":"Closed or merged PR \"docs(material/expansion): remove unused styling\" (#28038)"},{"Id":"1973218267","IsPullRequest":false,"CreatedAt":"2023-11-01T22:46:19","Actor":"shinkhouse","Number":"28037","RawContent":null,"Title":"bug(mat-expansion-panel): mat-expansion-indicator is slightly off center","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe mat-expansion-indicator caret icon is slightly off vertical centered on the mat-expansion-panel-header. If you look at your own [documentation](https://material.angular.io/components/expansion/overview), and apply the following style to the mat-expansion-panel-header in Chrome Dev Tools, \r\n`\r\nmat-expansion-panel-header#mat-expansion-panel-header-1::after {\r\n    height: 1px;\r\n    width: 100%;\r\n    position: absolute;\r\n    content: \"\";\r\n    background: red;\r\n}\r\n`\r\n\r\nYou can see a red line centered on the element, but the arrow is slightly below that line.. or above it, if it is expanded. So visually, this seems to not be correct. Is this intentional?\r\n\r\nBelow, I noted this issue in Angular 13, but also reproduced in v16 as well. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-b45cmn?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1.  I had just added the css mentioned above... but you can see it in the StackBlitz as well. \r\n\n\n### Expected Behavior\n\nThe mat-expansion-indicator should be visually centered in the mat-expansion-panel-header component. \n\n### Actual Behavior\n\nIt is visually off centered. \n\n### Environment\n\n```\r\nAngular CLI: 13.1.1\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1\r\nOS: darwin arm64\r\n\r\nAngular: 13.1.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.1\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.1.1\r\n@angular-devkit/schematics      13.1.1\r\n@angular/cli                    13.1.1\r\n@angular/flex-layout            13.0.0-beta.36\r\n@angular/http                   7.2.16\r\n@schematics/angular             13.1.1\r\nrxjs                            6.6.7\r\ntypescript                      4.5.4\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome 118.0.5993.117\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma 14.0\r\n```\r\n\r\n","Url":"https://github.com/angular/components/issues/28037","RelatedDescription":"Open issue \"bug(mat-expansion-panel): mat-expansion-indicator is slightly off center\" (#28037)"},{"Id":"1972892932","IsPullRequest":true,"CreatedAt":"2023-11-01T18:36:29","Actor":"mmalerba","Number":"28036","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28036","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.2 release\" (#28036)"},{"Id":"1972887704","IsPullRequest":true,"CreatedAt":"2023-11-01T18:33:52","Actor":"mmalerba","Number":"28035","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28035","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.2\" with changelog.\" (#28035)"},{"Id":"1972868529","IsPullRequest":true,"CreatedAt":"2023-11-01T18:19:03","Actor":"mmalerba","Number":"28034","RawContent":null,"Title":"docs: release notes for the v16.2.11 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28034","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.11 release\" (#28034)"},{"Id":"1972864612","IsPullRequest":true,"CreatedAt":"2023-11-01T18:16:26","Actor":"mmalerba","Number":"28033","RawContent":null,"Title":"Bump version to \"v16.2.11\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28033","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.11\" with changelog.\" (#28033)"},{"Id":"1971904301","IsPullRequest":true,"CreatedAt":"2023-11-01T17:49:34","Actor":"crisbeto","Number":"28030","RawContent":null,"Title":"refactor(material/button): clean up tokens and use tokens for ripples","State":"closed","Body":"These changes rework the existing button setup for emitting different color palette tokens to match how it's being done in the rest of the project. Then it builds on top of the changes to introduce Angular-specific tokens for each of the buttons so that we can implement the ripples through them, instead of the existing variables that are used for all button types at the same time.","Url":"https://github.com/angular/components/pull/28030","RelatedDescription":"Closed or merged PR \"refactor(material/button): clean up tokens and use tokens for ripples\" (#28030)"},{"Id":"1972602493","IsPullRequest":true,"CreatedAt":"2023-11-01T15:30:57","Actor":"esprehn","Number":"28031","RawContent":null,"Title":"Improve perf of HighContrastModeDetector for micro frontends","State":"open","Body":"If there's more than one copy of angular on the page each will try to apply the high contrast mode classes which triggers a large style recalc and a repaint of the body layer which can be very expensive.\r\n\r\nInstead we put an attribute on the body and use that to decide if we've already checked for the mode when initially creating the service.\r\n\r\nWe were also ignoring the state of the BreakpointObserver and rechecking every time. I changed it to use the emitted initial state to avoid this.\r\n\r\nIn general the HighContrastModeDetector seems like it needs more improvements though:\r\n- getHighContrastMode() recomputes it every time, and some folks call this manually (like critique on every diff view)\r\n- It doesn't handle SSR because there's no initial state provided through ex. cookies. So every new page load will flash in and out of high contrast mode.\r\n\r\nThe SSR issue in particular needs a future fix.","Url":"https://github.com/angular/components/pull/28031","RelatedDescription":"Open PR \"Improve perf of HighContrastModeDetector for micro frontends\" (#28031)"},{"Id":"1971297252","IsPullRequest":true,"CreatedAt":"2023-10-31T21:01:11","Actor":"mmalerba","Number":"28029","RawContent":null,"Title":"perf(cdk/a11y): Don't trigger re-layout when detecting fake mousedown","State":"open","Body":"Fixes #28010\r\n\r\nI found that testing `screenX` / `screenY` as suggested in the issue does not work. Testing `detail` seems to work on Chrome and Safari, but not Firefox (Firefox already had an alternate check). I wasn't able to test on Edge, but as part of the webkit family, it probably works like Chrome/Safari\r\n\r\nEdit: @zarend helped me test some more configurations. Works with Chrome, Firefox, Safari, Edge & VoiceOver, NVDA, JAWS","Url":"https://github.com/angular/components/pull/28029","RelatedDescription":"Open PR \"perf(cdk/a11y): Don't trigger re-layout when detecting fake mousedown\" (#28029)"},{"Id":"1971023122","IsPullRequest":true,"CreatedAt":"2023-10-31T18:00:40","Actor":"wagnermaciel","Number":"28028","RawContent":null,"Title":"fix(material/button): set line-height to normal","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28028","RelatedDescription":"Open PR \"fix(material/button): set line-height to normal\" (#28028)"},{"Id":"1970606851","IsPullRequest":true,"CreatedAt":"2023-10-31T15:00:24","Actor":"crisbeto","Number":"28027","RawContent":null,"Title":"test(material/schematics): fix failing test","State":"closed","Body":"Fixes a failing test in the `ng add` schematic.","Url":"https://github.com/angular/components/pull/28027","RelatedDescription":"Closed or merged PR \"test(material/schematics): fix failing test\" (#28027)"},{"Id":"1970022075","IsPullRequest":true,"CreatedAt":"2023-10-31T14:27:39","Actor":"JeanMeche","Number":"28026","RawContent":null,"Title":"refactor(schematics): don't add the preconnect for fonts","State":"closed","Body":"This is now added automatically by the CLI  angular/angular-cli#25318","Url":"https://github.com/angular/components/pull/28026","RelatedDescription":"Closed or merged PR \"refactor(schematics): don't add the preconnect for fonts\" (#28026)"},{"Id":"1969983721","IsPullRequest":true,"CreatedAt":"2023-10-31T14:26:12","Actor":"crisbeto","Number":"28025","RawContent":null,"Title":"fix(material/schematics): account for browser-esbuild builder","State":"closed","Body":"Fixes that the schematics would throw if the app is using the `browser-esbuild` builder from the CLI.","Url":"https://github.com/angular/components/pull/28025","RelatedDescription":"Closed or merged PR \"fix(material/schematics): account for browser-esbuild builder\" (#28025)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-11-04T03:30:02.4592265Z","RunDurationInMilliseconds":1466}