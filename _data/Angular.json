{"Data":{"Angular-Issues":{"Issues":[{"Id":"2606582354","IsPullRequest":true,"CreatedAt":"2024-10-22T21:42:43","Actor":"jeantimex","Number":"58316","RawContent":null,"Title":"refactor(core): allow passing passive option to addEvent","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThis PR makes event library's `addEventListener()` calls `EventTarget.addEventListener()` with `options` instead of `useCapture`. This allows us to pass or override `passive` option for improving scroll performance in future PRs.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n - Passing `options` to `EventTarget.addEventListener` is not supported in IE11\r\n - `removeEventListener()` doesn't recognize `passive` option\r\n - This PR is created because I messed up https://github.com/angular/angular/pull/58198 :)","Url":"https://github.com/angular/angular/pull/58316","RelatedDescription":"Open PR \"refactor(core): allow passing passive option to addEvent\" (#58316)"},{"Id":"2606453678","IsPullRequest":true,"CreatedAt":"2024-10-22T21:04:48","Actor":"AndrewKushnir","Number":"58315","RawContent":null,"Title":"[revert] feat(forms): add ability to clear a FormRecord","State":"closed","Body":"This PR reverts commits from https://github.com/angular/angular/pull/50750 due to a breakage in Google's codebase.","Url":"https://github.com/angular/angular/pull/58315","RelatedDescription":"Closed or merged PR \"[revert] feat(forms): add ability to clear a FormRecord\" (#58315)"},{"Id":"2606291093","IsPullRequest":true,"CreatedAt":"2024-10-22T20:13:58","Actor":"devversion","Number":"58314","RawContent":null,"Title":"refactor(migrations): fix merge conflict in output migration","State":"closed","Body":"Output migration introduced some Tsurge code that has changed with a commit that was landing during the same time.","Url":"https://github.com/angular/angular/pull/58314","RelatedDescription":"Closed or merged PR \"refactor(migrations): fix merge conflict in output migration\" (#58314)"},{"Id":"2606222113","IsPullRequest":false,"CreatedAt":"2024-10-22T19:34:50","Actor":"Binek115","Number":"58312","RawContent":null,"Title":"Pipe instance inside if statement is created even if previous condition evaluates to false","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have a pipe which injects service that has not been provided by the component where pipe is used.\n```typescript\n@Injectable()\nexport class TestService {}\n\n@Pipe({\n  name: 'testPipe',\n  standalone: true,\n})\nexport class TestPipe implements PipeTransform {\n  readonly TestService = inject(TestService);\n  transform(item: any) {\n    return true;\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [TestPipe],\n  template: `@if(false && ('' | testPipe)) { }`,\n})\nexport class App {}`\n```\nIn template I use pipe in `@if` statement: `@if(false && ('' | testPipe)) { }` and I get a `NullInjectorError: No provider for _TestService!` but I think I should not because `false` inside `@if` statement should prevent from creating pipe instance.\nIf I wrap it with another `@if` there is no issue:\n```typescript\n@if(false) {\n  @if('' | testPipe) {\n\n  }\n }\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yqjews?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58312","RelatedDescription":"Closed issue \"Pipe instance inside if statement is created even if previous condition evaluates to false\" (#58312)"},{"Id":"2606250646","IsPullRequest":true,"CreatedAt":"2024-10-22T19:27:56","Actor":"AndrewKushnir","Number":"58313","RawContent":null,"Title":"[Revert] refactor(migrations): support parallel tsurge metadata merging","State":"closed","Body":"This PR reverts PR https://github.com/angular/angular/pull/58280 due to the merge collision, see [this failing CI job](https://github.com/angular/angular/actions/runs/11466324928/job/31906756212).","Url":"https://github.com/angular/angular/pull/58313","RelatedDescription":"Closed or merged PR \"[Revert] refactor(migrations): support parallel tsurge metadata merging\" (#58313)"},{"Id":"2606040553","IsPullRequest":true,"CreatedAt":"2024-10-22T18:30:41","Actor":"thePunderWoman","Number":"58309","RawContent":null,"Title":"ci: temporarily disable adev tests","State":"closed","Body":"This disables adev tests until the next release. This is due to #54858.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] CI related changes\r\n\r\n\r\nIssue Number: #54858\r\n\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/58309","RelatedDescription":"Closed or merged PR \"ci: temporarily disable adev tests\" (#58309)"},{"Id":"2606001275","IsPullRequest":true,"CreatedAt":"2024-10-22T18:27:53","Actor":"thePunderWoman","Number":"58308","RawContent":null,"Title":"refactor(core): annotate incremental hydration as dev preview","State":"closed","Body":"This adds the proper developer preview annotation for the withIncrementalHydration api.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [x] Documentation content changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/58308","RelatedDescription":"Closed or merged PR \"refactor(core): annotate incremental hydration as dev preview\" (#58308)"},{"Id":"2606114080","IsPullRequest":true,"CreatedAt":"2024-10-22T17:55:19","Actor":"sheikalthaf","Number":"58311","RawContent":null,"Title":"feat(core): Add cleanup functions to afterRender and afterNextRender …","State":"open","Body":"…functions\r\n\r\nAdding cleanup functions to afterRender and afterNextRender functions will simplify the cleanup logic instead of depending on the OnDestroy.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nthere is no cleanup callback is provided for `afterRender` and `afterNextRender` functions.\r\n\r\nIssue Number: #58225 \r\n\r\n\r\n## What is the new behavior?\r\nAdded cleanup callback to `afterRender` and `afterNextRender` functions.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58311","RelatedDescription":"Open PR \"feat(core): Add cleanup functions to afterRender and afterNextRender …\" (#58311)"},{"Id":"2606079752","IsPullRequest":true,"CreatedAt":"2024-10-22T17:38:54","Actor":"sheikalthaf","Number":"58310","RawContent":null,"Title":"refactor(devtools): use signal apis in split component","State":"open","Body":"Refactoring the split component to use signal input and queries and simplifying the code using host property\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58310","RelatedDescription":"Open PR \"refactor(devtools): use signal apis in split component\" (#58310)"},{"Id":"2605997410","IsPullRequest":false,"CreatedAt":"2024-10-22T16:56:11","Actor":"DmitryEfimenko","Number":"58307","RawContent":null,"Title":"docs: Feature roadmap","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nIt's often that I ask myself when a particular feature was introduced/released to the Angular framework. Just searching for it on Angular docs website or Googling usually does not provide an immediate answer.\n\n### Proposed solution\n\n* Create a page similar to what can be seen here: https://www.angular.courses/caniuse. This would provide a good summary page.\n* The dedicated API page for the new feature should have the information about dates as well - when it was an experiment, when it was released to stable...\n* The experiment should have links to the relevant RFC if available\n* Stable feature should have a link to the relevant API docs page\n\n![Image](https://github.com/user-attachments/assets/97a7942e-2542-4d0b-8656-9b0fa238125a)\n\n\n### Alternatives considered\n\nnone","Url":"https://github.com/angular/angular/issues/58307","RelatedDescription":"Open issue \"docs: Feature roadmap\" (#58307)"},{"Id":"2605751834","IsPullRequest":true,"CreatedAt":"2024-10-22T16:44:25","Actor":"angular-robot","Number":"58305","RawContent":null,"Title":"build: update actions/cache digest to 6849a64","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | digest | `3624ceb` -> `6849a64` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58305","RelatedDescription":"Closed or merged PR \"build: update actions/cache digest to 6849a64\" (#58305)"},{"Id":"2603486974","IsPullRequest":true,"CreatedAt":"2024-10-22T16:43:45","Actor":"thePunderWoman","Number":"58290","RawContent":null,"Title":"refactor(core): incremental hydration cleanup","State":"closed","Body":"This cleans up a few bits of implementation in the incremental hydration code.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/58290","RelatedDescription":"Closed or merged PR \"refactor(core): incremental hydration cleanup\" (#58290)"},{"Id":"2603690865","IsPullRequest":false,"CreatedAt":"2024-10-22T15:59:23","Actor":"aguskov1987","Number":"58292","RawContent":null,"Title":"Failure when building Angular/core","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen trying to build Angular from source (on Windows) the following error is encountered. Looks like an import cannot get resolved.\n\n```\nC:\\Path\\to\\Angular\\angular>yarn build\nyarn run v1.22.19\n$ tsx --tsconfig scripts/tsconfig.json scripts/build/build-packages-dist.mts\n######################################\n  Building release packages...\n######################################\nLoading: 0 packages loaded\n//packages/animations:npm_package\n//packages/common:npm_package\n//packages/compiler:npm_package\n//packages/compiler-cli:npm_package\n//packages/core:npm_package\n//packages/elements:npm_package\n//packages/forms:npm_package\n//packages/language-service:npm_package\n//packages/localize:npm_package\n//packages/platform-browser:npm_package\n//packages/platform-browser-dynamic:npm_package\n//packages/platform-server:npm_package\n//packages/router:npm_package\n//packages/service-worker:npm_package\n//packages/upgrade:npm_package\nC:/users/andrey/_bazel_andrey/4pgcrmzy/execroot/angular/bazel-out/x64_windows-fastbuild/bin\nINFO: Analyzed 16 targets (1 packages loaded, 2007 targets configured).\nINFO: Found 16 targets...\nERROR: C:/Path/to/Angular/angular/packages/core/BUILD.bazel:51:11: ng_package: Rollup fesm2022 (packages/core/core.mjs) failed: (Exit 1): rollup.bat failed: error executing command bazel-out\\x64_windows-opt-exec-2B5CBBC6\\bin\\packages\\bazel\\src\\ng_package\\rollup\\rollup.bat --input bazel-out/x64_windows-fastbuild-ST-2e5f3376adb5/bin/packages/core/core.mjs --config ... (remaining 9 arguments skipped)\n(!) Plugin node-resolve: node-resolve: The `customResolveOptions.moduleDirectory` option has been deprecated. Use `moduleDirectories`, which must be an array.\n[!] Error: 'producerMarkClean' is not exported by external/npm/node_modules/@angular/core/fesm2022/primitives/signals.mjs, imported by bazel-out/x64_windows-fastbuild-ST-2e5f3376adb5/bin/packages/core/src/render3/reactivity/linked_signal.mjs\nhttps://rollupjs.org/guide/en/#error-name-is-not-exported-by-module\nbazel-out/x64_windows-fastbuild-ST-2e5f3376adb5/bin/packages/core/src/render3/reactivity/linked_signal.mjs (9:9)\n 7:  */\n 8: import { signalAsReadonlyFn } from './signal';\n 9: import { producerMarkClean, SIGNAL, signalSetFn, signalUpdateFn, producerUpdateValueVersion, REACTIVE_NODE, defaultEquals, consumerBeforeComputation, consumerAfterComputation, producerAccessed, } from '@angular/core/primitives/signals';\n             ^\n10: import { performanceMarkFeature } from '../../util/performance';\n11: const identityFn = (v) => v;\nError: 'producerMarkClean' is not exported by external/npm/node_modules/@angular/core/fesm2022/primitives/signals.mjs, imported by bazel-out/x64_windows-fastbuild-ST-2e5f3376adb5/bin/packages/core/src/render3/reactivity/linked_signal.mjs\n    at error (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:198:30)\n    at Module.error (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:12560:16)\n    at Module.traceVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:12919:29)\n    at ModuleScope.findVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:11571:39)\n    at FunctionScope.findVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:6503:38)\n    at ChildScope.findVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:6503:38)\n    at ReturnValueScope.findVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:6503:38)\n    at ChildScope.findVariable (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:6503:38)\n    at Identifier.bind (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:7570:40)\n    at CallExpression.bind (C:\\_bazel\\4pgcrmzy\\execroot\\angular\\node_modules\\rollup\\dist\\shared\\rollup.js:5400:23)\n\nERROR: C:/Path/to/Angular/angular/packages/core/BUILD.bazel:51:11 Angular Packaging: building npm package //packages/core:npm_package failed: (Exit 1): rollup.bat failed: error executing command bazel-out\\x64_windows-opt-exec-2B5CBBC6\\bin\\packages\\bazel\\src\\ng_package\\rollup\\rollup.bat --input bazel-out/x64_windows-fastbuild-ST-2e5f3376adb5/bin/packages/core/core.mjs --config ... (remaining 9 arguments skipped)\nINFO: Elapsed time: 35.487s, Critical Path: 28.88s\nINFO: 40 processes: 23 internal, 6 local, 11 worker.\nFAILED: Build did NOT complete successfully\nnode:internal/errors:984\n  const err = new Error(message);\n              ^\n\nError: Command failed: yarn -s bazel build --config=snapshot-build //packages/animations:npm_package //packages/common:npm_package //packages/compiler:npm_package //packages/compiler-cli:npm_package //packages/core:npm_package //packages/elements:npm_package //packages/forms:npm_package //packages/language-service:npm_package //packages/localize:npm_package //packages/platform-browser:npm_package //packages/platform-browser-dynamic:npm_package //packages/platform-server:npm_package //packages/router:npm_package //packages/service-worker:npm_package //packages/upgrade:npm_package //packages/bazel:npm_package\n    at genericNodeError (node:internal/errors:984:15)\n    at wrappedFn (node:internal/errors:538:14)\n    at checkExecSyncError (node:child_process:891:11)\n    at execSync (node:child_process:963:15)\n    at exec (C:\\Path\\to\\Angular\\angular\\scripts\\build\\package-builder.mts:135:18)\n    at buildReleasePackages (C:\\Path\\to\\Angular\\angular\\scripts\\build\\package-builder.mts:89:3)\n    at performDefaultSnapshotBuild (C:\\Path\\to\\Angular\\angular\\scripts\\build\\package-builder.mts:45:10)\n    at <anonymous> (C:\\Path\\to\\Angular\\angular\\scripts\\build\\build-packages-dist.mts:17:1)\n    at ModuleJob.run (node:internal/modules/esm/module_job:234:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:473:24) {\n  status: 1,\n  signal: null,\n  output: [ null, null, null ],\n  pid: 9528,\n  stdout: null,\n  stderr: null\n}\n\nNode.js v20.18.0\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n```\n\n It is rather strange since the producerMarkClean function is exported in the index.ts of core/primitives/signals ¯\\(°_o)/¯\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-next.11\nNode: 20.18.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 19.0.0-next.5\n... animations, core\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-next.11\n@angular-devkit/architect-cli   0.1900.0-next.11\n@angular-devkit/build-angular   19.0.0-next.11\n@angular-devkit/core            19.0.0-next.11\n@angular-devkit/schematics      19.0.0-next.11\n@angular/build                  19.0.0-next.11\n@angular/build-tooling          0.0.0-55c0cd826f5ad56c3bccc7272313c75467543f3f\n@angular/cdk                    19.0.0-next.4\n@angular/cli                    19.0.0-next.11\n@angular/material               19.0.0-next.4\n@angular/ng-dev                 <error>\n@angular/ssr                    19.0.0-next.11\n@schematics/angular             19.0.0-next.11\nrxjs                            7.8.1\ntypescript                      5.6.2\n\n### Anything else?\n\nBuilding Angular \"19.0.0-next.10\"\nbazel 5.0.0","Url":"https://github.com/angular/angular/issues/58292","RelatedDescription":"Closed issue \"Failure when building Angular/core\" (#58292)"},{"Id":"2605872069","IsPullRequest":true,"CreatedAt":"2024-10-22T15:58:26","Actor":"arturovt","Number":"58306","RawContent":null,"Title":"fix(core): cleanup `rxResource` abort listener","State":"open","Body":"This commit updates the `rxResource` functionality. Currently, we're attaching an `abort` event listener to the signal (when provided) and never removing it. To ensure proper resource management, we should remove event listeners when they are no longer needed, allowing objects to be garbage collected. In Firefox, saving a heap snapshot and analyzing it with `fxsnapshot` reveals that querying `AbortSignal` prints a \"CaptureMap\" with a list of \"lambdas\", indicating that the signal is not garbage collected due to the event listener's lambda function.","Url":"https://github.com/angular/angular/pull/58306","RelatedDescription":"Open PR \"fix(core): cleanup `rxResource` abort listener\" (#58306)"},{"Id":"2605738192","IsPullRequest":false,"CreatedAt":"2024-10-22T15:19:00","Actor":"OlehPetrykUA","Number":"58303","RawContent":null,"Title":"@angular/elements: Signal `input` with `alias` option is not working for custom elements","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen declaring an `input` with `alias` inside of a component and use `createCustomElement` of that component.\n\nex:\n```\nreadonly name = input<string>(\n  'name',\n { alias: 'customName' }\n);\n```\n\nOn the actual web-component there are no such attribute as `customName`, only `name` will exist and work.\n\nLooks like that `ComponentFactory` at method `resolveComponentFactory which returns inputs array with propName of each input is not actually aliased name.\n\nhttps://github.com/angular/angular/blob/main/packages/elements/src/component-factory-strategy.ts#L46\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-next.12\nNode: 20.15.1\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 19.0.0-next.10\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-next.12\n@angular-devkit/build-angular   19.0.0-next.12\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cdk                    19.0.0-next.9\n@angular/cli                    19.0.0-next.12\n@angular/material               19.0.0-next.9\n@schematics/angular             19.0.0-next.12\nng-packagr                      19.0.0-next.6\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58303","RelatedDescription":"Closed issue \"@angular/elements: Signal `input` with `alias` option is not working for custom elements\" (#58303)"},{"Id":"2605743452","IsPullRequest":false,"CreatedAt":"2024-10-22T15:08:19","Actor":"hafnerpw","Number":"58304","RawContent":null,"Title":"Allow reactive values for the disabled state of FormControls","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nWhen initializing new FormControls, we currently can only pass a value and an optional disabled state.\n\nHowever, when the disabled state depends on other reactive flows, we need to manually implement a change listener, like this:\n\n```typescript\n  someControl = new FormControl({ value: '', disabled: false });\n\n  constructor() {\n    this.shouldBeDisabled$.pipe(takeUntilDestroyed()).subscribe((disabled) => {\n      if(disabled){\n        this.someControl.disable();\n      }else{\n        this.someControl.enable();\n      }\n    });\n  }\n```\n\nWhile this approach is valid, it feels a bit clunky nowadays—especially with the introduction of newer reactive concepts like signals.\n\nIt would feel more intuitive if the disabled state could also accept a signal or observable of type `boolean`, allowing it to automatically re-evaluate whenever the value changes. While I'm unsure if observables would be as intuitive in this context, I believe using signals would be much more readable.\n\nFor example, we could write something like this:\n\n```typescript\n  someControl = new FormControl({ value: '', disabled: toSignal(this.shouldBeDisabled$) });\n```\n\nThis approach would also synergize well with template-driven forms, where we can already pass a signal to the disabled state of a form control. Having the same capability in reactive forms would create a more consistent developer experience for both form implementation approaches, template-driven and reactive.\n\n### Proposed solution\n\nallow disabled property to accept signals and/or observables\n\n### Alternatives considered\n\nManually subscriptions","Url":"https://github.com/angular/angular/issues/58304","RelatedDescription":"Open issue \"Allow reactive values for the disabled state of FormControls\" (#58304)"},{"Id":"2605703409","IsPullRequest":false,"CreatedAt":"2024-10-22T14:54:19","Actor":"OlehPetrykUA","Number":"58302","RawContent":null,"Title":"@angualr/elements: Signal `input` alias option is not working for custom elements","State":"open","Body":"When declaring an input with alias inside of a component and use `createCustomElement` of that component.\nex.\n\n```\nreadonly name = input<string>(\n    'name',\n    { alias: 'customName' },\n  );\n```\n\nOn the actual web-component there are no such attribute as `customName`, only `name` will exist and work.\n\n\nLooks  like that `ComponentFactory`  at method `resolveComponentFactory` which returns `inputs` array with `propName` of each input is not actually aliased name.\n\nhttps://github.com/angular/angular/blob/main/packages/elements/src/component-factory-strategy.ts#L46","Url":"https://github.com/angular/angular/issues/58302","RelatedDescription":"Open issue \"@angualr/elements: Signal `input` alias option is not working for custom elements\" (#58302)"},{"Id":"2604243011","IsPullRequest":true,"CreatedAt":"2024-10-22T14:42:24","Actor":"JeanMeche","Number":"58294","RawContent":null,"Title":"docs(docs-infra): fix CLI commands","State":"closed","Body":"With this commit the CLI doc will display the correct arguments for the subcommands\r\n\r\nfixes #58279\r\n","Url":"https://github.com/angular/angular/pull/58294","RelatedDescription":"Closed or merged PR \"docs(docs-infra): fix CLI commands\" (#58294)"},{"Id":"2605217110","IsPullRequest":true,"CreatedAt":"2024-10-22T14:41:44","Actor":"pkozlowski-opensource","Number":"58299","RawContent":null,"Title":"Output ng generate","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58299","RelatedDescription":"Closed or merged PR \"Output ng generate\" (#58299)"},{"Id":"2605306566","IsPullRequest":true,"CreatedAt":"2024-10-22T12:59:48","Actor":"pkozlowski-opensource","Number":"58301","RawContent":null,"Title":"Output ng generate test ci","State":"closed","Body":"Testing CI, nothing to see here... ","Url":"https://github.com/angular/angular/pull/58301","RelatedDescription":"Closed or merged PR \"Output ng generate test ci\" (#58301)"},{"Id":"2605221902","IsPullRequest":false,"CreatedAt":"2024-10-22T11:49:50","Actor":"sfd-mhrana","Number":"58300","RawContent":null,"Title":"Same FormControl of a FromGroup use on Multiple Input and auto sync updated value.","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nI want to use same from control of my angular formGroup on multiple input. and when i just change one of any input value it change all of input value of same formcontrol. \n\n*CODE*\n\n  myForm!: FormGroup;\n  constructor(private fb: FormBuilder,\n  ) { }\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      sharedControl: ['', Validators.required] // Replace with your desired validation\n    });\n  }\n\n\n<form [formGroup]=\"myForm\">\n    <div class=\"form-group\">\n        <label for=\"input1\">Input 1:</label>\n        <input type=\"text\" class=\"form-control\" id=\"input1\" formControlName=\"sharedControl\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"input2\">Input 2:</label>\n        <input type=\"text\" class=\"form-control\" id=\"input2\" formControlName=\"sharedControl\">\n    </div>\n    <button type=\"submit\" [disabled]=\"myForm.invalid\">Submit</button>\n</form>\n\n\nhere when i change of input1 value input2 value need to be also change on show on UI. it auto sync.\n\n### Proposed solution\n\nPatch all of same control value same.\n\n### Alternatives considered\n\n..","Url":"https://github.com/angular/angular/issues/58300","RelatedDescription":"Open issue \"Same FormControl of a FromGroup use on Multiple Input and auto sync updated value.\" (#58300)"},{"Id":"2604987928","IsPullRequest":true,"CreatedAt":"2024-10-22T11:48:35","Actor":"pkozlowski-opensource","Number":"58298","RawContent":null,"Title":"Output ng generate","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58298","RelatedDescription":"Closed or merged PR \"Output ng generate\" (#58298)"},{"Id":"2604635144","IsPullRequest":true,"CreatedAt":"2024-10-22T08:10:47","Actor":"alan-agius4","Number":"58297","RawContent":null,"Title":"Improve tree shakebility","State":"open","Body":"**refactor(core): eliminate top-level property access in `ɵɵNgOnChangesFeature`**\r\n\r\nTop-level property access was causing dead code elimination (DCE) and tree-shaking issues. This commit modifies `ɵɵNgOnChangesFeature` to prevent these bailouts.\r\n\r\n\r\n**refactor(core): make AfterRenderImpl tree-shakable by moving PHASES**\r\n\r\nMarked the PHASES constant within AfterRenderImpl as @__PURE__ to enable better tree-shaking during bundling. This optimization ensures that unused code is more effectively eliminated, improving overall bundle size and performance.\r\n\r\n**refactor: add `@__PURE__` next to `@pureOrBreakMyCode` for improved bundler compatibility**\r\n\r\nAdded the `@__PURE__` annotation alongside `@pureOrBreakMyCode` to improve compatibility with third-party bundlers. This refactor follows optimization best practices, ensuring broader support across different tools, as `@pureOrBreakMyCode` was only supported by Closure Compiler.\r\n\r\n**build: remove usages of `useDefineForClassFields: false`**\r\n\r\nWhen setting `\"useDefineForClassFields\": false`, static fields are compiled within a block that relies on the `this` context. This output makes it more difficult for bundlers to treeshake and eliminate unused code.\r\n\r\n\r\n----\r\n\r\n**Before** \r\nmain.ts\r\n```ts\r\nimport { InjectionToken } from \"@angular/core\";\r\nconsole.log(new InjectionToken('foo'));\r\n```\r\n\r\n\r\n```\r\nInitial chunk files   | Names         |  Raw size | Estimated transfer size\r\nmain-EGPQ2PJY.js      | main          |  77.50 kB |                15.57 kB\r\n\r\n```\r\n**Now**\r\n```\r\nInitial chunk files   | Names         | Raw size | Estimated transfer size\r\nmain-JLPNM4W5.js      | main          |  3.03 kB |                 1.28 kB\r\n```\r\n","Url":"https://github.com/angular/angular/pull/58297","RelatedDescription":"Open PR \"Improve tree shakebility\" (#58297)"},{"Id":"2604487758","IsPullRequest":false,"CreatedAt":"2024-10-22T07:10:03","Actor":"henry-alakazhang","Number":"58295","RawContent":null,"Title":"Client-side hydration renders content before the app is stable","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen client hydration is enabled, I expected the app to use the SSR view until it's stable, then switch over to the client-rendered view. If there are pending network requests or anything else blocking stabilisation on the client side, it shouldn't show any loading states or similar. Instead, any loading states render on top of the SSR view, which causes flickers on the page.\n\nThis is consistently replicable when making any network requests `withNoHttpTransferCache()`, or when making uncacheable requests (eg. POST requests before they were supported).\n\nIs this the expected behaviour? It is possible to work around via making sure everything does get cached properly, but it seemed a bit strange. I was used to the way (pre-hydration) Preboot only replaced the page after everything loaded and this has resulted in a behaviour change under some circumstances.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/henry-alakazhang/hydration-stable-flicker\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.9\nNode: 18.20.3\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@angular/ssr                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58295","RelatedDescription":"Open issue \"Client-side hydration renders content before the app is stable\" (#58295)"},{"Id":"2604113697","IsPullRequest":false,"CreatedAt":"2024-10-22T05:04:44","Actor":"AbdallahR99","Number":"58293","RawContent":null,"Title":"[Angular Proxy] WebSocket Connection Doesn't Even Last 5min","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nwhen reverse a websocket connection it doesn't last few minutes then disconnect, how to set the websocket timeout?\nin the ASP.NET when I do a reverse proxy for a websocket then try to extend its connection duration I got the `ActivityTimeout` option\n\nwhat's equal to `ActivityTimeout` here? \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58293","RelatedDescription":"Closed issue \"[Angular Proxy] WebSocket Connection Doesn't Even Last 5min\" (#58293)"},{"Id":"2603592746","IsPullRequest":true,"CreatedAt":"2024-10-21T20:30:09","Actor":"jkrems","Number":"58291","RawContent":null,"Title":"test: use application builder for adev karma tests","State":"open","Body":"The tests are now no longer bundled using webpack but instead are using the new application builder (esbuild etc.).\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58291","RelatedDescription":"Open PR \"test: use application builder for adev karma tests\" (#58291)"},{"Id":"2603400715","IsPullRequest":true,"CreatedAt":"2024-10-21T18:54:21","Actor":"vladboisa","Number":"58289","RawContent":null,"Title":"docs(docs-infra): changed default type to object","State":"open","Body":"By API returned type is object, not any. Also rephrase docs and TIP\r\nFixes #58273\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #58273 \r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58289","RelatedDescription":"Open PR \"docs(docs-infra): changed default type to object\" (#58289)"},{"Id":"2603332955","IsPullRequest":true,"CreatedAt":"2024-10-21T18:23:41","Actor":"JeanMeche","Number":"58288","RawContent":null,"Title":"refactor(core): remove the standalone feature","State":"open","Body":"By removing the standalone feature, we reduce the amount of code generated for components but at the cost of including the `StandaloneService` in the main bundle even if no standalone components are included in it.\r\n\r\nHad to move some functions due to cyclic imports. Ideally, I would have gone with dropping the `getStandaloneInjector` method entirely, but we can't access it directly in the `ComponentFactory` because of the said cyclic import. \r\n","Url":"https://github.com/angular/angular/pull/58288","RelatedDescription":"Open PR \"refactor(core): remove the standalone feature\" (#58288)"},{"Id":"2603249461","IsPullRequest":true,"CreatedAt":"2024-10-21T17:42:28","Actor":"danielpayetdev","Number":"58287","RawContent":null,"Title":"fix(localize): Adding  arb format to the list of valid formats in the…","State":"open","Body":"… localization extractor cli\r\n\r\nAlthough the ARB format is supported, it's missing from the command's list of options.\r\n\r\nFix #58286\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #58286\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSupport arb format in extract localize cli\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n","Url":"https://github.com/angular/angular/pull/58287","RelatedDescription":"Open PR \"fix(localize): Adding  arb format to the list of valid formats in the…\" (#58287)"},{"Id":"2603234723","IsPullRequest":false,"CreatedAt":"2024-10-21T17:34:26","Actor":"danielpayetdev","Number":"58286","RawContent":null,"Title":"arb format is missing from cli option of extract tool","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlocalize\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAlthough the ARB format is supported, it's missing from the command's list of options.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-dzcuyr\n\n### Please provide the exception or error you saw\n\n=> npm run extract \n\nInvalid values:\n  Argument: f, Given: \"arb\", Choices: \"xmb\", \"xlf\", \"xlif\", \"xliff\", \"xlf2\", \"xlif2\", \"xliff2\", \"json\", \"legacy-migrate\"\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58286","RelatedDescription":"Open issue \"arb format is missing from cli option of extract tool\" (#58286)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2595942424","IsPullRequest":true,"CreatedAt":"2024-10-22T22:47:23","Actor":"aaronshim","Number":"28663","RawContent":null,"Title":"feat(@angular/build): Auto-CSP support as a part of angular.json schema","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [X] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThere are no angular.json configurations to add the auto-csp to the index.html transformation.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThere are angular.json configurations to add the auto-csp to the index.html transformation.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\n\r\nThis PR also contains content from https://github.com/angular/angular-cli/pull/28639. Please ignore the files changed in that previous PR and instead on\r\n\r\n- packages/angular/build/src/utils/index-file/index-html-generator.ts\r\n- packages/angular/build/src/tools/esbuild/index-html-generator.ts\r\n- packages/angular/build/src/builders/application/schema.json\r\n- packages/angular/build/src/builders/application/options.ts","Url":"https://github.com/angular/angular-cli/pull/28663","RelatedDescription":"Closed or merged PR \"feat(@angular/build): Auto-CSP support as a part of angular.json schema\" (#28663)"},{"Id":"2606587953","IsPullRequest":false,"CreatedAt":"2024-10-22T21:45:53","Actor":"dapperdandev","Number":"28685","RawContent":null,"Title":"Add reporters option to @angular-devkit/build-angular:jest schema","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nCurrently, there is no way to specify jest reporters or extend the jest config.\n\nhttps://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/jest/schema.json\n\n\n### Describe the solution you'd like\n\nAdd reporters to the schema to make it possible to use different jest reporters.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28685","RelatedDescription":"Open issue \"Add reporters option to @angular-devkit/build-angular:jest schema\" (#28685)"},{"Id":"2606112798","IsPullRequest":false,"CreatedAt":"2024-10-22T17:54:49","Actor":"dominicbachmann","Number":"28684","RawContent":null,"Title":"Esbuild Builders behave differently than Webpack Builders with .js fileReplacements","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSwitching from a Webpack based builder to an Esbuild based builder breaks `.js` fileReplacements. Esbuild based builders ignore the fileReplacements **(without Error)** when the allowJs flag in tsconfig compilerOptions is false or not set.\n\n### Minimal Reproduction\n\n1. Add a fileReplacement in angular.json which replaces a file with a `.js` file.\n2. Build the project with a Webpack based builder.\n3. See that the file was replaced properly.\n4. Build the project with an Esbuild based builder.\n5. See that the file was not replaced.\n6. Issue can be resolved by setting `compilerOptions.allowJs` to `true` in tsconfig.\n\n---\n\n[Repro Repository](https://github.com/dominicbachmann/ng-fileReplacements-repro)\n\nIssue occurs with `ng build` and `ng serve`.\n\nWhen you build both projects you will see that the webpack builder output chunk contains `{foo: \"bar\"}` while the esbuild builder output chunks exports an empty object.\n\nIssue can also be observed when serving both applications and comparing the log in the console.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.9\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28684","RelatedDescription":"Open issue \"Esbuild Builders behave differently than Webpack Builders with .js fileReplacements\" (#28684)"},{"Id":"2604766781","IsPullRequest":true,"CreatedAt":"2024-10-22T17:18:12","Actor":"alan-agius4","Number":"28682","RawContent":null,"Title":"refactor: remove workarounds for Safari 14 and 15","State":"closed","Body":"\r\n\r\nBoth of these versions are no longer supported by Angular and thus these workers are no longer required.","Url":"https://github.com/angular/angular-cli/pull/28682","RelatedDescription":"Closed or merged PR \"refactor: remove workarounds for Safari 14 and 15\" (#28682)"},{"Id":"2601601072","IsPullRequest":true,"CreatedAt":"2024-10-22T16:59:25","Actor":"angular-robot","Number":"28675","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28675","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#28675)"},{"Id":"2605922063","IsPullRequest":false,"CreatedAt":"2024-10-22T16:22:52","Actor":"json-derulo","Number":"28683","RawContent":null,"Title":"ng build fails with: An error occurred while extracting routes.","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0-next.9\n\n### Description\n\nWhen running `ng build` on a freshly generated Angular 19 prerelease project, an error is thrown.\n\n### Minimal Reproduction\n\n- Run `npx @angular/cli@next new` and enable SSR\n- Run `ng build`\n\n### Exception or Error\n\n```\n✘ [ERROR] An error occurred while extracting routes.\n\nError: No handler function exported from /projects/ng19-test-proj/node_modules/@angular/build/src/utils/server-rendering/routes-extractor-worker.js\n    at /projects/ng19-test-proj/node_modules/piscina/dist/worker.js:142:23\n```\n\n### Your Environment\n\nAngular CLI: 19.0.0-next.12\nNode: 20.18.0\nPackage Manager: npm 10.9.0\nOS: darwin x64\n\nAngular: 19.0.0-next.10\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-next.12\n@angular-devkit/build-angular   19.0.0-next.12\n@angular-devkit/core            19.0.0-next.12\n@angular-devkit/schematics      19.0.0-next.12\n@angular/cli                    19.0.0-next.12\n@angular/ssr                    19.0.0-next.12\n@schematics/angular             19.0.0-next.12\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28683","RelatedDescription":"Open issue \"ng build fails with: An error occurred while extracting routes.\" (#28683)"},{"Id":"2600567482","IsPullRequest":true,"CreatedAt":"2024-10-22T09:53:14","Actor":"clydin","Number":"28672","RawContent":null,"Title":"refactor(@angular/build): add internal support for generating template update functions","State":"closed","Body":"The internal AOT Angular compilation processing can now generate the newly introduced template update functions during development server rebuilds of template only file changes. These template update functions are not yet used but provide the infrastructure to enable template hot replacement in a future change.\r\n","Url":"https://github.com/angular/angular-cli/pull/28672","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add internal support for generating template update functions\" (#28672)"},{"Id":"2603751649","IsPullRequest":true,"CreatedAt":"2024-10-21T22:22:02","Actor":"dgp1130","Number":"28681","RawContent":null,"Title":"Bump version to \"v19.0.0-next.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28681","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.12\" with changelog.\" (#28681)"},{"Id":"2599360649","IsPullRequest":true,"CreatedAt":"2024-10-21T21:38:35","Actor":"angular-robot","Number":"28668","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `713e5a4` -> `d54fe1f` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `b1aab57` -> `99da46a` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `7b37794` -> `822646b` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `09bc973` -> `66aed85` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `d339dc8` -> `ca657e5` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `edc8f3b` -> `3dfaa7d` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `fee6f56` -> `c2052a3` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `1a0f197` -> `fb6e875` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `5c9a05d` -> `7418e63` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `bbe6f81` -> `44a90cd` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `3a6b7d3` -> `7e6bdab` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `7b1abcb` -> `e7a5b34` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `4dbdbd2` -> `45d874d` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `b46986a` -> `3e51eb5` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `e7ffe98` -> `0f87e01` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `5a0e6a8` -> `b1d237b` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28668","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28668)"},{"Id":"2598759690","IsPullRequest":true,"CreatedAt":"2024-10-21T21:32:49","Actor":"angular-robot","Number":"28667","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | patch | [`1.22.0` -> `1.22.1`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.22.0/1.22.1) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.10.0` -> `8.11.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.10.0/8.11.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.10.0` -> `8.11.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.10.0/8.11.0) |\n| [aspect_bazel_lib](https://redirect.github.com/aspect-build/bazel-lib) | http_archive | patch | `v2.9.2` -> `v2.9.3` |\n| [sass](https://redirect.github.com/sass/dart-sass) | dependencies | patch | [`1.80.2` -> `1.80.3`](https://renovatebot.com/diffs/npm/sass/1.80.2/1.80.3) |\n| [sass](https://redirect.github.com/sass/dart-sass) | devDependencies | patch | [`1.80.2` -> `1.80.3`](https://renovatebot.com/diffs/npm/sass/1.80.2/1.80.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.22.1`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.22.1)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.22.0...v1.22.1)\n\nBazelisk v1.22.1 is a patch release with the following changes:\n\n### Bug Fixes & Improvements\n\n-   Multiple instances of Bazelisk can now run concurrently without causing problems ([https://github.com/bazelbuild/bazelisk/pull/616](https://redirect.github.com/bazelbuild/bazelisk/pull/616)).\n\nWe’d like to thank our amazing contributor [@&#8203;sushain97](https://redirect.github.com/sushain97)!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.11.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8110-2024-10-21)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.10.0...v8.11.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[no-unnecessary-type-parameters] add suggestion fixer ([#&#8203;10149](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10149))\n-   **eslint-plugin:** \\[no-base-to-string] add support for catching toLocaleString ([#&#8203;10138](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10138))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[class-literal-property-style] don't report nodes with `override` keyword ([#&#8203;10135](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10135))\n\n##### ❤️  Thank You\n\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   Yukihiro Hasegawa [@&#8203;y-hsgw](https://redirect.github.com/y-hsgw)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.11.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8110-2024-10-21)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.10.0...v8.11.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib (aspect_bazel_lib)</summary>\n\n### [`v2.9.3`](https://redirect.github.com/bazel-contrib/bazel-lib/releases/tag/v2.9.3)\n\n[Compare Source](https://redirect.github.com/aspect-build/bazel-lib/compare/v2.9.2...v2.9.3)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"2.9.3\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your `WORKSPACE` file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"a272d79bb0ac6b6965aa199b1f84333413452e87f043b53eca7f347a23a478e8\",\n    strip_prefix = \"bazel-lib-2.9.3\",\n    url = \"https://github.com/bazel-contrib/bazel-lib/releases/download/v2.9.3/bazel-lib-v2.9.3.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\", \"aspect_bazel_lib_register_toolchains\")\n\n### Required bazel-lib dependencies\n\naspect_bazel_lib_dependencies()\n\n### Register bazel-lib toolchains\n\naspect_bazel_lib_register_toolchains()\n\n```\n\n#### What's Changed\n\n-   fix: go back to bsdtar-prebuilt 3.7.4 but with a release with a working windows binary by [@&#8203;gregmagolan](https://redirect.github.com/gregmagolan) in [https://github.com/bazel-contrib/bazel-lib/pull/969](https://redirect.github.com/bazel-contrib/bazel-lib/pull/969)\n\n**Full Changelog**: https://github.com/bazel-contrib/bazel-lib/compare/v2.9.2...v2.9.3\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.80.3`](https://redirect.github.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1803)\n\n[Compare Source](https://redirect.github.com/sass/dart-sass/compare/1.80.2...1.80.3)\n\n-   Fix a bug where `@import url(\"...\")` would crash in plain CSS files.\n\n-   Improve consistency of how warnings are emitted by different parts of the\n    compiler. This should result in minimal user-visible changes, but different\n    types of warnings should now respond more reliably to flags like `--quiet`,\n    `--verbose`, and `--silence-deprecation`.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28667","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28667)"},{"Id":"2601020318","IsPullRequest":false,"CreatedAt":"2024-10-21T16:39:41","Actor":"TernaryFortress","Number":"28673","RawContent":null,"Title":"Angular application fails to polyfill WebCrypto for libraries that depend on it","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm attempting to use the https://github.com/paulmillr/noble-curves library in my angular project, however whenever I pass my new service into a constructor, I get hit with this error:\n\n```\n✨ Compiled Worker successfully\n✨ Uploading Worker bundle\n✨ Uploading _routes.json\n🌎 Deploying...\n\n✘ [ERROR] Deployment failed!\n\n  Failed to publish your Function. Got error: Uncaught Error: No such module\n  \"crypto\".\n    imported from \"chunk-TUV5YX6S.mjs\"\n```\n\nIt's worth mentioning that I'm using cloudflare's quick-start:\n> npm create cloudflare@latest -- my-angular-app --framework=angular\n\nwhich has some wrangler built-ins\n\n------------\n\nThe problem here, is that noble relies on the WebCrypto getRandomNumbers method, which isn't being exposed. We also should ideally not be using a polyfill, due to the added security vulnerabilities, however those are the only solutions I'm finding online.\n\n-------------\n\nHOWEVER, even without that assumption, attempting to add either \"crypto-browserify\" or \"crypto-js\" to paths in ts.config also fails, and trying to expose crypto as a dependency via \"allowedCommonJsDependencies\": [\"crypto\"]\" in angular.json fails to get results too.\n\n### Minimal Reproduction\n\nhttps://github.com/TernaryFortress/angular_debug\n\nYou can just download my version and npm run serve or deploy it, if you want.\n\n### Exception or Error\n\n  Failed to publish your Function. Got error: Uncaught Error: No such module\n  \"crypto\".\n    imported from \"chunk-TUV5YX6S.mjs\"\n\n### Your Environment\n\n\nAngular CLI: 18.2.7\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: <error>\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7 (cli-only)\n@angular-devkit/build-angular   <error>\n@angular-devkit/core            18.2.7 (cli-only)\n@angular-devkit/schematics      18.2.7 (cli-only)\n@angular/cli                    18.2.7 (cli-only)\n@schematics/angular             18.2.7 (cli-only)\nrxjs                            7.8.1 (cli-only)\ntypescript                      <error>\nzone.js                         <error>\n\n### Anything else relevant?\n\nWe should be trying to explicitly expose the browser's crypto module if possible, as using a polyfill is going to result in vulnerabilities that don't otherwise need to be there.","Url":"https://github.com/angular/angular-cli/issues/28673","RelatedDescription":"Closed issue \"Angular application fails to polyfill WebCrypto for libraries that depend on it\" (#28673)"},{"Id":"2599663320","IsPullRequest":false,"CreatedAt":"2024-10-21T16:37:37","Actor":"zip-fa","Number":"28670","RawContent":null,"Title":"Server code goes to browser bundle on v19","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi. I've noticed some strange code coming to prod build on v19 (+outputMode server + ssr enabled + prerender disabled) during lighthouse test:\n \n1) Some kind of server-only error:\n![Image](https://github.com/user-attachments/assets/cc41f8c4-35dd-4e39-ac60-626e8abef475)\n\n2) Postcss?\n![Image](https://github.com/user-attachments/assets/4e296d51-a6a5-42b3-942b-3683715e149f)\n\n3) Unvenv with a bunch of polyfills for node's fs?\n\n![Image](https://github.com/user-attachments/assets/15c8a45d-d685-4afb-8caa-63ebe8b085c3)\n\n\nCorrect me if i am wrong, but should this all (50+kb unminified) code come to browser build? Is this hydration-related packages?\n\n### Minimal Reproduction\n\nng build\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nlatest v19\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28670","RelatedDescription":"Closed issue \"Server code goes to browser bundle on v19\" (#28670)"},{"Id":"2601747785","IsPullRequest":true,"CreatedAt":"2024-10-21T16:37:36","Actor":"alan-agius4","Number":"28678","RawContent":null,"Title":"refactor(@angular/ssr): export tokens from the `/tokens` entry point","State":"closed","Body":"This commit relocates the DI tokens to a dedicated entry point. This change ensures that we do not depend on tree-shaking to eliminate server code from client bundles.\r\n\r\nCloses #28670","Url":"https://github.com/angular/angular-cli/pull/28678","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): export tokens from the `/tokens` entry point\" (#28678)"},{"Id":"2602457887","IsPullRequest":false,"CreatedAt":"2024-10-21T12:51:30","Actor":"Devvox93","Number":"28680","RawContent":null,"Title":"http-proxy-middleware outdated (Mend vulnerability CVE-2024-21536)","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nbuild-angular 18.2.9 (and earlier versions) reference http-proxy-middleware 3.0.0, which contains a vulnerability.\nThere is a version 3.0.3 that includes a fix.\nFor more info, please see: https://dnb.whitesourcesoftware.com/Wss/WSS.html#!securityVulnerability;id=CVE-2024-21536\n\n### Minimal Reproduction\n\nUse the latest angular packages (build-angular 18.2.9 at the moment of writing) and scan for vulnerabilities with a tool (like Whitesource Mend).\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.9\nNode: 20.16.0\nPackage Manager: npm 10.8.3\nOS: win32 x64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else relevant?\n\nIt's not a major issue, since it's on a dev-dependency, but nevertheless it is flagged as a High impact vulnerability (raising red flags and blocks) in our organization and seems like an easy fix to update in build-angular.","Url":"https://github.com/angular/angular-cli/issues/28680","RelatedDescription":"Open issue \"http-proxy-middleware outdated (Mend vulnerability CVE-2024-21536)\" (#28680)"},{"Id":"2601909662","IsPullRequest":false,"CreatedAt":"2024-10-21T11:43:51","Actor":"stnor","Number":"28679","RawContent":null,"Title":"differences in behavior when using ng:serve, ng:build for cjs default lazy imports","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nIt works the same with webpack\n\n### Description\n\nI have some legacy code that uses default exports that needs to be loaded lazily. For example mathquill/jquery and Blockly. I also load some newer libraries such as mathjax v4 lazily.\n\nWhen using `await import()`the code works using `ng serve`, when using `require()`the code works using `ng build`.\n\nI cannot seem to find a solution/configuration/syntax that both works (the same) for `ng serve`and `ng build`. Right now I cannot use `ng serve`and use `ng build --watch` plus `http-server`.\n\nI know that esbuild doesn't support dynamic imports when you use non-static strings, but these are straightforward imports.\n\nI also read, and tried to understand the texts linked here:\nhttps://stackoverflow.com/questions/75690800/esbuild-cjs-not-working-when-importing-the-default-of-an-hybrid-module\n\n\n### Expected behavior\nI would want `serve`and `build`to have the same behaviour for the same code or if that's not possible, to find one set of syntax and config that works in both.\n\n### Minimal Reproduction\n\nSmall reproduction is here:\nhttps://github.com/stnor/lazy-deps (ng new + some added deps + changes to app.component.ts with outputs information using console.log)\n\n1. run `start`\n\nconsole output:\n```\nawait import type= object\napp.component.ts:23 await import jQueryAwait= {fn: {…}, expando: 'jQuery37106325101847870058', isReady: false, extend: ƒ, error: ƒ, …}\napp.component.ts:26 await import jQueryAwait.module= undefined\napp.component.ts:21 ERROR Error: Dynamic require of \"jquery\" is not supported\n    at main.js:5:9\n    at _AppComponent.<anonymous> (app.component.ts:29:22)\n    at Generator.next (<anonymous>)\n    at fulfilled (main.js:11:24)\n    at _ZoneDelegate.invoke (zone.js:369:28)\n    at Object.onInvoke (core.mjs:7045:25)\n    at _ZoneDelegate.invoke (zone.js:368:34)\n    at ZoneImpl.run (zone.js:111:43)\n    at zone.js:2538:40\n    at _ZoneDelegate.invokeTask (zone.js:402:33)\n```\n\n2. run `watch` + `http-server` \n\nconsole output:\n```\napp.component.ts:22 await import type= object\napp.component.ts:23 await import jQueryAwait= Module {Symbol(Symbol.toStringTag): 'Module'}\napp.component.ts:26 await import jQueryAwait.module= undefined\napp.component.ts:30 using require function ƒ (selector, context) {\n        return new jQuery.fn.init(selector, context);\n      }\n```\n\n### Exception or Error\n\nDynamic require of \"xxx\" is not supported\n\n### Your Environment\n\nAngular CLI: 18.2.9\nNode: 20.11.1\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n    \n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28679","RelatedDescription":"Closed issue \"differences in behavior when using ng:serve, ng:build for cjs default lazy imports\" (#28679)"},{"Id":"2595280206","IsPullRequest":true,"CreatedAt":"2024-10-21T11:21:29","Actor":"clydin","Number":"28659","RawContent":null,"Title":"refactor(@angular/build): create component stylesheet bundler at start of build","State":"closed","Body":"**refactor(@angular/build): move component stylesheet bundler out of compiler plugin**\r\n\r\nThe component stylesheet bundler is now created during the setup of the Angular\r\ncompiler plugin options. This is an initial step to support more fine-grained\r\nrebuild actions with the new component stylesheet development server support.\r\n\r\n**refactor(@angular/build): create component stylesheet bundler at start of build**\r\n\r\nThe component stylesheet bundler is now created at the start of the build\r\nand accessible prior to the bundling actions. This will provide support for\r\ngenerating updated component styles and bypassing all code bundling when using\r\nthe development server and only component styles have been modified.","Url":"https://github.com/angular/angular-cli/pull/28659","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): create component stylesheet bundler at start of build\" (#28659)"},{"Id":"2601700126","IsPullRequest":true,"CreatedAt":"2024-10-21T08:47:39","Actor":"alan-agius4","Number":"28677","RawContent":null,"Title":"refactor(@angular/ssr): remove `useDefineForClassFields`","State":"closed","Body":"This removes `useDefineForClassFields` to leave static field instead of using static blocks.\r\n","Url":"https://github.com/angular/angular-cli/pull/28677","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): remove `useDefineForClassFields`\" (#28677)"},{"Id":"2599598121","IsPullRequest":false,"CreatedAt":"2024-10-21T08:37:54","Actor":"whernebrink","Number":"28669","RawContent":null,"Title":"Logging from proxy event handlers in `proxy.config.js` is not working for `browser-esbuild` or `application` builders","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nWorks with build-angular:browser\n\n### Description\n\nWhen using `build-angular:application` or `build-angular:browser-esbuild`, i'm no longer able to log from within the proxy event handlers such as `onProxyReq`,  `onProxyRes`, `onError` etc. This is working fine for `build-angular:browser`.\n\n### Minimal Reproduction\n\nBelow is how to reproduce with a simple repository i created.\n\n## angular-builder:browser\n\n1. clone project [Github repro repo]( https://github.com/whernebrink/ng-proxy-config-issue) and run `npm i`\n2. `npm start` will use `concurrently` to run a simple express server on `localhost:3000` and then run `ng serve`\n3. Initially, the angular.json uses `build-angular:browser`. A logger that will write to a `logs.txt` file is called from `onProxyReq` and `onProxyRes` in the `proxy.conf.js`, which can be seen after page is loaded.\n\n## angular-builder:browser-esbuild\n\n1. Change the builder on line 14 in `angular.json` to `\"builder\": \"@angular-devkit/build-angular:browser-esbuild\",`\n2. Clear the logs.txt\n3. Run `npm start` again.\n4. Expected result: `logs.txt` to contain logs\n5. Actual result: NO logs\n\n## angular-builder:application\n\n1. Change the builder on line 14 in `angular.json` to `\"builder\": \"@angular-devkit/build-angular:application\",`\n2. Change on line 18: from `\"main\": \"src/main.ts\",` to `\"browser\": \"src/main.ts\",`\n3. Clear the logs.txt\n4. Run `npm start` again.\n5. Expected result: `logs.txt` to contain logs\n6. Actual result: NO logs\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.9\nNode: 18.19.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28669","RelatedDescription":"Closed issue \"Logging from proxy event handlers in `proxy.config.js` is not working for `browser-esbuild` or `application` builders\" (#28669)"},{"Id":"2601525872","IsPullRequest":true,"CreatedAt":"2024-10-21T07:15:13","Actor":"alan-agius4","Number":"28674","RawContent":null,"Title":"fix(@angular/ssr): designate package as side-effect free","State":"closed","Body":"Add `sideEffects` in the `package.json`\r\n","Url":"https://github.com/angular/angular-cli/pull/28674","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): designate package as side-effect free\" (#28674)"},{"Id":"2599688907","IsPullRequest":false,"CreatedAt":"2024-10-20T06:34:20","Actor":"zip-fa","Number":"28671","RawContent":null,"Title":"Feature request: --stats-json for browser-only bundle","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nHi. Currently, --stats-json with application builder generates stats.json file for both server & browser files. Since there are lots of files, it's not possible to determine what end-user will actually download. My proposal is to create separate stats.json file for server and browser chunks or to prefix server chunks somehow (like, server-chunk-xyz.js)\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28671","RelatedDescription":"Closed issue \"Feature request: --stats-json for browser-only bundle\" (#28671)"},{"Id":"2596443343","IsPullRequest":true,"CreatedAt":"2024-10-18T19:54:45","Actor":"angular-robot","Number":"28664","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@discoveryjs/json-ext](https://redirect.github.com/discoveryjs/json-ext) | dependencies | patch | [`0.6.1` -> `0.6.2`](https://renovatebot.com/diffs/npm/@discoveryjs%2fjson-ext/0.6.1/0.6.2) |\n| [@discoveryjs/json-ext](https://redirect.github.com/discoveryjs/json-ext) | devDependencies | patch | [`0.6.1` -> `0.6.2`](https://renovatebot.com/diffs/npm/@discoveryjs%2fjson-ext/0.6.1/0.6.2) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.9.0` -> `8.10.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.9.0/8.10.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.9.0` -> `8.10.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.9.0/8.10.0) |\n| [sass](https://redirect.github.com/sass/dart-sass) | dependencies | patch | [`1.80.1` -> `1.80.2`](https://renovatebot.com/diffs/npm/sass/1.80.1/1.80.2) |\n| [sass](https://redirect.github.com/sass/dart-sass) | devDependencies | patch | [`1.80.1` -> `1.80.2`](https://renovatebot.com/diffs/npm/sass/1.80.1/1.80.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>discoveryjs/json-ext (@&#8203;discoveryjs/json-ext)</summary>\n\n### [`v0.6.2`](https://redirect.github.com/discoveryjs/json-ext/blob/HEAD/CHANGELOG.md#062-2024-10-18)\n\n[Compare Source](https://redirect.github.com/discoveryjs/json-ext/compare/v0.6.1...v0.6.2)\n\n-   Added `spaceBytes` field to `stringifyInfo()` result, which indicates the number of bytes used for white spaces. This allows for estimating size of `JSON.stringify()` result with and without formatting (when `space` option is used) in a single pass instead of two\n-   Fixed `stringifyInfo()` to correctly accept the `space` parameter from options, i.e. `stringifyInfo(data, { space: 2 })`\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.10.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8100-2024-10-17)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.9.0...v8.10.0)\n\n##### 🚀 Features\n\n-   support TypeScript 5.6 ([#&#8203;9972](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/9972))\n\n##### ❤️  Thank You\n\n-   Josh Goldberg ✨\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.10.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8100-2024-10-17)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.9.0...v8.10.0)\n\n##### 🚀 Features\n\n-   support TypeScript 5.6 ([#&#8203;9972](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/9972))\n\n##### ❤️  Thank You\n\n-   Josh Goldberg ✨\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.80.2`](https://redirect.github.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1802)\n\n[Compare Source](https://redirect.github.com/sass/dart-sass/compare/1.80.1...1.80.2)\n\n-   Fix a bug where deprecation warnings were incorrectly emitted for the\n    plain-CSS `invert()` function.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28664","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28664)"},{"Id":"2596443474","IsPullRequest":true,"CreatedAt":"2024-10-18T19:49:54","Actor":"angular-robot","Number":"28665","RawContent":null,"Title":"build: update dependency pacote to v20","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [pacote](https://redirect.github.com/npm/pacote) | dependencies | major | [`19.0.1` -> `20.0.0`](https://renovatebot.com/diffs/npm/pacote/19.0.1/20.0.0) |\n| [pacote](https://redirect.github.com/npm/pacote) | devDependencies | major | [`19.0.1` -> `20.0.0`](https://renovatebot.com/diffs/npm/pacote/19.0.1/20.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/pacote (pacote)</summary>\n\n### [`v20.0.0`](https://redirect.github.com/npm/pacote/blob/HEAD/CHANGELOG.md#2000-2024-10-17)\n\n[Compare Source](https://redirect.github.com/npm/pacote/compare/v19.0.1...v20.0.0)\n\n##### ⚠️ BREAKING CHANGES\n\n-   honors `ignoreScripts` property within options\n\n##### Bug Fixes\n\n-   [`f27af63`](https://redirect.github.com/npm/pacote/commit/f27af6334daa0a51af547f1aef64035d4bebd359) [#&#8203;407](https://redirect.github.com/npm/pacote/pull/407) honors `ignoreScripts` option to prevent `prepare` lifecycle script ([@&#8203;reggi](https://redirect.github.com/reggi))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMjQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjEyNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28665","RelatedDescription":"Closed or merged PR \"build: update dependency pacote to v20\" (#28665)"},{"Id":"2597538101","IsPullRequest":true,"CreatedAt":"2024-10-18T14:18:04","Actor":"clydin","Number":"28666","RawContent":null,"Title":"refactor(@angular/build): add helper types to internal HTML rewriter","State":"closed","Body":"The `StartTag` and `EndTag` types are now also exported along with the `htmlRewritingStream` factory. These types are commonly used with the rewriter and by exporting them reduces the need to manually extract them from the underlying methods.","Url":"https://github.com/angular/angular-cli/pull/28666","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add helper types to internal HTML rewriter\" (#28666)"},{"Id":"2595589360","IsPullRequest":false,"CreatedAt":"2024-10-17T19:41:59","Actor":"pawelfras","Number":"28662","RawContent":null,"Title":"SSR Schematics uses by default API being in developer preview state","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0-next.9\n\n### Description\n\n Schematics for SSR generates new application with the following API that is in dev preview:\n- `AngularNodeAppEngine` with `writeResponseToNodeResponse` and `createNodeRequestHandler` in `server.ts` file\n- server routes in `app.config.server.ts`\n\nCompared to previous functionalities introduced as dev preview, e.g. `provideClientHydration`, the API mentioned above is not optional but used by default.\n\n### Minimal Reproduction\n\n- generate new app by running `npx @angular/cli@19.0.0-next.11 new my-app` (with SSR)\n- verify shape of `server.ts`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 19.0.0-next.11\nNode: 22.8.0\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0-next.11 (cli-only)\n@angular-devkit/core         19.0.0-next.11 (cli-only)\n@angular-devkit/schematics   19.0.0-next.11 (cli-only)\n@schematics/angular          19.0.0-next.11 (cli-only)\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28662","RelatedDescription":"Open issue \"SSR Schematics uses by default API being in developer preview state\" (#28662)"},{"Id":"2595446966","IsPullRequest":false,"CreatedAt":"2024-10-17T18:30:10","Actor":"Lindsor","Number":"28661","RawContent":null,"Title":"Managing large amounts of environment variables","State":"open","Body":"### Command\n\nbuild, serve, test, e2e\n\n### Description\n\nI am reopening https://github.com/angular/angular-cli/issues/4318.\n\nEssentially we need a way to pass environment variables to the build/serve commands. environments.ts file is not a viable solution as you would need to end up with hundreds of environment.ts files depending on all the permutations per environment.\n\nThe solution to https://github.com/angular/angular-cli/issues/4318 also does not address this since you need to know the `define` values when running the command `ng build <define> <define> <define>....`\nWhich means you would have to generate the build command same way as generating the `environment.ts` file.\n\nMost enterprise angular applications I have worked on ends up extending the `webpack.config.js` file adding:\n```javascript\nDefinePlugin({\n  process: {\n    env: {\n      VAR_1: JSON.stringify(process.env.VAR_1),\n      ...\n    }\n  }\n})\n```\n\nThis issue has been brought up for years with the Angular repo but i've never seen a resolution so I want to try to make it as clear as possible.\nWe should support a `dotenv()` style solution where in the code we can use `process.env.VARIABLE`.\nIn the build machine we can either:\n`export VARIABLE=test`\nor have a `.env` file to pick it up.\n\nThis is supported by pretty much every other framework out there so I'm not sure why it wouldn't be possible or hasn't already been implemented.\n\nIf the issue is the angular team doesn't want this behaviour then that is fine but I am looking for a yes/no type answer. If the answer is no the angular team would be able to point to this issue for all future feature requests of this nature.\n\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28661","RelatedDescription":"Open issue \"Managing large amounts of environment variables\" (#28661)"},{"Id":"2595441142","IsPullRequest":false,"CreatedAt":"2024-10-17T15:54:34","Actor":"selangley-wa","Number":"28660","RawContent":null,"Title":"Ability to set environment/configuration values at runtime instead of buildtime","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAngular should provide a common and supported mechanism for the setting of configuration values at runtime (or at least start up time).\n\nCurrently, there are multiple implementations / workarounds for this problem. \n\n**Can we get well-supported mechanism maintained by the Angular Team?**\n\n[Multiple releases using the same, but configurable, Angular Standalone Application build](https://timdeschryver.dev/blog/multiple-releases-using-the-same-but-configurable-angular-standalone-application-build#)\n\n[Compile-time vs. Runtime configuration of your Angular App](https://juri.dev/blog/2018/01/ng-app-runtime-config/)\n\n[Angular, Docker & Nginx: Build once, Deploy anywhere.](https://medium.com/@fabiozuin/build-once-deploy-anywhere-with-angular-17-bf477c49668f)\n\nhttps://www.npmjs.com/package/@ngx-env/builder\n\nhttps://www.npmjs.com/package/angular-runtime-config\n\nhttps://www.npmjs.com/package/@igorissen/angular-env-builder\n\nThere was a request: \n\nhttps://github.com/angular/angular/issues/52994\nability to use/change environment files after build\n\nto allow the setting of environment-level values at runtime instead of build time.  I believe that was mistakenly marked as a duplicate of:\n\nhttps://github.com/angular/angular-cli/issues/4318\nRequest: Method to pass environment variables during build vs file.\n\n\n\n\n### Proposed solution\n\nInclude one of the existing user-created implementations described above in Angular with suitable documentation.\n\nOr, at least, pick one of the above and link to it from the Angular documentation.\n\n### Alternatives considered\n\nUse one of the existing user-created implementations.\n\n\n","Url":"https://github.com/angular/angular-cli/issues/28660","RelatedDescription":"Open issue \"Ability to set environment/configuration values at runtime instead of buildtime\" (#28660)"},{"Id":"2594866428","IsPullRequest":false,"CreatedAt":"2024-10-17T15:08:35","Actor":"stnor","Number":"28657","RawContent":null,"Title":"Stylesheet assets arent loaded from the same source as specified in the --deploy-url","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm trying to migrate to esbuild from webpack + custom-webpack on 18.2.\n\nI want to serve index.html from and make http requests to https:/mydomain/ but I want to load scripts/images/styles from //cdn.local/ which all work fine. But for some reason the url-assets in the stylesheets arent loaded from mycdn...\n\nWith webpack all style resources was loaded from the same host as the base stylesheet and scripts.. With esbuild this seems broken?\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/stnor/cdn-app\n\n### Please provide the exception or error you saw\n\nWhen using `ng build --deploy-url=//cdn.local:4300/`\n\nExpected behaviour:\n`background-image: url(/some/url)` should load relative to the deploy url.\n\nActual:\nUsing base-href?\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.9\nNode: 20.11.1\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28657","RelatedDescription":"Closed issue \"Stylesheet assets arent loaded from the same source as specified in the --deploy-url\" (#28657)"},{"Id":"2594201630","IsPullRequest":false,"CreatedAt":"2024-10-17T14:48:51","Actor":"cexbrayat","Number":"28656","RawContent":null,"Title":"Invalid component stylesheet ID request","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0-next.10\n\n### Description\n\nWhen creating a new project with CLI v19.0.0-next.11, the application doesn't have proper styling and we can see an error `Invalid component stylesheet ID request: ng-c1946662535`\n\n![Image](https://github.com/user-attachments/assets/4b89a775-66a8-4970-99c1-8f1b2dceba15)\n\n\n### Minimal Reproduction\n\nnpx @angular/cli@next new v19-next-11 --defaults --no-routing\nng serve\nOpen the browser ad see the error logged in terminal running `ng serve`\n\n### Exception or Error\n\nInvalid component stylesheet ID request: ng-c1946662535\n\n### Your Environment\n\nAngular CLI: 19.0.0-next.11\nNode: 20.13.1\nPackage Manager: npm 9.7.1\nOS: darwin arm64\n\nAngular: 19.0.0-next.10\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-next.11\n@angular-devkit/build-angular   19.0.0-next.11\n@angular-devkit/core            19.0.0-next.11\n@angular-devkit/schematics      19.0.0-next.11\n@angular/cli                    19.0.0-next.11\n@schematics/angular             19.0.0-next.11\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28656","RelatedDescription":"Closed issue \"Invalid component stylesheet ID request\" (#28656)"},{"Id":"2594893521","IsPullRequest":true,"CreatedAt":"2024-10-17T14:48:50","Actor":"clydin","Number":"28658","RawContent":null,"Title":"fix(@angular/build): relax constraints on external stylesheet component id","State":"closed","Body":"The number of digits in the component identifier that is generated at runtime can vary. The check for a valid identifier now accounts for this case.\r\n\r\nCloses: #28656","Url":"https://github.com/angular/angular-cli/pull/28658","RelatedDescription":"Closed or merged PR \"fix(@angular/build): relax constraints on external stylesheet component id\" (#28658)"},{"Id":"2594165189","IsPullRequest":true,"CreatedAt":"2024-10-17T14:16:16","Actor":"cexbrayat","Number":"28655","RawContent":null,"Title":"refactor(@schematics/angular): spacing fixes after experimental zoneless introduction","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe experimental zoneless feature introduces some spacing issues in the generated code: see https://github.com/cexbrayat/angular-cli-diff/compare/19.0.0-next.10...19.0.0-next.11\r\n\r\n## What is the new behavior?\r\n\r\nTHis hopefully fixes these issues\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28655","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): spacing fixes after experimental zoneless introduction\" (#28655)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2606910717","IsPullRequest":true,"CreatedAt":"2024-10-23T01:47:21","Actor":"amysorto","Number":"29911","RawContent":null,"Title":"feat(material/schematics): Update custom theme schematic to work with light-dark and use theme-overrides mixin","State":"open","Body":"Schematic changes needed to work with #29907 ","Url":"https://github.com/angular/components/pull/29911","RelatedDescription":"Open PR \"feat(material/schematics): Update custom theme schematic to work with light-dark and use theme-overrides mixin\" (#29911)"},{"Id":"2606757383","IsPullRequest":true,"CreatedAt":"2024-10-22T23:40:01","Actor":"essjay05","Number":"29910","RawContent":null,"Title":"fix(material/datepicker): adds aria-describedby value for comparison date range","State":"open","Body":"Updates Angular Components Datepicker component calendar-body to check for a comparison start and comparison end date value and implement aria-describedby id values to correspond with hidden spans that describe a sub range start and a sub range end date if it does exist so that it is read by the screenreader and improves accessibility.\r\n\r\n[Before screencast](https://screencast.googleplex.com/cast/NjQ2NzI5OTM4ODE2MjA0OHxjNmI5OTE4ZS0yOA)\r\n[After screencast](https://screencast.googleplex.com/cast/NTc2MDA3MDQ3NzQxNDQwMHw0Yjc5ZTRjNC05NA)\r\n\r\nFixes b/195600299","Url":"https://github.com/angular/components/pull/29910","RelatedDescription":"Open PR \"fix(material/datepicker): adds aria-describedby value for comparison date range\" (#29910)"},{"Id":"2605965931","IsPullRequest":true,"CreatedAt":"2024-10-22T20:41:28","Actor":"wagnermaciel","Number":"29906","RawContent":null,"Title":"feat(material/core): deprecate the core mixin","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29906","RelatedDescription":"Closed or merged PR \"feat(material/core): deprecate the core mixin\" (#29906)"},{"Id":"2606300481","IsPullRequest":true,"CreatedAt":"2024-10-22T19:29:13","Actor":"andrewseguin","Number":"29909","RawContent":null,"Title":"fix(material/core): correctly identify color input","State":"open","Body":"Color input was checking if a map was provided (primary, tertiary, theme type) but the alternative is a palette, which is also a map. This adds the right nuance.\r\n\r\nTODO: Send a PR that adds types to Sass so this can be more  intuitive","Url":"https://github.com/angular/components/pull/29909","RelatedDescription":"Open PR \"fix(material/core): correctly identify color input\" (#29909)"},{"Id":"2606171777","IsPullRequest":true,"CreatedAt":"2024-10-22T18:26:02","Actor":"andrewseguin","Number":"29908","RawContent":null,"Title":"feat(material/core): switch system prefix from sys to mat-sys","State":"open","Body":"TODO: Write a schematic that makes this backwards-compatible for any existing usages of \"use-system-variables\" by **adding `use-system-prefix: sys` to existing theme code**","Url":"https://github.com/angular/components/pull/29908","RelatedDescription":"Open PR \"feat(material/core): switch system prefix from sys to mat-sys\" (#29908)"},{"Id":"2601644960","IsPullRequest":false,"CreatedAt":"2024-10-22T18:13:47","Actor":"Bogatejc","Number":"29901","RawContent":null,"Title":"bug(google-maps): missing exports for new map marker clusterer types","State":"closed","Body":"**Description**\nIt appears that the recent refactor of the Map Marker Clusterer component introduced the need to specify a Renderer and an Algorithm to customize the map marker clusterer. However, these types (`Renderer`, `Algorithm`, `AlgorithmInput`, `AlgorithmOutput`, `Cluster`, `ClusterStats`) are not currently exported in the public API file (`public-api.ts`), which prevents end users from fully utilizing this new feature.\n\n**Expected Behavior**\nAs an end user, I should be able to import the Renderer and Algorithm types when customizing the marker clusterer functionality.\nThese types should be exported in the `public-api.ts` file to make them available for external use.\n\n**Current Behavior**\nThe `Renderer` and `Algorithm` interfaces are not exported in the public API, so users are unable to implement these classes when attempting to customize the map marker clusterer.\n\n**Steps to Reproduce**\n1. Try to customize the marker clusterer by specifying a custom Renderer or Algorithm.\n2. Attempt to import Renderer or Algorithm from the Angular Google Maps library.\n3. Observe that these types are not available for import, resulting in an error or limitation in customization.\n\n**Fix**\nAdd the following line to `src/google-maps/public-api.ts`\n```JavaScript\nexport {\n  Renderer,\n  Algorithm,\n  AlgorithmInput,\n  AlgorithmOutput,\n  Cluster,\n  ClusterStats,\n} from './map-marker-clusterer/map-marker-clusterer-types';\n```","Url":"https://github.com/angular/components/issues/29901","RelatedDescription":"Closed issue \"bug(google-maps): missing exports for new map marker clusterer types\" (#29901)"},{"Id":"2604540934","IsPullRequest":true,"CreatedAt":"2024-10-22T18:13:46","Actor":"crisbeto","Number":"29905","RawContent":null,"Title":"fix(google-maps): expose all clusterer types","State":"closed","Body":"Exposes all the types related to the clusterer from the `google-maps` endpoint.\r\n\r\nFixes #29901.","Url":"https://github.com/angular/components/pull/29905","RelatedDescription":"Closed or merged PR \"fix(google-maps): expose all clusterer types\" (#29905)"},{"Id":"2606106505","IsPullRequest":true,"CreatedAt":"2024-10-22T17:51:58","Actor":"andrewseguin","Number":"29907","RawContent":null,"Title":"feat(material/core): default to color-scheme theme type","State":"open","Body":"By default, system variable use `light-dark()` CSS values. Users can define `light`, `dark`, or `light dark` (user system) to change between modes.","Url":"https://github.com/angular/components/pull/29907","RelatedDescription":"Open PR \"feat(material/core): default to color-scheme theme type\" (#29907)"},{"Id":"2603525802","IsPullRequest":true,"CreatedAt":"2024-10-21T19:53:13","Actor":"Segdo","Number":"29904","RawContent":null,"Title":"fix(cdk/overlay): flexible overlay screen overflow","State":"open","Body":"This should prevent selects and some other overlays from going out of screen on the y-axis so users can't reach them fully.","Url":"https://github.com/angular/components/pull/29904","RelatedDescription":"Open PR \"fix(cdk/overlay): flexible overlay screen overflow\" (#29904)"},{"Id":"2602890307","IsPullRequest":false,"CreatedAt":"2024-10-21T15:20:37","Actor":"MikaStark","Number":"29903","RawContent":null,"Title":"bug(dialog): low contrast for dialog backdrop in dark theme","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nUsing Material 2 theme\n\n### Description\n\nHi 👋,\n\nWhile using the dark theme, I noticed that opening a dialog creates a readability issue due to the low contrast between the backdrop and the dialog content. Initially, I assumed this was a personal issue, but several team members have reported the same experience.\n\nUpon reviewing the CSS code, I found that the backdrop color is [set to a single value](https://github.com/angular/components/blob/5ad133d07341fa8647e81277e7f1b9f54b15059a/src/cdk/overlay/_index.scss#L9), regardless of the theme. Currently, it's a faded black, which works fine for light themes but leads to poor contrast in dark themes. This reduces the legibility of the dialog content, making it harder to distinguish between the page background and the overlay.\n\nIn previous Material 2 theling API, dark themes used a faded white backdrop, which provided better contrast and enhanced readability.\n\n### Reproduction\n\nSteps to reproduce:\n1. Go to https://m3.material.io/components/dialogs/specs and see that dialog example use a white backdrop on dark mode\n2. Go to https://material.angular.io/components/dialog/overview, select a dark theme and open dialog in any example\n\n\n### Expected Behavior\n\n![Image](https://github.com/user-attachments/assets/0043da65-f28c-4cce-bb3a-dcb6bf0cf517)\n\n\n### Actual Behavior\n\n![Image](https://github.com/user-attachments/assets/5d542b0d-fcc4-423d-85a9-02f6cd61f411)\n\n### Environment\n\n- Angular: 18.2.8\n- CDK/Material: 18.2.8\n- Browser(s): Chrome (latest)\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.10\n","Url":"https://github.com/angular/components/issues/29903","RelatedDescription":"Open issue \"bug(dialog): low contrast for dialog backdrop in dark theme\" (#29903)"},{"Id":"2602336016","IsPullRequest":true,"CreatedAt":"2024-10-21T12:01:04","Actor":"simonkovtyk","Number":"29902","RawContent":null,"Title":"fix(m3-tokens): wrong hue reference","State":"open","Body":"Hi there ...\r\n\r\nRecently, I made some own implementations to support multiple paletts for m3 and I orientated my code at the token generation here.\r\n\r\nI found out, that Angular Material is not using the right tokens for some color rules as described in the [offical Figma Template](https://www.figma.com/community/file/1035203688168086460).\r\n\r\nHere is an overview:\r\n| Token                    | Hue (Angular Material) | Hue (Material spec)                      |\r\n| ------------------------ | ---------------------- | ---------------------------------------- |\r\n| on-primary-container     | Primary 10             | Primary 30                               |\r\n| on-primary-fixed-variant | Primary 30             | Secondary 30 (from primary palette)      |\r\n| on-secondary-container   | Secondary 10           | Secondary 30                             |\r\n| on-tertiary-container    | Tertiary 10            | Tertiary 30                              |","Url":"https://github.com/angular/components/pull/29902","RelatedDescription":"Open PR \"fix(m3-tokens): wrong hue reference\" (#29902)"},{"Id":"2601565253","IsPullRequest":true,"CreatedAt":"2024-10-21T07:02:59","Actor":"crisbeto","Number":"29900","RawContent":null,"Title":"test(multiple): remove CommonModule imports","State":"open","Body":"Removes all our imports of `CommonModule` in tests since it wasn't being used for anything.","Url":"https://github.com/angular/components/pull/29900","RelatedDescription":"Open PR \"test(multiple): remove CommonModule imports\" (#29900)"},{"Id":"2600226929","IsPullRequest":true,"CreatedAt":"2024-10-20T09:29:41","Actor":"crisbeto","Number":"29899","RawContent":null,"Title":"fix(material/tabs): remove IE animation workaround","State":"open","Body":"Removes a workaround that's no longer necessary now that we don't support IE.","Url":"https://github.com/angular/components/pull/29899","RelatedDescription":"Open PR \"fix(material/tabs): remove IE animation workaround\" (#29899)"},{"Id":"2599961927","IsPullRequest":true,"CreatedAt":"2024-10-20T04:21:23","Actor":"K0n4ta13","Number":"29898","RawContent":null,"Title":"docs(google-maps/map-advanced-marker): README.md added","State":"open","Body":"I add the README file.","Url":"https://github.com/angular/components/pull/29898","RelatedDescription":"Open PR \"docs(google-maps/map-advanced-marker): README.md added\" (#29898)"},{"Id":"2598834904","IsPullRequest":true,"CreatedAt":"2024-10-19T16:49:06","Actor":"crisbeto","Number":"29897","RawContent":null,"Title":"fix(material/core): allow optgroup overrides through core-overrides","State":"closed","Body":"Fixes that we were supporting overrides for `mat-option` through the `core-overrides` mixin, but not for `mat-optgroup`.","Url":"https://github.com/angular/components/pull/29897","RelatedDescription":"Closed or merged PR \"fix(material/core): allow optgroup overrides through core-overrides\" (#29897)"},{"Id":"2598115816","IsPullRequest":false,"CreatedAt":"2024-10-19T15:47:26","Actor":"Gopi7a","Number":"29896","RawContent":null,"Title":"standalone missing: stackBlitz example page","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nOnce we click the stackBlitz link from the Angular Material page, showing error like  \"error NG2010: 'imports' is only valid on a component that is standalone.\"\nAll the sample code in the stackBlitz missing **standalone: true** in @Component decorator.\n\nChecked version 18+\n\nAngular Material team, need to fix it.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/run?file=.gitignore\n\nSteps to reproduce:\n1. Go to Angular Material page\n2. Select any components like Stepper, SideNav\n3. Go To Example tab, open any of the StackBlitz link from example.\n4. After loading the module, you will get an error like  \"error NG2010: 'imports' is only valid on a component that is standalone.\"\n\nTo fix it,\nneed to add **standalone: true** in @Component decorator.\n\n\n\n### Expected Behavior\n\nAdd the **standalone: true** in @Component decorator and should run the example code in StackBlitz without an error.\n\n### Actual Behavior\n\nAfter loading the module in StackBlitz example, you will get an error like  \"error NG2010: 'imports' is only valid on a component that is standalone.\"\n\n\n### Environment\n\n- Angular: 18+\n- CDK/Material: Angular Material StackBlitz\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs\n","Url":"https://github.com/angular/components/issues/29896","RelatedDescription":"Closed issue \"standalone missing: stackBlitz example page\" (#29896)"},{"Id":"2597441118","IsPullRequest":true,"CreatedAt":"2024-10-18T13:37:23","Actor":"crisbeto","Number":"29895","RawContent":null,"Title":"Update tokens extraction","State":"closed","Body":"Updates the logic that extracts information about the tokens to work with the latest changes to the `overrides` mixins.","Url":"https://github.com/angular/components/pull/29895","RelatedDescription":"Closed or merged PR \"Update tokens extraction\" (#29895)"},{"Id":"2593074621","IsPullRequest":false,"CreatedAt":"2024-10-18T13:36:54","Actor":"labeled","Number":"29883","RawContent":null,"Title":"bug(matChipInputTokenEnd): Holding Enter Causes many matChipInputTokenEnd events","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm unsure if this is working as intended or if there is a working way to prevent this. If you go to one of your examples in stack blitz https://stackblitz.com/run?file=src%2Fapp%2Fchips-autocomplete-example.ts and add a console log to the add method and then hold down the enter key in the chip input, you'll see the event fire until you let go of the key.\n\nI would expect it to use something like keyup to wait until the key has been released or prevent it from firing so much if a key is stuck or held for longer than a few ms.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Hold Enter Key in chip input\n\n\n### Expected Behavior\n\nOnly one event happens after key is released\n\n### Actual Behavior\n\nInfinite events fire as key is held\n\n### Environment\n\n- Angular: 18\n- CDK/Material: 18\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/29883","RelatedDescription":"Closed issue \"bug(matChipInputTokenEnd): Holding Enter Causes many matChipInputTokenEnd events\" (#29883)"},{"Id":"2596648141","IsPullRequest":true,"CreatedAt":"2024-10-18T13:36:53","Actor":"crisbeto","Number":"29894","RawContent":null,"Title":"fix(material/chips): emitting end event multiple times when holding down key","State":"closed","Body":"Fixes that that the chip input was emitting the `matChipEnd` event while the user is holding down the separator key.\r\n\r\nFixes #29883.","Url":"https://github.com/angular/components/pull/29894","RelatedDescription":"Closed or merged PR \"fix(material/chips): emitting end event multiple times when holding down key\" (#29894)"},{"Id":"2595298638","IsPullRequest":true,"CreatedAt":"2024-10-18T06:58:39","Actor":"andrewseguin","Number":"29891","RawContent":null,"Title":"docs: use new components stackblitz issue starter","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29891","RelatedDescription":"Closed or merged PR \"docs: use new components stackblitz issue starter\" (#29891)"},{"Id":"2592496883","IsPullRequest":false,"CreatedAt":"2024-10-18T06:57:31","Actor":"caleniuc","Number":"29882","RawContent":null,"Title":"bug(MatAnchor): disabledInteractive not correctly applied","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`MAT_ANCHOR_HOST` applies `aria-disabled` differently than `MAT_BUTTON_HOST`. On the anchor, `aria-disabled` is applied the same as `disabled`, so `disabledInteractive` has no effect on it.\n\nIs this intended? I'd expect to be able to navigate via keyboard even on `<a>` buttons, if `disabledInteractive` and `disabled` are set.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/soecj6?file=src%2Fexample%2Fbutton-overview-example.html\nSteps to reproduce:\n1. Try to navigate via keyboard to the two buttons\n2. Notice that only `<button>` is reachable, while `<a>` is not\n\n\n### Expected Behavior\n\n`<a>` button is reachable via keyboard if `disabledInteractive` is set and the button is `disabled`. - `aria-disabled` is applied on them, like on `<button>`\n\n### Actual Behavior\n\n`<a>` button is not reachable via keyboard if `disabledInteractive` is set and the button is `disabled`.\n\n### Environment\n\n- Angular: v18, v19.0.0-next.2\n- CDK/Material: v18, v19.0.0-next.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/29882","RelatedDescription":"Closed issue \"bug(MatAnchor): disabledInteractive not correctly applied\" (#29882)"},{"Id":"2594994774","IsPullRequest":false,"CreatedAt":"2024-10-18T06:45:40","Actor":"legrandjerome","Number":"29887","RawContent":null,"Title":"mat-error not displayed in a @for loop","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing a @for loop a single <mat-error> is not displayer in the template.\n\nAdding a <ng-container> or another tag arounds made it works.\n\n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/m3msso?file=src%2Fexample%2Fform-field-error-example.html\nSteps to reproduce:\n1. launch the link\n2. error should be present but it's not\n3. add extra tag around the for loop or inside \n4. error message is present\n\n\n### Expected Behavior\n\nError messages should be present without extra tag.\n\n### Actual Behavior\n\nError message is not present.\n\n### Environment\n\n- Angular: 19.0.0-next.2\n- CDK/Material: 19.0.0-next.2\n- Browser(s): Chrome Version 129.0.6668.90 (Build officiel) (64 bits)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11 Professionnel\n","Url":"https://github.com/angular/components/issues/29887","RelatedDescription":"Closed issue \"mat-error not displayed in a @for loop\" (#29887)"},{"Id":"2595829105","IsPullRequest":true,"CreatedAt":"2024-10-17T22:08:30","Actor":"wagnermaciel","Number":"29893","RawContent":null,"Title":"docs: release notes for the v18.2.9 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29893","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.9 release\" (#29893)"},{"Id":"2595823663","IsPullRequest":true,"CreatedAt":"2024-10-17T21:51:16","Actor":"wagnermaciel","Number":"29892","RawContent":null,"Title":"Bump version to \"v18.2.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29892","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.9\" with changelog.\" (#29892)"},{"Id":"2595208190","IsPullRequest":true,"CreatedAt":"2024-10-17T16:27:45","Actor":"wagnermaciel","Number":"29890","RawContent":null,"Title":"Bump version to \"v19.0.0-next.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29890","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.9\" with changelog.\" (#29890)"},{"Id":"2595177572","IsPullRequest":true,"CreatedAt":"2024-10-17T16:23:25","Actor":"wagnermaciel","Number":"29889","RawContent":null,"Title":"Revert \"release: cut the v19.0.0-next.9 release\"","State":"closed","Body":"This reverts commit 74dc8de5701a1bd660de469cdd9271c4e484f967.","Url":"https://github.com/angular/components/pull/29889","RelatedDescription":"Closed or merged PR \"Revert \"release: cut the v19.0.0-next.9 release\"\" (#29889)"},{"Id":"2595110325","IsPullRequest":true,"CreatedAt":"2024-10-17T15:58:31","Actor":"wagnermaciel","Number":"29888","RawContent":null,"Title":"Bump version to \"v19.0.0-next.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29888","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.9\" with changelog.\" (#29888)"},{"Id":"2594376192","IsPullRequest":true,"CreatedAt":"2024-10-17T14:57:49","Actor":"crisbeto","Number":"29885","RawContent":null,"Title":"Implement new map marker clusterer","State":"closed","Body":"The history of clustering in Google Maps is [complicated](https://github.com/googlemaps/js-markerclusterer?tab=readme-ov-file#history), but the result is that our current `map-marker-clusterer` component is based on top of an unmaintained API. We haven't been able to switch to the new one without breaking changes, because it doesn't offer the same set of features as the old one. Furthermore, the current clusterer only supports the `Marker` class which is deprecated, but not the `AdvancedMarker` which is the recommended class to use for markers, whereas the new API supports both kinds of markers. These changes attempt to cover both existing users and users who want to use the new API by:\r\n1. Renaming the `map-marker-clusterer` to `deprecated-map-marker-clusterer`.\r\n2. Introducing a new `map-marker-clusterer` based on top of the new API.\r\n3. Adding an `ng update` schematic to rename existing usages.\r\n\r\nFixes #23695.","Url":"https://github.com/angular/components/pull/29885","RelatedDescription":"Closed or merged PR \"Implement new map marker clusterer\" (#29885)"},{"Id":"2593971680","IsPullRequest":true,"CreatedAt":"2024-10-17T14:40:04","Actor":"crisbeto","Number":"29884","RawContent":null,"Title":"Account for standalone by default","State":"closed","Body":"Adjusts the entire codebase now that standalone is the default.","Url":"https://github.com/angular/components/pull/29884","RelatedDescription":"Closed or merged PR \"Account for standalone by default\" (#29884)"},{"Id":"2594448931","IsPullRequest":false,"CreatedAt":"2024-10-17T12:56:41","Actor":"Pulya10c","Number":"29886","RawContent":null,"Title":"bug(CdkDragDrop): Nested cdkDropLists don't work correctly","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIt is necessary to use nested **cdkDropLists** with the ability to drag and drop elements between them: elements must be dragged between all **cdkDropLists**, as well as within the **cdkDropLists** themselves. When dragging an element from a nested group, there is no possibility to drag and drop within the same group from which the element is dragged.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-eksnha?file=src%2Fapp%2Fexample-component.ts\nSteps to reproduce:\n1. Try re-sorting the items within group 1 or within group 2.\n\n\n### Expected Behavior\n\nElements within groups are sorted\n\n### Actual Behavior\n\nSorting doesn't work because the items are dropped at the root level and can either be dropped into another group or at the root level, but it's impossible to return them to the group they were pulled from.\n\n### Environment\n\n- Angular: 16,2,12\n- CDK/Material: 16,2,13\n- Browser(s): Version 130.0.6723.58 (Official Build) (64-bit)\n- Operating System (e.g. Windows 11, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29886","RelatedDescription":"Closed issue \"bug(CdkDragDrop): Nested cdkDropLists don't work correctly\" (#29886)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-23T03:30:02.3094044Z","RunDurationInMilliseconds":1459}