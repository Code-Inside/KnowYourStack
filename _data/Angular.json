{"Data":{"Angular-Issues":{"Issues":[{"Id":"2099325600","IsPullRequest":true,"CreatedAt":"2024-01-25T00:01:59","Actor":"dylhunn","Number":"54063","RawContent":null,"Title":"refactor(compiler): Fix project integration tests for Template Pipeline","State":"open","Body":"Various fixes to the project integration tests for Template Pipeline. See individual commits for details.","Url":"https://github.com/angular/angular/pull/54063","RelatedDescription":"Open PR \"refactor(compiler): Fix project integration tests for Template Pipeline\" (#54063)"},{"Id":"2099296703","IsPullRequest":false,"CreatedAt":"2024-01-24T23:39:07","Actor":"oidacra","Number":"54062","RawContent":null,"Title":"Use `fixture.componentRef.setInput('input1', input1)` not works doing Unit Test","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have a \r\n```\r\nError: NG0303: Can't set value of the 'input1' input on the 'ChildComponent' component. Make sure that the 'input1' property is annotated with @Input() or a mapped @Input('input1') exists.\r\n```\r\n\r\nWhen I do a Unit test with input signals.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/oidacra/unit-test-input-signals/tree/main\n\n### Please provide the exception or error you saw\n\n```true\nWhen I try use `fixture.componentRef.setInput('input1', input1)`\r\nAnd show a `Error: NG0303: Can't set value of the 'input1' input on the 'ChildComponent' component. Make sure that the 'input1' property is annotated with @Input() or a mapped @Input('input1') exists`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.1\r\nNode: 18.18.2\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.1\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.1\r\n@angular-devkit/build-angular   17.1.1\r\n@angular-devkit/core            17.1.1\r\n@angular-devkit/schematics      17.1.1\r\n@schematics/angular             17.1.1\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\nGet ` NG0303: Can't bind to 'input1' since it isn't a known property of 'unit-test-child' (used in the 'AppComponent' component template).` too when you try a use the child component inside the parent\r\n```\r\n app.component.html\r\n<unit-test-child [input1]=\"input1\" [input2]=\"input2\"></unit-test-child>\r\n```\r\n\r\nRunning works all perfectly. The problem is doing Unit Test.","Url":"https://github.com/angular/angular/issues/54062","RelatedDescription":"Closed issue \"Use `fixture.componentRef.setInput('input1', input1)` not works doing Unit Test\" (#54062)"},{"Id":"2098955483","IsPullRequest":true,"CreatedAt":"2024-01-24T23:36:25","Actor":"dylhunn","Number":"54057","RawContent":null,"Title":"feat(compiler): Add a TSConfig option `useTemplatePipeline`","State":"closed","Body":"The Template Pipeline is a brand new backend for the Angular compiler, replacing `TemplateDefinitionBuilder` and friends. It generates the Ivy instructions corresponding to an input template (or host binding). The Template Pipeline has an all-new design based on an intermediate representation compiled over many phases, which will allow us to experiment with compiler changes more easily in the future.\r\n\r\nWith this commit, the template pipeline can now be enabled in any project via the `useTemplatePipeline` TSConfig option. However, it is still disabled by default.","Url":"https://github.com/angular/angular/pull/54057","RelatedDescription":"Closed or merged PR \"feat(compiler): Add a TSConfig option `useTemplatePipeline`\" (#54057)"},{"Id":"2097268052","IsPullRequest":true,"CreatedAt":"2024-01-24T23:35:26","Actor":"dylhunn","Number":"54043","RawContent":null,"Title":"refactor(compiler): Support externally provided defer deps fns","State":"closed","Body":"In #53591, Andrew added local compliation support for defer blocks. However, this requires the ability to emit pre-generated static defer deps functions. We now also support that feature in Template Pipeline.\r\n","Url":"https://github.com/angular/angular/pull/54043","RelatedDescription":"Closed or merged PR \"refactor(compiler): Support externally provided defer deps fns\" (#54043)"},{"Id":"2099230560","IsPullRequest":false,"CreatedAt":"2024-01-24T22:39:29","Actor":"Serpentarius13","Number":"54061","RawContent":null,"Title":"No image for @for + @if Select component example","State":"closed","Body":"### Describe the problem that you experienced\n\nAt https://angular.dev/guide/directives#hosting-a-directive-without-a-dom-element section, there is 404 image link for example of ```  @for and @if directives ```\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/directives#hosting-a-directive-without-a-dom-element\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/112726943/780092d8-2793-4267-b92f-ec601a25a8da)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nI believe there is just no file for this yet here: https://github.com/angular/angular/tree/main/aio/content/images/guide/built-in-directives\n```\n","Url":"https://github.com/angular/angular/issues/54061","RelatedDescription":"Closed issue \"No image for @for + @if Select component example\" (#54061)"},{"Id":"2099165255","IsPullRequest":true,"CreatedAt":"2024-01-24T21:48:01","Actor":"dylhunn","Number":"54060","RawContent":null,"Title":"refactor(compiler): Fix defer deps fn duplicate names in Template Pipeline","State":"open","Body":"Previously, defer deps fns names were only prefixed with the component name, meaning that distinct deps fns in the same component would produce a name collision. Now, we take into account the entire template function name when naming inner deps fns.","Url":"https://github.com/angular/angular/pull/54060","RelatedDescription":"Open PR \"refactor(compiler): Fix defer deps fn duplicate names in Template Pipeline\" (#54060)"},{"Id":"2099086084","IsPullRequest":true,"CreatedAt":"2024-01-24T21:00:52","Actor":"alxhub","Number":"54059","RawContent":null,"Title":"Bump version to \"v17.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54059","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.0-next.0\" with changelog.\" (#54059)"},{"Id":"2098927098","IsPullRequest":true,"CreatedAt":"2024-01-24T19:35:17","Actor":"pkozlowski-opensource","Number":"54056","RawContent":null,"Title":"docs: release notes for the v17.1.1 release","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54056","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.1.1 release\" (#54056)"},{"Id":"2098750341","IsPullRequest":false,"CreatedAt":"2024-01-24T19:18:31","Actor":"stnor","Number":"54054","RawContent":null,"Title":"Introduce a way to output the component name in every component template in development","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nIs there a way to have Angular 16+ output some markup with the component name or the selector name in the browser as a part of the compilation/rendering process? This would be extremely useful for documentation of large applications.\r\n\r\nWe have an application with 1000+ components that is bound for translation into new languages and we need to proved screenshots that explain the context to the translators for example via screenshots or a site where the component names are visible.\r\n\r\nIt would be useful for us to be able to generate screenshots of all routes and states in the application with the component names printed out. I was considering to automate the screenshots on NavigationEnd.\r\n\r\n### Proposed solution\r\n\r\nThe feature could be implemented by making the compiler add some HTML to all components that one can layout and make visible using global css. This could be enabled in developer mode with an `angularCompilerOption` or an additional flag to `ng` for example.\r\n\r\nPerhaps this could be implemented in DevTools too, but ideally this would only be applied to components in the applications and not in libraries such as Angular Material.\r\n\r\nIf this isn't something the team will consider, I'd love some pointers how to implement this myself using existing public or non-public API:s or by modifying Angular.\r\n\r\n","Url":"https://github.com/angular/angular/issues/54054","RelatedDescription":"Closed issue \"Introduce a way to output the component name in every component template in development\" (#54054)"},{"Id":"2098853335","IsPullRequest":true,"CreatedAt":"2024-01-24T18:31:20","Actor":"pkozlowski-opensource","Number":"54055","RawContent":null,"Title":"Bump version to \"v17.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54055","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.1\" with changelog.\" (#54055)"},{"Id":"2098377845","IsPullRequest":false,"CreatedAt":"2024-01-24T16:44:42","Actor":"Ionaru","Number":"54050","RawContent":null,"Title":"Computed signal does not recalculate when the input signal is inside an observable pipe","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nGiven this component:\r\n\r\n```ts\r\n@Component({\r\n  selector: 'app-my-component',\r\n  standalone: true,\r\n  template: ''\r\n})\r\nexport class MyComponent {\r\n\r\n  readonly #dataService = inject(DataService);\r\n  dataFilter = input.required<string>();\r\n\r\n  data$ = computed(() => this.#dataService.data.pipe(\r\n    map((data) => data.filter((item) => item.id === this.dataFilter())),\r\n  ));\r\n}\r\n```\r\n\r\nThe computed signal runs once, but does not recalculate when `dataFilter` changes.\r\nMy guess is that this is caused by `this.dataFilter()` being deep inside nested functions and only runs when the observable is subscribed to, but the behaviour is confusing.\r\n\r\nAs a current workaround, the function can be changed to this:\r\n```ts\r\ndata$ = computed(() => {\r\n  const dataFilter = this.dataFilter();\r\n  return this.#dataService.data.pipe(\r\n    map((data) => data.filter((item) => item.id === dataFilter)),\r\n  );\r\n});\r\n```\r\n\r\nThe above function will work, and change the observable correctly when the input changes. But the extra variable assignment (and required braces and `return` statment), makes this function less elegant.\r\n\r\nIs it possible to make inputs/signals within Observable pipes work?\n\n### Please provide a link to a minimal reproduction of the bug\n\nSee above\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.1.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\nLoving the new `InputFunction` 😁","Url":"https://github.com/angular/angular/issues/54050","RelatedDescription":"Closed issue \"Computed signal does not recalculate when the input signal is inside an observable pipe\" (#54050)"},{"Id":"2098607335","IsPullRequest":true,"CreatedAt":"2024-01-24T16:11:20","Actor":"devversion","Number":"54053","RawContent":null,"Title":"Follow up changes to signal-based inputs","State":"open","Body":"See individual commits (language service, docs etc.)","Url":"https://github.com/angular/angular/pull/54053","RelatedDescription":"Open PR \"Follow up changes to signal-based inputs\" (#54053)"},{"Id":"2098524154","IsPullRequest":false,"CreatedAt":"2024-01-24T15:30:15","Actor":"Sapphirewhale","Number":"54052","RawContent":null,"Title":"NG0100 thrown when iterating through map.keys()","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThis issue relates to NG0100 being raised when using *ngFor to iterate over map.keys(). My understanding based on [this issue](https://github.com/angular/angular/issues/51938) is that this is expected behaviour, as a different iterator is returned from the map.keys() function on each call, however this suggests to me that the *ngFor directive is incompatible with iterators, which aside from being surprising to me, doesn't seem to be documented in either the [*ngFor documentation](https://angular.io/api/common/NgFor), or the troubleshooting documentation for [NG0100](https://angular.io/errors/NG0100).\r\n\r\nIf I've misunderstood the conversation from the previous issue, I'd appreciate if someone could provide an example of how to use *ngFor with an iterator such as the one returned by map.keys(). Obviously there is a trivial workaround to convert map.keys() into a list, but this doesn't resolve the core issue of *ngFor being unintuitively incompatible with iterators.\r\n\r\nIf I've correctly understood the information from the previous issue that *ngFor is incompatible with iterators, my request for a resolution to this issue would be to either:\r\n1. Update the *ngFor directive to be compatible with iterators such as the one returned from map.keys() without raising NG0100 \r\n2. Update the documentation for *ngFor and NG0100 to make it clear that the *ngFor directive is not compatible with iterators (it would also be nice to potentially raise a seperate error in this kind of situation, as it seems to be distinct from the typical error that NG0100 represents).\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-kjsh2w?file=src%2Fapp%2Fapp.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '[object Map Iterator]'. Current value: '[object Map Iterator]'. Expression location: AppComponent component. Find more at https://angular.io/errors/NG0100\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.3.3\r\nNode: 20.10.0 (Unsupported)\r\nPackage Manager: npm 10.2.3\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1303.3 (cli-only)\r\n@angular-devkit/core         13.3.3 (cli-only)\r\n@angular-devkit/schematics   13.3.3 (cli-only)\r\n@schematics/angular          13.3.3 (cli-only)\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54052","RelatedDescription":"Open issue \"NG0100 thrown when iterating through map.keys()\" (#54052)"},{"Id":"2097328636","IsPullRequest":true,"CreatedAt":"2024-01-24T14:32:24","Actor":"maxalmonte14","Number":"54044","RawContent":null,"Title":"docs: fix typo in Custom directives section","State":"closed","Body":"There was a grammatically incorrect sentence in the What is Angular page, Custom directives section. This change makes it more correct.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54044","RelatedDescription":"Closed or merged PR \"docs: fix typo in Custom directives section\" (#54044)"},{"Id":"2098378285","IsPullRequest":true,"CreatedAt":"2024-01-24T14:21:32","Actor":"pkozlowski-opensource","Number":"54051","RawContent":null,"Title":"fix(router): revert commit that replaced `last` helper with native `Array.at(-1)`","State":"open","Body":"This is backport of #54021 to the LTS branch\r\n","Url":"https://github.com/angular/angular/pull/54051","RelatedDescription":"Open PR \"fix(router): revert commit that replaced `last` helper with native `Array.at(-1)`\" (#54051)"},{"Id":"2098072255","IsPullRequest":true,"CreatedAt":"2024-01-24T13:57:08","Actor":"devversion","Number":"54048","RawContent":null,"Title":"build: ensure zone.js typing test is hermetic","State":"closed","Body":"Currently the ZoneJS typing tests executes outside of Bazel, as a legacy artifact of the monorepo merging (as it seems - not ideal at all).\r\n\r\nLooks like this test relies on its own node modules, that were NOT locked using a yarn lock file. This commit adds one, and specifically locks it to a `@types/node` version that does not include the most recent patch release (which seemingly introduced a breaking change) that causes issues with TypeScript's lib checking.\r\n\r\nWhenever we perform lock file maintenance in the future, we have the following options:\r\n\r\n- Consider disabling lib checking via `skipLibCheck` for this test. This may be acceptable.\r\n- Continue locking the node version,\r\n- Waiting for chokidar to comply with the new signature\r\n- Waiting for the breaking change to be rolled back.\r\n\r\nCulprit change:\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/pull/68300\r\n\r\nNote: Also improving the CI code so that it can be run locally more easily (i.e. by following steps of CI for these legacy tests.. running these properly is a different story) ","Url":"https://github.com/angular/angular/pull/54048","RelatedDescription":"Closed or merged PR \"build: ensure zone.js typing test is hermetic\" (#54048)"},{"Id":"2097768306","IsPullRequest":false,"CreatedAt":"2024-01-24T13:56:45","Actor":"michaelkrog","Number":"54046","RawContent":null,"Title":"Assets provider","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nLoading asset file content programmatically works differently across SSR, pre-rendering and client side rendering.\r\n\r\nFor example, if I want to render markdown from the assets folder and I want to load the markdown in a Components ngOnInit, I won't be able to reach the file during pre-rendering. But it works fine in in client side rendering.\r\n\r\n```\r\nngOnInit() {\r\n  this.data = await firstValueFrom(this.http.get('/assets/test.md', {responseType: 'text'}));   \r\n}\r\n\r\n<markdown [data]=\"data\"></markdown>\r\n```\r\n\r\n### Proposed solution\r\n\r\nI propose a form of a provider that can retrieve asset file content relative to the app no matter which rendering type is being used.\r\n\r\n## Interface suggestion\r\n```\r\ntype File = {name: string, type: 'File' | 'Folder'};\r\n\r\ninterface AssetProvider {\r\n  readFile(path: string): Promise<Blob>;\r\n  listFiles(path: string): Promise<File[]>;\r\n}\r\n```\r\n\r\n## Server-side rendering\r\nWhen rendering is performed runtime on the server, the provider should provide files directly from the filesystem using node's fs-package and be dynamic so that changes to the asset folder are reflected in the asset provider at runtime.\r\n\r\n## Client-side rendering\r\nWhen rendering is done client side, assets can be provided by resolving via the Http-client. For the purpose of listing files/directories, a type of index file could be generated in the assets folders (one file on each).\r\n\r\n**Index file example (.ng-index)**\r\n```\r\n{\r\n  \"files\": [\"test.md\"],\r\n  \"folders\": [\"my-first-folder\", \"my-second-folder\"]\r\n}\r\n```\r\n\r\n## Prerender\r\nWhen the application is pre-rendered, the asset provider for server-side rendering should be used during rendering. After rendering and during runtime, assets can be resolved as in Client-side rendering.\r\n\r\n\r\n\r\n### Alternatives considered\r\n\r\nI have looked through many examples that tries to work around the lack of a unified asset provider by creating fx. httpinterceptors for resolving files, booting up web servers during prerendering for loading files remotely and more.\r\n\r\nAll of them are hacks that's stems from the fact, that there are no unified way of resolving assets during rendering.","Url":"https://github.com/angular/angular/issues/54046","RelatedDescription":"Closed issue \"Assets provider\" (#54046)"},{"Id":"2098189690","IsPullRequest":false,"CreatedAt":"2024-01-24T13:29:39","Actor":"EshanDangwal","Number":"54049","RawContent":null,"Title":"Broken Link in Documentation: pipes API Redirects to Page Not Found","State":"closed","Body":"### Describe the problem that you experienced\r\n\r\nThe link to the pipes API documentation in the webpage redirects to a \"Page Not Found\" error. The expected behaviour is to navigate to the correct documentation page at https://angular.dev/api/common#pipes. This issue hinders users from accessing the relevant information about built-in pipes.\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/pipes\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nList of built-in pipes\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nThe problem arose when attempting to access the full list of built-in pipes in the API documentation from the provided link on the Pipes overview webpage. In the **NOTE** section below **Built-in Pipes**, there is a link for checking the list. Instead of being directed to the expected documentation page (https://angular.dev/api/common#pipes), a \"Page Not Found\" error was encountered. This issue led to a disruption in the user experience as it prevented users from accessing the necessary information about built-in pipes.\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nI would like to experience a resolution to the issue by having the provided link in the NOTE section below Built-in Pipes on the Pipes overview webpage correctly direct users to the intended API documentation page for built-in pipes at https://angular.dev/api/common#pipes. The expected behaviour is that users should be able to access the full list of built-in pipes without encountering any \"Page Not Found\" errors, ensuring a seamless and uninterrupted user experience.\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n1. **Screenshot of Source of Error:**\r\n   ![Screenshot of Source of Error](https://github.com/angular/angular/assets/118157050/9ac9b17f-4306-471c-93e6-c61409ab8dcd)\r\n   - *Description:* A screenshot showing the source of the error, possibly highlighting the incorrect link or relevant error message on the webpage.\r\n\r\n2. **Screenshot of Page Not Found:**\r\n![Screenshot of Page Not Found](https://github.com/angular/angular/assets/118157050/548b20b0-5f2c-4c70-868f-1cf3afff980a)\r\n- *Description:* A screenshot depicting the \"Page Not Found\" error encountered when attempting to access the below link.\r\n**Link:** [https://angular.dev/api/common#pipes](https://angular.dev/api/common#pipes)\r\n\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n```false\r\n\r\n```\r\n\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54049","RelatedDescription":"Closed issue \"Broken Link in Documentation: pipes API Redirects to Page Not Found\" (#54049)"},{"Id":"2097810129","IsPullRequest":false,"CreatedAt":"2024-01-24T09:23:06","Actor":"TarsisDragomir","Number":"54047","RawContent":null,"Title":"Unclear usage of effect to retrieve data in async way","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nI'm really enthusiastic about the new features in angular 17, but I'm unsure on how to use the new effects. It seems the new way to make an application reactive (without the need for rxjs mostly), but if I look at the official [angular.dev](https://angular.dev) explanation on effect it states \"Effects are rarely needed in most application code\" which feels a bit strange. Does this mean angular prefers us to stick with rxjs streams for reactivity and fetching data?\r\nOn the other hand I find plenty of other examples on blogs/X/... where effect are used to initiate retrieving data and setting other signals their value (since it's an async process writing to signal just works without errors there). Even initiatives like [computedAsync](https://ngxtension.netlify.app/utilities/signals/computed-async/) are based on that pattern. If we work like that, are we ignoring angular best practices? Or is this allowed/the future of reactivity in angular?\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/signals\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nProbably I overlooked, but on angular.dev I find no example at all on how to trigger an http get call to retrieve data and how to store that data (in signals).\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nUpgrading and adapting to angular 17, but became confused by official statements on angular.dev and examples elsewhere (because of the lack of examples on angular.dev itself).\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nA clear statement from the angular team on this topic :)\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\nI've setup a stackblitz to show 3 different approaches I see now, probably we can find even more variations, but really wondering what to choose/which is the 'default angular way'...\r\nhttps://stackblitz.com/edit/stackblitz-starters-bg7wyc?file=src%2Fmain.ts\r\n\r\n","Url":"https://github.com/angular/angular/issues/54047","RelatedDescription":"Open issue \"Unclear usage of effect to retrieve data in async way\" (#54047)"},{"Id":"2097483679","IsPullRequest":false,"CreatedAt":"2024-01-24T05:58:08","Actor":"exequiel09","Number":"54045","RawContent":null,"Title":"Preloaded image with NgOptimizedImage gets double downloaded when Async operations gets triggered","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nNot sure if it's related to out of bounds CD but when I install https://github.com/angular/angularfire, with barebones setup of `provideFirebaseApp` and `provideRemoteConfig` it will trigger redownload of the image even if it was already preloaded by `link[rel=preload]` which was generated in a SSR app. The double download happens when the app gets change detected and the values of `src` and `srcset` gets assigned even if the the previous and the new value are the same.\r\n\r\nI have a suspicion that this is not only restricted to @angular/fire but any code that might trigger CD on a non-destructive hydrated Angular app.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/exequiel09/nx-ng-seventeen-ngoptimized-image-download-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@angular/fire                   17.0.1\r\n@schematics/angular             17.0.10\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nHappens on both v16, v17.0 and v17.1\r\n\r\nv16 repro = https://github.com/exequiel09/nx-ng-sixteen-ngoptimized-image-download-issue\r\nv17 repro = https://github.com/exequiel09/nx-ng-seventeen-ngoptimized-image-download-issue\r\n\r\nv17 repro can be upgrade to v17.1 and it still happens.\r\n\r\nNOTE: make sure to check `disable cache` when testing as the browser will not try to download it if it's already in the cache. \r\n\r\n![image](https://github.com/angular/angular/assets/1289472/04506e03-5353-4ec4-b4b2-51b0260dc4bf)\r\n","Url":"https://github.com/angular/angular/issues/54045","RelatedDescription":"Open issue \"Preloaded image with NgOptimizedImage gets double downloaded when Async operations gets triggered\" (#54045)"},{"Id":"2097105318","IsPullRequest":true,"CreatedAt":"2024-01-23T22:38:48","Actor":"blathers16","Number":"54042","RawContent":null,"Title":"fix(router): preserve replaceUrl when returning a urlTree from CanAct…","State":"open","Body":"…ivate\r\n\r\nThis commit will fix the issue of the setting of NavigationExtras.replaceUrl being lost when returning a urlTree from a CanActivateFn.\r\n\r\nFixes #53503\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n     I didn't see anything in the docs that mentions the bug.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nhttps://github.com/angular/angular/issues/53503\r\nIssue Number: 53503\r\n\r\n\r\n## What is the new behavior?\r\nNavigationExtras.replaceUrl is preserved.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54042","RelatedDescription":"Open PR \"fix(router): preserve replaceUrl when returning a urlTree from CanAct…\" (#54042)"},{"Id":"2096844869","IsPullRequest":false,"CreatedAt":"2024-01-23T20:31:05","Actor":"bdirito","Number":"54039","RawContent":null,"Title":"Components with a 'required' signalized input cannot be directly unit tested","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIf you create a component with a required signalized input `myInput = input.required<string>();` you cannot construct that component in a unit test as via `TestBed.createComponent(TheComponent)`. If you try you will get an error citing that\r\n```\r\nError: NG0950: Input is required but no value is available yet. Find more at https://angular.io/errors/NG0950\r\n```\r\n\r\nNow this does make sense as far as it goes in that we are not actually providing a value to the required input when we create the component via the testbed. However you *can* write this sort of test with a non-signalized required input ie `@Input({required: true}) myInput!: string;` (which is why I'm calling this a regression).\r\n\r\nThe workaround as via https://stackoverflow.com/questions/77838277/how-to-initialise-angular-components-with-signal-inputs-from-test seems to be to wrap the component you wish to test with another component that provides the inputs desired in order to test it.\r\n\r\nIn the attached stackblitz:\r\nsrc/app/foo/foo.component.ts - a component with a `required` signalized input\r\nsrc/app/foo/foo.component.spec.ts - test of FooComponent showing both the error when trying to create the component directly as well as a utest variant that wraps FooComponent (and works)\r\nsrc/app/foo/bar.component.ts - a component using the older `@Input({required: true})` syntax\r\nsrc/app/foo/bar.component.spec.ts - tests showing that components with `@Input({required: true})` can be created in unit tests without providing the required input\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/ng-jasmine-glhj4x?file=src%2Fapp%2Ffoo%2Ffoo.component.spec.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54039","RelatedDescription":"Closed issue \"Components with a 'required' signalized input cannot be directly unit tested\" (#54039)"},{"Id":"2096910385","IsPullRequest":false,"CreatedAt":"2024-01-23T20:18:53","Actor":"Dejavu333","Number":"54041","RawContent":null,"Title":"Formcontrol essential features","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/forms\r\n\r\n### Description\r\n\r\n1. Formcontrol should know whether it is focused, submitted.\r\n2. We should be able to add multiple updateOn values not just one.\r\n3. We should be able to set if we want to propagate valueChanges and/or statusChanges\r\n\r\n\r\n### Proposed solution\r\n\r\n1. add focused:boolean property to Formcontrol class, and focus$ submit$ streams we can subscribe to\r\n2. rewrite updateOn so it accepts arrays like: ['blur','submit'], and also extend it witch focus click dblclick etc.\r\n3. extend Formcontrol so we can add { propagateValueChanges : false , propagateStatusChanges: true } at declaration\r\n\r\n\r\n### Alternatives considered\r\n\r\nwouldn't have written the issue if had found any","Url":"https://github.com/angular/angular/issues/54041","RelatedDescription":"Open issue \"Formcontrol essential features\" (#54041)"},{"Id":"2096902091","IsPullRequest":true,"CreatedAt":"2024-01-23T20:12:41","Actor":"vladboisa","Number":"54040","RawContent":null,"Title":"docs: fix & update MDN Shadow API link examples","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- **N/A** Tests for the changes have been added (for bug fixes / features)\r\n- **N/A** Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nLink to MDN Shadow API returns 404. \r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nLink to MDN Shadow API work correctly\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54040","RelatedDescription":"Open PR \"docs: fix & update MDN Shadow API link examples\" (#54040)"},{"Id":"2096813102","IsPullRequest":true,"CreatedAt":"2024-01-23T19:17:06","Actor":"bencodezen","Number":"54038","RawContent":null,"Title":"feat: add docs command for local docs dev","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: angular.dev infrastructure script change\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThere is no current path for building angular.dev locally.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nUsers can build a local dev environment of the Angular.dev environment.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54038","RelatedDescription":"Open PR \"feat: add docs command for local docs dev\" (#54038)"},{"Id":"2096672100","IsPullRequest":false,"CreatedAt":"2024-01-23T18:05:05","Actor":"esauerbo","Number":"54037","RawContent":null,"Title":"Tour of heroes inconsistent about usage of standalone components","State":"open","Body":"### Describe the problem that you experienced\n\nIn the first step of the Tour of Heroes tutorial, it shows that `app.component.ts` should be `standalone: true`\r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt0#final-code-review\r\n\r\nIn the second step this is taken out\r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt1#final-code-review\r\n\r\nThe tutorial also mentions that `app.module` should have been created with `ng new` which was not the case for me \r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt1#appmodule\r\n\r\nI think this tutorial just hasn't been updated for angular 17 or was only partially updated. \n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\nEither updated for angular 17 or make note of which version the tutorial is for. \n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54037","RelatedDescription":"Open issue \"Tour of heroes inconsistent about usage of standalone components\" (#54037)"},{"Id":"2096525825","IsPullRequest":false,"CreatedAt":"2024-01-23T16:48:53","Actor":"Babeetlebum","Number":"54036","RawContent":null,"Title":"SwUpdate emits superfluous `VERSION_READY` event with `navigationRequestStrategy` set to `\"freshness\"`","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen settings `navigationRequestStrategy` to `\"freshness\"` in `ngsw-config.json`, a user opening the browser will always get the newest version, which is great.\r\n\r\nHowever, when closing and reopening the tab `SwUpdate.versionUpdates` will emit a `VERSION_DETECTED` event alongside a `VERSION_READY` event, despite the user being on the latest version.\r\n\r\nThis behavior leads to showing unwanted update alerts to our users and as far as I know we don't have any way to differentiate these unwanted `VERSION_READY` events from other warranted ones.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Babeetlebum/angular-sw-bug\n\n### Please provide the exception or error you saw\n\n```true\nHow to reproduce:\r\n\r\n1. pull the repo\r\n2. `yarn build --watch`\r\n3. run a nginx webserver with `docker-compose up --build`\r\n4. open the app at http://localhost:4201\r\n5. it shows version `v1.0.0`\r\n6. close the tab (important step)\r\n7. increment the version in `app.component.ts` to `v1.0.1`\r\n8. open the app at http://localhost:4201 again\r\n9. the new version is pulled (`v1.0.1`) thanks to `navigationRequestStrategy: \"freshness\"` but `SwUpdate` still emits a `VERSION_READY` event, thus prompting users to update to the new version\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0\r\nNode: 20.11.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54036","RelatedDescription":"Open issue \"SwUpdate emits superfluous `VERSION_READY` event with `navigationRequestStrategy` set to `\"freshness\"`\" (#54036)"},{"Id":"2096433208","IsPullRequest":false,"CreatedAt":"2024-01-23T16:08:18","Actor":"GaetanRdn","Number":"54035","RawContent":null,"Title":"@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\n\n@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not\r\n\r\nI wanted to work with angular material form-field. I tried to condition mat-errors.\r\n\r\nI wrote a first @if to test if the field is touched or not and inside several @if to test the different error cases.\r\n\r\nexpected : as usual a beautiful mat-error design\r\n\r\nResult : the mat-error is not displayed as expected. No design for him.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/73hcig-celf3j?file=src%2Fexample%2Fform-field-error-example.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.1.0\r\n@angular/localize                  17.0.8\r\n@angular/material                  17.1.0\r\n@angular/material-moment-adapter   17.1.0\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nIn the stackblitz repo you just have to click inside both input and you will see the difference","Url":"https://github.com/angular/angular/issues/54035","RelatedDescription":"Open issue \"@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not\" (#54035)"},{"Id":"2095869348","IsPullRequest":false,"CreatedAt":"2024-01-23T11:34:39","Actor":"carl-neuriot","Number":"54033","RawContent":null,"Title":"standalone misspelt 'standaone' in angular.dev tutorial","State":"closed","Body":"### Describe the problem that you experienced\n\nIn the [custom pipes](https://angular.dev/tutorials/learn-angular/create-a-pipe) section of the tutorial on angular.dev, the code in step 1 misspells standalone as 'standaone'.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/learn-angular/create-a-pipe\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54033","RelatedDescription":"Closed issue \"standalone misspelt 'standaone' in angular.dev tutorial\" (#54033)"},{"Id":"2095863002","IsPullRequest":false,"CreatedAt":"2024-01-23T11:26:42","Actor":"rezoled","Number":"54032","RawContent":null,"Title":"Async computed signal - Add the ability to easily create async signals with dependencies","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, the computed operator for signal provides the ability to create a new signal value, which is dependent on other signals.\r\n\r\nThe limitation I want to solve is that currently, the computed operator only allows for synchronous computations with immediate resolution of the newly computed value.\r\n\r\nMy suggestion is to allow computed signals to accept an async value (promise or observable), which when combined with a flag would wait until an actual value returns from the async value before updating the signal.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Proposed solution\n\nUse case - \r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n}\r\n```\r\nConsider the use case in the component above, where on every keystroke I want to fetch some data from a backend service.\r\n\r\nExample - Promise:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Data | undefined> = computed(\r\n\t       () => this.service.queryAsPromise({query: this.query()}), // returns a promise \r\n\t\t{ async: true }\r\n\t)\r\n}\r\n```\r\n\r\nExample - Observable:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Data | undefined> = computed(\r\n\t\t() => this.service.queryAsObservable({query: this.query()}), // returns an observable\r\n\t\t{ async: true }\r\n\t)\r\n}\r\n```\r\n\r\nUsing the computed operator with an async callback, but without specifying the async flag would result in a signal that holds an async value (same behavior today so not a breaking change):\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Promise<Data>> = computed(\r\n\t\t() => this.service.queryAsPromise({query: this.query()}), \r\n\t)\r\n}\r\n```\n\n### Alternatives considered\n\nCurrently this is possible only with these 2 options:\r\n1 - Using promise and effect which writes to a new signal:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tdata = signal([]);\r\n\r\n\tconstructor(service:DataService) {\r\n\t\teffect(async () => {\r\n\t\t\tconst query = this.query()\r\n\t\t\tconst result = await service.queryAsPromise({query});\r\n\t\t\tthis.data.set(result);\r\n\t\t}, { allowSignalWrites: true })\r\n\t}\r\n}\r\n```\r\n\r\n2 - Using observable and jumping back and forwards from signal and observables to merge all required data (not to mention the added complexity if you have several dependencies for your async request):\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata = toSignal(\r\n\t\ttoObservable(this.query)\r\n\t\t\t.pipe(mergeMap(query => this.service.queryAsObservable({query})))\r\n\t);\r\n}\r\n```\r\n\r\nBoth solutions are very verbose, convoluted, and seems like bending the framework to do something it wasn't supposed to in terms of ergonomics (my opinion).\r\nThe usecase seems pretty trivial, and I come across it constantly in our projects, so much so that I created a new function just to wrap this logic (toSignalWithDeps).","Url":"https://github.com/angular/angular/issues/54032","RelatedDescription":"Open issue \"Async computed signal - Add the ability to easily create async signals with dependencies\" (#54032)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2099064215","IsPullRequest":false,"CreatedAt":"2024-01-24T20:45:14","Actor":"mathlouly","Number":"26947","RawContent":null,"Title":"[vite] Pre-transform error: Failed to load url","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nI'm using Angular 17, and I created a route with children, where Cat is my component that contains the **router-outlet** and the Dashboard loads inside. The problem happens when accessing the `cat/dashboard` route, Angular starts showing the error below every time I access this route, but when accessing the `cat` route, this does not occur.\r\nBelow is an excerpt of my code.\r\n\r\nApparently the problem does not interfere with usability, but it is strange that this error message appears.\r\n\r\nThis error\r\n<img width=\"1123\" alt=\"image\" src=\"https://github.com/angular/angular/assets/53306408/a103a4a6-7443-4db1-9ced-76aef431171b\">\r\n\r\n\r\nMy Code\r\n\r\n`app.routes.ts`\r\n<img width=\"1440\" alt=\"image\" src=\"https://github.com/angular/angular/assets/53306408/673a0641-1467-4937-964b-2e99b4aa4ba6\">\r\n\r\n`cat.component.html` and `cat.component.ts`\r\n<img width=\"1223\" alt=\"image\" src=\"https://github.com/angular/angular/assets/53306408/e467aa8b-9629-47cc-855c-a301bae102e4\">\r\n\r\n`angular.json`\r\n<img width=\"649\" alt=\"image\" src=\"https://github.com/angular/angular/assets/53306408/03c893cf-5629-420b-a4d2-22214b7df38e\">\r\nIn this file I only modified the options, changing the assets and styles.\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@angular/fire                   17.0.1\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\r\n```","Url":"https://github.com/angular/angular-cli/issues/26947","RelatedDescription":"Closed issue \"[vite] Pre-transform error: Failed to load url\" (#26947)"},{"Id":"2096013665","IsPullRequest":true,"CreatedAt":"2024-01-24T17:54:25","Actor":"alan-agius4","Number":"26931","RawContent":null,"Title":"fix(@angular-devkit/build-angular): return 404 for assets that are not found","State":"closed","Body":"\r\n\r\nThis commit updates the vite dev-server to return 404 for assets and files that are not found.\r\n\r\nCloses #26917\r\n","Url":"https://github.com/angular/angular-cli/pull/26931","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): return 404 for assets that are not found\" (#26931)"},{"Id":"2098188522","IsPullRequest":false,"CreatedAt":"2024-01-24T15:22:59","Actor":"GreedyA1","Number":"26942","RawContent":null,"Title":"proxy ignore !**/mypath not working with build-angular:application builder","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nangular 16: build-angular:browser builder\r\n\r\n### Description\r\n\r\nbuild-angular:browser proxy config supported ways to ignore some paths with syntax !**/\r\njust the changing of builder breaks this behavior.\r\n\r\ndiff in branches \r\n![image](https://github.com/angular/angular-cli/assets/18186211/bd4d4a03-1187-441e-90ec-411833f78624)\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nhttps://github.com/GreedyA1/test16/tree/main - with application builder\r\n* run node server/server.js\r\n* run ng serve --proxy-config=proxy.conf.js\r\n<img width=\"873\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/18186211/4b6f49aa-8fbe-46c2-a642-2d364b239062\">\r\n\r\n* checkout for previous builder to branch: browser-builder\r\nhttps://github.com/GreedyA1/test16/tree/browser-builder - branch with browser builder\r\n* run node server/server.js\r\n* run ng serve --proxy-config=proxy.conf.js\r\n<img width=\"873\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/18186211/473ace4c-17ab-4aa9-9117-3de6644120d9\">\r\n\r\n\r\n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.1.0\r\nNode: 20.11.0\r\nPackage Manager: npm 10.2.4\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26942","RelatedDescription":"Closed issue \"proxy ignore !**/mypath not working with build-angular:application builder\" (#26942)"},{"Id":"2098499872","IsPullRequest":true,"CreatedAt":"2024-01-24T15:19:32","Actor":"alan-agius4","Number":"26946","RawContent":null,"Title":"docs: release notes for the v17.1.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26946","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.1.1 release\" (#26946)"},{"Id":"2098492733","IsPullRequest":true,"CreatedAt":"2024-01-24T15:16:40","Actor":"alan-agius4","Number":"26945","RawContent":null,"Title":"Bump version to \"v17.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26945","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.1\" with changelog.\" (#26945)"},{"Id":"2096157786","IsPullRequest":false,"CreatedAt":"2024-01-24T13:58:55","Actor":"christiaanverwijs","Number":"26932","RawContent":null,"Title":"Angular does not always load CSS bundles properly on sites with multiple stylesheets and CSP nonces enabled","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI recently enabled CSP with nonces for one of our web projects. After that, I started noticing that some styling wasn't always properly loaded. For example, I noticed some styling for our dialogs was sometimes missing. The screenshot below shows a test page with and without the issue:\r\n\r\n![issue](https://github.com/angular/angular/assets/39433533/c81db3a3-3311-47b8-a92f-1a4d942f6fb0)\r\n\r\nI noticed that \"media=print\" was not replaced with \"media=all\" for the styles.css bundle in the incorrect version. It happened frequently, but not all the time. So it seemed to be some sort of timing issue. Eventually, I narrowed it down to three conditions that need to be met:\r\n\r\n1. CSP nonce is set (e.g. <app-root ngCspNonce=\"[nonce]\">)\r\n2. Part of the styling has to be loaded from an external stylesheet, in our case a .css file provided by a CDN. The second part of the styling is contained in a local bundle (e.g. styles.css) and injected automatically by Angular.\r\n3. The external stylesheet has to take at least 50ms to load.\r\n\r\nThis might sound quite rare. But this issue is now surfacing frequently across seven web projects we run. I suspect many developers will stylesheets provided by external sources, amended by local stylesheets, and combined with CSP nonces.\r\n\r\nIt isn't easy to reproduce the issue because it requires a server that adds the correct CSP headers. I set up a temporary site at [https://test-cspissue.theliberatorsimproveyourteam.com](https://test-cspissue.theliberatorsimproveyourteam.com) to demonstrate the issue. The source code for the Angular site is available at [https://github.com/christiaanverwijs/angular-csp-issue](https://github.com/christiaanverwijs/angular-csp-issue). To reproduce:\r\n\r\n1. In Chrome, use the Developers Tools. Go to \"network\" and \"throttle\" to \"3G Fast\" (this is only to slow the load of the CDN stylesheet to at least 50ms). Also, disable the local cache. Alternatively, just reload the page a few times in a new tab or window (CTRL+F5/F5) and the issue will show up.\r\n2. Load [https://test-cspissue.theliberatorsimproveyourteam.com](https://test-cspissue.theliberatorsimproveyourteam.com)\r\n3. Click 'Open dialog'\r\n4. If the issue is present, the dialog box will appear immediately below the button, and not centered on a darker background (as it should be by the node_modules/@angular/material/prebuilt-themes/indigo-pink.css that we include in the local bundle).\r\n5. If the issue is not present, the dialog box appears nicely in the middle of the page.\r\n\r\nNote that this isn't an issue with Material Design, but with Angular. The issue just surfaced most visibly first with a Material Design component.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/christiaanverwijs/angular-csp-issue\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            6.6.7\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI found that I could circumvent the issue by defining the \"styles\" as follows in angular.json. Not ideal, but it seems to work:\r\n\r\n**UPDATE JAN 23**: As it happens, the solution below doesn't consistently resolve the issue on a production environment with a full-blown webapp. \r\n\r\n```\r\n                  \"styles\": [\r\n                     {\r\n                        // the first injected bundle isn't always loaded. so I added a dummy one. \r\n                        \"input\": \"src/less/styles.less\",\r\n                        \"bundleName\": \"dummy\"\r\n                     },\r\n                     {\r\n                        \"input\": \"node_modules/@angular/material/prebuilt-themes/indigo-pink.css\",\r\n                        \"bundleName\": \"material\"\r\n                     },\r\n                     {\r\n                        \"input\": \"src/less/styles.less\",\r\n                        \"bundleName\": \"app\"\r\n                     }\r\n                  ],\r\n```\r\n\r\nMy hunch is that the script that is inserted into index.html by Angular when CSP nonces are active executes too quickly. \r\n\r\n```\r\n<script nonce=\"\">(() => {\r\n  const children = document.head.children;\r\n  function onLoad() {this.media = this.getAttribute('ngCspMedia');}\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i];\r\n    child.hasAttribute('ngCspMedia') && child.addEventListener('load', onLoad);\r\n  }\r\n})();</script>\r\n\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/26932","RelatedDescription":"Closed issue \"Angular does not always load CSS bundles properly on sites with multiple stylesheets and CSP nonces enabled\" (#26932)"},{"Id":"2098157527","IsPullRequest":true,"CreatedAt":"2024-01-24T13:58:54","Actor":"alan-agius4","Number":"26941","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle load event for multiple stylesheets and CSP nonces","State":"closed","Body":"\r\nThe `load` event for each stylesheet may not always be triggered by Google Chrome's handling. Refer to: https://crbug.com/1521256\r\n\r\nThis results in the media attribute persistently being set to print, leading to distorted styles in the UI. To address this issue, we substitute the onload logic by replacing `link.addEventListener('load', ...` with `document.documentElement.addEventListener('load', ...` and filtering for link tags.\r\n\r\nCloses #26932\r\n","Url":"https://github.com/angular/angular-cli/pull/26941","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): handle load event for multiple stylesheets and CSP nonces\" (#26941)"},{"Id":"2095313082","IsPullRequest":true,"CreatedAt":"2024-01-24T13:46:51","Actor":"angular-robot","Number":"26925","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `098a7f1` -> `31ce88d` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `eac1cfe` -> `5d646b9` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `247ec23` -> `e97da49` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `024e9e4` -> `82f2515` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `747c00a` -> `3b4f6d9` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `6eec318` -> `2546138` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `7c3876d` -> `a35bad1` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `3ffe282` -> `b41db4e` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `51ae899` -> `50f590f` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a8342a5` -> `2eb4d3f` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `72c0781` -> `5886346` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f28ecdb` -> `d56555b` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `75a817e` -> `ec9d8bf` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `b4bb30b` -> `0b8de42` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `888c97f` -> `68626d9` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `87ee654` -> `781c766` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `d0b0a79` -> `1f60984` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `0fb0f0f` -> `ca861b8` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `4e28a1a` -> `960f547` |\n| angular/dev-infra | action | digest | `8ae2c44` -> `f0fa701` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26925","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26925)"},{"Id":"2098241350","IsPullRequest":true,"CreatedAt":"2024-01-24T13:13:37","Actor":"alan-agius4","Number":"26944","RawContent":null,"Title":"docs: release notes for the v16.2.12 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26944","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.12 release\" (#26944)"},{"Id":"2098225667","IsPullRequest":true,"CreatedAt":"2024-01-24T13:11:20","Actor":"alan-agius4","Number":"26943","RawContent":null,"Title":"Bump version to \"v16.2.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26943","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.12\" with changelog.\" (#26943)"},{"Id":"2097693407","IsPullRequest":false,"CreatedAt":"2024-01-24T08:47:27","Actor":"csisy-btw","Number":"26940","RawContent":null,"Title":"CSS wrong import order with layer","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nBy default the order of css imports are defined by the order of the import statements (see issue #5312).\r\n\r\nHowever, if the import statement contains a layer specification (like `@import 'somefile' layer(somlayer);`) it is treated as a css import and is moved to the top of the generated css file.\r\n\r\n**Why is this a problem?**\r\n\r\nThe order of css layers can be pre-defined by declaring them without any styles: `@layer lay1, lay2, lay3;`\r\nHowever, if a css import is moved to the top of the generated css file, the layer order will be somewhat ignored, see repro.\r\n\r\n**Why not just change the import orders?**\r\n\r\nWe have a situation where one lib's stylesheet is already put in a layer, while another is not, and we want to put it in a layer as well. However, the order of these layers are important, so we must specify it beforehand which is not possible due to the current behaviour.\n\n### Minimal Reproduction\n\nOriginal styles.scss\r\n```\r\n// this defines the order of layers\r\n@layer lib1, lib2;\r\n\r\n// this imports the actual files into a given layer\r\n// note the order of imports: lib2 first, lib1 second\r\n@import 'lib2' layer(lib2);\r\n@import 'lib1' layer(lib1);\r\n```\r\n\r\nThe expected behaviour:\r\n```\r\n@layer lib1, lib2;\r\n@layer lib2{\r\n  // ... lib2 content\r\n}\r\n@layer lib1{\r\n  // ... lib1 content\r\n}\r\n```\r\n\r\nThe actual behaviour:\r\n```\r\n@layer lib2{\r\n  // ... lib2 content\r\n}\r\n@layer lib1{\r\n  // ... lib1 content\r\n}\r\n@layer lib1, lib2;\r\n```\r\n\r\nAlso see repo for complete repro: https://github.com/csisy-btw/css-layer-import-repro\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26940","RelatedDescription":"Closed issue \"CSS wrong import order with layer\" (#26940)"},{"Id":"2097452040","IsPullRequest":false,"CreatedAt":"2024-01-24T08:10:34","Actor":"perumalsamyrajaveni1518","Number":"26937","RawContent":null,"Title":"Proxy not working - @angular-devkit/build-angular:application","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI upgraded to version 17 and updated the builder **@angular-devkit/build-angular:application.** I made necessary changes according to the schema, and everything is functioning correctly. However, there is an issue with the proxy not working properly in the development server (Vite). The requested API is returning the content of the source file.\n\n### Minimal Reproduction\n\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n    \"myapp\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {\r\n        \"@schematics/angular:component\": {\r\n          \"style\": \"scss\"\r\n        }\r\n      },\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"prefix\": \"myapp\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:application\",\r\n          \"options\": {\r\n            \"preserveSymlinks\": true,\r\n            \"outputPath\": \"dist\",\r\n            \"index\": \"src/index.html\",\r\n            \"polyfills\": [\r\n              \"src/polyfills.ts\"\r\n            ],\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"browser\": \"src/main.ts\",\r\n            \"allowedCommonJsDependencies\": [\r\n              \r\n            ],\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"node_modules/bootstrap/scss/bootstrap.scss\",\r\n              \"node_modules/bootstrap-icons/font/bootstrap-icons.scss\",\r\n              \"node_modules/leaflet/dist/leaflet.css\",\r\n              \"node_modules/leaflet.markercluster/dist/MarkerCluster.css\",\r\n              \"node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css\",\r\n              \"src/styles.scss\",\r\n              \"node_modules/ngx-toastr/toastr.css\",\r\n              \"node_modules/sweetalert2/src/sweetalert2.scss\",\r\n              \"node_modules/@fortawesome/fontawesome-free/css/all.css\",\r\n              \"node_modules/@ng-select/ng-select/themes/default.theme.css\"\r\n            ],\r\n            \"scripts\": [],\r\n            \"extractLicenses\": false,\r\n            \"sourceMap\": true,\r\n            \"optimization\": true,\r\n            \"namedChunks\": true,\r\n            \"verbose\": true,\r\n            \"prerender\": false,\r\n            \"ssr\": false\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.prod.ts\"\r\n                }\r\n              ],\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"namedChunks\": false,\r\n              \"extractLicenses\": true,\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"2mb\",\r\n                  \"maximumError\": \"3mb\"\r\n                },\r\n                {\r\n                  \"type\": \"anyComponentStyle\",\r\n                  \"maximumWarning\": \"6kb\",\r\n                  \"maximumError\": \"12kb\"\r\n                }\r\n              ]\r\n            },\r\n            \"development\": {\r\n              \"optimization\": false,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"options\": {\r\n            \"proxyConfig\": \"src/proxy.conf.json\"\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"buildTarget\": \"myapp:build:production\"\r\n            },\r\n            \"development\":{\r\n              \"buildTarget\": \"myapp:build:production\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"buildTarget\": \"myapp:build\"\r\n          }\r\n        },\r\n        \"lint\": {\r\n          \"builder\": \"@angular-eslint/builder:lint\",\r\n          \"options\": {\r\n            \"lintFilePatterns\": [\r\n              \"src/**/*.ts\",\r\n              \"src/**/*.html\"\r\n            ],\r\n            \"fix\": true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"cli\": {\r\n    \"analytics\": false,\r\n    \"schematicCollections\": [\r\n      \"@angular-eslint/schematics\"\r\n    ],\r\n    \"cache\": {\r\n      \"enabled\": false\r\n    }\r\n  },\r\n  \"schematics\": {\r\n    \"@angular-eslint/schematics:application\": {\r\n      \"setParserOptionsProject\": true\r\n    },\r\n    \"@angular-eslint/schematics:library\": {\r\n      \"setParserOptionsProject\": true\r\n    }\r\n  }\r\n}\n\n### Exception or Error\n\n```text\nERROR Error: <!doctype html>\r\n<html lang=\"en\" data-critters-container>\r\n\r\n<head>\r\n  <script type=\"module\" src=\"/@vite/client\"></script>\r\n\r\n  <title>Cloudmon</title>\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=4\">\r\n  <meta charset=\"utf-8\">\r\n  \r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n</style><link rel=\"stylesheet\" href=\"styles-IUJ3ZFH6.css\" media=\"print\" onload=\"this.media='all'\"><noscript><link rel=\"stylesheet\" href=\"styles-IUJ3ZFH6.css\"></noscript><link rel=\"modulepreload\" href=\"chunk-XLKS2QO3.js\"><link rel=\"modulepreload\" href=\"chunk-WQU52SUZ.js\"><link rel=\"modulepreload\" href=\"chunk-CPDB24DK.js\"><link rel=\"modulepreload\" href=\"chunk-RVFOIZLJ.js\"></head>\r\n\r\n<body class=\"light-theme\">\r\n  <app-root></app-root>\r\n<script src=\"polyfills-MAT6ZQ6R.js\" type=\"module\"></script><script src=\"main-C7POZN7U.js\" type=\"module\"></script></body>\r\n</html>\r\n    at Object.error (chunk-WQU52SUZ.js:30:31110)\r\n    at r.subscribe.u (chunk-WQU52SUZ.js:10:25556)\r\n    at MC._error (chunk-WQU52SUZ.js:10:5497)\r\n    at MC.error (chunk-WQU52SUZ.js:10:2594)\r\n    at MC._error (chunk-WQU52SUZ.js:10:2834)\r\n    at MC.error (chunk-WQU52SUZ.js:10:2594)\r\n    at XMLHttpRequest.C (chunk-WQU52SUZ.js:15:15874)\r\n    at v.invokeTask (polyfills-MAT6ZQ6R.js:1:7078)\r\n    at Object.onInvokeTask (chunk-WQU52SUZ.js:14:69974)\r\n    at v.invokeTask (polyfills-MAT6ZQ6R.js:1:6999)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0\r\nNode: 20.11.0\r\nPackage Manager: npm 10.2.4\r\nOS: darwin x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26937","RelatedDescription":"Closed issue \"Proxy not working - @angular-devkit/build-angular:application\" (#26937)"},{"Id":"2097195186","IsPullRequest":true,"CreatedAt":"2024-01-24T06:52:36","Actor":"clydin","Number":"26936","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): update Vite client code loading for v5","State":"closed","Body":"Vite v5 updated the client code's error dialog text. This requires that the text replacement code also be updated to remove unactionable information from the error dialog.","Url":"https://github.com/angular/angular-cli/pull/26936","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): update Vite client code loading for v5\" (#26936)"},{"Id":"2097498375","IsPullRequest":true,"CreatedAt":"2024-01-24T06:48:26","Actor":"angular-robot","Number":"26938","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.3.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://togithub.com/actions/upload-artifact) | action | minor | `v4.2.0` -> `v4.3.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.3.0`](https://togithub.com/actions/upload-artifact/releases/tag/v4.3.0)\n\n[Compare Source](https://togithub.com/actions/upload-artifact/compare/v4.2.0...v4.3.0)\n\n#### What's Changed\n\n-   Reorganize upload code in prep for merge logic & add more tests by [@&#8203;robherley](https://togithub.com/robherley) in [https://github.com/actions/upload-artifact/pull/504](https://togithub.com/actions/upload-artifact/pull/504)\n-   Add sub-action to merge artifacts by [@&#8203;robherley](https://togithub.com/robherley) in [https://github.com/actions/upload-artifact/pull/505](https://togithub.com/actions/upload-artifact/pull/505)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.3.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26938","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.3.0\" (#26938)"},{"Id":"2097498572","IsPullRequest":true,"CreatedAt":"2024-01-24T06:48:08","Actor":"angular-robot","Number":"26939","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://togithub.com/actions/upload-artifact) | action | minor | `v4.2.0` -> `v4.3.0` |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.19.11` -> `0.19.12`](https://renovatebot.com/diffs/npm/esbuild/0.19.11/0.19.12) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.11` -> `0.19.12`](https://renovatebot.com/diffs/npm/esbuild/0.19.11/0.19.12) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.19.11` -> `0.19.12`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.11/0.19.12) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.11` -> `0.19.12`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.11/0.19.12) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.3.0`](https://togithub.com/actions/upload-artifact/releases/tag/v4.3.0)\n\n[Compare Source](https://togithub.com/actions/upload-artifact/compare/v4.2.0...v4.3.0)\n\n#### What's Changed\n\n-   Reorganize upload code in prep for merge logic & add more tests by [@&#8203;robherley](https://togithub.com/robherley) in [https://github.com/actions/upload-artifact/pull/504](https://togithub.com/actions/upload-artifact/pull/504)\n-   Add sub-action to merge artifacts by [@&#8203;robherley](https://togithub.com/robherley) in [https://github.com/actions/upload-artifact/pull/505](https://togithub.com/actions/upload-artifact/pull/505)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.3.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.19.12`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#01912)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.11...v0.19.12)\n\n-   The \"preserve\" JSX mode now preserves JSX text verbatim ([#&#8203;3605](https://togithub.com/evanw/esbuild/issues/3605))\n\n    The [JSX specification](https://facebook.github.io/jsx/) deliberately doesn't specify how JSX text is supposed to be interpreted and there is no canonical way to interpret JSX text. Two most popular interpretations are Babel and TypeScript. Yes [they are different](https://twitter.com/jarredsumner/status/1456118847937781764) (esbuild [deliberately follows TypeScript](https://twitter.com/evanwallace/status/1456122279453208576) by the way).\n\n    Previously esbuild normalized text to the TypeScript interpretation when the \"preserve\" JSX mode is active. However, \"preserve\" should arguably reproduce the original JSX text verbatim so that whatever JSX transform runs after esbuild is free to interpret it however it wants. So with this release, esbuild will now pass JSX text through unmodified:\n\n    ```jsx\n    // Original code\n    let el =\n      <a href={'/'} title='&apos;&quot;'> some text\n        {foo}\n          more text </a>\n\n    // Old output (with --loader=jsx --jsx=preserve)\n    let el = <a href=\"/\" title={`'\"`}>\n      {\" some text\"}\n      {foo}\n      {\"more text \"}\n    </a>;\n\n    // New output (with --loader=jsx --jsx=preserve)\n    let el = <a href={\"/\"} title='&apos;&quot;'> some text\n        {foo}\n          more text </a>;\n    ```\n\n-   Allow JSX elements as JSX attribute values\n\n    JSX has an obscure feature where you can use JSX elements in attribute position without surrounding them with `{...}`. It looks like this:\n\n    ```jsx\n    let el = <div data-ab=<><a/><b/></>/>;\n    ```\n\n    I think I originally didn't implement it even though it's part of the [JSX specification](https://facebook.github.io/jsx/) because it previously didn't work in TypeScript (and potentially also in Babel?). However, support for it was [silently added in TypeScript 4.8](https://togithub.com/microsoft/TypeScript/pull/47994) without me noticing and Babel has also since fixed their [bugs regarding this feature](https://togithub.com/babel/babel/pull/6006). So I'm adding it to esbuild too now that I know it's widely supported.\n\n    Keep in mind that there is some ongoing discussion about [removing this feature from JSX](https://togithub.com/facebook/jsx/issues/53). I agree that the syntax seems out of place (it does away with the elegance of \"JSX is basically just XML with `{...}` escapes\" for something arguably harder to read, which doesn't seem like a good trade-off), but it's in the specification and TypeScript and Babel both implement it so I'm going to have esbuild implement it too. However, I reserve the right to remove it from esbuild if it's ever removed from the specification in the future. So use it with caution.\n\n-   Fix a bug with TypeScript type parsing ([#&#8203;3574](https://togithub.com/evanw/esbuild/issues/3574))\n\n    This release fixes a bug with esbuild's TypeScript parser where a conditional type containing a union type that ends with an infer type that ends with a constraint could fail to parse. This was caused by the \"don't parse a conditional type\" flag not getting passed through the union type parser. Here's an example of valid TypeScript code that previously failed to parse correctly:\n\n    ```ts\n    type InferUnion<T> = T extends { a: infer U extends number } | infer U extends number ? U : never\n    ```\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26939","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26939)"},{"Id":"2096694363","IsPullRequest":false,"CreatedAt":"2024-01-23T21:09:46","Actor":"paulflo150","Number":"26935","RawContent":null,"Title":"ng build fails when using an absolute path in --output-path","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n<17\n\n### Description\n\nUsing an absolute path with ng build in --output-path throws an error, the build command appears to append the source folder to the folder provided in the --output-path. Using a relative path on the other hand works.\n\n### Minimal Reproduction\n\nng build --configuration production --output-path=\"D:\\builds\\myapp\"\r\n\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: ENOENT: no such file or directory, mkdir 'D:\\Source.App\\D:\\builds\\myapp\\browser'\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.1.0\r\n@angular/cdk                    17.0.1\r\n@angular/cli                    17.1.0\r\n@angular/fire                   17.0.0\r\n@angular/material               17.0.1\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26935","RelatedDescription":"Closed issue \"ng build fails when using an absolute path in --output-path\" (#26935)"},{"Id":"2096587645","IsPullRequest":false,"CreatedAt":"2024-01-23T17:43:41","Actor":"everton-auth","Number":"26934","RawContent":null,"Title":"Global styles for angular libraries","State":"closed","Body":"### Command\n\nconfig\n\n### Description\n\nUtilizing global styles in the Angular library packaged by ng-packgr at the moment is impossible or at least missing documentation.\r\nIt would be nice to have global styles as in normal angular applications so that developers won't need to import, e.g. bootstrap into each component separately.\n\n### Describe the solution you'd like\n\nWhen specifying styleIncludePaths in ng-package.json, there should be an option that resolves and inlines css for each component globally.\n\n### Describe alternatives you've considered\n\nBe able to create a global style file for the library.","Url":"https://github.com/angular/angular-cli/issues/26934","RelatedDescription":"Closed issue \"Global styles for angular libraries\" (#26934)"},{"Id":"2095745642","IsPullRequest":true,"CreatedAt":"2024-01-23T17:35:01","Actor":"alan-agius4","Number":"26929","RawContent":null,"Title":"fix(@schematics/angular): retain trailing comma when adding providers to app config","State":"closed","Body":"\r\n\r\nThis fixes an issue which caused the new provider to be added in the position of the trailing comma. With this change the trailing comma is retained.\r\n\r\nCloses #26911","Url":"https://github.com/angular/angular-cli/pull/26929","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): retain trailing comma when adding providers to app config\" (#26929)"},{"Id":"2094652309","IsPullRequest":false,"CreatedAt":"2024-01-23T15:23:20","Actor":"griest024","Number":"26922","RawContent":null,"Title":"Dev Server throws error when running Angular 17 app non-standalone with SSR","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nWhen running an Angular 17 app with the module setup and SSR enabled, the dev server throws an error.\r\n\r\nBuilding (`ng b`) works (unless `prerender: true`) and serving the client bundle directly works as well as running SSR: `node dist/repro-app/server/server.mjs`.\r\n\r\nWith prerender enabled, building throws the same error as the dev server.\r\n\r\nRemoving SSR (deleting `ssr` and `server` options in `angular.json`) causes the dev server to work as expected.\n\n### Minimal Reproduction\n\nRun `ng s` in [my repro](https://github.com/griest024/ng17-repro).\r\n\r\nSee [this branch](https://github.com/griest024/ng17-repro/tree/remove-server) for a repro of how removing SSR options fixes the issue.\n\n### Exception or Error\n\n```text\n[vite] Internal server error: Cannot read properties of undefined (reading 'ɵmod')\r\n      at getNgModuleDef (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:2117:25)\r\n      at assertNgModuleType (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:2371:10)\r\n      at compileNgModuleFactory (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:31582:18)\r\n      at _PlatformRef.bootstrapModule (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:32472:16)\r\n      at eval (/workspace/repro-app/node_modules/@angular/platform-server/fesm2022/platform-server.mjs:17111:39)\r\n      at Generator.next (<anonymous>)\r\n      at eval (/workspace/repro-app/.angular/vite-root/repro-app/chunk-VPSODEBW.mjs:64:61)\r\n      at ZoneAwarePromise (/workspace/repro-app/node_modules/zone.js/fesm2015/zone-node.js:1353:21)\r\n      at Module.__async (/workspace/repro-app/.angular/vite-root/repro-app/chunk-VPSODEBW.mjs:48:10)\r\n      at renderModule (/workspace/repro-app/node_modules/@angular/platform-server/fesm2022/platform-server.mjs:17100:50)\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.1.0\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\nMaybe this isn't a supported usage since standalone is default now? Seems like modules should still be fully supported until they're officially deprecated.","Url":"https://github.com/angular/angular-cli/issues/26922","RelatedDescription":"Closed issue \"Dev Server throws error when running Angular 17 app non-standalone with SSR\" (#26922)"},{"Id":"2095620500","IsPullRequest":true,"CreatedAt":"2024-01-23T15:23:19","Actor":"alan-agius4","Number":"26928","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide actionable error message when server bundle is missing default export","State":"closed","Body":"\r\nThis change improves the error message when the server bundle does not export a default export.\r\n\r\nCloses #26922\r\n","Url":"https://github.com/angular/angular-cli/pull/26928","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide actionable error message when server bundle is missing default export\" (#26928)"},{"Id":"2095851549","IsPullRequest":true,"CreatedAt":"2024-01-23T15:00:36","Actor":"alan-agius4","Number":"26930","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency vite to v5.0.12","State":"closed","Body":"This commit updates vite to address https://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\n\r\nCloses https://github.com/angular/angular-cli/issues/26916","Url":"https://github.com/angular/angular-cli/pull/26930","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency vite to v5.0.12\" (#26930)"},{"Id":"2096221364","IsPullRequest":false,"CreatedAt":"2024-01-23T14:37:42","Actor":"pramodhcm","Number":"26933","RawContent":null,"Title":"@angular-devkit/build-angular depends on vulnerable version of vite","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nVite dev server option `server.fs.deny` can be bypassed when hosted on a case-insensitive filesystem.\r\nFor more details: [GHSA-c24v-8rfc-w8vw](https://github.com/advisories/GHSA-c24v-8rfc-w8vw)\r\n\r\n![image](https://github.com/angular/angular-cli/assets/43880968/c8f90ccb-2ab9-46e4-9ab6-ef75236eb50c)\r\n\n\n### Minimal Reproduction\n\nCreate new Angular v16 project.\r\nRun npm audit in the project folder\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.10\r\nNode: 20.11.0 (Unsupported)\r\nPackage Manager: npm 10.3.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.12\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.10\r\n@angular-devkit/build-angular   16.2.11\r\n@angular-devkit/core            16.2.10\r\n@angular-devkit/schematics      16.2.10\r\n@angular/cli                    16.2.10\r\n@schematics/angular             16.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26933","RelatedDescription":"Closed issue \"@angular-devkit/build-angular depends on vulnerable version of vite\" (#26933)"},{"Id":"2095313212","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:36","Actor":"angular-robot","Number":"26926","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | patch | [`6.19.0` -> `6.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/6.19.0/6.19.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | patch | [`6.19.0` -> `6.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.19.0/6.19.1) |\n| [jsonc-parser](https://togithub.com/microsoft/node-jsonc-parser) | dependencies | patch | [`3.2.0` -> `3.2.1`](https://renovatebot.com/diffs/npm/jsonc-parser/3.2.0/3.2.1) |\n| [jsonc-parser](https://togithub.com/microsoft/node-jsonc-parser) | devDependencies | patch | [`3.2.0` -> `3.2.1`](https://renovatebot.com/diffs/npm/jsonc-parser/3.2.0/3.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v6.19.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#6191-2024-01-22)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.19.0...v6.19.1)\n\n##### 🩹 Fixes\n\n-   **type-utils:** preventing isUnsafeAssignment infinite recursive calls\n\n-   **eslint-plugin:** \\[no-unnecessary-condition] fix false positive for type variable\n\n##### ❤️  Thank You\n\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.19.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6191-2024-01-22)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.19.0...v6.19.1)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>microsoft/node-jsonc-parser (jsonc-parser)</summary>\n\n### [`v3.2.1`](https://togithub.com/microsoft/node-jsonc-parser/compare/v3.2.0...v3.2.1)\n\n[Compare Source](https://togithub.com/microsoft/node-jsonc-parser/compare/v3.2.0...v3.2.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26926","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26926)"},{"Id":"2095096634","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:24","Actor":"harshlakhara","Number":"26924","RawContent":null,"Title":"fix(@angular/cli): update regex to validate the project-name","State":"closed","Body":"fix(@angular/cli): update regex to validate the project-name\r\n\r\nEnsure that the regex used for validating the project-name is updated to address any issues and enhance accuracy.\r\n\r\nthe existing regex for project-name validation was not validating the name with the dot(.) in application name.\r\n\r\nFixes #25704 \r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25704  \r\n\r\n## What is the new behavior?\r\n\r\nProject name can include the dot(.) in the name while creating the project but while validating the dot(.) was missing. I updated the pattern to accept dot(.) in projectName.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26924","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): update regex to validate the project-name\" (#26924)"},{"Id":"2094683818","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:12","Actor":"clydin","Number":"26923","RawContent":null,"Title":"fix(@angular-devkit/build-angular): allow package file loader option with Vite prebundling","State":"closed","Body":"Previously, the `application` builder would consider all imports originating from a package to be considered external when caching was enabled. This allows Vite's prebundling to function and optimize the build/rebuild experience for the development server. However, when using the newly introduced `loader` option, this also inadvertently caused files that should be affected by the option that originate from a package to also be considered external. This behavior would then prevent the loader customization from being performed. To rectify this situation, all files that would be affected by a loader customization will not be marked as external for the purposes of prebundling unless explicitly configured by the `externalDependencies` option.\r\n\r\nCloses #26866","Url":"https://github.com/angular/angular-cli/pull/26923","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): allow package file loader option with Vite prebundling\" (#26923)"},{"Id":"2095435394","IsPullRequest":false,"CreatedAt":"2024-01-23T08:20:23","Actor":"xkx-dev","Number":"26927","RawContent":null,"Title":"esbuild not support the  inline scss style as webpack","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn a component, when I define the style as inline style  , \r\nand run build , it will give expect new line error. \r\n\r\n\r\n\r\n```\r\nconst SPINNER_VERTICAL_OFFSET = '20px';\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styles: [`\r\n    :host { \r\n      height: 100 %;\r\n      width: 100 %;\r\n      #splash-container {\r\n        top: calc(50 % + ${SPINNER_VERTICAL_OFFSET});\r\n      }\r\n    }\r\n    `]\r\n})\r\nexport class AppComponent {\r\n  title = 'xkx-ng-esbuild';\r\n  name = \"This is name\";\r\n}\r\n```\r\n\r\n![image](https://github.com/angular/angular-cli/assets/147232556/b3975214-3efc-4f6f-9f33-512248700d0a)\r\n\n\n### Minimal Reproduction\n\nusing basic ng-cli to new a project, and change the app-component style with inline styles.\r\nplease refer description \n\n### Exception or Error\n\n```text\nX [ERROR] Expected newline.\r\n  ╷\r\n2 │     :host {\r\n  │           ^\r\n  ╵\r\n  src\\app\\app.component.ts 2:11  root stylesheet [plugin angular-sass]\n```\n\n\n### Your Environment\n\n```text\n17 latest\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26927","RelatedDescription":"Closed issue \"esbuild not support the  inline scss style as webpack\" (#26927)"},{"Id":"2093875807","IsPullRequest":true,"CreatedAt":"2024-01-22T14:56:44","Actor":"alan-agius4","Number":"26921","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use `for loop` instead of `filter` and `forEach`","State":"closed","Body":"\r\n\r\nReduce iterations by using a `for loop`.\r\n","Url":"https://github.com/angular/angular-cli/pull/26921","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use `for loop` instead of `filter` and `forEach`\" (#26921)"},{"Id":"2093782915","IsPullRequest":false,"CreatedAt":"2024-01-22T14:56:34","Actor":"p3t3r5","Number":"26918","RawContent":null,"Title":"Rebuilding on 'ng serve'. Removed css-resource:src (build-angular:application) ","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe have a large project that takes longer than a minute to start. We upgraded from version 16 to version 17.1.0 and switched to 'build-angular:application.' Every time we start, we get the message: 'Changes detected. Rebuilding...' and the entire project is  rebuilded, taking a long time again. In verbose mode, I see that all CSS images are in the \"removed\" array. They are displayed, but rebuilding on serve is frustrating.\r\n\r\n### Minimal Reproduction\r\n\r\n- generate new project (ng new, SCSS)\r\n- apend new class to styles.scss\r\n`.test-resource {\r\n\tdisplay: inline-block;\r\n\tmin-width: 3em;\r\n\tmin-height: 3em;\r\n    background-image: url(./assets/icon.png);\r\n    background-size: contain;\r\n\tbackground-position: 50%;\r\n\tbackground-repeat: no-repeat;\r\n}`\r\n- add some icon.png to src/assets\r\n- add new element to app.component.html\r\n`<span class=\"test-resource\"></span>`\r\n- start app: ng serve --verbose\r\n`Changes detected. Rebuilding...\r\n{\r\n  \"added\": [],\r\n  \"modified\": [],\r\n  \"removed\": [\r\n    \"...\\\\css-resource:src\\\\assets\\\\icon.png\"\r\n  ]\r\nNo output file changes.\r\n`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.1.0\r\nNode: 18.17.1\r\nPackage Manager: npm 10.3.0\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------       \r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26918","RelatedDescription":"Closed issue \"Rebuilding on 'ng serve'. Removed css-resource:src (build-angular:application) \" (#26918)"},{"Id":"2093859844","IsPullRequest":true,"CreatedAt":"2024-01-22T14:56:33","Actor":"alan-agius4","Number":"26920","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not add internal CSS resources files in watch","State":"closed","Body":"\r\nThis change fixes an issue which caused internal virtual inputs to be added to the watch, this cases watchpack to emit a removed event as this file does not exist on disk.\r\n\r\nWe fix this issue, by prefixing `css-resouces` namespace with `angular:` which the input to be filtered out, see: https://github.com/angular/angular-cli/blob/4539961968e90c8c40ed683afe1cf491630a0048/packages/angular_devkit/build_angular/src/tools/esbuild/bundler-context.ts#L251\r\n\r\nCloses #26918\r\n","Url":"https://github.com/angular/angular-cli/pull/26920","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not add internal CSS resources files in watch\" (#26920)"},{"Id":"2093811855","IsPullRequest":true,"CreatedAt":"2024-01-22T14:18:57","Actor":"alan-agius4","Number":"26919","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency vite to v4.5.2","State":"closed","Body":"This commit updates vite to address https://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\n\r\nCloses #26916\r\n","Url":"https://github.com/angular/angular-cli/pull/26919","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency vite to v4.5.2\" (#26919)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2098271556","IsPullRequest":false,"CreatedAt":"2024-01-24T17:30:36","Actor":"yurakis","Number":"28474","RawContent":null,"Title":"bug(MatChipOption): Error when <mat-chip-option> mixed with <mat-chip> inside <mat-chip-listbox>","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen `<mat-chip-listbox>` contains both `<mat-chip>` and `<mat-chip-option>`, and `<mat-chip-option>` has `*ngIf` directive attached, toggling condition for the first time will cause an error in the console:\r\n<img width=\"470\" alt=\"image\" src=\"https://github.com/angular/components/assets/13770788/b87d8cdd-beab-45b4-abb9-e529d5eacb70\">\r\n\r\nChanging `<mat-chip-listbox>` to `<mat-chip-set>` or `<mat-chip-option>` to `<mat-chip>` make this issue disappear. Also it does not appear when `*ngIf` is attached on `<mat-chip>` instead of `<mat-chip-option>`.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-2cpaai\r\nSteps to reproduce:\r\n1. Click `Toggle` button\r\n\n\n### Expected Behavior\n\nNo error in the console.\n\n### Actual Behavior\n\n`You provided 'undefined' where a stream was expected.` error appeared in the console.\n\n### Environment\n\n- Angular: 17.1.0\r\n- CDK/Material: 17.1.0\r\n- Browser(s): Chrome 120.0.6099.234 (Official Build) (arm64)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma 14.1.2 (23B92)\r\n","Url":"https://github.com/angular/components/issues/28474","RelatedDescription":"Closed issue \"bug(MatChipOption): Error when <mat-chip-option> mixed with <mat-chip> inside <mat-chip-listbox>\" (#28474)"},{"Id":"2096837577","IsPullRequest":true,"CreatedAt":"2024-01-24T16:41:19","Actor":"wagnermaciel","Number":"28471","RawContent":null,"Title":"fix(material/slide-toggle): use css var for disabled label color","State":"closed","Body":"* Create a css var to allow teams to override the label text color of a disabled switch","Url":"https://github.com/angular/components/pull/28471","RelatedDescription":"Closed or merged PR \"fix(material/slide-toggle): use css var for disabled label color\" (#28471)"},{"Id":"2098149612","IsPullRequest":true,"CreatedAt":"2024-01-24T12:20:45","Actor":"crisbeto","Number":"28473","RawContent":null,"Title":"Align dialog with M3 spec","State":"open","Body":"Includes the following changes to align the dialog with M3:\r\n\r\n### refactor(material/dialog): introduce tokens to help with M3 implementation\r\nAdds the following tokens to the dialog which are required to implement M3:\r\n* `container-max-width` - sets the default `max-width` of the dialog. Previously this was done through JS but was too wide.\r\n* `container-small-max-width` - sets the default `max-width` on a small screen.\r\n* `container-min-width` - minimum width of the dialog.\r\n* `actions-alignment` - default alignment of the actions. Previously this was handled through JS, but we need to align the buttons to the end to match the spec.\r\n* `content-padding` - padding of `mat-dialog-content`.\r\n* `actions-padding` - padding of `mat-dialog-actions`.\r\n* `headline-padding` - padding of `mat-dialog-title`.\r\n\r\n### fix(material-experimental/theming): align dialog with M3\r\nFixes up the tokens so that the dialog matches the M3 spec.","Url":"https://github.com/angular/components/pull/28473","RelatedDescription":"Open PR \"Align dialog with M3 spec\" (#28473)"},{"Id":"2097129954","IsPullRequest":true,"CreatedAt":"2024-01-23T23:03:21","Actor":"mmalerba","Number":"28472","RawContent":null,"Title":"fix(material-experimental/theming): Update color palettes","State":"open","Body":"Changes the way M3 color palettes a bit to make the color choices more in line with what the spec expects. In particular, select the secondary palette automatically based on the primary palette (secondary is intended to be a more muted version of primary). We still allow the user to select what tertiary color to pair with their primary, since the spec doesn't make the same sort of assumptions about the tertiary color.\r\n\r\nNote: because our demo targets styles at the .mat-primary, .mat-accent, .mat-error classes, it winds up overriding the default color combo that users would see out of the box for the mat-select (a primary form-field with a secondary selected option). This is one example where the M2 color=\"primary/accent/warn\" API doesn't quite align with how colors work in M3. We do not expect users to apply colors in this way, and we probably shouldn't do it in our demo either. For now I've added an extra checkbox to the select demo that lets us observe the form-field/select combo users would see out of the box without our overrides.","Url":"https://github.com/angular/components/pull/28472","RelatedDescription":"Open PR \"fix(material-experimental/theming): Update color palettes\" (#28472)"},{"Id":"2095526585","IsPullRequest":true,"CreatedAt":"2024-01-23T18:20:54","Actor":"crisbeto","Number":"28463","RawContent":null,"Title":"fix(material-experimental/theming): align form field icons with M3","State":"closed","Body":"Emits a bunch of tokens related to the form field which allows us to align the appearance with M3.","Url":"https://github.com/angular/components/pull/28463","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): align form field icons with M3\" (#28463)"},{"Id":"2096262770","IsPullRequest":true,"CreatedAt":"2024-01-23T14:52:21","Actor":"amysorto","Number":"28470","RawContent":null,"Title":"fix(material/menu): Update token values and styles for M3","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28470","RelatedDescription":"Open PR \"fix(material/menu): Update token values and styles for M3\" (#28470)"},{"Id":"2096220559","IsPullRequest":false,"CreatedAt":"2024-01-23T14:32:24","Actor":"RobinBomkamp","Number":"28469","RawContent":null,"Title":"bug(virtual-scroll): scrollToIndex does not work for multiple viewports scrolling over the same element","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you have multiple viewports beneath eachother the function 'scrollToIndex' does not work if you want to scroll to an element in one of the bottom lists. It scrolls to a wrong position.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-dch1m4?file=src%2Fapp%2Fexample-component.html,src%2Fapp%2Fexample-component.ts,src%2Fapp%2Fexample-component.css\r\nSteps to reproduce:\r\n1. Click the button 'Scroll to viewport 3 and index 7' \r\n2. It scrolls to the wrong position.\r\n\n\n### Expected Behavior\n\nIt should scroll to the correct position.\n\n### Actual Behavior\n\nIt should scroll to the wrong position.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Stackblitz\r\n","Url":"https://github.com/angular/components/issues/28469","RelatedDescription":"Open issue \"bug(virtual-scroll): scrollToIndex does not work for multiple viewports scrolling over the same element\" (#28469)"},{"Id":"2096187128","IsPullRequest":false,"CreatedAt":"2024-01-23T14:15:24","Actor":"ahmed-dardery","Number":"28468","RawContent":null,"Title":"feat(CdkTable): There should be a way to access CdkTable's _renderRows","State":"open","Body":"### Feature Description\n\nThe property _renderRow, which is a private property on CdkTable represent the currently rendered rows in the table. This is very convenient for accessing information about what's visible, which is some times more convenient than querying the dataSource. \r\n\r\nSuggestion is something like:\r\n`\r\nprivate _renderRows: RenderRow<T>[];\r\nget renderedRows() {\r\n  return _renderRows\r\n}\r\n`\r\nCould also return a readonly version. \n\n### Use Case\n\nInterested in having a \"expand all / collapse all\" button in the header of the table, which ideally should only loop over the rows that are currently visible to access their `.data.expanded` value. After which it can be changed to expand all or collapse all.","Url":"https://github.com/angular/components/issues/28468","RelatedDescription":"Open issue \"feat(CdkTable): There should be a way to access CdkTable's _renderRows\" (#28468)"},{"Id":"2096124166","IsPullRequest":false,"CreatedAt":"2024-01-23T13:42:50","Actor":"btxtiger","Number":"28467","RawContent":null,"Title":"bug(MatChips): matChipRemove too restrictive","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`matChipRemove` is a directive that can be used on a button in order to delete a chip from a chip grid.\r\n\r\nHowever the icon must follow the exact selector path `button > mat-icon > svg`. \r\n### _It is impossible to use a custom component as icon_\r\n```html\r\n<!-- Does not work -->\r\n<button matChipRemove>\r\n   <my-reusable-delete-icon />\r\n</button>\r\n\r\n<!-- Does not work -->\r\n<button matChipRemove>\r\n   <mat-icon>\r\n      <my-reusable-delete-svg />\r\n   </mat-icon>\r\n</button>\r\n\r\n<!-- Works -->\r\n<button matChipRemove>\r\n   <mat-icon>clear</mat-icon>\r\n</button>\r\n\r\n\r\n<!-- Works -->\r\n<button matChipRemove>\r\n     <mat-icon>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n           <path\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n        </svg>\r\n     </mat-icon>\r\n</button>\r\n```\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nhttps://stackblitz.com/edit/a1vrgk?file=src%2Fexample%2Fchips-autocomplete-example.html\r\n\r\nSteps to reproduce:\r\n1. Open file: chips-autocomplete-example.html\r\n2. Working and not working options commented\r\n\r\n\r\n### Expected Behavior\r\n\r\nAny custom icon component should be rendered correctly\r\n\r\n### Actual Behavior\r\n\r\nAny custom component is invisible. Only the codepath `button > mat-icon > svg` gets rendered.\r\n\r\n### Environment\r\n\r\n- Angular: 17.1.0\r\n- CDK/Material: 17.1.0\r\n- Browser(s): Chrome 120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28467","RelatedDescription":"Open issue \"bug(MatChips): matChipRemove too restrictive\" (#28467)"},{"Id":"2096110023","IsPullRequest":false,"CreatedAt":"2024-01-23T13:35:48","Actor":"MidnightOilIndustries","Number":"28466","RawContent":null,"Title":"bug(MatSlider): MatSlider Freezes View When using dragEnd","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nn/a\r\n\r\n### Description\r\n\r\nIf you use the dragEnd event on a matslider, it fires all events necessary. The problem is, the view does not properly update due to any events that happen. In my example I dragEnd, the data comes back from the server, and is not updated on the screen until I click or hover something. As soon as that happens the data shows properly. Happened in angular v15 and v17. changeDetectionRef.detectChanges() doesnt work to fix it either.\r\n\r\nI have other actions that call the exact same event (hitting the same endpoint) and when they return, the data shows properly. Perhaps it is an issue with the mat-table not playing nice with the drag end. I have seen many stack overflows alluding to this same issue. Im guessing this will just get closed because it 'doesnt exist' but there is definitely a bug in there experienced by many\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Use a slider with drag End that fires an action\r\n2. Populate a mat-table with DB data via selectors\r\n3. Screen wont update until something is hovered or clicked\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe data returned from the server\r\n\r\n### Actual Behavior\r\n\r\nAn empty table, until i hover or click\r\n\r\n### Environment\r\n\r\n- Angular: v15, v17\r\n- CDK/Material: 17.1.0 \r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28466","RelatedDescription":"Open issue \"bug(MatSlider): MatSlider Freezes View When using dragEnd\" (#28466)"},{"Id":"2093839146","IsPullRequest":true,"CreatedAt":"2024-01-23T13:03:23","Actor":"crisbeto","Number":"28460","RawContent":null,"Title":"fix(material-experimental/theming): implement M3 badge","State":"closed","Body":"Aligns the badge with the M3 spec. This required a few issues to be fixed:\r\n1. The badge was being sized with `width` and `height`. This is incorrect, because it prevents the badge from scaling with the text. I've resolved it while keeping the old behavior by introducing new tokens that target `min-width` and `min-height` while the old ones still target `width` and `height`.\r\n2. The badge was being positioned purely with `top`, `bottom`, `left` and `right`. This is problematic, because it anchors the badge to the specific point in the host, causing the content to grow inwards instead of outwards. I've fixed it by using the opposite dimensions to position the badge (e.g. `bottom: 100%` instead of `top: -20px`) and then using a negative margin to offset the badge from there. This approach also has the advantage of producing less CSS.\r\n3. The badge didn't have a padding which made the content look off if it's more than one character.","Url":"https://github.com/angular/components/pull/28460","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): implement M3 badge\" (#28460)"},{"Id":"2095759223","IsPullRequest":false,"CreatedAt":"2024-01-23T10:31:35","Actor":"eneajaho","Number":"28465","RawContent":null,"Title":"docs(m3): docs are not updated to showcase how to use M3 experimental theme","State":"open","Body":"### Documentation Feedback\n\nFollowing the readme file steps or trying to get dev-app styles in another app doesn't work. \r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-qbqvmb?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fglobal_styles.scss&title=Angular%20Starter\n\n### Affected documentation page\n\nhttps://github.com/angular/components/tree/main/src/material-experimental ","Url":"https://github.com/angular/components/issues/28465","RelatedDescription":"Open issue \"docs(m3): docs are not updated to showcase how to use M3 experimental theme\" (#28465)"},{"Id":"2095709148","IsPullRequest":false,"CreatedAt":"2024-01-23T10:04:53","Actor":"spike-rabbit","Number":"28464","RawContent":null,"Title":"feat(cdk/listbox): cdkOptionTypeaheadLabel should allow undefined","State":"open","Body":"### Feature Description\n\nThe input `cdkOptionTypeaheadLabel` of `CdkOption` should allow `undefined` as an input type\n\n### Use Case\n\nI am using the `cdkListbox` internaly in a library.  For this list, we allow users to provide an optional typeahead label.\r\nWhen building the option I would like to write it like this:\r\n```html\r\n<div [cdkOption]=\"value\" [cdkOptionTypeaheadLabel]=\"optionalLabel\">...</div>\r\n```\r\n\r\nHowever this is a compiler error. When adding an `$any()` cast  everything works fine.","Url":"https://github.com/angular/components/issues/28464","RelatedDescription":"Open issue \"feat(cdk/listbox): cdkOptionTypeaheadLabel should allow undefined\" (#28464)"},{"Id":"2094861130","IsPullRequest":true,"CreatedAt":"2024-01-23T08:31:29","Actor":"andrewseguin","Number":"28461","RawContent":null,"Title":"Revert \"perf(cdk/table): Use afterRender hooks (#28354)\"","State":"closed","Body":"This reverts commit 81cb5acc8b2545b5674362a6f4c0b1768136dd66.","Url":"https://github.com/angular/components/pull/28461","RelatedDescription":"Closed or merged PR \"Revert \"perf(cdk/table): Use afterRender hooks (#28354)\"\" (#28461)"},{"Id":"2094888776","IsPullRequest":false,"CreatedAt":"2024-01-22T22:32:43","Actor":"thatcort","Number":"28462","RawContent":null,"Title":"bug(Slider): Does Not Render Slider Thumb at Correct Position","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen setting a step value on the slider, the slider thumb does not respect the value it receives and only renders at step positions.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-bcgmbo?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Add a slider with a step attribute\r\n2. Set the value on the slider thumb to a non-step value\r\n\n\n### Expected Behavior\n\nThe thumb should render at the precise position of the value input. The step input should constrain user input to only be able to drag the thumb to step values, but not constrain rendering of programmatically set values.\n\n### Actual Behavior\n\nThe thumb renders at a step value, but not the actual input value.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): \r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28462","RelatedDescription":"Open issue \"bug(Slider): Does Not Render Slider Thumb at Correct Position\" (#28462)"},{"Id":"2092190806","IsPullRequest":true,"CreatedAt":"2024-01-22T19:42:24","Actor":"mmalerba","Number":"28457","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in badge, button-toggle, button, pseudo-checkbox, and chips","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28457","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in badge, button-toggle, button, pseudo-checkbox, and chips\" (#28457)"},{"Id":"2090570643","IsPullRequest":true,"CreatedAt":"2024-01-22T17:46:48","Actor":"crisbeto","Number":"28454","RawContent":null,"Title":"Align FAB with M3 spec","State":"closed","Body":"Includes a couple of changes that allow us to align the FAB with the M3 spec.\r\n\r\n### fix(material/button): generate separate tokens for mini fab\r\nCurrently the mini FAB uses the same tokens as the regular one. This is incorrect and causes inconsistencies in M3. These changes split the mini FAB out into its own set of tokens.\r\n\r\n### fix(material-experimental/theming): align fab with M3 spec\r\n* Fixes that we weren't emitting the height and shape tokens for the extended FAB which in turn prevented the M3 tokens from working.\r\n* Fixes that all FAB variants were using the wrong color for the state layer, causing it to blend in with the background.","Url":"https://github.com/angular/components/pull/28454","RelatedDescription":"Closed or merged PR \"Align FAB with M3 spec\" (#28454)"},{"Id":"2092481932","IsPullRequest":true,"CreatedAt":"2024-01-22T08:23:45","Actor":"crisbeto","Number":"28459","RawContent":null,"Title":"fix(multiple): import ANIMATION_MODULE_TYPE from core","State":"closed","Body":"Moves all imports of `ANIMATION_MODULE_TYPE` from `platform-browser/animations` to `core` to reduce our dependence on the animations module and to avoid potential issues when lazy-loading animations.","Url":"https://github.com/angular/components/pull/28459","RelatedDescription":"Closed or merged PR \"fix(multiple): import ANIMATION_MODULE_TYPE from core\" (#28459)"},{"Id":"2092381442","IsPullRequest":true,"CreatedAt":"2024-01-21T02:51:25","Actor":"imerljak","Number":"28458","RawContent":null,"Title":"feat(components/sort): add multi-sort support","State":"open","Body":"Adds multi-column sorting capability to MatSort, allowing to sort a table on multiple of its columns at once by toggling matSortMultiple.\r\n\r\nThis feature adds a new sortState variable inside MatSort that should be used as a source of truth when matSortMultiple is enabled.\r\nFixes #24102","Url":"https://github.com/angular/components/pull/28458","RelatedDescription":"Open PR \"feat(components/sort): add multi-sort support\" (#28458)"},{"Id":"2089912274","IsPullRequest":true,"CreatedAt":"2024-01-19T21:45:32","Actor":"crisbeto","Number":"28452","RawContent":null,"Title":"fix(material/badge): move structural styles out of theme","State":"closed","Body":"Historically we've had the structural styles for the badge in the theme, because Angular doesn't support adding styles to a directive. This can lead to duplicate CSS and can be problematic for M3.\r\n\r\nThese changes move the styles into a dummy component that is used to load the style only once per app.","Url":"https://github.com/angular/components/pull/28452","RelatedDescription":"Closed or merged PR \"fix(material/badge): move structural styles out of theme\" (#28452)"},{"Id":"2089352241","IsPullRequest":true,"CreatedAt":"2024-01-19T20:24:11","Actor":"mmalerba","Number":"28451","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in progress-spinner, progress-bar, list, form-field, and datepicker","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28451","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in progress-spinner, progress-bar, list, form-field, and datepicker\" (#28451)"},{"Id":"2091001784","IsPullRequest":false,"CreatedAt":"2024-01-19T17:41:36","Actor":"javiermarinros","Number":"28456","RawContent":null,"Title":"bug(cdk/overlay): attach() and detach are not working in zoneless apps","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe Overlay `attach()` and `detach()` methods are relying on the `ngZone.onStable` observable that is never invoked using the new `provideZonelessChangeDetection` app provider.\r\n\r\nThe related actual code:\r\n\r\n```\r\n  // Update the position once the zone is stable so that the overlay will be fully rendered\r\n    // before attempting to position it, as the position may depend on the size of the rendered\r\n    // content.\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n      // The overlay could've been detached before the zone has stabilized.\r\n      if (this.hasAttached()) {\r\n        this.updatePosition();\r\n      }\r\n    });\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nOverlays to attach and position themselves in zoneless aplications\r\n\r\n### Actual Behavior\r\n\r\nOverlay is created but not positioned and not visible\r\n\r\n### Environment\r\n\r\n- Angular: 17.1\r\n- CDK/Material: 17.1\r\n","Url":"https://github.com/angular/components/issues/28456","RelatedDescription":"Open issue \"bug(cdk/overlay): attach() and detach are not working in zoneless apps\" (#28456)"},{"Id":"2090904757","IsPullRequest":false,"CreatedAt":"2024-01-19T16:41:36","Actor":"marloncommona","Number":"28455","RawContent":null,"Title":"feat(new component): Story","State":"open","Body":"### Feature Description\n\nSince the team's goal is to \"Build high-quality UI components that developers can drop into existing applications\", I would like to propose a \"story\" component similar to WhatsApp and Instragram storys. \r\nI would also love to see a component roadmap.\n\n### Use Case\n\nA library like Material Angular greatly supports the Angular framework as it makes the framework easy to use and to start with. Material Angular should ensure that it keeps up with UX/UI trends.","Url":"https://github.com/angular/components/issues/28455","RelatedDescription":"Open issue \"feat(new component): Story\" (#28455)"},{"Id":"2090092289","IsPullRequest":false,"CreatedAt":"2024-01-19T09:48:21","Actor":"kmichalski2","Number":"28453","RawContent":null,"Title":"bug(mdc-migration): Unable to import directive DefaultValueAccessor after material:mdc-migration","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter I run `ng generate @angular/material:mdc-migration` in my project I receive following error:\r\nFormsModule is imported.\r\n\r\n```\r\nerror NG3004: Unable to import directive DefaultValueAccessor.\r\n  The symbol is not exported from/node_modules/@angular/forms/index.d.ts (module '@angular/forms').\r\n\r\n88 export class TableComponent<T extends {}> extends UnsubscribeComponent implements AfterViewInit, OnInit {\r\n                ~~~~~~~~~~~~~~\r\n\r\n  projects/shared-components/node_modules/@angular/forms/index.d.ts:1324:1\r\n    1324 export declare class DefaultValueAccessor extends BaseControlValueAccessor implements ControlValueAccessor {\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    1325     private _compositionMode;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     ... \r\n    1335     static ɵdir: i0.ɵɵDirectiveDeclaration<DefaultValueAccessor, \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", never, {}, {}, never, never, false, never>;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    1336 }\r\n         ~\r\n    The directive is declared here.\r\n```\r\n\n\n### Reproduction\n\nI am not able to reproduce it using StackBlitz.\r\n\n\n### Expected Behavior\n\nDefaultValueAccessor is imported properly with no errors.\n\n### Actual Behavior\n\nUnable to import directive DefaultValueAccessor error.\n\n### Environment\n\n- Angular: 16.2.13\r\n- CDK/Material: 16.2.13\r\n- Browser(s): terminal error / Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28453","RelatedDescription":"Closed issue \"bug(mdc-migration): Unable to import directive DefaultValueAccessor after material:mdc-migration\" (#28453)"},{"Id":"2087227543","IsPullRequest":true,"CreatedAt":"2024-01-18T23:15:24","Actor":"mmalerba","Number":"28445","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in slide-toggle, select, and radio","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28445","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in slide-toggle, select, and radio\" (#28445)"},{"Id":"2087338156","IsPullRequest":false,"CreatedAt":"2024-01-18T17:20:13","Actor":"wilson3q","Number":"28447","RawContent":null,"Title":"bug(dialog): Material dialog enter/leave animation breaks in 17.1.0","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.6\n\n### Description\n\nThe material dialog enter/leave transition animation does not work in new release. Used to work fine on 17.0.X.\r\n\r\n\r\n![image](https://github.com/angular/components/assets/67785341/46c3c4e7-c4fa-4a0f-93c1-4cf656c5f109)\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Go to angular material demo site https://material.angular.io/components/dialog/examples\r\n2. click \"Open dialog slowly\" button\r\n\n\n### Expected Behavior\n\nDialog should open slowly, and transition animation should show.\n\n### Actual Behavior\n\n Dialog does not open slowly as it was used to be. There is no transition animation at all.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28447","RelatedDescription":"Closed issue \"bug(dialog): Material dialog enter/leave animation breaks in 17.1.0\" (#28447)"},{"Id":"2087738537","IsPullRequest":true,"CreatedAt":"2024-01-18T17:20:12","Actor":"crisbeto","Number":"28449","RawContent":null,"Title":"fix(material/dialog): scale animation not working","State":"closed","Body":"[A change in MDC](https://github.com/material-components/material-components-web/commit/d153db62b3f665934a1d7445f14653b9ef0d4f66) moved the `transform` animation from the container to the surface which broke our implementation.\r\n\r\nThese changes also take the chance to fix that the animation was targeting all properties, rather than just `transform` and `opacity`. I've also fixed up the demo a bit to make it less jumpy.\r\n\r\nFixes #28447.","Url":"https://github.com/angular/components/pull/28449","RelatedDescription":"Closed or merged PR \"fix(material/dialog): scale animation not working\" (#28449)"},{"Id":"2087857730","IsPullRequest":true,"CreatedAt":"2024-01-18T09:21:19","Actor":"kangjinyong","Number":"28450","RawContent":null,"Title":"Expose parameter to prevent menu from being pushed","State":"open","Body":"When using the menu, there is a requirement in my work to not have the menu panel overlap on the item. This is happening when the screen size is small and the menu panel is big.\r\n\r\nAdding of the input parameter into the PositionStrategy withPush() function allows the menu panel to stay in place and not be repositioned.","Url":"https://github.com/angular/components/pull/28450","RelatedDescription":"Open PR \"Expose parameter to prevent menu from being pushed\" (#28450)"},{"Id":"2087483382","IsPullRequest":false,"CreatedAt":"2024-01-18T04:40:35","Actor":"mohammedsahl","Number":"28448","RawContent":null,"Title":"bug(form-field): matTextSuffix/matTextPrefix not vertically aligned with label","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe label of a mat-form-field is not vertically aligned with the matTextSuffix or matTextPrefix.\r\n\r\n![Screenshot 2024-01-18 at 8 42 10 AM](https://github.com/angular/components/assets/32067562/47159140-76bf-4b6c-ab2f-2e76f2fced4a)\r\n\r\nNotice how the suffix and prefix are a couple or so pixels above the label\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/t9161j?file=src%2Fexample%2Fform-field-prefix-suffix-example.html\r\n\r\n\r\n### Expected Behavior\r\n\r\nLabel to be vertically aligned with both matTextSuffix and matTextPrefix\r\n\r\n### Actual Behavior\r\n\r\nLabel is not vertically aligned with both matTextSuffix and matTextPrefix\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: ^16.2.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28448","RelatedDescription":"Open issue \"bug(form-field): matTextSuffix/matTextPrefix not vertically aligned with label\" (#28448)"},{"Id":"2087333819","IsPullRequest":false,"CreatedAt":"2024-01-18T02:06:44","Actor":"JiaLiPassion","Number":"28446","RawContent":null,"Title":"bug(ResizeObserver): Mat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/mi1wyz?file=src%2Fexample%2Fsidenav-drawer-overview-example.html,src%2Fexample%2Fsidenav-drawer-overview-example.css,src%2Fexample%2Fsidenav-drawer-overview-example.ts,src%2Findex.html\r\n\r\nSteps to reproduce:\r\n1. click `Tab2`\r\n2. Add breakpoints in `vendor.js:22456 loopLimitExceededErrorHandler`\r\n3. click `toggle sidenav` button multiple times.\r\nWill receive the error \r\n```\r\nResizeObserver loop completed with undelivered notifications\r\n```\r\n\n\n### Expected Behavior\n\nNo resizeobserver error\n\n### Actual Behavior\n\nWill receive the error \r\n```\r\nResizeObserver loop completed with undelivered notifications\r\n```\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.5\r\n@angular/localize                  17.0.8\r\n@angular/material                  17.0.5\r\n@angular/material-moment-adapter   17.0.5\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0\r\n","Url":"https://github.com/angular/components/issues/28446","RelatedDescription":"Open issue \"bug(ResizeObserver): Mat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications\" (#28446)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-25T03:30:02.8331866Z","RunDurationInMilliseconds":1750}