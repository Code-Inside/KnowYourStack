{"Data":{"Angular-Issues":{"Issues":[{"Id":"1390184855","IsPullRequest":false,"CreatedAt":"2022-09-29T03:08:31","Actor":"stojankukrika","Number":"47577","RawContent":null,"Title":"Unexpected token ?","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi,\r\nI get this error that I passed in the section \"Please provide the exception or error you saw\" when I run the application in the android emulator. And the app does not want to start, just crashes and shows this error in Logcat. I was open that file and this is what I find in that line:\r\n`    this._baseHref = href ?? this._platformLocation.getBaseHrefFromDOM() ?? (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(DOCUMENT).location?.origin ?? '';\r\n`\r\nwhich belongs to this:\r\n`class PathLocationStrategy extends LocationStrategy`\r\n\r\nIf helps I can share `vendor.js` file with you. But please help me or help me to address who is responsible for it.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nJavaScript Error: {\"type\":\"js.error\",\"error\":{\"message\":\"Uncaught SyntaxError: Unexpected token ?\",\"url\":\"http://localhost/vendor.js\",\"line\":24288,\"col\":28,\"errorObject\":\"{}\"}}\r\nFile: http://localhost/ - Line 582 - Msg: SyntaxError: Unexpected token ?\r\nFile: http://localhost/vendor.js - Line 24288 - Msg: Uncaught SyntaxError: Unexpected token ?\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.4\r\nNode: 16.15.1\r\nPackage Manager: npm 8.12.2 \r\nOS: darwin arm64\r\n\r\nAngular: 14.2.3\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.4\r\n@angular-devkit/build-angular   14.2.4\r\n@angular-devkit/core            14.2.4\r\n@angular-devkit/schematics      14.2.4\r\n@angular/cli                    14.2.4\r\n@schematics/angular             14.2.4\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\nHere is my package.json dependencies:\r\n\r\n\"dependencies\": {\r\n    \"@angular/common\": \"^14.2.3\",\r\n    \"@angular/core\": \"^14.2.3\",\r\n    \"@angular/forms\": \"^14.2.3\",\r\n    \"@angular/platform-browser\": \"^14.2.3\",\r\n    \"@angular/platform-browser-dynamic\": \"^14.2.3\",\r\n    \"@angular/router\": \"^14.2.3\",\r\n    \"@capacitor/android\": \"^4.3.0\",\r\n    \"@capacitor/app\": \"^4.0.1\",\r\n    \"@capacitor/core\": \"^4.3.0\",\r\n    \"@capacitor/filesystem\": \"^4.1.1\",\r\n    \"@capacitor/haptics\": \"^4.0.0\",\r\n    \"@capacitor/ios\": \"^4.3.0\",\r\n    \"@capacitor/keyboard\": \"^4.0.0\",\r\n    \"@capacitor/status-bar\": \"^4.0.0\",\r\n    \"@ionic-native/camera\": \"^5.36.0\",\r\n    \"@ionic-native/core\": \"^5.36.0\",\r\n    \"@ionic-native/file\": \"^5.36.0\",\r\n    \"@ionic-native/splash-screen\": \"^5.36.0\",\r\n    \"@ionic-native/status-bar\": \"^5.36.0\",\r\n    \"@ionic/angular\": \"^6.2.9\",\r\n    \"@ngx-translate/core\": \"^14.0.0\",\r\n    \"@ngx-translate/http-loader\": \"^7.0.0\",\r\n    \"animate.css\": \"^4.1.1\",\r\n    \"cordova-plugin-camera\": \"^6.0.0\",\r\n    \"cordova-plugin-file\": \"^7.0.0\",\r\n    \"date-fns\": \"^2.29.0\",\r\n    \"ionic-selectable\": \"^4.9.0\",\r\n    \"rxjs\": \"~7.5.7\",\r\n    \"tslib\": \"^2.4.0\",\r\n    \"twilio-video\": \"^2.24.1\",\r\n    \"zone.js\": \"~0.11.8\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/architect\": \"^0.1402.4\",\r\n    \"@angular-devkit/build-angular\": \"^14.2.3\",\r\n    \"@angular-devkit/core\": \"^14.2.4\",\r\n    \"@angular-eslint/builder\": \"~13.3.0\",\r\n    \"@angular-eslint/eslint-plugin\": \"~13.3.0\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"~13.3.0\",\r\n    \"@angular-eslint/template-parser\": \"~13.3.0\",\r\n    \"@angular/cli\": \"^14.2.3\",\r\n    \"@angular/compiler\": \"^14.2.3\",\r\n    \"@angular/compiler-cli\": \"^14.2.3\",\r\n    \"@angular/language-service\": \"^14.2.3\",\r\n    \"@capacitor/cli\": \"^4.0.0\",\r\n    \"@ionic/angular-toolkit\": \"^7.0.0\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"@typescript-eslint/eslint-plugin\": \"4.16.1\",\r\n    \"@typescript-eslint/parser\": \"4.16.1\",\r\n    \"cordova-plugin-device\": \"^2.0.2\",\r\n    \"cordova-plugin-ionic-keyboard\": \"^2.2.0\",\r\n    \"cordova-plugin-ionic-webview\": \"^4.2.1\",\r\n    \"cordova-plugin-splashscreen\": \"^5.0.2\",\r\n    \"cordova-plugin-statusbar\": \"^2.4.2\",\r\n    \"eslint\": \"^7.6.0\",\r\n    \"eslint-plugin-import\": \"2.22.1\",\r\n    \"eslint-plugin-jsdoc\": \"30.7.6\",\r\n    \"eslint-plugin-prefer-arrow\": \"1.2.2\",\r\n    \"jasmine-core\": \"~3.8.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.3.2\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.0.3\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"ts-node\": \"~10.9.1\",\r\n    \"typescript\": \"~4.8.4\"\r\n  },","Url":"https://github.com/angular/angular/issues/47577","RelatedDescription":"Open issue \"Unexpected token ?\" (#47577)"},{"Id":"1390114304","IsPullRequest":true,"CreatedAt":"2022-09-29T01:09:33","Actor":"dylhunn","Number":"47576","RawContent":null,"Title":"fix(forms): always call `setDisabledState`, not just when the control is disabled","State":"open","Body":"When a CVA is added to a form, reactive forms should always call the setDisabledState method, not just when it's disabled.\r\n\r\nThis PR provides an option in the forms module config to opt-out, since it's a breaking change. We will likely use that option inside of g3 if too many tests are broken.\r\n\r\nFixes #35309.\r\n","Url":"https://github.com/angular/angular/pull/47576","RelatedDescription":"Open PR \"fix(forms): always call `setDisabledState`, not just when the control is disabled\" (#47576)"},{"Id":"1390020046","IsPullRequest":true,"CreatedAt":"2022-09-28T22:37:48","Actor":"AleksanderBodurri","Number":"47575","RawContent":null,"Title":"build(devtools): migrate to manifest v3","State":"open","Body":"Previously we built DevTools for all browsers with version 2 of the manifest file format.\r\n\r\nThis commit includes a number of refactors and API additions that will enable us to build DevTools with version 3 of the manifest file format.\r\n\r\nThe manifest v3 build of Angular DevTools has been tested on Chrome, Edge, and Safari.\r\n\r\nNotably, the Firefox version of Angular DevTools remains as a manifest v2 build. Firefox does not yet support manifest v3 in it's latest stable release. When Firefox makes this transition, a follow up PR will update the Firefox manifest file to version 3.\r\n\r\nBecause Firefox still needs v2, we need to keep some old v2 APIs around in our background page (service worker in v3) that will execute conditionally based on if the extension was built for v2 or v3. This is determined with the `chrome.runtime.getManifest().manifest_version` API.\r\n\r\n# Changes\r\n\r\n> `ng_validate.ts` content script was refactored into `ng_validate.ts` and `detect-angular-for-extension-icon.ts`. Previously this script would execute code on the main page that would detect the existence of Angular and communicate it to the DevTools background page in order to update the Angular icon and popup in the toolbar.\r\n>\r\n> This code would execute on the main page through a script tag that we supply a function to like so, `script.textContent = functionAsString`. \r\n>\r\n> With v3, this method of executing code in a content script [no longer works](https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/#code-execution), so we follow the [migration guide](https://developer.chrome.com/docs/extensions/mv3/mv3-migration-checklist/#api-remote-code) to resolve this. \r\n>\r\n> The only notable change here is that our detection code no longer executes synchronously with `ng_validate.ts`. This is not an issue as this content script was always loaded asynchronously in the first place, and we have no such feature in Angular DevTools that requires it to execute synchronously.\r\n\r\n> The `chrome.tabs.executeScript` API no longer works in v3. As [per the guide](https://developer.chrome.com/docs/extensions/mv3/mv3-migration-checklist/#api-tabs), we switch to using `chrome.scripting.executeScript`.\r\n\r\n\r\n> The `chrome.browserAction` API was previously used to set the icon and popup in the browser toolbar. In v3, this API along with the `chrome.pageAction` API was merged into the `chrome.action` API. As [per the guide](https://developer.chrome.com/docs/extensions/mv3/mv3-migration-checklist/#api-browser-action-js), we make this change.\r\n\r\n>[This guide](https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/#updating-manifest-dot-json) to migrating the manifest.json file was followed.\r\n","Url":"https://github.com/angular/angular/pull/47575","RelatedDescription":"Open PR \"build(devtools): migrate to manifest v3\" (#47575)"},{"Id":"1389961426","IsPullRequest":true,"CreatedAt":"2022-09-28T21:23:36","Actor":"alxhub","Number":"47574","RawContent":null,"Title":"Bump version to \"v15.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/47574","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.0-next.4\" with changelog.\" (#47574)"},{"Id":"1389957103","IsPullRequest":true,"CreatedAt":"2022-09-28T21:18:22","Actor":"alxhub","Number":"47573","RawContent":null,"Title":"docs: release notes for the v14.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/47573","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.4 release\" (#47573)"},{"Id":"1389954272","IsPullRequest":true,"CreatedAt":"2022-09-28T21:16:26","Actor":"alxhub","Number":"47572","RawContent":null,"Title":"Bump version to \"v14.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/47572","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.4\" with changelog.\" (#47572)"},{"Id":"1389805798","IsPullRequest":false,"CreatedAt":"2022-09-28T18:51:00","Actor":"MichaelDessureault","Number":"47571","RawContent":null,"Title":"[Content Projection] ngIf/ngSwitch on an ng-content does not destroy the projected component(s)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIf an ng-content element is within an ngIf or ngSwitch block (either directly on the ng-content element or a parent container).  The content that is being projected does not get destroyed when the state is false.\r\n\r\nI looked through the content projection documentation to see if this was expected behavior and I saw nothing mentioning that ngOnDestroy doesn't get fired.  So I am assuming it's a bug.\r\n\r\nI noticed the issue on an angular 12 version but was also able to reproduce it on an angular 14 version within the linked stackblitz.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-4jusr3?file=src%2Fapp%2Fhello2.component.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.0.0                                                                                                     Node: 16.14.0                                                                                                           Package Manager: yarn 1.22.19                                                                                           OS: win32 x64                                                                                                                                                                                                                                   Angular: 14.0.0                                                                                                         ... animations, cli, common, compiler, compiler-cli, core, forms                                                        ... platform-browser, platform-browser-dynamic, router                                                                                                                                                                                          Package                         Version                                                                                 ---------------------------------------------------------                                                               @angular-devkit/architect       0.1400.0                                                                                @angular-devkit/build-angular   14.0.0                                                                                  @angular-devkit/core            14.0.0                                                                                  @angular-devkit/schematics      14.0.0                                                                                  @schematics/angular             14.0.0                                                                                  rxjs                            7.5.0                                                                                   typescript                      4.7.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/47571","RelatedDescription":"Open issue \"[Content Projection] ngIf/ngSwitch on an ng-content does not destroy the projected component(s)\" (#47571)"},{"Id":"1389545831","IsPullRequest":false,"CreatedAt":"2022-09-28T16:08:33","Actor":"bryanrideshark","Number":"47570","RawContent":null,"Title":"Native Expressions - Angular's answer to JSX.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nAngular has a magnificent template syntax. While it is not imaginative as JSX, the performance benefits make it worth the while.\r\n\r\nWhat Angular Templates limit us to, is a strict dependence on the Angular Compiler. There is no escape hatch to native Javascript; I propose determining a syntax which would make this possible.\r\n\r\nConsider how Angular developers have to do double the work to access an application constant, compared to React or Vue developers:\r\n\r\n## React\r\n\r\n#### app-settings.js\r\n````jsx\r\n\r\nexport const AppName = 'Sample React App';\r\n\r\n````\r\n#### app.jsx\r\n````jsx\r\n\r\nimport { AppName } from './app-settings.js';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<h1>Hello, world, from { AppName } </h1>);\r\n\r\n````\r\n\r\n## Angular\r\n\r\n#### app-settings.ts\r\n````ts\r\n\r\nexport const AppName = 'Sample Angular App';\r\n\r\n````\r\n\r\n#### app.component.ts\r\n````ts\r\nimport { AppName } from './app-settings';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app',\r\n  template: `\r\n  <h1>Hello, world, from {{ AppName }} </h1>\r\n  `\r\n})\r\nexport class AppComponent {\r\n  AppName = AppName\r\n}\r\n````\r\n\r\nIt's that extra binding, AppName = AppName, that can get tedious. \r\n\r\nIt also forces dependency injection to be used _everywhere_ in a component. That's great for library development, but sometimes your constants are just your constants. Javascript already gives us a module system for shipping things around - can we remove that final \"import it into Angular land\" step, and just allow templates to access them directly?\r\n\r\n\n\n### Proposed solution\n\nIntroduce another class of Angular Expression which would be considered a **native expression**. Initially, I propose that we disallow the use of pipes for these expressions, though I'm sure they could be worked back in.\r\n\r\nFor backwards compatability, a **native expression** would likely need to have `{{{ }}}` as its nomenclature.\r\n\r\n# Native Expressions\r\n\r\nNative Expressions inject native javascript with minimal transformations into the final Ivy view engine instruction set.\r\n\r\nNative Expressions cannot do the following: \r\n - Use the `export` keyword\r\n - Use the `class` keyword\r\n - Use `const`, `let`, `for`, `while`, or other control flow\r\n - Use `import()`\r\n\r\nNative Expressions can do the following:\r\n - Use static `import` in the first native expression of an Angular template document\r\n - Reference component via `this`\r\n - Call functions (use at your own risk)\r\n - Access ambient variables in the scope of the template.\r\n \r\n \r\n## What are some sample templates which use Native Expressions?\r\n\r\n\r\n## Raw Expression Sample\r\n\r\n#### app-settings.ts\r\n````ts\r\n\r\nexport const AppName = 'Sample Angular App';\r\n\r\n````\r\n\r\n#### app.component.ts\r\n````ts\r\nimport { AppName } from './app-settings';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app',\r\n  template: `\r\n  <h1>Hello, world, from {{{ AppName }}} </h1>\r\n  `\r\n})\r\nexport class AppComponent {\r\n}\r\n````\r\n\r\n#### Demonstrating import from a template.html file\r\n````html\r\n{{{\r\nimport { AppName } from './app.constants';\r\n}}}\r\n<h1>Hello world from {{AppName}}!</h1>\r\n````\r\n\r\n#### Using native expressions as inputs\r\n````ts\r\n\r\nimport { AppName } from './app-settings';\r\n\r\n@Component({\r\n  template: `\r\n<textarea placeholder=\"Say Something about {{{ AppName }}}\"></textarea>\r\n  `\r\n})\r\nexport class SampleComponent {}\r\n\r\n````\r\n\r\n#### Using native expressions as inputs - square bracket syntax\r\n````html\r\n{{{\r\nimport { defaultConnectedPositions } from './app-constants';\r\n}}}\r\n<textarea [placeholder]=\"{{{ AppName }}}\"></textarea>\r\n````\r\n\r\n````\r\n#### Using getter functions - no integration with Change Detection!\r\n````html\r\n{{{\r\nimport { getAppName } from './app-constants';\r\n}}}\r\n<h1>Hi from {{{ getAppName() }}}></textarea>\r\n````\r\n\r\n## How do Native Expressions integrate with Ivy?\r\n\r\n### Sample Ivy output - static values.\r\n````\r\n/*\r\nAll relevant imports etc. are hoisted here.\r\n*/\r\nimport { AppName } from './app.constants';\r\n\r\nfunction (renderFlags, ctx) {\r\n  if (renderFlags & RenderFlags.Create) {\r\n     elementStart(0, 'h1',);\r\n     text(1);\r\n     elementEnd();\r\n  }\r\n  if (renderFlags & RenderFlags.Update) {\r\n    advance(1);\r\n    textInterpolate1('Hello world from ', AppName, '!');\r\n  }\r\n}\r\n\r\n````\r\n\r\n### Sample Ivy output - using function invocation\r\n````\r\n/*\r\nAll relevant imports etc. are hoisted here.\r\n*/\r\nimport { getAppName } from './app.constants';\r\n\r\nfunction (renderFlags, ctx) {\r\n  if (renderFlags & RenderFlags.Create) {\r\n     elementStart(0, 'h1',);\r\n     text(1);\r\n     elementEnd();\r\n  }\r\n  if (renderFlags & RenderFlags.Update) {\r\n    advance(1);\r\n    textInterpolate1('Hello world from ', getAppName(), '!');\r\n  }\r\n}\r\n\r\n````\n\n### Alternatives considered\n\nWe can keep doing things that class-based \"Angular Way\". I don't have much of a choice - we've invested thousands of hours into the product and Angular is \"good enough\" that there's no reason to abandon it in a rewrite.\r\n\r\nThat said - we need to find ways to get Angular out of the way. Maybe something like Native Expressions, allowing raw Javascript to take center stage, would be one way to simplify things.","Url":"https://github.com/angular/angular/issues/47570","RelatedDescription":"Closed issue \"Native Expressions - Angular's answer to JSX.\" (#47570)"},{"Id":"1389533717","IsPullRequest":true,"CreatedAt":"2022-09-28T15:10:24","Actor":"alan-agius4","Number":"47569","RawContent":null,"Title":"fix(localize): add polyfill in polyfills array instead of polyfills.ts","State":"open","Body":"With the recent changes in the Angular CLI (https://github.com/angular/angular-cli/pull/23938) the polyfills option accepts module path that are resolved using Node module resolution. Also, the polyfills.ts file is no longer generated by default.\r\n\r\nThis commit changes the way on how the polyfill is added to the projects.\r\n","Url":"https://github.com/angular/angular/pull/47569","RelatedDescription":"Open PR \"fix(localize): add polyfill in polyfills array instead of polyfills.ts\" (#47569)"},{"Id":"1389529745","IsPullRequest":false,"CreatedAt":"2022-09-28T15:07:46","Actor":"dirthsj","Number":"47568","RawContent":null,"Title":"Misleading phrasing in autocomplete documentation","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nThe documentation for `ng completion` seems to imply Windows does not support autocompletion in PowerShell, however [Powershell has Register-ArgumentCompleter](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter).\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.io/cli/completion#platform-support\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nThe documentation should state that Angular CLI does not support PowerShell autocompletions, rather than stating PowerShell autocompletions do not exist.\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nReading incorrect documentation\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nReading correct documentation\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/47568","RelatedDescription":"Open issue \"Misleading phrasing in autocomplete documentation\" (#47568)"},{"Id":"1389376005","IsPullRequest":false,"CreatedAt":"2022-09-28T13:35:24","Actor":"jesben","Number":"47567","RawContent":null,"Title":"PWA service worker: ignoreSearch=true is super slow in Chrome browser","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nservice-worker\n\n### Description\n\nWhen using ignoreSearch=true my Angular app became extremly slow showing image galleries, but only for my Chrome users. I have SAS tokens in the query params, who changes frequently. Unfortunately it is a very old known problem (Ref.: https://bugs.chromium.org/p/chromium/issues/detail?id=682677). hash for full url are saved in index, so when using ignoreSearch=true, every index needs to be checked, not effective and gives poor performance.\r\n\r\nE.g. of datagroup\r\n`\"dataGroups\": [\r\n    {\r\n        \"name\": \"dynamicResources\",\r\n        \"urls\": [\r\n            \"**XXX/**\"\r\n        ],\r\n        \"cacheConfig\": {\r\n            \"maxSize\": 2000,\r\n            \"maxAge\": \"30d\",\r\n            \"strategy\": \"performance\"\r\n        },\r\n        \"cacheQueryOptions\": {\r\n            \"ignoreSearch\": true\r\n        }\r\n    }\r\n]`\n\n### Proposed solution\n\nIs it possible to create an option which causes the query parameters in urls for data groups to be completely ignored, so they are stored without and retrieved without and we keep the good performance?\n\n### Alternatives considered\n\nIf not an option, then a workaround where you can overwrite ngsw-worker.js until Chrome is fixed.","Url":"https://github.com/angular/angular/issues/47567","RelatedDescription":"Open issue \"PWA service worker: ignoreSearch=true is super slow in Chrome browser\" (#47567)"},{"Id":"1388012982","IsPullRequest":false,"CreatedAt":"2022-09-28T12:54:36","Actor":"bryanrideshark","Number":"47560","RawContent":null,"Title":"Add Module / Global scoped variables to Angular Template Syntax","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nI propose that a new lexical scope be added to the Angular template syntax - While I don't have a good name, \"ambient values\" closely captures. what I'm going after.\r\n\r\n## Background\r\n\r\nPresently, the Angular template language has one lexical scope - The component template. In Angular expressions, we can reference \"let-scope\" variables, or member properties / components of the containing Component class. If we want to access module level imports, we must access those through careful orchestration with the Dependency Injector.\r\n\r\nThis decision forces Angular developers to be very explicit about what is accessible to their components. It promotes best practices. But in some circumstances, this aspect of the Angular Template makes it painful for developers and results in a lot of code duplication.\r\n\r\n\r\n\n\n### Proposed solution\n\n\r\n## Proposal\r\n\r\nI propose that the concept of a Module Scoped \"Ambient Value\" be added to the Angular Template syntax. \"Ambient Values\" would work just like any other reference in an Angular Expression, with the only difference being the template value source.\r\n\r\nAmbient Values would need to be declared in the Providers array of an NgModule or Standalone Component, and use the existing Dependency Injection system.\r\n\r\n````ts\r\n\r\nimport { ambientValue } from '@angular/core';\r\n\r\n@NgModule({\r\n   providers: [\r\n      { \r\n        provide: ambientValue('foo'),\r\n        useValue: 'FOO'\r\n      }\r\n   ]\r\n})\r\nexport class SampleModule {}\r\n````\r\n\r\nThe exact syntax for declaring an Ambient Value is up for debate - the important piece of course would be the name used for reference in the Angular Templates, and the value to resolve.\r\n\r\nThe value of an Ambient Value would be resolved once upon the first time rendering a Component - It would have a lifecycle identical to other providers in an Angular Module.\r\n\r\n\r\n````\r\n<!-- A sample component importing SampleModule -->\r\n\r\n<p>The message is {{foo}}</p>\r\n\r\n<!-- renders, The message is FOO -->\r\n\r\n````\r\n\r\n\r\n## Problems this solves\r\n\r\nFor Component Libraries, there are complicated settings that must be developed. One example is the `Overlay` library from `@angular/cdk`. Charting libraries are another example, any component with a complex object or array of objects requiring configuration.\r\n\r\nTo configure components with complex settings, library authors must either provide an `InjectionToken` and allow consumers to configure behavior, or, provide factory functions and classes expecting consumers to duplicate code at the component typescript level.\r\n\r\n\r\n````ts\r\n// Two possible solutions for shared configuration of a hypothetical charting library\r\n\r\n\r\n// Using Inejction Tokens\r\n\r\nimport { FooThemeConfigToken } from '@foo-charts/foo-charts-ngx';\r\nimport { appSpecificFooTheme } from 'app/shared/foo-theme';\r\n\r\n@Component({\r\n   selector: 'foo-charts-consumer-1',\r\n   template: `\r\n   <foo-chart>\r\n   </foo-chart>\r\n`,\r\n   providers: [{\r\n     provide: FooThemeConfigToken,\r\n     useValue: appSpecificFooTheme \r\n   }]\r\n})\r\nexport class FooChartsConsumer1Component {}\r\n\r\n\r\n// Using declaration of config values\r\n\r\nimport { FooThemeConfigToken } from '@foo-charts/foo-charts-ngx';\r\nimport { appSpecificFooTheme } from 'app/shared/foo-theme';\r\n\r\n@Component({\r\n   selector: 'foo-charts-consumer-2',\r\n   template: `\r\n   <foo-chart [theme]=\"fooTheme\">\r\n   </foo-chart>\r\n`,\r\n})\r\nexport class FooChartsConsumer2Component {\r\n  fooTheme = appSpecificFooTheme;\r\n}\r\n\r\n````\r\n\r\nIn the real world, this looks like \"connectedPositionStrategy\", or declaring a `trackBy:` function over and over again.\r\n\r\nAmbient Values would result in the following solution for this chart library:\r\n\r\n````\r\nimport { FooThemeConfigToken } from '@foo-charts/foo-charts-ngx';\r\n\r\n@Component({\r\n   selector: 'foo-charts-ambient-value-consumer',\r\n   template: `\r\n   <foo-chart [theme]=\"appFooTheme\">\r\n   </foo-chart>\r\n`,\r\n})\r\nexport class FooChartsAmbientValueConsumerComponent {\r\n}\r\n````\r\n\r\n\r\n## Ramifications for state management\r\n\r\nIf this were to be introduced to Angular, it would change the game for state management. Right now, services must be directly injected into each component; Every application component that wants to get the login status of a user, a shopping cart inventory, etc. must inject `UserService`, `CartService` etc. and then access methods directly.\r\n\r\n````ts\r\n// Before Ambient Values\r\n@Component({\r\n   selector: 'store-page',\r\n   template: `\r\n   <div>\r\n      <store-item></store-item>\r\n   </div>\r\n   <div *ngIf=\"user.loggedIn\">\r\n      Welcome back! Your cart is {{cart.status}}\r\n   </div>\r\n`\r\n})\r\nexport class StorePage {\r\n   constructor(\r\n     public user: UserService,\r\n     public cart: CartService\r\n   ) {\r\n   }\r\n}\r\n\r\n// After Ambient Values (assuming UserService and CartService are ambiently declared as user and cart in a higher module).\r\n@Component({\r\n   selector: 'store-page',\r\n   template: `\r\n   <div>\r\n      <store-item></store-item>\r\n   </div>\r\n   <div *ngIf=\"user.loggedIn\">\r\n      Welcome back! Your cart is {{cart.status}}\r\n   </div>\r\n`\r\n})\r\nexport class StorePage {}\r\n````\r\n\r\nIt is debatable which the best solution is for this; It's likely a terrible idea for shared component libraries, but whether or not it's a poor strategy for particular applications is less clear. \r\n\r\nI can imagine that in a large application development team with varying team-member experience, a Sr. Developer might develop an \"AcmeApplicationState\" module, providing a common vernacular for Jr. Developers to easily access business logic.\r\n\n\n### Alternatives considered\n\nThis feature may be declared either too much work, or too dangerous as it could promote bad coding practices. However, I think that on the main it would provide powerful ergonomics for developers and would be an appreciated improvement to Angular. For situations where common functions, queries, themes, and state is shared across an entire application, declaring it once in a Module versus re-declaring it in each component would save developers time, and enforce consistency.","Url":"https://github.com/angular/angular/issues/47560","RelatedDescription":"Closed issue \"Add Module / Global scoped variables to Angular Template Syntax\" (#47560)"},{"Id":"1389163044","IsPullRequest":false,"CreatedAt":"2022-09-28T11:03:11","Actor":"JeanMeche","Number":"47566","RawContent":null,"Title":"NullInjectorError when using inject() in runInContext ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen providing a Service in a component, `inject()` triggers `NullInjectorError ` when called within `runInContext` : \r\n\r\n\r\n\r\n```typescript\r\n@Component({\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [Service],\r\n})\r\nexport class AppComponent {\r\n  public constructor(injector: EnvironmentInjector, service: Service) {\r\n    console.log(service); // OK\r\n    console.log(inject(Service)); //OK\r\n\r\n    setTimeout(() => {\r\n      injector.runInContext(() => {\r\n        console.log(inject(Service)); //KO\r\n      });\r\n    }, 100);\r\n  }\r\n}\r\n```\r\nThis does not happen\r\n* if the service is `providedIn:'root'`\r\n* if the service is provided in the module \r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-yccqgi?file=src%2Fapp%2Fapp.component.ts,src%2Fapp%2Fapp.component.html\r\n\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular 14.2.3\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/47566","RelatedDescription":"Open issue \"NullInjectorError when using inject() in runInContext \" (#47566)"},{"Id":"1389035660","IsPullRequest":true,"CreatedAt":"2022-09-28T09:30:02","Actor":"pkozlowski-opensource","Number":"47565","RawContent":null,"Title":"refactor(common): decouple preconnect checks from image loaders","State":"open","Body":"Previously the built-in image loaders for the optimized image directive were tightly coupled to the preconnect checks infrastructure. This was creating a problem when developers were trying to provide a loader on a component level (or, more generally, deeper in the DI hierarchy):\r\n- PreconnectLinkChecker is the application-level service, provided in root;\r\n- it makes sense to provide loaders in different parts of the DI hierarchy;\r\n\r\nThis refactoring removes the PreconnectLinkChecker configuration from the loaders infrastructure and makes it application-wide config. The PRECONNECT_CHECK_BLOCKLIST is also a simple provider (it was a multi-provider previously) which should make the overall configuration easier.\r\n\r\nThis PR addresses the root cause of the problem that #47498 was attempting to address.","Url":"https://github.com/angular/angular/pull/47565","RelatedDescription":"Open PR \"refactor(common): decouple preconnect checks from image loaders\" (#47565)"},{"Id":"1386872083","IsPullRequest":false,"CreatedAt":"2022-09-28T09:28:31","Actor":"bryanrideshark","Number":"47549","RawContent":null,"Title":"Built in trackByIndex","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon\n\n### Description\n\nIn Angular 1.x, we had a built in \"trackByIndex\" function on ng-for.\r\n\r\nI am now specifying a \"trackByIndex\" function with the same signature in almost every component I use because of the performance benefits provided by trackByIndex.\r\n\r\n````ts\r\n  trackByIndex = <T>(index: number, value: T) => {\r\n    return index;\r\n  };\r\n````\n\n### Proposed solution\n\nCan we find a way to add a built-in `trackByIndex` to Angular Common? Or is there another way that I can easily supply this function without having to define it multiple times over?\n\n### Alternatives considered\n\nI can't think of any alternatives - There is no concept of \"global\" scope in Angular templates; Unless the function is defined on the component, it's inaccessible. \r\n\r\nIf `@NgModule` had a way to ambiently declare a function accessible to the component templates, we could use that; But as far as I know, no such solution exists in Angular.","Url":"https://github.com/angular/angular/issues/47549","RelatedDescription":"Closed issue \"Built in trackByIndex\" (#47549)"},{"Id":"1388548346","IsPullRequest":true,"CreatedAt":"2022-09-28T00:28:00","Actor":"mgechev","Number":"47564","RawContent":null,"Title":"docs: temporarily hide banner to improve survey visibility","State":"open","Body":"Temporarily hiding the \"Support Ukraine\" banner to provide higher visibility of the Angular developer survey that we will run in a few weeks.\r\n\r\nOnce the survey us over (sometime in Q4), we'll add the \"Support Ukraine\" banner back if the situation has not changed.","Url":"https://github.com/angular/angular/pull/47564","RelatedDescription":"Open PR \"docs: temporarily hide banner to improve survey visibility\" (#47564)"},{"Id":"1388241066","IsPullRequest":true,"CreatedAt":"2022-09-27T19:12:56","Actor":"atscott","Number":"47563","RawContent":null,"Title":"fix(router): Delay router scroll event until navigated components hav…","State":"open","Body":"…e rendered\r\n\r\nCurrently, the scroll event is fired immediately after the `NavigationEnd`. However, this is problematic because a change detection has not been able to run, meaning that Angular will not yet have run the update block of the component templates being rendered as part of the navigation.\r\n\r\nThis change delays the scroll event using a `setTimeout`, which will allow Angular's change detection to run before the scroll restoration is performed.\r\n\r\nfixes #24547\r\n","Url":"https://github.com/angular/angular/pull/47563","RelatedDescription":"Open PR \"fix(router): Delay router scroll event until navigated components hav…\" (#47563)"},{"Id":"1388236323","IsPullRequest":false,"CreatedAt":"2022-09-27T19:09:10","Actor":"sviat9440","Number":"47562","RawContent":null,"Title":"Promise rejection with finally, does not throw unhandled rejection","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nPromise rejection with finally, does not throw unhandled rejection\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/sviat9440/zone-js-bug-reproduction.git\r\n\r\n### Please provide the exception or error you saw\r\n\r\n## Expected\r\n\r\n1. If the promise is rejected, the final callback should be executed\r\n2. After that, it should throw the UnhandledPromiseRejection error\r\n\r\n## Actual without zone.js\r\n\r\n```true\r\nPromise.reject(new Error('test error')).finally(() => console.log('finally'));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nfinally\r\nfile:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/work-as-expected.js:1\r\nPromise.reject(new Error('test error')).finally(() => console.log('finally'));\r\n               ^\r\n\r\nError: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/work-as-expected.js:1:16\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12)\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nBrowser output:\r\n![image](https://user-images.githubusercontent.com/13107421/192618459-5fe9c2d3-b76d-4ebe-bd7e-e8455ac4af4d.png)\r\n\r\n\r\nWork as expected\r\n\r\n## Actual with zone.js\r\n\r\n### Case 1\r\n\r\n```\r\nimport 'zone.js';\r\n\r\nPromise.reject(new Error('test error')).finally(() => console.log('finally'));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nfinally\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nBrowser output:\r\n![image](https://user-images.githubusercontent.com/13107421/192618332-63a82e7b-0965-47f8-a32e-2d1a6a57d5c4.png)\r\n\r\n### Case 2\r\n\r\n```\r\nimport 'zone.js';\r\n\r\nPromise.reject(new Error('test error'));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nUnhandled Promise rejection: test error ; Zone: <root> ; Task: null ; Value: Error: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/not-work-as-expected.js:3:16\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12) Error: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/not-work-as-expected.js:3:16\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12)\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nBrowser output:\r\n![image](https://user-images.githubusercontent.com/13107421/192618269-ae0bad68-611e-477a-b438-fcf25eff7b56.png)\r\n\r\n\r\nUnhandledPromiseRejection error is thrown only without finally callback, exit code was 0\r\n\r\n\r\n## Workaround\r\n\r\n```\r\nimport 'zone.js';\r\n\r\ntry {\r\n  await Promise.reject(new Error('test error'));\r\n} finally {\r\n  console.log('finally');\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nUnhandled Promise rejection: test error ; Zone: <root> ; Task: null ; Value: Error: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/workaround.js:4:24\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12) Error: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/workaround.js:4:24\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12)\r\nfinally\r\nnode:internal/process/esm_loader:94\r\n    internalBinding('errors').triggerUncaughtException(\r\n                              ^\r\n\r\nError: test error\r\n    at file:///C:/Users/User/IdeaProjects/aap/zone-js-bug-reproduction/workaround.js:4:24\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)\r\n    at async loadESM (node:internal/process/esm_loader:88:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12)\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nBrowser output: \r\n![image](https://user-images.githubusercontent.com/13107421/192618157-5c794d10-0f77-445d-bcd8-59a6732b4129.png)\r\n\r\nError reported twice: UnhandledPromiseRejection and Error('test error'). Expected no UnhandledPromiseRejection from Zone\r\n\r\n## Side effect\r\n\r\nUnhandled errors in promises with finally callback is missing. Console is empty. Logging systems also do not see such errors.\r\n\r\nIn browser the same situation.\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n\"zone.js\": \"^0.11.8\"\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/47562","RelatedDescription":"Open issue \"Promise rejection with finally, does not throw unhandled rejection\" (#47562)"},{"Id":"1388223914","IsPullRequest":true,"CreatedAt":"2022-09-27T18:57:47","Actor":"dylhunn","Number":"47561","RawContent":null,"Title":"refactor(compiler): Add `getPotentialTemplateDirectives` API method.","State":"open","Body":"`getPotentialTemplateDirectives` returns possible directives which can be used in the provided context, whether already in scope or requiring an import.\r\n\r\nThis is necessary to implement auto-import support for standalone components in the language service.\r\n\r\nThis is fourth in an ongoing sequence of PRs, including #47181, #47180, and #47166.","Url":"https://github.com/angular/angular/pull/47561","RelatedDescription":"Open PR \"refactor(compiler): Add `getPotentialTemplateDirectives` API method.\" (#47561)"},{"Id":"1387806553","IsPullRequest":false,"CreatedAt":"2022-09-27T13:50:42","Actor":"bob-watson","Number":"47559","RawContent":null,"Title":"System configuration guides for using and developing angular need more detail.","State":"open","Body":"### Describe the problem that you experienced\n\nTrying to install the required software to develop with and develop for Angular and found the installation instructions have many holes that require numerous trips to stackoverflow et al.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/setup-local\n\n### Describe what you were looking for in the documentation\n\nThe software, and its dependencies, necessary to develop with and for angular.,\n\n### Describe the actions that led you to experience the problem\n\nTrying to prepare a development environment to build and update angular docs\n\n### Describe what you want to experience that would fix the problem\n\nStep by step instructions to install and verify the required software with sufficient information about sequence, and versions \n\n### Add a screenshot if that helps illustrate the problem\n\nN/A\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nN/A\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nN/A\n```\n\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nNone\n```\n","Url":"https://github.com/angular/angular/issues/47559","RelatedDescription":"Open issue \"System configuration guides for using and developing angular need more detail.\" (#47559)"},{"Id":"1387785303","IsPullRequest":false,"CreatedAt":"2022-09-27T13:38:21","Actor":"JeanMeche","Number":"47558","RawContent":null,"Title":"Can't subclass FormControl<T>","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nYes, sort of (before Angular 14, FormControl wasn't generic) \r\n\r\n### Description\r\n\r\nWhen trying to subclass `FormControl` , TS triggers the following error : `TS2510 : Base constructors must all have the same return type`\r\n\r\n```\r\nimport { FormControl, AbstractControl } from '@angular/forms';\r\n\r\nexport class Control<T> extends FormControl<T> {}\r\n```\r\n\r\nI suspect the definition of [ɵFormControlCtor](https://github.com/angular/angular/blob/85b5d125be4c689f892c6c50b94c593b85b513de/packages/forms/src/model/form_control.ts#L358) to be that cause and [#35387](https://github.com/microsoft/TypeScript/issues/35387) to be the root cause of that. \r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n[Playground](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgMWiAwhAdjKEA2ANHAIIBGAzrgIYDGMmOe+cAvnAGZ4hwDkAAtSwBzAK75qUAPQc0FXgG4AsAChVAUwAekWHFoSKFOI1wEAPABUAfHC0x1WACZHUUDNlP5LNhKyA)\r\n\r\n\r\nAny thoughts to share on that ? ","Url":"https://github.com/angular/angular/issues/47558","RelatedDescription":"Open issue \"Can't subclass FormControl<T>\" (#47558)"},{"Id":"1387396734","IsPullRequest":true,"CreatedAt":"2022-09-27T09:05:23","Actor":"gkalpak","Number":"47554","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 556a775f3","State":"open","Body":"Updating [angular#main](https://github.com/angular/angular/tree/main) from [cli-builds#main](https://github.com/angular/cli-builds/tree/main).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/4a6e62d46...556a775f3):\n\n**Modified**\n- help/build.json\n- help/test.json","Url":"https://github.com/angular/angular/pull/47554","RelatedDescription":"Open PR \"build(docs-infra): upgrade cli command docs sources to 556a775f3\" (#47554)"},{"Id":"1387344568","IsPullRequest":false,"CreatedAt":"2022-09-27T08:29:59","Actor":"pkozlowski-opensource","Number":"47553","RawContent":null,"Title":"Computed properties (model => model synchronisation)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nAngular dirty-checking mechanism works well for synchronising (propagating) model changes to the DOM. However, there are legitimate situations where one would like to compute / derive a new model value (from the existing model values) before rendering. Angular has no such concept - even if requested by users (ex.: #20472).\r\n\r\n### Proposed solution\r\n\r\nWe don't have any concrete solution proposal at the moment but we are exploring the space and will open a RFC when the solution space becomes clearer. But even without the concrete proposal on a table, there are certain properties that we would like to see in the final solution:\r\n* semantics of \"recompute only if one of the dependencies changed\";\r\n* composability: it should be possible to construct of chain of computed values (computed depending on other computed);\r\n* great integration in the framework, ex.:\r\n   * `@Input` - it should be possible to compute new model value based on input values changing over time;\r\n   * convenient syntax for accessing computed values in a component / teamplate.\r\n\r\n### Alternatives considered\r\n\r\nWhile Angular doesn't have the dedicated concept of the computed properties, there are several existing mechanisms that can serve the purpose (although with different caveats). Here is an overview of the possible approaches that work today.\r\n\r\n#### Use an external reactivity system\r\n\r\nMany Angular users integrate RxJS, or similar push-based reactivity systems, into their template rendering pipeline. Most (all?) of the push-based reactivity systems have a concept of deriving values (ex. [combinelatest](https://www.learnrxjs.io/learn-rxjs/operators/combination/combinelatest) in RxJS).\r\n\r\n#### Use memoization \r\n\r\nWe could introduce a simple `memo` utility function. A memo function could just compare previous / new arguments and execute re-computation when needed, similar to what the pure pipe does today. Ex. (taken from #46135):\r\n\r\n```typescript\r\nexport class AppComponent {\r\n  fruit = 'banana';\r\n  idFruit = 0;\r\n\r\n  getNameFruitUrl = memo((name: string) => `/fruits/${name}.jpg`);\r\n\r\n  getIdFruitUrl = memo(() => `/fruits/${this.idFruit}.jpg`, () => [this.idFruit]);\r\n\r\n  getLargeFruitUrl = memo((large?: boolean) => `/${large ? 'large' : 'small'}/${this.fruit}.jpg`,\r\n    () => [this.fruit]\r\n  );\r\n}\r\n```\r\nHere is a working stackblitz: https://stackblitz.com/edit/angular-ivy-txzpmf?file=src%2Fapp%2Fapp.component.ts,src%2Fapp%2Fmemo.ts\r\n\r\n### Existing issues / PRs\r\n\r\nThe idea of computed properties was discussed in the past in the issue tracker - most notably in #20472 (which generated number of comments and ~70 upvotes).","Url":"https://github.com/angular/angular/issues/47553","RelatedDescription":"Open issue \"Computed properties (model => model synchronisation)\" (#47553)"},{"Id":"1387246936","IsPullRequest":true,"CreatedAt":"2022-09-27T07:18:45","Actor":"crisbeto","Number":"47552","RawContent":null,"Title":"fix(compiler): allow hgroup element","State":"open","Body":"Fixes that the compiler didn't allow `hgroup` elements, because they weren't in the schema.\r\n\r\nFixes #47545.","Url":"https://github.com/angular/angular/pull/47552","RelatedDescription":"Open PR \"fix(compiler): allow hgroup element\" (#47552)"},{"Id":"1387097690","IsPullRequest":true,"CreatedAt":"2022-09-27T05:05:09","Actor":"angular-robot","Number":"47551","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/babel__traverse](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__traverse) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | dependencies | patch | [`7.18.1` -> `7.18.2`](https://renovatebot.com/diffs/npm/@types%2fbabel__traverse/7.18.1/7.18.2) |\n| [io_bazel_rules_sass](https://togithub.com/bazelbuild/rules_sass) | http_archive | minor | `1.54.9` -> `1.55.0` |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | patch | [`0.26.3` -> `0.26.4`](https://renovatebot.com/diffs/npm/magic-string/0.26.3/0.26.4) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_sass</summary>\n\n### [`v1.55.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.54.9...1.55.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.54.9...1.55.0)\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string</summary>\n\n### [`v0.26.4`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0264-httpsgithubcomrich-harrismagic-stringcomparev0263v0264-2022-09-22)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.26.3...v0.26.4)\n\n##### Features\n\n-   fix `.replace()` when searching string, add `.replaceAll()` ([#&#8203;222](https://togithub.com/rich-harris/magic-string/issues/222)) ([04a05bd](https://togithub.com/rich-harris/magic-string/commit/04a05bdc9bf56e00e616a0ae07923fbd9b63fbd0))\n\n##### Performance Improvements\n\n-   avoiding use of Object.defineProperty in Chunk constructor ([#&#8203;219](https://togithub.com/rich-harris/magic-string/issues/219)) ([130794b](https://togithub.com/rich-harris/magic-string/commit/130794bb8bfd9f21eb1f50c36a1da8eb5443d256))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular/pull/47551","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#47551)"},{"Id":"1386897050","IsPullRequest":true,"CreatedAt":"2022-09-27T00:12:59","Actor":"sonukapoor","Number":"47550","RawContent":null,"Title":"perf(http): made errors in the http package tree shakeable","State":"open","Body":"This moves all the errors into a model that can be tree shaken away.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/47550","RelatedDescription":"Open PR \"perf(http): made errors in the http package tree shakeable\" (#47550)"},{"Id":"1386641856","IsPullRequest":true,"CreatedAt":"2022-09-26T20:43:25","Actor":"crisbeto","Number":"47548","RawContent":null,"Title":"build: fix rxjs 7 build failure","State":"closed","Body":"Fixes that the `node` typings weren't included in the rxjs 7 typings test.","Url":"https://github.com/angular/angular/pull/47548","RelatedDescription":"Closed or merged PR \"build: fix rxjs 7 build failure\" (#47548)"},{"Id":"1386367932","IsPullRequest":true,"CreatedAt":"2022-09-26T16:17:10","Actor":"atcastle","Number":"47547","RawContent":null,"Title":"feat(common): add automatic srcset feature to ngOptimizedImage","State":"open","Body":"This PR adds a feature for automatic srcset generation to the NgOptimizedImage directive. Srcsets are generated as density selectors (eg \"1x\", \"2x\") if there is no `sizes` prop provided, or with responsive srcsets with a range of pixel values if a `sizes` prop exists. These responsive breakpoints are user-configurable using a new provider called ImageConfig.\r\n\r\nThe automatic srcset can be disabled with a new `unoptimized` attribute, or via the ImageConfig provider.\r\n\r\nNote: This PR only contains unit testing of this feature. End-to-end tests will be added shortly. Opening this now to begin discussion with @pkozlowski-opensource and @AndrewKushnir.\r\n\r\n// CC: @kara \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Feature\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/47547","RelatedDescription":"Open PR \"feat(common): add automatic srcset feature to ngOptimizedImage\" (#47547)"},{"Id":"1385568949","IsPullRequest":true,"CreatedAt":"2022-09-26T07:26:58","Actor":"alvaromartmart","Number":"47546","RawContent":null,"Title":"docs(forms): setErrors emitEvent default value","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] **(Not relevant)** Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nAngular documentation doesn't indicate what's the default value for `AbstractControl.setErrors` `emitEvent` flag.\r\nAccording to [the code](https://github.com/angular/angular/blob/14.2.3/packages/forms/src/model/abstract_model.ts#L1106-L1133) it seems the behaviour is the same as in other methods (emit event unless `emitEvent` is _explicictly_ set to `false`).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/47546","RelatedDescription":"Open PR \"docs(forms): setErrors emitEvent default value\" (#47546)"},{"Id":"1385190329","IsPullRequest":false,"CreatedAt":"2022-09-25T22:55:32","Actor":"johnnygerard","Number":"47545","RawContent":null,"Title":"'hgroup' is not a known element","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nMy issue is identical to #38831 which was closed because \"the hgroup element has been removed from the HTML5 (W3C) specification\".\r\n\r\nExcept that the latest HTML5 standard, i.e. [HTML 5.3](https://www.w3.org/TR/2021/NOTE-html53-20210128/), has been retired since January 28, 2021.\r\nThe latest HTML standard includes the [hgroup element](https://html.spec.whatwg.org/multipage/sections.html#the-hgroup-element) and all major browsers [support it](https://caniuse.com/?search=hgroup).\r\n\r\nCan hgroup be added to the list of known elements?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.2.2\r\nNode: 16.17.0\r\nPackage Manager: npm 8.19.2 \r\nOS: linux x64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1402.2 (cli-only)\r\n@angular-devkit/core         14.2.2 (cli-only)\r\n@angular-devkit/schematics   14.2.2 (cli-only)\r\n@schematics/angular          14.2.2 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/47545","RelatedDescription":"Open issue \"'hgroup' is not a known element\" (#47545)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1389621754","IsPullRequest":false,"CreatedAt":"2022-09-28T16:13:02","Actor":"Lonli-Lokli","Number":"23976","RawContent":null,"Title":"Add `--standalone` option to `ng new`","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nRight now `ng new`  do not use standalone application bootstrap, but usual app instead. \r\nNw option should change application to the standalone option, without AppModule\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/23976","RelatedDescription":"Open issue \"Add `--standalone` option to `ng new`\" (#23976)"},{"Id":"1389457171","IsPullRequest":false,"CreatedAt":"2022-09-28T15:45:18","Actor":"automaticdreams","Number":"23973","RawContent":null,"Title":"ng test fails on new project","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCreate a new app using cli\r\nrun `ng test`\r\nobserve failures as follows\r\n``` 0 specs, 2 failures, randomized with seed [02467](http://localhost:9877/context.html?seed=02467)\r\nError during loading: Uncaught SyntaxError: Unexpected token '?' in http://localhost:9877/_karma_webpack_/vendor.js line 5668\r\nError during loading: Uncaught SyntaxError: Unexpected token '.' in http://localhost:9877/_karma_webpack_/main.js line 37```\n\n### Minimal Reproduction\n\nng new my-app\r\ncd my-app\r\nng test\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.2.4\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1 \r\nOS: darwin x64\r\n\r\nAngular: 14.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.4\r\n@angular-devkit/build-angular   14.2.4\r\n@angular-devkit/core            14.2.4\r\n@angular-devkit/schematics      14.2.4\r\n@angular/cli                    14.2.4\r\n@schematics/angular             14.2.4\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\nthis is running on mac 12.5 monterey","Url":"https://github.com/angular/angular-cli/issues/23973","RelatedDescription":"Closed issue \"ng test fails on new project\" (#23973)"},{"Id":"1383793381","IsPullRequest":true,"CreatedAt":"2022-09-28T15:37:54","Actor":"alan-agius4","Number":"23950","RawContent":null,"Title":"Remove karma.conf.js from newly generated projects","State":"closed","Body":"**feat(@schematics/angular): remove karma.conf.js from newly generated projects**\r\n    \r\n`@angular-devkit/build-angular` now has a built in Karma config. Users can still create their own Karma configuration if they want to override the default configuration.\r\n\r\n**feat(@angular-devkit/build-angular): providing a karma config is now optional**\r\n    \r\nKarma will now use a builtin config when the `karmaConfig` is not specified.","Url":"https://github.com/angular/angular-cli/pull/23950","RelatedDescription":"Closed or merged PR \"Remove karma.conf.js from newly generated projects\" (#23950)"},{"Id":"1389037852","IsPullRequest":true,"CreatedAt":"2022-09-28T15:37:34","Actor":"alan-agius4","Number":"23967","RawContent":null,"Title":"fix(@angular-devkit/build-angular): support Yarn PNP resolution in modern SASS API","State":"closed","Body":"\r\nThis change add a Sass File importer that uses Webpack resolvers to better support scenarios when node packages are not stored in node_modules, such as Yarn PNP.\r\n","Url":"https://github.com/angular/angular-cli/pull/23967","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): support Yarn PNP resolution in modern SASS API\" (#23967)"},{"Id":"1389547875","IsPullRequest":false,"CreatedAt":"2022-09-28T15:19:58","Actor":"dirthsj","Number":"23975","RawContent":null,"Title":"Support Powershell Register-ArgumentCompleter","State":"open","Body":"### Command\n\nhelp\n\n### Description\n\n**Note: I was not able to select [completion](https://angular.io/cli/completion) in the dropdown for command, so I have selected `help` instead.**\r\n\r\nPlease support autocompletion in PowerShell via [Register-ArgumentCompleter](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter)\n\n### Describe the solution you'd like\n\nng completion works on Powershell\n\n### Describe alternatives you've considered\n\nN/A","Url":"https://github.com/angular/angular-cli/issues/23975","RelatedDescription":"Open issue \"Support Powershell Register-ArgumentCompleter\" (#23975)"},{"Id":"1389368367","IsPullRequest":true,"CreatedAt":"2022-09-28T15:16:45","Actor":"alan-agius4","Number":"23972","RawContent":null,"Title":"test: reduce polling test median greatest value","State":"closed","Body":"This is an effort to reduce the flakiness of this test.\r\n","Url":"https://github.com/angular/angular-cli/pull/23972","RelatedDescription":"Closed or merged PR \"test: reduce polling test median greatest value\" (#23972)"},{"Id":"1389485378","IsPullRequest":true,"CreatedAt":"2022-09-28T14:43:04","Actor":"alan-agius4","Number":"23974","RawContent":null,"Title":"Bump version to \"v15.0.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23974","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.0-next.3\" with changelog.\" (#23974)"},{"Id":"1389037412","IsPullRequest":true,"CreatedAt":"2022-09-28T13:28:15","Actor":"alan-agius4","Number":"23966","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fix crash when Sass error occurs","State":"closed","Body":"In some cases the build will crash when there is a Sass error due to the fact that the `span` property on the Error instance cannot be cloned.\r\n\r\n```\r\n  process.nextTick(() => { throw err; });\r\n                           ^\r\n\r\nDataCloneError: function StaticClosure() {\r\n    } could not be cloned.\r\n    at MessagePort.<anonymous> (/node_modules/@angular-devkit/build-angular/src/sass/worker.js:61:41)\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/23966","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fix crash when Sass error occurs\" (#23966)"},{"Id":"1389216536","IsPullRequest":true,"CreatedAt":"2022-09-28T11:46:16","Actor":"alan-agius4","Number":"23971","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle conditional exports in `scripts` and `styles` option","State":"open","Body":"\r\n\r\nWith this change scripts and styles options better support Yarn PNP resolution.\r\n\r\nCloses #23568\r\n","Url":"https://github.com/angular/angular-cli/pull/23971","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): handle conditional exports in `scripts` and `styles` option\" (#23971)"},{"Id":"1389088073","IsPullRequest":true,"CreatedAt":"2022-09-28T11:30:13","Actor":"angular-robot","Number":"23969","RawContent":null,"Title":"build: update dependency ng-packagr to v15.0.0-next.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`15.0.0-next.2` -> `15.0.0-next.3`](https://renovatebot.com/diffs/npm/ng-packagr/15.0.0-next.2/15.0.0-next.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ng-packagr/ng-packagr</summary>\n\n### [`v15.0.0-next.3`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#&#8203;1500-next3-httpsgithubcomng-packagrng-packagrcompare1500-next21500-next3-2022-09-28)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/15.0.0-next.2...15.0.0-next.3)\n\n##### ⚠ BREAKING CHANGES\n\n-   Deprecated support for Stylus has been removed. The Stylus package has never reached a stable version and it's usage in the ng-packagr is minimal. It's recommended to migrate to another CSS preprocessor that the ng-packagr supports.\n\n##### Features\n\n-   switch to sass modern API ([b1ebee3](https://togithub.com/ng-packagr/ng-packagr/commit/b1ebee34c7c89cb3d91cb49c74b9c013e84da125))\n\n##### Bug Fixes\n\n-   grammatical update error message ([6d7d2a9](https://togithub.com/ng-packagr/ng-packagr/commit/6d7d2a97b2c9586bce51a92d3918051be0441460))\n\n-   remove support for Stylus ([2f92ab8](https://togithub.com/ng-packagr/ng-packagr/commit/2f92ab8e6dabc75d6e4f5793b7de6115848bdf6c))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23969","RelatedDescription":"Closed or merged PR \"build: update dependency ng-packagr to v15.0.0-next.3\" (#23969)"},{"Id":"1389104052","IsPullRequest":true,"CreatedAt":"2022-09-28T11:29:46","Actor":"alan-agius4","Number":"23970","RawContent":null,"Title":"docs: release notes for the v14.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/23970","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.4 release\" (#23970)"},{"Id":"1389074239","IsPullRequest":true,"CreatedAt":"2022-09-28T10:16:36","Actor":"alan-agius4","Number":"23968","RawContent":null,"Title":"Bump version to \"v14.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23968","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.4\" with changelog.\" (#23968)"},{"Id":"1388756075","IsPullRequest":true,"CreatedAt":"2022-09-28T07:19:16","Actor":"angular-robot","Number":"23963","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.19.1` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.19.1/7.19.3) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.19.1` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.19.1/7.19.3) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.19.0` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.19.0/7.19.3) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.19.0` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.19.0/7.19.3) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.19.1` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.19.1/7.19.3) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.19.1` -> `7.19.3`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.19.1/7.19.3) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | patch | `v1.12.0` -> `v1.12.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.19.3`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7193-2022-09-27)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.19.1...v7.19.3)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-proposal-decorators`\n    -   [#&#8203;8566](https://togithub.com/babel/babel/pull/8566) Correctly update bindings of decorated class declarations ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-parser`\n    -   [#&#8203;14974](https://togithub.com/babel/babel/pull/14974) fix: Normal parsing of `JSXText` following `JSXSpreadChild` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n    -   [#&#8203;14941](https://togithub.com/babel/babel/pull/14941) fix: Support local exports in TS `declare module`s ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n    -   [#&#8203;14940](https://togithub.com/babel/babel/pull/14940) fix: allow ts redeclaration with `import =` and `var` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-generator`\n    -   [#&#8203;14962](https://togithub.com/babel/babel/pull/14962) Fix printing of Flow internal slot functions ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-cli`\n    -   [#&#8203;14950](https://togithub.com/babel/babel/pull/14950) Emit `@babel/cli` source maps based on configuration files ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;14946](https://togithub.com/babel/babel/pull/14946) fix: ts exported vars are shadowed by `declare` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n##### :nail_care: Polish\n\n-   `babel-core`\n    -   [#&#8203;14954](https://togithub.com/babel/babel/pull/14954) Optional filename when preset uses fn test/include/exclude ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-helper-compilation-targets`, `babel-helper-transform-fixture-test-runner`, `babel-parser`, `babel-preset-env`, `babel-traverse`\n    -   [#&#8203;14961](https://togithub.com/babel/babel/pull/14961) chore: use `c8` for coverage testing ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;14952](https://togithub.com/babel/babel/pull/14952) \\[ts] remove nested `declare namespace` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.12.1`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.12.1)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.12.0...v1.12.1)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.12.1\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"79381b0975ba7d2d5653239e5bab12cf54d89b10217fe771b8edd95047a2e44b\",\n    strip_prefix = \"bazel-lib-1.12.1\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.12.1.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   chore: upgrade skylib by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/248](https://togithub.com/aspect-build/bazel-lib/pull/248)\n-   refactor: move Aspect Workflows configuration files to new location by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/aspect-build/bazel-lib/pull/249](https://togithub.com/aspect-build/bazel-lib/pull/249)\n-   fix: use person as release author by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/250](https://togithub.com/aspect-build/bazel-lib/pull/250)\n-   refactor: give internal impl methods meaningful names by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/aspect-build/bazel-lib/pull/252](https://togithub.com/aspect-build/bazel-lib/pull/252)\n-   chore(deps): update dependency bazel to v5.3.1 by [@&#8203;renovate](https://togithub.com/renovate) in [https://github.com/aspect-build/bazel-lib/pull/225](https://togithub.com/aspect-build/bazel-lib/pull/225)\n-   chore(deps): update dependency io_bazel_rules_go to v0.35.0 by [@&#8203;renovate](https://togithub.com/renovate) in [https://github.com/aspect-build/bazel-lib/pull/191](https://togithub.com/aspect-build/bazel-lib/pull/191)\n-   chore(deps): remove build_bazel_integration_testing by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/aspect-build/bazel-lib/pull/253](https://togithub.com/aspect-build/bazel-lib/pull/253)\n-   fix: isolate bzl_libary targets for //lib/private:\\*.bzl i //lib/private/docs package so that platform_utils dep on @&#8203;local_config_platform//:constraints doesn't leak unless downstream consumer is generating docs by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/254](https://togithub.com/aspect-build/bazel-lib/pull/254)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.12.0...v1.12.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23963","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#23963)"},{"Id":"1388756158","IsPullRequest":true,"CreatedAt":"2022-09-28T07:19:02","Actor":"angular-robot","Number":"23964","RawContent":null,"Title":"build: update dependency typescript to v4.8.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/TypeScript)) | devDependencies | patch | [`4.8.3` -> `4.8.4`](https://renovatebot.com/diffs/npm/typescript/4.8.3/4.8.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/TypeScript</summary>\n\n### [`v4.8.4`](https://togithub.com/microsoft/TypeScript/releases/tag/v4.8.4)\n\n[Compare Source](https://togithub.com/Microsoft/TypeScript/compare/v4.8.3...v4.8.4)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-4-8/).\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for Typescript 4.8.0 (Beta)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.8.0%22+).\n-   [fixed issues query for Typescript 4.8.1 (RC)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.8.1%22+).\n-   [fixed issues query for Typescript 4.8.2 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.8.2%22+).\n-   [fixed issues query for Typescript 4.8.3 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.8.3%22+).\n-   [fixed issues query for Typescript 4.8.4 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.8.4%22+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [Visual Studio 2022/2019](https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.TypeScript-484) ([Select new version in project options](https://togithub.com/Microsoft/TypeScript/wiki/Updating-TypeScript-in-Visual-Studio-2017))\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23964","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v4.8.4\" (#23964)"},{"Id":"1386345717","IsPullRequest":true,"CreatedAt":"2022-09-28T07:16:37","Actor":"angular-robot","Number":"23958","RawContent":null,"Title":"build: update angular to f90a310","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `f547c40` -> `f90a310` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `f16e4a6` -> `6df2d55` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `6d46f74` -> `290c456` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `eb34192` -> `dece5ef` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `7002df0` -> `d017d8b` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `aa033bd` -> `fd1d10e` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `24af6a5` -> `fefa40b` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `6657165` -> `86958d1` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `fc14e05` -> `a2d6d6c` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `ebd36d3` -> `e049059` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `1c7be1e` -> `8122b1f` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `763d12b` -> `1c5e023` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `5900958` -> `8c3a9ec` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `d4a8ca5` -> `cde2884` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `9fd1ac0` -> `077b3bb` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `9f29548` -> `2b062e6` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `30d09ac` -> `399cfa3` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `d3d86aa` -> `d59c430` |\n| angular/dev-infra | action | digest | `dbe78a5` -> `40aaf38` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23958","RelatedDescription":"Closed or merged PR \"build: update angular to f90a310\" (#23958)"},{"Id":"1388778212","IsPullRequest":true,"CreatedAt":"2022-09-28T07:16:22","Actor":"angular-robot","Number":"23965","RawContent":null,"Title":"build: update ossf/scorecard-action action to v2.0.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | patch | `v2.0.3` -> `v2.0.4` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ossf/scorecard-action</summary>\n\n### [`v2.0.4`](https://togithub.com/ossf/scorecard-action/compare/v2.0.3...v2.0.4)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.0.3...v2.0.4)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23965","RelatedDescription":"Closed or merged PR \"build: update ossf/scorecard-action action to v2.0.4\" (#23965)"},{"Id":"1386136472","IsPullRequest":true,"CreatedAt":"2022-09-27T16:59:08","Actor":"alan-agius4","Number":"23957","RawContent":null,"Title":"Make karma main file optional","State":"closed","Body":"\r\n**feat(@schematics/angular): remove test.ts file from new projects**\r\n    \r\nThe test.ts is now included in `@angular-devkit/build-angular` and unless this needs to be customized is no longer needed to be provided.\r\n\r\n---\r\n\r\n\r\n**feat(@angular-devkit/build-angular): karma builder `main` option is now optional**\r\n    \r\nThe Karma builder `main` option is now optional. The default test bootstrapping is injected automatically in the bundle.","Url":"https://github.com/angular/angular-cli/pull/23957","RelatedDescription":"Closed or merged PR \"Make karma main file optional\" (#23957)"},{"Id":"1386345900","IsPullRequest":true,"CreatedAt":"2022-09-27T16:04:39","Actor":"angular-robot","Number":"23959","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23959","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#23959)"},{"Id":"1387100246","IsPullRequest":true,"CreatedAt":"2022-09-27T16:04:28","Actor":"angular-robot","Number":"23961","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/concatjs](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | minor | [`5.5.4` -> `5.6.0`](https://renovatebot.com/diffs/npm/@bazel%2fconcatjs/5.5.4/5.6.0) |\n| [@bazel/jasmine](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | minor | [`5.5.4` -> `5.6.0`](https://renovatebot.com/diffs/npm/@bazel%2fjasmine/5.5.4/5.6.0) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.38.0` -> `5.38.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.38.0/5.38.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.38.0` -> `5.38.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.38.0/5.38.1) |\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | minor | `5.5.4` -> `5.6.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v5.6.0`](https://togithub.com/bazelbuild/rules_nodejs/blob/HEAD/CHANGELOG.md#&#8203;560-httpsgithubcombazelbuildrulesnodejscompare554560-2022-09-27)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.5.4...5.6.0)\n\n##### Bug Fixes\n\n-   **builtin:** properly quote env vars passed to nodejs_binary ([#&#8203;3553](https://togithub.com/bazelbuild/rules_nodejs/issues/3553)) ([ffa3ffb](https://togithub.com/bazelbuild/rules_nodejs/commit/ffa3ffb))\n-   **typescript:** include all .json in js_library DeclarationInfo ([#&#8203;3556](https://togithub.com/bazelbuild/rules_nodejs/issues/3556)) ([f297e81](https://togithub.com/bazelbuild/rules_nodejs/commit/f297e81)), closes [#&#8203;3551](https://togithub.com/bazelbuild/rules_nodejs/issues/3551)\n-   canonicalize @&#8203;platforms//cpu:aarch64 ([#&#8203;3555](https://togithub.com/bazelbuild/rules_nodejs/issues/3555)) ([b341421](https://togithub.com/bazelbuild/rules_nodejs/commit/b341421)), closes [/github.com/bazelbuild/platforms/blob/212a486d66569b29c95b00364e2584e80fd08614/cpu/BUILD#L16-L20](https://togithub.com//github.com/bazelbuild/platforms/blob/212a486d66569b29c95b00364e2584e80fd08614/cpu/BUILD/issues/L16-L20)\n\n##### Features\n\n-   **create:** introduce `--workspaceDir` flag ([3a28a02](https://togithub.com/bazelbuild/rules_nodejs/commit/3a28a02))\n-   add support for darwin arm for concatjs ([#&#8203;3554](https://togithub.com/bazelbuild/rules_nodejs/issues/3554)) ([acf88a1](https://togithub.com/bazelbuild/rules_nodejs/commit/acf88a1))\n\n#### [5.5.4](https://togithub.com/bazelbuild/rules_nodejs/compare/5.5.3...5.5.4) (2022-09-10)\n\n##### Bug Fixes\n\n-   `ts_project` fail if `root_dir` used deep in source tree ([#&#8203;3535](https://togithub.com/bazelbuild/rules_nodejs/issues/3535)) ([dccbb63](https://togithub.com/bazelbuild/rules_nodejs/commit/dccbb63))\n-   make catch-all node_modules target name configurable in yarn_install and npm_install ([#&#8203;3538](https://togithub.com/bazelbuild/rules_nodejs/issues/3538)) ([6c462c4](https://togithub.com/bazelbuild/rules_nodejs/commit/6c462c4))\n\n#### [5.5.3](https://togithub.com/bazelbuild/rules_nodejs/compare/5.5.2...5.5.3) (2022-08-01)\n\n##### Bug Fixes\n\n-   delete ngrx from README. Currently not used ([#&#8203;3513](https://togithub.com/bazelbuild/rules_nodejs/issues/3513)) ([828d77c](https://togithub.com/bazelbuild/rules_nodejs/commit/828d77c))\n-   **concatjs:** sync with internal change to ensure it works with `tsickle` host ([#&#8203;3510](https://togithub.com/bazelbuild/rules_nodejs/issues/3510)) ([78a0528](https://togithub.com/bazelbuild/rules_nodejs/commit/78a0528))\n-   limit concurrency when generating BUILD files in npm_install and yarn_install ([#&#8203;3509](https://togithub.com/bazelbuild/rules_nodejs/issues/3509)) ([4001716](https://togithub.com/bazelbuild/rules_nodejs/commit/4001716))\n\n#### [5.5.2](https://togithub.com/bazelbuild/rules_nodejs/compare/5.5.1...5.5.2) (2022-07-10)\n\n##### Bug Fixes\n\n-   **builtin:** remove unnecessary loader script ([#&#8203;3495](https://togithub.com/bazelbuild/rules_nodejs/issues/3495)) ([1641136](https://togithub.com/bazelbuild/rules_nodejs/commit/1641136))\n-   **create:** make `--packageManager` flag work ([#&#8203;3498](https://togithub.com/bazelbuild/rules_nodejs/issues/3498)) ([cd3db48](https://togithub.com/bazelbuild/rules_nodejs/commit/cd3db48))\n\n#### [5.5.1](https://togithub.com/bazelbuild/rules_nodejs/compare/5.5.0...5.5.1) (2022-06-24)\n\n##### Bug Fixes\n\n-   **builtin:** fix an bug where a nodejs_binary would fail to resolve an npm package when the linker is disabled ([#&#8203;3492](https://togithub.com/bazelbuild/rules_nodejs/issues/3492)) ([8a2dfc8](https://togithub.com/bazelbuild/rules_nodejs/commit/8a2dfc8))\n-   **typescript:** remove protobufjs dependency ([#&#8203;3491](https://togithub.com/bazelbuild/rules_nodejs/issues/3491)) ([d46502d](https://togithub.com/bazelbuild/rules_nodejs/commit/d46502d))\n-   deterministic output from ts_options_validator ([#&#8203;3462](https://togithub.com/bazelbuild/rules_nodejs/issues/3462)) ([d69c646](https://togithub.com/bazelbuild/rules_nodejs/commit/d69c646)), closes [#&#8203;3461](https://togithub.com/bazelbuild/rules_nodejs/issues/3461)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.38.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5381-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5380v5381-2022-09-26)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.38.0...v5.38.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.38.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5381-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5380v5381-2022-09-26)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.38.0...v5.38.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23961","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#23961)"},{"Id":"1387286121","IsPullRequest":true,"CreatedAt":"2022-09-27T08:41:03","Actor":"alan-agius4","Number":"23962","RawContent":null,"Title":"CI build-bazel-e2e fix","State":"closed","Body":"See each commit.","Url":"https://github.com/angular/angular-cli/pull/23962","RelatedDescription":"Closed or merged PR \"CI build-bazel-e2e fix\" (#23962)"},{"Id":"1386478080","IsPullRequest":false,"CreatedAt":"2022-09-26T18:00:55","Actor":"pelord","Number":"23960","RawContent":null,"Title":"Library2project @angular-devkit/build-angular:dev-server 14.1.2 not reloading node_modules within project","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12.x\n\n### Description\n\nI'm using @angular-devkit/build-angular:dev-server 14.1.2 . I was told, this is webpack running behind.\r\n\r\nHere my setup:\r\nI'm developping a lib, (igo2-lib) and a related sub project (igo2) using the lib components.\r\n\r\nIn a dev mode, I edit my libs, I build and copy the dist folder from the lib to the igo2/node_modules/https://github.com/igo2 directory.\r\n\r\nPreviously, my changes were applied to the started instance. Webpack was detecting the changes.\r\n\r\nDo you know to allow webpack to reload with the new node_modules applied?\n\n### Minimal Reproduction\n\nTry IGO2-LIB with IGO2 project (on next branch) to test\r\n\r\nhttps://github.com/infra-geo-ouverte/igo2/\r\nhttps://github.com/infra-geo-ouverte/igo2-lib/\r\n\r\n\r\nIn a dev mode, edit lib, build and copy the dist folder from the lib to the igo2/node_modules/https://github.com/igo2 directory.\r\nOn the first start, the content is change.. but if you edit again the node_modules content, the changes do not appear. \r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 14.1.2\r\nNode: 16.16.0\r\nPackage Manager: npm 8.14.0\r\nOS: win32 x64\r\n\r\nAngular: 14.1.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1401.2\r\n@angular-devkit/build-angular   14.1.2\r\n@angular-devkit/core            13.3.8\r\n@angular-devkit/schematics      13.3.8\r\n@angular/cdk                    14.2.2\r\n@schematics/angular             14.1.2\r\nng-packagr                      14.1.0\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\r\nwebpack                         5.74.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/23960","RelatedDescription":"Closed issue \"Library2project @angular-devkit/build-angular:dev-server 14.1.2 not reloading node_modules within project\" (#23960)"},{"Id":"1385734106","IsPullRequest":true,"CreatedAt":"2022-09-26T15:39:55","Actor":"alan-agius4","Number":"23955","RawContent":null,"Title":"feat(@schematics/angular): add migration to remove require calls from karma builder main file","State":"closed","Body":"\r\n    \r\nWith the recent changes in build-angular the `require.context` calls have become unneeded.\r\n\r\n\r\nBREAKING CHANGE: `require.context` are no longer parsed. Webpack specific features are not supported nor guaranteed to work in the future.","Url":"https://github.com/angular/angular-cli/pull/23955","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add migration to remove require calls from karma builder main file\" (#23955)"},{"Id":"1385555905","IsPullRequest":true,"CreatedAt":"2022-09-26T13:31:02","Actor":"angular-robot","Number":"23954","RawContent":null,"Title":"build: lock file maintenance-","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23954","RelatedDescription":"Closed or merged PR \"build: lock file maintenance-\" (#23954)"},{"Id":"1385743978","IsPullRequest":true,"CreatedAt":"2022-09-26T10:37:17","Actor":"alan-agius4","Number":"23956","RawContent":null,"Title":"Update lockfile","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23956","RelatedDescription":"Closed or merged PR \"Update lockfile\" (#23956)"},{"Id":"1384523081","IsPullRequest":true,"CreatedAt":"2022-09-26T09:29:44","Actor":"angular-robot","Number":"23952","RawContent":null,"Title":"build: update angular to f547c40","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `3b6c753` -> `f547c40` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `45eb138` -> `f16e4a6` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `03740d9` -> `6d46f74` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `4c175f6` -> `eb34192` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `b39a85d` -> `7002df0` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5741cf2` -> `aa033bd` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `6754491` -> `24af6a5` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `2a738e0` -> `6657165` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `f5ae296` -> `fc14e05` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `07f59d8` -> `ebd36d3` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `9ce06ce` -> `1c7be1e` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `1476ae5` -> `763d12b` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0cb02ba` -> `5900958` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `d10ab8a` -> `d4a8ca5` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `70a1caf` -> `9fd1ac0` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `50c534a` -> `9f29548` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `9f75324` -> `30d09ac` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `68c6342` -> `d3d86aa` |\n| angular/dev-infra | action | digest | `989b9f5` -> `dbe78a5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMi4xOTUuNSIsInVwZGF0ZWRJblZlciI6IjMyLjE5NS41In0=-->\n","Url":"https://github.com/angular/angular-cli/pull/23952","RelatedDescription":"Closed or merged PR \"build: update angular to f547c40\" (#23952)"},{"Id":"1384602178","IsPullRequest":true,"CreatedAt":"2022-09-26T09:28:55","Actor":"devversion","Number":"23953","RawContent":null,"Title":"build: setup remote execution through shared command","State":"closed","Body":"Sets up remote execution through a shared org-wide command.","Url":"https://github.com/angular/angular-cli/pull/23953","RelatedDescription":"Closed or merged PR \"build: setup remote execution through shared command\" (#23953)"},{"Id":"1383417579","IsPullRequest":true,"CreatedAt":"2022-09-23T19:41:30","Actor":"alan-agius4","Number":"23947","RawContent":null,"Title":"feat(@angular-devkit/build-angular): remove `bundleDependencies` from server builder","State":"closed","Body":"\r\n\r\nThis commit removes the usages of `bundleDependencies` which does not correctly work as webpack will use `require` to import ESM module since we configure the server bundle to be outputted in CJS. Migrating fully to ESM is also currently not viable due to the lack of support from Domino.\r\nEven if full ESM was possible, using this option would have resulted in a runtime overhead as Angular libraries would be linked during runtime instead of compile time.\r\n\r\nBREAKING CHANGE:\r\nThe server builder `bundleDependencies` option has been removed. This option was used pre Ivy. Currently, using this option is unlikely to produce working server bundles.\r\n\r\nThe `externalDependencies` option can be used instead to exclude specific node_module packages from the final bundle.\r\n\r\nCloses #23905","Url":"https://github.com/angular/angular-cli/pull/23947","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): remove `bundleDependencies` from server builder\" (#23947)"},{"Id":"1383818244","IsPullRequest":true,"CreatedAt":"2022-09-23T18:46:59","Actor":"alan-agius4","Number":"23951","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add `ng-server-context` when using app-shell builder","State":"closed","Body":"With this change we configure the app-shell builder to set the `ɵSERVER_CONTEXT` private provider.\r\n\r\nFYI @AndrewKushnir ","Url":"https://github.com/angular/angular-cli/pull/23951","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): add `ng-server-context` when using app-shell builder\" (#23951)"},{"Id":"1383551821","IsPullRequest":false,"CreatedAt":"2022-09-23T12:53:43","Actor":"kenatwex","Number":"23948","RawContent":null,"Title":"compiler cannot build a simple with html or sass ","State":"closed","Body":"### Command\r\n\r\ncan someone talk to this please and offer some docs or standards? Also how this effects lazyloading in MFE's...thanks\r\n\r\nstandard angular use to be like this for scss code\r\n\r\n`\tbackground-image:  url(\"assets/images/login/background.png\");`\r\n\r\nnow its unknown\r\n\r\n`/Users/w509297/me/my/src/app/pages/login/login.component.scss:25:1: Can't resolve './assets/images/login/background.png' in '/Users/me/my/src/app/pages/login'`\r\n\r\nwhat is putting the dot slash at the front? baseHref in tsconfig? I cant seem to change that for anything different.\r\n\r\nBUT why does my webstorm IDE approve of and can navigate to it fine? Anything else dont navigate. My IDE KNOWS if the runtime for the cod is legit and this is hoakey\r\n\r\nthe only thing compiles is this\r\n\r\n`\tbackground-image:  url(\"/assets/images/login/background.png\");`\r\n\r\nand I dont want that I want to know whats messing up the root path to assets so I can have something predictable here for all my code\r\n\r\nstrange thing is if I put slash in front of the root of the path... IDE shows red error but cli compiles it fine\r\nand Im confused about impact to all our code\r\n\r\n### Is this a regression?\r\n\r\n- [ X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nSUBJECT: compiler cannot build a simple with html or sass \r\n\r\nangular is broken it cannot compile. This is simple to reproduce with your own quick project generation\r\n\r\n**tsconfig**\r\n```\r\n\t\t\"baseUrl\": \".\",\r\n\t\t\"baseUrl\": \"./\",\r\n\t\t\"baseUrl\": \"\",\r\n```\r\n\r\ntried all three nothing works\r\n\r\n**login.scss**\r\n\r\n```\r\n\t//background-image:  url(\"~/@mycorp/shared-root-ui-assets/assets/images/login/background.png\");\r\n\t//background-image:  url(\"@mycorp/shared-root-ui-assets/assets/images/login/background.png\");\r\n\t//background-image:  url(\"node_modules/@mycorp/shared-root-ui-assets/assets/images/login/background.png\");\r\n\t//background-image:  url(\"assets/images/login/background.png\");\r\n\tbackground-image:  url(\"/assets/images/login/background.png\");\r\n\t//background-image:  url(\"./assets/images/login/background.png\");\r\n```\r\n\r\ntried all 6 and only one compiles (the uncommented line)\r\n\r\n**login.html**\r\n\r\nfunctions do not work when they return the path to the asset\r\n```\r\n<img [src]=\"background()\" />\r\n<img [src]=\"logo()\" />\r\n```\r\n\r\n```\r\n<img src=\"assets/images/login/background.png\" />\r\n<img src=\"assets/images/logo.png\"/>\r\n<img src=\"./assets/images/login/background.png\" />\r\n<img src=\"./assets/images/logo.png\"/>\r\n<img src=\"/assets/images/login/background.png\" />\r\n<img src=\"/assets/images/logo.png\"/>\r\n```\r\n\r\n```\r\n\t<img src={{image}} />\r\n\t<img src={{logo}}/>\r\n```\r\n\r\n\r\nThe internet is littered with issues on this and theres no comprehensive documentation on how or why this is suppose to be coded.\r\n\r\nCan someone help here?\r\n\r\nCannot compile sass url's pointing to assets\r\nCannot compile html templates with <img> and [src] pointing to assets\r\ncannot display anything\r\n\r\nThe path the compiler is pivoting off of is either \".\" or the entire path of the working directory\r\n\r\nregardless nothing works\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nwhy is this not implemented\r\n\r\n### Exception or Error\r\n\r\n```text\r\nAn unhandled exception occurred: The ./dist/assets asset path must start with the project source root.\r\nSee \"/private/var/folders/9f/4_c945294tncdc7vdd30b3bc0000gq/T/ng-pGC00X/angular-errors.log\" for further details\r\n\r\n/Users/me/my/src/app/pages/login/login.component.scss:26:1: Can't resolve './assets/images/login/background.png' in '/Users/me/my/src/app/pages/login'\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nnx report   \r\n\r\n >  NX   Report complete - copy this into the issue template\r\n\r\n   Node : 16.17.0\r\n   OS   : darwin arm64\r\n   yarn : 1.22.18\r\n   \r\n   nx : 14.7.5\r\n   @nrwl/angular : 14.7.5\r\n   @nrwl/cypress : 14.7.5\r\n   @nrwl/detox : Not Found\r\n   @nrwl/devkit : 14.7.5\r\n   @nrwl/eslint-plugin-nx : 14.7.5\r\n   @nrwl/express : Not Found\r\n   @nrwl/jest : 14.7.5\r\n   @nrwl/js : 14.7.5\r\n   @nrwl/linter : 14.7.5\r\n   @nrwl/nest : Not Found\r\n   @nrwl/next : Not Found\r\n   @nrwl/node : 14.7.5\r\n   @nrwl/nx-cloud : 14.6.2\r\n   @nrwl/nx-plugin : 14.7.5\r\n   @nrwl/react : Not Found\r\n   @nrwl/react-native : Not Found\r\n   @nrwl/schematics : Not Found\r\n   @nrwl/storybook : 14.7.5\r\n   @nrwl/web : 14.7.5\r\n   @nrwl/workspace : 14.7.5\r\n   typescript : 4.7.4\r\n   ---------------------------------------\r\n   Local workspace plugins:\r\n   ---------------------------------------\r\n   Community plugins:\r\n   \t @fortawesome/angular-fontawesome: 0.10.2\r\n   \t @ngrx/component-store: 14.2.0\r\n   \t @ngrx/effects: 14.2.0\r\n   \t @ngrx/entity: 14.2.0\r\n   \t @ngrx/router-store: 14.2.0\r\n   \t @ngrx/store: 14.2.0\r\n   \t apollo-angular: 4.0.1\r\n   \t @buildmotion/angular: 13.0.1\r\n   \t @ngrx/schematics: 14.2.0\r\n   \t @ngrx/store-devtools: 14.2.0\r\n   \t @storybook/angular: 6.5.12\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\none would think after all the years of angular releases since 2,4,5,6,7,8,9,10,11,12,13,14\r\n\r\nthat this would be implemented to some degree for transpilation to succeed\r\n\r\nthis is fundamental to all web pages for angular\r\n\r\nit should be able to compile sass url'd assets\r\nit should be able to compile templates assets\r\n\r\n--base-href during build had no effect for development configuration\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/23948","RelatedDescription":"Closed issue \"compiler cannot build a simple with html or sass \" (#23948)"},{"Id":"1383687203","IsPullRequest":true,"CreatedAt":"2022-09-23T11:49:43","Actor":"alan-agius4","Number":"23949","RawContent":null,"Title":"fix(@angular-devkit/build-angular): show warning when using TypeScript target older then ES2022 in esbuild builder","State":"open","Body":"\r\nThis commits adds a warning similar to that in the Webpack builder.\r\n","Url":"https://github.com/angular/angular-cli/pull/23949","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): show warning when using TypeScript target older then ES2022 in esbuild builder\" (#23949)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1390060547","IsPullRequest":true,"CreatedAt":"2022-09-28T23:38:01","Actor":"mmalerba","Number":"25724","RawContent":null,"Title":"fix(material/schematics): add explicit typography @include in v15 update","State":"open","Body":"","Url":"https://github.com/angular/components/pull/25724","RelatedDescription":"Open PR \"fix(material/schematics): add explicit typography @include in v15 update\" (#25724)"},{"Id":"1389885917","IsPullRequest":true,"CreatedAt":"2022-09-28T20:04:39","Actor":"andrewseguin","Number":"25723","RawContent":null,"Title":"feat(material/core): remove typography styles from core mixin","State":"open","Body":"All internal clients include typography in their theme files and this can be safely removed. This assumes the `ng update` script will be updated to add `mat.all-component-typographies` before all `mat.core` calls.\r\n\r\nThe parameter must remain until all cases internally no longer pass the param as an argument\r\n\r\nBREAKING CHANGE:\r\n - `core()` mixin no longer provides typography styles. Applications must call component `typography` mixins to apply typography styles, or call `theme` mixins with a theme config containing typography.","Url":"https://github.com/angular/components/pull/25723","RelatedDescription":"Open PR \"feat(material/core): remove typography styles from core mixin\" (#25723)"},{"Id":"1389777935","IsPullRequest":true,"CreatedAt":"2022-09-28T18:52:49","Actor":"zarend","Number":"25722","RawContent":null,"Title":"Bump version to \"v15.0.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25722","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.0-next.2\" with changelog.\" (#25722)"},{"Id":"1389739989","IsPullRequest":true,"CreatedAt":"2022-09-28T17:54:30","Actor":"zarend","Number":"25721","RawContent":null,"Title":"docs: release notes for the v14.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/25721","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.3 release\" (#25721)"},{"Id":"1389737870","IsPullRequest":true,"CreatedAt":"2022-09-28T17:50:20","Actor":"zarend","Number":"25720","RawContent":null,"Title":"Bump version to \"v14.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25720","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.3\" with changelog.\" (#25720)"},{"Id":"1389572814","IsPullRequest":false,"CreatedAt":"2022-09-28T15:36:54","Actor":"tonyshare","Number":"25719","RawContent":null,"Title":"ngif (observable | async) cannot display Dom after add pipe function to  observable","State":"open","Body":"### What are you trying to do?\n\nIn the following component i create a `inferReady` subject variable, and two observable function, if `inferReady` add `pipe()`. The html Dom will not be displayed in browser. Is it a bug of angular?\r\n\r\n```\r\n@Component({\r\n  selector: 'my-app',\r\n  template: `\r\n    <p *ngIf=\"inferRight(1) | async\">this can be displayed</p> \r\n    <p *ngIf=\"inferError(1) | async\">this cannot be displayed</p> \r\n  `,\r\n  styleUrls: [ './app.component.css' ]\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  public inferReady = new Subject<boolean>();\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.inferReady.next(true);\r\n  }\r\n\r\n  inferError(id: number): Observable<boolean> {\r\n    return this.inferReady.pipe(\r\n      switchMap(() => {return of(true)})\r\n    )\r\n  }\r\n\r\n  inferRight(id: number): Observable<boolean> {\r\n    return this.inferReady;\r\n  }\r\n}\r\n```\n\n### What troubleshooting steps have you tried?\n\nI compared two functions, `inferError` didn't work, the `inferRight` is correct. I confused with this, what's the difference between the two function?\r\n```\r\ninferError(id: number): Observable<boolean> {\r\n    return this.inferReady.pipe(\r\n      switchMap(() => {return of(true)})\r\n    )\r\n  }\r\n\r\n  inferRight(id: number): Observable<boolean> {\r\n    return this.inferReady;\r\n  }\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\nyou can see the program on stackblitz. the link is https://stackblitz.com/edit/angular-ivy-ngif-async-example-cugjrx?file=src%2Fapp%2Fapp.component.ts\n\n### Environment\n\n- Angular: 10.0.9\r\n- Browser(s):chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS | Ubuntu\r\n\r\n@angular-devkit/architect       0.1002.4\r\n@angular-devkit/build-angular   0.1002.4\r\n@angular-devkit/core            10.2.4\r\n@angular-devkit/schematics      10.2.4\r\n@angular/cli                    10.2.4\r\n@schematics/angular             10.2.4\r\n@schematics/update              0.1002.4\r\nrxjs                            6.5.5\r\ntypescript                      4.0.8\r\n","Url":"https://github.com/angular/components/issues/25719","RelatedDescription":"Open issue \"ngif (observable | async) cannot display Dom after add pipe function to  observable\" (#25719)"},{"Id":"1389466005","IsPullRequest":true,"CreatedAt":"2022-09-28T15:22:52","Actor":"andrewseguin","Number":"25718","RawContent":null,"Title":"docs(material/tooltip): update MDC changes","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25718","RelatedDescription":"Closed or merged PR \"docs(material/tooltip): update MDC changes\" (#25718)"},{"Id":"1389259740","IsPullRequest":true,"CreatedAt":"2022-09-28T14:27:27","Actor":"andrewseguin","Number":"25717","RawContent":null,"Title":"docs(material/table): update MDC changes","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25717","RelatedDescription":"Closed or merged PR \"docs(material/table): update MDC changes\" (#25717)"},{"Id":"1389226477","IsPullRequest":true,"CreatedAt":"2022-09-28T11:54:12","Actor":"alan-agius4","Number":"25716","RawContent":null,"Title":"fix(material/schematics): remove `node_modules` prefix from prebuilt theme","State":"open","Body":"\r\n\r\nThe Angular CLI supports resolving node modules without the need of specifying `node_modules` directory. This also needed to add support for Yarn PNP which doesn't create a `node_modules` directory.\r\n\r\nCloses #25242","Url":"https://github.com/angular/components/pull/25716","RelatedDescription":"Open PR \"fix(material/schematics): remove `node_modules` prefix from prebuilt theme\" (#25716)"},{"Id":"1388971985","IsPullRequest":true,"CreatedAt":"2022-09-28T08:46:21","Actor":"crisbeto","Number":"25715","RawContent":null,"Title":"fix(cdk/a11y): clean up list key manager on destroy","State":"open","Body":"Historically we haven't needed to do any cleanup for the `ListKeyManager`, because it didn't contain any rxjs subscriptions. Over time we've accumulated more functionality which now needs to be cleaned up.\r\n\r\nThese changes introduce a `destroy` method and calls it in all the relevant places. I also removed any places where we previously had to do manual cleanup.\r\n\r\nFixes #25537.","Url":"https://github.com/angular/components/pull/25715","RelatedDescription":"Open PR \"fix(cdk/a11y): clean up list key manager on destroy\" (#25715)"},{"Id":"1387530084","IsPullRequest":true,"CreatedAt":"2022-09-28T05:22:04","Actor":"crisbeto","Number":"25713","RawContent":null,"Title":"MDC migration guide updates","State":"closed","Body":"Updates the sections I was assigned to in the MDC migration guide.","Url":"https://github.com/angular/components/pull/25713","RelatedDescription":"Closed or merged PR \"MDC migration guide updates\" (#25713)"},{"Id":"1385844354","IsPullRequest":false,"CreatedAt":"2022-09-27T11:24:02","Actor":"StefanKern","Number":"25700","RawContent":null,"Title":"Add autocompleteOff to MatFormFieldDefaultOptions","State":"closed","Body":"### Feature Description\r\n\r\n**Feature Description**\r\n\r\nPlease add an option to MatFormFieldDefaultOptions to disable the autocomplete on the field.\r\nThis will allow us to default all form fields with disabled autocomplete without specifying the `autocomplete=\"off\"`on each one. Add the field to MatFormFieldDefaultOptions and default the value of the autocompleteOff input of MatFormField this this value (I think this is trivial)\r\n\r\n**Use Case**\r\nIn our app our UX team wants all autocompletes on all forms to be turned off default, so setting it on each from is overkill. We have to specify `autocomplete=\"off\"` on every single usage of MatFormField which is tedious and becomes error prone. Add this feature would eliminate this issue for us.\r\n\r\nPS: this feature request is based on this feature request: https://github.com/angular/components/issues/16243","Url":"https://github.com/angular/components/issues/25700","RelatedDescription":"Closed issue \"Add autocompleteOff to MatFormFieldDefaultOptions\" (#25700)"},{"Id":"1387515304","IsPullRequest":false,"CreatedAt":"2022-09-27T11:17:04","Actor":"lyba-alphai","Number":"25712","RawContent":null,"Title":"OutlineGapPositioning(MatFormField): Outline gap not moving to center when floating label is aligned to center","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi I am trying to use the `matformfield ` with everything center aligned. \r\n\r\nExpected behavior is that the text field should have centered aligned everything when `appearance=\"outline\"`. I was able to get the floating label to center but the outline gap is not calculated correctly and it is not aligned with the label. It did move a bit but it is still not aligned. \r\nI tried to update the margins using `.mat-form-field-outline-gap` but it did not work. I have attached an image showing the issue and I need the gap to be positioned according to the label position.\r\n\r\n![image](https://user-images.githubusercontent.com/108064246/192500968-11f050bb-dcf7-48d9-9097-30e53665d6cf.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\nJust give this to the form field \r\n```\r\n .mat-form-field-label{\r\n    text-align: center;\r\n  }\r\n```\r\n\n\n### Expected Behavior\n\nExpected behavior is that the text field should have centered aligned everything when `appearance=\"outline\"`.\n\n### Actual Behavior\n\nOutline gap is not calculated correctly and it is not aligned with the label. It did move a bit but it is still not aligned. \n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/25712","RelatedDescription":"Closed issue \"OutlineGapPositioning(MatFormField): Outline gap not moving to center when floating label is aligned to center\" (#25712)"},{"Id":"1387510140","IsPullRequest":false,"CreatedAt":"2022-09-27T11:13:17","Actor":"LucasVialatoux","Number":"25711","RawContent":null,"Title":"bug(CdkDragDrop): Drag & drop to cdkDropList after scroll is not working properly","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen starting a drag & drop and having multiple cdkDropList on the same page, if the zone where we want to drop is not visible, then the drop is not working correctly.\r\n\r\nA video is more explicit than this concise description : https://user-images.githubusercontent.com/22291935/192497694-75b0a230-b855-4083-b4eb-9f6690c5af93.mp4\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Drag an element from `Done` list and try to place it in the first element of the `Todo` list (scroll using your mouse or by dragging up the element)\r\n2. If you went over another element from the `Done` list, you will not be able to place the dragged element in the first element of `Todo` list\r\n3. The dragged element will be placed over the first element you met from `Todo` list during your drag & drop\r\n\r\nStackBlitz project of the reproduction:\r\nhttps://stackblitz.com/edit/angular-u3fcqy\r\n\r\nmp4 recorded of the reproduction : \r\nhttps://user-images.githubusercontent.com/22291935/192497694-75b0a230-b855-4083-b4eb-9f6690c5af93.mp4\r\n\r\n\n\n### Expected Behavior\n\nBe able to drag an element, scroll over other cdkDropLists and drop it in the expected dropList\n\n### Actual Behavior\n\nThe dragged element will be placed in the first cdkDropList met during the scroll.\n\n### Environment\n\n- Angular: `14.2.2`\r\n- CDK/Material: `CdkDragDrop`\r\n- Browser(s): `Chrome / Edge / Firefox`\r\n- Operating System (e.g. Windows, macOS, Ubuntu): `Windows`\r\n","Url":"https://github.com/angular/components/issues/25711","RelatedDescription":"Closed issue \"bug(CdkDragDrop): Drag & drop to cdkDropList after scroll is not working properly\" (#25711)"},{"Id":"1387561316","IsPullRequest":false,"CreatedAt":"2022-09-27T11:07:40","Actor":"egonknapen","Number":"25714","RawContent":null,"Title":"bug(DragDropModule): Dragging in a horizontal list of items on multiple items doesn't really work","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIF you have a list with ul+li  items horizontal, and there are too many items in the list, so it will wrap to the next line, drag+drop looks ugly/chaotic.\r\n\r\nli items are shown horizontal by using (css display:inline-block), when using (css float:left} drag+drop doesn't work at all.\r\n\r\nBy specifying: cdkDropListOrientation=\"horizontal\", you can make the horizontal list work. But not if it's an horizontal list which wrappes in multiple lines. \n\n### Reproduction\n\nSteps to reproduce:\r\n1. javascript\r\n\r\nitems : { text: string }[];\r\n// a list with for example 30 items.\r\n\r\n\r\n1.  html\r\n\r\n\t\t<ul cdkDropList (cdkDropListDropped)=\"dropItem($event)\" cdkDropListOrientation=\"horizontal\">\r\n\t\t\t<li *ngFor=\"let item of items\" class=\"balloon\" cdkDrag>\r\n                              <span>{{item.text}}</span>\r\n                         </li>\r\n                </ul>\r\n                \r\n2. css\r\n\r\nli { display: block; border: 1px solid black; }\r\n\r\n3. Now drag an item, it will show placeholder spacing on every line at the same time, if you drag an item.\n\n### Expected Behavior\n\nBeing able to drag an item from one position to the next, and only showing placeholders on the line I'm dragging.\n\n### Actual Behavior\n\nWith orientation=horizontal, the placeholder openings are shown on multiple lines, the placeholder element itself is only shown on the first row. \n\n### Environment\n\n- Angular: v14.2.3\r\n- CDK/Material: v14.2.2\r\n- Browser(s): chrome/firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/25714","RelatedDescription":"Closed issue \"bug(DragDropModule): Dragging in a horizontal list of items on multiple items doesn't really work\" (#25714)"},{"Id":"1386531672","IsPullRequest":true,"CreatedAt":"2022-09-27T11:00:26","Actor":"andrewseguin","Number":"25706","RawContent":null,"Title":"feat(material/core): add option to disable core typography","State":"closed","Body":"Adds an optional flag to the `core` mixin that can controls whether typography styles are emitted. This is planned to be a temporary addition before the v15 launch in order to migrate google3. Once all clients use this flag, it can be removed and the typography can be removed. For backwards compatibility, the `ng update` script will take care of external clients when they upgrade so that `mat.core()` will turn into `mat.all-component-typographies(); mat.core()`.","Url":"https://github.com/angular/components/pull/25706","RelatedDescription":"Closed or merged PR \"feat(material/core): add option to disable core typography\" (#25706)"},{"Id":"1387500217","IsPullRequest":false,"CreatedAt":"2022-09-27T10:18:38","Actor":"Vevl","Number":"25710","RawContent":null,"Title":"bug(material/core): Luxon date adapter not support initial Luxon DateTime object","State":"open","Body":"### Is this a regression?\r\n\r\n- No\r\n\r\n### Description\r\n\r\nWhen I use Luxon DateTime object to init form control date is not visible in the datepicker. \r\n\r\n### Reproduction\r\n\r\n1. Create form control with luxon DateTime `luxonControl = new FormControl(DateTime.now())`\r\n2. Add this control to datepicker \r\n```\r\n<mat-form-field>\r\n      <mat-label>Luxon datepicker</mat-label>\r\n      <input matInput [matDatepicker]=\"dp\" [formControl]=\"luxonControl\" />\r\n      <mat-hint>MM/DD/YYYY</mat-hint>\r\n      <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n      <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>\r\n```\r\n3. Date is not visible in UI\r\n\r\n### Expected Behavior\r\n\r\nLuxon DateTime should be parsed in `deserialize` method.\r\n\r\nHere is my fork with edited code I just messed up the commit message and I don't have local environment so if somebody can test it, it would be great.\r\n\r\nhttps://github.com/angular/components/compare/main...Vevl:components:vevl-patch\r\n\r\n### Actual Behavior\r\n\r\nDatepicker not showing the date if there is a Luxon DateTime object as input.\r\n\r\n### Environment\r\n\r\n- Angular: ~14.2.0\r\n- CDK/Material: ^14.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/25710","RelatedDescription":"Open issue \"bug(material/core): Luxon date adapter not support initial Luxon DateTime object\" (#25710)"},{"Id":"1386861429","IsPullRequest":false,"CreatedAt":"2022-09-26T23:29:14","Actor":"martin-the-geek","Number":"25709","RawContent":null,"Title":"feat(datepicker): Improve extensibility for datepicker use custom calendar implementation","State":"open","Body":"### Feature Description\n\nThe content of the datepicker overlay is hard-coded in:\r\n\r\nhttps://github.com/angular/components/blob/36af2a3fbec56ef96b0f0f4fa93f770464e92a7d/src/material/datepicker/datepicker-base.ts#L685-L688\r\n\r\nIt would be beneficial to allow custom content implementations (either derived from MatDatepickerContent or matching an interface) to be used, maybe as a factory method that could be added as a provider.\n\n### Use Case\n\nWe have an application where weeks are grouped into biweekly periods and the users find it useful when selecting dates which biweekly period a week is in and whether the week is the first or second week.\r\n\r\nWe are able to subtype the MatCalendarBody with a custom template that include another column (with a rowspan) to identify the biweekly period.\r\n\r\nWe are able to subtype the MatMonthView to use our custom body and to ensure the cells are built with days in the months before or after to make sure that each biweekly period is complete (it would be nice if `_createWeekCells`, `_getCellCompareValue` and `_shouldEnableDate` were not private so that they could be overridden/accessed).\r\n\r\nWe are able to subtype MatCalendar to use our custom month view.\r\n\r\nWe are able to subtype MatDatepickerContent to use our custom calendar.\r\n\r\nUnfortunately this is where it ends. We cannot use a custom content component with the datepicker without copying a large amount of code.\r\n\r\nAt a minimum we would like to be able to specify a custom content for the datepicker (and dateRangePicker) through something like a provider.\r\n\r\nOr even nicer would be an option to dynamically identify the calendar views (possibly with a provider) to avoid all the extra subtyping.\r\n\r\nThis extensibility could also help other achieve similar requests like https://github.com/angular/components/issues/20530.","Url":"https://github.com/angular/components/issues/25709","RelatedDescription":"Open issue \"feat(datepicker): Improve extensibility for datepicker use custom calendar implementation\" (#25709)"},{"Id":"1386828146","IsPullRequest":false,"CreatedAt":"2022-09-26T22:44:09","Actor":"jneuhaus20","Number":"25708","RawContent":null,"Title":"feat(cdk/menu): Support passing additional context data like material/menu","State":"open","Body":"### Feature Description\n\nAngular Material Menu lets you pass additional data to the template when using lazy rendering (see [Menu | Passing in data to a menu](https://material.angular.io/components/menu/overview#passing-in-data-to-a-menu)).  In order to implement this in terms of CdkMenu and offer a consistent feature set across presentation patterns, CdkMenu needs to support this as well.\r\n\r\nI think `CdkMenuTriggerBase` and `CdkMenuBase` both need to implement this in concert so it has full support across the family of derived classes, and offers the most extensibility for library consumers.\n\n### Use Case\n\nOne use case that is currently supported by MatMenu, but _not_ CdkMenu, is using a single menu to support a list of items, with contents determined dynamically per item.\r\n\r\nExample template:\r\n```html\r\n<!-- A list of things  -->\r\n<button *ngFor=\"let item of items\" [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{item}\">\r\n  {{ item.label }}\r\n</button>\r\n\r\n<!-- Each one has the same menu with the same items, but some might be disabled -->\r\n<mat-menu #menu=\"matMenu\">\r\n  <ng-template matMenuContent let-item=\"item\">\r\n    <button mat-menu-item>Rename</button>\r\n    <button mat-menu-item [disabled]=\"item.isRemovable\">Remove</button>\r\n  </ng-template>\r\n</mat-menu>\r\n```\r\n\r\nMaking a dedicated component would arguably be overkill, and this could not currently be refactored into a context menu (say to provide a primary action by clicking on each item) without looking for a suitable third-party library.","Url":"https://github.com/angular/components/issues/25708","RelatedDescription":"Open issue \"feat(cdk/menu): Support passing additional context data like material/menu\" (#25708)"},{"Id":"1386816219","IsPullRequest":false,"CreatedAt":"2022-09-26T22:34:20","Actor":"martin-the-geek","Number":"25707","RawContent":null,"Title":"bug(badge): matBadgePosition non-compound values defaults the cross axis to \"after\" or \"above\"","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmatBadgePosition accepts the following values:\r\n\r\n- above after\r\n- above before\r\n- below before\r\n- below after\r\n- before\r\n- after\r\n- above\r\n- below\r\n\r\nWhen the value is either \"before\" or \"after\" the style `mat-badge-above` is added.\r\n\r\nWhen the value is either \"above\" or \"below\" the style `mat-badge-after` is added.\n\n### Reproduction\n\n![image](https://user-images.githubusercontent.com/22961746/192391699-5af27a3a-c52a-4ad3-a40f-0a417e1e725b.png)\r\n\n\n### Expected Behavior\n\nWhen the position is either \"before\" or \"after\", then the badge should be neither \"above\" nor \"below\".\r\n\r\nWhen the position is either \"above\" or \"below\", then the badge should be neither \"before\" nor \"after\".\n\n### Actual Behavior\n\nWhen the position is either \"before\" or \"after\" the badge is also positioned above.\r\n\r\nWhen the position is either \"above\" or \"below\" the badge is also positioned after.\n\n### Environment\n\n- Angular: 14.1.3\r\n- CDK/Material: 14.1.3\r\n","Url":"https://github.com/angular/components/issues/25707","RelatedDescription":"Open issue \"bug(badge): matBadgePosition non-compound values defaults the cross axis to \"after\" or \"above\"\" (#25707)"},{"Id":"1385010638","IsPullRequest":true,"CreatedAt":"2022-09-26T19:38:06","Actor":"andrewseguin","Number":"25698","RawContent":null,"Title":"feat(material/form-field): add error harness","State":"closed","Body":"Add an error harness for client tests checking whether there are certain errors on the page. This is very common internally for tests checking validation. \r\n\r\nThe harness can be retrieved directly or through the form field.\r\n\r\nI tried to check the right inheritance structure of other harnesses - might have gotten something mixed up on the way. Would appreciate a review making sure I've got the right inheritance of things. The harness tests passed so that's a good sign.","Url":"https://github.com/angular/components/pull/25698","RelatedDescription":"Closed or merged PR \"feat(material/form-field): add error harness\" (#25698)"},{"Id":"1386250493","IsPullRequest":true,"CreatedAt":"2022-09-26T15:07:37","Actor":"devversion","Number":"25705","RawContent":null,"Title":"test: presubmit test - do not merge","State":"open","Body":"","Url":"https://github.com/angular/components/pull/25705","RelatedDescription":"Open PR \"test: presubmit test - do not merge\" (#25705)"},{"Id":"1386190746","IsPullRequest":true,"CreatedAt":"2022-09-26T14:51:02","Actor":"andrewseguin","Number":"25703","RawContent":null,"Title":"fix(material/core): testing ci","State":"closed","Body":"Ignore me!","Url":"https://github.com/angular/components/pull/25703","RelatedDescription":"Closed or merged PR \"fix(material/core): testing ci\" (#25703)"},{"Id":"1386208146","IsPullRequest":true,"CreatedAt":"2022-09-26T14:49:07","Actor":"devversion","Number":"25704","RawContent":null,"Title":"docs: fix double `will` in list mdc migration snippet","State":"closed","Body":"Also kept the Prettier formatting recommendations-omitting the trailing whitespace. Should be good to keep.","Url":"https://github.com/angular/components/pull/25704","RelatedDescription":"Closed or merged PR \"docs: fix double `will` in list mdc migration snippet\" (#25704)"},{"Id":"1386180660","IsPullRequest":false,"CreatedAt":"2022-09-26T14:26:59","Actor":"Lepmim","Number":"25702","RawContent":null,"Title":"docs-bug(Theming): Reading hues from palettes","State":"open","Body":"### Documentation Feedback\n\nThe documentation in the chapter [Reading hues from palettes](https://material.angular.io/guide/theming#reading-hues-from-palettes) suggests to use strings as the hue's number identifier:\r\n` background: mat.get-color-from-palette($my-palette, '500');`\r\n\r\nIt seems to only work with number input though:\r\n`background: mat.get-color-from-palette($my-palette, 500);`\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#reading-hues-from-palettes","Url":"https://github.com/angular/components/issues/25702","RelatedDescription":"Open issue \"docs-bug(Theming): Reading hues from palettes\" (#25702)"},{"Id":"1386005871","IsPullRequest":true,"CreatedAt":"2022-09-26T12:43:04","Actor":"crisbeto","Number":"25701","RawContent":null,"Title":"fix(material/tooltip): animations running when timeouts haven't elapsed","State":"closed","Body":"This is a patch-only port of #25699.\r\n\r\nAfter the tooltips were switched to CSS animations, a regression was introduced where the opposite animation is shown even if the tooltip didn't actually reach its target state.\r\n\r\nThese changes are an alternate take on the fix from #24652 which had to be reverted due to internal failures.\r\n\r\nFixes #24614.","Url":"https://github.com/angular/components/pull/25701","RelatedDescription":"Closed or merged PR \"fix(material/tooltip): animations running when timeouts haven't elapsed\" (#25701)"},{"Id":"1385545510","IsPullRequest":true,"CreatedAt":"2022-09-26T12:25:18","Actor":"crisbeto","Number":"25699","RawContent":null,"Title":"fix(material/tooltip): animations running when timeouts haven't elapsed","State":"closed","Body":"After the tooltips were switched to CSS animations, a regression was introduced where the opposite animation is shown even if the tooltip didn't actually reach its target state.\r\n\r\nThese changes are an alternate take on the fix from #24652 which had to be reverted due to internal failures.\r\n\r\nFixes #24614.","Url":"https://github.com/angular/components/pull/25699","RelatedDescription":"Closed or merged PR \"fix(material/tooltip): animations running when timeouts haven't elapsed\" (#25699)"},{"Id":"1384950023","IsPullRequest":true,"CreatedAt":"2022-09-26T12:23:09","Actor":"crisbeto","Number":"25697","RawContent":null,"Title":"Dialog and bottom sheet not setting aria-modal","State":"closed","Body":"Fixes that the dialog and bottom sheet weren't setting `aria-modal` anymore. We had data bindings for it, but they didn't work and we hadn't noticed because host bindings aren't being type checked. This regression likely happened during the switch to the CDK dialog.\r\n\r\nFixes #25676.","Url":"https://github.com/angular/components/pull/25697","RelatedDescription":"Closed or merged PR \"Dialog and bottom sheet not setting aria-modal\" (#25697)"},{"Id":"1384654649","IsPullRequest":true,"CreatedAt":"2022-09-25T12:43:24","Actor":"andrewseguin","Number":"25696","RawContent":null,"Title":"fix(material/core): add typography to prebuilt themes","State":"closed","Body":"Add a typography config to the prebuilt themes. I suspect people copy/paste this file, so it'd be best if we make it a good example. Unfortunately, this means typography styles are duplicated because `core` is also emitting typography, but getting rid of that functionality in core will be a bit more work. For now, this PR values correct theme config code over style bloat (which prebuilts will have anyways for 99% of apps)\r\n\r\nRunning this over internal tests to confirm this is not breaking","Url":"https://github.com/angular/components/pull/25696","RelatedDescription":"Closed or merged PR \"fix(material/core): add typography to prebuilt themes\" (#25696)"},{"Id":"1384649639","IsPullRequest":true,"CreatedAt":"2022-09-24T22:12:03","Actor":"andrewseguin","Number":"25695","RawContent":null,"Title":"fix(material/core): add flag whether to copy color theme values","State":"closed","Body":"Introduce a flag that can prevent colors from being copied to the top-level keys of the theme config. This can be transformed internally to prevent google3 applications from relying on the backwards compat values.","Url":"https://github.com/angular/components/pull/25695","RelatedDescription":"Closed or merged PR \"fix(material/core): add flag whether to copy color theme values\" (#25695)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-09-29T03:30:03.1323001Z","RunDurationInMilliseconds":2093}