{"Data":{"Angular-Issues":{"Issues":[{"Id":"718484186","IsPullRequest":true,"CreatedAt":"2020-10-10T00:08:06","Actor":"bjarkler","Number":"39211","RawContent":null,"Title":"fix(compiler): promote constants in templates to Trusted Types","State":"open","Body":"Angular treats constant values of attributes and properties in templates\r\nas secure. This means that these values are not sanitized, and are\r\ninstead passed directly to the corresponding setAttribute or setProperty\r\nfunction. In cases where the given attribute or property is\r\nsecurity-sensitive, this causes a Trusted Types violation.\r\n\r\nTo address this, functions for promoting constant strings to each of the\r\nthree Trusted Types are introduced to Angular's private codegen API. The\r\ncompiler is updated to wrap constant strings with calls to these\r\nfunctions as appropriate when constructing the `consts` array. This is\r\nonly done for security-sensitive attributes and properties, as\r\nclassified by Angular's dom_security_schema.\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39211","RelatedDescription":"Open PR \"fix(compiler): promote constants in templates to Trusted Types\" (#39211)"},{"Id":"718482033","IsPullRequest":true,"CreatedAt":"2020-10-09T23:58:51","Actor":"bjarkler","Number":"39210","RawContent":null,"Title":"fix(compiler): make JIT compiler Trusted Types compatible","State":"open","Body":"Introduce a Trusted Types policy for use by Angular's JIT compiler named\r\nangular#unsafe-jit. As the compiler turns arbitrary untrusted strings\r\ninto executable code at runtime, using Angular's main Trusted Types\r\npolicy does not seem appropriate, unless it can be ensured that the\r\nprovided strings are indeed trusted. Until then, this JIT policy can be\r\nallowed by applications that rely on the JIT compiler but want to\r\nenforce Trusted Types, knowing that a compromise of the JIT compiler can\r\nlead to arbitrary script execution. In particular, this is required for\r\nenabling Trusted Types in Angular unit tests, since they make use of the\r\nJIT compiler.\r\n\r\nSince the Trusted Types policies are defined in the core package, but\r\nthe JIT compiler is defined in the compiler package and used in the\r\nplatform-browser-dynamic package, some additional plumbing is introduced\r\nto propagate the Trusted Types policy to the compiler.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39210","RelatedDescription":"Open PR \"fix(compiler): make JIT compiler Trusted Types compatible\" (#39210)"},{"Id":"718478058","IsPullRequest":true,"CreatedAt":"2020-10-09T23:41:52","Actor":"bjarkler","Number":"39209","RawContent":null,"Title":"fix(core): make development mode Trusted Types compatible","State":"open","Body":"Introduce a Trusted Types policy that is only available in development\r\nmode. It allows arbitrary unsafe conversions to Trusted Types to support\r\ndevelopment features.\r\n\r\nAddress a Trusted Types violation that occurs in createNamedArrayType\r\nduring development mode. Instead of passing strings directly to \"new\r\nFunction\", use the Trusted Types compatible function constructor exposed\r\nby the Trusted Types development policy.\r\n\r\nImplement a workaround to make \"new Function\" work with Trusted Types,\r\nas described here:\r\nhttps://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39209","RelatedDescription":"Open PR \"fix(core): make development mode Trusted Types compatible\" (#39209)"},{"Id":"718475517","IsPullRequest":true,"CreatedAt":"2020-10-09T23:31:09","Actor":"bjarkler","Number":"39208","RawContent":null,"Title":"fix(core): pass a Trusted Types policy to inert DOM builder","State":"open","Body":"When Angular is used in an environment that enforces Trusted Types, the\r\ninert DOM builder raises a Trusted Types violation due to its use of\r\nDOMParser and element.innerHTML with plain strings. Indeed, depending on\r\nwhat is passed into the inert DOM builder and how its output is used,\r\nthis could be the cause of a XSS vulnerability.\r\n\r\nThere are legitimately safe uses of the inert DOM builder, such as with\r\nAngular's HTML sanitizer and its I18n/ICU message parser, neither of\r\nwhich uses the resulting DOM tree in a security sensitive manner.\r\n\r\nTo support such use cases in a manner that is compatible with Trusted\r\nTypes, the inert DOM builder is made to accept and use an optional\r\nTrusted Types policy for converting (potentially arbitrary) strings to\r\nTrustedHTML, before using the dangerous DOM APIs. The caller must thus\r\nprove that a particular use is safe by providing an appropriate policy.\r\n\r\nAs their use is safe, both the HTML sanitizer and the ICU message parser\r\nare updated to pass Angular's main Trusted Types policy to the inert DOM\r\nbuilder.\r\n\r\nThis is based on https://github.com/angular/angular/pull/39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39208","RelatedDescription":"Open PR \"fix(core): pass a Trusted Types policy to inert DOM builder\" (#39208)"},{"Id":"718470119","IsPullRequest":true,"CreatedAt":"2020-10-09T23:11:03","Actor":"bjarkler","Number":"39207","RawContent":null,"Title":"feat(core): create internal Trusted Types module","State":"open","Body":"Add a module that provides a [Trusted Types](https://web.dev/trusted-types/) policy for use internally by\r\nAngular. The policy is created lazily and stored in a module-local\r\nvariable. For now the module does not allow configuring custom policies\r\nor policy names, and instead creates its own policy with 'angular' as a\r\nfixed policy name. This is to more easily support tree-shakability.\r\n\r\nHelper functions for unsafely converting strings to each of the three\r\nTrusted Types are also introduced, with names that make it clear that\r\ntheir use requires a security review. When Trusted Types are not\r\navailable, these helper functions fall back to returning strings.\r\n\r\nThe TypeScript type definitions for Trusted Types is also added as\r\na dependency. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39207","RelatedDescription":"Open PR \"feat(core): create internal Trusted Types module\" (#39207)"},{"Id":"718007478","IsPullRequest":false,"CreatedAt":"2020-10-09T21:23:47","Actor":"Totati","Number":"39194","RawContent":null,"Title":"feat(common): DatePipe default option(s) injection token ","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/common\r\n\r\n\r\n### Description\r\n<!-- ✍️-->There's no option for the DatePipe to override the default format: 'mediumDate', or set timezone with injection token.\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️-->  It would be really good to configure other attributes of the DatePipe with an injection than LOCALE. We use 'shortDate' format for 85% of the times (120/140) - 10% is 'short' and 5% is custom, never 'mediumDate', and we have to write it out every single time. \r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> I know we could extend the date pipe, and set it there, but then I should force our teem to use it against the built in one.\r\n","Url":"https://github.com/angular/angular/issues/39194","RelatedDescription":"Closed issue \"feat(common): DatePipe default option(s) injection token \" (#39194)"},{"Id":"718396765","IsPullRequest":true,"CreatedAt":"2020-10-09T20:13:15","Actor":"AntonioCardenas","Number":"39205","RawContent":null,"Title":"Spanish docs added","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nSpanish official documentation added \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nthis is possible thanks to the great work of the  [angularhispano community](https://github.com/angular-hispano/angular)","Url":"https://github.com/angular/angular/pull/39205","RelatedDescription":"Open PR \"Spanish docs added\" (#39205)"},{"Id":"718390811","IsPullRequest":true,"CreatedAt":"2020-10-09T20:01:09","Actor":"kapunahelewong","Number":"39204","RawContent":null,"Title":"docs: edit built-in directives doc","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39204","RelatedDescription":"Open PR \"docs: edit built-in directives doc\" (#39204)"},{"Id":"718364547","IsPullRequest":true,"CreatedAt":"2020-10-09T19:08:54","Actor":"JiaLiPassion","Number":"39203","RawContent":null,"Title":"build(zone.js): zone.js should output esm format for fesm2015 bundles","State":"open","Body":"Zone.js support `Angular package format` since `0.11`, but the `fesm2015` bundles\r\nare not `esm` format, it still use `umd` bundle which is not correct, in this PR,\r\na new `esm` bundle output is added in `rollup_bundle` rule under `tools`, so\r\nzone.js can use the new rule to generate `esm` bundles.\r\n\r\nBefore this PR, `fesm2015/zone.js` is a `umd` bundle.\r\n\r\n```\r\n\r\n(function (factory) {\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    factory();\r\n}((function () { 'use strict';\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    const Zone$1 = (function (global) {\r\n        const performance = global['performance'];\r\n        ...\r\n```\r\n\r\nnow it is a `esm` bundle.\r\n\r\n```\r\nconst Zone$1 = (function (global) {\r\n    const performance = global['performance'];\r\n    ...\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/pull/39203","RelatedDescription":"Open PR \"build(zone.js): zone.js should output esm format for fesm2015 bundles\" (#39203)"},{"Id":"718341470","IsPullRequest":true,"CreatedAt":"2020-10-09T18:24:39","Actor":"atscott","Number":"39202","RawContent":null,"Title":"feat(language-service): implement go to definition for style and template urls","State":"open","Body":"…late urls\r\n\r\nThis commit enables the Ivy Language Service to \"go to definition\" of a\r\ntemplateUrl or styleUrl, which would jump to the template/style file\r\nitself.\r\n","Url":"https://github.com/angular/angular/pull/39202","RelatedDescription":"Open PR \"feat(language-service): implement go to definition for style and template urls\" (#39202)"},{"Id":"718336573","IsPullRequest":true,"CreatedAt":"2020-10-09T18:15:36","Actor":"gkalpak","Number":"39201","RawContent":null,"Title":"build(docs-infra): support passing args to `ng serve` via `serve-and-sync`","State":"open","Body":"When working on the docs, it is helpful to run a local instance of the angular.io app and run scripts that watch both the docs contents and the app build artifacts to automatically update the running instance on changes. Typically, this is achieved via the `start` and `docs-watch` npm scripts. As a convenience, one can run the `serve-and-sync` script, which runs both in one terminal.\r\n\r\nPreviously, it was not possible to pass arguments to `ng nerve` (which is what the `start` script runs under the hood) when running it via `serve-and-sync`.\r\n\r\nThis commit adds support for passing any arguments passed to `serve-and-sync` through to the `start` script. This can be useful for things like specifying a custom host or port.\r\n","Url":"https://github.com/angular/angular/pull/39201","RelatedDescription":"Open PR \"build(docs-infra): support passing args to `ng serve` via `serve-and-sync`\" (#39201)"},{"Id":"717445984","IsPullRequest":true,"CreatedAt":"2020-10-09T17:02:12","Actor":"gkalpak","Number":"39181","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 7208ef964","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/65fb6788d...7208ef964):\n\n**Modified**\n- help/generate.json\n- help/new.json","Url":"https://github.com/angular/angular/pull/39181","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to 7208ef964\" (#39181)"},{"Id":"717581197","IsPullRequest":true,"CreatedAt":"2020-10-09T16:39:43","Actor":"atscott","Number":"39185","RawContent":null,"Title":"feat(dev-infra): Add github links to caretaker checks","State":"closed","Body":"This commit adds links to the PR/Issue for queries in the caretaker check.\r\n\r\nExample output:\r\n```\r\n\r\nGithub Tasks\r\n  Merge Queue               0\r\n  Merge Assistance Queue    0\r\n  Initial Triage Queue      1\r\n    • https://github.com/angular/angular/issues/39184\r\n```","Url":"https://github.com/angular/angular/pull/39185","RelatedDescription":"Closed or merged PR \"feat(dev-infra): Add github links to caretaker checks\" (#39185)"},{"Id":"718278429","IsPullRequest":false,"CreatedAt":"2020-10-09T16:30:53","Actor":"bagatka","Number":"39200","RawContent":null,"Title":"Nested routing (poor docs)","State":"open","Body":"# 📚 Docs extension \r\n\r\n### Description\r\n\r\nI had to make nested routing. But there is no such information in docs.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/api/router/Route#lazy-loading\r\n\r\n### Reproduction Steps**\r\n\r\nThe hole app is based on routing. Every page is shown via `<router-outlet></router-outlet>`\r\nI had to apply `<router-outlet></router-outlet>` inside the component, that already shown via `<router-outlet></router-outlet>`\r\nI could make it with the only one `<router-outlet></router-outlet>`, but it will cause repetition code and the component will be reloaded each `routerLink` click.\r\n\r\n## 📷Screenshot\r\n\r\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/45293863/95606967-c0588980-0a63-11eb-98ad-c77279b121e9.gif)\r\n\r\nMenu (one the left) is the first `<router-outlet></router-outlet>`\r\nSelected menu item (one the right) is nested `<router-outlet></router-outlet>`.\r\n\r\n## Code\r\n\r\nThis solved the task. Maybe, it's possible to add something like that in docs. Something like a small example for developers.\r\n\r\n### app-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: 'admin', loadChildren: () => import(`./admin-control-screen/admin-control-screen-routing.module`)\r\n      .then(m => m.AdminControlScreenRoutingModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {enableTracing: false})],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n### admin-control-screen-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminControlScreenComponent, children: [\r\n      {\r\n        path: 'films',\r\n        loadChildren: () => import(`./admin-films/admin-films-routing.module`).then(m => m.AdminFilmsRoutingModule)\r\n      },\r\n      {\r\n        path: 'cinemas',\r\n        loadChildren: () => import(`./admin-cinemas/admin-cinemas-routing.module`).then(m => m.AdminCinemasRoutingModule)\r\n      },\r\n      {\r\n        path: 'shows',\r\n        loadChildren: () => import(`./admin-shows/admin-shows-routing.module`).then(m => m.AdminShowsRoutingModule)\r\n      },\r\n      {\r\n        path: 'services',\r\n        loadChildren: () => import(`./admin-services/admin-services-routing.module`).then(m => m.AdminServicesRoutingModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n### admin-cinemas-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminCinemasComponent, children: [\r\n      {path: 'add', component: AdminAddCinemaComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n\r\n## 🌍  Code example (at the moment of issue creation in user-and-admin-pages-upgrade branch)\r\n\r\nhttps://github.com/bagatka/Cinema","Url":"https://github.com/angular/angular/issues/39200","RelatedDescription":"Open issue \"Nested routing (poor docs)\" (#39200)"},{"Id":"718237247","IsPullRequest":false,"CreatedAt":"2020-10-09T15:28:29","Actor":"infacto","Number":"39199","RawContent":null,"Title":"Wrong order of style-tags in head-tag in a Angular multi-app repo.","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nI think it's about the compiler or any other related package which handles the style-tag order.\r\n\r\n\r\n### Description\r\n\r\nI have to Angular project. A default build and a multi-project one.\r\nBoth has the same setup. In this case it uses Ionic. But this does not matter. I use the Angular CLI for builds.\r\nThe `angular.json` is the same. Execpt of the path of course. (And some missing e2e and unit test. Nothing related.)\r\n\r\nBoth repos works great. But on runtime, I found some weird issues. The order of style-tags are different in html-head.\r\nThe order of the multi-app one is not correct. Please read on ...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nA Stackblitz example is not possible in this case. Please download the zip repos. (click on the link in the header of the table.)\r\n\r\n**Style-Tags**\r\nThe following is a table with the order of all style-tags and a short code snippet inside. The style-tags itself have no id. So, only the code snippet can identify it. (remeber: click on the header link to download the related repo.)\r\n\r\n| [Working Demo](https://github.com/ionic-team/ionic-framework/files/5345465/issue-demo-2.zip)<br/><small>(Click to download)</small>                                 | [Problem Demo](https://github.com/ionic-team/ionic-framework/files/5339318/issue-demo.zip)<br/><small>(Click to download)</small>                                 |\r\n| -------------------------------------------- | -------------------------------------------- |\r\n| **1** (data-styles) `ion-select-popover` ... | **1** (data-styles) `ion-select-popover` ... |\r\n| **2** `html.plt-mobile ion-app` ...          | **7** `:root { --ion-color-primary` ...      |\r\n| **3** `ion-header` ...                       | **8** `// App Global CSS` ... `html.ios` ... |\r\n| **4** `ion-list` ...                         | **2** `html.plt-mobile ion-app` ...          |\r\n| **5** `ion-item-group` ...                   | **3** `ion-header` ...                       |\r\n| **6** `.sc-ion-buttons-md-h` ...             | **6** `.sc-ion-buttons-md-h` ...             |\r\n| **7** `:root { --ion-color-primary` ...      | **4** `ion-list` ...                         |\r\n| **8** `// App Global CSS` ... `html.ios` ... | **5** `ion-item-group` ...                   |\r\n\r\n(In the working demo, you may see other versions of the dependency. Sorry for that. But it does not matter. You can update it if you want. It will not change / fix the problem.)\r\n\r\n## 🔥 Exception or Error\r\nYou can see that the number `8` is loaded before number `4`. The order is wrong. How to ensure the correct order? The setup is similar. I don't see any related problem. The official Angular multi-app repo does not work. It should have the same order as the working demo.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version (Problem Repo / Multi-App):**\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 10.22.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      3.9.7\r\n</code></pre>\r\n\r\n**Angular Version (Working Repo / Single-App):**\r\n\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 10.22.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.5\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      3.9.7\r\n</code></pre>\r\n\r\n(The same; Versions of my current repo on local machine. The zip-repo attachment may differ. Proof that it is irrelevant.)\r\n\r\n**Anything else relevant?**\r\nI use the latest Chrome and Chromium browser with dev-tools. You can check the style-tags in head-tag. The order is different. I cannot find the problem. I guess a bug in Angular...\r\n\r\nPlease also see: https://github.com/ionic-team/ionic-framework/issues/22266\r\nHere you can see a use case of the problem.","Url":"https://github.com/angular/angular/issues/39199","RelatedDescription":"Open issue \"Wrong order of style-tags in head-tag in a Angular multi-app repo.\" (#39199)"},{"Id":"717432206","IsPullRequest":true,"CreatedAt":"2020-10-09T14:53:22","Actor":"bjarkler","Number":"39179","RawContent":null,"Title":"build: bump Chromium to next stable version: 84.0.4147","State":"closed","Body":"Bump Chrome to the next stable release (84.0.4147) by following the\r\ninstructions in dev-infra/browsers/README.md.\r\n\r\nWith Chrome 86 about to be released as stable, the current local version\r\n(Chrome 83) is starting to lag behind. It also contains a bug that\r\nblocks Angular unit and integration tests from using Trusted Types.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [X] Build related changes\r\n- [X] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/39179","RelatedDescription":"Closed or merged PR \"build: bump Chromium to next stable version: 84.0.4147\" (#39179)"},{"Id":"718098716","IsPullRequest":false,"CreatedAt":"2020-10-09T13:00:40","Actor":"acalvo","Number":"39198","RawContent":null,"Title":"`ng xi18n` duplicating strings in HTML & TS","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nNo (AFAIK)\r\n\r\n\r\n### Description\r\n\r\nIf you have the same string twice in HTML templates (ex. `<span i18n>Some string</span>`), `ng xi18n --ivy` extracts it once. That's OK. But if you have that same string in a TS file (i.e., ``$localize`Some string` ``), its extracted twice (with different IDs) when running `ng xi18n --ivy`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\r\n  <file source-language=\"en-US\" datatype=\"plaintext\" original=\"ng2.template\">\r\n    <body>\r\n      <trans-unit id=\"8321000940098097247\" datatype=\"html\">\r\n        <source>Some text</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.ts</context>\r\n          <context context-type=\"linenumber\">10</context>\r\n        </context-group>\r\n      </trans-unit>\r\n      <trans-unit id=\"5dbba0a3da8dff890e20cf76eb075d58900fbcd3\" datatype=\"html\">\r\n        <source>Some text</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.html</context>\r\n          <context context-type=\"linenumber\">334</context>\r\n        </context-group>\r\n      </trans-unit>\r\n    </body>\r\n  </file>\r\n</xliff>\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nRepo: https://github.com/acalvo/ng-xi18n-dup\r\n\r\nSee this commit (over a clean `ng new` project): https://github.com/acalvo/ng-xi18n-dup/commit/cf72e7795069811712c9340382cf29d8d1275d36\r\n\r\n## 🔥 Exception or Error\r\n\r\nNot an error, just dup strings in the resulting XLF file.\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 12.2.0\r\nOS: darwin x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nNope.","Url":"https://github.com/angular/angular/issues/39198","RelatedDescription":"Closed issue \"`ng xi18n` duplicating strings in HTML & TS\" (#39198)"},{"Id":"718022415","IsPullRequest":false,"CreatedAt":"2020-10-09T12:34:21","Actor":"Rogier-blip","Number":"39196","RawContent":null,"Title":"feat(cli): Use Classname.name in describe of spec files instead of 'Classname'","State":"closed","Body":"# 🚀 feature request\r\nWhen a spec file is generated by the CLI use Classname.name instead of the 'Classname'.\r\n\r\n### Relevant Package\r\n@angular/cli\r\n\r\n### Description\r\nIt would be nice if the spec files would be generated in a way that makes them adaptable to change.\r\n\r\nIf a test is generated by the CLI the initial `describe` looks like this:\r\n```typescript\r\n...\r\ndescribe('AppComponent', () => {\r\n...\r\n``` \r\n\r\nWhen I change the name of the app component from `AppComponent` to `AppComponent1`. I have to change the name of the test by hand. \r\n\r\n### Describe the solution you'd like\r\nThe solution that I have in mind is to use the .name property of the typescript class. The describe would have the following structure. \r\n\r\n```typescript\r\n...\r\ndescribe(AppComponent.name, () => {\r\n...\r\n```\r\nNow when the AppComponent name is changed through an IDE. The test name is automatically changed.\r\n\r\nCheers 🐵","Url":"https://github.com/angular/angular/issues/39196","RelatedDescription":"Closed issue \"feat(cli): Use Classname.name in describe of spec files instead of 'Classname'\" (#39196)"},{"Id":"718043572","IsPullRequest":false,"CreatedAt":"2020-10-09T12:08:13","Actor":"SuperDeveloper10","Number":"39197","RawContent":null,"Title":"ngOnChange doesn't work well.","State":"closed","Body":"ngOnChange , it has serious problem.\r\nI worked with log. but it show different result in two lines.\r\n ","Url":"https://github.com/angular/angular/issues/39197","RelatedDescription":"Closed issue \"ngOnChange doesn't work well.\" (#39197)"},{"Id":"717656593","IsPullRequest":true,"CreatedAt":"2020-10-09T10:23:48","Actor":"gkalpak","Number":"39187","RawContent":null,"Title":"TEST","State":"closed","Body":"Nothing to see here. You can move one 🚶 :grin:","Url":"https://github.com/angular/angular/pull/39187","RelatedDescription":"Closed or merged PR \"TEST\" (#39187)"},{"Id":"718021045","IsPullRequest":false,"CreatedAt":"2020-10-09T10:05:47","Actor":"petebacondarwin","Number":"39195","RawContent":null,"Title":"i18n: localize message extraction producing incorrect `equiv-text` values","State":"open","Body":"(See https://github.com/angular/angular/issues/38711#issuecomment-706079727 for original report)\r\n\r\nExtraction of i18n messages from the following template HTML:\r\n\r\n```html\r\n<ng-container i18n=\"Update @@update\"> <b>{{value1}}:</b> current {{value2}} to new {{value3}} </ng-container>\r\n```\r\n\r\n**Without ivy:** (ctype attributes removed for clarity)\r\n```xml\r\n<source>\r\n  <x id=\"START_BOLD_TEXT\" equiv-text=\"&lt;b&gt;\"/>\r\n  <x id=\"INTERPOLATION\" equiv-text=\"{{value1}}\"/>:\r\n  <x id=\"CLOSE_BOLD_TEXT\" equiv-text=\"&lt;/b&gt;\"/> current\r\n  <x id=\"INTERPOLATION_1\" equiv-text=\"{{value2}}\"/> to new\r\n  <x id=\"INTERPOLATION_2\" equiv-text=\"{{value3}}\"/>\r\n</source>\r\n```\r\n\r\n**With ivy:**\r\n```xml\r\n<source>\r\n  <x id=\"START_BOLD_TEXT\" equiv-text=\"&lt;b&gt;{{value1}}\"/>\r\n  <x id=\"INTERPOLATION\" equiv-text=\"{{value1}}\"/>:\r\n  <x id=\"CLOSE_BOLD_TEXT\" equiv-text=\"&lt;/b&gt; \"/> current\r\n  <x id=\"INTERPOLATION_1\" equiv-text=\"{value2}} \"/> to new\r\n  <x id=\"INTERPOLATION_2\" equiv-text=\"{value3}} \"/>\r\n</source>\r\n```\r\n\r\nIt seems that there is some offsetting going on, which is making the start and end points in the equiv-text appear in the wrong place. I'll need to debug into this but since these equiv-text attributes are primarily to aid the translator's job, it will not be high on my priority list. Hopefully I can take a look at it later next week or the week after.\r\n","Url":"https://github.com/angular/angular/issues/39195","RelatedDescription":"Open issue \"i18n: localize message extraction producing incorrect `equiv-text` values\" (#39195)"},{"Id":"717995249","IsPullRequest":false,"CreatedAt":"2020-10-09T09:25:17","Actor":"fireflysemantics","Number":"39193","RawContent":null,"Title":"Automatically add URL parameters to lazy loaded ActivateRoute instances","State":"open","Body":"If we look at the Angular Material Documentation components we see that URL parameters for lazy loaded routes are accessed like this:\r\n\r\nhttps://github.com/angular/material.angular.io/blob/master/src/app/pages/component-category-list/component-category-list.ts\r\n\r\n```\r\n    // Combine params from all of the path into a single object.\r\n    this.params = combineLatest(\r\n      this._route.pathFromRoot.map(route => route.params),\r\n      Object.assign);\r\n```\r\n\r\nThat's because lazy loaded routes don't receive the URL parameters, so we have to collapse the URL parameters from the `ActivateRoute` instances.\r\n\r\nIt would be nice if the router did this automatically.","Url":"https://github.com/angular/angular/issues/39193","RelatedDescription":"Open issue \"Automatically add URL parameters to lazy loaded ActivateRoute instances\" (#39193)"},{"Id":"717875798","IsPullRequest":false,"CreatedAt":"2020-10-09T07:02:02","Actor":"roykathurima","Number":"39191","RawContent":null,"Title":"ERROR NullInjectorError: StaticInjectorError(AppModule)[RouterScroller -> ViewportScroller]: Angular 6","State":"closed","Body":"\r\nHello... my project builds without any errors but a few warnings as you can see below...\r\n![UA1](https://user-images.githubusercontent.com/31662354/95548186-3b428580-0a0d-11eb-9636-62e9de91c379.PNG)\r\n\r\nHowever, when I open the it on the browser, it shows a blank page with the following error in the console...\r\n![UA2](https://user-images.githubusercontent.com/31662354/95548190-3d0c4900-0a0d-11eb-9a20-511dbbf55374.PNG)\r\n\r\nThis is my package.json file...\r\n\r\n{\r\n  \"name\": \"ultra-agent-app\",\r\n  \"version\": \"1.0.0\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\",\r\n    \"postinstall\": \"ngcc\"\r\n  },\r\n  \"private\": true,\r\n  \"engines\": {\r\n    \"node\": \">6.9.4\",\r\n    \"npm\": \">4.2.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@agm/core\": \"^1.0.0-beta.5\",\r\n    \"@angular/animations\": \"^6.1.9\",\r\n    \"@angular/cdk\": \"^6.4.7\",\r\n    \"@angular/common\": \"^6.0.0-rc.1\",\r\n    \"@angular/compiler\": \"^10.0.11\",\r\n    \"@angular/compiler-cli\": \"^10.0.11\",\r\n    \"@angular/core\": \"^10.1.5\",\r\n    \"@angular/forms\": \"^6.0.0-rc.1\",\r\n    \"@angular/http\": \"^6.0.0-rc.1\",\r\n    \"@angular/material\": \"^6.4.7\",\r\n    \"@angular/platform-browser\": \"^6.0.0-rc.1\",\r\n    \"@angular/platform-browser-dynamic\": \"^6.0.0-rc.1\",\r\n    \"@angular/router\": \"^6.0.0-rc.1\",\r\n    \"angular-star-rating\": \"^4.0.0-beta.3\",\r\n    \"angularfire2\": \"^5.0.2\",\r\n    \"bootstrap\": \"^4.5.2\",\r\n    \"chart.js\": \"^2.9.3\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"css-star-rating\": \"^1.2.4\",\r\n    \"firebase\": \"^7.22.0\",\r\n    \"html2canvas\": \"^1.0.0-alpha.12\",\r\n    \"jquery\": \"^3.5.1\",\r\n    \"jspdf\": \"^1.4.1\",\r\n    \"ng-pick-datetime\": \"^6.0.16\",\r\n    \"ng2-charts\": \"^2.2.3\",\r\n    \"ngx-embed-video\": \"^0.3.0\",\r\n    \"ngx-material-timepicker\": \"^2.8.3\",\r\n    \"popper\": \"^1.0.1\",\r\n    \"popper.js\": \"^1.16.1\",\r\n    \"rxjs\": \"^6.3.3\",\r\n    \"rxjs-compat\": \"^6.3.3\",\r\n    \"typescript\": \"^4.0.2\",\r\n    \"zone.js\": \"^0.8.24\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^0.12.4\",\r\n    \"@angular-devkit/schematics\": \"^10.0.7\",\r\n    \"@angular/cli\": \"~6.0.0-rc.4\",\r\n    \"@angular/language-service\": \"^6.0.0-rc.1\",\r\n    \"@types/jasmine\": \"~2.8.6\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"~8.9.4\",\r\n    \"codelyzer\": \"~4.2.1\",\r\n    \"jasmine-core\": \"~2.99.1\",\r\n    \"jasmine-spec-reporter\": \"~4.2.1\",\r\n    \"karma\": \"~1.7.1\",\r\n    \"karma-chrome-launcher\": \"~2.2.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~1.4.2\",\r\n    \"karma-jasmine\": \"~1.1.1\",\r\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\r\n    \"protractor\": \"~5.3.0\",\r\n    \"ts-node\": \"~5.0.1\",\r\n    \"tslint\": \"~5.9.1\"\r\n  }\r\n}\r\n\r\n\r\nWhat could be the issue....\r\n\r\n","Url":"https://github.com/angular/angular/issues/39191","RelatedDescription":"Closed issue \"ERROR NullInjectorError: StaticInjectorError(AppModule)[RouterScroller -> ViewportScroller]: Angular 6\" (#39191)"},{"Id":"717761309","IsPullRequest":false,"CreatedAt":"2020-10-09T00:32:08","Actor":"dheerajbhaskar","Number":"39190","RawContent":null,"Title":"Enable \"used by\" badge in this repository","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# Enable \"used by\" badge in this repository 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n\r\nThis feature request is not related to the framework code but to the angular github repository.\r\n\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\nOne of the metrics that you’ll want to consider while choosing a UI framework (or library) is GitHub’s [“Used By”](https://twitter.com/github/status/1131468413983961088) badge, which needs to be enabled by the repository author. This shows how many other repositories on GitHub are dependent on that repository. Angular’s GitHub repo hasn’t enabled this feature yet, but React currently shows almost 4,000,000 while Vue shows over 93,000. Quite a difference between the two, but this is largely due to Vue being the newer framework and doesn’t tell the full picture on overall demand.\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\n\r\nI would like you to follow the steps [here](https://stackoverflow.com/questions/58461512/how-to-use-the-used-by-button-in-the-github-repository) to enable the github feature called \"used by\". \r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n\r\n1. I've tried looking up for other issues mentioning this both in open and closed and couldn't find one\r\n2. I've searched to find if someone could estimate it. All of the results are based on google trends and package downloads, all of which have issues with those metrics\r\n3. I've looked up how to enable this badge and that requires more access than what I've in this repo","Url":"https://github.com/angular/angular/issues/39190","RelatedDescription":"Open issue \"Enable \"used by\" badge in this repository\" (#39190)"},{"Id":"717737826","IsPullRequest":true,"CreatedAt":"2020-10-08T23:31:57","Actor":"AndrewKushnir","Number":"39189","RawContent":null,"Title":"test(zone.js): do not run tests on IE 9 and IE 10","State":"open","Body":"Since IE 9 and IE 10 were deprecated and support is removed in v11, this commit updates ZoneJs configs to avoid running tests in these browsers.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/39189","RelatedDescription":"Open PR \"test(zone.js): do not run tests on IE 9 and IE 10\" (#39189)"},{"Id":"717682689","IsPullRequest":true,"CreatedAt":"2020-10-08T21:38:18","Actor":"twerske","Number":"39188","RawContent":null,"Title":"feat(core): add runtime error codes","State":"open","Body":"Adds enum with error codes for runtime to improve debugging experience\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThis PR adds error codes to runtime errors based on this [design document\r\n](https://docs.google.com/document/d/1_ZrUy-e7VFF6QCpH_TaaHEeuGlaQuNMU-XAu9PCsK4E/edit?usp=sharing).\r\n\r\nThe new format is `NG0XXX: \"Message\"` which is part of a larger initiative to improve developer's debugging experience.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39188","RelatedDescription":"Open PR \"feat(core): add runtime error codes\" (#39188)"},{"Id":"717606377","IsPullRequest":true,"CreatedAt":"2020-10-08T19:30:58","Actor":"aikidave","Number":"39186","RawContent":null,"Title":"docs: Add Component Overview topic to angular.io","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nCurrent documentation set does not include a topic that provides basic tasks for creating a component.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nNew topic, Component Overview, describes how to create a component using the Angular CLI and manually. It also provides information on how to define the most common component properties: selector, template/templateUrl, and styles/stylesUrl.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nThis topic is NOT a deep dive into what a component is or how it works. It focuses on the basic tasks related to creating a component in Angular, and fills in content that we previously just assumed users understood.\r\n\r\nNOTE: At present, I have hardcoded the examples. Before merging this PR, I will create an example that this topic can reference.","Url":"https://github.com/angular/angular/pull/39186","RelatedDescription":"Open PR \"docs: Add Component Overview topic to angular.io\" (#39186)"},{"Id":"717465590","IsPullRequest":true,"CreatedAt":"2020-10-08T18:55:13","Actor":"josephperrott","Number":"39182","RawContent":null,"Title":"build: upgrade angular build, integration/bazel and @angular/bazel package to rule_nodejs 2.2.0","State":"closed","Body":"This is a resubmit of #37727","Url":"https://github.com/angular/angular/pull/39182","RelatedDescription":"Closed or merged PR \"build: upgrade angular build, integration/bazel and @angular/bazel package to rule_nodejs 2.2.0\" (#39182)"},{"Id":"717481098","IsPullRequest":false,"CreatedAt":"2020-10-08T16:39:20","Actor":"Javaman2","Number":"39183","RawContent":null,"Title":"Child Component Reuse and Navigation Question","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/....\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n\r\n### Description\r\n\r\nConsider these routes.\r\n\r\n```\r\n  {\r\n      path: \"main\",\r\n      component: MainComponent,\r\n      canActivate: [canActivateService],\r\n   },\r\n   {\r\n      path: \"main/:id\",\r\n      component: SpecificComponent,\r\n      canActivate: [canActivateService],\r\n   },\r\n``` \r\nThe MainComponent contains three other components, PersonComponent, AddressComponent, and FamilyMemberComponent.  By default, it is used to enter a new person, address and family members.  Navigation to  /main works perfectly.  User enters in data and it is saved no problem.\r\n\r\nThe SpecificComponent contains the MainComponent which is to display a specific person, addresses and family members.\r\n\r\nI am having problems with the SpecificComponent not updating when navigation occurs.  I suspect the default route re-use strategy is getting in the way for the contained MainComponent.  But because the MainComponent is not actually navigated to, rather it's contained in the SpecficComponent I don't understand why a new route to the SpeficificComponent doesn't inject the actual person data?\r\n\r\nI did find this to work when actually using the Navigate function. But as mentioned above I'm not Navigating, just re-using the MainComponent. \r\n\r\n```\r\n//browser is already on /pathName/oldID, \r\n //this means our Routes are correct\r\n\r\n let newLocation = `/pathName/${newID}`;\r\n // override default re use strategy\r\n this.router\r\n    .routeReuseStrategy\r\n    .shouldReuseRoute = function () {\r\n        return false;\r\n };\r\n this.router\r\n   .navigateByUrl(newLocation)\r\n   .then(\r\n   (worked) => {\r\n        //works only because we hooked \r\n        //the routeReuseStrategy.shouldReuseRoute above\r\n   },\r\n   (error) => {\r\n    debugger;\r\n    }\r\n );\r\n```\r\n \r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-ivy\r\n-->\r\n<!-- ✍️--> https://stackblitz.com/...\r\nI'll see if I can create a stackblitz on this issue.\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\nThe error is simply re-use of a child component doesn't reload/refresh with new data.  The only routing that is done, is via the url, which by default opens to Main, then by appending an ID and pressing enter. I'm trying to get the new URL to reload the data based on a Specific person. \r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 10.0.3\r\nNode: 12.18.0\r\nOS: win32 x64\r\n\r\nAngular: 10.0.4\r\n... animations, common, compiler, compiler-cli, core, forms     \r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.11\r\n@angular-devkit/build-angular     0.1000.3\r\n@angular-devkit/build-optimizer   0.1000.3\r\n@angular-devkit/build-webpack     0.1000.3\r\n@angular-devkit/core              10.0.3\r\n@angular-devkit/schematics        10.0.3\r\n@angular/cdk                      10.1.0\r\n@angular/cli                      10.0.3\r\n@angular/material                 10.1.0\r\n@ngtools/webpack                  10.0.3\r\n@schematics/angular               10.0.3\r\n@schematics/update                0.1000.3\r\nrxjs                              6.6.0\r\ntypescript                        3.9.7\r\nwebpack                           4.43.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/39183","RelatedDescription":"Closed issue \"Child Component Reuse and Navigation Question\" (#39183)"},{"Id":"717434883","IsPullRequest":true,"CreatedAt":"2020-10-08T15:11:45","Actor":"bjarkler","Number":"39180","RawContent":null,"Title":"build: upgrade karma to version 4.4.0","State":"open","Body":"Upgrade the karma dependency to version 4.4.0 in the root package.json\r\nand in integration tests. Compared to version 4.3.0, which most of the\r\npackages were previously depending on, it has the following changes:\r\n\r\nBug Fixes\r\n- runner: remove explicit error on all tests failed\r\n\r\nFeatures\r\n- client: Add trusted types support\r\n- Preprocessor can return Promise\r\n- config: add failOnSkippedTests option.\r\n- config: clientDisplayNone sets client elements display none.\r\n- deps: Remove core-js dependency.\r\n\r\nThe motivation for upgrading the package is the Trusted Types support\r\nthat it adds, which is necessary to enable Trusted Types in Angular's\r\nunit tests.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [X] Build related changes\r\n- [X] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/39180","RelatedDescription":"Open PR \"build: upgrade karma to version 4.4.0\" (#39180)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"718535016","IsPullRequest":true,"CreatedAt":"2020-10-10T05:11:26","Actor":"renovate[bot]","Number":"19032","RawContent":null,"Title":"build: update file-loader to version 6.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [file-loader](https://togithub.com/webpack-contrib/file-loader) | dependencies | patch | [`6.1.0` -> `6.1.1`](https://renovatebot.com/diffs/npm/file-loader/6.1.0/6.1.1) |\n| [file-loader](https://togithub.com/webpack-contrib/file-loader) | devDependencies | patch | [`6.1.0` -> `6.1.1`](https://renovatebot.com/diffs/npm/file-loader/6.1.0/6.1.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/file-loader</summary>\n\n### [`v6.1.1`](https://togithub.com/webpack-contrib/file-loader/blob/master/CHANGELOG.md#&#8203;611-httpsgithubcomwebpack-contribfile-loadercomparev610v611-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/file-loader/compare/v6.1.0...v6.1.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19032","RelatedDescription":"Open PR \"build: update file-loader to version 6.1.1\" (#19032)"},{"Id":"718534454","IsPullRequest":true,"CreatedAt":"2020-10-10T05:07:39","Actor":"renovate[bot]","Number":"19031","RawContent":null,"Title":"build: update copy-webpack-plugin to version 6.2.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [copy-webpack-plugin](https://togithub.com/webpack-contrib/copy-webpack-plugin) | dependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/copy-webpack-plugin/6.2.0/6.2.1) |\n| [copy-webpack-plugin](https://togithub.com/webpack-contrib/copy-webpack-plugin) | devDependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/copy-webpack-plugin/6.2.0/6.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/copy-webpack-plugin</summary>\n\n### [`v6.2.1`](https://togithub.com/webpack-contrib/copy-webpack-plugin/blob/master/CHANGELOG.md#&#8203;621-httpsgithubcomwebpack-contribcopy-webpack-plugincomparev620v621-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v6.2.0...v6.2.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19031","RelatedDescription":"Open PR \"build: update copy-webpack-plugin to version 6.2.1\" (#19031)"},{"Id":"718453881","IsPullRequest":false,"CreatedAt":"2020-10-09T22:17:17","Actor":"maxime1992","Number":"19030","RawContent":null,"Title":"This expression is not constructable","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular-devkit/build-angular\r\n\r\n\r\n### Is this a regression?\r\n\r\nYes?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 10.0.3 and I tried to upgrade to 10.1.6\r\n\r\n\r\n### Description\r\n\r\nWe've got a **web worker** that at some point can create an error:\r\n\r\n```ts\r\nnew Error('`blob` must be an instance of File or Blob.')\r\n```\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n\r\n\r\nAnd when I try to `ng serve` I now have the following error:\r\n\r\n```\r\nERROR in ./src/root/md5.worker.ts (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/worker-plugin/dist/loader.js?name=md5.worker!./src/root/md5.worker.ts)\r\nModule build failed (from /home/my/path/node_modules/@angular-devkit/build-angular/node_modules/worker-plugin/dist/loader.js):\r\nError: apps/amt-app/src/root/md5.worker.ts:18:28 - error TS2351: This expression is not constructable.\r\n  Type 'Boolean' has no construct signatures.\r\n\r\n18         observer.error(new Error('`blob` must be an instance of File or Blob.'));\r\n                              ~~~~~\r\n\r\n    at /home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:886:79\r\n    at Object.reportDiagnostics (/home/maxime/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/diagnostics.js:123:9)\r\n    at AngularCompilerPlugin._update (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:886:23)\r\n    at processTicksAndRejections (internal/process/task_queues.js:89:5)\r\n    at async AngularCompilerPlugin._make (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:760:13)\r\n```\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 10.1.6\r\nNode: 12.4.0\r\nOS: linux x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: <error>\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1001.6\r\n@angular-devkit/build-angular      0.1001.6\r\n@angular-devkit/build-ng-packagr   0.1001.6\r\n@angular-devkit/build-optimizer    0.1001.6\r\n@angular-devkit/core               10.1.6\r\n@angular-devkit/schematics         10.1.6\r\n@angular/cdk                       10.1.0\r\n@angular/cli                       10.1.6\r\n@angular/material                  10.1.0\r\n@schematics/angular                10.1.6\r\n@schematics/update                 0.1001.6\r\nng-packagr                         10.0.2\r\nrxjs                               6.5.5\r\ntypescript                         4.0.3\r\nwebpack                            4.43.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19030","RelatedDescription":"Open issue \"This expression is not constructable\" (#19030)"},{"Id":"718354085","IsPullRequest":true,"CreatedAt":"2020-10-09T18:48:44","Actor":"alan-agius4","Number":"19029","RawContent":null,"Title":"fix(@angular/cli): don't display prompts twice","State":"open","Body":"Closes #19027","Url":"https://github.com/angular/angular-cli/pull/19029","RelatedDescription":"Open PR \"fix(@angular/cli): don't display prompts twice\" (#19029)"},{"Id":"718347703","IsPullRequest":true,"CreatedAt":"2020-10-09T18:36:29","Actor":"alan-agius4","Number":"19028","RawContent":null,"Title":"fix(@angular/cli): don't show deprecation messages for defaults when using `--defaults`","State":"open","Body":"\r\n\r\nWith this change we use the addUndefinedDefaults transformer post validation and don't create prompts which have a default value when options.defaults is truthy.\r\n\r\nCloses: #18692","Url":"https://github.com/angular/angular-cli/pull/19028","RelatedDescription":"Open PR \"fix(@angular/cli): don't show deprecation messages for defaults when using `--defaults`\" (#19028)"},{"Id":"717027732","IsPullRequest":true,"CreatedAt":"2020-10-09T17:14:24","Actor":"renovate[bot]","Number":"19002","RawContent":null,"Title":"build: update bazel packages","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://togithub.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.6.1` -> `1.7.1`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.6.1/1.7.1) |\n| [@bazel/jasmine](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | patch | [`2.2.0` -> `2.2.1`](https://renovatebot.com/diffs/npm/@bazel%2fjasmine/2.2.0/2.2.1) |\n| [@bazel/typescript](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | patch | [`2.2.0` -> `2.2.1`](https://renovatebot.com/diffs/npm/@bazel%2ftypescript/2.2.0/2.2.1) |\n| [bazel_toolchains](https://togithub.com/bazelbuild/bazel-toolchains) | http_archive | minor | [`3.5.1` -> `3.6.0`](https://renovatebot.com/diffs/npm/bazel_toolchains/3.5.1/3.6.0) |\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | patch | [`2.2.0` -> `2.2.1`](https://renovatebot.com/diffs/npm/build_bazel_rules_nodejs/2.2.0/2.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk</summary>\n\n### [`v1.7.1`](https://togithub.com/bazelbuild/bazelisk/releases/v1.7.1)\n\n[Compare Source](https://togithub.com/bazelbuild/bazelisk/compare/v1.6.1...v1.7.1)\n\nThis Bazelisk release contains the following changes:\n\n-   🔢  Fix regression introduced in the v1.7.0 refactoring that the release version was no longer correctly injected into the binary.\n\n</details>\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v2.2.1`](https://togithub.com/bazelbuild/rules_nodejs/blob/master/CHANGELOG.md#&#8203;221-httpsgithubcombazelbuildrulesnodejscompare220221-2020-10-07)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/2.2.0...2.2.1)\n\n##### Bug Fixes\n\n-   **builtin:** js_library: correctly propagate DeclarationInfos ([41f8719](https://togithub.com/bazelbuild/rules_nodejs/commit/41f8719))\n-   **examples:** prevent ibazel EOF ([96aea69](https://togithub.com/bazelbuild/rules_nodejs/commit/96aea69)), closes [#&#8203;2143](https://togithub.com/bazelbuild/rules_nodejs/issues/2143)\n-   **karma:** allow custom browsers to specify args (fixes [#&#8203;595](https://togithub.com/bazelbuild/rules_nodejs/issues/595)) ([5a58030](https://togithub.com/bazelbuild/rules_nodejs/commit/5a58030))\n-   don't glob yarn or node files when using vendored_node or vendored_yarn ([f5ef64f](https://togithub.com/bazelbuild/rules_nodejs/commit/f5ef64f))\n\n##### Features\n\n-   add strict_visibility to npm_install / yarn_install rules ([#&#8203;2193](https://togithub.com/bazelbuild/rules_nodejs/issues/2193)) ([18c6e80](https://togithub.com/bazelbuild/rules_nodejs/commit/18c6e80)), closes [#&#8203;2110](https://togithub.com/bazelbuild/rules_nodejs/issues/2110)\n-   update nodejs versions ([#&#8203;2207](https://togithub.com/bazelbuild/rules_nodejs/issues/2207)) ([5478dab](https://togithub.com/bazelbuild/rules_nodejs/commit/5478dab))\n\n</details>\n\n<details>\n<summary>bazelbuild/bazel-toolchains</summary>\n\n### [`v3.6.0`](https://togithub.com/bazelbuild/bazel-toolchains/releases/3.6.0)\n\n[Compare Source](https://togithub.com/bazelbuild/bazel-toolchains/compare/3.5.1...3.6.0)\n\nSHA256:4fb3ceea08101ec41208e3df9e56ec72b69f3d11c56629d6477c0ff88d711cf7\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19002","RelatedDescription":"Closed or merged PR \"build: update bazel packages\" (#19002)"},{"Id":"717055748","IsPullRequest":true,"CreatedAt":"2020-10-09T17:14:12","Actor":"renovate[bot]","Number":"19004","RawContent":null,"Title":"build: update rollup to version 2.29.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | dependencies | minor | [`2.28.2` -> `2.29.0`](https://renovatebot.com/diffs/npm/rollup/2.28.2/2.29.0) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`2.28.2` -> `2.29.0`](https://renovatebot.com/diffs/npm/rollup/2.28.2/2.29.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/rollup</summary>\n\n### [`v2.29.0`](https://togithub.com/rollup/rollup/blob/master/CHANGELOG.md#&#8203;2290)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v2.28.2...v2.29.0)\n\n_2020-10-08_\n\n##### Features\n\n-   Allow passing custom options to other plugins via `this.resolve` ([#&#8203;3807](https://togithub.com/rollup/rollup/issues/3807))\n-   Allow attaching custom meta information to modules when resolving, loading or transforming ([#&#8203;3807](https://togithub.com/rollup/rollup/issues/3807))\n-   Do not throw but return `null` when using `this.getModuleInfo` for an unknown id ([#&#8203;3807](https://togithub.com/rollup/rollup/issues/3807))\n\n##### Bug Fixes\n\n-   Trigger build in watch mode when files are added to a watched directory ([#&#8203;3812](https://togithub.com/rollup/rollup/issues/3812))\n-   Make `code` optional when transforming modules ([#&#8203;3807](https://togithub.com/rollup/rollup/issues/3807))\n\n##### Pull Requests\n\n-   [#&#8203;3807](https://togithub.com/rollup/rollup/pull/3807): Implement new APIs for inter-plugin communication ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;3808](https://togithub.com/rollup/rollup/pull/3808): Document that the default value of --format is 'es' ([@&#8203;jameshfisher](https://togithub.com/jameshfisher))\n-   [#&#8203;3812](https://togithub.com/rollup/rollup/pull/3812): Watch: listen for new files added to a directory ([@&#8203;dmitrage](https://togithub.com/dmitrage))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19004","RelatedDescription":"Closed or merged PR \"build: update rollup to version 2.29.0\" (#19004)"},{"Id":"717086583","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:56","Actor":"renovate[bot]","Number":"19007","RawContent":null,"Title":"build: update sass to version 1.27.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.26.12` -> `1.27.0`](https://renovatebot.com/diffs/npm/sass/1.26.12/1.27.0) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.26.12` -> `1.27.0`](https://renovatebot.com/diffs/npm/sass/1.26.12/1.27.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.27.0`](https://togithub.com/sass/dart-sass/blob/master/CHANGELOG.md#&#8203;1270)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.26.12...1.27.0)\n\n-   Adds an overload to `map.merge()` that supports merging a nested map.\n\n    `map.merge($map1, $keys..., $map2)`: The `$keys` form a path to the nested map\n    in `$map1`, into which `$map2` gets merged.\n\n    See [the Sass documentation][map-merge] for more details.\n\n    [map-merge]&#x3A; <https://sass-lang.com/documentation/modules/map#merge>\n\n-   Adds an overloaded `map.set()` function.\n\n    `map.set($map, $key, $value)`: Adds to or updates `$map` with the specified\n    `$key` and `$value`.\n\n    `map.set($map, $keys..., $value)`: Adds to or updates a map that is nested\n    within `$map`. The `$keys` form a path to the nested map in `$map`, into\n    which `$value` is inserted.\n\n    See [the Sass documentation][map-set] for more details.\n\n    [map-set]&#x3A; <https://sass-lang.com/documentation/modules/map#set>\n\n-   Add support for nested maps to `map.get()`.\n    For example, `map.get((a: (b: (c: d))), a, b, c)` would return `d`.\n    See [the documentation][map-get] for more details.\n\n    [map-get]&#x3A; <https://sass-lang.com/documentation/modules/map#get>\n\n-   Add support for nested maps in `map.has-key`.\n    For example, `map.has-key((a: (b: (c: d))), a, b, c)` would return true.\n    See [the documentation][map-has-key] for more details.\n\n    [map-has-key]&#x3A; <https://sass-lang.com/documentation/modules/map#has-key>\n\n-   Add a `map.deep-merge()` function. This works like `map.merge()`, except that\n    nested map values are _also_ recursively merged. For example:\n\n        map.deep-merge(\n          (color: (primary: red, secondary: blue),\n          (color: (secondary: teal)\n        ) // => (color: (primary: red, secondary: teal))\n\n    See [the Sass documentation][map-deep-merge] for more details.\n\n    [map-deep-merge]&#x3A; <https://sass-lang.com/documentation/modules/map#deep-merge>\n\n-   Add a `map.deep-remove()` function. This allows you to remove keys from\n    nested maps by passing multiple keys. For example:\n\n        map.deep-remove(\n          (color: (primary: red, secondary: blue)),\n          color, primary\n        ) // => (color: (secondary: blue))\n\n    See [the Sass documentation][map-deep-remove] for more details.\n\n    [map-deep-remove]&#x3A; <https://sass-lang.com/documentation/modules/map#deep-remove>\n\n-   Fix a bug where custom property values in plain CSS were being parsed as\n    normal property values.\n\n##### Dart API\n\n-   Add a `Value.tryMap()` function which returns the `Value` as a `SassMap` if\n    it's a valid map, or `null` otherwise. This allows function authors to safely\n    retrieve maps even if they're internally stored as empty lists, without having\n    to catch exceptions from `Value.assertMap()`.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19007","RelatedDescription":"Closed or merged PR \"build: update sass to version 1.27.0\" (#19007)"},{"Id":"717101200","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:42","Actor":"renovate[bot]","Number":"19008","RawContent":null,"Title":"build: update terser-webpack-plugin to version 4.2.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser-webpack-plugin](https://togithub.com/webpack-contrib/terser-webpack-plugin) | dependencies | patch | [`4.2.2` -> `4.2.3`](https://renovatebot.com/diffs/npm/terser-webpack-plugin/4.2.2/4.2.3) |\n| [terser-webpack-plugin](https://togithub.com/webpack-contrib/terser-webpack-plugin) | devDependencies | patch | [`4.2.2` -> `4.2.3`](https://renovatebot.com/diffs/npm/terser-webpack-plugin/4.2.2/4.2.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/terser-webpack-plugin</summary>\n\n### [`v4.2.3`](https://togithub.com/webpack-contrib/terser-webpack-plugin/blob/master/CHANGELOG.md#&#8203;423-httpsgithubcomwebpack-contribterser-webpack-plugincomparev422v423-2020-10-07)\n\n[Compare Source](https://togithub.com/webpack-contrib/terser-webpack-plugin/compare/v4.2.2...v4.2.3)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19008","RelatedDescription":"Closed or merged PR \"build: update terser-webpack-plugin to version 4.2.3\" (#19008)"},{"Id":"718089866","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:28","Actor":"alan-agius4","Number":"19023","RawContent":null,"Title":"ng-packagr update to v11","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19023","RelatedDescription":"Closed or merged PR \"ng-packagr update to v11\" (#19023)"},{"Id":"718046585","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:19","Actor":"alan-agius4","Number":"19021","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use IE11 as oldest browser when downlevelling","State":"closed","Body":"IE9 and 10 are no longer supported.","Url":"https://github.com/angular/angular-cli/pull/19021","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use IE11 as oldest browser when downlevelling\" (#19021)"},{"Id":"718016539","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:00","Actor":"alan-agius4","Number":"19020","RawContent":null,"Title":"refactor(@angular-devkit/build-optimizer): remove old checks","State":"closed","Body":"- @angular/core package no longer contain ESM5 and FESM5 entrypoints\r\n- ngfactory/ngstyle file extension is always .js","Url":"https://github.com/angular/angular-cli/pull/19020","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-optimizer): remove old checks\" (#19020)"},{"Id":"717945501","IsPullRequest":true,"CreatedAt":"2020-10-09T17:12:43","Actor":"alan-agius4","Number":"19019","RawContent":null,"Title":"fix(@schematics/angular): use strict guide short url","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19019","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): use strict guide short url\" (#19019)"},{"Id":"717253154","IsPullRequest":true,"CreatedAt":"2020-10-09T17:12:29","Actor":"alan-agius4","Number":"19011","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove RxJs usage from `writeIndexHtml`","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19011","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove RxJs usage from `writeIndexHtml`\" (#19011)"},{"Id":"717163950","IsPullRequest":true,"CreatedAt":"2020-10-09T17:12:06","Actor":"alan-agius4","Number":"19010","RawContent":null,"Title":"test(@angular-devkit/build-angular): re-enable ivy extract test on Windows","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19010","RelatedDescription":"Closed or merged PR \"test(@angular-devkit/build-angular): re-enable ivy extract test on Windows\" (#19010)"},{"Id":"718195053","IsPullRequest":false,"CreatedAt":"2020-10-09T14:31:26","Actor":"prabh-62","Number":"19027","RawContent":null,"Title":"ng generate guard prompts twice","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nYes\r\n\r\n\r\n### Description\r\nUsing angular CLI to generate a guard prompts twice for \r\n`? Which interfaces would you like to implement? CanActivate`\r\n`? Which interfaces would you like to implement? CanActivate`\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n- `> npx @angular/cli@11.0.0-next.6 new admin-console --strict true --routing true --style css`\r\n- `> cd admin-console`\r\n- `> yarn ng generate guard guards/oauth/auth-oauth`\r\n![guard_twcie](https://user-images.githubusercontent.com/13006107/95595557-48b23c80-0a1a-11eb-8b2a-90445fc645da.gif)\r\n\r\n\r\n## 🔥 Exception or Error\r\nNo exception\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n$ ng version\r\nAngular CLI: 11.0.0-next.6\r\nNode: 14.13.1\r\nOS: darwin x64\r\n\r\nAngular: 11.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.0-next.6\r\n@angular-devkit/build-angular   0.1100.0-next.6\r\n@angular-devkit/core            11.0.0-next.6\r\n@angular-devkit/schematics      11.0.0-next.6\r\n@angular/cli                    11.0.0-next.6\r\n@schematics/angular             11.0.0-next.6\r\n@schematics/update              0.1100.0-next.6\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n","Url":"https://github.com/angular/angular-cli/issues/19027","RelatedDescription":"Open issue \"ng generate guard prompts twice\" (#19027)"},{"Id":"717053116","IsPullRequest":true,"CreatedAt":"2020-10-09T13:29:46","Actor":"renovate[bot]","Number":"19003","RawContent":null,"Title":"build: update mini-css-extract-plugin to version 0.12.0 - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | dependencies | minor | [`0.11.3` -> `0.12.0`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/0.11.3/0.12.0) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | devDependencies | minor | [`0.11.3` -> `0.12.0`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/0.11.3/0.12.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/mini-css-extract-plugin</summary>\n\n### [`v0.12.0`](https://togithub.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md#&#8203;0120-httpsgithubcomwebpack-contribmini-css-extract-plugincomparev0113v0120-2020-10-07)\n\n[Compare Source](https://togithub.com/webpack-contrib/mini-css-extract-plugin/compare/v0.11.3...v0.12.0)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19003","RelatedDescription":"Closed or merged PR \"build: update mini-css-extract-plugin to version 0.12.0 - autoclosed\" (#19003)"},{"Id":"718109247","IsPullRequest":false,"CreatedAt":"2020-10-09T12:34:10","Actor":"Rogier-blip","Number":"19026","RawContent":null,"Title":"Generation of test: Use Classname.name in describe of spec files instead of 'Classname'","State":"open","Body":"# 🚀 feature request\r\nWhen a spec file is generated by the CLI use Classname.name instead of the 'Classname'.\r\n\r\n### Relevant Package\r\n@angular/cli\r\n\r\n### Description\r\nIt would be nice if the spec files would be generated in a way that makes them adaptable to change.\r\n\r\nIf a test is generated by the CLI the initial `describe` looks like this:\r\n```typescript\r\n...\r\ndescribe('AppComponent', () => {\r\n...\r\n``` \r\n\r\nWhen I change the name of the app component from `AppComponent` to `AppComponent1`. I have to change the name of the test by hand. \r\n\r\n### Describe the solution you'd like\r\nThe solution that I have in mind is to use the .name property of the typescript class. The describe would have the following structure. \r\n\r\n```typescript\r\n...\r\ndescribe(AppComponent.name, () => {\r\n...\r\n```\r\nNow when the AppComponent name is changed through an IDE. The test name is automatically changed.\r\n\r\nCheers 🐵","Url":"https://github.com/angular/angular-cli/issues/19026","RelatedDescription":"Open issue \"Generation of test: Use Classname.name in describe of spec files instead of 'Classname'\" (#19026)"},{"Id":"718100049","IsPullRequest":false,"CreatedAt":"2020-10-09T12:20:14","Actor":"anandsiddharth","Number":"19025","RawContent":null,"Title":"Hot reload in angular 10???? ","State":"closed","Body":"# 🚀 HMR\r\n\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\nhttps://levelup.gitconnected.com/hmr-in-angular-cli-project-eb8512ef514b this doesn't work on angular 10, Is there a way we can enable HMR in angular 10?\r\n\r\n### Describe the solution you'd like\r\nMaking a small change reloads the entire application, instead should refresh the specific component.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19025","RelatedDescription":"Closed issue \"Hot reload in angular 10???? \" (#19025)"},{"Id":"718050976","IsPullRequest":false,"CreatedAt":"2020-10-09T12:11:29","Actor":"dumitru-h","Number":"19022","RawContent":null,"Title":"ng error: Unknown error: SyntaxError: Unexpected token 'export'","State":"closed","Body":"Hello,\r\nI installed cli with command:\r\n`sudo npm install -g @angular/cli@10.1.6`\r\nwhich is the last release at this moment.\r\n\r\nI tried **ng new angularclient**\r\n\r\nand I had this error: \r\n> Unknown error: SyntaxError: Unexpected token 'export'\r\n\r\nI tried just **ng** and had the same error.\r\n\r\nI try to discover Angular so this is a big stop for me in discovering Angular ;)\r\n\r\nHere is the package info:\r\n> `>` sudo npm info @angular/cli dist-tags\r\n>{\r\n>  latest: '10.1.6',\r\n>  next: '11.0.0-next.6',\r\n>  'v6-lts': '6.2.9',\r\n>  'v8-lts': '8.3.29',\r\n>  'v7-lts': '7.3.10',\r\n>  'v9-lts': '9.1.12'\r\n\r\n> `>` node -v\r\nv12.19.0","Url":"https://github.com/angular/angular-cli/issues/19022","RelatedDescription":"Closed issue \"ng error: Unknown error: SyntaxError: Unexpected token 'export'\" (#19022)"},{"Id":"717579272","IsPullRequest":false,"CreatedAt":"2020-10-09T08:25:16","Actor":"kawazoe","Number":"19013","RawContent":null,"Title":"[cli] Alternate build configurations not working as expected with ng serve","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe is an issue in package @angular/cli. Specifically related to this entry in the documentation: https://angular.io/guide/workspace-config#alternate-build-configurations\r\n\r\n### Description\r\nThe documentation states that multiple configurations can be provided using a comma-separated list, like so: `--configuration=state,fr`, and that the last one will take precedence.\r\n\r\nThis behavior works perfectly fine when using `ng build --configuration=foo,bar` but the implementation breaks down with `ng serve`. Since the serve command uses `browserTarget` to select a build configuration, a configuration setup that works for the build command cannot be tested using the serve command.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nhttps://stackblitz.com/edit/angular-ivy-6kdefg?file=angular.json\r\n\r\nRunning `ng build --configuration=production,noaot` will correctly disable the aot compiler while keeping the other production settings.\r\nRunning `ng serve --configuration=production,noaot` will cause the build to use ONLY the noaot settings since they all end up bundled under the `browserTarget` key.\r\n\r\n## 🔥 Exception or Error\r\nThis behavior renders the multi-configuration support pretty much useless as it forces developers to choose between using `ng serve` or using this feature.\r\n\r\nWhile some properties can be directly overrided in the `serve` schema, not all can be customized. For instance, budgets and file replacements cannot be changed by the `serve` configuration, which makes it impossible to do something like this:\r\n\r\n`ng serve --configuration=qa,optimized`\r\n\r\nWhere `qa` would only provide file replacements and `optimized` would turn on aot, turn off source maps, etc.\r\n\r\nThis is an issue for my team since we manage a project with 16 different environments that could be expressed with only 7 configurations if we could use `ng serve` together with comma-separated configurations.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 10.0.5\r\nNode: 10.22.0\r\nOS: linux x64\r\n\r\nAngular: 10.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1000.5\r\n@angular-devkit/build-angular     0.1000.5\r\n@angular-devkit/build-optimizer   0.1000.5\r\n@angular-devkit/build-webpack     0.1000.5\r\n@angular-devkit/core              9.1.5\r\n@angular-devkit/schematics        9.1.5\r\n@angular/cli                      10.0.5\r\n@ngtools/webpack                  10.0.5\r\n@schematics/angular               9.1.5\r\n@schematics/update                0.1000.5\r\nrxjs                              6.6.2\r\ntypescript                        3.9.7\r\nwebpack                           4.43.0\r\n</code></pre>","Url":"https://github.com/angular/angular-cli/issues/19013","RelatedDescription":"Closed issue \"[cli] Alternate build configurations not working as expected with ng serve\" (#19013)"},{"Id":"717468947","IsPullRequest":false,"CreatedAt":"2020-10-09T08:21:35","Actor":"samuelfernandez","Number":"19012","RawContent":null,"Title":"Rules for AsyncFileOperator","State":"closed","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n\r\nAPI of  `@angular-devkit/schematics`\r\n\r\n### Description\r\n\r\nIn the public API there is an interface `AsyncFileOperator` which is not currently being implemented by any rule in a similar way as there are for `FileOperator`. \r\n\r\n\r\n### Describe the solution you'd like\r\nIt'd be wonderful that `forEach` and `when` rules could handle that.\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\nI've came up with this code that implements the requested feature, could be brought into the library as is or merged with current methods:\r\n\r\n```ts\r\ninterface FileVisit {\r\n  path: Path;\r\n  entry?: Readonly<FileEntry> | null;\r\n}\r\n\r\nexport function forEachAsync(operator: AsyncFileOperator): Rule {\r\n  return (tree: Tree, _context: SchematicContext): Observable<Tree> => {\r\n    const paths: FileVisit[] = [];\r\n    tree.visit((path, entry) => {\r\n      paths.push({ path, entry });\r\n    });\r\n\r\n    return from(paths).pipe(\r\n      concatMap(({ entry, path }) =>\r\n        entry == null\r\n          ? of(tree)\r\n          : operator(entry).pipe(\r\n              tap((newEntry) => {\r\n                if (newEntry === entry) {\r\n                  return;\r\n                }\r\n                if (newEntry === null) {\r\n                  tree.delete(path);\r\n                  return;\r\n                }\r\n                if (newEntry.path !== path) {\r\n                  tree.rename(path, newEntry.path);\r\n                }\r\n                if (!newEntry.content.equals(entry.content)) {\r\n                  tree.overwrite(newEntry.path, newEntry.content);\r\n                }\r\n              }),\r\n              map(() => tree),\r\n              first()\r\n            )\r\n      ),\r\n      last()\r\n    );\r\n  };\r\n}\r\n```\r\n\r\n```ts\r\nexport function whenAsync(predicate: FilePredicate<boolean>, operator: AsyncFileOperator): AsyncFileOperator {\r\n  return (entry: FileEntry): Observable<FileEntry | null> => {\r\n    if (predicate(entry.path, entry)) {\r\n      return operator(entry);\r\n    } else {\r\n      return of(entry);\r\n    }\r\n  };\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/19012","RelatedDescription":"Closed issue \"Rules for AsyncFileOperator\" (#19012)"},{"Id":"717771018","IsPullRequest":false,"CreatedAt":"2020-10-09T01:05:59","Actor":"prabh-62","Number":"19018","RawContent":null,"Title":"Workspace - Use angular library without bundling","State":"open","Body":"# 🚀 Feature request\r\nAngular CLI shouldn't require angular library to be built before being consumed in an angular application residing in the same angular workspace.\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [x] build\r\n- [x] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\nCurrent Angular CLI (`v11.0.0-next.6`) requires that the angular library be built before it can be consumed in angular applications.\r\n\r\n#### Steps\r\n- `> npx @angular/cli@11.0.0-next.6 new agency-apps --strict true --createApplication false`\r\n- `> cd agency-apps`\r\n- `> yarn ng generate library @agency/auth`\r\n- `> yarn ng generate application admin-console --routing true --style css`\r\n- Update `projects/admin-console/src/app/app.component.ts`\r\n```typescript\r\nimport { Component } from '@angular/core';\r\nimport { AuthService } from '@agency/auth';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'admin-console';\r\n\r\n  constructor(private readonly AuthService: AuthService) {\r\n    console.log(this.AuthService);\r\n  }\r\n}\r\n```\r\n- `> yarn start --project admin-console`. Angular CLI will error out since we didn't build library `@agency/auth` before starting `admin-console` application\r\n<img width=\"1148\" alt=\"ng_lib_build\" src=\"https://user-images.githubusercontent.com/13006107/95529155-2da6e480-09a8-11eb-9def-24992bb4ffde.png\">\r\n\r\n\r\n### Describe the solution you'd like\r\nAngular workspaces should not require developers to build libraries before consuming them. Due to this behaviour, it is required that we, developers put a `postinstall` script which builds all angular libraries so CI doesn't error out while building angular applications. Ideally, angular libraries in workspace should work just like project references in dotnet ecosystem.\r\n\r\n\r\n### Describe alternatives you've considered\r\n- Update `tsconfig.json` from this code snippet\r\n```json\r\n  \"compilerOptions\": {\r\n    ...\r\n    \"paths\": {\r\n      \"@agency/auth\": [\r\n        \"dist/agency/auth/agency-auth\",\r\n        \"dist/agency/auth\"\r\n      ]\r\n    }\r\n  }\r\n```\r\nto \r\n```json\r\n\"compilerOptions\": {\r\n    ...\r\n    \"paths\": {\r\n      \"@agency/auth\": [\"projects/agency/auth/src/public-api.ts\"]\r\n    }\r\n  }\r\n```\r\n- `> yarn start --project admin-console`\r\n<img width=\"1140\" alt=\"ng_lib_reference\" src=\"https://user-images.githubusercontent.com/13006107/95529592-4ebc0500-09a9-11eb-9be2-3b9175252306.png\">\r\n\r\nThis approach doesn't require angular libraries to be built before consuming them in apps\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19018","RelatedDescription":"Open issue \"Workspace - Use angular library without bundling\" (#19018)"},{"Id":"717692503","IsPullRequest":true,"CreatedAt":"2020-10-08T21:57:31","Actor":"clydin","Number":"19017","RawContent":null,"Title":"feat(@angular-devkit/build-optimizer): introduce ivy optimization mode","State":"open","Body":"This mode allows disabling of certain passes that are not needed by Ivy compilation but are still required by View Engine.  Currently only the prefix functions pass is affected by this mode.","Url":"https://github.com/angular/angular-cli/pull/19017","RelatedDescription":"Open PR \"feat(@angular-devkit/build-optimizer): introduce ivy optimization mode\" (#19017)"},{"Id":"717606633","IsPullRequest":false,"CreatedAt":"2020-10-08T19:31:21","Actor":"dgp1130","Number":"19016","RawContent":null,"Title":"Show compile-time error/warning for using `@angular/compiler` with optimized builds","State":"open","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n- [X] build\r\n\r\n### Description\r\nCurrently it is possible to have a configuration which uses JIT compilation and attempts to run build optimizer on the results. This doesn't really work and isn't supported, leading to awkward error messages, which can be confusing to users (see #17663).\r\n\r\n### Describe the solution you'd like\r\nIdeally, the CLI would detect this case and error out if an import for `@angular/compiler` is found in user code with build optimizer enabled. We should display a more precise warning/error about this case to better explain to the users why JIT + build optimizer doesn't work and what they can to do fix it.\r\n\r\n### Describe alternatives you've considered\r\nCurrently this is a runtime error with a poor message.\r\n\r\n```\r\nmain.7000374ef126bad8069c.js:1 ERROR Error: Uncaught (in promise): Error: Angular JIT compilation failed: '@angular/compiler' not loaded!\r\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\r\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\r\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.\r\nError: Angular JIT compilation failed: '@angular/compiler' not loaded!\r\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\r\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\r\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.\r\n    at Ae (main.7000374ef126bad8069c.js:1)\r\n    at Function.get (main.7000374ef126bad8069c.js:1)\r\n    at St (main.7000374ef126bad8069c.js:1)\r\n    at new Af (main.7000374ef126bad8069c.js:1)\r\n    at ud (main.7000374ef126bad8069c.js:1)\r\n    at dd (main.7000374ef126bad8069c.js:1)\r\n    at e.md [as compileModuleAndAllComponentsAsync] (main.7000374ef126bad8069c.js:1)\r\n    at e. (main.7000374ef126bad8069c.js:1)\r\n    at Generator.next ()\r\n    at main.7000374ef126bad8069c.js:1\r\n    at T (polyfills.a8d522dff2c1a5c4b9db.js:1)\r\n    at polyfills.a8d522dff2c1a5c4b9db.js:1\r\n    at a (main.7000374ef126bad8069c.js:1)\r\n    at l.invoke (polyfills.a8d522dff2c1a5c4b9db.js:1)\r\n    at Object.onInvoke (main.7000374ef126bad8069c.js:1)\r\n    at l.invoke (polyfills.a8d522dff2c1a5c4b9db.js:1)\r\n    at i.run (polyfills.a8d522dff2c1a5c4b9db.js:1)\r\n    at polyfills.a8d522dff2c1a5c4b9db.js:1\r\n    at l.invokeTask (polyfills.a8d522dff2c1a5c4b9db.js:1)\r\n    at Object.onInvokeTask (main.7000374ef126bad8069c.js:1)\r\n```","Url":"https://github.com/angular/angular-cli/issues/19016","RelatedDescription":"Open issue \"Show compile-time error/warning for using `@angular/compiler` with optimized builds\" (#19016)"},{"Id":"717605895","IsPullRequest":true,"CreatedAt":"2020-10-08T19:30:08","Actor":"bjarkler","Number":"19015","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support custom headers in dev-server","State":"open","Body":"Make it possible to configure dev-server to send custom HTTP headers on\r\nevery client request. These headers can be specified as a key-value map\r\nunder the new \"headers\" property of the dev-server builder in\r\nangular.json. These headers are then passed on to the webpack devserver.\r\n\r\nAn example use case for this is to enable various security features,\r\nsuch as CSP and Trusted Types, both in local application development and\r\nin integration tests, by setting appropriate HTTP headers.\r\n\r\nThis is part of an effort to add support for Trusted Types in Angular.\r\nThe ability to enforce Trusted Types during development and integration\r\ntests is essential, as this can help detect Trusted Types violations\r\nthat might otherwise break applications when they're pushed to\r\nproduction where such security features may be enforced.\r\n\r\nThis change is completely backwards compatible, and does not change\r\nany behavior before the \"headers\" property is set.","Url":"https://github.com/angular/angular-cli/pull/19015","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support custom headers in dev-server\" (#19015)"},{"Id":"717579277","IsPullRequest":false,"CreatedAt":"2020-10-08T18:54:55","Actor":"kawazoe","Number":"19014","RawContent":null,"Title":"[cli] Alternate build configurations not working as expected with ng serve","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe is an issue in package @angular/cli. Specifically related to this entry in the documentation: https://angular.io/guide/workspace-config#alternate-build-configurations\r\n\r\n### Description\r\nThe documentation states that multiple configurations can be provided using a comma-separated list, like so: `--configuration=state,fr`, and that the last one will take precedence.\r\n\r\nThis behavior works perfectly fine when using `ng build --configuration=foo,bar` but the implementation breaks down with `ng serve`. Since the serve command uses `browserTarget` to select a build configuration, a configuration setup that works for the build command cannot be tested using the serve command.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nhttps://stackblitz.com/edit/angular-ivy-6kdefg?file=angular.json\r\n\r\nRunning `ng build --configuration=production,noaot` will correctly disable the aot compiler while keeping the other production settings.\r\nRunning `ng serve --configuration=production,noaot` will cause the build to use ONLY the noaot settings since they all end up bundled under the `browserTarget` key.\r\n\r\n## 🔥 Exception or Error\r\nThis behavior renders the multi-configuration support pretty much useless as it forces developers to choose between using `ng serve` or using this feature.\r\n\r\nWhile some properties can be directly overrided in the `serve` schema, not all can be customized. For instance, budgets and file replacements cannot be changed by the `serve` configuration, which makes it impossible to do something like this:\r\n\r\n`ng serve --configuration=qa,optimized`\r\n\r\nWhere `qa` would only provide file replacements and `optimized` would turn on aot, turn off source maps, etc.\r\n\r\nThis is an issue for my team since we manage a project with 16 different environments that could be expressed with only 7 configurations if we could use `ng serve` together with comma-separated configurations.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 10.0.5\r\nNode: 10.22.0\r\nOS: linux x64\r\n\r\nAngular: 10.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1000.5\r\n@angular-devkit/build-angular     0.1000.5\r\n@angular-devkit/build-optimizer   0.1000.5\r\n@angular-devkit/build-webpack     0.1000.5\r\n@angular-devkit/core              9.1.5\r\n@angular-devkit/schematics        9.1.5\r\n@angular/cli                      10.0.5\r\n@ngtools/webpack                  10.0.5\r\n@schematics/angular               9.1.5\r\n@schematics/update                0.1000.5\r\nrxjs                              6.6.2\r\ntypescript                        3.9.7\r\nwebpack                           4.43.0\r\n</code></pre>","Url":"https://github.com/angular/angular-cli/issues/19014","RelatedDescription":"Closed issue \"[cli] Alternate build configurations not working as expected with ng serve\" (#19014)"},{"Id":"717065144","IsPullRequest":false,"CreatedAt":"2020-10-08T15:47:13","Actor":"janousek","Number":"19005","RawContent":null,"Title":"i18n - fs.relative is not a function","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/localize (10.1.5)\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 10.1.4\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> I18n extraction fails with the error \"fs.relative is not a function\".\r\nThe problem is with change angular/angular#39006 . It uses API from this commit: https://github.com/angular/angular-cli/commit/1c4d358b384826c7b310c81940f52a1386e2b4fc . But this commit was merged only into v11.x.x. Not into 10.x.x. Therefore function \"resolve\" does not exist. \r\n\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre>\r\nERROR in ./SubjectCommon/js/services/PaymentService.ts\r\nModule build failed (from E:/reenio/master/src/ClientSide/node_modules/@angular-devkit/build-angular/src/extract-i18n/ivy-extract-loader.js):\r\nTypeError: E:\\reenio\\master\\src\\ClientSide\\Angular\\projects\\Subject\\SubjectCommon\\js\\services\\PaymentService.js: fs.relative is not a function\r\n    at getFileFromPath (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@angular\\localize\\src\\tools\\src\\source_file_utils.js:406:107)\r\n    at getLocation (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@angular\\localize\\src\\tools\\src\\source_file_utils.js:382:20)\r\n    at E:\\reenio\\master\\src\\ClientSide\\node_modules\\@angular\\localize\\src\\tools\\src\\source_file_utils.js:182:60\r\n    at Array.map (<anonymous>)\r\n    at Object.unwrapMessagePartsFromTemplateLiteral (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@angular\\localize\\src\\tools\\src\\source_file_utils.js:182:34)\r\n    at PluginPass.TaggedTemplateExpression (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@angular\\localize\\src\\tools\\src\\extract\\source_files\\es2015_extract_plugin.js:24:69)\r\n    at newFn (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\visitors.js:175:21)\r\n    at NodePath._call (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\path\\context.js:55:20)\r\n    at NodePath.call (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\path\\context.js:42:17)\r\n    at NodePath.visit (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\path\\context.js:92:31)\r\n    at TraversalContext.visitQueue (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\context.js:112:16)\r\n    at TraversalContext.visitSingle (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\context.js:84:19)\r\n    at TraversalContext.visit (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\context.js:140:19)\r\n    at Function.traverse.node (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\index.js:82:17)\r\n    at NodePath.visit (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\path\\context.js:99:18)\r\n    at TraversalContext.visitQueue (E:\\reenio\\master\\src\\ClientSide\\node_modules\\@babel\\traverse\\lib\\context.js:112:16)\r\n @ ./SubjectCommon/js/controllers/credit/payment-result-controller.component.ts 4:0-86 6:0-75 40:167-184 41:181-195 57:28-42 67:38-55\r\n @ ./SubjectCommon/js/controllers/credit/credit.module.ts\r\n @ ./SubjectCommon/js/routes.ts\r\n @ ./SubjectCommon/js/AppModule.ts\r\n @ ./SubjectCommon/js/main.ts\r\n @ multi ./SubjectCommon/js/main.ts\r\n<code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre>\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.4\r\n@angular-devkit/build-angular   0.1001.5\r\n@angular-devkit/core            10.1.5\r\n@angular-devkit/schematics      10.1.5\r\n@ngtools/webpack                10.1.5\r\n@schematics/angular             10.1.5\r\n@schematics/update              0.1001.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\nwebpack                         4.44.2\r\n<code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19005","RelatedDescription":"Closed issue \"i18n - fs.relative is not a function\" (#19005)"},{"Id":"717131555","IsPullRequest":true,"CreatedAt":"2020-10-08T15:42:32","Actor":"alan-agius4","Number":"19009","RawContent":null,"Title":"     fix(@angular-devkit/build-angular): implement `relative` method in extractor FS","State":"closed","Body":"(cherry picked from commit 1c4d358b384826c7b310c81940f52a1386e2b4fc)\r\n    \r\nCloses: #19005","Url":"https://github.com/angular/angular-cli/pull/19009","RelatedDescription":"Closed or merged PR \"     fix(@angular-devkit/build-angular): implement `relative` method in extractor FS\" (#19009)"},{"Id":"717025930","IsPullRequest":true,"CreatedAt":"2020-10-08T05:10:11","Actor":"renovate[bot]","Number":"19001","RawContent":null,"Title":"build: update angular packages","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`24b1e48` -> `6d9a07f`](https://renovatebot.com/diffs/npm/@angular%2fanimations//) |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fanimations/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | [`ae7dcfd` -> `26c58c8`](https://renovatebot.com/diffs/npm/@angular%2fcdk//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`fe6fb40` -> `b613ba7`](https://renovatebot.com/diffs/npm/@angular%2fcommon//) |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcommon/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`5ac5afa` -> `ffc895d`](https://renovatebot.com/diffs/npm/@angular%2fcompiler//) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`fb654b5` -> `0a31da0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli//) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`5f1ce2c` -> `b0be0b4`](https://renovatebot.com/diffs/npm/@angular%2fcore//) |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcore/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | [`0af99f8` -> `89f31ff`](https://renovatebot.com/diffs/npm/@angular%2fdev-infra-private//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`20fa7a1` -> `3e7d8ea`](https://renovatebot.com/diffs/npm/@angular%2fforms//) |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fforms/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`a5b6489` -> `7238b1d`](https://renovatebot.com/diffs/npm/@angular%2flanguage-service//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`8e70f64` -> `8d1dfef`](https://renovatebot.com/diffs/npm/@angular%2flocalize//) |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2flocalize/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | [`6799353` -> `8e8e331`](https://renovatebot.com/diffs/npm/@angular%2fmaterial//) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | [`dd21d17` -> `e6380a7`](https://renovatebot.com/diffs/npm/@angular%2fmaterial-moment-adapter//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`19c9592` -> `94210ce`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser//) |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`df5d012` -> `995fafc`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`b3432fc` -> `42e8f96`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server//) |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`1f752c7` -> `3658146`](https://renovatebot.com/diffs/npm/@angular%2frouter//) |\n| [@angular/router](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2frouter/11.0.0-next.4/11.0.0-next.5) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.4` -> `11.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/11.0.0-next.4/11.0.0-next.5) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v11.0.0-next.5`](https://togithub.com/angular/angular/blob/master/CHANGELOG.md#&#8203;1100-next5-2020-10-07)\n\n[Compare Source](https://togithub.com/angular/angular/compare/11.0.0-next.4...11.0.0-next.5)\n\n##### Bug Fixes\n\n-   **common:** add boolean to valid json for testing ([#&#8203;37893](https://togithub.com/angular/angular/issues/37893)) ([3c474ec](https://togithub.com/angular/angular/commit/3c474ec)), closes [#&#8203;20690](https://togithub.com/angular/angular/issues/20690)\n-   **core:** use single quotes for relative link resolution migration to align with style guide ([#&#8203;39070](https://togithub.com/angular/angular/issues/39070)) ([8894706](https://togithub.com/angular/angular/commit/8894706))\n-   **forms:** improve types of directive constructor arguments ([#&#8203;38944](https://togithub.com/angular/angular/issues/38944)) ([246de9a](https://togithub.com/angular/angular/commit/246de9a))\n-   **forms:** include null in .parent of abstract control ([#&#8203;32671](https://togithub.com/angular/angular/issues/32671)) ([f4f1bcc](https://togithub.com/angular/angular/commit/f4f1bcc)), closes [#&#8203;16999](https://togithub.com/angular/angular/issues/16999)\n-   **language-service:** [Ivy] hybrid visitor should not locate let keyword ([#&#8203;39061](https://togithub.com/angular/angular/issues/39061)) ([70e13dc](https://togithub.com/angular/angular/commit/70e13dc))\n-   **router:** properly assign ExtraOptions to Router in RouterTestingModule ([#&#8203;39096](https://togithub.com/angular/angular/issues/39096)) ([d8c0534](https://togithub.com/angular/angular/commit/d8c0534)), closes [#&#8203;23347](https://togithub.com/angular/angular/issues/23347)\n\n##### Features\n\n-   **compiler-cli:** support getting resource dependencies for a source file ([#&#8203;38048](https://togithub.com/angular/angular/issues/38048)) ([5dbf357](https://togithub.com/angular/angular/commit/5dbf357))\n-   **forms:** add migration for AbstractControl.parent accesses ([#&#8203;39009](https://togithub.com/angular/angular/issues/39009)) ([aeec223](https://togithub.com/angular/angular/commit/aeec223)), closes [#&#8203;32671](https://togithub.com/angular/angular/issues/32671)\n-   **language-service:** Add getDefinitionAndBoundSpan (go to definition) ([#&#8203;39101](https://togithub.com/angular/angular/issues/39101)) ([3975dd9](https://togithub.com/angular/angular/commit/3975dd9))\n-   **language-service:** add quick info for inline templates in ivy ([#&#8203;39060](https://togithub.com/angular/angular/issues/39060)) ([904adb7](https://togithub.com/angular/angular/commit/904adb7))\n\n##### BREAKING CHANGES\n\n-   **forms:** Directives in the `@angular/forms` package used to have `any[]` as a type of `validators` and\n    `asyncValidators` arguments in constructors. Now these arguments are properly typed, so if your\n    code relies on directive constructor types it may require some updates to improve type safety.\n-   **forms:** Type of AbstractFormControl.parent now includes null\n\n`null` is now included in the types of .parent. If you don't already have a check for this case,\nthe TypeScript compiler might compain. A v11 migration exists which adds the not-null assertion\noperator where necessary.\n\nIn an unlikely case your code was testing the parnet against undefined with sitrct equality,\nyou'll need to change this to `=== null` instead, since the parent is not explicily initialized\nwith `null` instead of being left `undefined`.\n\n#### 10.1.5 (2020-10-07)\n\n##### Bug Fixes\n\n-   **router:** update getRouteGuards to check if the context outlet is activated ([#&#8203;39049](https://togithub.com/angular/angular/issues/39049)) ([771f731](https://togithub.com/angular/angular/commit/771f731)), closes [#&#8203;39030](https://togithub.com/angular/angular/issues/39030)\n-   **compiler:** Recover on malformed keyed reads and keyed writes ([#&#8203;39004](https://togithub.com/angular/angular/issues/39004)) ([f50313f](https://togithub.com/angular/angular/commit/f50313f)), closes [#&#8203;38596](https://togithub.com/angular/angular/issues/38596)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19001","RelatedDescription":"Open PR \"build: update angular packages\" (#19001)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"718409019","IsPullRequest":false,"CreatedAt":"2020-10-09T20:38:03","Actor":"JaxonWright","Number":"20763","RawContent":null,"Title":"bug(mat-sidenav-container): Firefox for Android (in landscape) has white cut-off bar at bottom of page when scrolling","State":"open","Body":"#### Reproduction\r\n\r\nThis can be seen on the official Angular Material website or any of your own ng projects that use the sidenav container. I originally thought it was a problem with just dialogs, but it is actually with the sidenav container. The behavior does not occur on ng websites that use Angular Material but not the sidenav container.\r\n\r\nSteps to reproduce:\r\n1. Open Firefox on your Android phone\r\n2. Switch to landscape orientation\r\n3. Go to [material.angular.io](material.angular.io)\r\n4. Scroll and see the weird bar at the bottom\r\n\r\n#### Expected Behavior\r\n\r\nNo weird white bar appearing that messes up the rest of the page. \r\n\r\nYou can see it _not_ occur on my website, [https://jaxon.dev](https://jaxon.dev) until you open one of the dialogs for cryptocurrency on the Contact page. This website does not use the sidenav container, and every one that I have found that does has this problem.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nI guess you cannot really see the bar since Github is also a white background. Copy the images and you will see. \r\nIt seems as though it is roughly the height of the navigation bar of the app, which may tip off the developers of what is going on.\r\n\r\n![image](https://user-images.githubusercontent.com/14099593/95628945-06562300-0a4d-11eb-8433-08c3611572b0.png)\r\n![image](https://user-images.githubusercontent.com/14099593/95629108-4c12eb80-0a4d-11eb-9273-7e7918aaaf33.png)\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 10.1.0\r\n- CDK/Material: 10.2.4\r\n- Browser(s): Firefox for Android 81.1.4\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Android 10\r\n","Url":"https://github.com/angular/components/issues/20763","RelatedDescription":"Open issue \"bug(mat-sidenav-container): Firefox for Android (in landscape) has white cut-off bar at bottom of page when scrolling\" (#20763)"},{"Id":"718393164","IsPullRequest":true,"CreatedAt":"2020-10-09T20:05:54","Actor":"crisbeto","Number":"20762","RawContent":null,"Title":"fix(material-experimental/mdc-form-field): test harness referring to non-MDC harnesses","State":"open","Body":"The test harness for the MDC form field was referring to the non-MDC versions of `MatInput` and `MatSelect`. Furthermore, we were using the non-MDC input, select and autocomplete in tests.","Url":"https://github.com/angular/components/pull/20762","RelatedDescription":"Open PR \"fix(material-experimental/mdc-form-field): test harness referring to non-MDC harnesses\" (#20762)"},{"Id":"718275846","IsPullRequest":false,"CreatedAt":"2020-10-09T16:26:29","Actor":"IConstructor","Number":"20761","RawContent":null,"Title":"bug(Chips): Arrows navigation in NVDA browse mode automatically switched to focus mode","State":"open","Body":"#### Reproduction\r\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/chips/examples\r\n2. Open NVDA screen reader in browse mode\r\n3. Start navigating in browse mode with a help of up/down arrows\r\n4. Navigate with the help of arrows to chips select list\r\n \r\n \r\n#### Expected Behavior\r\n\r\nNVDA is reading information about the select list and keeps navigating in the browse mode\r\n\r\n\r\n#### Actual Behavior\r\n\r\nNVDA automatically switches to the focus mode and prevents user from further page exploring in the browse mode.\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 6+\r\n- CDK/Material: Material components\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/20761","RelatedDescription":"Open issue \"bug(Chips): Arrows navigation in NVDA browse mode automatically switched to focus mode\" (#20761)"},{"Id":"718263416","IsPullRequest":true,"CreatedAt":"2020-10-09T16:06:45","Actor":"crisbeto","Number":"20760","RawContent":null,"Title":"fix(material/slider): some screen readers announcing long decimal values","State":"open","Body":"**Note:** this is a resubmit of #20721 which had to be reverted because it was overriding people's `aria-valuetext`. This PR includes an input that allows for it to be changed.\r\n\r\nIt looks like some screen readers announce the value of a slider by calculating the percentage themselves using the `aria-valuemin`, `aria-valuemax` and `aria-valuenow`. The problem is that they don't round down the decimals so for a slider between 0 and 1 with a step of 0.1, they end up reading out values like 0.20000068. These changes work around the issue by setting `aria-valuetext` to the same value that we shown in the thumb which we truncate ourselves.\r\n\r\nFixes #20719.","Url":"https://github.com/angular/components/pull/20760","RelatedDescription":"Open PR \"fix(material/slider): some screen readers announcing long decimal values\" (#20760)"},{"Id":"718205855","IsPullRequest":false,"CreatedAt":"2020-10-09T14:44:41","Actor":"bampakoa","Number":"20759","RawContent":null,"Title":"docs-bug(dialog): Suggest using strong types for MAT_DIALOG_DATA","State":"open","Body":"#### Documentation Feedback\r\n\r\nIn the **Sharing data with Dialog component** section, the type of `MAT_DIALOG_DATA` in the described example is set to `any`. Given that it is encouraged to use strongly typing in Angular projects, I would suggest to use the following interface for the example:\r\n\r\n```\r\ninterface DialogData {\r\n name: string;\r\n}\r\n\r\nexport class YourDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n}\r\n```\r\n\r\n**Affected documentation page:** https://material.angular.io/components/dialog/overview#sharing-data-with-the-dialog-component\r\n\r\nI would love to work on a related PR if you find it useful. 🙏 \r\n","Url":"https://github.com/angular/components/issues/20759","RelatedDescription":"Open issue \"docs-bug(dialog): Suggest using strong types for MAT_DIALOG_DATA\" (#20759)"},{"Id":"718198278","IsPullRequest":true,"CreatedAt":"2020-10-09T14:35:24","Actor":"wwjhu","Number":"20758","RawContent":null,"Title":"feat(cdk/testing): support modifiers for clicking on a TestElement","State":"open","Body":"Adds the ability to provide modifier keys when clicking on a TestElement.","Url":"https://github.com/angular/components/pull/20758","RelatedDescription":"Open PR \"feat(cdk/testing): support modifiers for clicking on a TestElement\" (#20758)"},{"Id":"718127594","IsPullRequest":true,"CreatedAt":"2020-10-09T13:01:30","Actor":"Achilles1515","Number":"20757","RawContent":null,"Title":"refactor(cdk/drag-drop): Correctly type drag handle parent drag witho…","State":"open","Body":"…ut circular dependencies warning\r\n\r\nImport the `CdkDrag` directive reference as a type-only import to avoid the circular dependency warning.","Url":"https://github.com/angular/components/pull/20757","RelatedDescription":"Open PR \"refactor(cdk/drag-drop): Correctly type drag handle parent drag witho…\" (#20757)"},{"Id":"717970092","IsPullRequest":false,"CreatedAt":"2020-10-09T08:46:57","Actor":"darkoandreev","Number":"20756","RawContent":null,"Title":"bug(MatAnchor): cdk-focused class added on disabled MatAnchor button","State":"open","Body":"Hello everyone,\r\nFirst, I have a question related to the disabled state of the buttons - if the button (no matter which type is) is disabled, it shouldn't be focused with FocusMonitor, right?\r\n\r\nI found a problem with the MatAnchor button. The disabled state of the button also can be focused by clicking on it, which is not correct probably because every other button doesn't have this \"feature\".\r\nI used your [stackblitz](https://stackblitz.com/angular/jrvkvbxxjon?file=src%2Fapp%2Fbutton-overview-example.ts) and I disabled the first anchor button.\r\n\r\nThis is the actual problem I'm talking about:\r\n\r\n![image](https://user-images.githubusercontent.com/20442015/95562586-06422d00-0a25-11eb-8732-9ffc62f7b240.png)\r\n\r\nPlease let me know if this is a valid problem and how can be fixed. Thanks in advance!\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/20756","RelatedDescription":"Open issue \"bug(MatAnchor): cdk-focused class added on disabled MatAnchor button\" (#20756)"},{"Id":"717917029","IsPullRequest":false,"CreatedAt":"2020-10-09T07:17:59","Actor":"ZOUJIELynn","Number":"20755","RawContent":null,"Title":"text blurred in IE when using virtual scroll","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/fork/components-issue\r\n\r\nSteps to reproduce:\r\n1. check cdk-virtual-scroll-viewport\r\n2. the reason is `transform: translateZ(0px)` in IE\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\n\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\n\r\n\r\n#### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu): \r\n","Url":"https://github.com/angular/components/issues/20755","RelatedDescription":"Open issue \"text blurred in IE when using virtual scroll\" (#20755)"},{"Id":"717619502","IsPullRequest":true,"CreatedAt":"2020-10-09T03:09:23","Actor":"wagnermaciel","Number":"20754","RawContent":null,"Title":"fix(cdk/testing): avoid using dotted property access for dispatchEven…","State":"closed","Body":"…t on ElementFinder\r\n\r\n * Internally this was causing an error saying that the type has a\r\n  string index signature, but it is being accessed using a dotted property access.","Url":"https://github.com/angular/components/pull/20754","RelatedDescription":"Closed or merged PR \"fix(cdk/testing): avoid using dotted property access for dispatchEven…\" (#20754)"},{"Id":"717594179","IsPullRequest":true,"CreatedAt":"2020-10-08T19:28:45","Actor":"wagnermaciel","Number":"20753","RawContent":null,"Title":"Revert \"fix(material/slider): some screen readers announcing long dec…","State":"closed","Body":"…imal values (#20721)\"\r\n\r\nThis reverts commit d93e16f5d7c85ca41a71c1ef0bd7fde32e921dee.\r\n\r\nHad to revert this change because a custom `aria-valuetext` on the component should override what the component sets","Url":"https://github.com/angular/components/pull/20753","RelatedDescription":"Closed or merged PR \"Revert \"fix(material/slider): some screen readers announcing long dec…\" (#20753)"},{"Id":"717366248","IsPullRequest":true,"CreatedAt":"2020-10-08T14:59:41","Actor":"wagnermaciel","Number":"20751","RawContent":null,"Title":"Revert \"feat(cdk/testing): add the ability to dispatch arbitrary even…","State":"closed","Body":"…ts (#20714)\"\r\n\r\nThis reverts commit b7cfe673708fc99226f00da57785751764460b68.","Url":"https://github.com/angular/components/pull/20751","RelatedDescription":"Closed or merged PR \"Revert \"feat(cdk/testing): add the ability to dispatch arbitrary even…\" (#20751)"},{"Id":"717415455","IsPullRequest":false,"CreatedAt":"2020-10-08T14:48:54","Actor":"alvaromartmart","Number":"20752","RawContent":null,"Title":"feat(Table): detect clickable mat-rows with routerLink","State":"open","Body":"#### Feature Description\r\nMaterial table rows are not displayed as clickable elements (i.e. hover effect, cursor: pointer...) when they have an attached `routerLink` directive.\r\n\r\nThings I've tried:\r\n```html\r\n<tr\r\n    mat-row\r\n    *matRowDef=\"let rowData; columns: visibleColumns$ | async\"\r\n    [routerLink]=\"[id]\">\r\n</tr>\r\n``` \r\nHovering the rows doesn't indicate that the row is clickable.\r\n\r\nSolutions I've been using:\r\n1) Setting a fake (click) handler for the row:\r\n```html\r\n<tr\r\n    mat-row\r\n    *matRowDef=\"let rowData; columns: visibleColumns$ | async\"\r\n    [routerLink]=\"[id]\"\r\n    (click)=\"(false)\">\r\n</tr>\r\n``` \r\n2) Styling .mat-rows with attached routerLink (using ng-reflect-router-link)\r\n```scss\r\n.mat-row[ng-reflect-router-link]{\r\n    cursor: pointer;\r\n    &:hover{\r\n        /* [...] */\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Use Case\r\n\r\nFrom my point of view, material table rows with routerLinks should be displayed as clickable elements.\r\n","Url":"https://github.com/angular/components/issues/20752","RelatedDescription":"Open issue \"feat(Table): detect clickable mat-rows with routerLink\" (#20752)"},{"Id":"717290684","IsPullRequest":false,"CreatedAt":"2020-10-08T12:15:13","Actor":"nwmv","Number":"20750","RawContent":null,"Title":"bug(Datepicker): Hover state on the picker persists after the calendar is clicked away","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Click on the dropdown arrow to reveal the calendar.\r\n2. Click somewhere other than the calendar (e.g., a bit to the right of the dropdown arrow) to hide the calendar.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nThe dropdown arrow reverts to its default state, and in particular no grey circle surrounds it.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nA grey circle that appears to be a hover state persists around the dropdown arrow.\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: Angular 2\r\n- CDK/Material: Material\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/20750","RelatedDescription":"Open issue \"bug(Datepicker): Hover state on the picker persists after the calendar is clicked away\" (#20750)"},{"Id":"717245463","IsPullRequest":false,"CreatedAt":"2020-10-08T11:06:46","Actor":"akshaybhat30","Number":"20749","RawContent":null,"Title":"bug(DATEPICKER): DatePicker shows prior date inside the calendar but correct date in the input field.","State":"open","Body":"#### Reproduction\r\n\r\nStackblitz link :- https://stackblitz.com/edit/angular-moment-date-adapter-overriding-f89kp8?file=app%2Fdatepicker-formats-example.ts\r\n\r\nSteps to reproduce:\r\n1. Set current timezone to +5:30 (Chennai).\r\n2. Check the value in the input (10/01/2020) and the date selected in the calendar is showing as 01.\r\n3. Change the system timezone to -12 such that there is a difference in date and check the component again.\r\n4. the value shown outside is still 10/01/2020 but the date selected inside the component is 30.\r\n\r\n**Note i have made a custom moment date adapter for this case to handle date format based on the locale of the user**\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nThe date selected should be 10/01/2020 and should be consistent at both the places.\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nthe value shown outside is still 10/01/2020 in the input box but the date selected inside the component when you open the calendar is 09/30/2020.\r\n\r\n![image](https://user-images.githubusercontent.com/56155908/95450834-d6ded380-08f1-11eb-96c4-48d6802c360a.png)\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8\r\n- CDK/Material: 8.0.0\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n\r\nStackoverflow link:- https://stackoverflow.com/questions/62319261/issues-with-custom-moment-date-adapter\r\n","Url":"https://github.com/angular/components/issues/20749","RelatedDescription":"Open issue \"bug(DATEPICKER): DatePicker shows prior date inside the calendar but correct date in the input field.\" (#20749)"},{"Id":"717107664","IsPullRequest":true,"CreatedAt":"2020-10-08T07:45:41","Actor":"geromegrignon","Number":"20748","RawContent":null,"Title":"docs(material/table): add multiTemplateDataRows specification","State":"open","Body":"## Purpose\r\n\r\nAdd a section to material/table documentation about how to retrieve the index of a row when using the `multiTemplateDataRows` directive. This information is only accessible as a comment into the [row.ts file](https://github.com/angular/components/blob/34a7e382144bb63965589002d0ed6bb046ac6054/src/cdk/table/row.ts) of the cdk.\r\n\r\n```\r\n\r\n        Context provided to the row cells when multiTemplateDataRows is true. This context is the same\r\n        as CdkCellOutletRowContext except that the single index value is replaced by dataIndex and\r\n        renderIndex.\r\n\r\n\r\n```\r\n\r\n## Motivation\r\nHaving notifications over time about a related issue i gave an answer 2 years ago.\r\n\r\nIssue #12793","Url":"https://github.com/angular/components/pull/20748","RelatedDescription":"Open PR \"docs(material/table): add multiTemplateDataRows specification\" (#20748)"},{"Id":"715807779","IsPullRequest":true,"CreatedAt":"2020-10-08T03:05:27","Actor":"crisbeto","Number":"20737","RawContent":null,"Title":"build: stylelint not working correctly","State":"closed","Body":"Recently we changed the names of some Stylelint rules, but the linter wasn't updated which leads to several warnings for each file that goes through it.\r\n\r\nFor reference, Stylelint logs the following on the CI as well, but we didn't notice because it exits with a non-error code.\r\n\r\n```\r\nsrc/material/core/theming/tests/test-theming-api.scss\r\n 1:1  ×  Unknown rule function-url-scheme-disallowed-list         function-url-scheme-disallowed-list\r\n 1:1  ×  Unknown rule unit-allowed-list                           unit-allowed-list\r\n 1:1  ×  Unknown rule declaration-property-value-disallowed-list  declaration-property-value-disallowed-list\r\n\r\nsrc/material/core/theming/tests/test-theming-bundle.scss\r\n 1:1  ×  Unknown rule function-url-scheme-disallowed-list         function-url-scheme-disallowed-list\r\n 1:1  ×  Unknown rule unit-allowed-list                           unit-allowed-list\r\n 1:1  ×  Unknown rule declaration-property-value-disallowed-list  declaration-property-value-disallowed-list\r\n\r\nsrc/cdk/schematics/ng-update/test-cases/misc/global-stylesheets-test.scss\r\n 1:1  ×  Unknown rule function-url-scheme-disallowed-list         function-url-scheme-disallowed-list\r\n 1:1  ×  Unknown rule unit-allowed-list                           unit-allowed-list\r\n 1:1  ×  Unknown rule declaration-property-value-disallowed-list  declaration-property-value-disallowed-list\r\n```","Url":"https://github.com/angular/components/pull/20737","RelatedDescription":"Closed or merged PR \"build: stylelint not working correctly\" (#20737)"},{"Id":"716232216","IsPullRequest":true,"CreatedAt":"2020-10-08T03:05:18","Actor":"crisbeto","Number":"20743","RawContent":null,"Title":"build: fix drag-drop demo","State":"closed","Body":"I left in some invalid code in the `drag-drop` demo by accident while working on #20668 which is throwing an error now.","Url":"https://github.com/angular/components/pull/20743","RelatedDescription":"Closed or merged PR \"build: fix drag-drop demo\" (#20743)"},{"Id":"716804725","IsPullRequest":true,"CreatedAt":"2020-10-07T21:08:04","Actor":"crisbeto","Number":"20746","RawContent":null,"Title":"test(material/datepicker): fix test failure","State":"closed","Body":"A PR that changes the DOM structure of the datepicker went in at the same time as a PR that was depending on the old one, causing a test failure.","Url":"https://github.com/angular/components/pull/20746","RelatedDescription":"Closed or merged PR \"test(material/datepicker): fix test failure\" (#20746)"},{"Id":"716807655","IsPullRequest":true,"CreatedAt":"2020-10-07T19:51:55","Actor":"jelbourn","Number":"20747","RawContent":null,"Title":"docs: update readme for Q4 2020","State":"open","Body":"Fixes #20710","Url":"https://github.com/angular/components/pull/20747","RelatedDescription":"Open PR \"docs: update readme for Q4 2020\" (#20747)"},{"Id":"715937201","IsPullRequest":true,"CreatedAt":"2020-10-07T19:17:50","Actor":"mmalerba","Number":"20740","RawContent":null,"Title":"docs(cdk/collections): clarify internal method documentation","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/20740","RelatedDescription":"Closed or merged PR \"docs(cdk/collections): clarify internal method documentation\" (#20740)"},{"Id":"716636173","IsPullRequest":true,"CreatedAt":"2020-10-07T15:31:17","Actor":"crisbeto","Number":"20745","RawContent":null,"Title":"refactor: update to the latest Angular next versions and account for schematics breaking changes","State":"open","Body":"These changes update us to the latest `next` versions of the Angular packages and the latest canary of MDC. \r\n\r\nFurthermore, the latest version of the CLI removed some deprecated APIs that we were depending on. These changes update all the code so that it used the correct API (according to the CLI team). High-level overview of the changes and why they were necessary:\r\n1. Previously we parsed the `angular.json` ourselves using `JSON.parse` in order to support very old versions of the CLI, however this is no longer feasible, because the CLI has set up classes around the parsed data which are non-trivial to construct. According to the CLI, we don't have to worry about older version anymore, because the schematics infrastructure will ensure that we're running against the correct version.\r\n2. The interface of the new API is different from the one we were using before so I had to rewrite some code.\r\n3. Some of these new APIs are asynchronous so I've had to move some code around to accommodate it.\r\n4. Previously we would `JSON.parse` and `JSON.stringify` the `angular.json` file whenever we needed to mutate it (e.g. when adding a theme), but this isn't possible anymore due to the aforementioned classes around the config file. I've reworked our schematics to use a utility from the CLI to write to the file.\r\n5. A lot of our tests depended on parsing the `angular.json`, changing a property and writing it back as JSON. This isn't possible, because the abstraction around the config can't be stringified so I've worked around it by writing out the `angular.json` file from scratch in the test. While this is more code, it should be easier to maintain in the long term.","Url":"https://github.com/angular/components/pull/20745","RelatedDescription":"Open PR \"refactor: update to the latest Angular next versions and account for schematics breaking changes\" (#20745)"},{"Id":"716591475","IsPullRequest":false,"CreatedAt":"2020-10-07T14:39:23","Actor":"fosteman","Number":"20744","RawContent":null,"Title":"MatSort: Unable to provide DataSource.sort directive","State":"open","Body":"What are you trying to do?\r\nSetting up Sorting mechanism for a table. Followed through the guidelines: \r\nprovided `matSort` directive in template\r\nloaded up `MatSortModule`\r\ninstalled `@ViewChild(MatSort) sort`\r\nassigning `this.dataSource.sort = this.sort` with `this.dataSource = new MatDataSource([])`\r\n\r\n#### What troubleshooting steps have you tried?\r\n`console.log(this.sort)` is OK.\r\n```\r\nMatSort {_disabled: false, _isInitialized: true, _pendingSubscribers: null, initialized: Observable, sortables: Map(1), …}\r\ninitialized: Observable {_isScalar: false, _subscribe: ƒ}\r\nsortChange: EventEmitter_ {_isScalar: false, observers: Array(2), closed: false, isStopped: false, hasError: false, …}\r\nsortables: Map(1) {\"Score\" => MatSortHeader}\r\nstart: \"asc\"\r\n_direction: \"\"\r\n_disabled: false\r\n_isInitialized: true\r\n_pendingSubscribers: null\r\n_stateChanges: Subject {_isScalar: false, observers: Array(1), closed: false, isStopped: false, hasError: false, …}\r\ndirection: (...)\r\ndisableClear: (...)\r\ndisabled: (...)\r\n__proto__: _class4\r\n```\r\n\r\nWhat are you seeing that does not match your expectations? \r\n1. `sorting-header` does not work on number column\r\n2. Console:\r\n\r\n```\r\nAttempting to configure '__source' with descriptor '{\"value\":\"MatSortHeader\",\"configurable\":true}' on object 'function MatSort() {\r\n    var _this;\r\n\r\n    Object(_Users_timfosteman_work_space_speak_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, MatSort);\r\n\r\n    _this = _super.apply(this, arguments);\r\n    /** Collection of all registered sortables that this directive manages. */\r\n\r\n    _this.sortables = new Map();\r\n    /** Used to notify any child components listening to state changes. */\r\n\r\n    _this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_9__[\"Subject\"]();\r\n    /**\r\n     * The direction to set when an MatSortable is initially sorted.\r\n     * May be overriden by the MatSortable's sort start.\r\n     */\r\n\r\n    _this.start = 'asc';\r\n    _this._direction = '';\r\n    /** Event emitted when the user changes either the active sort or sort direction. */\r\n\r\n    _this.sortChange = new _angular_core__WEBPACK_IMPORTED_MODULE_4__[\"EventEmitter\"]();\r\n    return _this;\r\n  }' and got error, giving up: TypeError: Cannot define property __source, object is not extensible\r\n```\r\n\r\n#### Reproduction\r\n\r\nAlthough we would not see the WebPack error above in the StackBlitz, am I missing something ?\r\nhttps://stackblitz.com/edit/components-issue-ykw4sz?devtoolsheight=33&file=src/app/example-component.html\r\n\r\n  \r\n#### Environment\r\n\r\n- Angular: 10.1.3\r\n- CDK/Material: 10.1.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/20744","RelatedDescription":"Open issue \"MatSort: Unable to provide DataSource.sort directive\" (#20744)"},{"Id":"716229575","IsPullRequest":true,"CreatedAt":"2020-10-07T06:12:51","Actor":"crisbeto","Number":"20742","RawContent":null,"Title":"fix(cdk/drag-drop): references to SVG not working inside preview","State":"open","Body":"When we create a drag preview we clone the original element, move it to the bottom of the `body`, set it to `display: none` and clear all `id` attributes from the clone. As a result, SVG references inside the element break, because the source node is invisible.\r\n\r\nThese changes resolve the issue by moving the original element outside the layout and making it transparent, instead of using `display: none`.\r\n\r\nFixes #20720.","Url":"https://github.com/angular/components/pull/20742","RelatedDescription":"Open PR \"fix(cdk/drag-drop): references to SVG not working inside preview\" (#20742)"},{"Id":"716168444","IsPullRequest":false,"CreatedAt":"2020-10-07T03:37:27","Actor":"AcarMeel","Number":"20741","RawContent":null,"Title":"help(Mat Datepicker): Do not autocomplete date when focus is out","State":"open","Body":"#### What are you trying to do?\r\n\r\nI've setup a datepicker and I want to type 1 and focus out the input and keep the 1. But instead the datepicker gets autocompleted with 1/1/2001. My client doesn't like that!!\r\n\r\n`<mat-form-field appearance=\"fill\">\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>`\r\n\r\n#### What troubleshooting steps have you tried?\r\n\r\nPressing tab or leaving the focus out of the input autocompletes the date and I dont want that\r\n\r\n#### Reproduction\r\n\r\nThe issue is easily reproduced in the same page of Angular Material documentation in browsers like Chrome, Safari, IE11, etc\r\nhttps://material.angular.io/components/datepicker/overview\r\n\r\n\r\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/datepicker/overview\r\n2.  Find a datepicker\r\n3. Type 1\r\n4. Press tab or focus the input out\r\n5. See how date gets autocompleted with 1/1/2001\r\n6. My expectation is if I type 1 then leave it as 1. We take care of validations.\r\n  \r\n#### Environment\r\n\r\nAll browsers, All devices, All OS. \r\n","Url":"https://github.com/angular/components/issues/20741","RelatedDescription":"Open issue \"help(Mat Datepicker): Do not autocomplete date when focus is out\" (#20741)"},{"Id":"715674255","IsPullRequest":false,"CreatedAt":"2020-10-06T22:10:13","Actor":"ortegamarcel","Number":"20734","RawContent":null,"Title":"Scrollblock for Dialogs and Bottom Sheets: Always add 'cdk-global-scrollblock' class to the root when opening a bottom sheet or dialog","State":"closed","Body":"#### Feature Description\r\n\r\nWhen opening a dialog/bottom sheet the 'cdk-global-scrollblock' is applied to the html tag, preventing the background to be scrollable through the modal. According to the answer of @crisbeto \"The dialog won't try to block scrolling if the page isn't scrollable\" - https://github.com/angular/components/issues/16864\r\n\r\nBut actually I have a use case (with bottom sheets), where it would be useful to always apply the class.\r\n\r\n#### Use Case\r\n\r\nI have a bottom sheet menu, from which I can open other bottom sheets. The first (menu) bottom sheet applies 'cdk-global-scrollblock'. When the other one is opened, the background is not scrollable anymore (because of the blocking class), so it removes it again, making the page in the background scrollable again.\r\n\r\nMy use case is only with bottom sheets, but since the similar issue, https://github.com/angular/components/issues/16864, describes the same problem, I assume dialogs and bottom sheets work the same in this behaviour. Correct me, if I am wrong.\r\n\r\n#### Feature Request (Summary)\r\n\r\nIf 'cdk-global-scrollblock' is applied and a new bottom sheet/dialog is opened, the class should stay.\r\n","Url":"https://github.com/angular/components/issues/20734","RelatedDescription":"Closed issue \"Scrollblock for Dialogs and Bottom Sheets: Always add 'cdk-global-scrollblock' class to the root when opening a bottom sheet or dialog\" (#20734)"},{"Id":"715735039","IsPullRequest":false,"CreatedAt":"2020-10-06T22:04:59","Actor":"alexvdvalk","Number":"20736","RawContent":null,"Title":"feat(MatDatepickerModule): Inclusive End Date on date range selection","State":"closed","Body":"#### Feature Description\r\n\r\nCurrently when using the new date range picker component, the end date is exlucded from the date selection. It would be helpful to have an option to set the date picker to be inclusive of the end day.\r\n\r\n#### Use Case\r\n\r\nA user is looking for something on a single specific day, so they may set the start and end dates in the range to the same value, expecting that the range would be set for that day only.\r\n\r\nCurrently if you select the same start and end date in your range, it's essentially a range of 0 seconds. The component allows this, but it doesnt really make sense.","Url":"https://github.com/angular/components/issues/20736","RelatedDescription":"Closed issue \"feat(MatDatepickerModule): Inclusive End Date on date range selection\" (#20736)"},{"Id":"715838605","IsPullRequest":false,"CreatedAt":"2020-10-06T22:03:14","Actor":"kartikgreen","Number":"20738","RawContent":null,"Title":"cannot pass options as a template to mat-select","State":"closed","Body":"I am trying to pass mat-options as a template to mat-select but it doesn't work. Below here is the link to stackblitz,\r\n\r\nhttps://stackblitz.com/edit/angular-mat-select-with-ngmodel-mujorn?embed=1&file=app/select-overview-example.ts","Url":"https://github.com/angular/components/issues/20738","RelatedDescription":"Closed issue \"cannot pass options as a template to mat-select\" (#20738)"},{"Id":"715908517","IsPullRequest":true,"CreatedAt":"2020-10-06T18:13:03","Actor":"wagnermaciel","Number":"20739","RawContent":null,"Title":"fix(material-experimental/mdc-form-field): implement new methods added to text field adapter","State":"open","Body":"Project import generated by Copybara.\n","Url":"https://github.com/angular/components/pull/20739","RelatedDescription":"Open PR \"fix(material-experimental/mdc-form-field): implement new methods added to text field adapter\" (#20739)"},{"Id":"715727183","IsPullRequest":false,"CreatedAt":"2020-10-06T14:23:31","Actor":"Hypenate","Number":"20735","RawContent":null,"Title":"MatStepper - Cannot set property 'interacted' of undefined","State":"open","Body":"#### Reproduction\r\n\r\nI'm not to sure how to reproduce this, but I'm trying to get the index of a certain step (the last or second last) \r\n```\r\nprotected getStepIndex(): number {\r\n    // In our case uncommenthing the following comment prevents the error.\r\n    // if (this.stepper.steps.length === 0) {\r\n    //      return 0;\r\n    // }\r\n\r\n    if (true) {\r\n      return this.stepper.steps ? this.stepper.steps.length - 1 : 0;\r\n    } else {\r\n      return this.stepper.steps ? this.stepper.steps.length - 2 : 0;\r\n    }\r\n  }\r\n```\r\n\r\nThis error is thrown:\r\n> ERROR TypeError: Cannot set property 'interacted' of undefined\r\n>     at MatHorizontalStepper._anyControlsInvalidOrPending (stepper.js:446)\r\n>     at MatHorizontalStepper.set selectedIndex [as selectedIndex] (stepper.js:286)\r\n>     at WizardArchiveImportComponent.selectStartingStep (wizard-archive-import.component.ts:112)\r\n>     at wizard.base.ts:99\r\n>     at ZoneDelegate.invokeTask (zone-evergreen.js:399)\r\n>     at Object.onInvokeTask (core.js:27419)\r\n>     at ZoneDelegate.invokeTask (zone-evergreen.js:398)\r\n>     at Zone.runTask (zone-evergreen.js:167)\r\n>     at invokeTask (zone-evergreen.js:480)\r\n>     at ZoneTask.invoke (zone-evergreen.js:469)\r\n\r\n If I look into the function `_anyControlsInvalidOrPending` I see the following code: `steps[this._selectedIndex].interacted = true;` but I assume it cannot be found\r\n \r\n#### Expected Behavior\r\n\r\nNo errors are thrown, the issue should be handled -> Check if a stepper exists on that index\r\n\r\n\r\n#### Actual Behavior\r\n\r\nAn error is thrown\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 10.2.0\r\n- CDK/Material: 10.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/20735","RelatedDescription":"Open issue \"MatStepper - Cannot set property 'interacted' of undefined\" (#20735)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-10T05:30:05.088533Z","RunDurationInMilliseconds":2972}