{"Data":{"Angular-Issues":{"Issues":[{"Id":"1594308371","IsPullRequest":true,"CreatedAt":"2023-02-22T01:26:04","Actor":"alxhub","Number":"49154","RawContent":null,"Title":"Prototype of the RxJS interop layer for signals","State":"open","Body":"### For context, see this [Github Discussion](https://github.com/angular/angular/discussions/49090) on our experiments with fine-grained reactivity in Angular\r\n\r\n(the first commit here is #49150 which serves as a base for this implementation)\r\n\r\nThis is the prototype implementation of the RxJS interop layer, sketched out as a separate package (`@angular/rxjs-interop`).","Url":"https://github.com/angular/angular/pull/49154","RelatedDescription":"Open PR \"Prototype of the RxJS interop layer for signals\" (#49154)"},{"Id":"1594283239","IsPullRequest":true,"CreatedAt":"2023-02-22T00:49:31","Actor":"atscott","Number":"49153","RawContent":null,"Title":"feat(core): Mark components for check if they read a signal","State":"open","Body":"This commit updates the `LView` in Angular to be a `Consumer` of signals. If a signal is read when executing a template, it marks the view dirty. In addition, if a signal is read when executing host bindings, it also marks views dirty.\r\n\r\nOne interesting thing about signal reads in host bindings is that they perform a bit better than what we can do with today's APIs. In order to re-execute host bindings for an `OnPush` component that might have changed, you would probably inject `ChangeDetectorRef` and call `markForCheck`. This will mark the _current component_ and parents dirty. However, host bindings are executed as part of refreshing the _parent_ so there is really no need to re-execute the current component if the only thing that changed is the host bindings. When a signal is read in host bindings, it marks the parent dirty and not the component that defined the host binding.\r\n\r\nAdditionally, this commit avoids allocating a full consumer for each `LView` by re-using a consumer until template execution results in a signal read. At this point, we assign that consumer to the `LView` and create a new consumer to \"tentatively\" use for the future `LView` template executions.\r\n","Url":"https://github.com/angular/angular/pull/49153","RelatedDescription":"Open PR \"feat(core): Mark components for check if they read a signal\" (#49153)"},{"Id":"1594209540","IsPullRequest":true,"CreatedAt":"2023-02-21T23:04:24","Actor":"JeanMeche","Number":"49152","RawContent":null,"Title":"docs: escape script tag to prevent rendering problems","State":"open","Body":"un-commented tags are responsible for rendering problem of markdown document. This commit fixes the http make jsonp request guide.\r\n\r\nfixes #49151\r\n\r\n","Url":"https://github.com/angular/angular/pull/49152","RelatedDescription":"Open PR \"docs: escape script tag to prevent rendering problems\" (#49152)"},{"Id":"1594205900","IsPullRequest":false,"CreatedAt":"2023-02-21T23:00:31","Actor":"dzhavat","Number":"49151","RawContent":null,"Title":"Content missing on \"Make a JSONP request\" page","State":"open","Body":"### Describe the problem that you experienced\n\nThe content of \"Make a JSONP request\" page is missing. Probably the `<script>` tag should be escaped 🤔\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/http-make-jsonp-request\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/49151","RelatedDescription":"Open issue \"Content missing on \"Make a JSONP request\" page\" (#49151)"},{"Id":"1594189081","IsPullRequest":true,"CreatedAt":"2023-02-21T22:40:25","Actor":"alxhub","Number":"49150","RawContent":null,"Title":"feat(core): add Angular Signals to the public API","State":"open","Body":"### For context, see this [Github Discussion](https://github.com/angular/angular/discussions/49090) on our experiments with fine-grained reactivity in Angular\r\n\r\nThis commit exposes `signal`, `computed`, `effect` and various helpers from the `@angular/core` entrypoint.\r\n\r\nThese APIs are marked as `@developerPreview` and are still prototypes in active development. Their final shapes will be subject to our internal design reviews as well as one or more community RFCs. We're exporting them now to allow for experimentation using 16.0.0 next and RC releases.","Url":"https://github.com/angular/angular/pull/49150","RelatedDescription":"Open PR \"feat(core): add Angular Signals to the public API\" (#49150)"},{"Id":"1593280125","IsPullRequest":true,"CreatedAt":"2023-02-21T21:36:47","Actor":"angular-robot","Number":"49148","RawContent":null,"Title":"build: update actions/cache digest to 69d9d44","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://togithub.com/actions/cache) | action | digest | `6998d13` -> `69d9d44` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular/pull/49148","RelatedDescription":"Closed or merged PR \"build: update actions/cache digest to 69d9d44\" (#49148)"},{"Id":"1593174238","IsPullRequest":true,"CreatedAt":"2023-02-21T21:35:52","Actor":"crisbeto","Number":"49147","RawContent":null,"Title":"fix(migrations): don't copy animations modules into the imports of test components","State":"closed","Body":"Since we have less information about how to migrate test components, we copy all the `imports` from the `configureTestingModule` call into the component's `imports`. It fixes some tests, but it can cause issues with animations modules, because they throw errors if they're imported multiple times.\r\n\r\nThese changes add an exception for animations modules imported in testing modules.","Url":"https://github.com/angular/angular/pull/49147","RelatedDescription":"Closed or merged PR \"fix(migrations): don't copy animations modules into the imports of test components\" (#49147)"},{"Id":"1592869977","IsPullRequest":true,"CreatedAt":"2023-02-21T21:24:23","Actor":"angular-robot","Number":"49146","RawContent":null,"Title":"build: update eslint dependencies to v5.53.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.52.0` -> `5.53.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.52.0/5.53.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.52.0` -> `5.53.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.52.0/5.53.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.53.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5530-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5520v5530-2023-02-20)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.52.0...v5.53.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[consistent-generic-constructors] handle default parameters ([#&#8203;6484](https://togithub.com/typescript-eslint/typescript-eslint/issues/6484)) ([e8cebce](https://togithub.com/typescript-eslint/typescript-eslint/commit/e8cebce972a5009f192034304ba6e768a9bcdbb6))\n-   **eslint-plugin:** \\[no-mixed-enums] add rule ([#&#8203;6102](https://togithub.com/typescript-eslint/typescript-eslint/issues/6102)) ([16144d1](https://togithub.com/typescript-eslint/typescript-eslint/commit/16144d1d6a37668393f731913a306008f33eeac6))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.53.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5530-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5520v5530-2023-02-20)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.52.0...v5.53.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular/pull/49146","RelatedDescription":"Closed or merged PR \"build: update eslint dependencies to v5.53.0\" (#49146)"},{"Id":"1591412837","IsPullRequest":true,"CreatedAt":"2023-02-21T21:23:25","Actor":"bougwal","Number":"49140","RawContent":null,"Title":"docs(router): `canMatch` route guard method parameter update in provided sample's `canAccess`","State":"closed","Body":"Very cosmetic, but necessary (I guess): \r\n\r\nI updated the ```canAccess``` method second parameter name and type in the provided doc sample. As it stands, it triggers `TS(2345):  Argument of type 'Route' is not assignable to parameter of type 'string'`.\r\n","Url":"https://github.com/angular/angular/pull/49140","RelatedDescription":"Closed or merged PR \"docs(router): `canMatch` route guard method parameter update in provided sample's `canAccess`\" (#49140)"},{"Id":"1591363605","IsPullRequest":true,"CreatedAt":"2023-02-21T21:17:28","Actor":"crisbeto","Number":"49139","RawContent":null,"Title":"fix(migrations): return correct alias when conflicting import exists","State":"closed","Body":"Fixes that the `ImportManager` was returning the `propertyName` instead of the `name` when there's an import with a conflicting identifier.","Url":"https://github.com/angular/angular/pull/49139","RelatedDescription":"Closed or merged PR \"fix(migrations): return correct alias when conflicting import exists\" (#49139)"},{"Id":"1590600100","IsPullRequest":true,"CreatedAt":"2023-02-21T21:16:43","Actor":"crisbeto","Number":"49135","RawContent":null,"Title":"build: update AIO to TypeScript 4.9","State":"closed","Body":"Updates AIO to the latest stable version of TypeScript as a prerequisite to drop support for 4.8.","Url":"https://github.com/angular/angular/pull/49135","RelatedDescription":"Closed or merged PR \"build: update AIO to TypeScript 4.9\" (#49135)"},{"Id":"1593825707","IsPullRequest":true,"CreatedAt":"2023-02-21T17:07:56","Actor":"felipecrp","Number":"49149","RawContent":null,"Title":"feat(common):Add URL support to HttpClient","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nHttpclient does not support URL.\r\n\r\nIssue Number: #45497\r\n\r\n\r\n## What is the new behavior?\r\n\r\nHttpclient support URL.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI tried to make minor changes in the PR. Hence I updated only the main HttpClient and transformed the URL object to a string to match other internal interfaces.\r\n","Url":"https://github.com/angular/angular/pull/49149","RelatedDescription":"Open PR \"feat(common):Add URL support to HttpClient\" (#49149)"},{"Id":"1592735160","IsPullRequest":false,"CreatedAt":"2023-02-21T04:22:31","Actor":"princemaple","Number":"49145","RawContent":null,"Title":"Apply canMatch on redirect route","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nCurrently `canMatch` doesn't seem to have any effect on a route that is a `redirectTo`. I'd like to have multiple redirects and have `canMatch` decide which one to take.\n\n### Proposed solution\n\nApply `canMatch` on `redirectTo` routes as well\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/49145","RelatedDescription":"Closed issue \"Apply canMatch on redirect route\" (#49145)"},{"Id":"1592525442","IsPullRequest":true,"CreatedAt":"2023-02-20T22:38:18","Actor":"JiaLiPassion","Number":"49144","RawContent":null,"Title":"fix(zone.js): zone-node only patch Promise.prototype.then","State":"open","Body":"Close https://github.com/angular/angular/issues/47872\r\n\r\nzone-node only patches `Promise.prototype.then` instead of patch\r\n`Promise` itself. So the new NodeJS `SafePromise` will not complain\r\nthe Promise.prototype.then called on incompatible receiver.\r\n\r\nWe should also do this change on browser zone.js patch, but it will\r\nbe a big breaking change, because Promise.prototype.then will not work\r\nwith `fakeAsync` any longer.","Url":"https://github.com/angular/angular/pull/49144","RelatedDescription":"Open PR \"fix(zone.js): zone-node only patch Promise.prototype.then\" (#49144)"},{"Id":"1592222049","IsPullRequest":false,"CreatedAt":"2023-02-20T17:15:28","Actor":"json-derulo","Number":"49143","RawContent":null,"Title":"Consider switching back to `Intl` browser APIs for internationalization","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nBack in the days Angular used Intl APIs in their pipes, but due to different browser implementations this lead to many issues. So in 2017, Angular decided to go for a custom implementation, which I think was the right decision at the time. But today we are in a quite different situation. Internet Explorer support has been dropped from Angular, browser support has evolved and the browsers heavily worked on unification of their APIs. In my opinion, it should be re-evaluated whether to switch back to the Intl APIs.\r\n\r\nThis would have an effect to all pipes which require locale data, namely `date`, `currency`, `decimal` and `percent`. For developers who don't use compile-time translations it's quite inconvenient to feed those pipes with locale data. Developers need to import from `@angular/common/locales/{localeId}`, and register the data with `registerLocaleData()`. When supporting multiple locales, either they all need to be added to the bundle, or alternatively they can be loaded with a dynamic import. As a result, additional chunks containing the locale data for each language are generated. Those chunks need to be loaded at runtime depending on the locale of the user. This can lead to missing locale data while loading the application due to timing issues. The handling of locale data is the main reason why I personally don’t use any of these Angular pipes anymore and wrote own pipes instead based on `Intl`, I assume I’m not the only one.\r\n\r\nAdditionally, after a quick search in the GitHub issues, I found that there are some issues with the implementation of the pipes, which could be resolved: #47479 #48279 #48250 #45409 and more\r\n\r\nTo list some of the benefits:\r\n* Implementation is much simpler\r\n* Locale data of any locale supported out of the box\r\n    * Angular wouldn't need to care about locales at all -> less maintenance effort\r\n    * Developers wouldn't need any additional code to register locale data\r\n    * The application wouldn't need to load any code related to to locale data\r\n    * In general, less pitfalls for the developers\r\n* Falls back to browser default locale if no locale is specified\r\n\r\n### Proposed solution\r\n\r\nAngular refactors existing pipes to use the `Intl.*` browser APIs. As this might lead to breaking changes, maybe it would make sense to offer them as an opt-in.\r\n\r\nAngular could also consider adding new pipes based on the Intl APIs such as `country`, `language`, `relativeTime`, ..., as they should be quite easy to implement and maintain.\r\n\r\n### Alternatives considered\r\n\r\nCould also be solved by a community npm package. I'm currently developing one, feedback is very welcome!\r\nhttps://github.com/json-derulo/angular-ecmascript-intl","Url":"https://github.com/angular/angular/issues/49143","RelatedDescription":"Open issue \"Consider switching back to `Intl` browser APIs for internationalization\" (#49143)"},{"Id":"1591957878","IsPullRequest":true,"CreatedAt":"2023-02-20T15:17:01","Actor":"devversion","Number":"49142","RawContent":null,"Title":"ci: fix rbe initialization failing in windows job and attempt to fix flakiness","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/49142","RelatedDescription":"Closed or merged PR \"ci: fix rbe initialization failing in windows job and attempt to fix flakiness\" (#49142)"},{"Id":"1591774855","IsPullRequest":true,"CreatedAt":"2023-02-20T12:30:51","Actor":"johnmanners","Number":"49141","RawContent":null,"Title":"docs: fix typo in toh-pt6.md","State":"open","Body":"Line 425. Change 'burning' to 'burns'.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49141","RelatedDescription":"Open PR \"docs: fix typo in toh-pt6.md\" (#49141)"},{"Id":"1589245510","IsPullRequest":false,"CreatedAt":"2023-02-20T09:43:15","Actor":"angelaki","Number":"49127","RawContent":null,"Title":"@ViewChild is called multiple times for overriden properties","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen overriding a baseclasses' property and setting `@ViewChild` again, the setter is getting called twice. I think Angular show notice it and call the setter only once.\r\n\r\nIf this is an intendet behavior, where to put `@ViewChild`? In the base or concrete class? Right now I'm repeating it, since it feals more obvious to me.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-9etyr6\n\n### Please provide the exception or error you saw\n\n```true\nIn the repro you can see the console output getting triggered twice. Imho Angular should notice this and only call the setter once.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 15\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49127","RelatedDescription":"Closed issue \"@ViewChild is called multiple times for overriden properties\" (#49127)"},{"Id":"1591053878","IsPullRequest":true,"CreatedAt":"2023-02-20T03:15:23","Actor":"OnkarRuikar","Number":"49138","RawContent":null,"Title":"docs: Fix small bugs and typos","State":"open","Body":"Explanation for the changes:\r\n\r\n1.`aio/content/examples/animations/src/app/animations.ts`\r\n`aio/content/examples/animations/src/app/insert-remove.component.ts`\r\nAnimation duration is too short to see the opacity related changes. Increased the duration.\r\n2. `aio/content/examples/animations/src/app/status-slider.component.ts`\r\nThey forgot to do the accessibility related change on line 35. Also `#754600` is `saddlebrown`, so used it to match other values.\r\n3. `aio/content/examples/dependency-injection/src/app/injector.component.ts`\r\nThe video is no longer available.\r\n4. `aio/content/examples/form-validation/src/app/reactive/hero-form-reactive.component.html`\r\n`aio/content/examples/form-validation/src/app/template/hero-form-template.component.html`\r\nThe definition for the class`alert-danger` has not been provided anywhere in the example. Also, the compiler omits it from the output.\r\nThe documentation mentions of using `{{name.errors?.['forbiddenName'].value}}` in the output, but `Bob` is hard coded in the template instead.\r\n5. `aio/content/examples/http/src/app/http-interceptors/caching-interceptor.ts`\r\nRemoved unused import.\r\n6. `aio/content/guide/change-detection-skipping-subtrees.md`\r\nAs per the statement in `## Common change detection scenarios` following sections need to be subsections.\r\n7. `aio/content/guide/event-binding-concepts.md`\r\nThe text doesn't match the sample code above.\r\n8. `aio/content/guide/i18n-common-prepare.md`\r\nWe don't have to create a list for single point and repeat same explanation again.\r\n9. `aio/content/guide/image-directive.md`\r\nAvoid creating actual links for the demo urls.\r\n10. `aio/content/guide/router-tutorial.md`\r\nThe explanation doesn't match sample code below. The route  `/crisis-center` comes into picture later in the tutorial.\r\n11. `aio/content/guide/testing-utility-apis.md`\r\nThe table is broken due to these mysterious anchors. Also, the anchors haven't been used anywhere in the docs.\r\n12. `aio/content/navigation.json`\r\nPutting \"Next Steps\" at the end of the navigation list.\r\n\r\n***\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/49138","RelatedDescription":"Open PR \"docs: Fix small bugs and typos\" (#49138)"},{"Id":"1590790633","IsPullRequest":true,"CreatedAt":"2023-02-19T17:57:48","Actor":"atscott","Number":"49137","RawContent":null,"Title":"feat(testing): Provide MockPlatformLocation by default in BrowserTest…","State":"open","Body":"…ingModule\r\n\r\nTests sometimes do not mock out the `PlatformLocation` and end up affecting real browser state. This can mean changing the real URL of the browser during a test, updating the History state object, or any number of other stateful operations. This can result in a test unintentionally affecting other tests in the suite because the browser state does not usually get reset before the next test runs. Providing `MockPlatformLocation` by default prevents these types of accidental test leakages.\r\n\r\nIn addition, not providing `MockPlatformLocation` by default led to developers needing to add `RouterTestingModule` to their test suite to avoid the problems above. This module has spy `Location` providers which prevent those issues. This commit now makes `RouterTestingModule` obsolete. Developers can now just use `RouterModule.forRoot` or `provideRouter` directly in tests _without_ needing to learn to import additional test providers or modules.\r\n\r\nWith this, we should consider deprecating `RouterTestingModule` altogether and migrating developers to `RouterModule.forRoot` or `provideRouter` instead. There are some small differences between `SpyLocation` and `MockPlatformLocation` that might cause tests to fail after the migration (`MockPlatformLocation` is actually more correct in its behaviors). If this happens, we can advise developers to also add `provideLocationMocks()` to their test providers, which would re-provide the `SpyLocation` like before and should make the tests pass again.\r\n\r\nBREAKING CHANGE: `MockPlatformLocation` is now provided by default in tests. Existing tests may have behaviors which rely on\r\n`BrowserPlatformLocation` instead. For example, direct access to the `window.history` in either the test or the component rather than going through the Angular APIs (`Location.getState()`). The quickest fix is to update the providers in the test suite to override the provider again `TestBed.configureTestingModule({providers: [{provide: PlatformLocation, useClass: BrowserPlatformLocation}]})`. The ideal fix would be to update the code to instead be compatible with `MockPlatformLocation` instead.\r\n","Url":"https://github.com/angular/angular/pull/49137","RelatedDescription":"Open PR \"feat(testing): Provide MockPlatformLocation by default in BrowserTest…\" (#49137)"},{"Id":"1590754039","IsPullRequest":true,"CreatedAt":"2023-02-19T16:30:06","Actor":"JoostK","Number":"49136","RawContent":null,"Title":"Simplify ngtsc now that ngcc is gone","State":"open","Body":"See individual commits for various simplifications in the compiler that have been unlocked with the removal of ngcc.","Url":"https://github.com/angular/angular/pull/49136","RelatedDescription":"Open PR \"Simplify ngtsc now that ngcc is gone\" (#49136)"},{"Id":"1590465633","IsPullRequest":true,"CreatedAt":"2023-02-18T21:19:19","Actor":"rockyessel","Number":"49134","RawContent":null,"Title":"added punctuation to list items","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nClosing punctuation error in README.md\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: closing punctuation error\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49134","RelatedDescription":"Closed or merged PR \"added punctuation to list items\" (#49134)"},{"Id":"1590169303","IsPullRequest":true,"CreatedAt":"2023-02-18T02:42:34","Actor":"josephperrott","Number":"49133","RawContent":null,"Title":"build: update to latest remote build execution setup","State":"closed","Body":"Update to the latest RBE setup after key rotation.\r\n","Url":"https://github.com/angular/angular/pull/49133","RelatedDescription":"Closed or merged PR \"build: update to latest remote build execution setup\" (#49133)"},{"Id":"1590154930","IsPullRequest":true,"CreatedAt":"2023-02-18T01:32:21","Actor":"angular-robot","Number":"49132","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to 1f27790","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `a2efcd6` -> `1f27790` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular/pull/49132","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to 1f27790\" (#49132)"},{"Id":"1590002190","IsPullRequest":true,"CreatedAt":"2023-02-17T22:32:37","Actor":"jelbourn","Number":"49131","RawContent":null,"Title":"build: temporarily disable windows ci","State":"closed","Body":"Temporarily disable Windows CI due to an infra issue","Url":"https://github.com/angular/angular/pull/49131","RelatedDescription":"Closed or merged PR \"build: temporarily disable windows ci\" (#49131)"},{"Id":"1589875249","IsPullRequest":true,"CreatedAt":"2023-02-17T19:55:12","Actor":"AndrewKushnir","Number":"49130","RawContent":null,"Title":"ci: update AIO payload size tracking","State":"closed","Body":"This commit updates a golden file to decrease an expected payload size.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49130","RelatedDescription":"Closed or merged PR \"ci: update AIO payload size tracking\" (#49130)"},{"Id":"1589868531","IsPullRequest":true,"CreatedAt":"2023-02-17T19:37:17","Actor":"johnmanners","Number":"49129","RawContent":null,"Title":"docs: fix errors in toh-pt6.md","State":"open","Body":"Line 182 - change\r\nThe `HeroService` methods taps into the flow of observable values and send a message...\r\nto\r\nThe `getHeroes()` method taps into the flow of observable values and sends a message...\r\n\r\nLine 185 - change\r\ncall back \r\nto\r\ncallback\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49129","RelatedDescription":"Open PR \"docs: fix errors in toh-pt6.md\" (#49129)"},{"Id":"1589361623","IsPullRequest":false,"CreatedAt":"2023-02-17T13:30:54","Actor":"JMHeartley","Number":"49128","RawContent":null,"Title":"How to set up a 404 page when hosted on GitHub Pages is incorrect","State":"open","Body":"### Describe the problem that you experienced\n\nWhen going directly to a URL listed in the routes array, I received a 404 error on GitHub\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\nMy angular app was going to GitHub’s 404 error if I went to a route listed in the routes array or refreshed the browser on any page besides the homepage. The docs did explain why this happens but the solution it provides is wrong.\n\n### Describe the actions that led you to experience the problem\n\nI copied index.html and renamed it 404.html and added an empty .nojekyll file but 404 errors now went to a blank page. I followed instructions here and it worked, caching the request route, sending you to the homepage, then going to the cached route from within the app: https://shermandigital.com/blog/fix-404-errors-from-angular-projects-hosted-on-github-pages/\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/49128","RelatedDescription":"Open issue \"How to set up a 404 page when hosted on GitHub Pages is incorrect\" (#49128)"},{"Id":"1589066182","IsPullRequest":true,"CreatedAt":"2023-02-17T09:56:14","Actor":"crisbeto","Number":"49126","RawContent":null,"Title":"feat(core): add support for TypeScript 5.0","State":"open","Body":"Updates the project to support TypeScript 5.0 and to resolve any errors that came up as a result of the update.","Url":"https://github.com/angular/angular/pull/49126","RelatedDescription":"Open PR \"feat(core): add support for TypeScript 5.0\" (#49126)"},{"Id":"1588961628","IsPullRequest":true,"CreatedAt":"2023-02-17T08:46:24","Actor":"alan-agius4","Number":"49125","RawContent":null,"Title":"feat(compiler-cli): support multiple configuration files in `extends`","State":"open","Body":"TypeScript 5 support `extends` to be an array, this commit adds support to allow extending `angularCompilerOptions` from multiple config files.\r\n\r\nSee: https://devblogs.microsoft.com/typescript/announcing-typescript-5-0-beta/#supporting-multiple-configuration-files-in-extends\r\n","Url":"https://github.com/angular/angular/pull/49125","RelatedDescription":"Open PR \"feat(compiler-cli): support multiple configuration files in `extends`\" (#49125)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1594207140","IsPullRequest":false,"CreatedAt":"2023-02-21T23:01:52","Actor":"dgp1130","Number":"24755","RawContent":null,"Title":"Improve Hot Module Replacement (HMR)","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nAngular CLI currently supports HMR via `ng serve --hmr` though it isn't the ideal experience. Under the hood, this mostly rerenders the Angular application from scratch, which is better than a full page reload, but could definitely be improved. @alan-agius4 has suggested a number of opportunities for improving HMR. Most importantly, our strategy here should be to optimize the turnaround time for any given change _scaled_ with the frequency of that kind of change. For example, it is very common to make numerous tiny adjustments to CSS in quick succession while finding the precise styling needed for a page. This is a very hot path to optimize and even marginal improvements here can have a bit impact due to how frequently CSS-only changes are made during development.\n\n### Describe the solution you'd like\n\nSome ideas to improve HMR include (but are not limited to):\r\n\r\n* Fast track CSS-only changes and apply them to any existing components on the page.\r\n    * This should be relatively straightforward since we mostly need to correlate a component class with its `<style />` tag on the page, then delete and recreate that tag with the new CSS content. This would be very fast and maintain page state.\r\n    * Supporting inline styles is a bit more complicated but should be achievable?\r\n* Fast track Angular template-only changes and apply them to any existing components on the page.\r\n    * In theory, we just need to delete the generated JavaScript render functions for a component and overwrite them with the new render functions from the modified template, then re-apply the DOM.\r\n    * In practice, I think this is a challenge as Angular templates aren't completely stateless (ex. `async` pipe). But this is likely achievable in some capacity. Should be pretty quick and mostly maintain page state.\r\n    * Supporting inline templates is a bit more complicated but should be achievable?\r\n* Re-render only the currently displayed Angular route, rather than the full application.\r\n    * Statistically speaking, most code changes will be within the currently displayed Angular route and won't impact anything outside the route. In many cases, it would be sufficient to just rerender that one route.\r\n\r\nAngular template and CSS changes in particular are two areas where users frequently make a large number of small changes in quick succession and in a manner which is easy for tooling to reason about. These are two spaces where we can have a huge impact on developer's quality of life.\r\n\r\nIf we can get this good enough, I'd love to get to a place where we could turn `--hmr` on by default in `ng serve`.\n\n### Describe alternatives you've considered\n\nHMR is mostly one facet of the larger problem around \"How do we make the time between editing a file and reloading its changes in the browser as quick as possible?\" (edit/refresh time). HMR is one means of getting built changes into the running browser faster and maintain the application's current state. We should (and are) investigating ways to improve the overall edit/refresh experience independent of HMR.\r\n\r\nMore related to HMR, the focus on Angular template and CSS changes does highlight a lack of focus on TypeScript changes. This is somewhat intentional. Angular has strong separation of concerns between Angular templates (for HTML/DOM rendering), CSS (for styling), and TypeScript (for component functionality). While this isn't absolute and TypeScript can often containing rendering or styling functionality (ex. list filters or conditional CSS classes), the vast majority of DOM and CSS changes made by a developer will be done by editing a template or a stylesheet, not TypeScript.\r\n\r\nTypeScript changes are also very tricky to apply consistently with HMR. As one example, renaming a class field in TypeScript _can_ be HMR'd, however doing so often leads to inconsistencies and confusing behavior. HMR is intended to maintain the current user state, but it is effectively impossible for the build process to understand that deleting a `foo` field and creating a `bar` field as intended as a rename and state should be transferred from one property to the other during HMR. At runtime, it looks like this renamed field just \"forgot\" all its state, which can easily break the component and cause errors which require a full page reload to fix. That's one example, but the sheer variety of possible changes a user can make to TypeScript code means it can never be totally consistent or reliable.\r\n\r\nWe should definitely be open to improvements here where we can take advantage of them, and we should make sure not to let \"perfect\" be the enemy of \"good enough\". The key takeaway here is that HMR of TypeScript-only changes in Angular is simultaneously the hardest to do right, and also the least impactful. Again, _scaling_ the impact of optimizing a particular change with the _frequency_ that kind of change occurs is where we can find the most value for users.\r\n\r\n/cc @alan-agius4 for other ideas around improving HMR, definitely lots of cool stuff we're hoping to do here.","Url":"https://github.com/angular/angular-cli/issues/24755","RelatedDescription":"Open issue \"Improve Hot Module Replacement (HMR)\" (#24755)"},{"Id":"1593448992","IsPullRequest":true,"CreatedAt":"2023-02-21T16:56:43","Actor":"alan-agius4","Number":"24753","RawContent":null,"Title":"refactor(@angular-devkit/core): remove deprecated exceptions","State":"closed","Body":"\r\nWith commits removes the several deprecated exceptions.\r\n\r\nBREAKING CHANGE:\r\n\r\n- `ContentHasMutatedException`, `InvalidUpdateRecordException`, `UnimplementedException` and `MergeConflictException` API from `@angular-devkit/core` have been removed in favor of the API from `@angular-devkit/schematics`.\r\n- `UnsupportedPlatformException` - A custom error exception should be created instead.","Url":"https://github.com/angular/angular-cli/pull/24753","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/core): remove deprecated exceptions\" (#24753)"},{"Id":"1593466417","IsPullRequest":true,"CreatedAt":"2023-02-21T13:14:35","Actor":"alan-agius4","Number":"24754","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deprecated `outputPaths` and `outputPath` Builder output","State":"open","Body":"\r\n\r\nRemove the deprecated `outputPath` and `outputPaths` from the server and browser builder.\r\n\r\nBREAKING CHANGE:\r\n\r\nDeprecated `outputPath` and `outputPaths` from the server and browser builder have been removed from the builder output. Use `outputs` instead.\r\n\r\nNote: this change does not effect application developers.\r\n","Url":"https://github.com/angular/angular-cli/pull/24754","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): remove deprecated `outputPaths` and `outputPath` Builder output\" (#24754)"},{"Id":"1591367161","IsPullRequest":true,"CreatedAt":"2023-02-21T11:05:16","Actor":"angular-robot","Number":"24751","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24751","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24751)"},{"Id":"1592062897","IsPullRequest":false,"CreatedAt":"2023-02-21T10:06:07","Actor":"eneajaho","Number":"24752","RawContent":null,"Title":"Tailwind support in esbuild builder","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAdd support for tailwind just like in `@angular-devkit/build-angular:browser` builder. \n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24752","RelatedDescription":"Closed issue \"Tailwind support in esbuild builder\" (#24752)"},{"Id":"1590968832","IsPullRequest":true,"CreatedAt":"2023-02-21T10:04:01","Actor":"angular-robot","Number":"24750","RawContent":null,"Title":"build: update dependency minimatch to v7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [minimatch](https://togithub.com/isaacs/minimatch) | devDependencies | major | [`~6.2.0` -> `~7.0.0`](https://renovatebot.com/diffs/npm/minimatch/6.2.0/7.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>isaacs/minimatch</summary>\n\n### [`v7.0.0`](https://togithub.com/isaacs/minimatch/compare/v6.2.0...v7.0.0)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.2.0...v7.0.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24750","RelatedDescription":"Closed or merged PR \"build: update dependency minimatch to v7\" (#24750)"},{"Id":"1589928503","IsPullRequest":true,"CreatedAt":"2023-02-21T10:02:53","Actor":"clydin","Number":"24746","RawContent":null,"Title":"test(@angular-devkit/build-angular): additional unit tests for esbuild builder","State":"closed","Body":"The following unit tests have been ported over to test the experimental esbuild-based browser application builder:\r\n* `baseHref` option\r\n* `crossOrigin` option\r\n* TypeScript path mapping behavior","Url":"https://github.com/angular/angular-cli/pull/24746","RelatedDescription":"Closed or merged PR \"test(@angular-devkit/build-angular): additional unit tests for esbuild builder\" (#24746)"},{"Id":"1590227660","IsPullRequest":true,"CreatedAt":"2023-02-21T10:01:34","Actor":"angular-robot","Number":"24748","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.20.12` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.20.12/7.21.0) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.20.12` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.20.12/7.21.0) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.20.14` -> `7.21.1`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.20.14/7.21.1) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.20.14` -> `7.21.1`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.20.14/7.21.1) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.19.6` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.19.6/7.21.0) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.19.6` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.19.6/7.21.0) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.20.13` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.20.13/7.21.0) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.20.13` -> `7.21.0`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.20.13/7.21.0) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.52.0` -> `5.53.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.52.0/5.53.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.52.0` -> `5.53.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.52.0/5.53.0) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.25.0` -> `v1.26.2` |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.8` -> `0.17.10`](https://renovatebot.com/diffs/npm/esbuild/0.17.8/0.17.10) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.8` -> `0.17.10`](https://renovatebot.com/diffs/npm/esbuild/0.17.8/0.17.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.8` -> `0.17.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.8/0.17.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.8` -> `0.17.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.8/0.17.10) |\n| [open](https://togithub.com/sindresorhus/open) | dependencies | patch | [`8.4.1` -> `8.4.2`](https://renovatebot.com/diffs/npm/open/8.4.1/8.4.2) |\n| [open](https://togithub.com/sindresorhus/open) | devDependencies | patch | [`8.4.1` -> `8.4.2`](https://renovatebot.com/diffs/npm/open/8.4.1/8.4.2) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.1` -> `23.0.5`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.1/23.0.5) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | patch | [`1.58.2` -> `1.58.3`](https://renovatebot.com/diffs/npm/sass/1.58.2/1.58.3) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | patch | [`1.58.2` -> `1.58.3`](https://renovatebot.com/diffs/npm/sass/1.58.2/1.58.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.21.0`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7210-2023-02-20)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.20.12...v7.21.0)\n\n##### :rocket: New Feature\n\n-   `babel-core`, `babel-helper-create-class-features-plugin`, `babel-plugin-proposal-class-properties`, `babel-plugin-proposal-private-methods`, `babel-plugin-proposal-private-property-in-object`\n    -   [#&#8203;15435](https://togithub.com/babel/babel/pull/15435) feat: Implement `privateFieldsAsSymbols` assumption for classes ([@&#8203;fwienber](https://togithub.com/fwienber))\n-   `babel-helper-create-regexp-features-plugin`, `babel-plugin-proposal-regexp-modifiers`, `babel-standalone`\n    -   [#&#8203;15226](https://togithub.com/babel/babel/pull/15226) feat: Support regexp modifiers proposal ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-cli`, `babel-core`, `babel-generator`, `babel-plugin-transform-destructuring`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-react-jsx`, `babel-traverse`\n    -   [#&#8203;15022](https://togithub.com/babel/babel/pull/15022) feat: Generate sourcemaps of friendly call frames ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-parser`, `babel-types`\n    -   [#&#8203;15384](https://togithub.com/babel/babel/pull/15384) \\[ts] Support `const` modifier in type parameters ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-generator`, `babel-helpers`, `babel-parser`, `babel-plugin-proposal-decorators`, `babel-plugin-syntax-decorators`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15405](https://togithub.com/babel/babel/pull/15405) Implement decorators as presented at `2023-01` TC39 meeting ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-parser`\n    -   [#&#8203;15114](https://togithub.com/babel/babel/pull/15114) Parser option to allow `new.target` outside functions ([@&#8203;overlookmotel](https://togithub.com/overlookmotel))\n    -   [#&#8203;15320](https://togithub.com/babel/babel/pull/15320) Add `annexb: false` parser option to disable Annex B ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-core`\n    -   [#&#8203;15283](https://togithub.com/babel/babel/pull/15283) feat: Support `.cts` as configuration file ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-generator`, `babel-parser`, `babel-plugin-transform-typescript`\n    -   [#&#8203;15381](https://togithub.com/babel/babel/pull/15381) \\[ts] Support `export type * from` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15379](https://togithub.com/babel/babel/pull/15379) \\[ts5.0] Better inlining of constants in enums ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-core`\n    -   [#&#8203;15366](https://togithub.com/babel/babel/pull/15366) handling circular/shared structures in deep-clone ([@&#8203;azizghuloum](https://togithub.com/azizghuloum))\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-proposal-class-properties`, `babel-plugin-proposal-class-static-block`, `babel-plugin-proposal-private-methods`, `babel-plugin-transform-classes`, `babel-plugin-transform-new-target`\n    -   [#&#8203;15406](https://togithub.com/babel/babel/pull/15406) Preserve class elements comments in class transform ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-parser`, `babel-plugin-transform-flow-comments`, `babel-plugin-transform-flow-strip-types`, `babel-types`\n    -   [#&#8203;15414](https://togithub.com/babel/babel/pull/15414) \\[ts] Fix restrictions for optional parameters ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :nail_care: Polish\n\n-   `babel-parser`\n    -   [#&#8203;15400](https://togithub.com/babel/babel/pull/15400) polish: improve \"`await` as identifier\" error in modules ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   `babel-core`\n    -   [#&#8203;15137](https://togithub.com/babel/babel/pull/15137) Improve CJS compat with ESM-based `@babel/core` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15418](https://togithub.com/babel/babel/pull/15418) \\[ts] Handle exponentiation operator in constant folding ([@&#8203;ehoogeveen-medweb](https://togithub.com/ehoogeveen-medweb))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.53.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5530-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5520v5530-2023-02-20)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.52.0...v5.53.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[consistent-generic-constructors] handle default parameters ([#&#8203;6484](https://togithub.com/typescript-eslint/typescript-eslint/issues/6484)) ([e8cebce](https://togithub.com/typescript-eslint/typescript-eslint/commit/e8cebce972a5009f192034304ba6e768a9bcdbb6))\n-   **eslint-plugin:** \\[no-mixed-enums] add rule ([#&#8203;6102](https://togithub.com/typescript-eslint/typescript-eslint/issues/6102)) ([16144d1](https://togithub.com/typescript-eslint/typescript-eslint/commit/16144d1d6a37668393f731913a306008f33eeac6))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.53.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5530-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5520v5530-2023-02-20)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.52.0...v5.53.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.26.2`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.26.2)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.26.1...v1.26.2)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.26.2\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"dce068f085e9eabfec6d795caaabdbbe4a73550810f3cae3035aff7162e42b3c\",\n    strip_prefix = \"bazel-lib-1.26.2\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.26.2/bazel-lib-v1.26.2.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: fixup BCR presubmit; it doesn't like symlinks to rc files by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/374](https://togithub.com/aspect-build/bazel-lib/pull/374)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.26.1...v1.26.2\n\n### [`v1.26.1`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.26.1)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.26.0...v1.26.1)\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"d4879ccfbe9138f16af341346f19e0025e92c070d6bcd64fb4fc86ace4c8f30e\",\n    strip_prefix = \"bazel-lib-1.26.1\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.26.1/bazel-lib-v1.26.1.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: fixup BCR presubmit failure by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/373](https://togithub.com/aspect-build/bazel-lib/pull/373)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.26.0...v1.26.1\n\n### [`v1.26.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.26.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.25.0...v1.26.0)\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"a001471335f3b629a0cafac75c33bcced4a8b40c71eaae080afc3422e99e66d4\",\n    strip_prefix = \"bazel-lib-1.26.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.26.0/bazel-lib-v1.26.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   chore: turn on more basic precommit checks by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/aspect-build/bazel-lib/pull/372](https://togithub.com/aspect-build/bazel-lib/pull/372)\n-   build: add MacOS and Windows to CI for landed commits by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/371](https://togithub.com/aspect-build/bazel-lib/pull/371)\n-   feat: add write_aspect_bazelrc_presets macro by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/370](https://togithub.com/aspect-build/bazel-lib/pull/370)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.25.0...v1.26.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.10`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01710)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.9...v0.17.10)\n\n-   Update esbuild's handling of CSS nesting to match the latest specification changes ([#&#8203;1945](https://togithub.com/evanw/esbuild/issues/1945))\n\n    The syntax for the upcoming CSS nesting feature has [recently changed](https://webkit.org/blog/13813/try-css-nesting-today-in-safari-technology-preview/). The `@nest` prefix that was previously required in some cases is now gone, and nested rules no longer have to start with `&` (as long as they don't start with an identifier or function token).\n\n    This release updates esbuild's pass-through handling of CSS nesting syntax to match the latest specification changes. So you can now use esbuild to bundle CSS containing nested rules and try them out in a browser that supports CSS nesting (which includes nightly builds of both Chrome and Safari).\n\n    However, I'm not implementing lowering of nested CSS to non-nested CSS for older browsers yet. While the syntax has been decided, the semantics are still in flux. In particular, there is still some debate about changing the fundamental way that CSS nesting works. For example, you might think that the following CSS is equivalent to a `.outer .inner button { ... }` rule:\n\n    ```css\n    .inner button {\n      .outer & {\n        color: red;\n      }\n    }\n    ```\n\n    But instead it's actually equivalent to a `.outer :is(.inner button) { ... }` rule which unintuitively also matches the following DOM structure:\n\n    ```html\n    <div class=\"inner\">\n      <div class=\"outer\">\n        <button></button>\n      </div>\n    </div>\n    ```\n\n    The `:is()` behavior is preferred by browser implementers because it's more memory-efficient, but the straightforward translation into a `.outer .inner button { ... }` rule is preferred by developers used to the existing CSS preprocessing ecosystem (e.g. SASS). It seems premature to commit esbuild to specific semantics for this syntax at this time given the ongoing debate.\n\n-   Fix cross-file CSS rule deduplication involving `url()` tokens ([#&#8203;2936](https://togithub.com/evanw/esbuild/issues/2936))\n\n    Previously cross-file CSS rule deduplication didn't handle `url()` tokens correctly. These tokens contain references to import paths which may be internal (i.e. in the bundle) or external (i.e. not in the bundle). When comparing two `url()` tokens for equality, the underlying import paths should be compared instead of their references. This release of esbuild fixes `url()` token comparisons. One side effect is that `@font-face` rules should now be deduplicated correctly across files:\n\n    ```css\n    /* Original code */\n    @&#8203;import \"data:text/css, \\\n      @&#8203;import 'http://example.com/style.css'; \\\n      @&#8203;font-face { src: url(http://example.com/font.ttf) }\";\n    @&#8203;import \"data:text/css, \\\n      @&#8203;font-face { src: url(http://example.com/font.ttf) }\";\n\n    /* Old output (with --bundle --minify) */\n    @&#8203;import\"http://example.com/style.css\";@&#8203;font-face{src:url(http://example.com/font.ttf)}@&#8203;font-face{src:url(http://example.com/font.ttf)}\n\n    /* New output (with --bundle --minify) */\n    @&#8203;import\"http://example.com/style.css\";@&#8203;font-face{src:url(http://example.com/font.ttf)}\n    ```\n\n### [`v0.17.9`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0179)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.8...v0.17.9)\n\n-   Parse rest bindings in TypeScript types ([#&#8203;2937](https://togithub.com/evanw/esbuild/issues/2937))\n\n    Previously esbuild was unable to parse the following valid TypeScript code:\n\n    ```ts\n    let tuple: (...[e1, e2, ...es]: any) => any\n    ```\n\n    This release includes support for parsing code like this.\n\n-   Fix TypeScript code translation for certain computed `declare` class fields ([#&#8203;2914](https://togithub.com/evanw/esbuild/issues/2914))\n\n    In TypeScript, the key of a computed `declare` class field should only be preserved if there are no decorators for that field. Previously esbuild always preserved the key, but esbuild will now remove the key to match the output of the TypeScript compiler:\n\n    ```ts\n    // Original code\n    declare function dec(a: any, b: any): any\n    declare const removeMe: unique symbol\n    declare const keepMe: unique symbol\n    class X {\n        declare [removeMe]: any\n        @&#8203;dec declare [keepMe]: any\n    }\n\n    // Old output\n    var _a;\n    class X {\n    }\n    removeMe, _a = keepMe;\n    __decorateClass([\n      dec\n    ], X.prototype, _a, 2);\n\n    // New output\n    var _a;\n    class X {\n    }\n    _a = keepMe;\n    __decorateClass([\n      dec\n    ], X.prototype, _a, 2);\n    ```\n\n-   Fix a crash with path resolution error generation ([#&#8203;2913](https://togithub.com/evanw/esbuild/issues/2913))\n\n    In certain situations, a module containing an invalid import path could previously cause esbuild to crash when it attempts to generate a more helpful error message. This crash has been fixed.\n\n</details>\n\n<details>\n<summary>sindresorhus/open</summary>\n\n### [`v8.4.2`](https://togithub.com/sindresorhus/open/releases/tag/v8.4.2)\n\n[Compare Source](https://togithub.com/sindresorhus/open/compare/v8.4.1...v8.4.2)\n\n-   Fix support for Podman  [`51fae87`](https://togithub.com/sindresorhus/open/commit/51fae87)\n\n</details>\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v23.0.5`](https://togithub.com/quicktype/quicktype/compare/2fcecd9ff49b95aa77e269621552927b8fe00751...61a10839ef31a0aa1d71278045ac9605494ff369)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/2fcecd9ff49b95aa77e269621552927b8fe00751...61a10839ef31a0aa1d71278045ac9605494ff369)\n\n### [`v23.0.4`](https://togithub.com/quicktype/quicktype/compare/504204bedd1c968eb431ca9a6f7c43b3170c8d1a...2fcecd9ff49b95aa77e269621552927b8fe00751)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/504204bedd1c968eb431ca9a6f7c43b3170c8d1a...2fcecd9ff49b95aa77e269621552927b8fe00751)\n\n### [`v23.0.3`](https://togithub.com/quicktype/quicktype/compare/518de86687d865559cffc7f2e2eff7e28cd7999d...504204bedd1c968eb431ca9a6f7c43b3170c8d1a)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/518de86687d865559cffc7f2e2eff7e28cd7999d...504204bedd1c968eb431ca9a6f7c43b3170c8d1a)\n\n### [`v23.0.2`](https://togithub.com/quicktype/quicktype/compare/649c20f46b7cc784cbfb36da419b0cdb4eceb6e5...518de86687d865559cffc7f2e2eff7e28cd7999d)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/649c20f46b7cc784cbfb36da419b0cdb4eceb6e5...518de86687d865559cffc7f2e2eff7e28cd7999d)\n\n</details>\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.58.3`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1583)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.58.2...1.58.3)\n\n-   No user-visible changes.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0NS4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24748","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24748)"},{"Id":"1590288359","IsPullRequest":false,"CreatedAt":"2023-02-19T14:44:03","Actor":"dhamuace","Number":"24749","RawContent":null,"Title":"Error from global error handler TypeError: Cannot read properties of undefined (reading 'add')","State":"closed","Body":"### Command\n\nbuild, run, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nGetting this error in my app. And not able to fix it. Tried may ways from past 1 month. Please help.\r\n\r\nIssue getting from : node_modules\\@angular\\platform-browser\\fesm2015\\platform-browser.mjs\r\n\r\nLine number : 622 and 625.\r\n\r\n![image](https://user-images.githubusercontent.com/8780505/219854758-10fbb458-e582-4e4d-89b4-c0cbd9da4f14.png)\r\n![image](https://user-images.githubusercontent.com/8780505/219854873-2c65855c-b670-4333-bd52-9a736d37f2dc.png)\r\n![image](https://user-images.githubusercontent.com/8780505/219854901-0551fb12-2614-4fb3-b25b-568c7c5d0e3b.png)\r\n\n\n### Minimal Reproduction\n\nWhen I go to this page I am getting the error : \r\n\r\nhttps://app.lottosocial.com/mainTabs/tabs/syndicate\r\n\r\nVendor JS file : https://app.lottosocial.com/vendor.fabb00d05b4c73bf.js\n\n### Exception or Error\n\n```text\nvendor.fabb00d05b4c73bf.js:1 Error from global error handler TypeError: Cannot read properties of undefined (reading 'add')\r\n    at lt.value (vendor.fabb00d05b4c73bf.js:1:3156453)\r\n    at ee.value (vendor.fabb00d05b4c73bf.js:1:3144328)\r\n    at vendor.fabb00d05b4c73bf.js:1:2661404\r\n    at Array.forEach (<anonymous>)\r\n    at un.value (vendor.fabb00d05b4c73bf.js:1:2661367)\r\n    at vendor.fabb00d05b4c73bf.js:1:2660728\r\n    at l.value (vendor.fabb00d05b4c73bf.js:1:2829619)\r\n    at un.value (vendor.fabb00d05b4c73bf.js:1:2660558)\r\n    at un.value (vendor.fabb00d05b4c73bf.js:1:2660042)\r\n    at Ri (vendor.fabb00d05b4c73bf.js:1:2721911)\r\n    at Ji (vendor.fabb00d05b4c73bf.js:1:2721706)\r\n    at Fi (vendor.fabb00d05b4c73bf.js:1:2721423)\r\n    at zc (vendor.fabb00d05b4c73bf.js:1:2752414)\r\n    at Gp (vendor.fabb00d05b4c73bf.js:1:2752688)\r\n    at zc (vendor.fabb00d05b4c73bf.js:1:2752713)\r\n    at Gp (vendor.fabb00d05b4c73bf.js:1:2752688)\r\n    at zc (vendor.fabb00d05b4c73bf.js:1:2752713)\r\n    at Gp (vendor.fabb00d05b4c73bf.js:1:2752688)\r\n    at zc (vendor.fabb00d05b4c73bf.js:1:2752713)\r\n    at Gp (vendor.fabb00d05b4c73bf.js:1:2752688)\r\n\r\nVendor file : https://app.lottosocial.com/vendor.fabb00d05b4c73bf.js\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 13.3.10\r\nNode: 16.17.0\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 13.3.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.10\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.3.10\r\n@angular-devkit/schematics      13.3.10\r\n@angular/cdk                    13.3.9\r\n@angular/cli                    13.3.10\r\n@angular/fire                   7.5.0\r\n@angular/flex-layout            11.0.0-beta.33\r\n@angular/material               13.3.9\r\n@angular/pwa                    0.803.29\r\n@schematics/angular             13.3.10\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24749","RelatedDescription":"Closed issue \"Error from global error handler TypeError: Cannot read properties of undefined (reading 'add')\" (#24749)"},{"Id":"1590170284","IsPullRequest":true,"CreatedAt":"2023-02-18T02:38:49","Actor":"josephperrott","Number":"24747","RawContent":null,"Title":"build: update to latest remote build execution setup","State":"closed","Body":"Update to the latest RBE setup after key rotation.\r\n","Url":"https://github.com/angular/angular-cli/pull/24747","RelatedDescription":"Closed or merged PR \"build: update to latest remote build execution setup\" (#24747)"},{"Id":"1589410986","IsPullRequest":false,"CreatedAt":"2023-02-17T16:37:02","Actor":"PostalMike","Number":"24743","RawContent":null,"Title":"Bloated webpack  cache in .angular folder","State":"closed","Body":"### Command\n\nconfig\n\n### Description\n\nPlease see your issue 22323 and the related prior issue.\r\n\r\nJust wondering about more granular control of the cache.  All of a sudden the webpack files were default added into TFS and caused a simply resolved muck-up.  Being new to this, got with my higher ups to confirm we just exclude .angular from check in -- intuitively obvious but still -- they were default selected for check in.  So naturally, ask why :)\r\n\r\nHow can we more granularly control the size of this cache and know what to delete safely?  There is supposedly a tool for this but I can't find where to download it.  So this may be the answer we're looking for.  Issue 22323 mentions this, again, I'll be derned if I can find it.\r\n\r\nMain point is -- just arbitrarily caching all these entries did have the above mentioned side effect.\n\n### Describe the solution you'd like\n\nMore clearly publish the location of this maintenance tool mentioned in issue 22323.  That's the best start.  If it doesn't work or some ideas come up for improvement after this I'll mention them.\n\n### Describe alternatives you've considered\n\nNone.","Url":"https://github.com/angular/angular-cli/issues/24743","RelatedDescription":"Closed issue \"Bloated webpack  cache in .angular folder\" (#24743)"},{"Id":"1589520823","IsPullRequest":false,"CreatedAt":"2023-02-17T16:17:24","Actor":"angular-robot","Number":"24744","RawContent":null,"Title":"Action Required: Fix Renovate Configuration","State":"closed","Body":"There is an error with this repository's Renovate configuration that needs to be fixed. As a precaution, Renovate will stop PRs until it is resolved.\n\nLocation: `renovate.json`\nError type: The renovate configuration file contains some invalid settings\nMessage: `Invalid packageRules[0].schedule: 'Invalid schedule: Failed to parse \"schedule:monthly\"'`\n","Url":"https://github.com/angular/angular-cli/issues/24744","RelatedDescription":"Closed issue \"Action Required: Fix Renovate Configuration\" (#24744)"},{"Id":"1589283524","IsPullRequest":true,"CreatedAt":"2023-02-17T16:10:22","Actor":"alan-agius4","Number":"24742","RawContent":null,"Title":"feat(@angular/cli): remove deprecated `defaultProject` from workspace configuration","State":"closed","Body":"**feat(@angular/cli): remove deprecated defaultProject from workspace configuration**\r\n\r\nThe deprecated 'defaultProject' workspace option has been removed\r\n    \r\nBREAKING CHANGE: The deprecated `defaultProject` workspace option has been removed. The project to use will be determined from the current working directory.\r\n\r\n\r\n---\r\n\r\n**feat(@angular/cli): remove deprecated `defaultCollection` from workspace configuration**\r\n\r\nThe deprecated 'defaultCollection' workspace option has been removed\r\n\r\nBREAKING CHANGE:\r\n\r\nThe deprecated `defaultCollection` workspace option has been removed. Use `schematicCollections` instead.\r\n\r\nBefore\r\n```json\r\n\"defaultCollection\": \"@angular/material\"\r\n```\r\n\r\nAfter\r\n```json\r\n\"schematicCollections\": [\"@angular/material\"]\r\n```","Url":"https://github.com/angular/angular-cli/pull/24742","RelatedDescription":"Closed or merged PR \"feat(@angular/cli): remove deprecated `defaultProject` from workspace configuration\" (#24742)"},{"Id":"1589574831","IsPullRequest":true,"CreatedAt":"2023-02-17T16:09:58","Actor":"alan-agius4","Number":"24745","RawContent":null,"Title":"ci: fix renovate monthly schedule","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24745","RelatedDescription":"Closed or merged PR \"ci: fix renovate monthly schedule\" (#24745)"},{"Id":"1588813178","IsPullRequest":true,"CreatedAt":"2023-02-17T15:11:36","Actor":"angular-robot","Number":"24739","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/concatjs](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | minor | [`5.7.3` -> `5.8.1`](https://renovatebot.com/diffs/npm/@bazel%2fconcatjs/5.7.3/5.8.1) |\n| [@bazel/jasmine](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | minor | [`5.7.3` -> `5.8.1`](https://renovatebot.com/diffs/npm/@bazel%2fjasmine/5.7.3/5.8.1) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.24.2` -> `v1.25.0` |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.0` -> `23.0.1`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.0/23.0.1) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | patch | [`1.58.1` -> `1.58.2`](https://renovatebot.com/diffs/npm/sass/1.58.1/1.58.2) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | patch | [`1.58.1` -> `1.58.2`](https://renovatebot.com/diffs/npm/sass/1.58.1/1.58.2) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.16.3` -> `5.16.4`](https://renovatebot.com/diffs/npm/terser/5.16.3/5.16.4) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.16.3` -> `5.16.4`](https://renovatebot.com/diffs/npm/terser/5.16.3/5.16.4) |\n| [yargs](https://yargs.js.org/) ([source](https://togithub.com/yargs/yargs)) | dependencies | minor | [`17.6.2` -> `17.7.0`](https://renovatebot.com/diffs/npm/yargs/17.6.2/17.7.0) |\n| [yargs](https://yargs.js.org/) ([source](https://togithub.com/yargs/yargs)) | devDependencies | minor | [`17.6.2` -> `17.7.0`](https://renovatebot.com/diffs/npm/yargs/17.6.2/17.7.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v5.8.1`](https://togithub.com/bazelbuild/rules_nodejs/blob/HEAD/CHANGELOG.md#&#8203;581-httpsgithubcombazelbuildrulesnodejscompare573581-2023-02-16)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.7.3...5.8.1)\n\n##### Bug Fixes\n\n-   **builtin:** convert pkg_web to use cjs instead of js ([#&#8203;3500](https://togithub.com/bazelbuild/rules_nodejs/issues/3500)) ([d36a73a](https://togithub.com/bazelbuild/rules_nodejs/commit/d36a73a))\n-   **concatjs:** resolve error with TypeScript 5.0 ([e073e18](https://togithub.com/bazelbuild/rules_nodejs/commit/e073e18))\n\n##### Features\n\n-   provide [@&#8203;nodejs](https://togithub.com/nodejs) repository ([a5755eb](https://togithub.com/bazelbuild/rules_nodejs/commit/a5755eb)), closes [#&#8203;3375](https://togithub.com/bazelbuild/rules_nodejs/issues/3375)\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.25.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.25.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.24.2...v1.25.0)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.25.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"d2a71e1e39961535db2f9164c7a588cff1a86938564634532062ed3a3cf307b3\",\n    strip_prefix = \"bazel-lib-1.25.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.25.0/bazel-lib-v1.25.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: migrate Aspect Workflows configuration past breaking changes by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/355](https://togithub.com/aspect-build/bazel-lib/pull/355)\n-   fix: fix a bug where `bazel run @&#8203;jq//:jq` cannot be run on M1 by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/354](https://togithub.com/aspect-build/bazel-lib/pull/354)\n-   fix: show directory being copied to in copy_to_directory progress message by [@&#8203;jbedard](https://togithub.com/jbedard) in [https://github.com/aspect-build/bazel-lib/pull/345](https://togithub.com/aspect-build/bazel-lib/pull/345)\n-   fix: allow additional attributes to be passed to assert_\\* tests by [@&#8203;kormide](https://togithub.com/kormide) in [https://github.com/aspect-build/bazel-lib/pull/357](https://togithub.com/aspect-build/bazel-lib/pull/357)\n-   feat: add to_rlocation_path and to_repository_relative_path functions to paths.bzl by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/362](https://togithub.com/aspect-build/bazel-lib/pull/362)\n-   Fix Realpath relying on path.IsAbs which does not work on windows by [@&#8203;jacobgardner](https://togithub.com/jacobgardner) in [https://github.com/aspect-build/bazel-lib/pull/358](https://togithub.com/aspect-build/bazel-lib/pull/358)\n-   fix: incorrect 'find -type' argument used on MacOS by [@&#8203;acordiner](https://togithub.com/acordiner) in [https://github.com/aspect-build/bazel-lib/pull/366](https://togithub.com/aspect-build/bazel-lib/pull/366)\n-   chore: fix spelling by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/aspect-build/bazel-lib/pull/368](https://togithub.com/aspect-build/bazel-lib/pull/368)\n-   feat: make bazel-lib the source-of-truth for Aspect recommended bazelrc settings by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/369](https://togithub.com/aspect-build/bazel-lib/pull/369)\n\n#### New Contributors\n\n-   [@&#8203;jacobgardner](https://togithub.com/jacobgardner) made their first contribution in [https://github.com/aspect-build/bazel-lib/pull/358](https://togithub.com/aspect-build/bazel-lib/pull/358)\n-   [@&#8203;acordiner](https://togithub.com/acordiner) made their first contribution in [https://github.com/aspect-build/bazel-lib/pull/366](https://togithub.com/aspect-build/bazel-lib/pull/366)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.24.2...v1.25.0\n\n</details>\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v23.0.1`](https://togithub.com/quicktype/quicktype/compare/c16e7cc9865da4122903ca22f379a82bedc11d41...649c20f46b7cc784cbfb36da419b0cdb4eceb6e5)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/c16e7cc9865da4122903ca22f379a82bedc11d41...649c20f46b7cc784cbfb36da419b0cdb4eceb6e5)\n\n</details>\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.58.2`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1582)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.58.1...1.58.2)\n\n##### Command Line Interface\n\n-   Add a timestamp to messages printed in `--watch` mode.\n\n-   Print better `calc()`-based suggestions for `/`-as-division expression that\n    contain calculation-incompatible constructs like unary minus.\n\n</details>\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.16.4`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5164)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.16.3...v5.16.4)\n\n-   Keep `(defaultArg = undefined) => ...`, because default args don't count for function length\n-   Prevent inlining variables into `?.` optional chains\n-   Avoid removing unused arguments while transforming\n-   Optimize iterating AST node lists\n-   Make sure `catch` and `finally` aren't children of `try` in the AST\n-   Use modern unicode property escapes (`\\p{...}`) to parse identifiers when available\n\n</details>\n\n<details>\n<summary>yargs/yargs</summary>\n\n### [`v17.7.0`](https://togithub.com/yargs/yargs/blob/HEAD/CHANGELOG.md#&#8203;1770-httpsgithubcomyargsyargscomparev1762v1770-2023-02-13)\n\n[Compare Source](https://togithub.com/yargs/yargs/compare/v17.6.2...v17.7.0)\n\n##### Features\n\n-   add method to hide option extras ([#&#8203;2156](https://togithub.com/yargs/yargs/issues/2156)) ([2c144c4](https://togithub.com/yargs/yargs/commit/2c144c4ea534646df26d6177f73ce917105c6c09))\n-   convert line break to whitespace for the description of the option ([#&#8203;2271](https://togithub.com/yargs/yargs/issues/2271)) ([4cb41dc](https://togithub.com/yargs/yargs/commit/4cb41dc80aaa730a2abd15bd3118ecd9f4ebe876))\n\n##### Bug Fixes\n\n-   copy the description of the option to its alias in completion ([#&#8203;2269](https://togithub.com/yargs/yargs/issues/2269)) ([f37ee6f](https://togithub.com/yargs/yargs/commit/f37ee6f7da386a1244bf0a0c21b9572f2bb3131b))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDIuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0Mi4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24739","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24739)"},{"Id":"1589118017","IsPullRequest":true,"CreatedAt":"2023-02-17T15:10:37","Actor":"alan-agius4","Number":"24740","RawContent":null,"Title":"ci: reduce quicktype-core updates","State":"closed","Body":"quicktype-core publishes on a per commit basis. This change reduces the updates to monthly.\r\n","Url":"https://github.com/angular/angular-cli/pull/24740","RelatedDescription":"Closed or merged PR \"ci: reduce quicktype-core updates\" (#24740)"},{"Id":"1589207677","IsPullRequest":false,"CreatedAt":"2023-02-17T12:14:59","Actor":"wszydlak","Number":"24741","RawContent":null,"Title":"`ng update @angular/cli` for custom builders","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nCurrently if I use custom builders (such as `@angular-builders/custom-webpack`) doing `ng update @angular/cli` skips some updates (for version 15 it doesn't update main karma file). This is due to migration step which checks if builder target is `@angular-devkit/build-angular:karma`. There should be a way to do migrations also for custom builders (which are using `@angular-devkit/build-angular` with webpack and index.html customizations under the hood).\r\n\r\nAt least i expect Angular migrations to work with community well known custom builders (such as `@angular-builders/custom-webpack` or `ngx-build-plus`), ideally it should work for any custom builders. Maybe migrations should not be checking only `@angular-devkit/build-angular` builders?\r\n\r\n### Minimal Reproduction\r\n\r\n1. Set `\"builder\": \"@angular-builders/custom-webpack:karma\",` for \"test\" architect in `angular.json` file\r\n2. Run `ng update @angular/cli`\r\n\r\n### Exception or Error\r\n\r\nMain karma file is not updated, but it should be updated.\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 14.2.10\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3 \r\nOS: darwin arm64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1402.10\r\n@angular-devkit/core         14.2.10\r\n@angular-devkit/schematics   14.2.10\r\n@angular/cli                 14.2.10\r\n@schematics/angular          14.2.10\r\nrxjs                         7.5.7\r\ntypescript                   4.7.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24741","RelatedDescription":"Closed issue \"`ng update @angular/cli` for custom builders\" (#24741)"},{"Id":"1587026642","IsPullRequest":false,"CreatedAt":"2023-02-17T08:22:05","Actor":"lsa-shanghai","Number":"24729","RawContent":null,"Title":"Can you add a base-path parameter with ng generate command","State":"closed","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\nWhen I build angular library with Secondary Entry Points in a sample layout as below:\r\n```\r\nmy_package \r\n├── src\r\n|   ├── public_api.ts\r\n|   └── *.ts\r\n├── ng-package.json\r\n├── package.json\r\n└── testing\r\n    ├── src\r\n    |   ├── public_api.ts\r\n    |   └── *.ts\r\n    └── ng-package.json\r\n```\r\n\r\nI need to use `ng g` command under main entry point and Secondary Entry Points. But the command just works with \"src\\lib\" as base path. \r\n\r\n### Describe the solution you'd like\r\n\r\nCould you provide \"base-path\" parameter with `ng g` command.   \r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24729","RelatedDescription":"Closed issue \"Can you add a base-path parameter with ng generate command\" (#24729)"},{"Id":"1588286535","IsPullRequest":true,"CreatedAt":"2023-02-16T20:13:03","Actor":"clydin","Number":"24738","RawContent":null,"Title":"ci: correctly store E2E test results and artifacts","State":"closed","Body":"The CircleCI commands to store the E2E test results and artifacts was outdated which caused nothing to be saved.","Url":"https://github.com/angular/angular-cli/pull/24738","RelatedDescription":"Closed or merged PR \"ci: correctly store E2E test results and artifacts\" (#24738)"},{"Id":"1587805909","IsPullRequest":false,"CreatedAt":"2023-02-16T19:11:36","Actor":"cakeinpanic","Number":"24736","RawContent":null,"Title":"Error: Terser failed for unknown reason if scripts file is empty","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n11.0.7\n\n### Description\n\nHi, I have upgraded angular from `11.0.7` to `13.3.10` and now Terser plugin throws an error if I have `scripts` in my build config and they produce an empty Terser build. It happens **only** with `\"aot\": true`\r\n\r\n\n\n### Minimal Reproduction\n\n```\r\n \"targets\": {\r\n    \"build\": {\r\n      \"executor\": \"@angular-devkit/build-angular:browser\",\r\n      \"options\": {\r\n        .... \r\n        \"aot\": true,\r\n        \"scripts\": [\r\n          {\r\n            \"input\": \"apps/app/src/monitoring.js\",\r\n            \"inject\": false,\r\n            \"bundleName\": \"monitoring\"\r\n          }\r\n        ]\r\n      },\r\n```\r\n\r\n`monitoring.js` looks like this:\r\n```\r\n// some commented js code\r\n```\r\n\r\nCommand to run\r\n```\r\n> nx run app:build\r\n```\r\n\n\n### Exception or Error\n\n```text\n✔ Browser application bundle generation complete.\r\n\r\nError: Optimization error [monitoring.js]: Error: Terser failed for unknown reason.\r\n    at optimizeWithTerser (/Users/cakeinpanic/projects/app/node_modules/@angular-devkit/build-angular/src/webpack/plugins/javascript-optimizer-worker.js:137:15)\r\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\n    at async default_1 (/Users/cakeinpanic/projects/app/node_modules/@angular-devkit/build-angular/src/webpack/plugins/javascript-optimizer-worker.js:29:26)\r\n    at async /Users/cakeinpanic/projects/app/node_modules/piscina/dist/src/worker.js:141:26\n```\n\n\n### Your Environment\n\n```text\n\"@angular/animations\": \"13.3.12\",\r\n    \"@angular/cdk\": \"13.3.9\",\r\n    \"@angular/common\": \"13.3.12\",\r\n    \"@angular/compiler\": \"13.3.12\",\r\n    \"@angular/core\": \"13.3.12\",\r\n    \"@angular/forms\": \"13.3.12\",\r\n    \"@angular/platform-browser\": \"13.3.12\",\r\n    \"@angular/platform-browser-dynamic\": \"13.3.12\",\r\n    \"@angular/router\": \"13.3.12\",\r\n    \"@angular-devkit/build-angular\": \"13.3.10\",\r\n    \"@angular/cli\": \"13.3.10\",\r\n    \"@angular/compiler-cli\": \"13.3.12\",\n```\n\n\n### Anything else relevant?\n\n1. If I change`monitoring.js`content to 🔽 all build well\r\n```\r\nconsole.log(333)\r\n// some commented js code\r\n```\r\n2. If I remove `\"aot\": true`, all build well\r\n\r\n\r\nI assume that the issue is that Terser produces an *empty file* and can't handle this","Url":"https://github.com/angular/angular-cli/issues/24736","RelatedDescription":"Closed issue \"Error: Terser failed for unknown reason if scripts file is empty\" (#24736)"},{"Id":"1588170057","IsPullRequest":true,"CreatedAt":"2023-02-16T19:11:35","Actor":"clydin","Number":"24737","RawContent":null,"Title":"fix(@angular-devkit/build-angular): allow empty scripts to be optimized","State":"closed","Body":"When using the internal JavaScript optimizer plugin for Webpack with an empty script file provided via the `scripts` option, the build would fail. This was because of a safety check that was checking whether the terser result was falsy. Since an empty string is considered falsy, the build considered the result to be an error. The safety check now will only trigger if the terser result is not a string value to avoid this case.\r\n\r\nFixes #24736","Url":"https://github.com/angular/angular-cli/pull/24737","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): allow empty scripts to be optimized\" (#24737)"},{"Id":"1587787592","IsPullRequest":true,"CreatedAt":"2023-02-16T18:03:43","Actor":"clydin","Number":"24735","RawContent":null,"Title":"build: update output target to ES2020","State":"closed","Body":"The minimum supported Node.js version is now v16.13. This version provides full support for ES2020 allowing the output code target to be increased. While Node.js v16.13 supports higher ECMAScript versions, a limitation of the bazel `ts_library` rule currently prevents increasing further at this time.","Url":"https://github.com/angular/angular-cli/pull/24735","RelatedDescription":"Closed or merged PR \"build: update output target to ES2020\" (#24735)"},{"Id":"1587231496","IsPullRequest":true,"CreatedAt":"2023-02-16T15:00:39","Actor":"angular-robot","Number":"24732","RawContent":null,"Title":"build: update dependency quicktype-core to v23","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | major | [`22.0.0` -> `23.0.0`](https://renovatebot.com/diffs/npm/quicktype-core/22.0.0/23.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v23.0.0`](https://togithub.com/quicktype/quicktype/compare/0fc948fdbe40f7d588920e3f59dfa9daa1054f4b...c16e7cc9865da4122903ca22f379a82bedc11d41)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/0fc948fdbe40f7d588920e3f59dfa9daa1054f4b...c16e7cc9865da4122903ca22f379a82bedc11d41)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDEuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0MS4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24732","RelatedDescription":"Closed or merged PR \"build: update dependency quicktype-core to v23\" (#24732)"},{"Id":"1587398141","IsPullRequest":true,"CreatedAt":"2023-02-16T14:36:10","Actor":"alan-agius4","Number":"24733","RawContent":null,"Title":"build: remove no longer used scripts","State":"closed","Body":"This commit removes scripts which have been replaced with Bazel.\r\n","Url":"https://github.com/angular/angular-cli/pull/24733","RelatedDescription":"Closed or merged PR \"build: remove no longer used scripts\" (#24733)"},{"Id":"1586755953","IsPullRequest":true,"CreatedAt":"2023-02-16T14:08:24","Actor":"clydin","Number":"24728","RawContent":null,"Title":"refactor(@angular/cli): remove Node.js v14 support","State":"closed","Body":"BREAKING CHANGE: Node.js v14 support has been removed\r\n\r\nNode.js v14 is planned to be End-of-Life on 2023-04-30. Angular will stop supporting Node.js v14 in Angular v16. Angular v16 will continue to officially support Node.js versions v16 and v18.","Url":"https://github.com/angular/angular-cli/pull/24728","RelatedDescription":"Closed or merged PR \"refactor(@angular/cli): remove Node.js v14 support\" (#24728)"},{"Id":"1587418432","IsPullRequest":true,"CreatedAt":"2023-02-16T12:26:53","Actor":"devversion","Number":"24734","RawContent":null,"Title":"build: avoid unnecessary re-evaluation of starlark code","State":"closed","Body":"The experimental allow tags propagation flag is a `BuildLanguage` option and causes all Starlark code to be re-invoked. This causes a slow-down when switching between bazel query/ bazel build because the option is not set for `bazel query`.\r\n\r\nWe fix it by applying the option to all commands, using `common`.","Url":"https://github.com/angular/angular-cli/pull/24734","RelatedDescription":"Closed or merged PR \"build: avoid unnecessary re-evaluation of starlark code\" (#24734)"},{"Id":"1587057836","IsPullRequest":false,"CreatedAt":"2023-02-16T09:36:27","Actor":"hoosayn","Number":"24730","RawContent":null,"Title":"eval and new Function in csp script-src without unsafe-eval","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nEach and every file in my index.html is hashed \r\nindex.html(after build)\r\n```\r\n<link href=\"assets/style/css/bootstrap-ar.min.css\" rel=\"stylesheet\">\r\n  <link href=\"assets/style/css/font-awesome.min.css\" rel=\"stylesheet\">\r\n  <link id=\"alignCssFileId\" href=\"assets/style/css/custom-ar.css\" rel=\"stylesheet\">\r\n  \r\n  <script type=\"text/javascript\" src=\"assets/style/js/jquery-3.6.0.slim.min.js\" integrity=\"sha384-Qg00WFl9r0Xr6rUqNLv1ffTSSKEFFCDCKVyHZ+sVt8KuvG99nWw5RNvbhuKgif9z\" crossorigin=\"anonymous\"></script>\r\n\r\n  <script src=\"assets/config/env.js\" nonce=\"envfile\"></script>\r\n\r\n  <script type=\"text/javascript\" src=\"assets/js/paper-full.min.js\" integrity=\"sha384-F2XIobYzyqtqgJtz47uxaaSZcW74BXtLyaFzwmDCyGpcJhlQ2uOUix5qhFCrBHCk\" crossorigin=\"anonymous\"></script>\r\n\r\n  <script type=\"text/javascript\" src=\"assets/js/sketch.js\" integrity=\"sha384-7JZMJBSgTv2Y0cEIC5IkoFKfI98P1NPO3jqlUouOZNo17nZC+CsniI/NcdHy9BSZ\"></script>\r\n  \r\n<link rel=\"stylesheet\" href=\"styles.css\" crossorigin=\"anonymous\" integrity=\"sha384-QdNSfd/w2DkkeesZlP/b50EpjayV2yEMRXink+/oG8PXWqKe3oz4zyhzKw3+4tq5\"></head>\r\n<body>\r\n<app-root></app-root>\r\n<script src=\"runtime-es2015.js\" crossorigin=\"anonymous\" type=\"module\" integrity=\"sha384-ri9cS+UB3Kg44oWcATihqM4JaLd/vPeH44VxPBjnwYxbTN3Z+5n715V6lu17N1zg\"></script>\r\n<script src=\"runtime-es5.js\" crossorigin=\"anonymous\" nomodule defer integrity=\"sha384-56+79AY2vtppdq3/S+YH+Uav2yUXXn+z1KLU+uKv5UTSpWd39ouBt5EqG1KEmY9V\"></script>\r\n<script src=\"polyfills-es5.js\" crossorigin=\"anonymous\" nomodule defer integrity=\"sha384-qjU37w6G6Z+qVDUk8Yzwu2N5V/jpyaNDu3eCO+2CXGW1J2l6JkViCSkED7EUCi7u\"></script>\r\n<script src=\"polyfills-es2015.js\" crossorigin=\"anonymous\" type=\"module\" integrity=\"sha384-Qy1zDsv7ndcJumiNepT27qatHsVczLau/WF4kn5fhoiqxbzqWygjEt7ngjvpetXe\"></script>\r\n<script src=\"main-es2015.js\" crossorigin=\"anonymous\" type=\"module\" integrity=\"sha384-FEAUc/jPR/Cpjr+XEDZqiqYTezE3ZU6lZiCoTf75l3AlCbAj+s2YTkl3HrJjvOg4\"></script>\r\n<script src=\"main-es5.js\" crossorigin=\"anonymous\" nomodule defer integrity=\"sha384-ebjkV4WAnT/NpJ9Ql5DhVLwX43B1EpGP+oS3ZXxQUxJ2tat9rzWuceWmpUOpUK4i\"></script></body>\r\n</html>\r\n```\r\nMy csp header looks like this,\r\n```\r\n\"script-src 'self' 'strict-dynamic' 'nonce-envfile' \" +\r\n                \"'sha384-ri9cS+UB3Kg44oWcATihqM4JaLd/vPeH44VxPBjnwYxbTN3Z+5n715V6lu17N1zg' \" +\r\n                \"'sha384-56+79AY2vtppdq3/S+YH+Uav2yUXXn+z1KLU+uKv5UTSpWd39ouBt5EqG1KEmY9V' \" +\r\n                \"'sha384-qjU37w6G6Z+qVDUk8Yzwu2N5V/jpyaNDu3eCO+2CXGW1J2l6JkViCSkED7EUCi7u' \" +\r\n                \"'sha384-Qy1zDsv7ndcJumiNepT27qatHsVczLau/WF4kn5fhoiqxbzqWygjEt7ngjvpetXe' \" +\r\n                \"'sha384-FEAUc/jPR/Cpjr+XEDZqiqYTezE3ZU6lZiCoTf75l3AlCbAj+s2YTkl3HrJjvOg4' \" +\r\n                \"'sha384-ebjkV4WAnT/NpJ9Ql5DhVLwX43B1EpGP+oS3ZXxQUxJ2tat9rzWuceWmpUOpUK4i' \" +\r\n                \"'sha384-7JZMJBSgTv2Y0cEIC5IkoFKfI98P1NPO3jqlUouOZNo17nZC+CsniI/NcdHy9BSZ' \" +  //sketch\r\n                \"'sha384-F2XIobYzyqtqgJtz47uxaaSZcW74BXtLyaFzwmDCyGpcJhlQ2uOUix5qhFCrBHCk' \" +  //paper\r\n                \"'sha384-Qg00WFl9r0Xr6rUqNLv1ffTSSKEFFCDCKVyHZ+sVt8KuvG99nWw5RNvbhuKgif9z' \" +  //jquery\r\n                \";style-src 'self' 'unsafe-inline';\");\r\n```\r\nI am still get EvalError at    'eval'   in paper-full.min.js and   'new Function'  in main.js\r\n\r\nI have recently migrated my application from angular7 to angular11 \r\n\r\n\r\n\n\n### Minimal Reproduction\n\n{\r\n  \"name\": \"project-frontend\",\r\n  \"version\": \"2.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"startWithProxy\": \"ng serve --proxy-config proxy.conf.json --host 0.0.0.0\",\r\n    \"build\": \"ng build --prod --subresourceIntegrity=true\",\r\n    \"build-prod\": \"ng build --prod --subresourceIntegrity=true\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~10.2.5\",\r\n    \"@angular/common\": \"~11.2.14\",\r\n    \"@angular/compiler\": \"~11.2.14\",\r\n    \"@angular/core\": \"~11.2.14\",\r\n    \"@angular/forms\": \"~11.2.14\",\r\n    \"@angular/platform-browser\": \"~11.2.14\",\r\n    \"@angular/platform-browser-dynamic\": \"~11.2.14\",\r\n    \"@angular/router\": \"~10.2.5\",\r\n    \"@ng-bootstrap/ng-bootstrap\": \"^4.2.2\",\r\n    \"@ng-idle/core\": \"^8.0.0-beta.4\",\r\n    \"@ng-idle/keepalive\": \"^8.0.0-beta.4\",\r\n    \"@ngx-translate/core\": \"^11.0.1\",\r\n    \"@ngx-translate/http-loader\": \"^4.0.0\",\r\n    \"@types/moment-duration-format\": \"^2.2.3\",\r\n    \"@umalqura/core\": \"0.0.7\",\r\n    \"angular2-moment\": \"^1.9.0\",\r\n    \"chart.js\": \"^2.9.4\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"countly-sdk-nodejs\": \"^20.11.0\",\r\n    \"countly-sdk-web\": \"^21.11.3\",\r\n    \"crypto-js\": \"^4.1.1\",\r\n    \"file-saver\": \"^2.0.2\",\r\n    \"messageformat\": \"^2.3.0\",\r\n    \"moment\": \"^2.24.0\",\r\n    \"moment-duration-format\": \"^2.3.2\",\r\n    \"ngx-pagination\": \"^3.2.1\",\r\n    \"ngx-smart-modal\": \"^7.1.1\",\r\n    \"ngx-translate-messageformat-compiler\": \"^4.5.0\",\r\n    \"rxjs\": \"~6.6.7\",\r\n    \"tslib\": \"^2.0.0\",\r\n    \"xlsx\": \"^0.17.1\",\r\n    \"zone.js\": \"~0.10.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~0.1102.19\",\r\n    \"@angular/cli\": \"~11.2.19\",\r\n    \"@angular/compiler-cli\": \"^11.2.14\",\r\n    \"@angular/language-service\": \"~11.2.14\",\r\n    \"@angular/localize\": \"^11.2.14\",\r\n    \"@types/crypto-js\": \"^4.1.1\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"jasmine-core\": \"~3.6.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.4.1\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"ts-node\": \"~7.0.0\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"4.0.8\"\r\n  }\r\n}\r\n\n\n### Exception or Error\n\n```text\n![image](https://user-images.githubusercontent.com/9818126/219277698-301a927a-b434-474b-b09e-be4714c29d87.png)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 11.2.19\r\nNode: 14.20.0\r\nOS: win32 x64\r\n\r\nAngular: 11.2.14\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1102.19\r\n@angular-devkit/build-angular   0.1102.19\r\n@angular-devkit/core            11.2.19\r\n@angular-devkit/schematics      11.2.19\r\n@angular/animations             10.2.5\r\n@angular/cli                    11.2.19\r\n@angular/router                 10.2.5\r\n@schematics/angular             11.2.19\r\n@schematics/update              0.1102.19\r\nrxjs                            6.6.7\r\ntypescript                      4.0.8\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24730","RelatedDescription":"Closed issue \"eval and new Function in csp script-src without unsafe-eval\" (#24730)"},{"Id":"1587088962","IsPullRequest":true,"CreatedAt":"2023-02-16T06:15:20","Actor":"angular-robot","Number":"24731","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `cc2fc4b` -> `11a70e2` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `26fc36d` -> `ea21573` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `7122466` -> `df11445` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.4` -> `15.1.5`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.4/15.1.5) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b0e1650` -> `54fbdc2` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `419a3b1` -> `0ae8fef` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `6ee8441` -> `943b5c7` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `f5acad5` -> `9f3a7ad` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `1bfbba5` -> `3399eca` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `258ded4` -> `30d955e` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `2b2ccec` -> `e1c8b8f` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `73b8f6f` -> `ab0db2b` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.4` -> `15.1.5`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.4/15.1.5) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `126171c` -> `0e4b95c` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `fa4d469` -> `c7411f1` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `ce030f7` -> `97f2141` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `397bedd` -> `47170e6` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `645f4d6` -> `b8db132` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `9f5c7d8` -> `8bf1a34` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `1c0971a` -> `73ffab2` |\n| angular/dev-infra | action | digest | `98bdad2` -> `1cc3056` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.5`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1515-highdensityfoam-pelican-2023-02-16)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.4...15.1.5)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [994e0a14c](https://togithub.com/angular/components/commit/994e0a14c9819ce561e603ca8cedefe8657ad2c0) | fix | **core:** Fix legacy prebuilt themes export ([#&#8203;26624](https://togithub.com/angular/components/pull/26624)) |\n| [4c8cad2d2](https://togithub.com/angular/components/commit/4c8cad2d2deb7389a22db1f8318ba2036714a2dc) | fix | **radio:** input not focused when clicking on touch target ([#&#8203;26618](https://togithub.com/angular/components/pull/26618)) |\n| [890765bf4](https://togithub.com/angular/components/commit/890765bf4329db9b8ab9eb097ad0877facb98587) | fix | **slider:** make valueChange emit only on change and not on input ([#&#8203;26535](https://togithub.com/angular/components/pull/26535)) |\n\n#### Special Thanks\n\nKai Schönberger, Kristiyan Kostadinov, Lukáš Matta, Wagner Maciel, Zach Arend and ᚷᛁᛟᚱᚷᛁ ᛒᚨᛚᚨᚲᚻᚨᛞᛉᛖ\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xNDEuMCIsInVwZGF0ZWRJblZlciI6IjM0LjE0OC4wIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/24731","RelatedDescription":"Open PR \"build: update angular\" (#24731)"},{"Id":"1586552465","IsPullRequest":true,"CreatedAt":"2023-02-15T21:00:06","Actor":"clydin","Number":"24727","RawContent":null,"Title":"Configure next branch to receive major changes for v16.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24727","RelatedDescription":"Closed or merged PR \"Configure next branch to receive major changes for v16.0.0-next.0\" (#24727)"},{"Id":"1586540128","IsPullRequest":true,"CreatedAt":"2023-02-15T20:53:50","Actor":"clydin","Number":"24726","RawContent":null,"Title":"Update next branch to reflect new release-train \"v15.3.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v15.2.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/24726","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v15.3.0-next.0\".\" (#24726)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1594173329","IsPullRequest":true,"CreatedAt":"2023-02-21T22:21:58","Actor":"mmalerba","Number":"26674","RawContent":null,"Title":"fix(material/card): refactor to depend on @material/core/tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26674","RelatedDescription":"Open PR \"fix(material/card): refactor to depend on @material/core/tokens\" (#26674)"},{"Id":"1594099448","IsPullRequest":true,"CreatedAt":"2023-02-21T21:06:03","Actor":"zarend","Number":"26673","RawContent":null,"Title":"fix(material/core): mat-option sets aria-selected=\"false\"","State":"open","Body":"For mat-option, set `aria-selected=\"false\"` on deselected options. Confirms with [WAI ARIA Listbox authoring practices guide](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), which says to always include aria-selected attribute on listbox options that can be selected. Fix issue where VoiceOver reads every option as \"selected\" (21491).\r\n\r\nFix #21491","Url":"https://github.com/angular/components/pull/26673","RelatedDescription":"Open PR \"fix(material/core): mat-option sets aria-selected=\"false\"\" (#26673)"},{"Id":"1593935394","IsPullRequest":true,"CreatedAt":"2023-02-21T18:32:34","Actor":"hamzajazyri","Number":"26672","RawContent":null,"Title":"fix(material/list): add disabled attribute for mat-list-item buttons","State":"open","Body":"Previously, mat-list-item buttons did not have the `disabled` attribute set when either the `mat-list-item` or the `mat-action-list` are disabled.\r\nThis commit adds the `disabled` attribute to `mat-list-item` buttons when it should be applied.\r\n\r\nFixes #26574.","Url":"https://github.com/angular/components/pull/26672","RelatedDescription":"Open PR \"fix(material/list): add disabled attribute for mat-list-item buttons\" (#26672)"},{"Id":"1593899285","IsPullRequest":false,"CreatedAt":"2023-02-21T18:05:23","Actor":"invaderb","Number":"26671","RawContent":null,"Title":"bug(mat-checkbox): Value gets removed when disable is present on Formcontrol","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nNot 100% sure if this is a bug or intended feature but it causing me a bit of a headache.  \r\n\r\nI have a dynamically generated form to manage user permissions across a bunch of tools and has a few stipulations on how those permissions can be added or removed based on grantable/role permissions I want to be able to disable those mat checkboxes but still have a potential value for them however I noticed that if disable is added to the formcontrol when adding to a formarray the value is getting completely removed.\r\n\r\nIs there a way around this, any help would be greatly appreciated.\r\n\r\n### Reproduction\r\n\r\nreproduced stackblitz\r\nhttps://stackblitz.com/edit/angular-wtakex?file=src/app.component.ts\r\n\r\n### Expected Behavior\r\n\r\nEven if disable is added there should still be a value\r\n\r\n### Actual Behavior\r\n\r\nValue is removed when disable is present on formcontrol\r\n\r\n### Environment\r\n\r\n- Angular: v15\r\n- CDK/Material: v15\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26671","RelatedDescription":"Open issue \"bug(mat-checkbox): Value gets removed when disable is present on Formcontrol\" (#26671)"},{"Id":"1593682380","IsPullRequest":false,"CreatedAt":"2023-02-21T15:30:30","Actor":"KaoDeo","Number":"26670","RawContent":null,"Title":"bug(mat-chip-row): color property doesn't update chip background color","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nGiving theme palette color to the color input doesn't update color of the component.\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Giving any color values to [color] doesn't change background color of the chip\r\n\r\nhttps://stackblitz.com/edit/components-issue-xulxok?file=src%2Findex.html,src%2Fapp%2Fexample-component.html,src%2Fapp%2Fexample-component.ts\r\n\n\n### Expected Behavior\n\nBackground color of the chip should be the value assigned('primary' | 'accent' | 'warn') to the color input as it is described in API.\r\n\r\n<img width=\"502\" alt=\"image\" src=\"https://user-images.githubusercontent.com/91371368/220386611-29ec9202-dad8-4762-91ec-2620271efd2b.png\">\r\n\n\n### Actual Behavior\n\nThe component doesn't change color and has a grey color.\n\n### Environment\n\n- Angular: 15.1.5\r\n- CDK/Material: 15.1.4\r\n- Browser(s): Google Chrome \r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/26670","RelatedDescription":"Open issue \"bug(mat-chip-row): color property doesn't update chip background color\" (#26670)"},{"Id":"1593583096","IsPullRequest":false,"CreatedAt":"2023-02-21T14:29:08","Actor":"elrondfeng","Number":"26669","RawContent":null,"Title":"bug(mat-dialog-content): mat-dialog-content style messed up ","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nI am using a custom theme. I upgraded from 14 to 15. all of my dialog which use mat-dialog-conent looks really weird now.  \r\n![image1](https://user-images.githubusercontent.com/12999574/220371113-b782bb87-c30d-4c70-83af-8e946c83db8d.png)\r\npreviously, it looked like this: \r\n![image](https://user-images.githubusercontent.com/12999574/220371243-916d21fc-22e2-4496-bc49-b44002ff780b.png)\r\n\r\nthere are some css added to mat-mdc-dialog-content: \r\n![image](https://user-images.githubusercontent.com/12999574/220371380-efd0b7ba-2295-4eba-a6b6-66a2fc3dfe85.png)\r\n\r\nI changed my custom theme to : \r\n`// Custom Theming for Angular Material\r\n// For more information: https://material.angular.io/guide/theming\r\n@use '@angular/material' as mat;\r\n// Plus imports for other components in your app.\r\n\r\n// Include the common styles for Angular Material. We include this here so that you only\r\n// have to load a single css file for Angular Material in your app.\r\n// Be sure that you only ever include this mixin once!\r\n@include mat.core();\r\n\r\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n// hue. Available color palettes: https://material.io/design/color/\r\n$lawyer-primary: mat.define-palette(mat.$indigo-palette, 800);\r\n$lawyer-accent: mat.define-palette(mat.$green-palette, A700);\r\n\r\n// The warn palette is optional (defaults to red).\r\n$lawyer-warn: mat.define-palette(mat.$red-palette,A700);\r\n$lawyer-typography: mat.define-typography-config();\r\n@include mat.typography-hierarchy($lawyer-typography);\r\n\r\n\r\n// Create the theme object. A theme consists of configurations for individual\r\n// theming systems such as \"color\" or \"typography\".\r\n$lawyer-theme: mat.define-light-theme((\r\n  color: (\r\n    primary: $lawyer-primary,\r\n    accent: $lawyer-accent,\r\n    warn: $lawyer-warn,\r\n  ),\r\n  typography: $lawyer-typography,\r\n/*  density: 0,*/\r\n));\r\n\r\n// Include theme styles for core and each component used in your app.\r\n// Alternatively, you can import and @include the theme mixins for each component\r\n// that you are using.\r\n@include mat.all-component-themes($lawyer-theme);\r\n@include mat.all-component-typographies($lawyer-typography);\r\n@include mat.typography-hierarchy($lawyer-theme);`\r\n\r\nbut, the mat.typography-hierarchy does not help\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. use a custom theme \r\n2. use mat-dialog-content \r\n\n\n### Expected Behavior\n\nthe style is same as before on angular material 14\n\n### Actual Behavior\n\nstyle looks very wierd \n\n### Environment\n\n- Angular:  15.1.5\r\n- CDK/Material: 15.1.5\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/26669","RelatedDescription":"Open issue \"bug(mat-dialog-content): mat-dialog-content style messed up \" (#26669)"},{"Id":"1593553206","IsPullRequest":true,"CreatedAt":"2023-02-21T14:16:07","Actor":"devversion","Number":"26668","RawContent":null,"Title":"build: update sync config to reflect internal config","State":"closed","Body":"As of the MDC list token PR, the sync configs are slightly out of sync. This commit fixes it.","Url":"https://github.com/angular/components/pull/26668","RelatedDescription":"Closed or merged PR \"build: update sync config to reflect internal config\" (#26668)"},{"Id":"1593522440","IsPullRequest":true,"CreatedAt":"2023-02-21T14:15:53","Actor":"devversion","Number":"26667","RawContent":null,"Title":"build: prepare for v16 in `main` branch","State":"closed","Body":"Main branch should target v16 similar to the framework.","Url":"https://github.com/angular/components/pull/26667","RelatedDescription":"Closed or merged PR \"build: prepare for v16 in `main` branch\" (#26667)"},{"Id":"1593505344","IsPullRequest":false,"CreatedAt":"2023-02-21T13:40:48","Actor":"fearghalom","Number":"26666","RawContent":null,"Title":"bug(mat-button): Button Animation Not Working With Angular 15 Legacy mat-button Component","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12.2.13\n\n### Description\n\nI upgraded an application from Angular v12 to Angular v15 and noticed an issue with a spinner animation on a  legacy mat-raised-button component. We'd like to upgrade to Angular v15 without migrating to the latest Angular Material MDC components at this time. When using the legacy imports on V15, the spinner animation doesn't activate. If I use the latest imports in Material v15, the spinner animation works ok. \n\n### Reproduction\n\nSteps to reproduce:\r\n1. I've created a project on GitHub to reproduce the issue: https://github.com/fearghalom/angular15_material_issue.git\r\n2. I've defined a custom theme\r\n3. I've created a simple app with two buttons. One is a mat-raised-button (legacy) and the other is a simple HTML button. \r\n4.  Clicking on a button should show the spinner animation but it only works on the simple HTML button. \r\n5. If i change from the legacy Material imports to the latest, the spinner on the mat button works ok. \r\n6. I did some investigation and found that commenting out a line in _node_modules/@angular/material/core/focus-indicators/_private.scss_ , resolved the issue.\r\n\r\n```\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '@angular/cdk';\r\n@use '../style/layout-common';\r\n@use '../theming/theming';\r\n\r\n// Private sass variables that will be used as reference throughout component stylesheets.\r\n$default-border-width: 3px;\r\n$default-border-style: solid;\r\n$default-border-color: transparent;\r\n$default-border-radius: 4px;\r\n\r\n// Mixin that renders the focus indicator structural styles.\r\n@mixin structural-styling($prefix) {\r\n  .#{$prefix}-focus-indicator {\r\n    position: relative;\r\n\r\n    &::before {\r\n      @include layout-common.fill();\r\n      box-sizing: border-box;\r\n      pointer-events: none;\r\n      //display: var(--#{$prefix}-focus-indicator-display, none);  !!!! COMMENTING OUT THIS LINE FIXED ISSUE  !!!!// Hide the indicator by default.\r\n      border: var(\r\n          --#{$prefix}-focus-indicator-border-width,\r\n          #{$default-border-width}\r\n        )\r\n        var(\r\n          --#{$prefix}-focus-indicator-border-style,\r\n          #{$default-border-style}\r\n        )\r\n        var(\r\n          --#{$prefix}-focus-indicator-border-color,\r\n          #{$default-border-color}\r\n        );\r\n      border-radius: var(\r\n        --#{$prefix}-focus-indicator-border-radius,\r\n        #{$default-border-radius}\r\n      );\r\n    }\r\n\r\n    // By default, render the focus indicator when the focus indicator host element takes focus.\r\n    // Defining a pseudo element's content will cause it to render.\r\n    &:focus::before {\r\n      content: '';\r\n    }\r\n  }\r\n```\r\n\n\n### Expected Behavior\n\nButton spinner should work as in Angular v12.\n\n### Actual Behavior\n\nButton spinner does not activate.\n\n### Environment\n\nAngular CLI: 15.1.6\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: win32 x64\r\n\r\nAngular: 15.1.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.6\r\n@angular-devkit/build-angular   15.1.6\r\n@angular-devkit/core            15.1.6\r\n@angular-devkit/schematics      15.1.6\r\n@angular/cli                    15.1.6\r\n@schematics/angular             15.1.6\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5","Url":"https://github.com/angular/components/issues/26666","RelatedDescription":"Open issue \"bug(mat-button): Button Animation Not Working With Angular 15 Legacy mat-button Component\" (#26666)"},{"Id":"1593071327","IsPullRequest":false,"CreatedAt":"2023-02-21T08:52:00","Actor":"nasrulbharathi","Number":"26665","RawContent":null,"Title":"Angular material table sort arrow not resetting to original state","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the Angular material table, When I click on the sort icon in one of the table headers to descending then I am clicking on another table header then the data in the table get updated but in UI the previous column sort icon is not changing until I am hovering the mouse in the particular column header.\r\n\r\n![image](https://user-images.githubusercontent.com/46444516/220293418-5f7b56de-ae42-4a45-9e07-356320a26df4.png)\r\n\r\nIn the example, I sorted the 1st column \"ID\" into descending and then I clicked on the 3rd column \"Progress\" sort icon. The data got updated perfectly but the icon in the 1st column didn't change. It got updated when I hover the mouse on the ID.\r\n\r\n**Working Demo:**\r\n\r\n[https://stackblitz.com/edit/angular-cbr9nv?file=src%2Fstyles.scss,src%2Fapp%2Ftable-overview-example.html,src%2Fapp%2Ftable-overview-example.css](url)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Make the sort icons in the table header always visible. \r\n2. Click the sort icon to descending in 1st column.\r\n3. Click on the sort icon to descending in the 3rd column \r\n4. Now you can see the 1st column icon is not updated until you are manually hovering.\r\n5. Stackblitz: [https://stackblitz.com/edit/angular-cbr9nv?file=src%2Fstyles.scss,src%2Fapp%2Ftable-overview-example.html,src%2Fapp%2Ftable-overview-example.css](url)\r\nthe \n\n### Expected Behavior\n\nWhen sorting on another column is pressed then the sorting on the previous column should get updated without manually hovering \n\n### Actual Behavior\n\nThe previous sorting column icon is not updated until manually hovering in table header \n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26665","RelatedDescription":"Open issue \"Angular material table sort arrow not resetting to original state\" (#26665)"},{"Id":"1593019364","IsPullRequest":true,"CreatedAt":"2023-02-21T08:11:25","Actor":"vneogi199","Number":"26664","RawContent":null,"Title":"fix(material/list): unscoped content in mat-list-item breaks symmetry","State":"open","Body":"Fix a bug in the Angular Material `list` component where list item with unscoped content breaked symmetry due to presence of whitespace\r\n\r\nFixes #26657","Url":"https://github.com/angular/components/pull/26664","RelatedDescription":"Open PR \"fix(material/list): unscoped content in mat-list-item breaks symmetry\" (#26664)"},{"Id":"1590721141","IsPullRequest":true,"CreatedAt":"2023-02-21T08:06:07","Actor":"hamzajazyri","Number":"26652","RawContent":null,"Title":"docs(material/datepicker): avoid CalendarView switching","State":"closed","Body":"add missing encapsulation  to disable pointer-events for periodButtonLabel.\r\n\r\nfixes #24915","Url":"https://github.com/angular/components/pull/26652","RelatedDescription":"Closed or merged PR \"docs(material/datepicker): avoid CalendarView switching\" (#26652)"},{"Id":"1591772572","IsPullRequest":true,"CreatedAt":"2023-02-21T08:05:20","Actor":"jbrems","Number":"26658","RawContent":null,"Title":"docs(material/chips): fix minor spelling mistake","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26658","RelatedDescription":"Closed or merged PR \"docs(material/chips): fix minor spelling mistake\" (#26658)"},{"Id":"1592449277","IsPullRequest":false,"CreatedAt":"2023-02-20T21:10:52","Actor":"theredwillow","Number":"26663","RawContent":null,"Title":"bug(mat-form-field): mat-mdc-text-field-wrapper flex auto too tall outline w/dynamic subscriptSizing","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen two mat-form-field's are added to the same div, setting one to fixed subscript sizing and the other to dynamic will result in the outline being too big when there are no errors or hints.\r\n\r\n![image](https://user-images.githubusercontent.com/18607666/220198322-d01d30b8-2836-42c4-851f-039f95442a4d.png)\r\n\r\nRemoving the flex auto property of the mat-mdc-text-field-wrapper seems to fix the problem.\r\n![image](https://user-images.githubusercontent.com/18607666/220198466-d1da2d98-065f-481e-998c-4306bf4a3cd3.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a div (mine's a flex with row wrap) \r\n2. Fill it with too mat-form-field's, one with subscriptSizing set to dynamic and the other left defaulted to fixed.\r\n\n\n### Expected Behavior\n\nThe mat-input in the dynamically sized form field will have the same height as its counterpart.\n\n### Actual Behavior\n\nThe mat-input in the dynamically sized form field stretches to fill the size of the input and empty bottom margin of its fixed counterpart.\n\n### Environment\n\n- Angular: ^15.0.1\r\n- CDK/Material: ^15.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26663","RelatedDescription":"Open issue \"bug(mat-form-field): mat-mdc-text-field-wrapper flex auto too tall outline w/dynamic subscriptSizing\" (#26663)"},{"Id":"1592396977","IsPullRequest":false,"CreatedAt":"2023-02-20T20:16:49","Actor":"davimiku","Number":"26662","RawContent":null,"Title":"bug(Menu): Up and down arrow keys do not cycle through all options","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n[StackBlitz reproduction](https://stackblitz.com/edit/angular-zsnfkb-zklan5?file=src/app/app.component.ts)\r\n\r\nWhen using keyboard navigation (up and down arrows) on the options on a Material Menu, in the reproduction example above, the arrow keys do not reach all items.\r\n\r\nGIF:\r\n\r\nPressing the Down or Up arrow keys never reaches the \"Feature A\" item, it just cycles back to the top.\r\n\r\nhttps://user-images.githubusercontent.com/36610621/220189514-bbcac50f-2ae1-4582-8549-ece2a4649fdd.mp4\r\n\r\nHTML of the Material Menu and menu items. The 3rd button can't be navigated to using the keyboard up and down arrows.\r\n\r\n![image](https://user-images.githubusercontent.com/36610621/220189760-434b6718-ba56-4fa0-bf4f-9a8dbb714cd7.png)\r\n\r\nIn this case, the issue happens when Menu Items (`mat-menu-item`) are added to the Menu (`mat-menu`) with a `<ng-content select=\"...\">` directive .\r\n\r\nThe use case (minimally demonstrated in the example) is a common menu shared across multiple features, and each feature will add their own option to the menu.\r\n\r\n### Reproduction\r\n\r\n[StackBlitz reproduction](https://stackblitz.com/edit/angular-zsnfkb-zklan5?file=src/app/app.component.ts)\r\n\r\nSteps to reproduce:\r\n1. Open the StackBlitz above\r\n2. Navigate to one of the Material Menu trigger buttons using the keyboard\r\n3. Open the menu using the keyboard (Enter or Space)\r\n4. Use Up and Down arrows to navigate through the menu options\r\n5. Note that the last menu option cannot be selected with the keyboard\r\n\r\n### Expected Behavior\r\n\r\nUp and down arrow keys move through the menu items, as documented in [Menu keyboard interaction](https://material.angular.io/components/menu/overview#keyboard-interaction).\r\n\r\n### Actual Behavior\r\n\r\nUp and down arrow keys do not navigate through all the menu options\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.2\r\n- CDK/Material: 15.1.2\r\n- Browser(s): Edge, Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26662","RelatedDescription":"Open issue \"bug(Menu): Up and down arrow keys do not cycle through all options\" (#26662)"},{"Id":"1592244398","IsPullRequest":true,"CreatedAt":"2023-02-20T18:23:55","Actor":"hamzajazyri","Number":"26661","RawContent":null,"Title":"feat(material/core): Add ARIA attribute 'aria-selected' to option when its value is set to false","State":"closed","Body":"Add ARIA attribute 'aria-selected' to option when its value is set to false\r\n\r\nfixes: #26642","Url":"https://github.com/angular/components/pull/26661","RelatedDescription":"Closed or merged PR \"feat(material/core): Add ARIA attribute 'aria-selected' to option when its value is set to false\" (#26661)"},{"Id":"1592055462","IsPullRequest":true,"CreatedAt":"2023-02-20T15:49:07","Actor":"massic80","Number":"26660","RawContent":null,"Title":"Markerer CDN changed","State":"closed","Body":"updated CDN","Url":"https://github.com/angular/components/pull/26660","RelatedDescription":"Closed or merged PR \"Markerer CDN changed\" (#26660)"},{"Id":"1592018133","IsPullRequest":true,"CreatedAt":"2023-02-20T15:48:51","Actor":"massic80","Number":"26659","RawContent":null,"Title":"Markerer repo changed","State":"closed","Body":"New URLs to be injected in the Readme :)","Url":"https://github.com/angular/components/pull/26659","RelatedDescription":"Closed or merged PR \"Markerer repo changed\" (#26659)"},{"Id":"1591702557","IsPullRequest":false,"CreatedAt":"2023-02-20T11:46:22","Actor":"oysteinhodne","Number":"26657","RawContent":null,"Title":"bug(mat-list): Bad symmetry on text when line-break in code","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv14\r\n\r\n### Description\r\n\r\nThe text in both matListItemTitle and matListItemLine creates a whitespace at the start and end of the text when the code is broken over multiple lines. This breaks the symmetry of the list items as seen in this example on the docs page\r\n![image](https://user-images.githubusercontent.com/3032384/220096686-6c734818-a024-42af-8536-fee6da3ccad8.png)\r\n\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackblitz of the issue already showing in the docs page: \r\nhttps://stackblitz.com/run?file=src%2Fapp%2Flist-variants-example.ts\r\n\r\nWorks:\r\n`<span>Text</span>`\r\n\r\nCreates extra spacing:\r\n```\r\n<span>\r\n  Text\r\n</span>\r\n```\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nExpect the result not to have white spaces when rendered, or to ignore the white spaces. As it worked in v14.\r\n\r\n### Actual Behavior\r\n\r\nGets an extra white space when the code has line break inside tag. Breaks symmetry\r\n\r\n### Environment\r\n\r\n- Angular: latest v15\r\n- CDK/Material: latest v15\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/26657","RelatedDescription":"Open issue \"bug(mat-list): Bad symmetry on text when line-break in code\" (#26657)"},{"Id":"1591658593","IsPullRequest":false,"CreatedAt":"2023-02-20T11:20:59","Actor":"angelaki","Number":"26656","RawContent":null,"Title":"bug(MatRipple): MatRipple can not be disabled for child components (in some scenarios)","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n(mousedown)=\"$event.stopPropagation()\" stopped MatRipple from doing animations triggered by child components\n\n### Description\n\nWith Angular Material 14 it was possible to stop the MatRipple from getting triggered by child components utilizing a `(mousedown)=\"$event.stopPropagation()\"`. With Angular 15 it somehow stopped working. It is still working for simple scenarios but somehow not e.g. in MatTable\n\n### Reproduction\n\nIn this stackblitz [AngularMaterial15](https://stackblitz.com/edit/angular-phk79p) the column _NoRipple_ is still triggering MatRipple while it wasn't with [AngularMaterial14](https://stackblitz.com/edit/angular-gcpqiz).\n\n### Expected Behavior\n\nBe able to let e.g. buttons in the table not trigger the row's ripple effect.\n\n### Actual Behavior\n\nRow's MatRipple effect always gets triggered.\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15","Url":"https://github.com/angular/components/issues/26656","RelatedDescription":"Open issue \"bug(MatRipple): MatRipple can not be disabled for child components (in some scenarios)\" (#26656)"},{"Id":"1591565670","IsPullRequest":false,"CreatedAt":"2023-02-20T10:25:11","Actor":"anisabboud","Number":"26655","RawContent":null,"Title":"bug(mat-icon): SVG icons don't work with Angular Universal prerendering - npm run prerender: Error retrieving icon","State":"open","Body":"### Description\r\n\r\n[`<mat-icon svgIcon=\"...\" />`](https://material.angular.io/components/icon/overview#svg-icons) throw error on [`npm run prerender`](https://angular.io/guide/prerendering).\r\n\r\n#### Previous reports of this issue:\r\n- https://github.com/angular/universal/issues/2685\r\n  (closed claiming insufficient information)\r\n- https://github.com/angular/universal/issues/2573\r\n  (closed claiming insufficient information)\r\n- https://github.com/angular/components/issues/9728\r\n  (reported in Feb 2018 and closed by the author after getting no solution for ~4 years, and locked by the amazing bot.)\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create new project: `ng new test-prerender-svg-icon`\r\n2. Add Angular Material: `ng add @angular/material`\r\n3. Add Angular Universal: `ng add @nguniversal/express-engine`\r\n4. Download any svg icon like https://angular.io/assets/images/logos/angular/angular.svg into `src/assets/`\r\n5. **app.component.html**: Replace all default content with:\r\n   ```html\r\n   <mat-icon svgIcon=\"angular\" />\r\n   ```\r\n6. **app.module.ts**:\r\n    ```typescript\r\n    import { HttpClientModule } from '@angular/common/http';\r\n    import { NgModule } from '@angular/core';\r\n    import { MatIconModule, MatIconRegistry } from '@angular/material/icon';\r\n    import { BrowserModule, DomSanitizer } from '@angular/platform-browser';\r\n    import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n    import { AppComponent } from './app.component';\r\n\r\n    @NgModule({\r\n      declarations: [\r\n        AppComponent\r\n      ],\r\n      imports: [\r\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,  // Required for using iconRegistry.\r\n        MatIconModule,\r\n      ],\r\n      providers: [],\r\n      bootstrap: [AppComponent]\r\n    })\r\n    export class AppModule {\r\n      constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\r\n        // See: https://material.angular.io/components/icon/overview#svg-icons.\r\n        iconRegistry.addSvgIcon('angular', sanitizer.bypassSecurityTrustResourceUrl('/assets/angular.svg'));\r\n      }\r\n    }\r\n    ```\r\n7. `ng serve` works fine and shows the svg icon.\r\n8. `npm run prerender` => `ERROR Error: Error retrieving icon :angular!`\r\n9. Same error with `npm run dev:ssr`.\r\n\r\n### Expected Behavior\r\n\r\nExpected `<mat-icon svgIcon=\"angular\" />` to work with Angular Universal prerendering (just like it works fine with `ng serve`).\r\n\r\n### Actual Behavior\r\n\r\n`npm run prerender` throws Error retrieving icon:\r\n\r\n```dart\r\n⠹ Prerendering 1 route(s) to ~/test-prerender-svg-icon/dist/test-prerender-svg-icon/browser...ERROR Error: Error retrieving icon :angular!\r\n    at Object.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:3655776)\r\n    at ConsumerObserver2.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1216955)     \r\n    at SafeSubscriber2.Subscriber2._error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1216140)\r\n    at SafeSubscriber2.Subscriber2.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1215674)\r\n    at OperatorSubscriber2.Subscriber2._error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1216140)\r\n    at OperatorSubscriber2.Subscriber2.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1215674)\r\n    at OperatorSubscriber2.Subscriber2._error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1216140)\r\n    at OperatorSubscriber2.Subscriber2.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1215674)\r\n    at OperatorSubscriber2.Subscriber2._error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1:1216140)\r\n    at OperatorSubscriber2.Subscriber2.error (~/test-prerender-svg-icon/dist/test-prerender-svg-icon/server/main.js:1✔ \r\nPrerendering routes to ~/test-prerender-svg-icon/dist/test-prerender-svg-icon/browser complete.\r\n```\r\n\r\n### Environment\r\n\r\n- @angular/cli: `15.1.6`\r\n- @angular/core: `15.1.6`\r\n- @angular/material: `15.1.5`\r\n- @nguniversal/express-engine `15.1.0`\r\n\r\ncc: @alan-agius4","Url":"https://github.com/angular/components/issues/26655","RelatedDescription":"Open issue \"bug(mat-icon): SVG icons don't work with Angular Universal prerendering - npm run prerender: Error retrieving icon\" (#26655)"},{"Id":"1591533206","IsPullRequest":false,"CreatedAt":"2023-02-20T10:07:15","Actor":"AlixRoyere","Number":"26654","RawContent":null,"Title":"bug(mat-form-field): no required star displayed after label when using mat-date-range-input","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen an input is required, a star is put after the label to help the user. There is no such a thing when we use the date range input, so we don't know what is required and this is not homogeneous with the other inputs.\r\nI think the star should be displayed when at least one of the start/end controls is required or when the formgroup is required.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/angular-gfjwgr-nrqbsl?file=src/app/date-range-picker-comparison-example.html \r\n2. see that there is no star for required range date label, but there is one for a single date\r\n\n\n### Expected Behavior\n\nSee a star after the label name when values are required for a range date, as for other inputs.\n\n### Actual Behavior\n\nNo star displayed after the label name when values are required for a range date.\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): firefox\r\n","Url":"https://github.com/angular/components/issues/26654","RelatedDescription":"Open issue \"bug(mat-form-field): no required star displayed after label when using mat-date-range-input\" (#26654)"},{"Id":"1590894693","IsPullRequest":false,"CreatedAt":"2023-02-19T23:01:29","Actor":"bageren","Number":"26653","RawContent":null,"Title":"bug(mat-slider): ExpressionChangedAfterItHasBeenCheckedError","State":"open","Body":"### Is this a regression?\r\n\r\n- I don't know but didn't notice it previously\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using mat-slider together with portals, Angular throws \"NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked\" in development mode.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a mat-slider in a template.\r\n2. Create a new TemplatePortal with template from step 1\r\n3. Create a portal outlet and pass in the TemplatePortal from step 2\r\n\r\nhttps://stackblitz.com/edit/angular-ylc6kv?file=src%2Fmain.ts\r\n\r\n\r\n### Expected Behavior\r\n\r\nI would expect Angular to not throw \"NG0100: ExpressionChangedAfterItHasBeenCheckedError\"\r\n\r\n### Actual Behavior\r\n\r\nAngular throws \"NG0100: ExpressionChangedAfterItHasBeenCheckedError\"\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.5\r\n- CDK/Material: 15.1.5\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26653","RelatedDescription":"Open issue \"bug(mat-slider): ExpressionChangedAfterItHasBeenCheckedError\" (#26653)"},{"Id":"1590708449","IsPullRequest":false,"CreatedAt":"2023-02-19T14:28:58","Actor":"DaSchTour","Number":"26651","RawContent":null,"Title":"bug(deps): probably @material should be a peerDependency?","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSometimes `@material/*` packages are installed within `@angular/material/node_modules` and not in root `node_modules` which then leads to issue while building styles for example telling that `@material/button/button` is not found.\r\n\r\nI tried to flatten dependencies with `npm ddp` but it didn't help.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Install `@angular/material`\r\n2. Add `@use \"@angular/material\" as mat;` to some stylesheet\r\n\n\n### Expected Behavior\n\n`@material/*` packages should be installed in root `node_modules`\n\n### Actual Behavior\n\n`@material/*` packages are installed nested inside `node_modules/@angular/material/node_modules`\n\n### Environment\n\n- Angular: 15.1.5\r\n- CDK/Material: 15.1.4\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n- Node: 18.13.0\r\n- NPM: 8.19.3\r\n","Url":"https://github.com/angular/components/issues/26651","RelatedDescription":"Open issue \"bug(deps): probably @material should be a peerDependency?\" (#26651)"},{"Id":"1590253699","IsPullRequest":true,"CreatedAt":"2023-02-18T21:04:09","Actor":"crisbeto","Number":"26647","RawContent":null,"Title":"fix(material/tabs): disablePagination not working","State":"closed","Body":"The tab group wasn't passing the `disablePagination` input to the tab header so it wasn't being picked up.\r\n\r\nFixes #26621.","Url":"https://github.com/angular/components/pull/26647","RelatedDescription":"Closed or merged PR \"fix(material/tabs): disablePagination not working\" (#26647)"},{"Id":"1590431448","IsPullRequest":true,"CreatedAt":"2023-02-18T18:32:44","Actor":"hamzajazyri","Number":"26650","RawContent":null,"Title":"fix(material/datepicker): intl provider not being picked up in lazy-loaded modules.","State":"open","Body":"fix(material/datepicker): Resolve issue with MatDatepickerIntl not being picked up in lazy-loaded modules\r\n\r\nAlong the same lines as #12934, where the consumer-provided  instance was not being picked up within lazy-loaded modules. The fix also resolves an issue with the close button text when switching to French language in components-examples.\r\n\r\nfixes #25021","Url":"https://github.com/angular/components/pull/26650","RelatedDescription":"Open PR \"fix(material/datepicker): intl provider not being picked up in lazy-loaded modules.\" (#26650)"},{"Id":"1590417553","IsPullRequest":true,"CreatedAt":"2023-02-18T18:23:29","Actor":"hamzajazyri","Number":"26649","RawContent":null,"Title":"fix(datepicker): intl provider not being picked up in lazy-loaded modules.","State":"closed","Body":"fix(datepicker): Resolve issue with MatDatepickerIntl not being picked up in lazy-loaded modules\r\n\r\nAlong the same lines as #12934, where the consumer-provided  instance was not being picked up within lazy-loaded modules. The fix also resolves an issue with the close button text when switching to French language in components-examples.\r\n\r\nfixes #25021","Url":"https://github.com/angular/components/pull/26649","RelatedDescription":"Closed or merged PR \"fix(datepicker): intl provider not being picked up in lazy-loaded modules.\" (#26649)"},{"Id":"1590263341","IsPullRequest":false,"CreatedAt":"2023-02-18T08:49:14","Actor":"nicoschuck","Number":"26648","RawContent":null,"Title":"bug(CLIPBOARD): copy not working in timeout","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to clear the copied content after a couple of seconds from users clipboard.\r\nAs I understand by #19883, resetting the clipboard is not working. That's why I use provided a workaround, and copy a single whitespace.\r\n\r\nUnfortunately, it is not possible to overwrite the clipboard reliably with a setTimeout (it worked a few times, but in most cases is it not working).\r\n\r\n```\r\ncopy(value: string, delay: number): void {\r\n  this.clipboard.copy(value);\r\n\r\n  this.timeout = setTimeout(() => {\r\n    this.clipboard.copy(\" \");\r\n  }, 1000 * delay);\r\n}\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\n1. ng add @angular/material\r\n2. implement copy function to any component\r\n3. call copy('any value', 10) in constructor\r\n\n\n### Expected Behavior\n\nIt should copy my value to clipboard. After 10 seconds it should be overwritten by a whitespace.\n\n### Actual Behavior\n\nMy value is successfully copied to the clipboard. But it will not be overwritten by my whitespace.\n\n### Environment\n\n- Angular: 15.1.5\r\n- CDK/Material: 15.1.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26648","RelatedDescription":"Open issue \"bug(CLIPBOARD): copy not working in timeout\" (#26648)"},{"Id":"1590169858","IsPullRequest":true,"CreatedAt":"2023-02-18T02:40:55","Actor":"josephperrott","Number":"26646","RawContent":null,"Title":"build: update to latest remote build execution setup","State":"closed","Body":"Update to the latest RBE setup after key rotation.","Url":"https://github.com/angular/components/pull/26646","RelatedDescription":"Closed or merged PR \"build: update to latest remote build execution setup\" (#26646)"},{"Id":"1590138644","IsPullRequest":false,"CreatedAt":"2023-02-18T00:51:46","Actor":"joelkesler","Number":"26645","RawContent":null,"Title":"feat(mat-tab-group): add stretchTabs to MatTabsConfig","State":"open","Body":"### Feature Description\r\n\r\nThe new Material component updates changed how tabs present when used. Tabs now stretch to fill the header.\r\n\r\nFor those of us who wish to preserve the old behaviour, adding the stretchTabs settings to MatTabsConfig will be incredibly helpful to let us set the behaviour universally instead of updating each and every instance.\r\n\r\nPlease see PR https://github.com/angular/components/pull/26644\r\n\r\n### Use Case\r\n\r\nThis will allow developers to globally set `stretchTabs` to false for all instances of `mat-tab-group` in an application via providers.\r\n\r\nEx:\r\n\r\n```typescript\r\nproviders: [\r\n  {\r\n    provide: MAT_TABS_CONFIG,\r\n    useValue: {\r\n      stretchTabs: false,\r\n    },\r\n  },\r\n]\r\n```","Url":"https://github.com/angular/components/issues/26645","RelatedDescription":"Open issue \"feat(mat-tab-group): add stretchTabs to MatTabsConfig\" (#26645)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-22T03:30:03.6024925Z","RunDurationInMilliseconds":2606}