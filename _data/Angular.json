{"Data":{"Angular-Issues":{"Issues":[{"Id":"1848807452","IsPullRequest":true,"CreatedAt":"2023-08-15T00:16:45","Actor":"pkozlowski-opensource","Number":"51346","RawContent":null,"Title":"feat(core): conditional built-in control flow","State":"closed","Body":"Initial PoC of the built-in control flow support. The goal is to unblock compiler work.\r\n\r\n","Url":"https://github.com/angular/angular/pull/51346","RelatedDescription":"Closed or merged PR \"feat(core): conditional built-in control flow\" (#51346)"},{"Id":"1850549866","IsPullRequest":true,"CreatedAt":"2023-08-14T22:12:34","Actor":"atscott","Number":"51360","RawContent":null,"Title":"build: update pullapprove","State":"closed","Body":"update pullapprove to remove self from unavailable list\r\n","Url":"https://github.com/angular/angular/pull/51360","RelatedDescription":"Closed or merged PR \"build: update pullapprove\" (#51360)"},{"Id":"1850583495","IsPullRequest":true,"CreatedAt":"2023-08-14T21:40:29","Actor":"atscott","Number":"51361","RawContent":null,"Title":"fix(core): Ensure backwards-referenced transplanted views are refreshed","State":"open","Body":"This commit ensures transplanted views that are inserted _before_ their declarations are refreshed as part of the same change detection cycle if the declaration is dirty. This is done by running change detection traversal multiple times while there are still transplanted views that need to be refreshed.\r\n\r\nThis same approach can be used for signal-based views to eliminate the `ExpressionChangedAfterItWasCheckedError` when signal updates during change detection cause a view to become dirty (again or for the first time).\r\n\r\nSeveral options were identified for rerunning dirty views after they were already checked:\r\n\r\n1. Keep track of the dirty views in a global set and just iterate through the set at the end of change detection\r\n2. Rerun `detectChangesInView` immediately (right after it has run)\r\n3. Rerun `detectChangesInView` at the top, as done in this commit\r\n\r\nThe first option is a bit more complicated than it seems. Because of detached views, refreshing a view outside of traversal is difficult. It requires keeping track of \"change detection roots\" (either the actual root of the CD tree or the first parent/ancestor that is detached). So when running a change detection that causes other views to become dirty, we have to ensure that everything in the set has the same root and potentially even that the dirty view is a actually a descendant of the current change detection (that is, `ChangeDetectorRef.detectChanges` could start somewhere other than the root).\r\n\r\nAnother issue that also exists with the second option is the possibility of potentially refreshing a view more times than necessary when this strategy is applied to signal-based views. Take a\r\nsimple example of A->B->C where C is a child of B and B is a child of A. C is `CheckAlways` and both `A` and `B` are signal-based. If they are all dirty initially and traversal goes to A, then B, then C and C causes both A and B to be dirty again, if B re-executes first then it will also run C again. Then A reruns and if it causes B to be dirty again, B and C (once again) will refresh.\r\n\r\nIn the above example, the third option (and what is proposed in this commit) performs better. Rerunning from the root ensures that C is only rechecked one additional time rather than 2. A reruns, B reruns, and then C because it is `CheckAlways`.","Url":"https://github.com/angular/angular/pull/51361","RelatedDescription":"Open PR \"fix(core): Ensure backwards-referenced transplanted views are refreshed\" (#51361)"},{"Id":"1847848738","IsPullRequest":true,"CreatedAt":"2023-08-14T21:39:32","Actor":"JeanMeche","Number":"51340","RawContent":null,"Title":"docs: Add Missing SSR integrity marker error doc page","State":"closed","Body":"This commit adds an error doc page for error 507 : Missing SSR content integrity marker.","Url":"https://github.com/angular/angular/pull/51340","RelatedDescription":"Closed or merged PR \"docs: Add Missing SSR integrity marker error doc page\" (#51340)"},{"Id":"1850355563","IsPullRequest":true,"CreatedAt":"2023-08-14T21:31:20","Actor":"jessicajaniuk","Number":"51355","RawContent":null,"Title":"docs: Add CDN Optimization section to hydration guide","State":"closed","Body":"This adds a section to cover the case of CDNs that have optimizations that will break both Angular and Hydration by stripping comment nodes.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/51355","RelatedDescription":"Closed or merged PR \"docs: Add CDN Optimization section to hydration guide\" (#51355)"},{"Id":"1850462961","IsPullRequest":true,"CreatedAt":"2023-08-14T20:48:54","Actor":"pkozlowski-opensource","Number":"51358","RawContent":null,"Title":"Local compilation revert","State":"closed","Body":"This PR reverts https://github.com/angular/angular/pull/51293 and https://github.com/angular/angular/pull/51309","Url":"https://github.com/angular/angular/pull/51358","RelatedDescription":"Closed or merged PR \"Local compilation revert\" (#51358)"},{"Id":"1850494203","IsPullRequest":true,"CreatedAt":"2023-08-14T20:30:53","Actor":"luishcastroc","Number":"51359","RawContent":null,"Title":"docs(common): add new date format example to documentation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere's a missing example in the docs that solves an issue\r\n\r\nIssue Number: #51348 \r\n\r\n\r\n## What is the new behavior?\r\nExample added to the docs\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51359","RelatedDescription":"Open PR \"docs(common): add new date format example to documentation\" (#51359)"},{"Id":"1850350264","IsPullRequest":true,"CreatedAt":"2023-08-14T19:52:44","Actor":"pkozlowski-opensource","Number":"51354","RawContent":null,"Title":"Revert \"ci: migrate aio jobs to GHA (#51071)\"","State":"closed","Body":"This reverts commit 12dbe1a6cf92b006aa1c6164c525646380bf37af.\r\n","Url":"https://github.com/angular/angular/pull/51354","RelatedDescription":"Closed or merged PR \"Revert \"ci: migrate aio jobs to GHA (#51071)\"\" (#51354)"},{"Id":"1850416000","IsPullRequest":false,"CreatedAt":"2023-08-14T19:35:02","Actor":"ioancris","Number":"51357","RawContent":null,"Title":"Unhandled rejections events not emitted when using DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSetting `DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION` to true will cause unhandled rejections events to not be emitted because of an exception inside the code that sends the events.\r\n\r\n```javascript\r\n__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION = true;\r\n// load zone.js\r\nonunhandledrejection = console.dir;\r\nPromise.reject(new Error(\"forced error\"));\r\n```\r\n\r\nThe above code doesn't call the unhandled rejection handler. Zone.js triggers an internal exception while trying to emit the event and this event is caught and silently ignored.\r\nthrown from: https://github.com/angular/angular/blob/f7cfc3b8fa2c2b2ef0bc2d4086edce70a17944bf/packages/zone.js/lib/browser/browser.ts#L280\r\nCaught and ignore at: https://github.com/angular/angular/blob/f7cfc3b8fa2c2b2ef0bc2d4086edce70a17944bf/packages/zone.js/lib/common/promise.ts#L71\r\n\r\nException thrown\r\n```\r\nTypeError: Failed to construct 'PromiseRejectionEvent': Failed to read the 'promise' property from 'PromiseRejectionEventInit': Required member is undefined.\r\n```\r\n\r\nThe issue is that with `DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION` enabled causes the error send to the handler that emits events to be the original error and not the wrapper error. Only the wrapper error has promise and rejection properties that the handler was using to construct the rejection event.\r\nhttps://github.com/angular/angular/blob/f7cfc3b8fa2c2b2ef0bc2d4086edce70a17944bf/packages/zone.js/lib/common/promise.ts#L52-L69\r\n\r\n The issue doesn't happen for the promise rejection handled handler since it gets both the promise and the rejection.\r\nhttps://github.com/angular/angular/blob/f7cfc3b8fa2c2b2ef0bc2d4086edce70a17944bf/packages/zone.js/lib/common/promise.ts#L236\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51357","RelatedDescription":"Open issue \"Unhandled rejections events not emitted when using DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION\" (#51357)"},{"Id":"1850359254","IsPullRequest":true,"CreatedAt":"2023-08-14T18:53:53","Actor":"atscott","Number":"51356","RawContent":null,"Title":"fix(core): Respect OnPush change detection strategy for dynamically c…","State":"open","Body":"…reated components\r\n\r\nThis commit fixes a bug in the change detection algorithm that would ignore the `OnPush`/dirty flag of a component view when it is created dynamically. That is, `OnPush` components that were not marked dirty but were created as embedded views would always be refreshed even if they were not dirty.\r\n\r\nBREAKING CHANGE: `OnPush` components that are created dynamically are now only refreshed during change detection if they are dirty. Previously, a bug in the change detection would result in the `OnPush` configuration of dynamically created components to be ignored. This is rarely encountered but can happen if code has a handle on the `ComponentRef` instance and updates values read in the `OnPush` component template without then calling either `markForCheck` or `detectChanges` on that component's `ChangeDetectorRef`.\r\n","Url":"https://github.com/angular/angular/pull/51356","RelatedDescription":"Open PR \"fix(core): Respect OnPush change detection strategy for dynamically c…\" (#51356)"},{"Id":"1850331725","IsPullRequest":true,"CreatedAt":"2023-08-14T18:34:43","Actor":"mmalerba","Number":"51353","RawContent":null,"Title":"Initial pass of template pipeline i18n block support","State":"open","Body":"Adds initial support for i18n blocks. Currently does not support templates in i18n blocks.","Url":"https://github.com/angular/angular/pull/51353","RelatedDescription":"Open PR \"Initial pass of template pipeline i18n block support\" (#51353)"},{"Id":"1850243606","IsPullRequest":true,"CreatedAt":"2023-08-14T17:40:40","Actor":"josephperrott","Number":"51352","RawContent":null,"Title":"ci: migrate zonejs tests to gha","State":"open","Body":"Migreate zonejs tests from CircleCI to Github Actions\r\n","Url":"https://github.com/angular/angular/pull/51352","RelatedDescription":"Open PR \"ci: migrate zonejs tests to gha\" (#51352)"},{"Id":"1850162889","IsPullRequest":true,"CreatedAt":"2023-08-14T16:47:00","Actor":"atcastle","Number":"51351","RawContent":null,"Title":"fix(common): Allow safeUrl for ngSrc in NgOptimizedImage","State":"open","Body":"This PR makes a small change to NgOptimizedImage to properly allow inputs of the safeUrl type for ngSrc in NgOptimizedImage. This is purely for compatibility/migration concerns, as NgOptimizedImage does not enforce sanitization on the `src` url, as that is not an xss vector in modern browsers.\r\n\r\nThe change is made using a transform which automatically unwraps provided safeUrl values, so the rest of the NgOptimizedImage still treats the ngSrc as always being a string.\r\n\r\nCC: @AndrewKushnir @kara ","Url":"https://github.com/angular/angular/pull/51351","RelatedDescription":"Open PR \"fix(common): Allow safeUrl for ngSrc in NgOptimizedImage\" (#51351)"},{"Id":"1850053363","IsPullRequest":true,"CreatedAt":"2023-08-14T15:45:23","Actor":"josephperrott","Number":"51350","RawContent":null,"Title":"Migrate monitoring jobs","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/51350","RelatedDescription":"Open PR \"Migrate monitoring jobs\" (#51350)"},{"Id":"1849312144","IsPullRequest":false,"CreatedAt":"2023-08-14T10:56:53","Actor":"moon-web75","Number":"51349","RawContent":null,"Title":"Can we check if the new version is updated or not while using the service worker ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nYes\n\n### Description\n\n#1 When i upload new build we only get first-time version update message but we need second-time version update message\r\n\r\n#2 Can we get every time which version is old and new \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51349","RelatedDescription":"Closed issue \"Can we check if the new version is updated or not while using the service worker \" (#51349)"},{"Id":"1849122558","IsPullRequest":false,"CreatedAt":"2023-08-14T06:54:35","Actor":"sauravgaursmith","Number":"51348","RawContent":null,"Title":"Date Pipe Format issue","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nUsing angular date pipe like this :\r\nTS File:\r\n\r\n`dateVar = Date.now();`\r\n\r\nTemplate File: \r\n`<span> {{ dateVar | date:'MMM dd, yyyy at hh:mm a' }}</span>`\r\n\r\nOutput (example): \r\n\r\n`Aug 14, 2023 AMt 12:17 AM` --Notice **AMt** in place of **at**\r\n\r\nIt should be like this - `Aug 14, 2023 at 12:17 AM`\n\n### Please provide a link to a minimal reproduction of the bug\n\nNA\n\n### Please provide the exception or error you saw\n\n```true\nNothings\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.9\r\nNode: 14.15.5\r\nPackage Manager: npm 6.14.11\r\nOS: linux x64\r\n\r\nAngular: 13.3.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... google-maps, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.9\r\n@angular-devkit/build-angular   13.3.9\r\n@angular-devkit/core            13.3.9\r\n@angular-devkit/schematics      13.3.9\r\n@angular/cdk                    13.3.7\r\n@angular/flex-layout            13.0.0-beta.38\r\n@angular/language-service       13.3.11\r\n@angular/material               13.3.7\r\n@schematics/angular             13.3.9\r\nng-packagr                      13.3.1\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\nFeature to get AM / PM in smaller case base on A or a is passed in format. ","Url":"https://github.com/angular/angular/issues/51348","RelatedDescription":"Open issue \"Date Pipe Format issue\" (#51348)"},{"Id":"1849015593","IsPullRequest":true,"CreatedAt":"2023-08-14T05:14:36","Actor":"AndrewKushnir","Number":"51347","RawContent":null,"Title":"refactor(core): initial implementation of `{#defer}` block runtime","State":"open","Body":"This commit adds an initial implementation of the `{#defer}` block runtime, which supports the `when` conditions. More conditions and basic prefetching support will be added in followup PRs.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51347","RelatedDescription":"Open PR \"refactor(core): initial implementation of `{#defer}` block runtime\" (#51347)"},{"Id":"1848018556","IsPullRequest":true,"CreatedAt":"2023-08-13T23:33:22","Actor":"Sinan997","Number":"51342","RawContent":null,"Title":"docs: update @self() decorator explanation","State":"closed","Body":"## PR Type\r\n- [x] Documentation content changes\r\n\r\nIssue Number: #51278 \r\n\r\n## Does this PR introduce a breaking change?\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51342","RelatedDescription":"Closed or merged PR \"docs: update @self() decorator explanation\" (#51342)"},{"Id":"1848765565","IsPullRequest":false,"CreatedAt":"2023-08-13T22:30:24","Actor":"Serginho","Number":"51345","RawContent":null,"Title":"Enable Subscription to Resolver Parameters to Avoid Redundant Calls","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nCurrently, when working with resolvers in Angular, there is an opportunity to enhance the developer experience.\r\n\r\n### Proposed solution\r\n\r\nIn many scenarios, resolvers are employed to load data into a component before it's displayed. However, the need often arises to utilize this resolved data elsewhere in the component after it has been resolved. In the provided scenario, the resolver is used as follows:\r\n\r\n```typescript\r\nresolve(\r\n  route: ActivatedRouteSnapshot\r\n): Observable<Array<Foo>> {\r\n  return this.fooService.foos;\r\n}\r\n```\r\nSubsequently, in the component, there's a desire to receive updates from foos as it emits new values, using the following logic:\r\n```typescript\r\nthis.foos: Observable<Array<Foo>> = this.route.data.pipe(map((data) => data['foos']));\r\n```\r\n\r\n\r\n### Alternatives considered\r\n\r\n\r\n```typescript\r\nconst resolverData = this.route.data.pipe(map((data) => data['foos']));\r\nconst serviceData = this.foosService.foos.pipe(skip(1));\r\nthis.foos = merge(resolverData, serviceData);\r\n```","Url":"https://github.com/angular/angular/issues/51345","RelatedDescription":"Open issue \"Enable Subscription to Resolver Parameters to Avoid Redundant Calls\" (#51345)"},{"Id":"1848326092","IsPullRequest":false,"CreatedAt":"2023-08-13T09:43:51","Actor":"JeanMeche","Number":"51344","RawContent":null,"Title":"Cannot listen to an event multiple times on a single element","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nSee this repro : \r\n\r\n```\r\n@Component({\r\n  selector: \"my-app\",\r\n  standalone: true,\r\n  template: `<button #button id=\"toggle\">click</button>`,\r\n})\r\nexport class App implements AfterViewChecked {\r\n  @ViewChild(\"button\") button!: ElementRef<HTMLElement>;\r\n  render$$ = new Subject<void>();\r\n\r\n  ngAfterViewInit() {\r\n    this.render$$\r\n      .pipe(switchMap(() => fromEvent(this.button.nativeElement, \"click\")))\r\n      .subscribe(() => console.log(\"--- click 1 ---\"));\r\n    this.render$$\r\n      .pipe(switchMap(() => fromEvent(this.button.nativeElement, \"click\")))\r\n      .subscribe(() => console.log(\"--- click 2 ---\"));\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.render$$.next();\r\n  }\r\n}\r\n\r\nbootstrapApplication(App);\r\n```\r\n\r\n`--- click 2 ---` is never logged. \r\n\r\nThis is likely related to the zone.js patching because there is no issue when providing `ɵNoopNgZone`. \r\n\r\nBut I also noted that I cannot reproduce this issue without firing an RxJS observable from a lifecycle methods like `ngAfterViewChecked`, `ngDoCheck` or from the new `afterRender()` hook. \r\n\r\n\r\nI really can't explain what's happening. \r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-htmdky?file=src%2Fmain.ts\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\nOn v16.2 and zone `0.13.1`\r\n","Url":"https://github.com/angular/angular/issues/51344","RelatedDescription":"Closed issue \"Cannot listen to an event multiple times on a single element\" (#51344)"},{"Id":"1848279583","IsPullRequest":false,"CreatedAt":"2023-08-12T22:42:37","Actor":"JeanMeche","Number":"51343","RawContent":null,"Title":"feature: throw an error in case of `afterRender` misuse. ","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nIt'd be great if we could throw an error if a patched API is called within an `afterRender()` callback\r\n\r\nFor example : \r\n\r\n`afterRender(() => setTimeout(() => { ...}, 1000);`  will run into an infinte render loop\r\n\r\nCurrently, NG102 is only thrown when a new CD cycle is fired from the context of an `afterRender` (for example `afterRender(() => cd.detectChanges())`\r\n\r\n### Proposed solution\r\n\r\nThrow an error to prevent an infinite loop. \r\n\r\n### Alternatives considered\r\n\r\n¯\\\\_(ツ)_/¯ let the dev close his browser tab and hope (s)he learns from his own mistake. ","Url":"https://github.com/angular/angular/issues/51343","RelatedDescription":"Open issue \"feature: throw an error in case of `afterRender` misuse. \" (#51343)"},{"Id":"1847994354","IsPullRequest":true,"CreatedAt":"2023-08-12T13:31:46","Actor":"Sinan997","Number":"51341","RawContent":null,"Title":"docs: update @self() decorator explanation","State":"closed","Body":"## PR Type\r\n- [x] Documentation content changes\r\n\r\nIssue Number: #51278 \r\n\r\n## Does this PR introduce a breaking change?\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/51341","RelatedDescription":"Closed or merged PR \"docs: update @self() decorator explanation\" (#51341)"},{"Id":"1847823373","IsPullRequest":true,"CreatedAt":"2023-08-12T07:24:18","Actor":"AleksanderBodurri","Number":"51339","RawContent":null,"Title":"feat(core): implement flag to ignore ngZone in message event listener","State":"open","Body":"This flag allows message event listeners to prevent callbacks from executing within the NgZone if they contain a special `__ignore_ng_zone__` flag.\r\n\r\nThis flag is built with Angular DevTools in mind, where it prevents an infinite change detection loop in inspected applications that have message event listeners\r\n\r\nCycle we want to avoid by using this flag:\r\nCD -> Inspected app emits componentTreeDirty event to DevTools -> DevTools emits event to get new component Tree from Inspected app -> Inspected app message event listener fires -> CD\r\n\r\n\r\ncloses #45572","Url":"https://github.com/angular/angular/pull/51339","RelatedDescription":"Open PR \"feat(core): implement flag to ignore ngZone in message event listener\" (#51339)"},{"Id":"1847527706","IsPullRequest":true,"CreatedAt":"2023-08-11T23:04:07","Actor":"pmvald","Number":"51338","RawContent":null,"Title":"refactor(compiler-cli): better error messages when external strings u…","State":"open","Body":"…sed for template and styles in local compilation mode\r\n\r\nIn local compilation mode it is not possible to use an imported string for component's template or styles as it cannot be resolved statically in compile time. There are some such use cases in g3 and potentially devs might incorporate such pattern. At the moment such pattern will cause the local compilation fail with generic error messages (e.g., so and so at position 1 is not a reference, etc). This change makes specific error messages with helpful hints for such cases. These new error messages can help devs to quickly resolve the issue as well as make it possible to identify existing issues in g3.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51338","RelatedDescription":"Open PR \"refactor(compiler-cli): better error messages when external strings u…\" (#51338)"},{"Id":"1847472488","IsPullRequest":false,"CreatedAt":"2023-08-11T21:55:45","Actor":"MutazNawas","Number":"51337","RawContent":null,"Title":"Angular PWA and offline server","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nservice-worker\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI utilize the PWA functionality to enable offline capabilities for my application. This involves executing the command ng add @angular/pwa. Initially, everything functions as intended. However, upon testing a scenario where the server experiences an outage or is offline, I observed that the cache storage is being cleared and the service worker is removed.\r\n\r\nIt's worth noting that there are no problems when the client is in an offline state. After investigating the ngsw-worker.js file, I identified a specific code segment responsible for triggering this cache clearance. The code is within the fetchLatestManifest function:\r\n\r\n```\r\nasync fetchLatestManifest(ignoreOfflineError = false) {\r\n  const res = await this.safeFetch(this.adapter.newRequest(\"ngsw.json?ngsw-cache-bust=\" + Math.random()));\r\n  if (!res.ok) {\r\n    if (res.status === 404) {\r\n      await this.deleteAllCaches();\r\n      await this.scope.registration.unregister();\r\n    } else if ((res.status === 503 || res.status === 504) && ignoreOfflineError) {\r\n      return null;\r\n    }\r\n    throw new Error(`Manifest fetch failed! (status: ${res.status})`);\r\n  }\r\n  this.lastUpdateCheck = this.adapter.time;\r\n  return res.json();\r\n}\r\n```\r\n\r\nThis behavior seems counterintuitive, as cache deletion shouldn't occur when the server is offline. Ideally, the service worker should cache the ngsw.json and rely on it, rather than deleting caches when the server experiences downtime. I'm seeking advice on potential solutions to this issue. Should I modify the code to resolve this problem? If so, what changes are recommended to ensure caches are retained even when the server is offline?\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51337","RelatedDescription":"Open issue \"Angular PWA and offline server\" (#51337)"},{"Id":"1846939171","IsPullRequest":true,"CreatedAt":"2023-08-11T14:36:48","Actor":"yatho","Number":"51336","RawContent":null,"Title":"docs(service-worker): Miss a comma in sample","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51336","RelatedDescription":"Open PR \"docs(service-worker): Miss a comma in sample\" (#51336)"},{"Id":"1846815790","IsPullRequest":true,"CreatedAt":"2023-08-11T13:19:46","Actor":"pkozlowski-opensource","Number":"51335","RawContent":null,"Title":"Configure next branch to receive major changes for v17.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51335","RelatedDescription":"Closed or merged PR \"Configure next branch to receive major changes for v17.0.0-next.0\" (#51335)"},{"Id":"1846332577","IsPullRequest":true,"CreatedAt":"2023-08-11T07:23:59","Actor":"crisbeto","Number":"51334","RawContent":null,"Title":"feat(core): support TypeScript 5.2","State":"open","Body":"Updates the project to support TypeScript 5.2.","Url":"https://github.com/angular/angular/pull/51334","RelatedDescription":"Open PR \"feat(core): support TypeScript 5.2\" (#51334)"},{"Id":"1846321741","IsPullRequest":true,"CreatedAt":"2023-08-11T07:14:42","Actor":"wardbell","Number":"51333","RawContent":null,"Title":"docs(pipes): Migrate pipe guide and its code examples to standalone","State":"open","Body":"**Pipes Sample Code**\r\n\r\nMigrated all sample code in the `examples/pipes` folder. Did not touch the pipes in the ToH or Testing folders.\r\n\r\n>The existing, complex discussion of the `CurrencyPipe` within `pipes-transform-data.md` cried out for a new `concurrency-formatting.component` example`.\r\n\r\n**Extracted \"pipe precedence\" into its own page**\r\n\r\nThe topic had been extracted from `pipe.md` and tacked on to the bottom of the `pipes-overview.md` page.\r\n\r\nIt's an advanced and somewhat obscure topic that doesn't belong in the overview. Rather than throw it away, I created a new `pipe-precedence.md` page and added it to the bottom of the pipes section navigation.\r\n\r\nI also tried to improve both the guide text and the companion component, `precedence.component`.\r\n\r\n**How to create a pipe is missing**\r\n\r\nThe readers are told they can create their own pipes in several places throughout the docs. But there are no links and you can't navigate to a page that covers the topic. This is a serious omission!\r\n\r\nThe topic is introduced in the `pipes-custom-data-trans.md` page (extracted verbatim from `pipes.md`). But you can't navigate to this page and their are no links to it.\r\n\r\nTODO: restore this page and add it to the left-nav.\r\n\r\n**Change `pipes.md` references to `pipe-overview.md`**\r\n\r\nThe original, kitchen-sink page, `pipes.md`, was disconnected from navigation long ago, in favor of multiple pages such as `pipe-overview.md`. The page is still in the AIO documentation and can be found by searching or by links from 3rd party documenters. Landing on that page hides the left-nav.\r\n\r\nIn this commit, we treat `pipes.md` as deprecated (which it seems to be). Therefore, this commit retargets previous `pipes.md` references to `pipe-overview.md`.\r\n\r\n>The `change-detection-slow-computations.md` is the exception. It refers to \"pure pipes\", a subject not covered in the current pipe documentation. That reference is retargeted to `api/core/Pipe#pure`.\r\n\r\nCertain code files are only referenced in `pipe.md`. They still work and are displayed in the overall pipes code sample as before. Now they are marked with deprecation comments for future treatment or removal.\r\n\r\nFor consistency, certain sections of `pipes.md` were replaced by the contents of the corresponding current pages.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51333","RelatedDescription":"Open PR \"docs(pipes): Migrate pipe guide and its code examples to standalone\" (#51333)"},{"Id":"1846254959","IsPullRequest":true,"CreatedAt":"2023-08-11T06:16:17","Actor":"aanchal88","Number":"51332","RawContent":null,"Title":"docs: add the doc type attribute","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51332","RelatedDescription":"Open PR \"docs: add the doc type attribute\" (#51332)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1847053371","IsPullRequest":true,"CreatedAt":"2023-08-14T16:16:08","Actor":"clydin","Number":"25672","RawContent":null,"Title":"feat(@angular-devkit/build-angular): initial i18n extraction support for application builder","State":"closed","Body":"The `ng extract-i18n` command now supports using either the developer preview esbuild-based browser or application builders. Support for the existing Webpack-based build system has been maintained. The extraction process will now build the application based on the build target defined builder in the case of either `@angular-devkit/build-angular:browser-esbuild` and `@angular-devkit/build-angular:application`. In the case of the application builder, SSR output code generation is disabled to prevent duplicate messages for the same underlying source code.","Url":"https://github.com/angular/angular-cli/pull/25672","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): initial i18n extraction support for application builder\" (#25672)"},{"Id":"1849340037","IsPullRequest":true,"CreatedAt":"2023-08-14T14:19:06","Actor":"alan-agius4","Number":"25681","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update vite to be able to serve app-shell and SSG pages [cherry-pick]","State":"closed","Body":"Cherry-pick of https://github.com/angular/angular-cli/pull/25653","Url":"https://github.com/angular/angular-cli/pull/25681","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update vite to be able to serve app-shell and SSG pages [cherry-pick]\" (#25681)"},{"Id":"1849596963","IsPullRequest":true,"CreatedAt":"2023-08-14T11:32:05","Actor":"alan-agius4","Number":"25682","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle HMR updates of global CSS when using Vite","State":"open","Body":"\r\n\r\nThis commit updates the Vite based dev-server to send updates update global styles using the HMR update instead of a full page reload when the the dev-server builder `hmr` option to be enabled.\r\n","Url":"https://github.com/angular/angular-cli/pull/25682","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): handle HMR updates of global CSS when using Vite\" (#25682)"},{"Id":"1849150243","IsPullRequest":true,"CreatedAt":"2023-08-14T10:33:48","Actor":"angular-robot","Number":"25680","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40MC4zIiwidXBkYXRlZEluVmVyIjoiMzYuNDAuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25680","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25680)"},{"Id":"1847762212","IsPullRequest":true,"CreatedAt":"2023-08-14T08:58:17","Actor":"angular-robot","Number":"25677","RawContent":null,"Title":"build: update dependency pacote to v16","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [pacote](https://togithub.com/npm/pacote) | dependencies | major | [`15.2.0` -> `16.0.0`](https://renovatebot.com/diffs/npm/pacote/15.2.0/16.0.0) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | major | [`15.2.0` -> `16.0.0`](https://renovatebot.com/diffs/npm/pacote/15.2.0/16.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/pacote (pacote)</summary>\n\n### [`v16.0.0`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1600-2023-07-28)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v15.2.0...v16.0.0)\n\n##### ⚠️ BREAKING CHANGES\n\n-   the underlying fetch module now uses `@npmcli/agent`. Backwards compatibility should be fully implemented but due to the scope of this change it was made a breaking change out of an abundance of caution.\n-   support for node 14 has been removed\n\n##### Bug Fixes\n\n-   [`73b6297`](https://togithub.com/npm/pacote/commit/73b62976054951b683a5c4c5f511d39f818641e4) [#&#8203;290](https://togithub.com/npm/pacote/pull/290) drop node14 support ([#&#8203;290](https://togithub.com/npm/pacote/issues/290)) ([@&#8203;wraithgar](https://togithub.com/wraithgar))\n\n##### Dependencies\n\n-   [`8dc6a32`](https://togithub.com/npm/pacote/commit/8dc6a32a22d76028f9802fbe8920ec0911d3981a) bump minipass from 5.0.0 to 7.0.2\n-   [`7cebf19`](https://togithub.com/npm/pacote/commit/7cebf194afb45e6aa8d44150b94984c75a3a5e08) bump npm-registry-fetch from 14.0.5 to 15.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40MC4zIiwidXBkYXRlZEluVmVyIjoiMzYuNDAuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25677","RelatedDescription":"Closed or merged PR \"build: update dependency pacote to v16\" (#25677)"},{"Id":"1847762117","IsPullRequest":true,"CreatedAt":"2023-08-14T08:58:08","Actor":"angular-robot","Number":"25676","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [autoprefixer](https://togithub.com/postcss/autoprefixer) | dependencies | patch | [`10.4.14` -> `10.4.15`](https://renovatebot.com/diffs/npm/autoprefixer/10.4.14/10.4.15) |\n| [autoprefixer](https://togithub.com/postcss/autoprefixer) | devDependencies | patch | [`10.4.14` -> `10.4.15`](https://renovatebot.com/diffs/npm/autoprefixer/10.4.14/10.4.15) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.19.0` -> `0.19.2`](https://renovatebot.com/diffs/npm/esbuild/0.19.0/0.19.2) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.0` -> `0.19.2`](https://renovatebot.com/diffs/npm/esbuild/0.19.0/0.19.2) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.19.0` -> `0.19.2`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.0/0.19.2) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.0` -> `0.19.2`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.0/0.19.2) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.46.0` -> `8.47.0`](https://renovatebot.com/diffs/npm/eslint/8.46.0/8.47.0) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.65` -> `23.0.69`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.65/23.0.69) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>postcss/autoprefixer (autoprefixer)</summary>\n\n### [`v10.4.15`](https://togithub.com/postcss/autoprefixer/blob/HEAD/CHANGELOG.md#10415)\n\n[Compare Source](https://togithub.com/postcss/autoprefixer/compare/10.4.14...10.4.15)\n\n-   Fixed `::backdrop` prefixes (by 一丝).\n-   Fixed docs (by Christian Oliff).\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.19.2`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0192)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.1...v0.19.2)\n\n-   Update how CSS nesting is parsed again\n\n    CSS nesting syntax has been changed again, and esbuild has been updated to match. Type selectors may now be used with CSS nesting:\n\n    ```css\n    .foo {\n      div {\n        color: red;\n      }\n    }\n    ```\n\n    Previously this was disallowed in the CSS specification because it's ambiguous whether an identifier is a declaration or a nested rule starting with a type selector without requiring unbounded lookahead in the parser. It has now been allowed because the CSS working group has decided that requiring unbounded lookahead is acceptable after all.\n\n    Note that this change means esbuild no longer considers any existing browser to support CSS nesting since none of the existing browsers support this new syntax. CSS nesting will now always be transformed when targeting a browser. This situation will change in the future as browsers add support for this new syntax.\n\n-   Fix a scope-related bug with `--drop-labels=` ([#&#8203;3311](https://togithub.com/evanw/esbuild/issues/3311))\n\n    The recently-released `--drop-labels=` feature previously had a bug where esbuild's internal scope stack wasn't being restored properly when a statement with a label was dropped. This could manifest as a tree-shaking issue, although it's possible that this could have also been causing other subtle problems too. The bug has been fixed in this release.\n\n-   Make renamed CSS names unique across entry points ([#&#8203;3295](https://togithub.com/evanw/esbuild/issues/3295))\n\n    Previously esbuild's generated names for local names in CSS were only unique within a given entry point (or across all entry points when code splitting was enabled). That meant that building multiple entry points with esbuild could result in local names being renamed to the same identifier even when those entry points were built simultaneously within a single esbuild API call. This problem was especially likely to happen with minification enabled. With this release, esbuild will now avoid renaming local names from two separate entry points to the same name if those entry points were built with a single esbuild API call, even when code splitting is disabled.\n\n-   Fix CSS ordering bug with `@layer` before `@import`\n\n    CSS lets you put `@layer` rules before `@import` rules to define the order of layers in a stylesheet. Previously esbuild's CSS bundler incorrectly ordered these after the imported files because before the introduction of cascade layers to CSS, imported files could be bundled by removing the `@import` rules and then joining files together in the right order. But with `@layer`, CSS files may now need to be split apart into multiple pieces in the bundle. For example:\n\n        /* Original code */\n        @&#8203;layer start;\n        @&#8203;import \"data:text/css,@&#8203;layer inner.start;\";\n        @&#8203;import \"data:text/css,@&#8203;layer inner.end;\";\n        @&#8203;layer end;\n\n        /* Old output (with --bundle) */\n        @&#8203;layer inner.start;\n        @&#8203;layer inner.end;\n        @&#8203;layer start;\n        @&#8203;layer end;\n\n        /* New output (with --bundle) */\n        @&#8203;layer start;\n        @&#8203;layer inner.start;\n        @&#8203;layer inner.end;\n        @&#8203;layer end;\n\n-   Unwrap nested duplicate `@media` rules ([#&#8203;3226](https://togithub.com/evanw/esbuild/issues/3226))\n\n    With this release, esbuild's CSS minifier will now automatically unwrap duplicate nested `@media` rules:\n\n    ```css\n    /* Original code */\n    @&#8203;media (min-width: 1024px) {\n      .foo { color: red }\n      @&#8203;media (min-width: 1024px) {\n        .bar { color: blue }\n      }\n    }\n\n    /* Old output (with --minify) */\n    @&#8203;media (min-width: 1024px){.foo{color:red}@&#8203;media (min-width: 1024px){.bar{color:#&#8203;00f}}}\n\n    /* New output (with --minify) */\n    @&#8203;media (min-width: 1024px){.foo{color:red}.bar{color:#&#8203;00f}}\n    ```\n\n    These rules are unlikely to be authored manually but may result from using frameworks such as Tailwind to generate CSS.\n\n### [`v0.19.1`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0191)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.0...v0.19.1)\n\n-   Fix a regression with `baseURL` in `tsconfig.json` ([#&#8203;3307](https://togithub.com/evanw/esbuild/issues/3307))\n\n    The previous release moved `tsconfig.json` path resolution before `--packages=external` checks to allow the [`paths` field](https://www.typescriptlang.org/tsconfig#paths) in `tsconfig.json` to avoid a package being marked as external. However, that reordering accidentally broke the behavior of the `baseURL` field from `tsconfig.json`. This release moves these path resolution rules around again in an attempt to allow both of these cases to work.\n\n-   Parse TypeScript type arguments for JavaScript decorators ([#&#8203;3308](https://togithub.com/evanw/esbuild/issues/3308))\n\n    When parsing JavaScript decorators in TypeScript (i.e. with `experimentalDecorators` disabled), esbuild previously didn't parse type arguments. Type arguments will now be parsed starting with this release. For example:\n\n    ```ts\n    @&#8203;foo<number>\n    @&#8203;bar<number, string>()\n    class Foo {}\n    ```\n\n-   Fix glob patterns matching extra stuff at the end ([#&#8203;3306](https://togithub.com/evanw/esbuild/issues/3306))\n\n    Previously glob patterns such as `./*.js` would incorrectly behave like `./*.js*` during path matching (also matching `.js.map` files, for example). This was never intentional behavior, and has now been fixed.\n\n-   Change the permissions of esbuild's generated output files ([#&#8203;3285](https://togithub.com/evanw/esbuild/issues/3285))\n\n    This release changes the permissions of the output files that esbuild generates to align with the default behavior of node's [`fs.writeFileSync`](https://nodejs.org/api/fs.html#fswritefilesyncfile-data-options) function. Since most tools written in JavaScript use `fs.writeFileSync`, this should make esbuild more consistent with how other JavaScript build tools behave.\n\n    The full Unix-y details: Unix permissions use three-digit octal notation where the three digits mean \"user, group, other\" in that order. Within a digit, 4 means \"read\" and 2 means \"write\" and 1 means \"execute\". So 6 == 4 + 2 == read + write. Previously esbuild uses 0644 permissions (the leading 0 means octal notation) but the permissions for `fs.writeFileSync` defaults to 0666, so esbuild will now use 0666 permissions. This does not necessarily mean that the files esbuild generates will end up having 0666 permissions, however, as there is another Unix feature called \"umask\" where the operating system masks out some of these bits. If your umask is set to 0022 then the generated files will have 0644 permissions, and if your umask is set to 0002 then the generated files will have 0664 permissions.\n\n-   Fix a subtle CSS ordering issue with `@import` and `@layer`\n\n    With this release, esbuild may now introduce additional `@layer` rules when bundling CSS to better preserve the layer ordering of the input code. Here's an example of an edge case where this matters:\n\n    ```css\n    /* entry.css */\n    @&#8203;import \"a.css\";\n    @&#8203;import \"b.css\";\n    @&#8203;import \"a.css\";\n    ```\n\n    ```css\n    /* a.css */\n    @&#8203;layer a {\n      body {\n        background: red;\n      }\n    }\n    ```\n\n    ```css\n    /* b.css */\n    @&#8203;layer b {\n      body {\n        background: green;\n      }\n    }\n    ```\n\n    This CSS should set the body background to `green`, which is what happens in the browser. Previously esbuild generated the following output which incorrectly sets the body background to `red`:\n\n    ```css\n    /* b.css */\n    @&#8203;layer b {\n      body {\n        background: green;\n      }\n    }\n\n    /* a.css */\n    @&#8203;layer a {\n      body {\n        background: red;\n      }\n    }\n    ```\n\n    This difference in behavior is because the browser evaluates `a.css` + `b.css` + `a.css` (in CSS, each `@import` is replaced with a copy of the imported file) while esbuild was only writing out `b.css` + `a.css`. The first copy of `a.css` wasn't being written out by esbuild for two reasons: 1) bundlers care about code size and try to avoid emitting duplicate CSS and 2) when there are multiple copies of a CSS file, normally only the *last* copy matters since the last declaration with equal specificity wins in CSS.\n\n    However, `@layer` was recently added to CSS and for `@layer` the *first* copy matters because layers are ordered using their first location in source code order. This introduction of `@layer` means esbuild needs to change its bundling algorithm. An easy solution would be for esbuild to write out `a.css` twice, but that would be inefficient. So what I'm going to try to have esbuild do with this release is to write out an abbreviated form of the first copy of a CSS file that only includes the `@layer` information, and then still only write out the full CSS file once for the last copy. So esbuild's output for this edge case now looks like this:\n\n    ```css\n    /* a.css */\n    @&#8203;layer a;\n\n    /* b.css */\n    @&#8203;layer b {\n      body {\n        background: green;\n      }\n    }\n\n    /* a.css */\n    @&#8203;layer a {\n      body {\n        background: red;\n      }\n    }\n    ```\n\n    The behavior of the bundled CSS now matches the behavior of the unbundled CSS. You may be wondering why esbuild doesn't just write out `a.css` first followed by `b.css`. That would work in this case but it doesn't work in general because for any rules outside of a `@layer` rule, the last copy should still win instead of the first copy.\n\n-   Fix a bug with esbuild's TypeScript type definitions ([#&#8203;3299](https://togithub.com/evanw/esbuild/pull/3299))\n\n    This release fixes a copy/paste error with the TypeScript type definitions for esbuild's JS API:\n\n    ```diff\n     export interface TsconfigRaw {\n       compilerOptions?: {\n    -    baseUrl?: boolean\n    +    baseUrl?: string\n         ...\n       }\n     }\n    ```\n\n    This fix was contributed by [@&#8203;privatenumber](https://togithub.com/privatenumber).\n\n</details>\n\n<details>\n<summary>eslint/eslint (eslint)</summary>\n\n### [`v8.47.0`](https://togithub.com/eslint/eslint/releases/tag/v8.47.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.46.0...v8.47.0)\n\n#### Features\n\n-   [`53d7508`](https://togithub.com/eslint/eslint/commit/53d750800b1c0c1f8c29393c488bb3167bb1d2a5) feat: update regex for methods with `thisArg` ([#&#8203;17439](https://togithub.com/eslint/eslint/issues/17439)) (Francesco Trotta)\n\n#### Bug Fixes\n\n-   [`631648e`](https://togithub.com/eslint/eslint/commit/631648ee0b51a8951ce576ccd4430e09c9c8bcae) fix: do not report on shadowed constructors in `no-new-wrappers` ([#&#8203;17447](https://togithub.com/eslint/eslint/issues/17447)) (Francesco Trotta)\n\n#### Documentation\n\n-   [`a766a48`](https://togithub.com/eslint/eslint/commit/a766a48030d4359db76523d5b413d6332130e485) docs: document lack of config file names ([#&#8203;17442](https://togithub.com/eslint/eslint/issues/17442)) (James)\n-   [`a1635d6`](https://togithub.com/eslint/eslint/commit/a1635d6198a8baf6571b3351e098e5ac960be887) docs: Update README (GitHub Actions Bot)\n-   [`47a0859`](https://togithub.com/eslint/eslint/commit/47a08597966651975126dd6726939cd34f13b80e) docs: update `require-unicode-regexp.md` as following up [#&#8203;17402](https://togithub.com/eslint/eslint/issues/17402) ([#&#8203;17441](https://togithub.com/eslint/eslint/issues/17441)) (SUZUKI Sosuke)\n-   [`fcdc85d`](https://togithub.com/eslint/eslint/commit/fcdc85d3a6bc14970c3349cc8d6f3a47eca172a3) docs: Update README (GitHub Actions Bot)\n-   [`2a92b6c`](https://togithub.com/eslint/eslint/commit/2a92b6cc9520a27255520369206556e9841a3af8) docs: update with \"Specifying Parser Options\" ([#&#8203;17435](https://togithub.com/eslint/eslint/issues/17435)) (Cheol-Won)\n-   [`d743ed3`](https://togithub.com/eslint/eslint/commit/d743ed3c06c62a639da0389ad27907b324ea1715) docs: add metadata for parser/processor ([#&#8203;17438](https://togithub.com/eslint/eslint/issues/17438)) (Huáng Jùnliàng)\n-   [`224376c`](https://togithub.com/eslint/eslint/commit/224376cd99a08394291a9584ad9c1ea1283673c6) docs: Update README (GitHub Actions Bot)\n-   [`a41a8e4`](https://togithub.com/eslint/eslint/commit/a41a8e4a7da14726d6fce71a023f12101fd52fdb) docs: update script names in README ([#&#8203;17432](https://togithub.com/eslint/eslint/issues/17432)) (Nitin Kumar)\n\n#### Chores\n\n-   [`bf69aa6`](https://togithub.com/eslint/eslint/commit/bf69aa6408f5403a88d8c9b71b0e58232b1ea833) chore: Update dependencies ([#&#8203;17456](https://togithub.com/eslint/eslint/issues/17456)) (Nicholas C. Zakas)\n-   [`0e45760`](https://togithub.com/eslint/eslint/commit/0e4576012ab938b880e6f27641bff55fb4313d20) chore: package.json update for [@&#8203;eslint/js](https://togithub.com/eslint/js) release (ESLint Jenkins)\n-   [`757bfe1`](https://togithub.com/eslint/eslint/commit/757bfe1c35b5ddab7042d388f8d21e834875fff5) chore: Remove add-to-triage ([#&#8203;17450](https://togithub.com/eslint/eslint/issues/17450)) (Nicholas C. Zakas)\n-   [`b066640`](https://togithub.com/eslint/eslint/commit/b066640b7040ec30f740dcc803511244fe19473b) chore: standardize npm script names ([#&#8203;17431](https://togithub.com/eslint/eslint/issues/17431)) (Nitin Kumar)\n-   [`6b2410f`](https://togithub.com/eslint/eslint/commit/6b2410f911dd2e3d915c879041c6e257d41a2f4e) chore: Update add-to-triage.yml ([#&#8203;17444](https://togithub.com/eslint/eslint/issues/17444)) (Nicholas C. Zakas)\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.69`](https://togithub.com/quicktype/quicktype/compare/b6d6ff9724d16437cad52f4e0e894972d6cee757...0db1f19de1043f702ff17d6a4663947d302451be)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/b6d6ff9724d16437cad52f4e0e894972d6cee757...0db1f19de1043f702ff17d6a4663947d302451be)\n\n### [`v23.0.68`](https://togithub.com/quicktype/quicktype/compare/b2d54a3c03d97707cb890613bc9976f892e1b51f...b6d6ff9724d16437cad52f4e0e894972d6cee757)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/b2d54a3c03d97707cb890613bc9976f892e1b51f...b6d6ff9724d16437cad52f4e0e894972d6cee757)\n\n### [`v23.0.67`](https://togithub.com/quicktype/quicktype/compare/7aa8d255721b667e68bb13cbd8a6c908e6741fe9...b2d54a3c03d97707cb890613bc9976f892e1b51f)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/7aa8d255721b667e68bb13cbd8a6c908e6741fe9...b2d54a3c03d97707cb890613bc9976f892e1b51f)\n\n### [`v23.0.66`](https://togithub.com/quicktype/quicktype/compare/fccdfeb9af06f0d4120879da868415e95beecfb8...7aa8d255721b667e68bb13cbd8a6c908e6741fe9)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/fccdfeb9af06f0d4120879da868415e95beecfb8...7aa8d255721b667e68bb13cbd8a6c908e6741fe9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40MC4zIiwidXBkYXRlZEluVmVyIjoiMzYuNDAuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25676","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25676)"},{"Id":"1847399500","IsPullRequest":true,"CreatedAt":"2023-08-14T08:57:55","Actor":"clydin","Number":"25675","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove support for Node.js v16","State":"closed","Body":"BREAKING CHANGE: Node.js v16 support has been removed\r\n\r\nNode.js v16 is planned to be End-of-Life on 2023-09-11. Angular will stop supporting Node.js v16 in Angular v17. For Node.js release schedule details, please see: https://github.com/nodejs/release#release-schedule","Url":"https://github.com/angular/angular-cli/pull/25675","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove support for Node.js v16\" (#25675)"},{"Id":"1847195714","IsPullRequest":true,"CreatedAt":"2023-08-14T08:57:41","Actor":"clydin","Number":"25673","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded esbuild external packages workaround","State":"closed","Body":"Version 0.19 of esbuild added the ability to consider tsconfig path mappings when using the external packages build option. This addition allows the Angular build system to remove a resolve plugin that previously was used to workaround this limitation. Removal of the plugin may also provide improved rebuild performance when used with the development server as many of the JavaScript resolution attempts will no longer need to be handled by the now removed plugin.","Url":"https://github.com/angular/angular-cli/pull/25673","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded esbuild external packages workaround\" (#25673)"},{"Id":"1843008419","IsPullRequest":true,"CreatedAt":"2023-08-14T08:57:13","Actor":"alan-agius4","Number":"25653","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update vite to be able to serve app-shell and SSG pages","State":"closed","Body":"\r\nThis commits, update the application builder and vite dev-server to be able to serve the app-shell and prerendered pages.\r\n","Url":"https://github.com/angular/angular-cli/pull/25653","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update vite to be able to serve app-shell and SSG pages\" (#25653)"},{"Id":"1848796392","IsPullRequest":true,"CreatedAt":"2023-08-14T04:37:27","Actor":"sammyfilly","Number":"25679","RawContent":null,"Title":"long-description.md","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25679","RelatedDescription":"Closed or merged PR \"long-description.md\" (#25679)"},{"Id":"1848018098","IsPullRequest":false,"CreatedAt":"2023-08-12T16:48:07","Actor":"alaaahmedmu","Number":"25678","RawContent":null,"Title":"TypeError: The 'compilation' argument must be an instance of Compilation","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12\n\n### Description\n\nWhen trying to run `ng run app:build-storybook`, this error occurred\r\n```\r\n9% setup compilation SourceMapDevToolPlugin/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/javascript/JavascriptModulesPlugin.js:143\r\n\t\t\tthrow new TypeError(\r\n\t\t\t      ^\r\n\r\nTypeError: The 'compilation' argument must be an instance of Compilation\r\n    at Function.getCompilationHooks (/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/javascript/JavascriptModulesPlugin.js:143:10)\r\n    at SourceMapDevToolModuleOptionsPlugin.apply (/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/SourceMapDevToolModuleOptionsPlugin.js:50:27)\r\n```\r\n\r\n\r\nBut, when disable `sourceMap` to be `false` in `angular.json` it works and compiles successfully.  \n\n### Minimal Reproduction\n\nng run app:build-storybook\r\n\r\npackages installed\r\n\r\n```\r\n\"@angular-builders/custom-webpack\": \"^13.1.0\",\r\n\"@angular-devkit/build-angular\": \"^13.3.2\",\r\n\"@angular-eslint/builder\": \"^13.2.0\",\r\n\"@angular-eslint/eslint-plugin\": \"^13.2.0\",\r\n\"@angular-eslint/eslint-plugin-template\": \"^13.2.0\",\r\n\"@angular-eslint/schematics\": \"^13.2.0\",\r\n\"@angular-eslint/template-parser\": \"^13.2.0\",\r\n\"@angular/cli\": \"^13.3.2\",\r\n\"@angular/compiler\": \"^13.3.2\",\r\n\"@angular/compiler-cli\": \"^13.3.2\",\r\n\"@angular/elements\": \"^13.0.1\",\r\n\"@angular/language-service\": \"^13.3.2\",\r\n\"@babel/core\": \"^7.16.0\",\r\n\"@hmscore/cordova-plugin-hms-push\": \"^6.3.0-304\",\r\n\"@ionic/angular-toolkit\": \"^6.1.0\",\r\n\"@ionic/lab\": \"3.2.9\",\r\n\"@nguniversal/builders\": \"^13.1.0\",\r\n\"@storybook/addon-a11y\": \"^6.3.12\",\r\n\"@storybook/addon-actions\": \"^6.3.12\",\r\n\"@storybook/addon-essentials\": \"^6.3.12\",\r\n\"@storybook/addon-links\": \"^6.3.12\",\r\n\"@storybook/addon-options\": \"^5.3.21\",\r\n\"@storybook/addon-viewport\": \"^6.3.12\",\r\n\"@storybook/angular\": \"^6.3.12\",\r\n\"@storybook/builder-webpack5\": \"^6.3.12\",\r\n\"@storybook/manager-webpack5\": \"^6.3.12\",\r\n\"@types/jasmine\": \"~3.5.0\",\r\n\"@types/jasminewd2\": \"^2.0.9\",\r\n\"@types/socket.io-client\": \"^1.4.32\",\r\n\"@typescript-eslint/eslint-plugin\": \"^5.19.0\",\r\n\"@typescript-eslint/eslint-plugin-tslint\": \"^5.1.0\",\r\n\"@typescript-eslint/parser\": \"^5.19.0\",\r\n\"@webcomponents/custom-elements\": \"^1.5.0\",\r\n\"arg\": \"^5.0.1\",\r\n\"async\": \"^3.2.2\",\r\n\"aws-sdk\": \"^2.1030.0\",\r\n\"babel-loader\": \"^8.2.3\",\r\n\"chalk\": \"^4.1.0\",\r\n\"clear\": \"^0.1.0\",\r\n\"codelyzer\": \"^6.0.2\",\r\n\"com-badrit-base64\": \"^0.2.0\",\r\n\"cordova-android\": \"10.1.2\",\r\n\"cordova-clipboard\": \"^1.3.0\",\r\n\"cordova-ios\": \"^6.2.0\",\r\n\"cordova-plugin-add-swift-support\": \"^2.0.2\",\r\n\"cordova-plugin-android-permissions\": \"^1.1.2\",\r\n\"cordova-plugin-androidx\": \"^3.0.0\",\r\n\"cordova-plugin-androidx-adapter\": \"^1.1.3\",\r\n\"cordova-plugin-app-launcher\": \"^0.4.0\",\r\n\"cordova-plugin-app-version\": \"^0.1.12\",\r\n\"cordova-plugin-apprate\": \"^1.7.2\",\r\n\"cordova-plugin-appsflyer-sdk\": \"^6.10.3\",\r\n\"cordova-plugin-camera\": \"^6.0.0\",\r\n\"cordova-plugin-camera-preview\": \"^0.12.2\",\r\n\"cordova-plugin-device\": \"^2.0.3\",\r\n\"cordova-plugin-device-motion\": \"^2.0.1\",\r\n\"cordova-plugin-dialogs\": \"^2.0.2\",\r\n\"cordova-plugin-facebook-connect\": \"^3.2.0\",\r\n\"cordova-plugin-file\": \"^7.0.0\",\r\n\"cordova-plugin-file-opener2\": \"^3.0.5\",\r\n\"cordova-plugin-filechooser\": \"^1.2.0\",\r\n\"cordova-plugin-filepath\": \"^1.6.0\",\r\n\"cordova-plugin-filepicker\": \"^1.1.6\",\r\n\"cordova-plugin-fingerprint-aio\": \"^5.0.1\",\r\n\"cordova-plugin-firebase-analytics\": \"^6.1.0\",\r\n\"cordova-plugin-firebase-config\": \"^6.1.0\",\r\n\"cordova-plugin-firebase-crash\": \"^4.2.0\",\r\n\"cordova-plugin-googleplus\": \"^8.5.2\",\r\n\"cordova-plugin-inappbrowser\": \"^5.0.0\",\r\n\"cordova-plugin-ionic\": \"^5.5.1\",\r\n\"cordova-plugin-ionic-keyboard\": \"^2.2.0\",\r\n\"cordova-plugin-ionic-webview\": \"^5.0.0\",\r\n\"cordova-plugin-iroot\": \"^3.1.0\",\r\n\"cordova-plugin-mfekyc\": \"^1.4.1\",\r\n\"cordova-plugin-mixpanel\": \"^4.7.1\",\r\n\"cordova-plugin-nativestorage\": \"^2.3.2\",\r\n\"cordova-plugin-network-information\": \"^3.0.0\",\r\n\"cordova-plugin-privacyscreen-storyboard\": \"^0.0.2\",\r\n\"cordova-plugin-shake\": \"^0.7.0\",\r\n\"cordova-plugin-sim\": \"^1.3.3\",\r\n\"cordova-plugin-splashscreen\": \"^6.0.0\",\r\n\"cordova-plugin-statusbar\": \"^3.0.0\",\r\n\"cordova-plugin-x-socialsharing\": \"^6.0.3\",\r\n\"cordova-sqlite-storage\": \"^6.0.0\",\r\n\"cordova-support-android-plugin\": \"^1.0.2\",\r\n\"cordova.plugins.diagnostic\": \"^6.0.3\",\r\n\"es6-promise-plugin\": \"^4.2.2\",\r\n\"eslint\": \"^8.13.0\",\r\n\"eslint-config-prettier\": \"^8.3.0\",\r\n\"eslint-plugin-angular\": \"^4.1.0\",\r\n\"eslint-plugin-import\": \"2.26.0\",\r\n\"eslint-plugin-jsdoc\": \"^39.2.0\",\r\n\"eslint-plugin-prefer-arrow\": \"1.2.2\",\r\n\"eslint-plugin-prettier\": \"^4.0.0\",\r\n\"figlet\": \"^1.5.0\",\r\n\"jasmine-core\": \"~3.5.0\",\r\n\"jasmine-spec-reporter\": \"~5.0.0\",\r\n\"javascript-obfuscator\": \"^3.0.0\",\r\n\"karma\": \"^6.3.4\",\r\n\"karma-chrome-launcher\": \"~3.1.0\",\r\n\"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n\"karma-jasmine\": \"~3.3.0\",\r\n\"karma-jasmine-html-reporter\": \"~1.5.4\",\r\n\"ng-packagr\": \"^13.3.1\",\r\n\"ngx-spec\": \"^2.1.4\",\r\n\"npm\": \"^6.14.8\",\r\n\"prettier\": \"^2.6.0\",\r\n\"protractor\": \"^7.0.0\",\r\n\"protractor-beautiful-reporter\": \"^1.3.6\",\r\n\"run-script-os\": \"^1.1.1\",\r\n\"storybook-addon-designs\": \"^6.2.1\",\r\n\"ts-node\": \"^8.3.0\",\r\n\"typescript\": \"^4.4.3\",\r\n\"webpack-dev-server\": \"^4.11.1\",\r\n\"webpack-obfuscator\": \"^3.5.1\"\r\n```\n\n### Exception or Error\n\n```text\n9% setup compilation SourceMapDevToolPlugin/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/javascript/JavascriptModulesPlugin.js:143\r\n\t\t\tthrow new TypeError(\r\n\t\t\t      ^\r\n\r\nTypeError: The 'compilation' argument must be an instance of Compilation\r\n    at Function.getCompilationHooks (/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/javascript/JavascriptModulesPlugin.js:143:10)\r\n    at SourceMapDevToolModuleOptionsPlugin.apply (/Users/ahmed.alaa/projects/project/node_modules/@angular-devkit/build-angular/node_modules/webpack/lib/SourceMapDevToolModuleOptionsPlugin.js:50:27)\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.3.11\r\nNode: 16.14.0\r\nPackage Manager: npm 6.14.18\r\nOS: darwin arm64\r\n\r\nAngular: 13.4.0\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   13.3.11\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      13.3.11\r\n@angular/cli                    13.3.11\r\n@angular/fire                   7.6.1\r\n@angular/pwa                    13.3.11\r\n@nguniversal/builders           13.1.1\r\n@nguniversal/express-engine     13.1.1\r\n@schematics/angular             13.3.11\r\nng-packagr                      13.3.1\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25678","RelatedDescription":"Closed issue \"TypeError: The 'compilation' argument must be an instance of Compilation\" (#25678)"},{"Id":"1847254621","IsPullRequest":true,"CreatedAt":"2023-08-11T23:30:56","Actor":"dgp1130","Number":"25674","RawContent":null,"Title":"fix(@angular-devkit/build-angular): encode Sass package resolve directories in importer URLs","State":"closed","Body":"When using the new developer preview application build system, Sass import/use usage that specifies a package is adjusted to contain the resolve directory to workaround Sass import plugin limitations. This resolve directory is now encoded to prevent the new specifier from looking like a URL with a scheme to the Sass compiler. This can occur on Windows when a drive letter is present (`C:\\`).\r\n\r\n(cherry picked from commit 8b74a50e7be0889171c55545b43a28119191b04a)\r\n\r\nThis is a copy of #25666 targeting the current patch branch.","Url":"https://github.com/angular/angular-cli/pull/25674","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): encode Sass package resolve directories in importer URLs\" (#25674)"},{"Id":"1845680464","IsPullRequest":true,"CreatedAt":"2023-08-11T18:07:33","Actor":"clydin","Number":"25666","RawContent":null,"Title":"fix(@angular-devkit/build-angular): encode Sass package resolve directories in importer URLs","State":"closed","Body":"When using the new developer preview application build system, Sass import/use usage that specifies a package is adjusted to contain the resolve directory to workaround Sass import plugin limitations. This resolve directory is now encoded to prevent the new specifier from looking like a URL with a scheme to the Sass compiler. This can occur on Windows when a drive letter is present (`C:\\`).","Url":"https://github.com/angular/angular-cli/pull/25666","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): encode Sass package resolve directories in importer URLs\" (#25666)"},{"Id":"1845813799","IsPullRequest":true,"CreatedAt":"2023-08-11T18:07:07","Actor":"clydin","Number":"25667","RawContent":null,"Title":"test: cleanup E2E test regular expressions","State":"closed","Body":"Several of the older E2E tests that use regular expression based checks have been cleaned up by using string include checks where possible. Several regular expressions have also been simplified where possible.","Url":"https://github.com/angular/angular-cli/pull/25667","RelatedDescription":"Closed or merged PR \"test: cleanup E2E test regular expressions\" (#25667)"},{"Id":"1846685695","IsPullRequest":false,"CreatedAt":"2023-08-11T11:47:27","Actor":"preda7or","Number":"25671","RawContent":null,"Title":"Esbuild based dev server returns 404 if starting URL contains a dot (.)","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nnon esbuild dev server\r\n\r\n### Description\r\n\r\nupdate: probably related to Vite bug: https://github.com/vitejs/vite/issues/2415\r\n\r\nWhen the esbuild based dev server receives a staring URL that contains a dot (.) in it - instead of routing it to the index.html - it returns 404.\r\n\r\nUsing any URL with dot in it results in the same 404, any other URL works just fine.\r\n\r\nDevtools in network tab/status column instead of the usual 404, show: `(failed) net::ERR_HTTP_RESPONSE_CODE_FAILURE`\r\n\r\n### Minimal Reproduction\r\n\r\n- setup angular minimal app\r\n- use `\"executor\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n- run `ng serve`\r\n- in browser open: `localhost:4200/.a`\r\n\r\n### Exception or Error\r\n\r\n```text\r\nRequest in devtools looks like this:\r\n\r\nhttp://localhost:4200/.a\r\n\r\n#### Request:\r\n\r\nGET /.a HTTP/1.1\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,hu;q=0.8\r\nConnection: keep-alive\r\nCookie: ...\r\nDNT: 1\r\nHost: localhost:4200\r\nSec-Fetch-Dest: document\r\nSec-Fetch-Mode: navigate\r\nSec-Fetch-Site: none\r\nSec-Fetch-User: ?1\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36\r\nsec-ch-ua: \"Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"115\", \"Chromium\";v=\"115\"\r\nsec-ch-ua-mobile: ?0\r\nsec-ch-ua-platform: \"Windows\"\r\n\r\n#### Response:\r\n\r\nHTTP/1.1 404 Not Found\r\nAccess-Control-Allow-Origin: *\r\nDate: Fri, 11 Aug 2023 11:42:05 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\nContent-Length: 0\r\n\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n@angular/cli: 16.1.1\r\n@angular-devkit/build-angular: 16.1.1\r\n\r\nOS: Windows 10.0.19044 Build 19044 x64\r\nBrowser: Chrome 115.0.5790.171 64bit\r\nNode: 16.20.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nMy project is using Nrwl/Nx monorepo, but I don't that has to do anything with this issue.","Url":"https://github.com/angular/angular-cli/issues/25671","RelatedDescription":"Open issue \"Esbuild based dev server returns 404 if starting URL contains a dot (.)\" (#25671)"},{"Id":"1846578309","IsPullRequest":false,"CreatedAt":"2023-08-11T10:25:14","Actor":"ngadceser","Number":"25670","RawContent":null,"Title":"error When using browser-esbuild","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nerror When using browser-esbuild\n\n### Description\n\nAfter updating 16.2.0\r\nWhen using browser-esbuild  There is an error as below.\r\n\r\n\"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n@use 'sass:map';\r\n@use '@angular/material' as mat;\r\n\r\n [ERROR] Invalid URL: Scheme not starting with alphabetic character\r\n @use \"__NG_PACKAGE__; src/styles/override;@angular/material\" as mat;\r\n\r\n\"@angular/animations\": \"^16.2.0\",\r\n\"@angular/cdk\": \"16.2.0\",\r\n\"@angular/common\": \"^16.2.0\",\r\n\"@angular/compiler\": \"^16.2.0\",\r\n\"@angular/core\": \"^16.2.0\",\r\n\"@angular/forms\": \"^16.2.0\",\r\n\"@angular/material\": \"16.2.0\",\r\n\r\nHowever, if you use \"builder\": \"@angular-devkit/build-angular:browser\", the error disappears.\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nThere was no problem with the previous version.\n\n### Actual Behavior\n\nIt only happens in es-build after updating.\n\n### Environment\n\n- Angular:16.2.0\r\n- CDK/Material:16.2.0\r\n- Browser(s):chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):windows 11\r\n","Url":"https://github.com/angular/angular-cli/issues/25670","RelatedDescription":"Closed issue \"error When using browser-esbuild\" (#25670)"},{"Id":"1846166333","IsPullRequest":false,"CreatedAt":"2023-08-11T06:20:36","Actor":"harleenarora","Number":"25669","RawContent":null,"Title":"Angular 15: ResizeObserver loop completed with undelivered notifications","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nI can't seem to find anything through googling... the closest I get are references to \"ResizeObserver loop completed with undelivered notifications\". I'm puzzled by this, since it doesn't occur on the other page.\r\n\r\nI get this error on production mode.\r\n\n\n### Minimal Reproduction\n\n\"@angular/cli\": \"^15.0.1\",\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular: 15.0.1\r\nNode: 14.21.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25669","RelatedDescription":"Closed issue \"Angular 15: ResizeObserver loop completed with undelivered notifications\" (#25669)"},{"Id":"1846055569","IsPullRequest":false,"CreatedAt":"2023-08-11T00:41:16","Actor":"rafagsiqueira","Number":"25668","RawContent":null,"Title":"Support jest cli options when using @angular-devkit/build-angular:jest","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nSometimes it might be necessary to provide cli options to jest that are decided at \"runtime\".\r\nExample below of a debug configuration for running tests in vscode:\r\n```\r\n{\r\n  \"configurations\": [\r\n    {\r\n      \"type\": \"node\",\r\n      \"name\": \"vscode-jest-tests.v2\",\r\n      \"request\": \"launch\",\r\n      \"console\": \"integratedTerminal\",\r\n      \"internalConsoleOptions\": \"neverOpen\",\r\n      \"cwd\": \"${workspaceFolder}\",\r\n      \"runtimeExecutable\": \"ng\",\r\n      \"args\": [\r\n        \"test\",\r\n        \"etips-utils\",\r\n        \"--run-in-band\",\r\n        \"--watch-all=false\",\r\n        \"--test-name-pattern\",\r\n        \"${jest.testNamePattern}\",\r\n        \"--test-path-pattern\",\r\n        \"${jest.testFile}\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\n\n### Describe the solution you'd like\n\nThe project https://github.com/just-jeb/angular-builders implements an approach to allowing jest cli options.\r\nhttps://github.com/just-jeb/angular-builders/blob/8f00fd9b324d0151f722a4e962fcbeab7891baae/packages/jest/src/index.ts#L37C11-L37C11\n\n### Describe alternatives you've considered\n\nAlternative is to use https://github.com/just-jeb/angular-builders, but the build requires a lot more configuration to work with angular and esm.","Url":"https://github.com/angular/angular-cli/issues/25668","RelatedDescription":"Open issue \"Support jest cli options when using @angular-devkit/build-angular:jest\" (#25668)"},{"Id":"1845647271","IsPullRequest":true,"CreatedAt":"2023-08-10T18:30:45","Actor":"dgp1130","Number":"25665","RawContent":null,"Title":"fix(@angular-devkit/build-angular): display warning when using `resourcesOutputPath` with esbuild builder","State":"closed","Body":"`resourcesOutputPath` option is not supported when using the esbuild based builder.\r\n\r\nCloses #25658\r\n\r\n(cherry picked from commit 4935172a109e5b704e5565417c43ccd6dfba4a20)\r\n\r\nThis is copy of PR #25659, targeting the patch branch.","Url":"https://github.com/angular/angular-cli/pull/25665","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): display warning when using `resourcesOutputPath` with esbuild builder\" (#25665)"},{"Id":"1844901708","IsPullRequest":true,"CreatedAt":"2023-08-10T18:06:45","Actor":"alan-agius4","Number":"25663","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"(cherry picked from commit 90f0b818a459ec288342364d364b3d24694b639f)\r\n","Url":"https://github.com/angular/angular-cli/pull/25663","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25663)"},{"Id":"1844676816","IsPullRequest":true,"CreatedAt":"2023-08-10T18:02:23","Actor":"alan-agius4","Number":"25661","RawContent":null,"Title":"refactor(@schematics/angular): remove deprecated appId option","State":"closed","Body":"Remove deprecated unused options from schematics.\r\n\r\nBREAKING CHANGE: App-shell and Universal schematics deprecated unused `appId` option has been removed.\r\n","Url":"https://github.com/angular/angular-cli/pull/25661","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): remove deprecated appId option\" (#25661)"},{"Id":"1844587309","IsPullRequest":false,"CreatedAt":"2023-08-10T17:49:15","Actor":"wartab","Number":"25658","RawContent":null,"Title":"Warning not displayed for resourcesOutputPath in esbuild.","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe following pull request added a check for `resourcesOutputPath` in [angular_devkit/build_angular/src/builders/browser-esbuild/builder-status-warnings.ts](https://github.com/angular/angular-cli/pull/25495/files#diff-3eedf542c0ff7e69a4c624e53cc63f6be2766be2b07ba5daaebfe23199153afd). However, the variable `unsupportedOption` can never have that value, because the array which is iterated over doesn't contain that value.\r\n\r\nhttps://github.com/angular/angular-cli/pull/25495\r\n\r\nI'm not sure if this is intentional, but I figured I'd point it out.\n\n### Minimal Reproduction\n\nIrrelevant\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, localize, material\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25658","RelatedDescription":"Closed issue \"Warning not displayed for resourcesOutputPath in esbuild.\" (#25658)"},{"Id":"1844658197","IsPullRequest":true,"CreatedAt":"2023-08-10T17:49:14","Actor":"alan-agius4","Number":"25659","RawContent":null,"Title":"fix(@angular-devkit/build-angular): display warning when using `resourcesOutputPath` with esbuild builder","State":"closed","Body":"\r\n\r\n`resourcesOutputPath` option is not supported when using the esbuild based builder.\r\n\r\nCloses #25658\r\n","Url":"https://github.com/angular/angular-cli/pull/25659","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): display warning when using `resourcesOutputPath` with esbuild builder\" (#25659)"},{"Id":"1845117432","IsPullRequest":true,"CreatedAt":"2023-08-10T12:45:37","Actor":"alan-agius4","Number":"25664","RawContent":null,"Title":"Merge remote-tracking branch 'universal/move-to-cli' into universal-merge-attempt","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/25664","RelatedDescription":"Open PR \"Merge remote-tracking branch 'universal/move-to-cli' into universal-merge-attempt\" (#25664)"},{"Id":"1844429397","IsPullRequest":false,"CreatedAt":"2023-08-10T08:37:47","Actor":"adsafawqew","Number":"25657","RawContent":null,"Title":"Exception when importing scss from a library - esbuild","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.1.8\n\n### Description\n\nlibrary is created via https://angular.io/guide/creating-libraries \r\n\r\nexception\r\n```\r\n  node_modules\\LIBRARY\\styles.scss 1:6  @import\r\n  src\\styles.scss 1:9                     root stylesheet [plugin angular-sass]\r\n\r\n    angular:styles/global:styles:2:8:\r\n      2 │ @import 'src/styles.scss';\r\n        ╵         ~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n\r\nLIBRARY/styles.scss\r\n\r\n```\r\n@use '@angular/material' as mat;\r\n@import '@angular/material/theming';\r\n\r\n@include mat-core();\r\n...\r\n```\r\n\r\nPROJECT/styles.scss\r\n\r\n```\r\n@import '../node_modules/LIBRARY/styles';\r\n...\r\n```\r\n\r\nwith \"builder\": \"@angular-devkit/build-angular:browser\" works as expected\r\nwith \"builder\": \"@angular-devkit/build-angular:browser-esbuild\" and version 16.1.8 works as expected\n\n### Minimal Reproduction\n\nsee description\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/flex-layout            14.0.0-beta.41\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25657","RelatedDescription":"Closed issue \"Exception when importing scss from a library - esbuild\" (#25657)"},{"Id":"1844680840","IsPullRequest":false,"CreatedAt":"2023-08-10T08:28:56","Actor":"atsjo","Number":"25662","RawContent":null,"Title":"esbuild builder fails building material scss in 16.2.0 with pnpm","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.1.8\n\n### Description\n\nesbuild builder fails building material scss in 16.2.0 with pnpm\n\n### Minimal Reproduction\n\n- create minimal project with cli 16.2.0 and esbuild builder using pnpm as package manager\r\n- add @angular/material\r\n- add \"@use '@angular/material';\" to styles.scss\r\n- build or serve\n\n### Exception or Error\n\n```text\n@use \"__NG_PACKAGE__;C:/Users/atles/source/repos/teve-no/task4s/node_modules/.pnpm/@angular+material@16.2.0_@angular+animations@16.2.0_@angular+cdk@16.2.0_@angular+common@16.2._bfcglieljnxvxwne53xl6murb4/node_modules/@angular/material/core/typography;@material/typography\" as mdc-typography;\r\n  node_modules\\.pnpm\\@angular+material@16.2.0_@angular+animations@16.2.0_@angular+cdk@16.2.0_@angular+common@16.2._bfcglieljnxvxwne53xl6murb4\\node_modules\\@angular\\material\\core\\typography\\_typography.scss 6:6  @forward\r\n  @angular\\_index.scss 12:1                                                                                                                                                                     \r\n                   @use\r\n  apps\\devtest\\src\\styles.scss 4:1                                                                                                                                                              \r\n                   root stylesheet [plugin angular-sass]\n```\n\n\n### Your Environment\n\n```text\n>  NX   Report complete - copy this into the issue template\r\n\r\n   Node   : 18.17.0\r\n   OS     : win32-x64\r\n   pnpm   : 8.6.12\r\n\r\n   nx                 : 16.6.0\r\n   @nx/js             : 16.6.0\r\n   @nx/jest           : 16.6.0\r\n   @nx/linter         : 16.6.0\r\n   @nx/workspace      : 16.6.0\r\n   @nx/angular        : 16.6.0\r\n   @nx/cypress        : 16.6.0\r\n   @nx/devkit         : 16.6.0\r\n   @nx/esbuild        : 16.6.0\r\n   @nx/eslint-plugin  : 16.6.0\r\n   @nrwl/tao          : 16.6.0\r\n   @nx/webpack        : 16.6.0\r\n   typescript         : 5.1.6\r\n   ---------------------------------------\r\n   Community plugins:\r\n   angular-calendar : 0.31.0\r\n   ---------------------------------------\r\n   Local workspace plugins:\r\n         @teve/integration\r\n         @teve/firebase\r\n         @teve/angular\r\n         @teve/common\r\n         @teve/task4s-all\r\n         @teve/task4s-web\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25662","RelatedDescription":"Closed issue \"esbuild builder fails building material scss in 16.2.0 with pnpm\" (#25662)"},{"Id":"1844660253","IsPullRequest":false,"CreatedAt":"2023-08-10T08:14:13","Actor":"wartab","Number":"25660","RawContent":null,"Title":"Error when importing @angular/material CSS files with esbuild after updating from @angular/cli 16.1 to 16.2 on Windows","State":"open","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.1.8\n\n### Description\n\nAfter updating Angular CLI to 16.2.0, our project using @angular/material does no longer build when using esbuild on Windows.\r\n\r\nI found that this commit is at least partially causing this:\r\nhttps://github.com/angular/angular-cli/commit/61a652d91274f4adce20182e630fe9963b4ceddd\r\n\r\n**Note that it doesn't break on Linux.**\n\n### Minimal Reproduction\n\nBe on Windows, pull the following repo, install dependencies, and then ng serve / ng build.\r\n\r\nhttps://github.com/wartab/angular-material-issue\r\n\r\n(This is not caused by the space in the path name, I have tested it with another directory and the issue remains)\n\n### Exception or Error\n\n```text\n> ng serve\r\n\r\nThe esbuild-based browser application builder ('browser-esbuild') is currently in developer preview and is not yet recommended for production use. For additional information, please see https://angular.io/guide/esbuild\r\nThe 'namedChunks' option is not used by this builder and will be ignored.\r\nThe 'vendorChunk' option is not used by this builder and will be ignored.\r\nX [ERROR] Invalid URL: Scheme not starting with alphabetic character\r\n  ╷\r\n1 │ @use \"__NG_PACKAGE__;C:/Users/Vincent\\ Lycoops/test-project/src/styles;@angular/material\" as mat;\r\n  │      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\styles\\material-custom.scss 1:6  @import\r\n  src\\styles\\styles.scss 1:9           root stylesheet [plugin angular-sass]\r\n\r\n    angular:styles/global:styles:1:8:\r\n      1 │ @import 'src/styles/styles.scss';\r\n        ╵         ~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n  ➜  Local:   http://localhost:4200/\r\nWatch mode enabled. Watching for file changes...\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\nWe weren't able to reproduce this on Linux machines, only Windows seems affected.","Url":"https://github.com/angular/angular-cli/issues/25660","RelatedDescription":"Open issue \"Error when importing @angular/material CSS files with esbuild after updating from @angular/cli 16.1 to 16.2 on Windows\" (#25660)"},{"Id":"1844161937","IsPullRequest":true,"CreatedAt":"2023-08-10T00:38:58","Actor":"dgp1130","Number":"25656","RawContent":null,"Title":"docs: release notes for the v16.2.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25656","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.0 release\" (#25656)"},{"Id":"1844056614","IsPullRequest":true,"CreatedAt":"2023-08-09T23:06:21","Actor":"dgp1130","Number":"25655","RawContent":null,"Title":"Bump version to \"v16.2.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25655","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.0\" with changelog.\" (#25655)"},{"Id":"1844019563","IsPullRequest":true,"CreatedAt":"2023-08-09T21:32:10","Actor":"dgp1130","Number":"25654","RawContent":null,"Title":"refactor: remove `-next` from peer dependency versions for 16.2.0 release","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25654","RelatedDescription":"Closed or merged PR \"refactor: remove `-next` from peer dependency versions for 16.2.0 release\" (#25654)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1850799891","IsPullRequest":false,"CreatedAt":"2023-08-15T02:01:07","Actor":"robmv","Number":"27651","RawContent":null,"Title":"bug(mat-progress-bar): Layout affected by inherited text-align CSS property","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a `mat-progress-bar` component is placed where it inherits a value of the `text-align` CSS property different than `start`, the progress bat is not properly drawn.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/kmvbnv\r\nSteps to reproduce:\r\n1. Compare the two `mat-progress-bar` on the example .\n\n### Expected Behavior\n\nBoth `mat-progress-bar` should look identical.\n\n### Actual Behavior\n\nThe top `mat-progress-bar`  isn't properly rendered. The bottom one has a workaround of adding `text-align: start` to the progress bar. The default CSS of `mat-progress-bar` should include that property in order to make it independent of the inherited value.\n\n### Environment\n\n- Angular: 16.2.0\r\n- CDK/Material: 16.2.0\r\n- Browser(s): Firefox, Chrome.\r\n- Operating System: Independent.\r\n","Url":"https://github.com/angular/components/issues/27651","RelatedDescription":"Open issue \"bug(mat-progress-bar): Layout affected by inherited text-align CSS property\" (#27651)"},{"Id":"1850723561","IsPullRequest":false,"CreatedAt":"2023-08-14T23:53:00","Actor":"D4v1dMoDz","Number":"27650","RawContent":null,"Title":"stepControl goes ahead even though the form is invalid","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI created this mini project to test out a structure I had in mind for a project. I created a mat-stepper and dynamically create the steps with an ngFor which iterates on a list of type 'Step' which contains a property of type FormGroup which I pass to the stepControl of the step. The problem is both statically and dynamically the stepControl doesn't work, because as I said before, the stepper continues despite the invalid form.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-m4gc7y\r\n\n\n### Expected Behavior\n\nThe step does not continue to the second step\n\n### Actual Behavior\n\nThe step continues to the second step despite the invalidity of the step\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27650","RelatedDescription":"Open issue \"stepControl goes ahead even though the form is invalid\" (#27650)"},{"Id":"1850578507","IsPullRequest":false,"CreatedAt":"2023-08-14T21:36:11","Actor":"atuzovic","Number":"27649","RawContent":null,"Title":"Migration from mat-contrast in Angular 14 to Angular 16 not possible","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nIn Angular 14, it was possible to do the following:\r\n\r\n`mat-contrast($primary-palette, $notice-bg-hue);\r\n`\r\n\r\n$notice-bg-hue is variable that holds hue value, e.g. 500.\r\nSo with mat-color and mat-contrast it was possible to get color value for both 500 and 500-contrast from same variable.\r\n\r\nHowever, with mat.get-color-from-palette it is not possible to do this if hue is stored within variable.\r\nI understand that you can type:\r\nmat.get-color-from-palette($primary-palette, 500);\r\nand\r\nmat.get-color-from-palette($primary-palette, '500-contrast');\r\n\r\nBut that is not real reproduction of previous mat-contrast implementation.\r\n\r\nIt would be logical to have something like mat.get-contrast-from-palette, but I can't seem to find any documentation on that.\r\n\r\nIs there a way to do this properly?\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nIt should be possible to get contrast color from hue value stored in variable.\r\nAdequate replacement for mat-contrast should exist.\n\n### Actual Behavior\n\nReplacement for mat-contrast is not available.\n\n### Environment\n\n- Angular: 16.2.0\r\n- CDK/Material: 16.2.0\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27649","RelatedDescription":"Open issue \"Migration from mat-contrast in Angular 14 to Angular 16 not possible\" (#27649)"},{"Id":"1850567634","IsPullRequest":false,"CreatedAt":"2023-08-14T21:28:29","Actor":"neerajabandi","Number":"27648","RawContent":null,"Title":"Not able to drop in the nested formarray || formGroup Array","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy form consist of city and state, so basically we can add multiple states and inside the each state I can add multiple cities, so every time I add the state, a city get added into it. this is json structure of my formGroup\r\nso if we see the below structure , each city & state is separated by connector. when I add a state, it gets added into the form array. by using CDK drag and drop I want drag and drop the items, but I am not able to drop in target array because I am not able to get the targeted index. Because it has nested formarray. however, I am able to get the index of dragged items, since I am passing the index of that but not able to get the dropped targeted array, the cdk is providing me the entire nested array which  I dont want, I just want target array. therefore, its not able to get the required array to place the dragged one.\r\n{\r\n    \"connector\": \"and\",\r\n    \"city\": [\r\n        {\r\n            \"connector\": \"and\",\r\n            \"city\": [\r\n                {\r\n                    \"connector\": \"and\",\r\n                    \"city\": [\r\n                        {\r\n                            \"connector\": \"and\",\r\n                            \"city\": [\r\n                                {\r\n                                    \"entityType\": \"name1\",\r\n                                    \"entityId\": \"\",\r\n                                    \"operator\": \"equals\",\r\n                                    \"value\": \"\",\r\n                                    \"connector\": \"and\"\r\n                                },\r\n                                {\r\n                                    \"entityType\": \"name2\",\r\n                                    \"entityId\": \"\",\r\n                                    \"operator\": \"equals\",\r\n                                    \"value\": \"\",\r\n                                    \"connector\": \"and\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"entityType\": \"name3\",\r\n                            \"entityId\": \"\",\r\n                            \"operator\": \"equals\",\r\n                            \"value\": \"\",\r\n                            \"connector\": \"and\"\r\n                        },\r\n                        {\r\n                            \"entityType\": \"name4\",\r\n                            \"entityId\": \"\",\r\n                            \"operator\": \"equals\",\r\n                            \"value\": \"\",\r\n                            \"connector\": \"and\"\r\n                        },\r\n                   // I want to drop it here\r\n                    ]\r\n                },\r\n                {\r\n                    \"entityType\": \"name5\",\r\n                    \"entityId\": \"\",\r\n                    \"operator\": \"equals\",\r\n                    \"value\": \"\",\r\n                    \"connector\": \"and\"\r\n                },\r\n                {\r\n                  \"entityType\": \"name5a\", // i want to drag this\r\n                    \"entityId\": \"\",\r\n                    \"operator\": \"equals\",\r\n                    \"value\": \"\",\r\n                    \"connector\": \"and\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"entityType\": \"name6\",\r\n            \"entityId\": \"\",\r\n            \"operator\": \"equals\",\r\n            \"value\": \"\",\r\n            \"connector\": \"and\"\r\n        }\r\n    ]\r\n}\r\n\r\nlets say when I want to \r\nCan someone help me with this, please?\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nthis is how I want the structure to be when I drop it in targeted nested array\r\n\r\n{\r\n    \"connector\": \"and\",\r\n    \"city\": [\r\n        {\r\n            \"connector\": \"and\",\r\n            \"city\": [\r\n                {\r\n                    \"connector\": \"and\",\r\n                    \"city\": [\r\n                        {\r\n                            \"connector\": \"and\",\r\n                            \"city\": [\r\n                                {\r\n                                    \"entityType\": \"name1\",\r\n                                    \"entityId\": \"\",\r\n                                    \"operator\": \"equals\",\r\n                                    \"value\": \"\",\r\n                                    \"connector\": \"and\"\r\n                                },\r\n                                {\r\n                                    \"entityType\": \"name2\",\r\n                                    \"entityId\": \"\",\r\n                                    \"operator\": \"equals\",\r\n                                    \"value\": \"\",\r\n                                    \"connector\": \"and\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"entityType\": \"name3\",\r\n                            \"entityId\": \"\",\r\n                            \"operator\": \"equals\",\r\n                            \"value\": \"\",\r\n                            \"connector\": \"and\"\r\n                        },\r\n                        {\r\n                            \"entityType\": \"name4\",\r\n                            \"entityId\": \"\",\r\n                            \"operator\": \"equals\",\r\n                            \"value\": \"\",\r\n                            \"connector\": \"and\"\r\n                        },\r\n                     {\r\n                  \"entityType\": \"name5a\", // i want to drag this\r\n                    \"entityId\": \"\",\r\n                    \"operator\": \"equals\",\r\n                    \"value\": \"\",\r\n                    \"connector\": \"and\"\r\n                }\r\n                    ]\r\n                },\r\n                {\r\n                    \"entityType\": \"name5\",\r\n                    \"entityId\": \"\",\r\n                    \"operator\": \"equals\",\r\n                    \"value\": \"\",\r\n                    \"connector\": \"and\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"entityType\": \"name6\",\r\n            \"entityId\": \"\",\r\n            \"operator\": \"equals\",\r\n            \"value\": \"\",\r\n            \"connector\": \"and\"\r\n        }\r\n    ]\r\n}\r\n\n\n### Actual Behavior\n\nits not dropping at all. I am getting error \"cannot read the length undefined\".\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27648","RelatedDescription":"Open issue \"Not able to drop in the nested formarray || formGroup Array\" (#27648)"},{"Id":"1850110842","IsPullRequest":true,"CreatedAt":"2023-08-14T16:16:28","Actor":"zarend","Number":"27647","RawContent":null,"Title":"fix(material/snackbar): use polite by default","State":"open","Body":"Change the default politeness level of the aria-live in snackbar component. Use \"polite\" by default.\r\n\r\nExisting behavior is to use \"assertive\" unless specified by developer. That conflicts with our documentation (#27562). It also does not align with how LiveAnnouncer does things.\r\n\r\nWith this commit applied, use \"polite\" unless otherwise specified by developers. This aligns with LiveAnnouncer.\r\n\r\nFix #27562","Url":"https://github.com/angular/components/pull/27647","RelatedDescription":"Open PR \"fix(material/snackbar): use polite by default\" (#27647)"},{"Id":"1847445461","IsPullRequest":true,"CreatedAt":"2023-08-14T13:29:55","Actor":"andrewseguin","Number":"27632","RawContent":null,"Title":"fix(multiple): remove unnecessary base classes","State":"closed","Body":"Removes base classes that were once used for sharing implementation with legacy components","Url":"https://github.com/angular/components/pull/27632","RelatedDescription":"Closed or merged PR \"fix(multiple): remove unnecessary base classes\" (#27632)"},{"Id":"1848605291","IsPullRequest":true,"CreatedAt":"2023-08-14T07:55:31","Actor":"Naaajii","Number":"27643","RawContent":null,"Title":"docs: update developer environment to setup project","State":"closed","Body":"closes #27514 #27366","Url":"https://github.com/angular/components/pull/27643","RelatedDescription":"Closed or merged PR \"docs: update developer environment to setup project\" (#27643)"},{"Id":"1849153065","IsPullRequest":true,"CreatedAt":"2023-08-14T07:16:38","Actor":"crisbeto","Number":"27646","RawContent":null,"Title":"fix(material/progress-bar): alignment affected by parent text-align","State":"open","Body":"Fixes that the progress bar's alignment was affected by the parent's element's `text-align`.\r\n\r\nFixes #27613.","Url":"https://github.com/angular/components/pull/27646","RelatedDescription":"Open PR \"fix(material/progress-bar): alignment affected by parent text-align\" (#27646)"},{"Id":"1848455983","IsPullRequest":true,"CreatedAt":"2023-08-14T05:45:33","Actor":"crisbeto","Number":"27640","RawContent":null,"Title":"fix(material/table): resolve local compilation issues","State":"closed","Body":"The Material table had a few places where it was importing a component's template as a string. This is incompatible with the upcoming local compilation mode in the compiler. These changes inline the templates instead.","Url":"https://github.com/angular/components/pull/27640","RelatedDescription":"Closed or merged PR \"fix(material/table): resolve local compilation issues\" (#27640)"},{"Id":"1848910705","IsPullRequest":false,"CreatedAt":"2023-08-14T03:05:58","Actor":"EswarBalasubramanian","Number":"27645","RawContent":null,"Title":"bug(Paginator): MatPaginatorIntl returns changes is undefined error","State":"open","Body":"### Description\r\n\r\nThe MatPaginatorIntl provided in our library component's module.ts file in useFactory returns a console error on loading a mat table as \"Cannot read properties of undefined (reading 'changes')\" in markup.\r\n\r\n### Possible Solutions\r\n\r\n1. The custom matPaginatorIntl should not return undefined for the changes property.\r\n2. The useFactory method should check for undefined before returning the custom matPaginatorIntl.\r\n\r\n\r\n### Thanks for your help!\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n    1. Install the library component.\r\n    2. Import the library component into your project.\r\n    3. Create a mat table.\r\n    4. Set the mat table's paginator intl to the custom matPaginatorIntl returned by the useFactory method.\r\n    5. Load the mat table\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe mat table should load without any errors.\r\n\r\n### Actual Behavior\r\n\r\nThe mat table loads with the following console error:\r\n\r\nCannot read properties of undefined (reading 'changes')\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.4\r\n- CDK/Material: 16.1.4\r\n- Node Version: 18.16.0\r\n- Browser(s): Google Chrome, Firefox, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 pro\r\n","Url":"https://github.com/angular/components/issues/27645","RelatedDescription":"Open issue \"bug(Paginator): MatPaginatorIntl returns changes is undefined error\" (#27645)"},{"Id":"1848631123","IsPullRequest":false,"CreatedAt":"2023-08-13T15:10:25","Actor":"ko1ebayev","Number":"27644","RawContent":null,"Title":"feat(FlexibleConnectedPositionStrategy): Handle custom containers for flexible connected position strategy","State":"open","Body":"### Feature Description\n\nI would like to be able to provide a custom viewport to calculate `FlexibleConnectedTo` positions. Now a custom overlay container can be provided by the user, but in tandem with the `FlexibleConnectedTo` it does not work correctly, because under the hood `_getOriginRect` works with real viewport and pushing element into the custom container frame is calculated relative to the real `document.clientWidth` and `document.clientHeight`\r\n\r\nFor example, lets imagine we have `div.custom-overlay-container` with `500x200px` dimensions and tooltip directive built with CDK. How I solve this problem now to achieve desired behavior:\r\n\r\n**Tooltip.directive.ts**\r\n```\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  OriginConnectionPosition,\r\n  Overlay,\r\n  OverlayConnectionPosition,\r\n  OverlayRef,\r\n} from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport {\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\n\r\nconst FIXED_WIDTH = 200;\r\nconst FIXED_HEIGHT = 500;\r\n\r\n@Directive({\r\n  selector: '[cdkTooltip]',\r\n  standalone: true,\r\n})\r\nexport class TooltipDirective implements OnInit {\r\n  @Input('cdkTooltip') content: string | TemplateRef<unknown> | null = '';\r\n\r\n  @Input() position: 'top' | 'right' | 'bottom' | 'left' = 'bottom';\r\n\r\n  private overlayRef: Maybe<OverlayRef>;\r\n\r\n  private tooltipHovered = false;\r\n\r\n  @HostListener('mouseenter')\r\n  show(): void {\r\n    if (!this.content) {\r\n      return;\r\n    }\r\n\r\n    this.overlayRef?.detach();\r\n\r\n    const tooltipPortal = new ComponentPortal(TooltipComponent);\r\n    if (this.overlayRef) {\r\n      const tooltipRef: ComponentRef<TooltipComponent> = this.overlayRef.attach(tooltipPortal);\r\n      const tooltipHostElement = tooltipRef.location.nativeElement as HTMLElement;\r\n      tooltipRef.setInput(typeof this.content === 'string' ? 'text' : 'template', this.content);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hide(): void {\r\n      this.overlayRef?.detach();\r\n  }\r\n\r\n  constructor(\r\n    private readonly overlay: Overlay,\r\n    private readonly elementRef: ElementRef<HTMLElement>,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createOverlay();\r\n  }\r\n\r\n  private createOverlay(): void {\r\n    const strategy = this.overlay.position().flexibleConnectedTo(this.elementRef).withPush(true);\r\n\r\n    // Fix for correct tooltip position calculations:\r\n    // the problem is in the `_getOriginRect` function, it calculates the `DomRect` object\r\n    // for tooltip host relative to the real viewport, but the application content area is limited\r\n    // by the size of the `div.custom-overlay-container`, so we need to override it for correct calculations\r\n    // CDK source where problem method defined - \r\n    (strategy as any)._getOriginRect = () => {\r\n      const customViewportContainer = document.querySelector<HTMLDivElement>('.custom-overlay-container')!;\r\n      return this.getRelativeBoundingClientRect(\r\n        this.elementRef.nativeElement,\r\n        customViewportContainer,\r\n      );\r\n    };\r\n\r\n    // Override position's `_document.documentElement` for correct position adjustment,\r\n    // which is used for pushing element inside viewport (`div.custom-overlay-container` in our case)\r\n    // https://github.com/angular/components/blob/b13c6aa194cf560a304213961ae28725f8d0a4e2/src/cdk/overlay/position/flexible-connected-position-strategy.ts#L1036\r\n    Object.defineProperty(strategy, '_document', {\r\n      writable: true,\r\n      value: {\r\n        documentElement: {\r\n          clientWidth: FIXED_WIDTH,\r\n          clientHeight: FIXED_HEIGHT,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy: strategy,\r\n    });\r\n\r\n    this.setOverlayPosition(this.overlayRef);\r\n  }\r\n\r\n  private setOverlayPosition(overlayRef: OverlayRef): void {\r\n    const pos = overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\r\n    pos.withPositions([\r\n      {\r\n        ...this.getOriginPosition(),\r\n        ...this.getOverlayPosition(),\r\n        panelClass: this.position,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  private getOverlayPosition(): OverlayConnectionPosition {\r\n    const position = this.position;\r\n\r\n    if (position === 'top') {\r\n      return { overlayX: 'center', overlayY: 'bottom' };\r\n    }\r\n\r\n    if (position === 'bottom') {\r\n      return { overlayX: 'center', overlayY: 'top' };\r\n    }\r\n\r\n    if (position === 'right') {\r\n      return { overlayX: 'start', overlayY: 'center' };\r\n    }\r\n\r\n    return { overlayX: 'end', overlayY: 'center' };\r\n  }\r\n\r\n  private getOriginPosition(): OriginConnectionPosition {\r\n    const position = this.position;\r\n\r\n    if (position === 'bottom' || position === 'top') {\r\n      return {\r\n        originX: 'center',\r\n        originY: position === 'top' ? 'top' : 'bottom',\r\n      };\r\n    }\r\n\r\n    if (position === 'right') {\r\n      return { originX: 'start', originY: 'center' };\r\n    }\r\n\r\n    return { originX: 'end', originY: 'center' };\r\n  }\r\n\r\n  private getRelativeBoundingClientRect(element: HTMLElement, relativeTo: HTMLElement): DOMRect {\r\n    const elemRect = element.getBoundingClientRect();\r\n    const containerRect = relativeTo.getBoundingClientRect();\r\n\r\n    return {\r\n      top: elemRect.top - containerRect.top,\r\n      bottom: elemRect.bottom - containerRect.top,\r\n      left: elemRect.left - containerRect.left,\r\n      right: elemRect.right - containerRect.left,\r\n      width: elemRect.width,\r\n      height: elemRect.height,\r\n      x: elemRect.left - containerRect.left,\r\n      y: elemRect.top - containerRect.top,\r\n    } as DOMRect;\r\n  }\r\n}\r\n\r\n```\r\n\r\n\n\n### Use Case\n\nthe problem that I propose to solve is to add the ability `FlexibleConnectedTo` position to be able to work strictly within the custom container, that is, when `withPush` is enabled - the elements should not go beyond the custom container","Url":"https://github.com/angular/components/issues/27644","RelatedDescription":"Open issue \"feat(FlexibleConnectedPositionStrategy): Handle custom containers for flexible connected position strategy\" (#27644)"},{"Id":"1848604545","IsPullRequest":true,"CreatedAt":"2023-08-13T13:53:45","Actor":"Naaajii","Number":"27642","RawContent":null,"Title":"fix(material/chips): placeholder visible on focus","State":"open","Body":"prior this commit the placeholder was only visible if the chips get focused, this commit makes sure that if we have any sort of data we show our input's placeholder\r\n\r\nfixes #26883","Url":"https://github.com/angular/components/pull/27642","RelatedDescription":"Open PR \"fix(material/chips): placeholder visible on focus\" (#27642)"},{"Id":"1848523349","IsPullRequest":true,"CreatedAt":"2023-08-13T10:15:25","Actor":"Naaajii","Number":"27641","RawContent":null,"Title":"fix(material/datepicker): add hideHeader","State":"open","Body":"adds a boolean Input for mat-calendar to hide header so the users dont have to pass empty component to remove it\r\n\r\nfixes #24337","Url":"https://github.com/angular/components/pull/27641","RelatedDescription":"Open PR \"fix(material/datepicker): add hideHeader\" (#27641)"},{"Id":"1847594744","IsPullRequest":true,"CreatedAt":"2023-08-13T07:12:05","Actor":"guiseek","Number":"27637","RawContent":null,"Title":"docs: fix broken example due to missing input module import","State":"closed","Body":"Error: mat-form-field must contain a MatFormFieldControl.","Url":"https://github.com/angular/components/pull/27637","RelatedDescription":"Closed or merged PR \"docs: fix broken example due to missing input module import\" (#27637)"},{"Id":"1847866791","IsPullRequest":true,"CreatedAt":"2023-08-12T08:48:40","Actor":"json-derulo","Number":"27639","RawContent":null,"Title":"docs: use correct syntax for getting color from palette","State":"open","Body":"Currently the Theming guide contains code which is supposed to get a color from a palette, that doesn't work due to usage of quotes. This PR fixes it. I also checked the following line, for `500-contrast` both quoted and unquoted syntax work, so nothing needs to be changed there.\r\n\r\nCloses #27630","Url":"https://github.com/angular/components/pull/27639","RelatedDescription":"Open PR \"docs: use correct syntax for getting color from palette\" (#27639)"},{"Id":"1847820755","IsPullRequest":true,"CreatedAt":"2023-08-12T07:20:15","Actor":"crisbeto","Number":"27638","RawContent":null,"Title":"fix(material/list): validation using wrong variable","State":"open","Body":"Fixes that the list was using the wrong variable to verify that it has the correct number of lines.\r\n\r\nFixes #27582.","Url":"https://github.com/angular/components/pull/27638","RelatedDescription":"Open PR \"fix(material/list): validation using wrong variable\" (#27638)"},{"Id":"1847594559","IsPullRequest":false,"CreatedAt":"2023-08-12T00:32:51","Actor":"yharaskrik","Number":"27636","RawContent":null,"Title":"bug(progress-bar): css vars do not work right with custom theme","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nwhen setting up a custom theme like this\r\n\r\n```scss\r\n@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n$dynamic-fundraiser-theme-primary-palette: (\r\n    50: var(--fundraiser-theme-primary-50),\r\n    100: var(--fundraiser-theme-primary-100),\r\n    200: var(--fundraiser-theme-primary-200),\r\n    300: var(--fundraiser-theme-primary-300),\r\n    400: var(--fundraiser-theme-primary-400),\r\n    500: var(--fundraiser-theme-primary-500),\r\n    600: var(--fundraiser-theme-primary-600),\r\n    700: var(--fundraiser-theme-primary-700),\r\n    800: var(--fundraiser-theme-primary-800),\r\n    900: var(--fundraiser-theme-primary-900),\r\n    A100: var(--fundraiser-theme-primary-A100),\r\n    A200: var(--fundraiser-theme-primary-A200),\r\n    A400: var(--fundraiser-theme-primary-A400),\r\n    A700: var(--fundraiser-theme-primary-A700),\r\n    contrast: (\r\n        50: var(--fundraiser-theme-primary-contrast-50),\r\n        100: var(--fundraiser-theme-primary-contrast-100),\r\n        200: var(--fundraiser-theme-primary-contrast-200),\r\n        300: var(--fundraiser-theme-primary-contrast-300),\r\n        400: var(--fundraiser-theme-primary-contrast-400),\r\n        500: var(--fundraiser-theme-primary-contrast-500),\r\n        600: var(--fundraiser-theme-primary-contrast-600),\r\n        700: var(--fundraiser-theme-primary-contrast-700),\r\n        800: var(--fundraiser-theme-primary-contrast-800),\r\n        900: var(--fundraiser-theme-primary-contrast-900),\r\n        A100: var(--fundraiser-theme-primary-contrast-A100),\r\n        A200: var(--fundraiser-theme-primary-contrast-A200),\r\n        A400: var(--fundraiser-theme-primary-contrast-A400),\r\n        A700: var(--fundraiser-theme-primary-contrast-A700),\r\n    ),\r\n);\r\n\r\n$dynamic-fundraiser-theme-secondary-palette: (\r\n    50: var(--fundraiser-theme-secondary-50),\r\n    100: var(--fundraiser-theme-secondary-100),\r\n    200: var(--fundraiser-theme-secondary-200),\r\n    300: var(--fundraiser-theme-secondary-300),\r\n    400: var(--fundraiser-theme-secondary-400),\r\n    500: var(--fundraiser-theme-secondary-500),\r\n    600: var(--fundraiser-theme-secondary-600),\r\n    700: var(--fundraiser-theme-secondary-700),\r\n    800: var(--fundraiser-theme-secondary-800),\r\n    900: var(--fundraiser-theme-secondary-900),\r\n    A100: var(--fundraiser-theme-secondary-A100),\r\n    A200: var(--fundraiser-theme-secondary-A200),\r\n    A400: var(--fundraiser-theme-secondary-A400),\r\n    A700: var(--fundraiser-theme-secondary-A700),\r\n    contrast: (\r\n        50: var(--fundraiser-theme-secondary-contrast-50),\r\n        100: var(--fundraiser-theme-secondary-contrast-100),\r\n        200: var(--fundraiser-theme-secondary-contrast-200),\r\n        300: var(--fundraiser-theme-secondary-contrast-300),\r\n        400: var(--fundraiser-theme-secondary-contrast-400),\r\n        500: var(--fundraiser-theme-secondary-contrast-500),\r\n        600: var(--fundraiser-theme-secondary-contrast-600),\r\n        700: var(--fundraiser-theme-secondary-contrast-700),\r\n        800: var(--fundraiser-theme-secondary-contrast-800),\r\n        900: var(--fundraiser-theme-secondary-contrast-900),\r\n        A100: var(--fundraiser-theme-secondary-contrast-A100),\r\n        A200: var(--fundraiser-theme-secondary-contrast-A200),\r\n        A400: var(--fundraiser-theme-secondary-contrast-A400),\r\n        A700: var(--fundraiser-theme-secondary-contrast-A700),\r\n    ),\r\n);\r\n\r\n$dynamic-fundraiser-theme-primary: mat.define-palette($dynamic-fundraiser-theme-primary-palette);\r\n$dynamic-fundraiser-theme-secondary: mat.define-palette($dynamic-fundraiser-theme-secondary-palette);\r\n$dynamic-fundraiser-theme-warn: mat.define-palette(mat.$red-palette);\r\n\r\n$fundraiser-theme: mat.define-light-theme(\r\n    (\r\n        color: (\r\n            primary: $dynamic-fundraiser-theme-primary,\r\n            accent: $dynamic-fundraiser-theme-secondary,\r\n            warn: $dynamic-fundraiser-theme-warn,\r\n        ),\r\n        typography: mat.define-typography-config(),\r\n        density: 0,\r\n    )\r\n);\r\n@include mat.core-color($fundraiser-theme);\r\n@include mat.core-theme($fundraiser-theme);\r\n@include mat.all-component-colors($fundraiser-theme);\r\n```\r\n\r\nCauses the progress bar to be the same color for the filled and buffer (track). It ends up use the `500` for the MDC components, this was working with the legacy components perfectly fine (setting the css vars the same way as before). The legacy components use `500` for filled and `100` for the buffer.\r\n\r\nWe think it is related to https://github.com/angular/components/blob/f7e3ae3bd1b86d5987df57bb06d350001c592931/src/material/core/tokens/m2/mdc/_linear-progress.scss#L30-L41 where that first condition is not hit because we are using a css variable, if I change `500` to just a hex value instead of a css var then it works right.\r\n\r\nReference:\r\nMe and Matthieu discussing it https://angular-team.slack.com/archives/C08M4JKNH/p1691790798360909\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-hrsxmj?file=src%2Fstyles.scss\r\nSteps to reproduce: See description\r\n\n\n### Expected Behavior\n\nShould be able to use CSS vars to define the different colors in a palette\n\n### Actual Behavior\n\nCSS vars cause the background color (in progress bar that is the buffer) to be set to the same value as the main color (`500` at least for the progress bar)\n\n### Environment\n\n- Angular: 16.1.8\r\n- CDK/Material: 16.1.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac","Url":"https://github.com/angular/components/issues/27636","RelatedDescription":"Open issue \"bug(progress-bar): css vars do not work right with custom theme\" (#27636)"},{"Id":"1847566048","IsPullRequest":true,"CreatedAt":"2023-08-11T23:53:39","Actor":"zarend","Number":"27635","RawContent":null,"Title":"docs(material/tree): fix keyboard issues with \"Load more flat tree\"","State":"open","Body":"Fix keyboard navigation issues with the \"Load more flat tree\" demo.\r\n\r\n - \"Load more\" button will respond to Enter or Space keys\r\n - Expanding and collapsing using keyboard shortcuts will trigger loading.","Url":"https://github.com/angular/components/pull/27635","RelatedDescription":"Open PR \"docs(material/tree): fix keyboard issues with \"Load more flat tree\"\" (#27635)"},{"Id":"1847513149","IsPullRequest":true,"CreatedAt":"2023-08-11T22:46:20","Actor":"zarend","Number":"27634","RawContent":null,"Title":"docs(material/tree): fix demos where keyboard navigates to hidden nodes","State":"open","Body":"Fix an issue in the tree demos where the keyboard can navigate to nodes that are not rendered to the screen. This happend because nodes where hidden using CSS and the TreeKeyManager did not know to skip over them. Fix this issue by disabled nodes that are hidden so that the TreeKeyManager will skip them.\r\n\r\nSteps to reproduce issue\r\n1. Go to CDK Flat tree (levelAccessor) demo\r\n2. Tab onto Fruit\r\n3. Press down the up\r\n4. (Expands the collapses)\r\n5. Press down\r\n6. (Expecting Vegetables to be focused but focus ring is still around Fruit)\r\n7. Press down five times.\r\n8. (Focus ring is around Fruit).\r\n\r\nWith this commit applied, above issue no longer reproduces.\r\n\r\nThis commit message is only for code reviewers and can be deleted when landing this change in main.","Url":"https://github.com/angular/components/pull/27634","RelatedDescription":"Open PR \"docs(material/tree): fix demos where keyboard navigates to hidden nodes\" (#27634)"},{"Id":"1847498828","IsPullRequest":true,"CreatedAt":"2023-08-11T22:26:03","Actor":"zarend","Number":"27633","RawContent":null,"Title":"fix(cdk/tree): CdkTreeNodeToggle responds to Enter and Space keys","State":"open","Body":"Implement keydown event for CdkTreeNodeToggle to perform that same action as click when receiving Enter or Space. Update examples to expand/collapse nodes when pressing enter.\r\n\r\nFix a11y issue in demos where pressing Enter when focused on a tree node seems to not perform any action. Use CdkTreeNodeToggle to perform the action of expanding or collaping the node.\r\n\r\nAlign with instructions in [APG Tree View\r\nPattern](https://www.w3.org/WAI/ARIA/apg/patterns/treeview/):\r\n\r\n\"Enter: activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\"","Url":"https://github.com/angular/components/pull/27633","RelatedDescription":"Open PR \"fix(cdk/tree): CdkTreeNodeToggle responds to Enter and Space keys\" (#27633)"},{"Id":"1847199629","IsPullRequest":false,"CreatedAt":"2023-08-11T21:28:54","Actor":"SuperiorJT","Number":"27627","RawContent":null,"Title":"bug(MatFormField): floating label position is incorrect for outlined form fields with prefix","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nForm fields with an outline appearance and a prefix have their labels positioned incorrectly when they are floating. The label floats to where it normally does when there is no prefix rather than directly above the initial position.\r\n\r\n<img width=\"334\" alt=\"image\" src=\"https://github.com/angular/components/assets/2702590/7bf151e5-74f5-4882-b941-516beb9288cf\">\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/lnoazx?file=src%2Fexample%2Fform-field-prefix-suffix-example.html\r\nSteps to reproduce:\r\n1. focus an outlined form field with a prefix\n\n### Expected Behavior\n\nI'm expecting the label to float directly above its starting position, with the new position left aligned with the starting position.\n\n### Actual Behavior\n\nThe label floats toward the start of the form field, aligning itself with the start of the prefix content rather than the input.\n\n### Environment\n\n- Angular: 16.1.7\r\n- CDK/Material: 16.1.6\r\n- Browser(s): Chrome 115.0.5790.170\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS 13.4.1\r\n","Url":"https://github.com/angular/components/issues/27627","RelatedDescription":"Closed issue \"bug(MatFormField): floating label position is incorrect for outlined form fields with prefix\" (#27627)"},{"Id":"1847424875","IsPullRequest":true,"CreatedAt":"2023-08-11T21:02:16","Actor":"zarend","Number":"27631","RawContent":null,"Title":"fix(cdk/tree): CdkTreeNodeToggle focuses node when toggling it","State":"open","Body":"Fix focus behavior of CdkTreeNodeToggle. When toggling the expanded or collapsed state of a node, focus that node. Fix issue where end user cannot tab into tree component when collaping the parent of the active node.\r\n\r\nBefore this commit is applied, there is a bug where end user cannot tab into the tree.\r\n\r\nReproduction steps\r\n1. Active a tree node\r\n2. (focus state renders)\r\n3. Using mouse, collapse parent of node from step 1.\r\n4. (tree node collapses)\r\n5. Press Tab, then shift + tab\r\n6. (item before tree is focused. Can tab into the tree)\r\n\r\nWith this commit applied, above issue is no longer expected to reproduce.\r\n\r\nThis commit message is only for reviewers of this PR and can be deleted when landing this change in main.","Url":"https://github.com/angular/components/pull/27631","RelatedDescription":"Open PR \"fix(cdk/tree): CdkTreeNodeToggle focuses node when toggling it\" (#27631)"},{"Id":"1847385787","IsPullRequest":false,"CreatedAt":"2023-08-11T20:25:39","Actor":"ppetro08","Number":"27630","RawContent":null,"Title":"docs-bug(theming): get-color-from-palette passes in '500' instead of 500 ","State":"open","Body":"### Documentation Feedback\n\nIn the Reading hues from palettes section in the first code snippet. \r\nIt sets the background using `mat.get-color-from-palette($my-palette, '500')` which will not apply the styles and it should be `mat.get-color-from-palette($my-palette, 500)`\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#reading-hues-from-palettes","Url":"https://github.com/angular/components/issues/27630","RelatedDescription":"Open issue \"docs-bug(theming): get-color-from-palette passes in '500' instead of 500 \" (#27630)"},{"Id":"1847382327","IsPullRequest":false,"CreatedAt":"2023-08-11T20:23:46","Actor":"zarend","Number":"27629","RawContent":null,"Title":"bug(materail/sidenav): MatDrawer uses deprecated FocusTrap","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatDrawer uses the deprecated FocusTrap.\r\n\r\nExpecting it to use ConfigurableFocusTrap instead.\n\n### Reproduction\n\ngit grep FocusTrap\n\n### Expected Behavior\n\nExpecting it to use ConfigurableFocusTrap instead.\n\n### Actual Behavior\n\nMatDrawer uses the deprecated FocusTrap.\r\n\n\n### Environment\n\nn/a","Url":"https://github.com/angular/components/issues/27629","RelatedDescription":"Open issue \"bug(materail/sidenav): MatDrawer uses deprecated FocusTrap\" (#27629)"},{"Id":"1845924630","IsPullRequest":false,"CreatedAt":"2023-08-11T20:20:29","Actor":"drc-nloftsgard","Number":"27623","RawContent":null,"Title":"bug(sidenav/drawer/focustrap): over/push mode results in Serious a11y issue","State":"closed","Body":"### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using mat-sidenav or mat-drawer with mode `over` or `push` (and might need `backdrop=true`) there is a div element:\r\n`<div class=\"cdk-visually-hidden cdk-focus-trap-anchor\" aria-hidden=\"true\"></div>`\r\nwhich gets `tabindex=\"0\"` added to it when the sidenav/drawer is opened. This causes an a11y finding (see below) because `aria-hidden=\"true\"` elements should not be focusable.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://stackblitz.com/edit/e4bsuu?file=package.json](https://stackblitz.com/edit/e4bsuu?file=package.json)\r\nStackBlitz was forked from the second example here: [SideNav Examples](https://material.angular.io/components/sidenav/examples)\r\nSteps to reproduce:\r\n1. Select Sidenav mode: Over, Has backdrop\r\n2. Click Toggle drawer button\r\n3. Via axe DevTools run a new scan of the page\r\n \r\n\r\n\r\n### Expected Behavior\r\n\r\nNo a11y isssues\r\n\r\n### Actual Behavior\r\n\r\n2 instances of a 'Serious' issue found via Axe: 'ARIA hidden element must not be focusable or contain focusable elements'\r\n\r\nRelated to the focus trap elements(s):\r\n`<div class=\"cdk-visually-hidden cdk-focus-trap-anchor\" aria-hidden=\"true\" tabindex=\"0\"></div>`\r\n\r\nReference doc: [Axe 4.7 aria-hidden-focus](https://dequeuniversity.com/rules/axe/4.7/aria-hidden-focus?application=AxeChrome) contains examples and possible solutions.\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/27623","RelatedDescription":"Closed issue \"bug(sidenav/drawer/focustrap): over/push mode results in Serious a11y issue\" (#27623)"},{"Id":"1847319650","IsPullRequest":false,"CreatedAt":"2023-08-11T19:26:57","Actor":"amysorto","Number":"27628","RawContent":null,"Title":"bug(form-field): Prefix and suffix text color mismatched from spec","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCurrently the text appears black instead of the gray color in the spec.\n\n### Reproduction\n\nSpec: https://m2.material.io/components/text-fields\r\nPrefix and suffix demo: https://material.angular.io/components/form-field/examples#form-field-prefix-suffix.\n\n### Expected Behavior\n\nText is gray\n\n### Actual Behavior\n\nText is black\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27628","RelatedDescription":"Open issue \"bug(form-field): Prefix and suffix text color mismatched from spec\" (#27628)"},{"Id":"1847109824","IsPullRequest":true,"CreatedAt":"2023-08-11T16:26:59","Actor":"zarend","Number":"27626","RawContent":null,"Title":"feat(cdk/tree): Add levelAccessor and childrenAccessor to CDK tree API","State":"open","Body":"This is currently unimplemented and will allow a more reactive API for the tree.\r\n\r\nfeat(cdk/tree): wording changes\r\n\r\nfeat(cdk/tree): wording changes\r\n\r\nfeat(cdk/tree): make getLevel getAccessor private\r\n\r\nfeat(cdk/tree): make nullable properties optional\r\n\r\nfeat(cdk/tree): fix lint issues\r\n\r\nfeat(cdk/tree): add TreeControl methods into the CdkTree itself\r\n\r\nfeat(cdk/tree): add missing tree errors\r\n\r\nfeat(cdk/tree): make nullable properties optional\r\n\r\nfeat(cdk/tree): fix build errors.\r\n\r\nfeat(cdk/tree): update tree API goldens\r\n\r\nfeat(cdk/tree): fix lint errors\r\n\r\nfeat(cdk/tree): fix tests\r\n\r\nfeat(cdk/tree): fix final lint and golden errors\r\n\r\nfeat(cdk/tree): fix comments and improve readability\r\n\r\nfeat(cdk/tree): remove ! assertion\r\n\r\nfeat(cdk/tree): implement the various expansion-related methods\r\n\r\nfix(cdk/tree): fix merge conflict errors\r\n\r\nfix(cdk/tree): remove TODOs and fix `isExpanded`\r\n\r\nfix(cdk/tree): fix nested nodes not rendering children\r\n\r\nfix(cdk/tree): remove childrenAccessor?. usage\r\n\r\nfix(cdk/tree): address comments from review\r\n\r\nfeat(cdk/tree): add tests for the new cdk/tree APIs (#24500)\r\n\r\n* feat(cdk/tree): complete migrated tests\r\n\r\n* feat(cdk/tree): fix tests\r\n\r\n* fix(cdk/tree): add docs to _getAllDescendants\r\n\r\n* fix(cdk/tree): add explanatory comment for tree-redesign.spec.ts\r\n\r\nfeat(cdk/tree): improve aria attributes (#24658)\r\n\r\n* feat(cdk/tree): add demos to the dev-app\r\n\r\n* feat(cdk/tree): add flat-node with levelAccessor example to the demo page\r\n\r\n* feat(cdk/tree): move new demos to cdk-tree-redesign dir\r\n\r\n* fix(cdk/tree): fix unused error\r\n\r\n* feat(cdk/tree): move demos back to their own dirs\r\n\r\n* fix(cdk/tree): address review comments\r\n\r\n* feat(cdk/tree): use _getDirectChildren method in nested node\r\n\r\n* feat(cdk/tree): add cache of nodes to the tree\r\n\r\n* fix(cdk/tree): fix cherry-pick errors\r\n\r\n* feat(cdk/tree): add translation layer for nested nodes using levelAccessor\r\n\r\n* feat(cdk/tree): add example with nested nodes & level accessor\r\n\r\n* feat(cdk/tree): fix examples\r\n\r\n* feat(cdk/tree): add example with flat nodes & childrenAccessor\r\n\r\n* feat(cdk/tree): flatten data that uses childrenAccessor\r\n\r\n* fix(cdk/tree): fix padding not showing for `childrenAccessor` trees\r\n\r\n* fix(cdk/tree): fix flat tree demo\r\n\r\n* fix(cdk/tree): convert generator function to return a regular array in demo\r\n\r\n* fix(cdk/tree): fix build error\r\n\r\n* feat(cdk/tree): update API goldens\r\n\r\n* fix(cdk/tree): fix some failing tests, one remaining\r\n\r\n* fix(cdk/tree): fix test errors and children conversion; also make `renderNodeChanges` private\r\n\r\n* fix(cdk/tree): update api goldens\r\n\r\n* fix(cdk/tree): fix lint errors\r\n\r\n* feat(cdk/tree): deprecate the TreeControl APIs\r\n\r\n* fix(cdk/tree): make the toggle button not focusable by keyboard\r\n\r\n* fix(cdk/tree): add aria attributes for the flat nodes\r\n\r\n* feat(cdk/tree): maintain a cache of parents and node groups\r\n\r\n* feat(cdk/tree): implement aria-posinset and aria-setsize\r\n\r\n* feat(cdk/tree): update goldens, add descriptions to methods\r\n\r\n* feat(cdk/tree): fix lint errors\r\n\r\n* fix(cdk/tree): fix build errors\r\n\r\n* fix(cdk/tree): change explicit breaking-change version to PLACEHOLDER\r\n\r\n* fix(cdk/tree): also update flat level accessor example\r\n\r\n* fix(cdk/tree): update API goldens\r\n\r\n* fix(cdk/tree): update API goldens\r\n\r\n* feat(cdk/tree): add a translation function to the tree to get children\r\n\r\n* fix(cdk/tree): lint\r\n\r\nfeat(cdk/a11y): add a TreeKeyManager, with next/prev implemented (#24659)\r\n\r\n* feat(cdk/a11y): add API for TreeKeyManager\r\n\r\n* feat(cdk/a11y): add activeItem into the TreeKeyManager\r\n\r\n* feat(cdk/a11y): store the options into the key manager\r\n\r\n* feat(cdk/a11y): add _getItems translation layer\r\n\r\n* feat(cdk/a11y): add skeleton for keydown actions\r\n\r\n* feat(cdk/a11y): implement activate item\r\n\r\n* feat(cdk/a11y): implement various focus methods\r\n\r\n* feat(cdk/a11y): implement onClick, remove lint disables\r\n\r\n* feat(cdk/a11y): partial spec migration, fixed some bugs in impl\r\n\r\n* fix(cdk/tree): fix lint errors\r\n\r\n* fix(cdk/a11y): fix lint errors pt2\r\n\r\nfeat(cdk/tree): implement expansion methods for TreeKeyManager (#26586)\r\n\r\n* feat(cdk/a11y): implement expansion methods\r\n\r\n* feat(cdk/a11y): add tests and fixes for expand/collapse interactions\r\n\r\n* feat(cdk/a11y): actually fix build\r\n\r\n* feat(cdk/a11y): use skipPredicate instead of disabled\r\n\r\nfeat(cdk/tree): implement typeahead for TreeKeyManager (#27202)\r\n\r\n* feat(cdk/a11y): implement typeahead (needs test)\r\n\r\n* feat(cdk/a11y): handle typeahead in keydown handler\r\n\r\n* feat(cdk/a11y): fix typeahead build errors\r\n\r\n* feat(cdk/a11y): add tests for typeahead\r\n\r\n* feat(cdk/a11y): add TreeKeyManager to public a11y API\r\n\r\n* fix(cdk/a11y): tree key manager build errors/weird merge\r\n\r\n* feat(cdk/a11y): fix api goldens\r\n\r\n* fix(cdk/a11y): fix tests\r\n\r\nfeat(cdk/tree): integrate TreeKeyManager with cdk/tree (#27285)\r\n\r\n* feat(cdk/tree): add cache of nodes to the tree\r\n\r\n* feat(cdk/tree): bug fixes for tree and key manager\r\n\r\n* feat(cdk/tree): flatten data that uses childrenAccessor\r\n\r\n* feat(cdk/tree): add examples, fix bugs\r\n\r\n* fix(cdk/tree): fix build errors\r\n\r\n* fix(cdk/tree): restoring incorrectly removed code\r\n\r\n* fix(cdk/tree): fix minor typo\r\n\r\n* fix(cdk/tree): fix lint\r\n\r\n* feat(cdk/tree): add additional tests, fix bug with aria-posinset\r\n\r\n* fix(cdk/tree): update goldens, remove fdescribe\r\n\r\n* fix(cdk/tree): dev app compilation\r\n\r\n* fix(cdk/tree): fix tests\r\n\r\n* fix(material/tree): update tests & API\r\n\r\n* fix(material/tree): api goldens\r\n\r\n* feat(cdk/tree): add `isExpandable` parameter to NestedTreeControl, fix some tests\r\n\r\n* fix(cdk/tree): update api goldens\r\n\r\n* fix(material/tree): lint\r\n\r\n* fix(cdk/tree): update API goldens\r\n\r\nfeat(cdk/tree): general bug fixes, error handling, updating examples & docs (#27305)\r\n\r\n* feat(cdk/a11y): add some missing focus functions to TreeKeyManager, fix tests\r\n\r\n* feat(cdk/tree): report an error when the API consumer tries to expand a non-expandable node.\r\n\r\n* fix(cdk/tree): set node role through component host\r\n\r\n* fix(material/tree): fix duplicate keydown events\r\n\r\n* fix(cdk/tree): make keyboard behaviour consistent across all configurations\r\n\r\nThis also removes the need for specifying `nodeType` manually.\r\n\r\n* fix(cdk/tree): remove unnecessary change detection\r\n\r\n* fix(cdk/tree): update API goldens\r\n\r\n* refactor(cdk/tree): organize imports\r\n\r\n* fix(cdk/a11y): update API goldens\r\n\r\n* fix(cdk/tree): remove `_preFlattenedNodes`\r\n\r\n* fix(cdk/tree): lint\r\n\r\n* fix(cdk/tree): use `findIndex` instead of `indexOf`; fixes inconsistent aria-posinset\r\n\r\n* feat(cdk/tree): add complex redux-like demo\r\n\r\n* fix(cdk/tree): refactor rendering pipeline\r\n\r\nThis also refactors the parent/level/group data processing in order to make it significantly more consistent in all tree configurations.\r\n\r\n* feat(cdk/tree): update tree documentation\r\n\r\n* feat(cdk/a11y): update docs for `TreeKeyManager`.\r\n\r\n* fix(cdk/tree): update API goldens, fix lint errors\r\n\r\n* fix(cdk/tree): empty commit; retry ci actions","Url":"https://github.com/angular/components/pull/27626","RelatedDescription":"Open PR \"feat(cdk/tree): Add levelAccessor and childrenAccessor to CDK tree API\" (#27626)"},{"Id":"1846854260","IsPullRequest":false,"CreatedAt":"2023-08-11T13:44:53","Actor":"lee-cooper","Number":"27625","RawContent":null,"Title":"bug(Datepicker): Tabbing from Input To Datepicker Button Triggers Error Validation","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nPremature error validation occurs when tabbing from the form field text entry section to the datepicker button. From an A11Y and usability perspective, this should not occur until the user has left the containing form field and button since the datepicker button is a valid way of filling out the form field.\r\n\r\n### Reproduction\r\n\r\n**StackBlitz link:** https://components-issue-zzukvj.stackblitz.io\r\n**Steps to reproduce:**\r\n1. Add Datepicker to app from angular material code example\r\n2. Add required validator to form control\r\n3. Tab from the form field section to the datepicker button\r\n4. Error shows, despite not having left the control\r\n\r\n\r\n### Expected Behavior\r\n\r\nRequired validation does not occur when tabbing from the text entry section of the datepicker to the calendar pop-out button. \r\n\r\nIt should only occur when tabbing out of the containing form field and button.\r\n\r\n### Actual Behavior\r\n\r\nRequired error validation occurs when tabbing from the text entry section of the datepicker to the open calendar button\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.4\r\n- CDK/Material: 15.2.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, Windows\r\n","Url":"https://github.com/angular/components/issues/27625","RelatedDescription":"Open issue \"bug(Datepicker): Tabbing from Input To Datepicker Button Triggers Error Validation\" (#27625)"},{"Id":"1845392956","IsPullRequest":true,"CreatedAt":"2023-08-11T11:29:24","Actor":"andrewseguin","Number":"27622","RawContent":null,"Title":"fix(material): remove legacy components","State":"closed","Body":"BREAKING CHANGE:\r\nLegacy components that have an MDC-based version are no longer provided.","Url":"https://github.com/angular/components/pull/27622","RelatedDescription":"Closed or merged PR \"fix(material): remove legacy components\" (#27622)"},{"Id":"1845325860","IsPullRequest":false,"CreatedAt":"2023-08-10T14:38:37","Actor":"HammamBM","Number":"27621","RawContent":null,"Title":"docs-bug(MatTable): More information about Multiple row templates","State":"open","Body":"### Documentation Feedback\n\nI feel like multiple row templates are a very important feature in a lot of big projects, but there is very little information about this and almost none from official sources. It would be a good idea to include a couple of examples in the docs. Tahnks in advance.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/table/overview#multiple-row-templates","Url":"https://github.com/angular/components/issues/27621","RelatedDescription":"Open issue \"docs-bug(MatTable): More information about Multiple row templates\" (#27621)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-08-15T03:30:02.7457105Z","RunDurationInMilliseconds":1849}