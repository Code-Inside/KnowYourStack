{"Data":{"Angular-Issues":{"Issues":[{"Id":"2751618613","IsPullRequest":true,"CreatedAt":"2024-12-19T23:41:19","Actor":"JeanMeche","Number":"59252","RawContent":null,"Title":"docs(docs-infra): remove unused examples","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59252","RelatedDescription":"Open PR \"docs(docs-infra): remove unused examples\" (#59252)"},{"Id":"2751608381","IsPullRequest":true,"CreatedAt":"2024-12-19T23:29:43","Actor":"JeanMeche","Number":"59251","RawContent":null,"Title":"refactor(animations): deprecate `BrowserAnimationsModule`","State":"open","Body":"The official recommendation is now to use one of the following provider functions :\r\n* `provideAnimations`,\r\n* `provideAnimationsAsync`\r\n* `provideNoopAnimations` Depending on the wanted feature.\r\n\r\nDEPRECATE: `BrowserAnimationsModule` & `BrowserAnimationsModuleConfig`\r\n","Url":"https://github.com/angular/angular/pull/59251","RelatedDescription":"Open PR \"refactor(animations): deprecate `BrowserAnimationsModule`\" (#59251)"},{"Id":"2751440471","IsPullRequest":false,"CreatedAt":"2024-12-19T21:12:02","Actor":"Will-at-FreedomDev","Number":"59250","RawContent":null,"Title":"Add support for overriding built-in formats for DatePipe through the use of injection","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n`CommonModule`?\n\n### Description\n\nDifferent clients of ours have different ways that they prefer date formats, however it is not trivial to come up with a simple way to standardize on a custom format outside of the pre-defined options. We would like to always be able to use a predefined option like `shortDate` throughout our projects for any client where we want to show a \"short date\" at a global location with minimal effort.\n\nJust as we can do with various Angular Material components and services, I'd like the ability to both change and extend the \"Pre-defined format options\" of the DatePipe using injection. Found here: https://angular.dev/api/common/DatePipe?tab=usage-notes which includes, `short`, `long`, `mediumDate`, etc.\n\nExisting similar example with the `MatSnackbar`:\n```ts\nproviders: [\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: {\n        horizontalPosition: \"right\",\n        verticalPosition: \"bottom\",\n      },\n    },\n]\n```\n\n### Proposed solution\n\nI think it makes a lot of sense to extend the the `DATE_PIPE_DEFAULT_OPTIONS` to support this: https://angular.dev/api/common/DATE_PIPE_DEFAULT_OPTIONS?tab=usage-notes\n\n```ts\n// configured in app.module.ts\nproviders: [\n  {\n    provide: DATE_PIPE_DEFAULT_OPTIONS,\n    useValue: {\n      formats: {\n        shortDate: \"MM/dd/yyyy\", // overrides the built-in \"short\" format which is \"M/d/yy\"\n        hour12: \"hh a\",          // adds a custom format option \"by string token\" for a 0-12 hour\n        hour24: \"HH\",            // adds another example of a custom hour format but for a 0-23 hour\n      }\n    }\n  }\n]\n```\n\n```html\n<!-- implementation -->\nThis is my custom short date: {{ myDate | date: \"shortDate\" }} <br>\nThis is my custom 12 hour format: {{ myDate | date: \"hour12\" }} <br>\nThis is my custom 24 hour format: {{ myDate | date: \"hour24\" }}\n```\n\n### Alternatives considered\n\n\n\nAlternatives:\n1. Create a constant and export the constant into every component that will use the date pipe.\n2. Create a pipe and use the custom pipe rather than using the built-in Angular pipe.\n3. Always use the custom format for every implementation of the date pipe but then run risk of inconsistencies.\n\nNone of these alternatives are \"clean\" as they require the developer to consider either the tool they are using or what variation of how the tool must be used at an **implementation level**. By having a global location (injection via `DATE_PIPE_FORMATS` for example) this issue is addressed cleanly and promotes consistency throughout the project without having to compromise development efficiency.\n\nFor the majority of work that we do (we think it is a great philosophy), we prefer to use as much as the built-in standards, documentation, and tools that the frameworks that we use provide and that is a huge selling point of Angular as a framework.\n\nI tried to do some research into this topic and maybe there are alternatives that already exist for this purpose, but my search may not have cast a wide enough net to find them. I'd love to hear them if you have them.","Url":"https://github.com/angular/angular/issues/59250","RelatedDescription":"Open issue \"Add support for overriding built-in formats for DatePipe through the use of injection\" (#59250)"},{"Id":"2750912893","IsPullRequest":false,"CreatedAt":"2024-12-19T19:07:17","Actor":"ky-one","Number":"59247","RawContent":null,"Title":"TS-993004: Unable to import symbol NgIf","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading to latest version I get this error:\n\n```\nX [ERROR] TS-993004: Unable to import symbol NgIf.\n  The symbol is not exported from .../node_modules/@angular/common/index.d.ts (module '@angular/common'). [plugin angular-compiler]\n\n    src/app/components/user/profile/profile.component.ngtypecheck.ts:0:0:\n      0 â”‚\n        â•µ ^\n\n  The symbol is declared here.\n\n    node_modules/@angular/common/index.d.ts:2291:0:\n      2291 â”‚ export declare class NgIf<T = unknown> {\n           â•µ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\nThe component look like this:\n\n``` html\n<m-table *ngIf=\"user\" very basic notCelled>\n    <tr>\n        <th class=\"collapsing\">Benutzer</th>\n        <td>{{ user.name }} ({{ user.displayName }})</td>\n    </tr>\n    <tr>\n        <th>Passwort</th>\n        <td>\n            <m-button primary (click)=\"showChangePassword()\">Ã¤ndern</m-button>\n        </td>\n    </tr>\n    <tr>\n        <th>E-Mail</th>\n        <td>\n            {{ user.email }}\n            <m-button disabled>Ã¤ndern</m-button>\n        </td>\n    </tr>\n    <tr>\n        <th>Rechte</th>\n        <td>\n            <div *ngFor=\"let role of user.roles\">{{ role }}</div>\n        </td>\n    </tr>\n</m-table>\n\n<m-loader *ngIf=\"!user\" />\n\n```\n\n``` ts\nimport { NgForOf, NgIf } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, UserModel } from '@ky/authentication';\nimport { ButtonComponent, LoaderComponent, TableComponent } from '@mantic-ui/angular';\n\n@Component({\n    selector: 'app-profile',\n    standalone: true,\n    imports: [NgIf, NgForOf, TableComponent, ButtonComponent, LoaderComponent],\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n    protected user?: UserModel;\n    protected isChangePasswordVisible = false;\n\n    public constructor(\n        private readonly authenticationService: AuthenticationService\n    ) { }\n\n    public ngOnInit(): void {\n        this.authenticationService.getUser().subscribe(user => this.user = user);\n    }\n\n    protected showChangePassword(): void {\n        this.isChangePasswordVisible = true;\n    }\n\n    protected hideChangePassword(): void {\n        this.isChangePasswordVisible = false;\n    }\n}\n\n```\n\nThe code is unchanged. I only upgraded from angular 19.0.0 to latest version\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nX [ERROR] TS-993004: Unable to import symbol NgIf.\n  The symbol is not exported from .../node_modules/@angular/common/index.d.ts (module '@angular/common'). [plugin angular-compiler]\n\n    src/app/components/user/profile/profile.component.ngtypecheck.ts:0:0:\n      0 â”‚\n        â•µ ^\n\n  The symbol is declared here.\n\n    node_modules/@angular/common/index.d.ts:2291:0:\n      2291 â”‚ export declare class NgIf<T = unknown> {\n           â•µ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.14.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59247","RelatedDescription":"Closed issue \"TS-993004: Unable to import symbol NgIf\" (#59247)"},{"Id":"2750979116","IsPullRequest":true,"CreatedAt":"2024-12-19T17:11:55","Actor":"angular-robot","Number":"59249","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `0850ed7` -> `2dba82d` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `d300539` -> `e4435cc` |\n| angular/dev-infra | action | digest | `289aa64` -> `e8ee8c5` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59249","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#59249)"},{"Id":"2750932221","IsPullRequest":false,"CreatedAt":"2024-12-19T16:54:35","Actor":"blogcraft","Number":"59248","RawContent":null,"Title":"output-migration Removes types from output","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen running a migration `ng generate @angular/core:output-migration`\n\nMy @outputs when migrating to output lose the type causing errors everywhere.\n\n![Image](https://github.com/user-attachments/assets/47caa339-7178-44f0-a313-2b3f8c005554)\n\nInstead of turning this\n`@Output() EventMoveMovimientos: EventEmitter<resupuesta> = new EventEmitter();`\ninto\n`readonly EventMoveMovimientos = output();`\n \nIt should be into this\n`readonly EventMoveMovimientos = output<resupuesta>();`\n\n\nBy the way the event emit is this:\n```\nthis.EventMoveMovimientos.emit({\n  idInstrumento: nemo.idNemotecnico,\n  idCuenta: nemo.idCuenta,\n});\n```\n\nAnd the interface is this:\n```\nexport interface resupuesta {\n  idInstrumento: number;\n  idCuenta: number;\n}\n```\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nX [ERROR] TS2345: Argument of type '{ idInstrumento: any; idCuenta: any; }' is not assignable to parameter of type 'void'. [plugin angular-compiler]\n\n    src/app/modules/shared-module/tabla-instrumento/forward/forward.component.ts:97:35:\n      97 â”‚     this.EventMoveMovimientos.emit({\n         â•µ                                    ^\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 20.13.1\nPackage Manager: npm 10.5.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/flex-layout            15.0.0-beta.42\n@angular/material               19.0.4\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.5.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59248","RelatedDescription":"Open issue \"output-migration Removes types from output\" (#59248)"},{"Id":"2750800110","IsPullRequest":true,"CreatedAt":"2024-12-19T16:17:52","Actor":"angular-robot","Number":"59246","RawContent":null,"Title":"build: update cross-repo angular dependencies - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular-devkit/architect-cli](https://redirect.github.com/angular/angular-cli) | devDependencies | patch | [`0.1901.0-next.0` -> `0.1901.0-next.2`](https://renovatebot.com/diffs/npm/@angular-devkit%2farchitect-cli/0.1901.0-next.0/0.1901.0-next.2) |\n| [@angular-devkit/build-angular](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular-devkit%2fbuild-angular/19.1.0-next.0/19.1.0-next.2) |\n| [@angular-devkit/core](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular-devkit%2fcore/19.1.0-next.0/19.1.0-next.2) |\n| [@angular-devkit/schematics](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular-devkit%2fschematics/19.1.0-next.0/19.1.0-next.2) |\n| [@angular/build](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fbuild/19.1.0-next.0/19.1.0-next.2) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `29bf247` -> `0850ed7` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.1.0-next.0/19.1.0-next.3) |\n| [@angular/cli](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcli/19.1.0-next.0/19.1.0-next.2) |\n| [@angular/material](https://redirect.github.com/angular/components) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.1.0-next.0/19.1.0-next.3) |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `abf82c6` -> `d300539` |\n| [@angular/ssr](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fssr/19.1.0-next.0/19.1.0-next.2) |\n| [@schematics/angular](https://redirect.github.com/angular/angular-cli) | dependencies | patch | [`19.1.0-next.0` -> `19.1.0-next.2`](https://renovatebot.com/diffs/npm/@schematics%2fangular/19.1.0-next.0/19.1.0-next.2) |\n| angular/dev-infra | action | digest | `40b2cbd` -> `289aa64` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular-cli (@&#8203;angular-devkit/architect-cli)</summary>\n\n### [`v0.1901.0-next.2`](https://redirect.github.com/angular/angular-cli/compare/937b3f53b26c811c6fa0787c2659eed5273db49b...43fe34bd2f17c11e6c7fd0eddc29765c8efe14d4)\n\n[Compare Source](https://redirect.github.com/angular/angular-cli/compare/937b3f53b26c811c6fa0787c2659eed5273db49b...43fe34bd2f17c11e6c7fd0eddc29765c8efe14d4)\n\n### [`v0.1901.0-next.1`](https://redirect.github.com/angular/angular-cli/compare/ac614986d506cfa6c7d9b53a6bf1e346312c9942...937b3f53b26c811c6fa0787c2659eed5273db49b)\n\n[Compare Source](https://redirect.github.com/angular/angular-cli/compare/ac614986d506cfa6c7d9b53a6bf1e346312c9942...937b3f53b26c811c6fa0787c2659eed5273db49b)\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.1.0-next.3`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1910-next3-cotton-curtains-2024-12-18)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.2...19.1.0-next.3)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [62a672af0d](https://redirect.github.com/angular/components/commit/62a672af0d6cb2195633a1cbf6c39472104767f9) | feat | **dialog:** expose cdk dialog docs ([#&#8203;1144](https://redirect.github.com/angular/components/pull/1144)) |\n| [a0a16fc70e](https://redirect.github.com/angular/components/commit/a0a16fc70e1fed7fbb9177c83cf3f670022a321a) | feat | **menu:** expose cdk menu docs ([#&#8203;1142](https://redirect.github.com/angular/components/pull/1142)) |\n| [a141c22e99](https://redirect.github.com/angular/components/commit/a141c22e99467174225f74b6ccac730df92c46c8) | fix | **drag-drop:** resolve projected handles |\n| [454d9f9c09](https://redirect.github.com/angular/components/commit/454d9f9c0937e9e70d018be13a7f452bec776620) | fix | **drag-drop:** stop dragging on touchcancel ([#&#8203;30184](https://redirect.github.com/angular/components/pull/30184)) |\n| [d34d2a2ca3](https://redirect.github.com/angular/components/commit/d34d2a2ca33834a18ca169040f2d81e353c355c5) | fix | **testing:** add code to keyboard events ([#&#8203;30188](https://redirect.github.com/angular/components/pull/30188)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [057ed370aa](https://redirect.github.com/angular/components/commit/057ed370aa1e5ec5c5ffde535d536a19c327e8ef) | fix | **api-theme:** fix nav items hover/focus contrast ([#&#8203;1004](https://redirect.github.com/angular/components/pull/1004)) |\n| [3163040850](https://redirect.github.com/angular/components/commit/3163040850fbb23959dd3ef97de2242e779d5de3) | fix | **docs:** change twitter logo ([#&#8203;1245](https://redirect.github.com/angular/components/pull/1245)) |\n| [4697d8e180](https://redirect.github.com/angular/components/commit/4697d8e18046540ed7b632bc8c94c74d980d7e02) | fix | **list:** enable MacOS select all with command+a ([#&#8203;30183](https://redirect.github.com/angular/components/pull/30183)) |\n| [4620df14f7](https://redirect.github.com/angular/components/commit/4620df14f77d807fe444a11045e61e8de28b4c9b) | fix | **menu:** remove dependency on animations module ([#&#8203;30163](https://redirect.github.com/angular/components/pull/30163)) |\n| [c12b73ee66](https://redirect.github.com/angular/components/commit/c12b73ee6648723fb900607ff8c8095163957e92) | fix | **table:** improve filter predicate efficiency ([#&#8203;30172](https://redirect.github.com/angular/components/pull/30172)) |\n| [04a7652dca](https://redirect.github.com/angular/components/commit/04a7652dcaeffa36d27cb9f61d04bd9772fcab09) | fix | **table:** set border none for header cells on last row ([#&#8203;30193](https://redirect.github.com/angular/components/pull/30193)) |\n| [a0b5546111](https://redirect.github.com/angular/components/commit/a0b5546111a2d28e45e1bc031c0a1b1edc109c23) | fix | **theme:** unselected theme picker |\n| [b924e869c5](https://redirect.github.com/angular/components/commit/b924e869c548850caf9d511a5fa56ab402d435bb) | fix | **theming:** fix not found error in the guide duplicate theming styles document ([#&#8203;30108](https://redirect.github.com/angular/components/pull/30108)) |\n| [c04f84fd3b](https://redirect.github.com/angular/components/commit/c04f84fd3b81dbf5e1e76304845f51d16f365ab3) | fix | **tooltip:** body line height affecting gap ([#&#8203;30164](https://redirect.github.com/angular/components/pull/30164)) |\n\n##### cdk-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [50d906b3e3](https://redirect.github.com/angular/components/commit/50d906b3e3bb841917bafc05bc65ae7c01a57705) | fix | **column-resize:** Previous size was being sent for persistance rather than newly updated size in non-live resize mode. ([#&#8203;30161](https://redirect.github.com/angular/components/pull/30161)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.0-next.2`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1910-next2-rhodium-rhubarb-2024-12-11)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.1...19.1.0-next.2)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [aafa151e78](https://redirect.github.com/angular/components/commit/aafa151e78994a70d7e4509e49e040412fd5adf3) | fix | **expansion:** switch away from animations module ([#&#8203;30119](https://redirect.github.com/angular/components/pull/30119)) |\n| [77393153fd](https://redirect.github.com/angular/components/commit/77393153fd4f6acad65fad6b8f0eefeb8dcd4b06) | fix | **menu:** decouple menu lifecycle from animations ([#&#8203;30148](https://redirect.github.com/angular/components/pull/30148)) |\n| [8d3bca5eb0](https://redirect.github.com/angular/components/commit/8d3bca5eb0cc304075c85aa56ecdd6785e7e2a2d) | fix | **paginator:** ignore clicks on disabled buttons ([#&#8203;30138](https://redirect.github.com/angular/components/pull/30138)) |\n| [02967137f3](https://redirect.github.com/angular/components/commit/02967137f3aba759811e81bc7be5acc6cc6ebc6d) | fix | **select:** add opt-in input that allows selection of nullable options ([#&#8203;30142](https://redirect.github.com/angular/components/pull/30142)) |\n| [f7d787b1e8](https://redirect.github.com/angular/components/commit/f7d787b1e8b770f571621d35d31889d1bc7892d3) | fix | **timepicker:** deserialize ControlValueAccessor values correctly ([#&#8203;30149](https://redirect.github.com/angular/components/pull/30149)) |\n| [db8f6c0a9f](https://redirect.github.com/angular/components/commit/db8f6c0a9f3102056eead1197a6926a34cb89cbd) | fix | **timepicker:** disable toggle if timepicker is disabled ([#&#8203;30137](https://redirect.github.com/angular/components/pull/30137)) |\n\n##### cdk-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [75c8aa8767](https://redirect.github.com/angular/components/commit/75c8aa8767d1bb5e2e5f29ea0434a5876a2c5a21) | feat | **column-resize:** Support column size persistance hooks ([#&#8203;30136](https://redirect.github.com/angular/components/pull/30136)) |\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8685c01a92](https://redirect.github.com/angular/components/commit/8685c01a92e057b20d502e5163561391dcc7fb21) | feat | **column-resize:** Add support for \"lazy\" rather than live updating during resizing. ([#&#8203;30120](https://redirect.github.com/angular/components/pull/30120)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.0-next.1`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1910-next1-plastic-monkey-2024-12-04)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.0...19.1.0-next.1)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [de6c491892](https://redirect.github.com/angular/components/commit/de6c49189254289ebe5a1a51c7cb1f432c2e77c5) | fix | **accordion:** improve accessibility in example code ([#&#8203;30087](https://redirect.github.com/angular/components/pull/30087)) |\n| [85d26391e4](https://redirect.github.com/angular/components/commit/85d26391e4a3ea7228b7d5104c697ac9ab4d40d8) | fix | **menu:** disable flexible dimensions ([#&#8203;30086](https://redirect.github.com/angular/components/pull/30086)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f0a767ca0f](https://redirect.github.com/angular/components/commit/f0a767ca0f5497670d61f5f0bd28159333840a1e) | fix | **button-toggle:** unable to tab into ngModel-based group on first render ([#&#8203;30103](https://redirect.github.com/angular/components/pull/30103)) |\n| [6962c85837](https://redirect.github.com/angular/components/commit/6962c858378b52e0a90f7e2cada0f71c297840ed) | fix | **core:** optgroup label color not inferred correctly ([#&#8203;30085](https://redirect.github.com/angular/components/pull/30085)) |\n| [4ef3baaf08](https://redirect.github.com/angular/components/commit/4ef3baaf088420f5eef9961c9df75bd4f24c04d4) | fix | **schematics:** avoid parsing stylesheets that don't include Material |\n| [c89192639c](https://redirect.github.com/angular/components/commit/c89192639c7917f560d06024c702debc4af1d2cf) | fix | **schematics:** error if stylesheet contains syntax errors |\n| [a08eeebf6b](https://redirect.github.com/angular/components/commit/a08eeebf6b334e00a491496829e3838d0616258a) | fix | **sort:** simplify animations ([#&#8203;30057](https://redirect.github.com/angular/components/pull/30057)) |\n| [a028b5d842](https://redirect.github.com/angular/components/commit/a028b5d8421f1e0094381f30c37f8ec3c02e2c46) | fix | **tabs:** ink bar not showing when same tab is re-selected ([#&#8203;30121](https://redirect.github.com/angular/components/pull/30121)) |\n\n##### youtube-player\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8a55d9a09e](https://redirect.github.com/angular/components/commit/8a55d9a09e35130f07bf63f9dbdff440434a1f33) | fix | update to latest typings ([#&#8203;30126](https://redirect.github.com/angular/components/pull/30126)) |\n\n##### docs\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d7fc560140](https://redirect.github.com/angular/components/commit/d7fc5601405f83e5418121382b7647d4dcc7793c) | fix | add example for adding icon in meta section using matListIâ€¦ ([#&#8203;30068](https://redirect.github.com/angular/components/pull/30068)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [x] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNjIuNiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59246","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies - autoclosed\" (#59246)"},{"Id":"2749214397","IsPullRequest":true,"CreatedAt":"2024-12-19T16:00:21","Actor":"kkninjae","Number":"59242","RawContent":null,"Title":"docs: update example code formatting","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59242","RelatedDescription":"Closed or merged PR \"docs: update example code formatting\" (#59242)"},{"Id":"2749992395","IsPullRequest":false,"CreatedAt":"2024-12-19T11:22:49","Actor":"jambo89","Number":"59245","RawContent":null,"Title":"A resolved promise inside ngAfterContentChecked causes the application to freeze.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHaving a Promise.resolve().then inside the ngAfterContentChecked causes the application to freeze.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/sb1-thle78as?file=src%2Fgreeting.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe application will freeze and consume alot of CPU. The browser will report that the tab has become unresponsive.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.7\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js\n```\n\n### Anything else?\n\nOpen the stack overflow, un-comment the lines in the ngAfterContentChecked. The application will freeeze.","Url":"https://github.com/angular/angular/issues/59245","RelatedDescription":"Closed issue \"A resolved promise inside ngAfterContentChecked causes the application to freeze.\" (#59245)"},{"Id":"2749961676","IsPullRequest":true,"CreatedAt":"2024-12-19T11:04:23","Actor":"eneajaho","Number":"59244","RawContent":null,"Title":"feat(animations): add ability to set the animations type dynamically","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIn order to set the type of the animations, we can only depend on the static type that we can provide on the provider\r\n\r\n```ts\r\nprovideAnimationsAsync('noop'); \r\n\r\n// if we want to dynamically set it based on some OS type, we have to directly depend on the window object\r\n\r\nconst disableAnimations =\r\n  !('animate' in document.documentElement)\r\n  || (navigator && /iPhone OS (8|9|10|11|12|13)_/.test(navigator.userAgent));\r\n\r\nprovideAnimationsAsync(disableAnimations ? 'noop' : 'animations'); \r\n```\r\nThis code breaks on SSR because we're reading document directly. But also, we cannot depend on Angular DI tokens to set it because we cannot inject before providing the animations. \r\n\r\n## What is the new behavior?\r\n\r\n\r\nOne way to solve this and other cases, would be to provide devs a way to have callback function which has access to inject function. \r\n\r\nSomething like: \r\n\r\n```ts\r\nprovideAnimationsAsync(() => {\r\n  const document = inject(DOCUMENT);\r\n\r\n  const disableAnimations =\r\n    !('animate' in document.documentElement)\r\n    || (navigator && /iPhone OS (8|9|10|11|12|13)_/.test(navigator.userAgent));\r\n\r\n  return disableAnimations ? 'noop' : 'animations'\r\n}); \r\n```\r\n\r\nThis would allow devs to use any kind of token/service they need to enable/disable the animations, instead of just depending on global things only (and nothing inside angular DI system)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n\r\n## Other information\r\nRelated https://github.com/angular/angular/issues/45016","Url":"https://github.com/angular/angular/pull/59244","RelatedDescription":"Open PR \"feat(animations): add ability to set the animations type dynamically\" (#59244)"},{"Id":"2749836163","IsPullRequest":false,"CreatedAt":"2024-12-19T10:14:00","Actor":"ReneZeidler","Number":"59243","RawContent":null,"Title":"Template HMR broken with Ionic, showing old template even after full page reload","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, compiler-cli, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\nFirst off, I'm not sure if this is a bug with Angular, Ionic, or both. I've created the issue here because this is still an experimental feature.\n\nI've created a default [Ionic](https://github.com/ionic-team/ionic-framework) starter project and enabled the experimental template HMR with `NG_HMR_TEMPLATES=1`. I marked 3 different places within the app to test HMR in, all showing different behavior:\n\n- `folder.page.html`: Testcase 1: Page component (directly navigated to)\n- `my-custom-component.component.html`: Testcase 2: Nested custom component\n- `app.component.html`: Testcase 3: Outside of ion-router-outlet\n\nDetails of the behavior are below and in comments in the files themselves, but a quick summary:\n\n- Within the `ion-router-outlet`\n  - HMR does not work _live_ (for components currently visible on the page when the changes are made)\n  - HMR does not work _the first time the component is rendered_ after a full page reload, instead showing an outdated version of the component from the compiled chunk\n    - this may include multiple places within the application (due to component caching?)\n- Outside the `ion-router-outlet` HMR works as expected, both live and after a full page reload\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/ReneZeidler/hmr-ionic-bug\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 11.0.0\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n### Reproduction\n\n1. Clone the minimal reproduction repo\n2. Run `npm start`\n3. Go through each test case in turn by opening the corresponding template file and uncommenting the marked line\n4. To start again from a clean slate, comment out all of the lines again and restart the dev server\n\n### Testcases\n\nOpen the details to view my observations and conclusions for each testcase:\n\n<details><summary>Testcase 1 (folder.page.html): Page component (directly navigated to)</summary>\n<p>\n\nObservations:\n* The text does NOT appear on the current page\n* Navigating to a different page in the sidebar causes the text to appear\n* After navigating back to the first page in the sidebar, the text is still there\n* After a full page reload the text does NOT appear on the current page\n* Navigating to a different page causes the text to appear again\n* Forcing a full rebuild of the chunk by changing the corresponding .ts file of this component \"bakes\" in the current version of the template as the one that is visible after a full page reload\n\nConclusions:\n* HMR template changes are not applied live to components currently visible on the page\n* After a full page reload, the first time a component is rendered it uses the original template from the compiled chunk, missing HMR changes\n* Subsequent renders of the component have the HMR changes applied\n</p>\n</details>\n\n<details><summary>Testcase 2 (my-custom-component.component.html): Nested custom component</summary>\n<p>\n\nObservations:\n* The text does NOT appear on the current page\n* The text still does NOT appear after navigating to a different page in the sidebar\n* The text still does NOT appear after a full page reload\n* Forcing a full rebuild of the chunk by changing the corresponding .ts file of this component \"bakes\" in the current version of the template as the one that is visible after a full page reload\n\nConclusions:\n* It seems like the nested component is only rendered once across all pages (caching?), and that render uses the outdated version of the template\n</p>\n</details>\n\n<details><summary>Testcase 3 (app.component.html): Outside of ion-router-outlet</summary>\n<p>\n\nObservations:\n* The text DOES appear live on the current page\n* The text DOES appear after a full page reload\n\nConclusions:\n* HMR works as expected outside of ion-router-outlet\n</p>\n</details>","Url":"https://github.com/angular/angular/issues/59243","RelatedDescription":"Open issue \"Template HMR broken with Ionic, showing old template even after full page reload\" (#59243)"},{"Id":"2749191312","IsPullRequest":false,"CreatedAt":"2024-12-19T04:01:15","Actor":"MarcoGlauser","Number":"59241","RawContent":null,"Title":"Add more ergonomic api to declare server-side services","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, platform-server\n\n### Description\n\nThis is regarding the recommended way to declare server only services:\nhttps://github.com/angular/angular/issues/53168#issuecomment-1827805974\n\nAt the moment it feels like a lot of boilerplate to create separate services for server and browser contexts. It feels like a step back, adding every single service that has different logic on ssr to the app configuration. Especially if it's a simple noop on the server. \n\nIt would be great if it was possible to define on which platform a service will be injected during the service definition.\n\n### Proposed solution\n\nWithout knowing the inner workings of the compiler and being a bit naive, something along these lines would be great:\n```ts\n@Injectable({\n    providedIn: 'root',\n})\nexport class DataServiceService {\n  get(id: string): string {\n   return 'browser-data';\n  }\n}\n\n@ServerInjectable({\n    overrides: DataServiceService\n})\nexport class DataServiceServiceServer extends DataServiceService {\n   get(id: string): string {\n    return 'server-data-performed-with-secret-tokens';\n   }\n}\n```\n\nBy default, services would be the same for browser and server. Only specific services would be overridden to have different behaviour on the server. This would eliminate the need to then add the services separately to the two app configurations.\n\n### Alternatives considered\n\nKeep it as is","Url":"https://github.com/angular/angular/issues/59241","RelatedDescription":"Open issue \"Add more ergonomic api to declare server-side services\" (#59241)"},{"Id":"2749015179","IsPullRequest":true,"CreatedAt":"2024-12-19T00:46:50","Actor":"JeanMeche","Number":"59240","RawContent":null,"Title":"docs: update class & style binding recommendation","State":"open","Body":"This commit introduces an update to the official recommendations when it comes to class & styles bindings.\r\n\r\n`[class]` & `[style]` bindings are now recommended for basic uses cases.\r\n\r\n`[ngClass]` and `[ngStyle]` allow more advanced bindings (like space separated keys) or keys with units (for `ngStyle`) which are not supported by the native bindings. They still require the dedicated directives.\r\n","Url":"https://github.com/angular/angular/pull/59240","RelatedDescription":"Open PR \"docs: update class & style binding recommendation\" (#59240)"},{"Id":"2746666330","IsPullRequest":false,"CreatedAt":"2024-12-18T21:39:29","Actor":"Dukas23","Number":"59228","RawContent":null,"Title":"Visual bug in framework tutuorial","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am learning this framework with the help of the basic tutorial you have and I found the text overflowing.\n\n![Image](https://github.com/user-attachments/assets/78835803-f2c3-476e-9e61-108a2d4b01a3)\nhttps://github.com/user-attachments/assets/b7bb203a-1085-437f-b847-b1be6d39858e\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/user-attachments/assets/b7bb203a-1085-437f-b847-b1be6d39858e\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59228","RelatedDescription":"Closed issue \"Visual bug in framework tutuorial\" (#59228)"},{"Id":"2747569554","IsPullRequest":true,"CreatedAt":"2024-12-18T21:39:28","Actor":"JeanMeche","Number":"59234","RawContent":null,"Title":"docs: fix dynamic template tutorial","State":"closed","Body":"fixes #59228\r\n","Url":"https://github.com/angular/angular/pull/59234","RelatedDescription":"Closed or merged PR \"docs: fix dynamic template tutorial\" (#59234)"},{"Id":"2748549409","IsPullRequest":true,"CreatedAt":"2024-12-18T19:05:36","Actor":"AndrewKushnir","Number":"59239","RawContent":null,"Title":"Bump version to \"v19.1.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59239","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.4\" with changelog.\" (#59239)"},{"Id":"2748543894","IsPullRequest":false,"CreatedAt":"2024-12-18T19:01:46","Actor":"arobinson","Number":"59238","RawContent":null,"Title":"Angular router leaks components and their DOM Elements","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nEvery time we navigate to a component and route away asynchronously, the Angular router is leaking the component.\nThis is causing severe memory issues in production code.\n\nSteps to reproduce:\n1. `git clone git@github.com:arobinson/angular-router-leak.git`\n2. `pnpm install`\n3. `ng serve`\n4. Open http://localhost:4200/homepage in Google Chrome (or Microsoft Edge)\n5. Open the chrome developer tools\n6. Open the \"Memory\" tab\n7. Take a heap snapshot\n8. Filter for \"andrew\", verify nothing is found\n9. Close the chrome developer tools\n10. Click \"Launch Standalone\"\n11. Click \"Close\" (it will navigate after a 2 second delay)\n12. Repeat steps 10 & 11 a few times\n13. Reopen the chrome developer tools\n14. Open the \"Memory\" tab\n15. Take a heap snapshot\n16. Filter for \"andrew\", notice that the DOM element has been orphaned and will not be Garbage Collected. \n\nFor larger components this ends up leaking over 50MB of RAM per navigation in our application.\n\n![Image](https://github.com/user-attachments/assets/088b0baf-d795-410b-8766-efd829680f94)\n\nNow see that somehow the problem is different with a synchronous navigation:\n1. Reload the browser to clear the memory\n2. Open dev tools\n3. Click \"Launch Standalone\" again\n4. This time click \"Close Synchronously\"\n5. Repeat steps 3 & 4 a few times\n15. Take a heap snapshot\n16. Filter for \"andrew\", notice that only the last DOM element that was routed to is detached. So there is still a memory issue, but thankfully it does not grow every time we route.\n![Image](https://github.com/user-attachments/assets/586b16a5-2339-438e-8d32-9977eb49d55f)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/arobinson/angular-router-leak\n\n### Please provide the exception or error you saw\n\n```true\nDetached / Leaked DOM elements and their components\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.1\nNode: 22.11.0\nPackage Manager: pnpm 9.9.0\nOS: darwin arm64\n\nAngular: 18.2.2\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   18.2.1\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@angular/cli                    18.2.1\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.5.2\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59238","RelatedDescription":"Open issue \"Angular router leaks components and their DOM Elements\" (#59238)"},{"Id":"2748539695","IsPullRequest":true,"CreatedAt":"2024-12-18T18:59:42","Actor":"AndrewKushnir","Number":"59237","RawContent":null,"Title":"docs: release notes for the v19.0.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59237","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.5 release\" (#59237)"},{"Id":"2748531344","IsPullRequest":true,"CreatedAt":"2024-12-18T18:57:22","Actor":"AndrewKushnir","Number":"59236","RawContent":null,"Title":"Bump version to \"v19.0.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59236","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.5\" with changelog.\" (#59236)"},{"Id":"2747830536","IsPullRequest":true,"CreatedAt":"2024-12-18T17:37:25","Actor":"m-housni","Number":"59235","RawContent":null,"Title":"docs: fix typo in code example","State":"closed","Body":"``` diff\r\n@Component({\r\n/*...*/\r\n-  // Set the `disabled` property of the button based on the value of `isAccountDisabled`.\r\n+  // Set the `disabled` property of the button based on the value of `isValidUserId `.\r\n    template: `<button [disabled]=\"isValidUserId()\">Save changes</button>`,\r\n})\r\nexport class UserProfile {\r\n    isValidUserId = signal(false);\r\n}\r\n```\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59235","RelatedDescription":"Closed or merged PR \"docs: fix typo in code example\" (#59235)"},{"Id":"2747171175","IsPullRequest":true,"CreatedAt":"2024-12-18T17:36:24","Actor":"sandythesand","Number":"59231","RawContent":null,"Title":"Update defer.md","State":"closed","Body":"There was an extra Z letter which I think not neccessary.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59231","RelatedDescription":"Closed or merged PR \"Update defer.md\" (#59231)"},{"Id":"2746025058","IsPullRequest":true,"CreatedAt":"2024-12-18T16:30:58","Actor":"gicao","Number":"59226","RawContent":null,"Title":"Update templates.md to actually use isAccountDisabled()","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nRef: documentation page at https://angular.dev/essentials/templates\r\nCurrently the disabled property of the button is bound to isValidUserid()\r\n// Set the `disabled` property of the button based on the value of `isAccountDisabled`.\r\n  template: `<button [disabled]=\"isValidUserId()\">Save changes</button>`,\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nCorrectly binds the disabled property of the button to isAccountDisabled()\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59226","RelatedDescription":"Closed or merged PR \"Update templates.md to actually use isAccountDisabled()\" (#59226)"},{"Id":"2747505025","IsPullRequest":true,"CreatedAt":"2024-12-18T11:05:02","Actor":"pkozlowski-opensource","Number":"59233","RawContent":null,"Title":"Devtools profiler calls","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59233","RelatedDescription":"Open PR \"Devtools profiler calls\" (#59233)"},{"Id":"2747441309","IsPullRequest":false,"CreatedAt":"2024-12-18T10:49:55","Actor":"phihochzwei","Number":"59232","RawContent":null,"Title":"CSS Vars in Host-Element not working","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe just wanted to update to use the new Host-Element in some of our older components while we faced this: \n\nThis works perfectly fine: \n\n`@HostBinding('style.--linkTextColor') text = '#ff0000';`\n\nThis does not: \n\n`host: {\n\t\t'style.--linkTextColor': '#ff0000'\n\t}`\n\nI would expect that they both behave the same way :)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 18.2.11\nNode: 22.6.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.2.10\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    18.2.11\n@angular/cli                    18.2.11\n@angular/google-maps            18.2.11\n@angular/material               18.2.11\n@angular/ssr                    18.2.11\n@schematics/angular             18.2.0\nng-packagr                      18.2.0\nrxjs                            7.5.7\ntypescript                      5.5.3\nwebpack                         5.95.0\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59232","RelatedDescription":"Closed issue \"CSS Vars in Host-Element not working\" (#59232)"},{"Id":"2747142976","IsPullRequest":false,"CreatedAt":"2024-12-18T09:03:16","Actor":"yelhouti","Number":"59229","RawContent":null,"Title":"@Optional not working when trying to inject parent component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have the following code:\n\n```typescript\nexport class ChildComponent {\n  constructor(@Optional() protected parentComponent: ParentComponent | null) {}\n}\n\n```\n\nThat injects the parent component when present, it works great and retrieves the parent component correctly.\n\nHowever, when the child component is not present (ie: child component accessed directly via router). I get this error:\n\ncore.mjs:7635 ERROR Error: Uncaught (in promise): ReferenceError: Cannot access 'ChildModule' before initialization\nReferenceError: Cannot access 'ChildModule' before initialization\n    at Module.ChildModule (child.component.html:21:31)\n    at 58864 (parent.component.ts:127:5)\n\nI don't know if this is relevant, but child component is inside child module, and parent component is standalone.\nAlso, ChildModule doesn't import ParentComponent since ParentCompoent imports ChildModule to avoid Circular dependency issues.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 14.0.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59229","RelatedDescription":"Closed issue \"@Optional not working when trying to inject parent component\" (#59229)"},{"Id":"2747151249","IsPullRequest":true,"CreatedAt":"2024-12-18T08:33:38","Actor":"crisbeto","Number":"59230","RawContent":null,"Title":"Support untagged template literals in expressions","State":"open","Body":"Updates the compiler to allow users to use untagged [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) inside of our expression syntax (e.g. ``hello ${world}``) which makes string concatenation a bit simpler and more convenient. Includes the following changes:\r\n\r\n### refactor(compiler): allow lexer to produce multiple tokens \r\nReworks the lexer's scanner to produce more than one token at a time. This can be useful for the cases where one token means the end of another one.\r\n\r\nAlso cleans up the scanner by making all non-essential methods private and using strict equality everywhere.\r\n\r\n### refactor(compiler): tokenize template literals \r\n\r\nReworks the lexer to produce tokens for template literal expressions.\r\n\r\n### refactor(compiler): produce AST for template literals \r\n\r\nUpdates the compiler to parse the template literal tokens into the new `TemplateLiteral` and `TemplateLiteralElement` AST nodes.\r\n\r\n### refactor(compiler): clean up tagged templates in output AST \r\n\r\nMakes the following cleanups in the output AST:\r\n* The `TemplateLiteral` and `TemplateLiteralElement` nodes have been renamed to `TemplateLiteralExpr` and `TemplateLiteralElementExpr` respectively for consistency and to avoid overlaps with the expression AST nodes.\r\n* The `TemplateLiteralExpr` and `TemplateLiteralElementExpr` have been refactored to be `Expression`s for correctness. This involves updating some existing code.\r\n* The `TaggedTemplateExpr` has been renamed to `TaggedTemplateLiteralExpr` for consistency.\r\n\r\n### refactor(compiler-cli): handle template literals in ngtsc \r\n\r\nUpdates the translators that convert expression ASTs to account for template literals.\r\n\r\n### feat(compiler): support untagged template literals in expressions\r\n\r\nUpdates the compiler to support untagged template literals inside of the expression syntax (e.g. ``hello ${world}``).","Url":"https://github.com/angular/angular/pull/59230","RelatedDescription":"Open PR \"Support untagged template literals in expressions\" (#59230)"},{"Id":"2746267046","IsPullRequest":false,"CreatedAt":"2024-12-18T06:22:44","Actor":"olfek","Number":"59227","RawContent":null,"Title":"Query parameters are lost with \"hash location strategy\"","State":"closed","Body":"[#59113](https://github.com/angular/angular/issues/59113#issuecomment-2546335227)","Url":"https://github.com/angular/angular/issues/59227","RelatedDescription":"Closed issue \"Query parameters are lost with \"hash location strategy\"\" (#59227)"},{"Id":"2745861485","IsPullRequest":true,"CreatedAt":"2024-12-17T20:46:42","Actor":"dgp1130","Number":"59225","RawContent":null,"Title":"release: bump Angular DevTools version to 1.0.19","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59225","RelatedDescription":"Closed or merged PR \"release: bump Angular DevTools version to 1.0.19\" (#59225)"},{"Id":"2745815313","IsPullRequest":false,"CreatedAt":"2024-12-17T19:12:23","Actor":"thePunderWoman","Number":"59224","RawContent":null,"Title":"Hydration resiliency: third party scripts that modify DOM and improved error messages","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nRight now hydration mismatch errors will point directly to the HTML source where the mismatch occurred. This is very helpful in the case that the developer caused this mismatch. If a third party script did, it may be less helpful. Can we improve the error messages to point also to documentation around third party scripts? Or maybe even detect if it was generated by a script and make suggestions of using something like `afterNextRender()` to delay the execution of that script?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59224","RelatedDescription":"Open issue \"Hydration resiliency: third party scripts that modify DOM and improved error messages\" (#59224)"},{"Id":"2745803785","IsPullRequest":false,"CreatedAt":"2024-12-17T19:08:00","Actor":"thePunderWoman","Number":"59223","RawContent":null,"Title":"Hydration resiliency: Detect patterns that cause performance regressions with hydration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHydration fully supports using `isPlatformBrowser()` inside control flow, and this will not break hydration. However it does have a negative impact on user experience. Doing this will result in a brief display of the server rendered content, followed by a re-render and update of the other branch of the control flow. We should be able to detect these types of cases with something like a template diagnostic that will warn users of this and provide better guidance / links to the documentation.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59223","RelatedDescription":"Open issue \"Hydration resiliency: Detect patterns that cause performance regressions with hydration\" (#59223)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2751691457","IsPullRequest":true,"CreatedAt":"2024-12-20T01:01:25","Actor":"clydin","Number":"29194","RawContent":null,"Title":"fix(@angular/build): mitigate JS transformer worker `execArgv` errors","State":"open","Body":"Node.js workers will currently fail to initialize if the `execArgv` option is used and it contains v8 specific options. This is currently problematic for the JS transformer worker because it contains a workaround to remove the SSR `--import` argument that is used to add a loader hook for SSR purposes. The filtering of the argument and subsequent use of the `execArgv` array had the potential to pass custom Node.js options to the worker and cause it to fail. These options can be passed by developers on the command line when invoking the Angular CLI.\r\nTo mitigate this problem, the `execArgv` option is now only filtered and used if the SSR import argument is present in the array. Otherwise, no value is passed which allows the default Node.js behavior to be used. While this does not fully solve the problem for all projects, it does remove the problem from non-SSR projects.","Url":"https://github.com/angular/angular-cli/pull/29194","RelatedDescription":"Open PR \"fix(@angular/build): mitigate JS transformer worker `execArgv` errors\" (#29194)"},{"Id":"2751291561","IsPullRequest":true,"CreatedAt":"2024-12-19T19:54:40","Actor":"jkrems","Number":"29193","RawContent":null,"Title":"fix(@angular-devkit/build-angular): preserve css type for jasmine.css","State":"open","Body":"We should only force the type for files that we know are JavaScript. Otherwise we risk breaking the magic type detection done by Karma.\r\n\r\nThe previous code broke for `jasmine.css`.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/29190","Url":"https://github.com/angular/angular-cli/pull/29193","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): preserve css type for jasmine.css\" (#29193)"},{"Id":"2749438260","IsPullRequest":true,"CreatedAt":"2024-12-19T19:01:12","Actor":"angular-robot","Number":"29184","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `a0f4330` -> `ad8c43e` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `c79da6c` -> `5c693d4` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `23a3f5d` -> `2dba82d` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `ac8ee6a` -> `0dbf7e9` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `39012f5` -> `85adb68` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `0f5063f` -> `4402782` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `e40a52b` -> `a1a89da` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `19ec33d` -> `b9cb5ce` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `358b705` -> `e9d846b` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `5876f7b` -> `1e52082` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `c6ab4c1` -> `b3a2219` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `dc2b42b` -> `5c81604` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `ecacecb` -> `5afad37` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a7f5e0c` -> `e4435cc` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `b4b7dc9` -> `457bddb` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e348b5e` -> `588f356` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `0dff9a1` -> `a08e274` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `9365ce2` -> `99ca0eb` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `226269e` -> `8779277` |\n| angular/dev-infra | action | digest | `36b7540` -> `e8ee8c5` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29184","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29184)"},{"Id":"2751004961","IsPullRequest":true,"CreatedAt":"2024-12-19T17:51:21","Actor":"josephperrott","Number":"29192","RawContent":null,"Title":"[Patch version for #29189] build: migrate build_angular to ts_project","State":"closed","Body":"Patch version for #29189","Url":"https://github.com/angular/angular-cli/pull/29192","RelatedDescription":"Closed or merged PR \"[Patch version for #29189] build: migrate build_angular to ts_project\" (#29192)"},{"Id":"2750459560","IsPullRequest":true,"CreatedAt":"2024-12-19T17:21:37","Actor":"devversion","Number":"29189","RawContent":null,"Title":"build: migrate build_angular to ts_project ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29189","RelatedDescription":"Closed or merged PR \"build: migrate build_angular to ts_project \" (#29189)"},{"Id":"2750964230","IsPullRequest":true,"CreatedAt":"2024-12-19T17:06:01","Actor":"clydin","Number":"29191","RawContent":null,"Title":"fix(@angular/build): support incremental build file results in watch mode","State":"open","Body":"When the application build is in watch mode, incremental build results will now be generated. This allows fine-grained updates of the files in the output directory and supports removal of stale application code files. Note that stale assets will not currently be removed from the output directory. More complex asset change analysis will be evaluated for inclusion in the future to address this asset output behavior.\r\n\r\nCloses #26595","Url":"https://github.com/angular/angular-cli/pull/29191","RelatedDescription":"Open PR \"fix(@angular/build): support incremental build file results in watch mode\" (#29191)"},{"Id":"2749425448","IsPullRequest":true,"CreatedAt":"2024-12-19T16:39:24","Actor":"alan-agius4","Number":"29183","RawContent":null,"Title":"fix(@angular/ssr): disable component boostrapping when running route extraction","State":"closed","Body":"\r\nThis commit fixes an issue where the components where still being bootstrapping when using `provideAppInitializer`\r\n\r\nCloses #29131\r\n","Url":"https://github.com/angular/angular-cli/pull/29183","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): disable component boostrapping when running route extraction\" (#29183)"},{"Id":"2750850928","IsPullRequest":false,"CreatedAt":"2024-12-19T16:23:36","Actor":"hamfastgamgee","Number":"29190","RawContent":null,"Title":"Angular 19.0.6 breaks karma/jasmine on our build server by trying to load jasmine.css as a script module","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.5\n\n### Description\n\nAfter the 19.0.6 release (and presumably 19.1.0-next.2, although I have not tested that), our build server cannot execute tests appropriately because the new AngularPolyfillsPlugin executed to fix jasmine.clock turns the <link> tag that is supposed to load jasmine.css into a <script type=\"module\"> tag, which is clearly inappropriate for CSS.  Interestingly, \"ng test\" executes fine on my local workstation (although the styles in karma if you load it up in the browser are broken) even with this change, but on our build server this results in the following error:\n\nChrome Headless 131.0.0.0 (Windows 10) ERROR\nUncaught Error loading node_modules/jasmine-core/lib/jasmine-core/jasmine.css\n   at http://localhost:9876/context.html:255:289\n\nRolling back to a pinned 19.0.5 works; obviously the bug that was addressed would be broken, but we don't use jasmine.clock in our tests.  As far as I can tell, adding some additional logic around line 151 to ignore CSS files in application_builder.ts should do the trick.\n\n### Minimal Reproduction\n\nRun \"ng test\" and observe the source code generated in the karma server, noting that the CSS file is improperly referenced as <script type=\"module\">.\n\n(I do not know why our build server fails here and my workstation succeeds, even running the same commands on the same Chrome version.)\n\n### Exception or Error\n\n```text\nChrome Headless 131.0.0.0 (Windows 10) ERROR\nUncaught Error loading node_modules/jasmine-core/lib/jasmine-core/jasmine.css\n   at http://localhost:9876/context.html:255:289\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___ \n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 20.11.1\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/material               19.0.4\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29190","RelatedDescription":"Open issue \"Angular 19.0.6 breaks karma/jasmine on our build server by trying to load jasmine.css as a script module\" (#29190)"},{"Id":"2748488684","IsPullRequest":false,"CreatedAt":"2024-12-19T16:05:04","Actor":"AlvinChacko","Number":"29174","RawContent":null,"Title":"Avoid installing LMDB for systems that dont support","State":"closed","Body":"### Command\n\nadd\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv15\n\n### Description\n\nIm trying to build an angular app on z/OS and it looks like @angular/build@18.2.12 uses lmdb. Lmdb doesnt build on z/OS or have that support wondering if I can avoid installing lmdb. Here is what I see:\n\n```\nnpm ERR! In file included from ../src/lmdb-js.cpp:1:\nnpm ERR! ../src/lmdb-js.h:101:12: fatal error: 'byteswap.h' file not found\nnpm ERR!   #include <byteswap.h>  // bswap_64\nnpm ERR!            ^~~~~~~~~~~~\nnpm ERR! 3 warnings and 1 error generated.\nnpm ERR! make: *** [lmdb.target.mk:195: Release/obj.target/lmdb/src/lmdb-js.o] Error 1\nnpm ERR! gyp ERR! build error \nnpm ERR! gyp ERR! stack Error: `make` failed with exit code: 2\n```\n\nI dont see lmdb as an optional dependency is this needed in the new version of angular cli?\n\nI have added the following but it didnt work:\n```\n  \"optionalDependencies\": {\n    \"lmdb\": \"3.0.13\"\n  },\n```\n\n### Minimal Reproduction\n\nRun a npm install or add for @angular-devkit/build-angular on a unsupported OS. \n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cdk                    18.2.14\n@angular/cli                    18.2.12\n@angular/material               18.2.14\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29174","RelatedDescription":"Closed issue \"Avoid installing LMDB for systems that dont support\" (#29174)"},{"Id":"2750284566","IsPullRequest":true,"CreatedAt":"2024-12-19T14:21:52","Actor":"alan-agius4","Number":"29187","RawContent":null,"Title":"test: add false positive postinstall script","State":"closed","Body":"`resolve/test/list-exports/packages/tests/fixtures/resolve-2/project/test/resolver/multirepo/package.json` is not a true postinstall script\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29187","RelatedDescription":"Closed or merged PR \"test: add false positive postinstall script\" (#29187)"},{"Id":"2750414860","IsPullRequest":false,"CreatedAt":"2024-12-19T13:55:50","Actor":"DibyodyutiMondal","Number":"29188","RawContent":null,"Title":"allow proxy config during ng build when using `outputMode: server`","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nI am facing a separate, but similar issue to #29005 \n@alan-agius4, in my case, the 30-sec timeout occurs because I am making api calls.\n\nMy setup is pretty standard: \n- 2 angular 'client' apps (ssr with fastify)\n- one 'server' api (fastify)\n\nThe '/api' route on both clients are expected to point to the same api instance\n\nIn production, '/api' on both client apps are routed the api via nginx and docker configuration \nIn development, I serve both the api and client locally, and use ng serve's proxy config \n\nThis means I can avoid having to stream my api data through my client's container. This is especially a win for production environment.\n\nBecause of this setup, I do not need to have a separate 'api' route in my client application. \n\nBUT...\n\nWhen angular tries to build my app, to extract the routes, \n- it makes request to the angular engine\n- in order to render the app, angular engine needs to make some api calls. Those api calls go to '/api'.\n- but there is no nginx config, or proxy config, so it passes the request to the client's fastify instance.\n- the client fastify instance does not have a handler for '/api' so it passes the request to the '*' route \n- '*' route is handled by.... angular engine\n\nAnd so it loops and loops.\n\nA. It was not immediately obvious that is a problem of recursion, and not a problem of route not able to render.\nB. This is probably behaving as intended. But it forces developers to implement a fallback for api routes, or any other route that is expected on the same origin, just to build in peace. This was not needed before. We did not need to have runtime things available at build-time. \nC. Yes, api route example was there in the initial generated server.ts. But it did not tell me \"DO NOT DELETE THIS - YOU WILL NEED THIS LATER\". Basically, maybe a more thorough documention is in order\nD. Alternatively, would it not be great if we configure the build action to pick up proxy information, just like `ng serve`?\n\n----\n\n### Following are the relevant files for the server setup\n\n##### server.ts\n```typescript\nimport { createNodeRequestHandler, isMainModule } from '@angular/ssr/node';\nimport { serveAngularSSR } from '@easworks/app-shell/utilities/angular-ssr';\nimport { fastifyCors } from '@fastify/cors';\nimport { fastify, FastifyInstance } from 'fastify';\nimport * as path from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { parseEnv } from 'server-side/environment';\nimport { useProblemDetailsGlobally } from 'server-side/utils/fastify-problem-details';\nimport { getLoggerOptions } from 'server-side/utils/logging';\nimport { printRoutes } from 'server-side/utils/print-routes.plugin';\n\nconst envId = parseEnv.nodeEnv();\n\nasync function initServer() {\n  // const options = development ? {} : { http2: true };\n  const options = {};\n\n  const server = fastify({\n    ...options,\n    logger: getLoggerOptions(envId)\n  });\n\n  return server;\n}\n\nasync function configureServer(server: FastifyInstance) {\n\n  server.register(useProblemDetailsGlobally);\n  server.register(printRoutes);\n\n  server.register(serveAngularSSR, {\n    directory: path.resolve(fileURLToPath(import.meta.url), '../..'),\n  });\n\n  await server.register(fastifyCors, {\n    origin: true\n  });\n}\n\nconst server = await initServer();\nawait configureServer(server);\n\nasync function closeServer(server: FastifyInstance) {\n  await server.close();\n  process.exit();\n}\n\n/**\n * Start the server if this module is the main entry point.\n * The server listens on the port defined by the `PORT` environment variable, or defaults to 4000.\n */\nif (isMainModule(import.meta.url)) {\n  const host = '0.0.0.0';\n  const port = Number.parseInt(process.env['PORT'] as string);\n\n  try {\n    await server.listen({ host, port });\n    process.on('SIGTERM', () => closeServer(server));\n    process.on('SIGINT', () => closeServer(server));\n  }\n  catch (e) {\n    server.log.fatal(e);\n    closeServer(server);\n  }\n}\n\n/**\n * The request handler used by the Angular CLI (dev-server and during build).\n */\nexport const reqHandler = createNodeRequestHandler(async (req, res) => {\n  await server.ready();\n  server.server.emit('request', req, res);\n});\n\n\n```\n#### serve-angular-ssr.ts\n```typescript\nimport { AngularNodeAppEngine, writeResponseToNodeResponse } from '@angular/ssr/node';\nimport { fastifyStatic } from '@fastify/static';\nimport { FastifyPluginAsync } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport mime from 'mime';\nimport * as path from 'path';\n\ninterface ServeAngularSSROptions {\n  directory: string;\n}\n\nconst pluginImpl: FastifyPluginAsync<\n  ServeAngularSSROptions\n> = async (server, options) => {\n  const engine = new AngularNodeAppEngine();\n  const browserDirectory = path.resolve(options.directory, 'browser');\n\n  server.register(fastifyStatic, {\n    root: browserDirectory,\n    serve: false,\n    index: false,\n    redirect: false,\n    maxAge: '1y',\n  });\n\n  const htmlMime = mime.getType('html');\n  if (!htmlMime) throw new Error('invalid operation');\n\n  server.get('*', async (req, reply) => {\n\n    const extension = mime.getType(req.url);\n\n    if (extension && req.url !== '/index.html') {\n      return reply.sendFile(req.url);\n    } else {\n      reply.type(htmlMime);\n      const response = await engine.handle(req.raw);\n      if (response) return writeResponseToNodeResponse(response, reply.raw);\n      else return reply.send();\n    }\n\n  });\n};\n\nexport const serveAngularSSR = fastifyPlugin(pluginImpl, { name: 'serveAngularSSR' });\n```\n\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29188","RelatedDescription":"Open issue \"allow proxy config during ng build when using `outputMode: server`\" (#29188)"},{"Id":"2749409684","IsPullRequest":true,"CreatedAt":"2024-12-19T12:22:54","Actor":"alan-agius4","Number":"29182","RawContent":null,"Title":"test: add `resolve/test/list-exports` to false positive in postinstall scripts check","State":"closed","Body":"\r\n\r\nAdded `resolve/test/list-exports/packages/tests/fixtures/resolve-1/project/test/resolver/multirepo/package.json as a false positive`\r\nSee: https://github.com/angular/angular-cli/actions/runs/12402554909/job/34638018185?pr=29134","Url":"https://github.com/angular/angular-cli/pull/29182","RelatedDescription":"Closed or merged PR \"test: add `resolve/test/list-exports` to false positive in postinstall scripts check\" (#29182)"},{"Id":"2749670230","IsPullRequest":true,"CreatedAt":"2024-12-19T09:20:54","Actor":"alan-agius4","Number":"29186","RawContent":null,"Title":"test: add `--disable-dev-shm-usage` to address `WebDriverError: unknown error: Chrome failed to start: crashed`","State":"closed","Body":"\r\n\r\nThis fixes an issue where protractor integration tests are failing with\r\n\r\n```\r\n[07:38:37] I/direct - Using ChromeDriver directly...\r\n[07:38:39] E/launcher - unknown error: Chrome failed to start: crashed.\r\n  (unknown error: DevToolsActivePort file doesn't exist)\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/29186","RelatedDescription":"Closed or merged PR \"test: add `--disable-dev-shm-usage` to address `WebDriverError: unknown error: Chrome failed to start: crashed`\" (#29186)"},{"Id":"2749527198","IsPullRequest":false,"CreatedAt":"2024-12-19T07:54:36","Actor":"cexbrayat","Number":"29185","RawContent":null,"Title":"Karma builder: support `sass` in `stylePreprocessorOptions` with \"builderMode: application\"","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nIt is currently impossible to define the `sass` option in `stylePreprocessorOptions` for the Karma builder, which makes it impossible to silence Sass deprecations with \"builderMode: application.\"\n\n```json\n\"test\": {\n  \"builder\": \"@angular-devkit/build-angular:karma\",\n  \"options\": {\n  \"builderMode\": \"application\",\n  \"stylePreprocessorOptions\": {\n    \"sass\": {\n      \"silenceDeprecations\": [\"import\"]\n    }\n  },\n```\n\nthrows:\n```\nError: Schema validation failed with the following errors:\n  Data path \"/stylePreprocessorOptions\" must NOT have additional properties(sass).\n```\n\n### Describe the solution you'd like\n\n`stylePreprocessorOptions` allows to set `includePaths` but it would be great to handle `sass` options as well, like the `application` builder does.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29185","RelatedDescription":"Open issue \"Karma builder: support `sass` in `stylePreprocessorOptions` with \"builderMode: application\"\" (#29185)"},{"Id":"2749388834","IsPullRequest":true,"CreatedAt":"2024-12-19T07:15:18","Actor":"alan-agius4","Number":"29181","RawContent":null,"Title":"test: disable WTR e2e test","State":"closed","Body":"Temporary disable this test due to\r\n\r\n```\r\nFailed to launch local browser installed at /home/runner/.cache/bazel/_bazel_runner/f47b8283cc0f5922f9455b06771398a1/sandbox/processwrapper-sandbox/410/execroot/angular_cli/bazel-out/k8-fastbuild/bin/tests/legacy-cli/e2e.npm_node22.sh.runfiles/org_chromium_chromium_linux_x64/chrome-linux/chrome.\r\nThis could be because of a mismatch between the version of puppeteer and Chrome or Chromium.\r\nTry updating either of them, or adjust the executablePath option to point to another browser installation. Use the --puppeteer flag to run tests with bundled compatible version of Chromium.\r\n\r\ndist/test-out/c48222bb-ca34-455e-bc1b-122521e1e71e/app.component.spec.js:\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/29181","RelatedDescription":"Closed or merged PR \"test: disable WTR e2e test\" (#29181)"},{"Id":"2749351607","IsPullRequest":true,"CreatedAt":"2024-12-19T06:38:40","Actor":"angular-robot","Number":"29180","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `d4b71a8` -> `a0f4330` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `d9b105a` -> `c79da6c` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `e0607f3` -> `ac8ee6a` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.2` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.1.0-next.2/19.1.0-next.3) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `4fd8f79` -> `39012f5` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `b6b767f` -> `0f5063f` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `1facaa9` -> `e40a52b` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `78ebc73` -> `19ec33d` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `38ebd42` -> `358b705` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `bc37dd1` -> `5876f7b` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `9a35ccc` -> `c6ab4c1` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `3b0f5ad` -> `dc2b42b` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.2` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.1.0-next.2/19.1.0-next.3) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `aec9602` -> `ecacecb` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `99d2afc` -> `b4b7dc9` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `dbafd8c` -> `e348b5e` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `069232c` -> `0dff9a1` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `baaa39c` -> `9365ce2` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `cb927ff` -> `226269e` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.1.0-next.3/19.1.0-next.4) |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.1.0-next.4`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1910-next4-2024-12-18)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.0-next.3...19.1.0-next.4)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [57f3550219](https://redirect.github.com/angular/angular/commit/57f3550219f2a57c7c26c9183e48ee66845e0439) | feat | add utility for resolving defer block information to ng global ([#&#8203;59184](https://redirect.github.com/angular/angular/pull/59184)) |\n| [22f191f763](https://redirect.github.com/angular/angular/commit/22f191f76339a08bb8f0f2dfbc60dde0f2e38e73) | feat | extend the set of profiler events ([#&#8203;59183](https://redirect.github.com/angular/angular/pull/59183)) |\n| [1f4ff2fa36](https://redirect.github.com/angular/angular/commit/1f4ff2fa36f5d6240cbc4a40839d3d89501519d8) | fix | avoid triggering `on timer` and `on idle` on the server ([#&#8203;59177](https://redirect.github.com/angular/angular/pull/59177)) |\n| [cf89f14766](https://redirect.github.com/angular/angular/commit/cf89f14766b0ed0204f7012d44a4732fccb35398) | fix | Fix nested timer serialization ([#&#8203;59173](https://redirect.github.com/angular/angular/pull/59173)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [300b141cc8](https://redirect.github.com/angular/angular/commit/300b141cc8652fd714b02f05c943cb79167ea844) | fix | Warn user when transfer state happens more than once ([#&#8203;58935](https://redirect.github.com/angular/angular/pull/58935)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.1.0-next.3`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1910-next3-cotton-curtains-2024-12-18)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.2...19.1.0-next.3)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [62a672af0d](https://redirect.github.com/angular/components/commit/62a672af0d6cb2195633a1cbf6c39472104767f9) | feat | **dialog:** expose cdk dialog docs ([#&#8203;1144](https://redirect.github.com/angular/components/pull/1144)) |\n| [a0a16fc70e](https://redirect.github.com/angular/components/commit/a0a16fc70e1fed7fbb9177c83cf3f670022a321a) | feat | **menu:** expose cdk menu docs ([#&#8203;1142](https://redirect.github.com/angular/components/pull/1142)) |\n| [a141c22e99](https://redirect.github.com/angular/components/commit/a141c22e99467174225f74b6ccac730df92c46c8) | fix | **drag-drop:** resolve projected handles |\n| [454d9f9c09](https://redirect.github.com/angular/components/commit/454d9f9c0937e9e70d018be13a7f452bec776620) | fix | **drag-drop:** stop dragging on touchcancel ([#&#8203;30184](https://redirect.github.com/angular/components/pull/30184)) |\n| [d34d2a2ca3](https://redirect.github.com/angular/components/commit/d34d2a2ca33834a18ca169040f2d81e353c355c5) | fix | **testing:** add code to keyboard events ([#&#8203;30188](https://redirect.github.com/angular/components/pull/30188)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [057ed370aa](https://redirect.github.com/angular/components/commit/057ed370aa1e5ec5c5ffde535d536a19c327e8ef) | fix | **api-theme:** fix nav items hover/focus contrast ([#&#8203;1004](https://redirect.github.com/angular/components/pull/1004)) |\n| [3163040850](https://redirect.github.com/angular/components/commit/3163040850fbb23959dd3ef97de2242e779d5de3) | fix | **docs:** change twitter logo ([#&#8203;1245](https://redirect.github.com/angular/components/pull/1245)) |\n| [4697d8e180](https://redirect.github.com/angular/components/commit/4697d8e18046540ed7b632bc8c94c74d980d7e02) | fix | **list:** enable MacOS select all with command+a ([#&#8203;30183](https://redirect.github.com/angular/components/pull/30183)) |\n| [4620df14f7](https://redirect.github.com/angular/components/commit/4620df14f77d807fe444a11045e61e8de28b4c9b) | fix | **menu:** remove dependency on animations module ([#&#8203;30163](https://redirect.github.com/angular/components/pull/30163)) |\n| [c12b73ee66](https://redirect.github.com/angular/components/commit/c12b73ee6648723fb900607ff8c8095163957e92) | fix | **table:** improve filter predicate efficiency ([#&#8203;30172](https://redirect.github.com/angular/components/pull/30172)) |\n| [04a7652dca](https://redirect.github.com/angular/components/commit/04a7652dcaeffa36d27cb9f61d04bd9772fcab09) | fix | **table:** set border none for header cells on last row ([#&#8203;30193](https://redirect.github.com/angular/components/pull/30193)) |\n| [a0b5546111](https://redirect.github.com/angular/components/commit/a0b5546111a2d28e45e1bc031c0a1b1edc109c23) | fix | **theme:** unselected theme picker |\n| [b924e869c5](https://redirect.github.com/angular/components/commit/b924e869c548850caf9d511a5fa56ab402d435bb) | fix | **theming:** fix not found error in the guide duplicate theming styles document ([#&#8203;30108](https://redirect.github.com/angular/components/pull/30108)) |\n| [c04f84fd3b](https://redirect.github.com/angular/components/commit/c04f84fd3b81dbf5e1e76304845f51d16f365ab3) | fix | **tooltip:** body line height affecting gap ([#&#8203;30164](https://redirect.github.com/angular/components/pull/30164)) |\n\n##### cdk-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [50d906b3e3](https://redirect.github.com/angular/components/commit/50d906b3e3bb841917bafc05bc65ae7c01a57705) | fix | **column-resize:** Previous size was being sent for persistance rather than newly updated size in non-live resize mode. ([#&#8203;30161](https://redirect.github.com/angular/components/pull/30161)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNjIuNiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29180","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29180)"},{"Id":"2748814056","IsPullRequest":true,"CreatedAt":"2024-12-18T22:30:10","Actor":"dgp1130","Number":"29177","RawContent":null,"Title":"Bump version to \"v19.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29177","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.2\" with changelog.\" (#29177)"},{"Id":"2748857535","IsPullRequest":true,"CreatedAt":"2024-12-18T22:20:16","Actor":"Algoritm211","Number":"29179","RawContent":null,"Title":"bugfix: provide i18nDuplicateTranslation config value to checkDuplicateMessages function","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrent behaviour is described inside this issue - https://github.com/angular/angular-cli/issues/23635\r\n\r\nIssue Number: #23635\r\n\r\n## What is the new behavior?\r\n\r\nNow we can add different values according to the `i18nDuplicateTranslation` option https://github.com/angular/angular-cli/blob/d99e4ed49359632657cd170524673dd9f4e88b82/goldens/public-api/angular/build/index.api.md?plain=1#L40 and have corresponding output, not hardcoded `warning`\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29179","RelatedDescription":"Open PR \"bugfix: provide i18nDuplicateTranslation config value to checkDuplicateMessages function\" (#29179)"},{"Id":"2748849139","IsPullRequest":false,"CreatedAt":"2024-12-18T22:13:18","Actor":"yjaaidi","Number":"29178","RawContent":null,"Title":"Streamlining the migration experience","State":"open","Body":"### Command\n\nupdate\n\n### Description\n\nI might be missing something but it seems to me that Angular provides three kinds of \"migrations\":\n\n- **mandatory** migrations (e.g. `update-workspace-config`)\n- **optional** migrations (e.g. `use-application-builder`)\n- \"**manual** migrations\" implemented as schematics (e.g. `signal-input-migration`)\n\nWhile everything works perfectly, like Swiss clocks, the CLI could provide a more unified experience to thwart the following limitations :\n- users have to run `ng update` to list which packages could be updated before running the same command with the packages they want to update\n- to run optional migrations later, users have to run `ng update --migrate-only --from [previous_version]`\n- to list \"manual migrations\", users have to run `ng g @angular/core: --help`\n- there is no built-in way to implement a \"check\" CI step that prevents making changes with code that should have been migrated (e.g. running migrations and checking that the output is `Nothing to be done.`)\n\n\n\n### Describe the solution you'd like\n\nIt would be nice if `ng update` could:\n- merge both optional and \"manual migrations\" / migration schematics concepts\n- have a mode that migrates all packages that can be migrated\n- run migrations without interaction or by only prompting users if the codebase contains code that should be migrated (i.e. after running [tsurge's analyze phase](https://github.com/angular/angular/blob/3d86c586dc73a426f7bda45472a6e2c1609a141b/packages/core/schematics/utils/tsurge/migration.ts#L19) for migrations using tsurge )\n- have a \"check\" mode that tells the user if the codebase contains code that Angular could have migrated. This would make it easier to implement a \"check\" CI step that prevents making changes that should have been migrated\n\n\nHopefully, this should reduce the cognitive load for users.\n\nIt would be nice also to consider Nx compatibility. Right now, Nx does not have an \"optional\" migration concept so the `optional` flag is ignored.\nAs an additional input, here is how Nx handles migration opt-outs: https://nx.dev/recipes/tips-n-tricks/advanced-update\n\n### Describe alternatives you've considered\n\nProvide a more intuitive command than `ng g @angular/core: --help` to list all available migration schematics.\nMaybe `ng update` could list them.","Url":"https://github.com/angular/angular-cli/issues/29178","RelatedDescription":"Open issue \"Streamlining the migration experience\" (#29178)"},{"Id":"2748804606","IsPullRequest":true,"CreatedAt":"2024-12-18T21:45:37","Actor":"dgp1130","Number":"29176","RawContent":null,"Title":"docs: release notes for the v19.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29176","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.6 release\" (#29176)"},{"Id":"2748777082","IsPullRequest":true,"CreatedAt":"2024-12-18T21:43:52","Actor":"dgp1130","Number":"29175","RawContent":null,"Title":"Bump version to \"v19.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29175","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.6\" with changelog.\" (#29175)"},{"Id":"2746895440","IsPullRequest":true,"CreatedAt":"2024-12-18T18:05:35","Actor":"angular-robot","Number":"29172","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.5.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | minor | `v4.4.3` -> `v4.5.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.5.0`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.5.0)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.3...v4.5.0)\n\n#### What's Changed\n\n-   fix: deprecated `Node.js` version in action by [@&#8203;hamirmahal](https://redirect.github.com/hamirmahal) in [https://github.com/actions/upload-artifact/pull/578](https://redirect.github.com/actions/upload-artifact/pull/578)\n-   Add new `artifact-digest` output by [@&#8203;bdehamer](https://redirect.github.com/bdehamer) in [https://github.com/actions/upload-artifact/pull/656](https://redirect.github.com/actions/upload-artifact/pull/656)\n\n#### New Contributors\n\n-   [@&#8203;hamirmahal](https://redirect.github.com/hamirmahal) made their first contribution in [https://github.com/actions/upload-artifact/pull/578](https://redirect.github.com/actions/upload-artifact/pull/578)\n-   [@&#8203;bdehamer](https://redirect.github.com/bdehamer) made their first contribution in [https://github.com/actions/upload-artifact/pull/656](https://redirect.github.com/actions/upload-artifact/pull/656)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.3...v4.5.0\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNjIuNiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29172","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.5.0\" (#29172)"},{"Id":"2746893241","IsPullRequest":true,"CreatedAt":"2024-12-18T18:05:25","Actor":"angular-robot","Number":"29171","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `66a65d8` -> `24645ad` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `b788089` -> `db158f9` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a09ac38` -> `23a3f5d` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `696e76b` -> `1e48cf0` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `e39c94d` -> `82ca131` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `c6170b1` -> `55fec22` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `314bca4` -> `8c3ca7a` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `3d700f6` -> `b399faf` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `719b887` -> `0492b3f` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `efe394e` -> `f4d8d35` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `d733ef3` -> `f90508c` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `0eafbe3` -> `ac49989` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `71a76b4` -> `8212e68` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1aeefed` -> `a7f5e0c` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `b4fb153` -> `74d7d9d` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `3b278e5` -> `dc95506` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `9f2eff3` -> `18660ab` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `bffd99e` -> `8561180` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `ce0ec33` -> `f000c32` |\n| angular/dev-infra | action | digest | `2e0abc2` -> `36b7540` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNjIuNiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29171","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29171)"},{"Id":"2747213364","IsPullRequest":false,"CreatedAt":"2024-12-18T09:02:06","Actor":"fmalcher","Number":"29173","RawContent":null,"Title":"SSG/Prerendering: Allow generating foo.html instead of foo/index.html","State":"open","Body":"### Description\n\nAngular's Prerendering puts nested routes into a subfolder with `index.html`:\n*=> Route `blog/myslug` becomes `blog/myslug/index.html`*\n\n**The web server adds a trailing slash (for the folder) which is then removed by the Angular router, and it leads to an initial redirect.**\n\n\n### Describe the solution you'd like\n\nSome static site generators allow to create a flat structure instead with no subfolder:\n*=> Route `blog/myslug` becomes `blog/myslug.html`*\n\n**Proposed solution:**\n- Output `myslug/index.html` by default, it is the most compatible output that works on each and every web server\n- add an option for flat output (`myslug.html`) that can be used if I know my web server supports this\n\n\n### Context\n\n- Jekyll always outputs `myslug.html`\n- [Nuxt v2 has an option](https://nuxt.com/deploy/cloudflare#route-matching)\n- [Next.js has an option](https://nextjs.org/docs/app/api-reference/config/next-config-js/trailingSlash)\n\nMost cloud hosting providers allow to serve `myslug.html` under `myslug`:\n- GitHub Pages\n- Cloudflare Pages\n- [Firebase Hosting](https://firebase.google.com/docs/hosting/full-config#control_html_extensions)\n- [Vercel](https://vercel.com/docs/projects/project-configuration#cleanurls)\n- [Netlify](https://docs.netlify.com/routing/redirects/redirect-options/#trailing-slash)\n\n\nFurther read on trailing slash and framework/provider support: https://bjornlu.com/blog/trailing-slash-for-frameworks","Url":"https://github.com/angular/angular-cli/issues/29173","RelatedDescription":"Open issue \"SSG/Prerendering: Allow generating foo.html instead of foo/index.html\" (#29173)"},{"Id":"2746763711","IsPullRequest":false,"CreatedAt":"2024-12-18T04:49:46","Actor":"kjteh","Number":"29170","RawContent":null,"Title":"Unexpected behavior when running ng serve with \"npm link\"","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n### Background: \n\nI am currently developing a library (my-library) using ng-packagr with multiple secondary entry points. I also have another repo (my-application) that depends on the library. For setting up a local development environment, I am using `npm link` to link `dist/lib-a` to the `my-application` repo, running `ng watch` in `lib-a` and `ng serve` in `my-application` when performing development. \n\nI knew that in order to make `ng serve` detect the code changes from the linked lib-a, I need to do following: \n- In angular.json, specify `architect.build.configurations.development.preserveSymlink: true`\n- In tsconfig.json, define the paths property (define prebundle.exclude: \"lib-a\" in angular.json is not helpful, cause it doesnt support glob pattern to match all of my library's sub-entries): \n```\n\"paths\": {\n      \"lib-a\": [\"./node_modules/lib-a\"],\n      \"lib-a/*\": [\"./node_modules/lib-a/*\"],\n    },\n```\n\nIn my-library (lib-a), I have these 2 sub-entry points, component-y and service-x. Basically the component-y depends on service-x to show some data that is getting from the token that injected in service-x. In my-application (app.config.ts), I will provide the value of the token. \n\nservice-x\n```\nexport const X_TOKEN = new InjectionToken('X_TOKEN');\n\n@Injectable({ providedIn: 'root' })\nexport class ServiceX {\n    myXToken = inject(X_TOKEN);\n} \n\n```\n\ncomponent-y\n```\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: \"component-y\",\n    template: \"<p>lib-a-component works! {{ myServiceX.myXToken}}</p>\"\n})\nexport class ComponentY {\n    protected myServiceX = inject(ServiceX);\n} \n```\n\nIn my-application (app.config.ts)\n```\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    { provide: X_TOKEN, useValue: 'OTHER_VALUE'},\n    provideRouter(routes)\n  ]\n};\n```\n\n### Actual Issue\nEverything is working fine when it is being built or serve in `my-library`. \n**_However, in `my-application`, the behavior is not working as I expected when running with `ng serve`._** \nIt produces following error when I navigate to the page that using the component-y: \n\n```\nERROR NullInjectorError: R3InjectorError(Environment Injector)[_ServiceX -> InjectionToken X_TOKEN -> InjectionToken X_TOKEN]: \n  NullInjectorError: No provider for InjectionToken X_TOKEN!\n```\n\nObservations: \n- If I remove the paths property in tsconfig, the null injector error is not observed in the next following `ng serve`.\n- I also tested the built files that generated from ng build (development/production) in my-application with angular-http-server. Everything is working fine. \n- The above issue happens in Angular 18 as well. \n\n\n\n### Expected behavior:  \nRunning ng serve with npm link library should behave the same as running ng serve with library that installed using npm install.\nI suspect this is a bug because I cant reproduce this in the codes that generated in ng build (preserveSymlink is specified also). \n\n\n\n### Other Questions: \n1. Can we just define prebundle.exclude: [\"lib-a\"] instead of [\"lib-a/component-y\", \"lib-a/service-x\"] ? Currently, if there is any code changes done in the sub-entries, it wont detect as a change if we define as [\"lib-a\"]. As an alternative, I am doing it now in tsconfig instead.\n2. Is it valid to provide the X_TOKEN value in app.config, where the token will be injected in a root service (ServiceX)? I assume provide token in app.config is the same as providedIn: 'root' and it should not cause any race-condition issue that causes the root service not able to inject the token.\n\n\nThanks and appreciate your help on this.  \n\n### Minimal Reproduction\n\n\nmy-library: \nhttps://github.com/kjteh/my-library-npm-link\n\nmy-application: \nhttps://github.com/kjteh/my-application-npm-link\n\nSteps: \n1. In my-library-npm-link, run `npm run watch `\n2. cd to dist/lib-a, run `npm link`\n3. In my-application-npm-link, run `npm link lib-a --save`\n4. Run `ng serve` in my-application-npm-link\n5. Go to localhost:4200/pagez \n6. NullInjector error is shown in the console. \n\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.5\nNode: 18.20.4\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.5\n@angular-devkit/build-angular   19.0.5\n@angular-devkit/core            19.0.5\n@angular-devkit/schematics      19.0.5\n@angular/cli                    19.0.5\n@schematics/angular             19.0.5\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29170","RelatedDescription":"Open issue \"Unexpected behavior when running ng serve with \"npm link\"\" (#29170)"},{"Id":"2745670053","IsPullRequest":true,"CreatedAt":"2024-12-17T21:28:38","Actor":"clydin","Number":"29169","RawContent":null,"Title":"fix(@angular-devkit/architect): avoid Node.js resolution for relative builder schema","State":"closed","Body":"To avoid the need to perform Node.js resolution for the typical case of a relative builder schema, a check is now performed to determine if a schema path within the build manifest appears to be relative.","Url":"https://github.com/angular/angular-cli/pull/29169","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/architect): avoid Node.js resolution for relative builder schema\" (#29169)"},{"Id":"2745589363","IsPullRequest":true,"CreatedAt":"2024-12-17T17:40:18","Actor":"alan-agius4","Number":"29168","RawContent":null,"Title":"ci: restore `pnpm-lock.yaml` that was updated by renovate","State":"closed","Body":"Frce this fill to be generated by the tooling\r\n","Url":"https://github.com/angular/angular-cli/pull/29168","RelatedDescription":"Closed or merged PR \"ci: restore `pnpm-lock.yaml` that was updated by renovate\" (#29168)"},{"Id":"2745444508","IsPullRequest":true,"CreatedAt":"2024-12-17T16:50:54","Actor":"josephperrott","Number":"29167","RawContent":null,"Title":"ci: force post upgrade task command for syncing pnpm lock file to exit successfully","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29167","RelatedDescription":"Closed or merged PR \"ci: force post upgrade task command for syncing pnpm lock file to exit successfully\" (#29167)"},{"Id":"2745334277","IsPullRequest":true,"CreatedAt":"2024-12-17T16:47:09","Actor":"devversion","Number":"29166","RawContent":null,"Title":"More migration work for `rules_js`","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29166","RelatedDescription":"Closed or merged PR \"More migration work for `rules_js`\" (#29166)"},{"Id":"2745279605","IsPullRequest":true,"CreatedAt":"2024-12-17T15:47:47","Actor":"alan-agius4","Number":"29165","RawContent":null,"Title":"ci: update `yarn` command","State":"closed","Body":"This command is not compatible with Yarn 4.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29165","RelatedDescription":"Closed or merged PR \"ci: update `yarn` command\" (#29165)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2751680153","IsPullRequest":false,"CreatedAt":"2024-12-20T00:48:59","Actor":"atsjo","Number":"30220","RawContent":null,"Title":"Circular dependency in DI detected for ChangeDetectionScheduler in 19.0.4","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.3\n\n### Description\n\nI use provideAnimationsAsync(), and with the the latest 19.0.4, the app breaks with Circular dependency in DI detected error... If I switch to using provideAnimations() it works fine...\n\n### Reproduction\n\nRun/debug project with angular 19.0.5, angular-cli 19.0.6 and cdk/material 19.0.4, while using provideAnimationsAsync()\n\n\n### Expected Behavior\n\nWorks as in 19.0.3\n\n### Actual Behavior\n\nErrors with:\n    at throwCyclicDependencyError (core.mjs:969:9)\n    at R3Injector.hydrate (core.mjs:2277:9)\n    at R3Injector.get (core.mjs:2160:23)\n    at injectInjectorOnly (core.mjs:1100:36)\n    at ÉµÉµinject (core.mjs:1106:40)\n    at inject (core.mjs:1191:10)\n    at <instance_members_initializer> (async.mjs:19:15)\n    at new _AsyncAnimationRendererFactory (async.mjs:30:3)\n    at Object.useFactory (async.mjs:285:14)\n    at Object.factory (core.mjs:2377:32)\n\n### Environment\n\nnx 20.2.2\nangular 19.0.5\nangular cli 19.0.6\ncdk/material 19.0.4\n","Url":"https://github.com/angular/components/issues/30220","RelatedDescription":"Open issue \"Circular dependency in DI detected for ChangeDetectionScheduler in 19.0.4\" (#30220)"},{"Id":"2750955970","IsPullRequest":true,"CreatedAt":"2024-12-19T17:02:47","Actor":"angular-robot","Number":"30219","RawContent":null,"Title":"build: update angular shared dev-infra code to e8ee8c5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| angular/dev-infra | action | digest | `db91da4` -> `e8ee8c5` |\n| dev-infra | http_archive | digest | `9bc16c6` -> `e8ee8c5` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/components/pull/30219","RelatedDescription":"Open PR \"build: update angular shared dev-infra code to e8ee8c5\" (#30219)"},{"Id":"2748753661","IsPullRequest":true,"CreatedAt":"2024-12-19T16:49:04","Actor":"kseamon","Number":"30215","RawContent":null,"Title":"perf(cdk-experimental/column-resize): Use ResizeObserver to avoid layâ€¦","State":"closed","Body":"â€¦out thrashing","Url":"https://github.com/angular/components/pull/30215","RelatedDescription":"Closed or merged PR \"perf(cdk-experimental/column-resize): Use ResizeObserver to avoid layâ€¦\" (#30215)"},{"Id":"2750668994","IsPullRequest":true,"CreatedAt":"2024-12-19T15:28:36","Actor":"andrewseguin","Number":"30218","RawContent":null,"Title":"Sync missing commits","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30218","RelatedDescription":"Closed or merged PR \"Sync missing commits\" (#30218)"},{"Id":"2744996031","IsPullRequest":false,"CreatedAt":"2024-12-19T15:10:44","Actor":"smil-thakur","Number":"30196","RawContent":null,"Title":"bug(COMPONENT): Sort Header","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nWhen focusing on sort header using \"tab\" key previously on version 18 the sort headers were visible with less opacity but on version 19 the header icons are not visible\n\nold;:\n![Image](https://github.com/user-attachments/assets/a430931f-32d9-4327-a772-d9f8676c6578)\n\nnew:\n![Image](https://github.com/user-attachments/assets/b0b26a2c-8fd0-4c64-b653-160396472beb)\n\nas you can see on new one the header icons not visible on focus\n\n\n\n### Reproduction\n\nhttps://material.angular.io/components/sort/overview\n\ncheck over here and compare with\n\nhttps://v18.material.angular.io/components/sort/overview\n\n### Expected Behavior\n\nexpected behavior should be sort icon should be visible with some opacity on focus and on click or enter press it should be visible with full opacity\n\n### Actual Behavior\n\nsort icon is not at all visible on focus\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\n","Url":"https://github.com/angular/components/issues/30196","RelatedDescription":"Closed issue \"bug(COMPONENT): Sort Header\" (#30196)"},{"Id":"2749593182","IsPullRequest":true,"CreatedAt":"2024-12-19T15:10:42","Actor":"crisbeto","Number":"30217","RawContent":null,"Title":"fix(material/sort): show arrow on focus","State":"closed","Body":"Fixes that the sort header wasn't showing the arrow when it's focused.\r\n\r\nFixes #30196.","Url":"https://github.com/angular/components/pull/30217","RelatedDescription":"Closed or merged PR \"fix(material/sort): show arrow on focus\" (#30217)"},{"Id":"2749400489","IsPullRequest":false,"CreatedAt":"2024-12-19T08:23:14","Actor":"smil-thakur","Number":"30216","RawContent":null,"Title":"bug(Paginator): disabled paginator icon focues","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nif the button for pagination is disabled it should not be focused using \"tab\" key, on material 19 upgrade disabled pagination button is focusable which is not expected\n\nv19:\n![Image](https://github.com/user-attachments/assets/618eb5a8-a73c-4ae0-a6d0-9fcf5f526b7d)\n\nv18:\n\n![Image](https://github.com/user-attachments/assets/52fd008c-1643-4691-bf4f-35c4a66b6f54)\n\n\n### Reproduction\n\nSteps to reproduce:\n1. https://material.angular.io/components/paginator/overview go here press tab key and see disabled pagination button is focusable\n2.\n\n\n### Expected Behavior\n\nit should be focusable and should be skipped like on\nhttps://v18.material.angular.io/components/paginator/overview\n\n### Actual Behavior\n\nthe disabled button of pagination is not skipped and is focused\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System: windows\n","Url":"https://github.com/angular/components/issues/30216","RelatedDescription":"Closed issue \"bug(Paginator): disabled paginator icon focues\" (#30216)"},{"Id":"2748521612","IsPullRequest":true,"CreatedAt":"2024-12-19T06:34:28","Actor":"alexeagle","Number":"30213","RawContent":null,"Title":"build: point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for #30208","Url":"https://github.com/angular/components/pull/30213","RelatedDescription":"Closed or merged PR \"build: point to the new material.angular.io workspace\" (#30213)"},{"Id":"2748609492","IsPullRequest":true,"CreatedAt":"2024-12-18T19:35:29","Actor":"kseamon","Number":"30214","RawContent":null,"Title":"perf(material/tooltip): Tiny but measurable optimization to MatTooltiâ€¦","State":"open","Body":"â€¦p construction. Defer hooking up to directionality changes until overlay is created.","Url":"https://github.com/angular/components/pull/30214","RelatedDescription":"Open PR \"perf(material/tooltip): Tiny but measurable optimization to MatTooltiâ€¦\" (#30214)"},{"Id":"2748511957","IsPullRequest":true,"CreatedAt":"2024-12-18T19:09:17","Actor":"crisbeto","Number":"30212","RawContent":null,"Title":"Roll back event changes","State":"closed","Body":"Rolls back the changes from https://github.com/angular/components/pull/30195, because it broke some internal clients.","Url":"https://github.com/angular/components/pull/30212","RelatedDescription":"Closed or merged PR \"Roll back event changes\" (#30212)"},{"Id":"2748509832","IsPullRequest":true,"CreatedAt":"2024-12-18T18:53:39","Actor":"amysorto","Number":"30211","RawContent":null,"Title":"Bump version to \"v19.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30211","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.3\" with changelog.\" (#30211)"},{"Id":"2748493114","IsPullRequest":true,"CreatedAt":"2024-12-18T18:48:49","Actor":"alexeagle","Number":"30210","RawContent":null,"Title":"build(bazel): point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for #30208","Url":"https://github.com/angular/components/pull/30210","RelatedDescription":"Closed or merged PR \"build(bazel): point to the new material.angular.io workspace\" (#30210)"},{"Id":"2748445847","IsPullRequest":true,"CreatedAt":"2024-12-18T18:36:11","Actor":"alexeagle","Number":"30209","RawContent":null,"Title":"build(bazel): point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for https://github.com/angular/components/pull/30208","Url":"https://github.com/angular/components/pull/30209","RelatedDescription":"Closed or merged PR \"build(bazel): point to the new material.angular.io workspace\" (#30209)"},{"Id":"2748399370","IsPullRequest":true,"CreatedAt":"2024-12-18T17:44:06","Actor":"alexeagle","Number":"30208","RawContent":null,"Title":"chore: merge material.angular.io","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30208","RelatedDescription":"Closed or merged PR \"chore: merge material.angular.io\" (#30208)"},{"Id":"2748365433","IsPullRequest":true,"CreatedAt":"2024-12-18T17:21:00","Actor":"amysorto","Number":"30207","RawContent":null,"Title":"docs: release notes for the v19.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30207","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.4 release\" (#30207)"},{"Id":"2748362757","IsPullRequest":true,"CreatedAt":"2024-12-18T17:19:06","Actor":"amysorto","Number":"30206","RawContent":null,"Title":"Bump version to \"v19.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30206","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.4\" with changelog.\" (#30206)"},{"Id":"2747797277","IsPullRequest":true,"CreatedAt":"2024-12-18T17:11:00","Actor":"singhimalaya","Number":"30204","RawContent":null,"Title":"docs(material/components): fix typos in material components","State":"closed","Body":"This pr fixes a similar typo in below material components:\r\n\r\n1. `autocomplete`\r\n2. `chips`\r\n3. `list`\r\n4. `select`\r\n\r\n### Issue\r\nA typo \"**Wheter**\" in above mentioned components.\r\n\r\n### Fix\r\n\r\nUpdated \"**Wheter**\" to \"**Whether**\".","Url":"https://github.com/angular/components/pull/30204","RelatedDescription":"Closed or merged PR \"docs(material/components): fix typos in material components\" (#30204)"},{"Id":"2745529081","IsPullRequest":true,"CreatedAt":"2024-12-18T17:03:26","Actor":"andrewseguin","Number":"30198","RawContent":null,"Title":"fix(material/sort): avoid center align for sort header","State":"closed","Body":"Copied with #27494 which has failing CLA","Url":"https://github.com/angular/components/pull/30198","RelatedDescription":"Closed or merged PR \"fix(material/sort): avoid center align for sort header\" (#30198)"},{"Id":"2746974827","IsPullRequest":true,"CreatedAt":"2024-12-18T15:18:25","Actor":"crisbeto","Number":"30201","RawContent":null,"Title":"refactor(multiple): replace fromEvent usages","State":"closed","Body":"Replaces all of our usages of the rxjs `fromEvent` with direct event listeners going through the renderer. This has a few benefits:\r\n* In most cases it made our code simpler and easier to follow.\r\n* By going through the renderer, other tooling can hook into it (e.g. the tracing service).\r\n* It reduces our reliance on rxjs.\r\n\r\nI also ended up cleaning up the fragile testing setup in `cdk/menu` which would've broken any time we introduce a new `inject` call.","Url":"https://github.com/angular/components/pull/30201","RelatedDescription":"Closed or merged PR \"refactor(multiple): replace fromEvent usages\" (#30201)"},{"Id":"2747499110","IsPullRequest":true,"CreatedAt":"2024-12-18T14:06:26","Actor":"num13ru","Number":"30202","RawContent":null,"Title":"docs(material/theming): fix typo in custom theme guide","State":"closed","Body":"#### Summary:\r\nThis PR fixes a syntax error in the usage of the `mat.theme` mixin in the SCSS files of the project. The error occurred due to incorrect wrapping of the Sass map passed as an argument to the `mat.theme` mixin. Specifically, the map was not correctly enclosed in an additional pair of parentheses, leading to a compilation error.\r\n\r\n```\r\nâœ˜ [ERROR] expected \")\".\r\n   â•·\r\n36 â”‚         color: (\r\n```\r\n\r\n#### Fix:\r\n- Wrapped the theme configuration map inside an additional set of parentheses for proper syntax in the `@include mat.theme()` function.","Url":"https://github.com/angular/components/pull/30202","RelatedDescription":"Closed or merged PR \"docs(material/theming): fix typo in custom theme guide\" (#30202)"},{"Id":"2747850020","IsPullRequest":false,"CreatedAt":"2024-12-18T13:39:21","Actor":"sdedieu","Number":"30205","RawContent":null,"Title":"bug(table): Specifying max-width with % on a table column doesn't work","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello ðŸ‘‹\n\nIt might be a duplicated issue, but I couldn't find the exact same in the previous ones....\n\nI'd like to specify a `max-width: 20%` on a table column. However it does not seems work.\n\nWhat I'm I missing ? \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/eqepaugy-ht92gcfb?file=src%2Fexample%2Ftable-basic-example.html\nSteps to reproduce:\n1. Open the StackBlitz\n2. Resize the Symbol column (it is not supposed to be wider than 5%, yet it can)\n\n\n### Expected Behavior\n\nBeing able to specify a `max-width` in `%` for some columns.\n\n### Actual Behavior\n\n`max-width` in `%` on `<table mat-table>` columns are not taken into account.\n\n### Environment\n\n- Angular: 19, 18, 17, 16, 15\n- CDK/Material: 19, 18, 17, 16, 15\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac\n","Url":"https://github.com/angular/components/issues/30205","RelatedDescription":"Open issue \"bug(table): Specifying max-width with % on a table column doesn't work\" (#30205)"},{"Id":"2747607622","IsPullRequest":false,"CreatedAt":"2024-12-18T11:52:43","Actor":"reuse-ay","Number":"30203","RawContent":null,"Title":"bug(COMPONENT): Inconsistency in behavior of a[mat-button] and a[mat-menu-item] when disabled","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis may be a feature request.\n\n\nWhen a[mat-button] is disabled, if you right-click it, the menu will be the normal one, but if you right-click a[mat-menu-item], the options for clicking a link will be displayed, and you can actually navigate to the page.\n\n\n\n### Reproduction\n\nhttps://github.com/reuse-ay/angular-mat-a.git\n\n### Expected Behavior\n\nWhen a[mat-menu-item] is disabled, I donâ€™t want the option for the link to be displayed.\n\n### Actual Behavior\n\noption for the link to be displayed.\n\n### Environment\n\n- Angular:19\n- CDK/Material:19\n- Browser(s):chrome\n- Operating System (e.g. Windows, macOS, Ubuntu):windows\n","Url":"https://github.com/angular/components/issues/30203","RelatedDescription":"Open issue \"bug(COMPONENT): Inconsistency in behavior of a[mat-button] and a[mat-menu-item] when disabled\" (#30203)"},{"Id":"2746735150","IsPullRequest":false,"CreatedAt":"2024-12-18T04:27:35","Actor":"diegoquirino","Number":"30200","RawContent":null,"Title":"bug(COMPONENT): MatSnackBar padding to the box shadow rendering a container with a custom background color","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nMatSnackBar padding to the box shadow rendering a container with a custom background color issue\n\n### Description\n\nThe MatSnackBar component in Angular Material 19 appears to have visual rendering issues related to adding padding to the box shadow with a container with a custom background color style.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ryes6wpj?file=src%2Fnotification%2Fnotification.component.ts\nSteps to reproduce:\n1. Trigger a MatSnackBar with a container with a custom background color style.\n2. Observe the component's visual rendering (as shown in the StackBlitz).\n\n\n### Expected Behavior\n\nThe MatSnackBar should render consistent shadow without visual padding from the message container with a custom background color style.\n\n### Actual Behavior\n\n- The snack bar's box shadow appears with padding from the message container with a custom background color style.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.3\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30200","RelatedDescription":"Open issue \"bug(COMPONENT): MatSnackBar padding to the box shadow rendering a container with a custom background color\" (#30200)"},{"Id":"2745659309","IsPullRequest":true,"CreatedAt":"2024-12-17T18:20:37","Actor":"andrewseguin","Number":"30199","RawContent":null,"Title":"docs: update system var prefix","State":"closed","Body":"System variables are prefixed with \"mat-sys\", not \"sys\" (this was the case in v18)\r\n\r\nCurrently the docs use the old prefix\r\n\r\n![image](https://github.com/user-attachments/assets/a0eda868-eb14-4d5e-83d5-32bf3467a825)\r\n","Url":"https://github.com/angular/components/pull/30199","RelatedDescription":"Closed or merged PR \"docs: update system var prefix\" (#30199)"},{"Id":"2742972594","IsPullRequest":true,"CreatedAt":"2024-12-17T17:42:31","Actor":"andrewseguin","Number":"30193","RawContent":null,"Title":"fix(material/table): set border none for header cells on last row","State":"closed","Body":"This affects tables that want to use a `th` element in each data row. The last row's header cell should not have a bottom border, similar to other data cells in the last row\r\n\r\nInspired by #27762 which cannot be merged due to missing CLA. \r\n\r\nFixes https://github.com/angular/components/issues/27731\r\n","Url":"https://github.com/angular/components/pull/30193","RelatedDescription":"Closed or merged PR \"fix(material/table): set border none for header cells on last row\" (#30193)"},{"Id":"2744528972","IsPullRequest":true,"CreatedAt":"2024-12-17T17:31:28","Actor":"crisbeto","Number":"30195","RawContent":null,"Title":"refactor(multiple): use renderer for manually-bound events with options","State":"closed","Body":"Switches all manually-bound event handlers that were passing options to go through the renderer.","Url":"https://github.com/angular/components/pull/30195","RelatedDescription":"Closed or merged PR \"refactor(multiple): use renderer for manually-bound events with options\" (#30195)"},{"Id":"2745015894","IsPullRequest":false,"CreatedAt":"2024-12-17T13:57:28","Actor":"goyaltushar92","Number":"30197","RawContent":null,"Title":"feat(mat-menu): Add content menu trigger for mat menu","State":"open","Body":"### Feature Description\n\nCurrently there is not directive to open mat-menu using context menu, I think we should add `MatCotextMenuTriggerFor` directive.\n\n### Use Case\n\nit will provide inbuilt functionality for enabling context menu","Url":"https://github.com/angular/components/issues/30197","RelatedDescription":"Open issue \"feat(mat-menu): Add content menu trigger for mat menu\" (#30197)"},{"Id":"2744308915","IsPullRequest":true,"CreatedAt":"2024-12-17T08:55:08","Actor":"endlacer","Number":"30194","RawContent":null,"Title":"[feat] drag start predicate","State":"open","Body":"## Feature\r\n### Problem Statement\r\nCurrently, the CdkDrag directive doesn't provide a way to conditionally prevent drag operations from starting based on the initial mouse/touch event. This makes it impossible to implement complex drag start conditions, such as only allowing drags from specific elements or under certain event conditions.\r\nAdd a new input [cdkDragStartPredicate] to the CdkDrag directive that accepts a predicate function to determine whether a drag operation should start.\r\n### Proposed API\r\n```typescript\r\n@Input('cdkDragStartPredicate')\r\ndragStartPredicate: ((event: TouchEvent | MouseEvent) => boolean) | undefined;\r\n```\r\n### Example Usage\r\n_HTML:_\r\n```html\r\n<div cdkDrag [cdkDragStartPredicate]=\"myDragStartPredicate\">\r\n  Draggable content\r\n  <input #input>\r\n</div>\r\n```\r\n_component:_\r\n```typescript\r\nmyDragStartPredicate(event: TouchEvent | MouseEvent): boolean {\r\n  const element = event.target as HTMLElement;\r\n  // Check if the target or any of its parents is an input element\r\n  return !element.closest('input, textarea, [contenteditable=\"true\"]');\r\n}\r\n```\r\nSee: https://stackblitz.com/edit/wc3rt4?file=src%2Fexample%2Fcdk-drag-drop-sorting-example.css\r\n\r\n# Details\r\n### Benefits\r\n- More granular control over drag initialization\r\n- Better integration with custom UI patterns\r\n- Improved accessibility by allowing precise control over drag triggers\r\n- Reduced need for workarounds using multiple directives\r\n- \r\n### Implementation Notes\r\n- The predicate should be called before the drag sequence begins\r\n- Return true to allow the drag to start, false to prevent it\r\n- Should work with both mouse and touch events\r\n- Should integrate well with existing cdkDragHandle functionality\r\n- \r\n### Related Issues\r\ncloses: https://github.com/angular/components/issues/30101\r\nalso resolve this issue: https://github.com/angular/components/issues/14117\r\n\r\n### Use Case\r\n\r\n- Prevent drags from starting on specific child elements\r\n- Implement custom handle logic without using cdkDragHandle\r\n- Add conditional drag start behavior based on application state\r\n- Implement complex touch gesture requirements\r\n\r\n","Url":"https://github.com/angular/components/pull/30194","RelatedDescription":"Open PR \"[feat] drag start predicate\" (#30194)"},{"Id":"2742954649","IsPullRequest":false,"CreatedAt":"2024-12-16T20:26:55","Actor":"tayambamwanza","Number":"30192","RawContent":null,"Title":"docs-bug(COMPONENT): No examples of migrating from material 2 to material 3 color variants for buttons.","State":"closed","Body":"### Documentation Feedback\n\nThe docs introduce a new way of working with colors and theming, I've managed to work out most of it and the system is simpler with one exception, I'm finding a lot of friction in figuring out how to get similar behaviour for configuring button colors as in the old version.\n\nPreviously it was possible to just set color=\"variant\" but now after going through documentation and looking it up on google I still haven't quite figured out how to get most of the old behaviour back, the best I could manage was a warning color using tertiary but I feel like I'm missing a simpler solution, how do I set secondary and error/danger colors?\n\nI used command and class below:\n\n```\n@angular/material:theme-color -- --primary-color '#7AA802' --secondary-color '#276667' --tertiary-color '#FF9800' --neutral-color '' --include-high-contrast\n```\n\n```\n.warning-button {\n  @include mat.button-theme(theme.$tertiary-palette)\n}\n\n```\nI think it might help to have more examples in the docs of how to do this correctly, maybe just using the buttons page as the prime example would really help.\n\nI wasn't expecting to get stuck here, I appreciate all the work, I also think it's understandable something that took setting one property I now can't figure out after spending a decent amount of time looking it up, there are probably some improvements that can be made.\n\nAlso a central guide/api page for almost all the various mixins/functions that are available might help.\n\n Thank you.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/button/overview","Url":"https://github.com/angular/components/issues/30192","RelatedDescription":"Closed issue \"docs-bug(COMPONENT): No examples of migrating from material 2 to material 3 color variants for buttons.\" (#30192)"},{"Id":"2742904062","IsPullRequest":false,"CreatedAt":"2024-12-16T16:52:54","Actor":"michaelurban","Number":"30191","RawContent":null,"Title":"bug(cdkDrag): Issue scrolling/reordering \"reversed\" lists","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFor design/UX reasons, I'm using `cdk/drag-drop` on a list with `flex-direction: row-reverse` applied. Scrolling does not trigger while dragging among other issues. \n\nCan we get a \"reversed\" option to support this use case?\n\n### Reproduction\n\nSteps to reproduce:`\n1. Apply `display: flex; flex-direction: row-reverse;`  to a `cdkDropList`\n2. Try to drag+scroll an element\n\n\n### Expected Behavior\n\nIt would be nice if indexes and scroll behavior could work intuitively by adding a `reversed` option\n\n### Actual Behavior\n\nThe drag will not scroll the `cdkDropList`\n\n### Environment\n\n- Angular: v19.0.0\n- CDK/Material: v19.0.0\n- Browser(s): All\n- Operating System: Ubuntu\n","Url":"https://github.com/angular/components/issues/30191","RelatedDescription":"Open issue \"bug(cdkDrag): Issue scrolling/reordering \"reversed\" lists\" (#30191)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-20T03:30:02.7563253Z","RunDurationInMilliseconds":1941}