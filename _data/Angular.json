{"Data":{"Angular-Issues":{"Issues":[{"Id":"2921925383","IsPullRequest":true,"CreatedAt":"2025-03-15T09:10:57","Actor":"angular-robot","Number":"60405","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `aaebd30` -> `15afd09` |\n| angular/dev-infra | action | digest | `85eab90` -> `099af4b` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60405","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#60405)"},{"Id":"2921896245","IsPullRequest":true,"CreatedAt":"2025-03-15T08:25:04","Actor":"crisbeto","Number":"60404","RawContent":null,"Title":"fix(core): include input name in error message","State":"open","Body":"Includes either the `debugName` or alias of an input in the error message about a value not being available.\r\n\r\nFixes #60199.\r\n","Url":"https://github.com/angular/angular/pull/60404","RelatedDescription":"Open PR \"fix(core): include input name in error message\" (#60404)"},{"Id":"2921116510","IsPullRequest":false,"CreatedAt":"2025-03-14T23:18:03","Actor":"moniuch","Number":"60402","RawContent":null,"Title":"Could `AbstractControl.reset()` adopt a new flag to also reset the `.defaultValue`?","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nRecently I had to build quite an extensive (reactive) form with the requirement of marking every single control whose value has been changed.\n\nFor example: if there was a `<select>` with a pristine value of `A`, and user changed it to `B` then it would of course be marked as dirty, but when the user then changed the value back to `A` - the control would get unmarked back to pristine - because there is no factual value difference. \n\nI initially thought I could get away by using `[class.is-changed]=\"control.value !== control.defaultValue\"`. \n\nThe **limitation** of `.defaultValue` however is that it is only populated during the control's construction and then exposed as **readonly**. That means that after the form submission we aren't able reassign the new `.defaultValue` without rebuilding the entire form for the sake of clearing the `is-changed` classes. Rebuilding the entire form wasn't something I wanted to do.\n\n### Proposed solution\n\nI thought the `.reset()` method on `AbstractControl` could have a flag to also reset `.defaultValue` of all the controls.\n\nIf that doesn't fit into how Angular team perceives the purpose of `.defaultValue` in the API, and wouldn't want to touch it, maybe we could have a new property (`.pristineValue` ?), also readonly, but such that **could** be affected by `.reset()`.\n\n### Intended usage examples\n\n1.\n\n```ts\nform.reset({\n  name: 'Saved name',\n  skills: [\n   {name: 'kayaking', level: 'amateur'},\n   {name: 'photography', level: 'pro'},\n ],\n wantsNewsletter: true,\n}, { resetPristine: true } )\n```\n\n2.\n\n```ts\nconst response = await api.saveForm(form.value);\nform.reset(response, { resetDefaultValues: true }); \n```\n\nor\n\n```ts\nconst response = await api.saveForm(form.value);\nform.reset(undefined, { resetDefaultValues: true }); \n```\n\n### Alternatives considered\n\nIt takes to code some directives in order to manually set up listeners. A bit costly and inefficient solution. The template usage:\n\n```html\n[class.is-changed]=\"control.value !== control.defaultValue\"`. \n```\n\nseems to be the most effective.\n","Url":"https://github.com/angular/angular/issues/60402","RelatedDescription":"Closed issue \"Could `AbstractControl.reset()` adopt a new flag to also reset the `.defaultValue`?\" (#60402)"},{"Id":"2921433376","IsPullRequest":true,"CreatedAt":"2025-03-14T22:49:09","Actor":"dgp1130","Number":"60403","RawContent":null,"Title":"refactor(devtools): fix reading `resolutionPath`","State":"open","Body":"Sometimes `forest` can be empty if the provided roots are empty, and was leading to a \"Cannot read `resolutionPath` of `undefined`\" error. Now we check the forest has a tree in it before looking up `resolutionPath`.","Url":"https://github.com/angular/angular/pull/60403","RelatedDescription":"Open PR \"refactor(devtools): fix reading `resolutionPath`\" (#60403)"},{"Id":"2920762107","IsPullRequest":true,"CreatedAt":"2025-03-14T20:07:02","Actor":"thePunderWoman","Number":"60396","RawContent":null,"Title":"WIP","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60396","RelatedDescription":"Closed or merged PR \"WIP\" (#60396)"},{"Id":"2921086745","IsPullRequest":true,"CreatedAt":"2025-03-14T19:10:22","Actor":"angular-robot","Number":"60401","RawContent":null,"Title":"build: pin actions/upload-artifact action to 4cec3d8","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | pinDigest |  -> `4cec3d8` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60401","RelatedDescription":"Open PR \"build: pin actions/upload-artifact action to 4cec3d8\" (#60401)"},{"Id":"2921049205","IsPullRequest":true,"CreatedAt":"2025-03-14T18:52:14","Actor":"angular-robot","Number":"60400","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/60400","RelatedDescription":"Open PR \"docs: update Angular CLI help [main]\" (#60400)"},{"Id":"2920443015","IsPullRequest":true,"CreatedAt":"2025-03-14T18:51:31","Actor":"devversion","Number":"60393","RawContent":null,"Title":"build: upload grpc remote logs for debugging","State":"closed","Body":"This should be helpful in figuring out why RBE is currently unstable.","Url":"https://github.com/angular/angular/pull/60393","RelatedDescription":"Closed or merged PR \"build: upload grpc remote logs for debugging\" (#60393)"},{"Id":"2921025125","IsPullRequest":true,"CreatedAt":"2025-03-14T18:39:42","Actor":"angular-robot","Number":"60398","RawContent":null,"Title":"build: update babel dependencies to v7.26.10","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | dependencies | patch | [`7.26.9` -> `7.26.10`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.26.9/7.26.10) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-generator)) | dependencies | patch | [`7.26.9` -> `7.26.10`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.26.9/7.26.10) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.26.10`](https://redirect.github.com/babel/babel/blob/HEAD/CHANGELOG.md#v72610-2025-03-11)\n\n[Compare Source](https://redirect.github.com/babel/babel/compare/v7.26.9...v7.26.10)\n\n##### :eyeglasses: Spec Compliance\n\n-   `babel-parser`\n    -   [#&#8203;17159](https://redirect.github.com/babel/babel/pull/17159) Disallow decorator in array pattern ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n\n##### :bug: Bug Fix\n\n-   `babel-parser`, `babel-template`\n    -   [#&#8203;17164](https://redirect.github.com/babel/babel/pull/17164) Fix: always initialize ExportDeclaration attributes ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n-   `babel-core`\n    -   [#&#8203;17142](https://redirect.github.com/babel/babel/pull/17142) fix: \"Map maximum size exceeded\" in deepClone ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n-   `babel-parser`, `babel-plugin-transform-typescript`\n    -   [#&#8203;17154](https://redirect.github.com/babel/babel/pull/17154) Update typescript parser tests ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n-   `babel-traverse`\n    -   [#&#8203;17151](https://redirect.github.com/babel/babel/pull/17151) fix: Should not evaluate vars in child scope ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n-   `babel-generator`\n    -   [#&#8203;17153](https://redirect.github.com/babel/babel/pull/17153) fix: Correctly generate `abstract override` ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n-   `babel-parser`\n    -   [#&#8203;17107](https://redirect.github.com/babel/babel/pull/17107) Fix source type detection when parsing TypeScript ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n-   `babel-helpers`, `babel-runtime`, `babel-runtime-corejs2`, `babel-runtime-corejs3`\n    -   [#&#8203;17173](https://redirect.github.com/babel/babel/pull/17173) Fix processing of replacement pattern with named capture groups ([@&#8203;mmmsssttt404](https://redirect.github.com/\\[mmmsssttt404]\\(https://github.com/mmmsssttt404\\)))\n\n##### :nail_care: Polish\n\n-   `babel-standalone`\n    -   [#&#8203;17158](https://redirect.github.com/babel/babel/pull/17158) Avoid warnings when re-bundling [@&#8203;babel/standalone](https://redirect.github.com/babel/standalone) with webpack ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n\n##### :house: Internal\n\n-   `babel-parser`\n    -   [#&#8203;17160](https://redirect.github.com/babel/babel/pull/17160) Left-value parsing cleanup ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60398","RelatedDescription":"Open PR \"build: update babel dependencies to v7.26.10\" (#60398)"},{"Id":"2920976388","IsPullRequest":true,"CreatedAt":"2025-03-14T18:16:49","Actor":"atscott","Number":"60397","RawContent":null,"Title":"fix(core): remove `rejectErrors` option encourages uncaught exceptions","State":"open","Body":"This commit removes the previously added `rejectErrors` option from `toSignal` which was meant to create similar behavior to what happens with unhandled errors in `AsyncPipe`.\r\n\r\nThis option promotes unhandled exceptions and attaches behaviors that we do not believe are desirable as an option offered by the framework:\r\n\r\n* Unhandled errors that are thrown lose the context of where the error ocurred. Throwing the error where the signal is read allows error handling to be performed at the signal's usage location\r\n* With this feature, the value of the signal remains set to the initial value or the previous successful value coming out of the `Observable`. We do not feel this is appropriate implicit behavior but should be an explicit choice by the application. Signals are built to represent state. When an observable stream is converted to a stateful representation, there should be a choice made about what state should be presented when an error occurs\r\n* If an error occurs but the signal value is never read in its error state, this is not an application state error that should result in an unhandled exception.\r\n* While Angular does not have error boundaries today, there is likely to be investigation in the near future to address increased risk of errors thrown from signals such as this in templates. Without pre-designing any specifics, it is possible that this type of feature would require the error to be thrown from the signal. We are subsequently not prepared to commit to stabilizing the `toSignal` API with the `rejectErrors` option and its current behavior.\r\n\r\nDevelopers that desire similar behavior to `rejectErrors` have several options, the simplest of which would be something similar to `toSignal(myStream.pipe(catchError(() => EMPTY)))`.\r\n","Url":"https://github.com/angular/angular/pull/60397","RelatedDescription":"Open PR \"fix(core): remove `rejectErrors` option encourages uncaught exceptions\" (#60397)"},{"Id":"2920726442","IsPullRequest":true,"CreatedAt":"2025-03-14T16:33:01","Actor":"JeanMeche","Number":"60395","RawContent":null,"Title":"Revert \"docs(docs-infra): temporary removal of `core/rxjs-interop` deâ€¦","State":"open","Body":"â€¦pendency (#60234)\"\r\n\r\nThis reverts commit fa712aede521578b050e71057918613d60182852.\r\n","Url":"https://github.com/angular/angular/pull/60395","RelatedDescription":"Open PR \"Revert \"docs(docs-infra): temporary removal of `core/rxjs-interop` deâ€¦\" (#60395)"},{"Id":"2920707839","IsPullRequest":true,"CreatedAt":"2025-03-14T16:27:05","Actor":"JeanMeche","Number":"60394","RawContent":null,"Title":"docs(docs-infra): Search results as HTML","State":"open","Body":"fixes #60384\r\n","Url":"https://github.com/angular/angular/pull/60394","RelatedDescription":"Open PR \"docs(docs-infra): Search results as HTML\" (#60394)"},{"Id":"2920397848","IsPullRequest":true,"CreatedAt":"2025-03-14T16:01:17","Actor":"thePunderWoman","Number":"60392","RawContent":null,"Title":"fix(core): execute timer trigger outside zone","State":"closed","Body":"This should prevent defer timers from impacting app stability by executing them outside of the zone, similar to other defer triggers. This should also affect `minimum` and `after` time values in placeholder and loading templates for defer blocks, as they use the same `TimerScheduler`.\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/60392","RelatedDescription":"Closed or merged PR \"fix(core): execute timer trigger outside zone\" (#60392)"},{"Id":"2920395007","IsPullRequest":true,"CreatedAt":"2025-03-14T14:39:22","Actor":"devversion","Number":"60391","RawContent":null,"Title":"build: revert bazel keepalive flag as it could be more aggressively aborting","State":"closed","Body":"We are currently still seeing RBE issues, but seemingly even more aggressively. This might be due to the new flag.","Url":"https://github.com/angular/angular/pull/60391","RelatedDescription":"Closed or merged PR \"build: revert bazel keepalive flag as it could be more aggressively aborting\" (#60391)"},{"Id":"2919786321","IsPullRequest":true,"CreatedAt":"2025-03-14T13:44:28","Actor":"crisbeto","Number":"60386","RawContent":null,"Title":"refactor(migrations): simplify integration of tsurge migrations into the CLI","State":"closed","Body":"Currently when we reuse a Tsurge migration is reused externally, there's some glue code that needs to be executed in a specific order. The code gets copied between the different migrations which is error-prone and means that bugs may have to be fixed several times.\r\n\r\nThese changes move the common steps out into a separate function so that only the migration-specific logic (mostly instantiation and logging) is left in the schematic.\r\n","Url":"https://github.com/angular/angular/pull/60386","RelatedDescription":"Closed or merged PR \"refactor(migrations): simplify integration of tsurge migrations into the CLI\" (#60386)"},{"Id":"2919951616","IsPullRequest":true,"CreatedAt":"2025-03-14T13:43:27","Actor":"alan-agius4","Number":"60387","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"See associated pull request for more information.\r\n\r\nCloses #59956 as a pr takeover, `@angular/build-tooling` has been rolled back as due to missing `@aspect_rules_js`.\r\n\r\n","Url":"https://github.com/angular/angular/pull/60387","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#60387)"},{"Id":"2920126609","IsPullRequest":false,"CreatedAt":"2025-03-14T13:30:57","Actor":"JuanseMastrangelo","Number":"60389","RawContent":null,"Title":"Proposal: Add Native Focus Support for Inputs in Angular Forms","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nCurrently, to set focus on an input associated with a FormControl, developers must resort to raw JavaScript/TypeScript methods (e.g., using nativeElement.focus()), which breaks the separation of concerns that Angular promotes. I propose introducing native focus support within Angular Forms so that developers can programmatically focus an input via a method like control.focus(), aligning with Angularâ€™s declarative and reactive patterns.\n\nMotivation:\n- Ease of Use: Enable developers to focus inputs programmatically without directly manipulating the DOM.\n- Consistency: Provide a declarative API that integrates naturally with both reactive and template-driven forms, avoiding ad hoc DOM manipulations.\n\n\n### Proposed solution\n\nImplementation Idea:\n\n- Introduce a method (e.g., focus()) on the FormControl that communicates the intent to focus the associated input.\n\n### Alternatives considered\n\n- The implementation should be fully backward compatible, without affecting the current behavior of Angular Forms.\n- Unit and integration tests must be added to cover various scenarios and prevent regressions.","Url":"https://github.com/angular/angular/issues/60389","RelatedDescription":"Closed issue \"Proposal: Add Native Focus Support for Inputs in Angular Forms\" (#60389)"},{"Id":"2920028521","IsPullRequest":false,"CreatedAt":"2025-03-14T12:01:17","Actor":"JustDoItSascha","Number":"60388","RawContent":null,"Title":"httpResource throws error when using an required input","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen I'm using httpResource like this\n\n```\nid = input.required<string>();\n\nresponse = httpResource(\n    `SOME_URL/${this.id()}`,\n);\n```\n\nthen I get this error:\n\n`NG0950: Input is required but no value is available yet.`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 19.2.2\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60388","RelatedDescription":"Closed issue \"httpResource throws error when using an required input\" (#60388)"},{"Id":"2918069858","IsPullRequest":true,"CreatedAt":"2025-03-14T10:15:32","Actor":"atscott","Number":"60377","RawContent":null,"Title":"refactor(router): Update to use early return to reduce nesting","State":"closed","Body":"Updates a switchTap body to use early return to reduce nesting\r\n","Url":"https://github.com/angular/angular/pull/60377","RelatedDescription":"Closed or merged PR \"refactor(router): Update to use early return to reduce nesting\" (#60377)"},{"Id":"2919779752","IsPullRequest":false,"CreatedAt":"2025-03-14T10:03:49","Actor":"IbenTesara","Number":"60385","RawContent":null,"Title":"Include whether the TouchChangedEvent was called with markAllAstouched","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nAngular 18 introduced the `events` Observable on the `AbstractControl`, allowing us to react to changes in several events, including the touched change. This is a big improvement, as previously it was pretty much impossible unless you overwrote the original markAsTouched.\n\nIn our forms package, [ngx-forms](https://www.npmjs.com/package/@studiohyperdrive/ngx-forms), this has been extremely useful. \n\nOur package provides a way to create individual independent form slices using the ControlValueAccessor approach. This allows us to for instance create an input component with an hour and a date field, but in our main form we will receive a single date string. This approach for us has been quite beneficial, and has allowed us to create multiple reusable flows within bigger complex applications where there are often complex fields that reoccur in multiple form flows. This way we have separation of concerns and we are able to provide consistency throughout the entire application.\n\nHowever, because these form slices are independent, the parent control has no information about the inner workings of the individual slices (as by design), so we had always struggled with keeping the form state in sync in between the fields.\n\nUntil thus-far, we had to manually overwrite the several of the `markAs` methods in order to sync this up; which has always been the less than ideal solution. The new `events` property vastly improves the flow for us and allows us to fix this issue in a much more clean way.\n\n_However_, we're missing an important piece of the puzzle. We're able to keep things in sync from the individual slices to the parent controls and vice versa. To avoid the parent updating the touched state of individual fields in a form slice, we had to build in certain checks. Those work great, but in some cases we do want to mark all individual fields of each independent form slice as  touched. That's a valid use-case, and wonderfully Angular has provided the `markAllAsTouched` method.\n\nHowever, both the `markAsTouched` and the `markAllAsTouched` method return the same `TouchedChangeEvent`, and therefor we cannot make a distinction between the two and our previously mentioned checks cannot be overwritten when needed.\n\nWe are in need of a way to differentiate between both of those methods in our package, but we assume that outside of our own use-case there probably are more use-cases that require said information.\n\n### Proposed solution\n\nWe suggest adding a third optional parameter to the TouchChangedEvent, called `all`, which is false by default. If a `AbstractControl` was then called with `markAllAsTouched`, we simply set `all` to true, allowing people to know that this TouchChangedEvent was called with the aforementioned method.\n\n### Alternatives considered\n\nThe alternatives considered here were:\n\n1. Not creating this issue and keep overwriting the `markAs` methods. This alternative is a workaround and we're honestly not a fan of the extra complexity it introduces.\n2. Creating a secondary touched event, called `TouchedAllChangedEvent`, but this could in turn break already existing implementations which we do not consider to be a good alternative either. We also think this isn't a good idea as it unnecessary adds events.","Url":"https://github.com/angular/angular/issues/60385","RelatedDescription":"Open issue \"Include whether the TouchChangedEvent was called with markAllAstouched\" (#60385)"},{"Id":"2919715314","IsPullRequest":false,"CreatedAt":"2025-03-14T09:33:21","Actor":"alan-agius4","Number":"60384","RawContent":null,"Title":"Docs: search results show encoded values","State":"open","Body":"### Describe the problem that you experienced\n\nWhen performing a search, the results display encoded values instead of the expected readable text.\n\n<img width=\"748\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/223b709f-5f17-4984-bbfc-097d9a500734\" />\n","Url":"https://github.com/angular/angular/issues/60384","RelatedDescription":"Open issue \"Docs: search results show encoded values\" (#60384)"},{"Id":"2919702574","IsPullRequest":true,"CreatedAt":"2025-03-14T09:27:37","Actor":"alan-agius4","Number":"60383","RawContent":null,"Title":"docs: revise and consolidate server rendering guides","State":"open","Body":"This commit updates the server rendering documentation and merges the prerendering, hybrid, and SSR sections for better clarity and organization.\r\n\r\nCloses #52884 and closes #60079\r\n","Url":"https://github.com/angular/angular/pull/60383","RelatedDescription":"Open PR \"docs: revise and consolidate server rendering guides\" (#60383)"},{"Id":"2919693856","IsPullRequest":false,"CreatedAt":"2025-03-14T09:23:09","Actor":"LucaRitz","Number":"60382","RawContent":null,"Title":"angular effects untracked SkipInitial","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nThis is a duplicate of https://github.com/angular/angular/issues/56098 because I can't comment there.\n\nWe actually have real-world scenarios where this is useful. The OP of 56098 already described it, but I will provide you an example for further explanation.\n\nWe have the use case where we create a signal from a valueChanges observable of a form control\n```\nformControlValue = toSignal(\n        this.formGroup.controls.formControl.valueChanges.pipe(\n            debounceTime(DEBOUNCE_USER_INPUT_MS),\n        )\n    );\n```\nThen we create an effect that pays attention to the change in this signal\n```\n#formControlValueEffect = effect(() => {\n        this.formControlValue();\n        untracked(() => this.onFormControlChanged());\n    });\n```\nThe function \"onFormControlChanged\" emits e.g. an event (output) or does some other things that should only be executed when the value changes and not on the first call.\n\nIt would be really helpful if we could skip the initial call for an untracked part.\n\n\n### Proposed solution\n\nSee https://github.com/angular/angular/issues/56098\n\n### Alternatives considered\n\nSee https://github.com/angular/angular/issues/56098","Url":"https://github.com/angular/angular/issues/60382","RelatedDescription":"Open issue \"angular effects untracked SkipInitial\" (#60382)"},{"Id":"2917833353","IsPullRequest":true,"CreatedAt":"2025-03-14T07:33:29","Actor":"angular-robot","Number":"60375","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/60375","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#60375)"},{"Id":"2918619514","IsPullRequest":true,"CreatedAt":"2025-03-13T23:51:39","Actor":"dgp1130","Number":"60381","RawContent":null,"Title":"refactor(devtools): add support for mutating objects inside signals","State":"open","Body":"Angular DevTools now supports mutating objects underneath signals in the property explorer view.\r\n\r\nThis is done by performing an \"immutable update\" by recursively copying objects underneath a signal and overwriting the one property specified. For example, if the user attempted to set `foo.bar.baz[2].hello = 'world'` and `bar` was a signal, this would effectively become:\r\n\r\n```typescript\r\nfoo.bar.set({\r\n  ...foo.bar(),\r\n  baz: [\r\n    ...foo.bar().baz.slice(0, 2),\r\n    {\r\n      ...foo.bar().baz[2],\r\n      hello: 'world',\r\n    },\r\n    ...foo.bar().baz.slice(3),\r\n  ],\r\n})\r\n```\r\n\r\nThe motivation for immutable updates is because signals and Angular change detection don't really like interior mutability of signal values. If we didn't do this, any kind of comparison or dirty check would prevent the UI from updating. If an application attempts to change a deeply nested property inside a signal, it doesn't work today. DevTools should generally be limited to operations an application could do itself, and the recommended approach to make such a change like this is an immutable update. Creating entirely new objects intentionally breaks referential equality such that the application can properly react to the change.\r\n\r\nUnfortunately, it is not possible to make immutable updates in a truly generic sense. You can't just copy a class for instance `({...new MyFoo()}).doSomething()`. We could do something fancier like manually copying over the prototype or something like that, but there is no way to do this without breaking class semantics (ex. the class might reasonably rely on the constructor being called). Therefore we instead reject any mutations to non-primitive objects. In the future, we might expand the set of \"primitives\" to include other built-ins and well-known objects like `URL` or `Element`, but those are out of scope for now.\r\n\r\nI opted to ban mutating the result of a readonly/computed signal. While the mutation is likely to succeed, a subsequent rerun of the `computed` will immediately drop the change. However, I opted to allow mutating the result of a getter property. This has a similar problem because it might be returning a synthetic object which will be invalidated on the next execution, but it is possible and reasonable for a getter to return the same object multiple times such that a mutation may reasonably survive other updates. DevTools can't easily know whether a getter actually will return the same object on each execution or not, so we optimistically assume the reference is stable. If it isn't, the mutation will be lost whenever the getter is re-executed.\r\n\r\nI'm particularly open to feedback on whether the distinction of allowing mutations of objects returned from getters but not computeds is the correct balance.\r\n\r\nThe UI still allows mutating any property, it's just that some properties may fail based on the restrictions defined here. A follow-up PR should communicate to the UI whether or not any particular property is editable.","Url":"https://github.com/angular/angular/pull/60381","RelatedDescription":"Open PR \"refactor(devtools): add support for mutating objects inside signals\" (#60381)"},{"Id":"2918530551","IsPullRequest":true,"CreatedAt":"2025-03-13T22:44:07","Actor":"atscott","Number":"60380","RawContent":null,"Title":"feat(router): Add ability to directly abort a navigation","State":"open","Body":"This commit adds the ability to directly abort a navigation through the\r\n`Router.getCurrentNavigation()?.abort()` method. While there are no\r\nfeature requests for this, it is a feature that will be necessary for\r\nintegration with the navigation API. The API enables better tracking of\r\nan ongoing navigation for SPAs and a site visitor can cancel a\r\nnavigation by clicking the stop button in the browser. While this could\r\ntechnically be done on the transition with an internal jsdoc comment to\r\nhide it from application developers, there's no need.\r\n\r\nWith this feature, I believe it would be possible to create somewhat of a shim\r\nto integrate with the navigation API even before the router has full support\r\nusing the router events to control a deferred navigation that never\r\ncommits the URL and always aborts itself on navigation end.","Url":"https://github.com/angular/angular/pull/60380","RelatedDescription":"Open PR \"feat(router): Add ability to directly abort a navigation\" (#60380)"},{"Id":"2918498529","IsPullRequest":true,"CreatedAt":"2025-03-13T22:20:28","Actor":"atscott","Number":"60379","RawContent":null,"Title":"refactor(router): Update tests to not use deprecated string tokens","State":"closed","Body":"This replaces string tokens in the router tests with functional guards.\r\n","Url":"https://github.com/angular/angular/pull/60379","RelatedDescription":"Closed or merged PR \"refactor(router): Update tests to not use deprecated string tokens\" (#60379)"},{"Id":"2918484414","IsPullRequest":true,"CreatedAt":"2025-03-13T22:08:30","Actor":"atscott","Number":"60378","RawContent":null,"Title":"fix(router): Remove 'any' type from route guards","State":"open","Body":"This commit removes `'any'` from the type union for router guards and replaces it with 'string', which will eventually also be removed. This change allows TypeScript to infer the parameter types of functions when using functional guards and enables stricter type-checking to ensure the guard array contains valid values.\r\n\r\nBREAKING CHANGE: The guards arrays on `Route` no longer include `any` in the type union. The union includes functions for the functional guards as well as a type matching `Injector.get`: `ProviderToken<T>|string`. Note that string is still deprecated on both the route guards and `Injector.get`.","Url":"https://github.com/angular/angular/pull/60378","RelatedDescription":"Open PR \"fix(router): Remove 'any' type from route guards\" (#60378)"},{"Id":"2918020633","IsPullRequest":true,"CreatedAt":"2025-03-13T18:03:00","Actor":"atscott","Number":"60376","RawContent":null,"Title":"fix(compiler-cli): Produce fatal diagnostic on duplicate decorated prâ€¦","State":"open","Body":"â€¦operties\r\n\r\nThis prevents the compilation and language service from crashing.\r\n\r\nfixes https://github.com/angular/vscode-ng-language-service/issues/2091\r\n","Url":"https://github.com/angular/angular/pull/60376","RelatedDescription":"Open PR \"fix(compiler-cli): Produce fatal diagnostic on duplicate decorated prâ€¦\" (#60376)"},{"Id":"2917818790","IsPullRequest":true,"CreatedAt":"2025-03-13T16:46:56","Actor":"hawkgs","Number":"60374","RawContent":null,"Title":"refactor(devtools): extract and organize colors into themes","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## What is the new behavior?\r\n\r\nThe refactoring consists of:\r\n\r\n1. Extraction of colors from the stylesheets and their replacement with variables.\r\n2. Color number reduction (we had ~84 pre-refactoring) and color correction.\r\n3. Theming. It's similar to what we use in A.dev.\r\n\r\nHere is a diagram with all solid colors that the app uses (excl. Special colors; check the code comments).\r\n\r\n<img width=\"1134\" alt=\"Screenshot 2025-03-13 at 18 02 48\" src=\"https://github.com/user-attachments/assets/50bd4843-842e-4d28-ac89-ee591cededa9\" />\r\n\r\nHopefully, the change should make color management easier and cleaner.\r\n\r\n@dgp1130, there is some room for improvement in terms of accessibility. I did some tests by simulating some vision deficiencies â€“Â most of the colors are distinguishable but not by a huge margin. I am not sure if that's something that we should handle ourselves or let the OS do its work. Alternatively, we can introduce a high contrast theme (BTW, Chrome DevTools do not react to the high-contrast OS setting).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/60374","RelatedDescription":"Open PR \"refactor(devtools): extract and organize colors into themes\" (#60374)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2922235548","IsPullRequest":true,"CreatedAt":"2025-03-15T16:03:34","Actor":"angular-robot","Number":"29864","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`5.1.7` -> `5.1.8`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.7/5.1.8) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`7.3.3` -> `7.4.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.3.3/7.4.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.8`](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.7...@inquirer/confirm@5.1.8)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.7...@inquirer/confirm@5.1.8)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29864","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29864)"},{"Id":"2921921883","IsPullRequest":true,"CreatedAt":"2025-03-15T09:02:51","Actor":"angular-robot","Number":"29863","RawContent":null,"Title":"build: update devinfra digest to 099af4b","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `85eab90` -> `099af4b` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29863","RelatedDescription":"Open PR \"build: update devinfra digest to 099af4b\" (#29863)"},{"Id":"2921642390","IsPullRequest":false,"CreatedAt":"2025-03-15T06:52:10","Actor":"kewur","Number":"29862","RawContent":null,"Title":"reopen: Providing a DI token in commonEngine.render() does not provide its value to application","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccording to this issue https://github.com/angular/angular-cli/issues/26323 the objects that are provided in server.ts with ssr would be available in \"ng serve\" as well.\n\nI've upgraded to angular 19, and I'm still seeing the same issue\n\nthis is in my server.ts\n\n```\ncommonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [\n          { provide: APP_BASE_HREF, useValue: baseUrl },\n          { provide: REQUEST, useValue: req },\n          { provide: 'RESPONSE', useValue: res },\n          { provide: COOKIES, useValue: req.headers.cookie || '' },\n          { provide: FORWARDED_HOST, useValue: forwardedHost }, // Pass forwarded host\n        ],\n        inlineCriticalCss: false,\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n```\n\n\nWhen I run with\n\n```\nng build && npm run serve:ssr:web\n```\n\nI can inject REQUEST into a service and get the request in.\n\nIf I run \n\n```\nng serve\n```\n\nthose values are null. \n\n### Minimal Reproduction\n\nserver.ts\n\n```\n\n\ncommonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [\n          { provide: APP_BASE_HREF, useValue: baseUrl },\n          { provide: REQUEST, useValue: req },\n          { provide: 'RESPONSE', useValue: res }\n        ],\n        inlineCriticalCss: false,\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n\n```\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  constructor(\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n    @Optional() @Inject(REQUEST) private cookiesString: string,\n    @Optional() @Inject('RESPONSE') private readonly response: Response,\n  ) {\n\n  if (!isPlatformBrowser(this.platformId)) {\n    console.log(response); // <==== NULL WITH \"NG SERVE\" NOT NULL WITH NPM RUN serve:ssr:web\"\n  }\n  \n}\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.1.1\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: linux x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.1 (cli-only)\n@angular-devkit/core         19.1.1 (cli-only)\n@angular-devkit/schematics   19.1.1 (cli-only)\n@schematics/angular          19.1.1 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29862","RelatedDescription":"Closed issue \"reopen: Providing a DI token in commonEngine.render() does not provide its value to application\" (#29862)"},{"Id":"2921433669","IsPullRequest":false,"CreatedAt":"2025-03-15T06:49:33","Actor":"daynemagicos","Number":"29861","RawContent":null,"Title":"How to fix error when deploying Angular 18 application in Vercel?","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/40aa908c-f67e-4b5f-9e88-539272b46fe9)\n\n\n### Minimal Reproduction\n\nHow to fix error when deploying Angular 18 application in Vercel?\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nHow to fix error when deploying Angular 18 application in Vercel?\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29861","RelatedDescription":"Closed issue \"How to fix error when deploying Angular 18 application in Vercel?\" (#29861)"},{"Id":"2921046651","IsPullRequest":true,"CreatedAt":"2025-03-14T22:19:33","Actor":"clydin","Number":"29859","RawContent":null,"Title":"refactor(@angular/cli): import from `node:fs/promises` where appropriate","State":"closed","Body":"Several usages of `import { promises as fs } from 'node:fs'` have been adjusted to import directly from `node:fs/promises`. This is consistent with the rest of the source code usage.","Url":"https://github.com/angular/angular-cli/pull/29859","RelatedDescription":"Closed or merged PR \"refactor(@angular/cli): import from `node:fs/promises` where appropriate\" (#29859)"},{"Id":"2921112176","IsPullRequest":false,"CreatedAt":"2025-03-14T18:46:11","Actor":"constantant","Number":"29860","RawContent":null,"Title":"Prerender generates wrong path for routes from routesFile if baseHref contains host","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI try to prerender a web app which uses CDN for the static files so `document.baseURI` and `APP_BASE_HREF` are different and  `document.baseURI` looks like `https://aws-blablabla.com/version-0001/build-0002/`.\n\nFor the discovered routes everything works fine but if I need to indicate the dynamic ones it generates the wrong path like `https:/ aws-blablabla.com/ version-0001/ build-0002/ dynamic/ path/ 01/` but it must be `dynamic/ path/ 01/`\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.2.1\nNode: 20.14.0\nPackage Manager: npm 9.6.2\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, platform-server, router, ssr\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1902.1\n@angular-devkit/build-angular      19.2.1\n@angular-devkit/core               19.2.1\n@angular-devkit/schematics         19.2.1\n@angular/cdk                       19.2.2\n@angular/components-examples       19.2.0-next.4+sha-c40c701\n@angular/google-maps               19.2.2\n@angular/material                  19.2.2\n@angular/material-experimental     19.2.2\n@angular/material-moment-adapter   19.2.2\n@angular/youtube-player            19.2.2\n@schematics/angular                19.0.4\nng-packagr                         19.0.1\nrxjs                               7.8.1\ntypescript                         5.6.3\nzone.js                            0.15.0\n\n```","Url":"https://github.com/angular/angular-cli/issues/29860","RelatedDescription":"Open issue \"Prerender generates wrong path for routes from routesFile if baseHref contains host\" (#29860)"},{"Id":"2919128125","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:59","Actor":"angular-robot","Number":"29851","RawContent":null,"Title":"build: update devinfra digest to 85eab90","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `47572ab` -> `85eab90` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29851","RelatedDescription":"Closed or merged PR \"build: update devinfra digest to 85eab90\" (#29851)"},{"Id":"2919235521","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:33","Actor":"angular-robot","Number":"29852","RawContent":null,"Title":"build: update dependency vite to v6.2.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.2.1` -> `6.2.2`](https://renovatebot.com/diffs/npm/vite/6.2.1/6.2.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.2.2`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small622-2025-03-14-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.2.1...v6.2.2)\n\n-   fix: await client buildStart on top level buildStart ([#&#8203;19624](https://redirect.github.com/vitejs/vite/issues/19624)) ([b31faab](https://redirect.github.com/vitejs/vite/commit/b31faab2a81b839e4b747baeb9c7a7cbb724f8d2)), closes [#&#8203;19624](https://redirect.github.com/vitejs/vite/issues/19624)\n-   fix(css): inline css correctly for double quote use strict ([#&#8203;19590](https://redirect.github.com/vitejs/vite/issues/19590)) ([d0aa833](https://redirect.github.com/vitejs/vite/commit/d0aa833296668fc420a27a1ea88ecdbdeacdbce7)), closes [#&#8203;19590](https://redirect.github.com/vitejs/vite/issues/19590)\n-   fix(deps): update all non-major dependencies ([#&#8203;19613](https://redirect.github.com/vitejs/vite/issues/19613)) ([363d691](https://redirect.github.com/vitejs/vite/commit/363d691b4995d72f26a14eb59ed88a9483b1f931)), closes [#&#8203;19613](https://redirect.github.com/vitejs/vite/issues/19613)\n-   fix(indexHtml): ensure correct URL when querying module graph ([#&#8203;19601](https://redirect.github.com/vitejs/vite/issues/19601)) ([dc5395a](https://redirect.github.com/vitejs/vite/commit/dc5395a27e44066ef7725278c4057d9f1071a53f)), closes [#&#8203;19601](https://redirect.github.com/vitejs/vite/issues/19601)\n-   fix(preview): use preview https config, not server ([#&#8203;19633](https://redirect.github.com/vitejs/vite/issues/19633)) ([98b3160](https://redirect.github.com/vitejs/vite/commit/98b3160fa5916189e756cd7c5aae87e0d8f1978e)), closes [#&#8203;19633](https://redirect.github.com/vitejs/vite/issues/19633)\n-   fix(ssr): use optional chaining to prevent \"undefined is not an object\" happening in \\`ssrRewriteStac ([4309755](https://redirect.github.com/vitejs/vite/commit/43097550a1aa8ff633c39fb197b5f9ac1222119b)), closes [#&#8203;19612](https://redirect.github.com/vitejs/vite/issues/19612)\n-   feat: show friendly error for malformed `base` ([#&#8203;19616](https://redirect.github.com/vitejs/vite/issues/19616)) ([2476391](https://redirect.github.com/vitejs/vite/commit/2476391b2854aaa67d0ed317b6d0c462e68028f7)), closes [#&#8203;19616](https://redirect.github.com/vitejs/vite/issues/19616)\n-   feat(worker): show asset filename conflict warning ([#&#8203;19591](https://redirect.github.com/vitejs/vite/issues/19591)) ([367d968](https://redirect.github.com/vitejs/vite/commit/367d968fbf584e9f0e17192b816e92e8045c6217)), closes [#&#8203;19591](https://redirect.github.com/vitejs/vite/issues/19591)\n-   chore: extend commit hash correctly when ambigious with a non-commit object ([#&#8203;19600](https://redirect.github.com/vitejs/vite/issues/19600)) ([89a6287](https://redirect.github.com/vitejs/vite/commit/89a62873243805518b672212db7e317989c5c197)), closes [#&#8203;19600](https://redirect.github.com/vitejs/vite/issues/19600)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29852","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v6.2.2\" (#29852)"},{"Id":"2920911877","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:09","Actor":"clydin","Number":"29858","RawContent":null,"Title":"build: move `@angular/cli` specific dependencies out of root","State":"closed","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular/cli` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29858","RelatedDescription":"Closed or merged PR \"build: move `@angular/cli` specific dependencies out of root\" (#29858)"},{"Id":"2920726646","IsPullRequest":true,"CreatedAt":"2025-03-14T17:18:16","Actor":"clydin","Number":"29857","RawContent":null,"Title":"build: move build-angular/build-webpack specific dependencies out of root","State":"closed","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular-devkit/build-angular` and `@angular-devkit/build-webpack` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29857","RelatedDescription":"Closed or merged PR \"build: move build-angular/build-webpack specific dependencies out of root\" (#29857)"},{"Id":"2920242946","IsPullRequest":false,"CreatedAt":"2025-03-14T15:02:58","Actor":"prclm","Number":"29854","RawContent":null,"Title":"Support for SASS PKG-Importer","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nAngular can not handle the new `@use \"pkg:@myPackage/...\"` syntax of sass which uses the \"exports\" of the package.json to reference a file.\n\nI would really like to have support for this very good feature:\nhttps://sass-lang.com/blog/announcing-pkg-importers/\n\n### Proposed solution\n\nSupport this official SASS feature. :)\n\n### Alternatives considered\n\nthis is the alternative to adding \"node_modules\" to \"loadPaths\" (\"includePath\" in angulars sytlePreprocessorOptions).","Url":"https://github.com/angular/angular-cli/issues/29854","RelatedDescription":"Closed issue \"Support for SASS PKG-Importer\" (#29854)"},{"Id":"2920351628","IsPullRequest":true,"CreatedAt":"2025-03-14T15:02:56","Actor":"alan-agius4","Number":"29855","RawContent":null,"Title":"feat(@angular/build): Support Sass package importers","State":"closed","Body":"Enhanced Sass integration by adding support for package importers.\r\n\r\nSee: https://sass-lang.com/blog/announcing-pkg-importers/\r\n\r\nCloses: #29854\r\n","Url":"https://github.com/angular/angular-cli/pull/29855","RelatedDescription":"Closed or merged PR \"feat(@angular/build): Support Sass package importers\" (#29855)"},{"Id":"2920422393","IsPullRequest":true,"CreatedAt":"2025-03-14T14:41:15","Actor":"alan-agius4","Number":"29856","RawContent":null,"Title":"docs: correct bazel e2e commands","State":"closed","Body":"These command are outdated and no longer work\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29856","RelatedDescription":"Closed or merged PR \"docs: correct bazel e2e commands\" (#29856)"},{"Id":"2920129752","IsPullRequest":false,"CreatedAt":"2025-03-14T13:52:22","Actor":"BenjaminHofstetter","Number":"29853","RawContent":null,"Title":"Native async/await with polyfills file","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy goal is to run a zoneless app without downleveling asynchronous/await.  This is only true if I don't use a polyfills file. \n\n\n\n\n### Minimal Reproduction\n\nVery minimal...\n\nJust a minimal main.ts with just this async call with no polyfills file. \n\n\nangular.json\n\n```json\n            \"polyfills\": [],\n```\n\n\n```ts\nwindow.setTimeout(async () => {\n  const { body: readableStream } = await fetch('http://localhost:4200');\n  if (!readableStream) {\n    throw new Error('Failed to fetch');\n  }\n  console.log('hello Angular');\n}, 0);\n\n```\n\nis transpiled to .... (checked in chrome dev tools source tab)\n\n```js\n// src/main.ts\nwindow.setTimeout(async () => {\n    const {body: readableStream} = await fetch(\"http://localhost:4200\");\n    if (!readableStream) {\n        throw new Error(\"Failed to fetch\");\n    }\n    console.log(\"hello Angular\");\n}\n, 0);\n\n```\n\nWith a polyfills file in angular.json (the polyfills.ts  file is empty) transpires to \n\nangular.json\n\n```json\n            \"polyfills\": [\n                  \"src/polyfills.ts\"\n              ],\n```\n\n```js \nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/main.ts\nvar require_main = __commonJS({\n  \"src/main.ts\"(exports) {\n    window.setTimeout(() => __async(exports, null, function* () {\n      const { body: readableStream } = yield fetch(\"http://localhost:4200\");\n      if (!readableStream) {\n        throw new Error(\"Failed to fetch\");\n      }\n      console.log(\"hello Angular\");\n    }), 0);\n  }\n});\nexport default require_main();\n\n```\n\n### Exception or Error\n\nMy expectation was that since zone.js is absent in the polifills, native async should not be downleveled. However, it seems that this is only the case when no polyfills files are added.\n\n### Your Environment\n\n```text\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.3\n@angular-devkit/build-angular   19.2.3\n@angular-devkit/core            19.2.3\n@angular-devkit/schematics      19.2.3\n@angular/cli                    19.2.3\n@schematics/angular             19.2.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29853","RelatedDescription":"Closed issue \"Native async/await with polyfills file\" (#29853)"},{"Id":"2919128081","IsPullRequest":true,"CreatedAt":"2025-03-14T05:03:32","Actor":"angular-robot","Number":"29850","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `e584028` -> `8d9b6a7` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `f2ce660` -> `3194024` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `01d5048` -> `a983bc9` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `523dac1` -> `4e8a0b1` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `ff3ed45` -> `b262ca9` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `10fc1e4` -> `8867220` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `25932d9` -> `520abe8` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `7f8ee16` -> `15aea4d` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `fcce120` -> `f227440` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `8acdf1d` -> `36802ea` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `8b9f481` -> `27a5423` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `9fd3adb` -> `15afd09` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `95eaabd` -> `66e059d` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `d0e03e6` -> `a691bbf` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `c3f2e22` -> `5628e89` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `6b4daa7` -> `3895c19` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `7479509` -> `01ae075` |\n| angular/dev-infra | action | digest | `47572ab` -> `099af4b` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29850","RelatedDescription":"Open PR \"build: update angular\" (#29850)"},{"Id":"2917639646","IsPullRequest":true,"CreatedAt":"2025-03-13T17:49:56","Actor":"clydin","Number":"29849","RawContent":null,"Title":"fix(@angular/build): ensure relative karma stack traces for test failures","State":"closed","Body":"The karma configuration will now automatically set the `basePath` option to the temporary output path when using the application build system's karma testing. This ensures that only the relative path of the test files is represented in the stack traces of test failures.\r\n\r\nCloses #29766","Url":"https://github.com/angular/angular-cli/pull/29849","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure relative karma stack traces for test failures\" (#29849)"},{"Id":"2917118457","IsPullRequest":true,"CreatedAt":"2025-03-13T16:40:26","Actor":"alan-agius4","Number":"29846","RawContent":null,"Title":"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs","State":"closed","Body":"\r\n**feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs**\r\n\r\nThis commit promotes the `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs from dev preview to stable. These APIs enhance server-side rendering (SSR) capabilities in Angular applications, improving routing and server integration for better performance and reliability.\r\n\r\n----\r\n\r\n**feat(@schematics/angular): remove `--server-routing` option**\r\n\r\nServer-side rendering (SSR) will always enable server routing when using the application builder.\r\n\r\nBREAKING CHANGE: `--server-routing` option has been removed from several schematics. Server routing will be used when using the application builder.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29846","RelatedDescription":"Closed or merged PR \"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs\" (#29846)"},{"Id":"2917449624","IsPullRequest":true,"CreatedAt":"2025-03-13T14:53:00","Actor":"devversion","Number":"29848","RawContent":null,"Title":"build: remove `rules_js` migration interop files and clean up","State":"open","Body":"Removes the `rules_js` migration interop files and cleans up other remainings.\r\n\r\nBlocked on the `ng_package` `rules_js` variant where we currently use the old one w/ interop.","Url":"https://github.com/angular/angular-cli/pull/29848","RelatedDescription":"Open PR \"build: remove `rules_js` migration interop files and clean up\" (#29848)"},{"Id":"2917129146","IsPullRequest":true,"CreatedAt":"2025-03-13T13:51:31","Actor":"alan-agius4","Number":"29847","RawContent":null,"Title":"docs(@angular-devkit/build-angular): update `forceEsbuild` option description","State":"closed","Body":"\r\n\r\nEsbuild builder is stable and is no longer in developer preview.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29847","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): update `forceEsbuild` option description\" (#29847)"},{"Id":"2916893733","IsPullRequest":true,"CreatedAt":"2025-03-13T12:03:46","Actor":"alan-agius4","Number":"29845","RawContent":null,"Title":"docs: release notes for the v17.3.13 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29845","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.13 release\" (#29845)"},{"Id":"2916389226","IsPullRequest":false,"CreatedAt":"2025-03-13T12:01:06","Actor":"jlssmt","Number":"29836","RawContent":null,"Title":"Application Builder fileReplacements for .json","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello,\nI migrated my application (Angular 18) to the new build system (application builder).\nAfter that the file replacement for .json files is no longer working.\nIs this a bug or is there an new alternative? (I already tried a lot of stuff including conditional imports, changing from .json to .ts, ...)\nI would prefer not to copy the json into the frontend folder or similar. I also don't want to copy it into assets and then access it via httpClient, because the config then becomes an observable.\n\n```markdown\nðŸ“¦ project-root\nâ”œâ”€â”€ ðŸ“‚ frontend\nâ”‚   â”œâ”€â”€ angular.json\nâ”œâ”€â”€ ðŸ“‚ backend\nâ””â”€â”€ ðŸ“‚ shared\n    â”œâ”€â”€ ðŸ“‚ config\n    â”‚   â”œâ”€â”€ app.config.prod.json\n    â”‚   â”œâ”€â”€ app.config.dev.json\n    â”‚   â”œâ”€â”€ app.config.stage.json\n    â”‚   â”œâ”€â”€ app.config.test.json\n    â”‚   â””â”€â”€ app.config.json\n```\n\n```json\n{\n  \"projects\": {\n    \"frontend\": {\n      \"architect\": {\n        \"build\": {\n          \"configurations\": {\n            \"production\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.prod.ts\"\n                },\n                {\n                  \"replace\": \"../shared/config/app.config.json\",\n                  \"with\": \"../shared/config/app.config.prod.json\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThe config json is shared between frontend and backend (typescript express).\nHas anybody a clue whats wrong?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nI see zero errors.\nNo build errors, no browser console errors.\nThats also confusing for me.\nI just see that the config is not replaced (verified with dist folder and in deployed app).\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.14\nNode: 22.12.0\nPackage Manager: pnpm 7.33.5\nOS: win32 x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.14\n@angular-devkit/core         18.2.14\n@angular-devkit/schematics   18.2.14\n@angular/build               18.2.14\n@angular/cli                 18.2.14\n@schematics/angular          18.2.14\nrxjs                         7.8.1\ntypescript                   5.4.5\nzone.js                      0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29836","RelatedDescription":"Closed issue \"Application Builder fileReplacements for .json\" (#29836)"},{"Id":"2916883604","IsPullRequest":true,"CreatedAt":"2025-03-13T11:52:20","Actor":"alan-agius4","Number":"29844","RawContent":null,"Title":"Bump version to \"v17.3.13\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29844","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.13\" with changelog.\" (#29844)"},{"Id":"2916696530","IsPullRequest":true,"CreatedAt":"2025-03-13T11:45:44","Actor":"alan-agius4","Number":"29843","RawContent":null,"Title":"build: configure Bazel to ignore `packages/angular/build/node_modules`","State":"closed","Body":"Although the `build` package is not present in this branch, the `node_modules` directory may persist when switching branches during a release, potentially causing the build to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/29843","RelatedDescription":"Closed or merged PR \"build: configure Bazel to ignore `packages/angular/build/node_modules`\" (#29843)"},{"Id":"2916656082","IsPullRequest":true,"CreatedAt":"2025-03-13T10:34:05","Actor":"alan-agius4","Number":"29842","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29842","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#29842)"},{"Id":"2916645105","IsPullRequest":true,"CreatedAt":"2025-03-13T10:32:10","Actor":"alan-agius4","Number":"29841","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29841","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#29841)"},{"Id":"2916571962","IsPullRequest":true,"CreatedAt":"2025-03-13T10:09:45","Actor":"alan-agius4","Number":"29840","RawContent":null,"Title":"docs: release notes for the v18.2.15 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29840","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.15 release\" (#29840)"},{"Id":"2916547508","IsPullRequest":true,"CreatedAt":"2025-03-13T10:03:23","Actor":"alan-agius4","Number":"29839","RawContent":null,"Title":"Bump version to \"v18.2.15\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29839","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.15\" with changelog.\" (#29839)"},{"Id":"2916401643","IsPullRequest":true,"CreatedAt":"2025-03-13T09:58:49","Actor":"alan-agius4","Number":"29837","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update babel packages","State":"closed","Body":"This fixes a security report: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\r\n\r\nCloses #29833\r\n","Url":"https://github.com/angular/angular-cli/pull/29837","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update babel packages\" (#29837)"},{"Id":"2916388105","IsPullRequest":true,"CreatedAt":"2025-03-13T09:42:47","Actor":"alan-agius4","Number":"29835","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update babel packages","State":"closed","Body":"This fixes a security report: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\r\n\r\nCloses #29833\r\n","Url":"https://github.com/angular/angular-cli/pull/29835","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update babel packages\" (#29835)"},{"Id":"2916492786","IsPullRequest":true,"CreatedAt":"2025-03-13T09:39:40","Actor":"devversion","Number":"29838","RawContent":null,"Title":"Bump version to \"v20.0.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29838","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.1\" with changelog.\" (#29838)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2922026892","IsPullRequest":false,"CreatedAt":"2025-03-15T11:41:11","Actor":"worthy7","Number":"30635","RawContent":null,"Title":"feat(MatCalendar): Allow to turn focus off on change inputs to MatCalendar","State":"open","Body":"### Feature Description\n\nAdd some option so that MatCalendar does not take focus when it's inputs are changed.\n\n### Use Case\n\nThank you for making a very beautiful calendar/date picker for material ðŸ™‚\n\n\nI am using the calendar and dynamically deciding which dates are selectable or not from some backend service.\n\nWhen the user changes month, it requests the available dates, and updates the myFilter observable which produces a new function, which causes MatCalendar to recheck all the shown dates to see if it should disable that date or not.\n\nThis works great, but the issue is that sometimes the data is updated by other things - not month change - that are on a different part of the screen. The available dates will update, the observable pushes a new filter function.\n\nThe problem is that this causes the MatCalendar to take focus, and scrolls my user from wherever they are on the screen, I cannot allow this but don't see a way to solve it without disabling the filter all-together.","Url":"https://github.com/angular/components/issues/30635","RelatedDescription":"Open issue \"feat(MatCalendar): Allow to turn focus off on change inputs to MatCalendar\" (#30635)"},{"Id":"2921487714","IsPullRequest":true,"CreatedAt":"2025-03-14T23:37:58","Actor":"DavidACCarvalho","Number":"30634","RawContent":null,"Title":"fix(material/select): close panel on detach output event","State":"open","Body":"Enable detection of the detach output event on the panel of the mat-select component. This ensures that when CloseScrollStrategy is set via MAT_SELECT_SCROLL_STRATEGY, the panel correctly closes on scroll, updating the panelOpen property to false.\r\n\r\nFixes #30620","Url":"https://github.com/angular/components/pull/30634","RelatedDescription":"Open PR \"fix(material/select): close panel on detach output event\" (#30634)"},{"Id":"2921361627","IsPullRequest":true,"CreatedAt":"2025-03-14T21:55:51","Actor":"andrewseguin","Number":"30633","RawContent":null,"Title":"fix(material/core): include alternative tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30633","RelatedDescription":"Open PR \"fix(material/core): include alternative tokens\" (#30633)"},{"Id":"2917745646","IsPullRequest":true,"CreatedAt":"2025-03-14T17:33:19","Actor":"andrewseguin","Number":"30627","RawContent":null,"Title":"fix(material/paginator): prevent keyboard nav to disabled buttons","State":"closed","Body":"Previous and next buttons should not be in the tab order if they are disabled\r\n\r\nFixes b/395610398","Url":"https://github.com/angular/components/pull/30627","RelatedDescription":"Closed or merged PR \"fix(material/paginator): prevent keyboard nav to disabled buttons\" (#30627)"},{"Id":"2920625845","IsPullRequest":false,"CreatedAt":"2025-03-14T15:57:14","Actor":"gcocevar","Number":"30632","RawContent":null,"Title":"bug(mat-select): lose the focus when no selection is made by pressing ESC","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nWhen the mat-select is expanded, if user tries to close it with the \"ESC\" key without making a selection, the focus is lost and goes at the bottom of the page.\n\nTested in desktop environment with all major browsers and screen-readers.\n\n\n\n### Reproduction\n\nExample with the Angular latest version: [](https://next.material.angular.io/components/select/overview)\nSteps to reproduce:\nFor example with NVDA: \n- make sure that NVDA is not in the \"browse mode\"\n- using arrow keys, put the NVDA keyboard focus on the select (for example from the Angular Material's documentation: \"Favorite food\", you hear \"clickable  Favorite food  combo box  collapsed  opens list\"). Tip: in \"browse mode\" you can use the \"C\" key to jump to the next combo box in the page\n- make NVDA interact with the select (\"focus mode\") by pressing \"ENTER\" key or with the \"FORCED FOCUS MODE\" key (NVDA + space). You should hear a sound and NVDA speech again \"Favorite food combo box collapsed opens list\"\n- press again enter to expand the select panel to show all possible options\n- optionally, scroll options with down and up arrow keys\n- do not select any option and press the \"ESC\" key. You should hear a \"descending\" sound that means the NVDA \"focus mode\" was deactivated and you are now in \"browse mode\" again\n- using the up and down arrow keys to explore the page, you can see that the NVDA focus was moved down at the bottom of the page (at least for the NVDA virtual dom) and the select is still opened.\n\n\n\n\n### Expected Behavior\n\nFor reference take the native example where the select should collapse when pressing the \"ESC\" key and the screen-reader focus remains on the select element.\n\nNotice that in Angular Material v14 or v15, the correct behavior is the following:\nwhile the select is open and the screen-reader is in the focus mode, if you press the \"ESC\" key one time the select closes but the focus mode not. Afther that, if you press \"ESC\" again the NVDA focus mode will deactivate and the focus will be placed where it was before you started the interaction.\n\n### Actual Behavior\n\nSame as Reproduction\n\n### Environment\n\n- Angular: 16>\n- CDK/Material: Material\n- Browser(s): Chrome and Firefox (latest)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30632","RelatedDescription":"Open issue \"bug(mat-select): lose the focus when no selection is made by pressing ESC\" (#30632)"},{"Id":"2920190599","IsPullRequest":true,"CreatedAt":"2025-03-14T13:08:42","Actor":"mistrykaran91","Number":"30631","RawContent":null,"Title":"fix(material/autocomplete): allow overlay backdrop when opened","State":"open","Body":"Currently when we open the panel, backdrop is not allowed and is not inline with `mat-select`, `mat-menu`, etc. This fix will align autocomplete with those components\r\n\r\nFixes #30457","Url":"https://github.com/angular/components/pull/30631","RelatedDescription":"Open PR \"fix(material/autocomplete): allow overlay backdrop when opened\" (#30631)"},{"Id":"2910564045","IsPullRequest":false,"CreatedAt":"2025-03-14T12:09:39","Actor":"scarrasco-pgr","Number":"30615","RawContent":null,"Title":"bug(form-field): mdc-notched-outline__notch shows overlapping border","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf the form field is contained in a parent that contains the `transform` CSS property e.g. `transform: translate3d(40px, -38px, 0px);` then the notch shows an overlapping border. \n\n![Image](https://github.com/user-attachments/assets/c54e280a-8a0e-4d4f-bd6e-e5a5220eb455)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/hcnjyvfa?file=src%2Fexample%2Fcdk-drag-drop-root-element-example.html\nSteps to reproduce:\n1. Move the dialog around\n2. Adjust the zoom level\n\n\n### Expected Behavior\n\nFor the notch to not contain an overlapping border\n\n### Actual Behavior\n\nNotch contains an overlapping border\n\n### Environment\n\nAngular CLI: 19.2.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.2.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1902.0\n@angular-devkit/build-angular      19.2.0\n@angular-devkit/core               19.2.0\n@angular-devkit/schematics         19.2.0\n@angular/cdk                       19.2.1\n@angular/material                  19.2.1\n@angular/material-moment-adapter   19.2.1\n@schematics/angular                19.2.0\nrxjs                               7.4.0\ntypescript                         5.8.2\nzone.js                            0.15.0\n","Url":"https://github.com/angular/components/issues/30615","RelatedDescription":"Closed issue \"bug(form-field): mdc-notched-outline__notch shows overlapping border\" (#30615)"},{"Id":"2919429526","IsPullRequest":true,"CreatedAt":"2025-03-14T07:48:29","Actor":"crisbeto","Number":"30630","RawContent":null,"Title":"refactor(material/button): simplify host bindings","State":"open","Body":"Following up on https://github.com/angular/components/pull/30626#discussion_r1994327339, these changes move the button's shared host bindings into the base class and turn some classes that are added manually into host bindings.\r\n\r\nThe previous approach was only necessary with ViewEngine, because it wasn't doing inheritance of host bindings correctly and wasn't merging classes. These are no longer issues in Ivy.\r\n\r\nFinally, these changes allow us to take advantage of an upcoming framework feature: https://github.com/angular/angular/pull/60267","Url":"https://github.com/angular/components/pull/30630","RelatedDescription":"Open PR \"refactor(material/button): simplify host bindings\" (#30630)"},{"Id":"2919409252","IsPullRequest":true,"CreatedAt":"2025-03-14T07:39:49","Actor":"devversion","Number":"30629","RawContent":null,"Title":"Initial PR for migrating to `rules_js`","State":"open","Body":"See individual commits","Url":"https://github.com/angular/components/pull/30629","RelatedDescription":"Open PR \"Initial PR for migrating to `rules_js`\" (#30629)"},{"Id":"2916650331","IsPullRequest":true,"CreatedAt":"2025-03-14T06:04:15","Actor":"crisbeto","Number":"30626","RawContent":null,"Title":"feat(material/button): allow appearance to be set dynamically","State":"closed","Body":"Adds the following features to the button:\r\n* Allows the appearance of a button to be set dynamically using the `matButton` input.\r\n* Aligns the terminology with the M3 spec. Currently the names are derived from an old spec.\r\n* Adds the ability to set the default appearance for buttons.\r\n* Adds a `matIconButton` selector to the icon button for consistency.\r\n* Adds a `matFab` selector to the FAB for consistency.\r\n* Adds a `matMiniFab` selector to the mini FAB for consistency.\r\n\r\nAll of these changes are backwards-compatible and allow us to evolve the button in the future.\r\n\r\nBREAKING CHANGE:\r\n* `ButtonVariant` which is returned by `MatButtonHarness.getVariant` no longer includes the appearance of the button. Use `MatButtonHarness.getAppearance` instead.\r\n\r\nFixes #15367.\r\nFixes #29841.","Url":"https://github.com/angular/components/pull/30626","RelatedDescription":"Closed or merged PR \"feat(material/button): allow appearance to be set dynamically\" (#30626)"},{"Id":"2914672502","IsPullRequest":true,"CreatedAt":"2025-03-13T20:32:30","Actor":"wagnermaciel","Number":"30625","RawContent":null,"Title":"fix(cdk-experimental/ui-patterns): small fixes for internal compatibiâ€¦","State":"closed","Body":"â€¦lity","Url":"https://github.com/angular/components/pull/30625","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/ui-patterns): small fixes for internal compatibiâ€¦\" (#30625)"},{"Id":"2917934558","IsPullRequest":true,"CreatedAt":"2025-03-13T17:30:00","Actor":"andrewseguin","Number":"30628","RawContent":null,"Title":"fix(material/select): use flexible overlay dimensions","State":"open","Body":"When the browser window is small, the select's listbox panel does not shrink in size, which causes options to become unreachable.\r\n\r\nWith flexible positioning, the overlay is constrained in height causing the panel to shrink as well, rendering all available options with scrolling\r\n\r\n## Example: Panel displayed underneath the select. \r\n### Observe that the Milk option was not fully visible when the panel is scrolled all the way down\r\nBefore:\r\n![image](https://github.com/user-attachments/assets/4a2b3f29-39ff-4dc1-bacf-ab2c6c0f4d23)\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/c2d37c2a-be13-49e2-bce2-b144f5ae58e3)\r\n\r\n## Example: Panel displayed above the select. \r\n#### Observe the None option was not at all visible when scrolled up\r\nBefore: \r\n![image](https://github.com/user-attachments/assets/f723ce44-7771-4479-a910-b0fb76800249)\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/eb84bb49-09a0-4568-845c-2a621870216c)\r\n\r\n","Url":"https://github.com/angular/components/pull/30628","RelatedDescription":"Open PR \"fix(material/select): use flexible overlay dimensions\" (#30628)"},{"Id":"2914423966","IsPullRequest":true,"CreatedAt":"2025-03-12T15:53:40","Actor":"crisbeto","Number":"30624","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30624","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#30624)"},{"Id":"2914414785","IsPullRequest":true,"CreatedAt":"2025-03-12T15:51:16","Actor":"crisbeto","Number":"30623","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30623","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#30623)"},{"Id":"2914381273","IsPullRequest":true,"CreatedAt":"2025-03-12T15:39:32","Actor":"crisbeto","Number":"30622","RawContent":null,"Title":"Bump version to \"v20.0.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30622","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.1\" with changelog.\" (#30622)"},{"Id":"2907088931","IsPullRequest":false,"CreatedAt":"2025-03-12T14:29:47","Actor":"diesenj","Number":"30611","RawContent":null,"Title":"bug(matAutocomplete): Autocomplete not opening with shadow DOM","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Angularâ€™s ViewEncapsulation.ShadowDom, the MatAutocomplete component fails to reopen the list of options after an option has been selected.\nThis issue has already been reported, but it still appears to be unresolved in Angular 19 + Material 19: https://github.com/angular/components/issues/30153\n\nWorkarounds:\n- Pressing an additional key (e.g., arrow key) after typing causes it to open.\n- Triggering a blur and then refocusing the input also makes it work again.\n\n\nThe provided Stackblitz demo app shows the behaviour of MatAutocomplete with and without ViewEncapsulation.ShadowDom.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-rzrzwrx7\nSteps to reproduce:\n1. Type \"One\"\n2. Select \"One\"\n3. Type \"Two\"\n\n\n### Expected Behavior\n\nMatAutocomplete should reopen the list of options immediately on typing, even after a previous selection, without requiring additional key presses or focus shifts.\n\n### Actual Behavior\n\nWhen typing, MatAutocomplete component fails to reopen the list of options (after an option has been selected).\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n","Url":"https://github.com/angular/components/issues/30611","RelatedDescription":"Closed issue \"bug(matAutocomplete): Autocomplete not opening with shadow DOM\" (#30611)"},{"Id":"2913104664","IsPullRequest":true,"CreatedAt":"2025-03-12T14:29:46","Actor":"crisbeto","Number":"30619","RawContent":null,"Title":"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM","State":"closed","Body":"There are a few places where the autocomplete was checking if it has focus which were breaking down when inside the shadow DOM, because `document.activeElement` will point to the closest shadow root.\r\n\r\nThese changes consolidate the places where we check for focus and use our utility for resolving the focused element through shadow boundaries.\r\n\r\nFixes #30611.","Url":"https://github.com/angular/components/pull/30619","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM\" (#30619)"},{"Id":"2913556358","IsPullRequest":true,"CreatedAt":"2025-03-12T10:58:24","Actor":"mistrykaran91","Number":"30621","RawContent":null,"Title":"fix(material/slider): handle null values in slider input","State":"open","Body":"The slider values behaved inconsistently when we reset the formGroup. This MR will resolve that issue by setting `value` to default value when its `null`\r\n\r\nFixes #30614","Url":"https://github.com/angular/components/pull/30621","RelatedDescription":"Open PR \"fix(material/slider): handle null values in slider input\" (#30621)"},{"Id":"2913491987","IsPullRequest":false,"CreatedAt":"2025-03-12T10:33:52","Actor":"laliconfigcat","Number":"30620","RawContent":null,"Title":"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1.x\n\n### Description\n\nI asked for a new feature recently, introducing the MAT_TIMEPICKER_SCROLL_STRATEGY: https://github.com/angular/components/issues/30421\n\nIt has been implemented, but there was a bug, after opening the Timepicker and closing it via scroll (with a close scroll strategy), the Timepicker could not be opened again: https://github.com/angular/components/issues/30558\n\nThat issue was solved in 19.2.x and it is working fine.\n\nBut in 19.2.x, now the Select is having the same issue when having a close scroll strategy as MAT_SELECT_SCROLL_STRATEGY.\n```\nconst closeScrollStrategyFactory = (overlay: Overlay): (() => CloseScrollStrategy) => {\n  return () => overlay.scrollStrategies.close();\n};\n```\n\n\nAfter opening the select, and closing it via scrolling on the page, the select cannot be opened again.\nI'm not sure if the issue has anything to do with the TimePicker.\n\nWe have the same scroll strategy for MAT_DATEPICKER_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY and MAT_MENU_SCROLL_STRATEGY, all the others are working fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/timepicker-scroll-strategy-issue-cjulrhcw?file=src%2Fmain.ts\nSteps to reproduce:\n1. Open the select.\n2. Scroll on the page.\n3. The select should be closed.\n4. Try opening the select again, it won't work\n\n\n### Expected Behavior\n\nWe should be able to reopen the select after it is closed with a scroll strategy.\n\n### Actual Behavior\n\nThe select cannot be reopened.\n\n### Environment\n\n- Angular: 19.2.x\n- CDK/Material: 19.2.x\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30620","RelatedDescription":"Open issue \"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue\" (#30620)"},{"Id":"2911913116","IsPullRequest":true,"CreatedAt":"2025-03-12T07:36:29","Actor":"devversion","Number":"30618","RawContent":null,"Title":"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30618","RelatedDescription":"Closed or merged PR \"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30618)"},{"Id":"2905307649","IsPullRequest":true,"CreatedAt":"2025-03-12T05:38:19","Actor":"crisbeto","Number":"30608","RawContent":null,"Title":"fix(multiple): deprecate exported factories","State":"closed","Body":"There are a bunch of factory functions that made it into our public API as a result of an old ViewEngine limitation where the factories had to be separate variables and had to be exported. With Ivy this isn't necessary and the factories can be inlined. Also they were never meant to be public APIs.\r\n\r\nThese changes mark them as deprecated so they can be dropped from the public API in v21.","Url":"https://github.com/angular/components/pull/30608","RelatedDescription":"Closed or merged PR \"fix(multiple): deprecate exported factories\" (#30608)"},{"Id":"2911894445","IsPullRequest":true,"CreatedAt":"2025-03-11T21:20:57","Actor":"devversion","Number":"30617","RawContent":null,"Title":"build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30617","RelatedDescription":"Closed or merged PR \"build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30617)"},{"Id":"2910701103","IsPullRequest":false,"CreatedAt":"2025-03-11T14:09:13","Actor":"TimUnderhay","Number":"30616","RawContent":null,"Title":"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav","State":"open","Body":"### Documentation Feedback\n\nThe sidenav component's \"Autosize sidenav\" example is incorrect: it uses mat-drawer rather than sidenav.\n\n![Image](https://github.com/user-attachments/assets/1075bcb0-9c69-43f5-84bc-5c219a0c93e7)\n\n### Affected documentation page\n\nhttps://material.angular.io/components/sidenav/examples","Url":"https://github.com/angular/components/issues/30616","RelatedDescription":"Open issue \"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav\" (#30616)"},{"Id":"2904659734","IsPullRequest":true,"CreatedAt":"2025-03-11T12:55:38","Actor":"crisbeto","Number":"30606","RawContent":null,"Title":"fix(multiple): resolve directive host binding issues","State":"closed","Body":"Fixes several issues that weren't caught, because of lack of type checking of directive host bindings.","Url":"https://github.com/angular/components/pull/30606","RelatedDescription":"Closed or merged PR \"fix(multiple): resolve directive host binding issues\" (#30606)"},{"Id":"2908141285","IsPullRequest":false,"CreatedAt":"2025-03-10T18:50:11","Actor":"kenyerman","Number":"30614","RawContent":null,"Title":"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `mat-slider` with **range thumbs** (start and end thumbs) in a reactive form, resetting the form sets the control values to `null`. This results in:  \n\n1. The thumbs repositioning **to slice the range into equal parts**, despite their values being `null`.  \n2. A conflict with the initialization logic, where `null` values correctly position the thumbs **at the rangeâ€™s endpoints**.  \n\n##### Investigation  \n- On reset, the slider attempts to **divide the range into equal sections**.  \n- This behavior works fine for **single-thumb sliders**, but for **range sliders**, it introduces **rounding errors** (since the range is divided by 3, which becomes worse as the value of `steps` gets closer to `0`).  \n- As a result, multiple resets can produce **different thumb positions**, making the behavior inconsistent:  \n  - **Inconsistent with initialization** (where `null` places thumbs at the ends).  \n  - **Inconsistent with itself** (due to rounding errors). \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-ak9ciyht?file=src%2Fmain.ts\nSteps to reproduce:\n1. Click on `reset` button\n2. Notice the thumbs are trying to slice the range into 3 parts\n3. Click on `reset` button \n4. Notice the thumbs are getting into different positions\n\n\n### Expected Behavior\n\nWhen resetting the form, the thumbs should **match the initialization logic**:  \n  - If the control values are `null`, **both thumbs should be placed at the rangeâ€™s endpoints**.  \n  - The reset behavior should be **consistent and predictable**.  \n\n### Actual Behavior\n\nInstead of moving to the endpoints, the thumbs attempt to **slice the range into equal parts**, leading to:  \n  - Inconsistency with initialization (`null` values initially place thumbs at the rangeâ€™s ends).  \n  - Rounding errors when dividing the range, causing the reset position to change across multiple resets.  \n\n\n### Environment\n\n```\nAngular CLI: 18.2.8\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```","Url":"https://github.com/angular/components/issues/30614","RelatedDescription":"Open issue \"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms\" (#30614)"},{"Id":"2908042706","IsPullRequest":true,"CreatedAt":"2025-03-10T18:04:51","Actor":"jamOne-","Number":"30613","RawContent":null,"Title":"refactor(multiple): eliminate usages of `any` type (batch 2)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30613","RelatedDescription":"Open PR \"refactor(multiple): eliminate usages of `any` type (batch 2)\" (#30613)"},{"Id":"2905541710","IsPullRequest":true,"CreatedAt":"2025-03-10T15:55:29","Actor":"JoostK","Number":"30610","RawContent":null,"Title":"fix(cdk/portal): fix incorrect injector hierarchy with DomPortalOutlet and child environment injectors","State":"closed","Body":"This commit fixes a regression that was introduced in #27427, where the injector hierarchy\r\ndid not respect nested environment injectors. `DomPortalOutlet` was always using the application\r\nroot as environment injector, yet the element injector may have a custom child environment injector\r\nas ancestor. This child environment injector has to be retrieved manually and passed as environment\r\ninjector of the portal component.\r\n\r\nFixes #30609","Url":"https://github.com/angular/components/pull/30610","RelatedDescription":"Closed or merged PR \"fix(cdk/portal): fix incorrect injector hierarchy with DomPortalOutlet and child environment injectors\" (#30610)"},{"Id":"2907456411","IsPullRequest":true,"CreatedAt":"2025-03-10T14:29:12","Actor":"jamOne-","Number":"30612","RawContent":null,"Title":"Eliminate `any` type: first batch","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30612","RelatedDescription":"Closed or merged PR \"Eliminate `any` type: first batch\" (#30612)"},{"Id":"2904825399","IsPullRequest":true,"CreatedAt":"2025-03-08T14:34:37","Actor":"SocDario","Number":"30607","RawContent":null,"Title":"feat(material/button): add missing tokens for hover, focus, and active pseudo-classes","State":"open","Body":"Add missing tokens for overriding hover, focus, and active outlines, as well as the label styling of the `outlined-button` in Angular Material.\r\n\r\nFixes #30573 ","Url":"https://github.com/angular/components/pull/30607","RelatedDescription":"Open PR \"feat(material/button): add missing tokens for hover, focus, and active pseudo-classes\" (#30607)"},{"Id":"2903898607","IsPullRequest":false,"CreatedAt":"2025-03-07T21:39:38","Actor":"danielschmitz","Number":"30605","RawContent":null,"Title":"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the Angular Material Datepicker with the locale set to 'pt-BR', manually entering a date in the DD/MM/YYYY format and then losing focus causes the format to be incorrectly swapped to MM/DD/YYYY.\n\nExpected behavior:\nThe Datepicker should respect the 'pt-BR' locale and maintain the DD/MM/YYYY format after the input loses focus.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/wvap6bl6?file=src%2Fexample%2Fdatepicker-custom-icon-example.html\nSteps to reproduce:\n1. Write a date like \"07/03/2025\"\n2. press tab or lose focus\n3. The date swaps to: \"03/07/2025\"\n\n\n### Expected Behavior\n\nWrite a date like \"07/03/2025\"\nand date don't swaps to \"03/07/2025\"\n\n### Actual Behavior\n\n Date swaps from DD/MM/YYYY to MM/DD/YYYY\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30605","RelatedDescription":"Closed issue \"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale\" (#30605)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-16T03:30:02.8377668Z","RunDurationInMilliseconds":1719}