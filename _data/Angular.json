{"Data":{"Angular-Issues":{"Issues":[{"Id":"2729661391","IsPullRequest":true,"CreatedAt":"2024-12-10T21:46:21","Actor":"thesmiler","Number":"59130","RawContent":null,"Title":"docs: add approximate v19.x and v20 release dates","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nno v20 dates\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\napproximate v20 dates added\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59130","RelatedDescription":"Closed or merged PR \"docs: add approximate v19.x and v20 release dates\" (#59130)"},{"Id":"2729128304","IsPullRequest":true,"CreatedAt":"2024-12-10T21:45:37","Actor":"angular-robot","Number":"59126","RawContent":null,"Title":"build: update github/codeql-action action to v3.27.7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.27.5` -> `v3.27.7` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.27.7`](https://redirect.github.com/github/codeql-action/releases/tag/v3.27.7)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.6...v3.27.7)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.27.7 - 10 Dec 2024\n\n-   We are rolling out a change in December 2024 that will extract the CodeQL bundle directly to the toolcache to improve performance. [#&#8203;2631](https://redirect.github.com/github/codeql-action/pull/2631)\n-   Update default CodeQL bundle version to 2.20.0. [#&#8203;2636](https://redirect.github.com/github/codeql-action/pull/2636)\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.27.7/CHANGELOG.md) for more information.\n\n### [`v3.27.6`](https://redirect.github.com/github/codeql-action/releases/tag/v3.27.6)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.5...v3.27.6)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.27.6 - 03 Dec 2024\n\n-   Update default CodeQL bundle version to 2.19.4. [#&#8203;2626](https://redirect.github.com/github/codeql-action/pull/2626)\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.27.6/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59126","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.27.7\" (#59126)"},{"Id":"2730538422","IsPullRequest":true,"CreatedAt":"2024-12-10T21:45:10","Actor":"alan-agius4","Number":"59138","RawContent":null,"Title":"refactor: replace `ɵPendingTasks` with `ɵPendingTasksInternal`","State":"closed","Body":"This commits remove usage of the old export.\r\n","Url":"https://github.com/angular/angular/pull/59138","RelatedDescription":"Closed or merged PR \"refactor: replace `ɵPendingTasks` with `ɵPendingTasksInternal`\" (#59138)"},{"Id":"2726327808","IsPullRequest":true,"CreatedAt":"2024-12-10T21:44:13","Actor":"RafaelJCamara","Number":"59111","RawContent":null,"Title":"docs: improve docs on NgModule providers","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nIssue Number: #59096\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/59111","RelatedDescription":"Closed or merged PR \"docs: improve docs on NgModule providers\" (#59111)"},{"Id":"2726317114","IsPullRequest":true,"CreatedAt":"2024-12-10T21:43:31","Actor":"angular-robot","Number":"59110","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59110","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#59110)"},{"Id":"2730828898","IsPullRequest":false,"CreatedAt":"2024-12-10T21:36:03","Actor":"motohead400","Number":"59140","RawContent":null,"Title":"Displayed input value in ngFor gets duplicated when splicing an object into an array and input elements are wrapped by form (using template forms) even though name attribute is unique","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, forms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThis is a pretty simple one to replicate.  I'm experiencing it in Angular 18 and I modified someone else's Stackblitz done in Angular 10 to replicate it, so it's been present at least since then.  Use a ngFor to display inputs for a object properties in an array.  Even using a track by function with unique ids, if you splice an item into the array (don't add at the end), the value will be displayed twice when surrounded by a form and using template forms.  If you take away the form tag it works fine.  It seems to have to do with how the name attribute is used within a form, even though the name attribute is unique for each input.  \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-jp3hur1k?file=src%2Fapp%2Fapp.component.html\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 10-18\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59140","RelatedDescription":"Closed issue \"Displayed input value in ngFor gets duplicated when splicing an object into an array and input elements are wrapped by form (using template forms) even though name attribute is unique\" (#59140)"},{"Id":"2731190889","IsPullRequest":true,"CreatedAt":"2024-12-10T21:06:15","Actor":"kirjs","Number":"59141","RawContent":null,"Title":"refactor: standardize the way we detect ngDevMode","State":"open","Body":"Use  `typeof ngDevMode !== 'undefined' && ngDevMode` which is easier to understand than `typeof ngDevMode === 'undefined' || ngDevMode`.\r\n we also don't want the condition to be truthy if the` ngDdevMode` is undefined. \r\n \r\n`We're also keeping (ngDevMode === 'undefined' || ngDevMode)` for cases where we need to actually check if it's missing such as caling `initNgDevMode`\r\n","Url":"https://github.com/angular/angular/pull/59141","RelatedDescription":"Open PR \"refactor: standardize the way we detect ngDevMode\" (#59141)"},{"Id":"2730592708","IsPullRequest":false,"CreatedAt":"2024-12-10T16:25:07","Actor":"JuicyPasta","Number":"59139","RawContent":null,"Title":"missing page","State":"open","Body":"### Describe the problem that you experienced\n\ndependency injection guide referenced from https://angular.dev/guide/ngmodules/overview#ngmodule-providers is not there\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guides/di\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59139","RelatedDescription":"Open issue \"missing page\" (#59139)"},{"Id":"2730498532","IsPullRequest":false,"CreatedAt":"2024-12-10T16:21:36","Actor":"gcrockenberg","Number":"59137","RawContent":null,"Title":"withComponentInputBinding() includes url parameter \"?parm=example\"","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWith withComponentInputBinding() enabled\n\n`readonly routeValue = input<string>()`\n\nincludes the url parameters following the routeValue.\n\n### Minimal Reproduction\n\n1. Enable `withComponentInputBinding()`\n2. Create a route with a parameter, for example: `path: 'test/:routeValue'`\n3. Ensure component has matching input, for example: `readonly routeValue = input<string>()` \n4. Navigate to the page with url containing parameters, for example: `http://localhost:4200/test/test-value?parm=example`\n5. The input is incorrectly set to \"test-value?parm=example\" when it should be \"test-value\"\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.3\nNode: 18.20.3\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@schematics/angular             19.0.3\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nHope this helps.","Url":"https://github.com/angular/angular/issues/59137","RelatedDescription":"Closed issue \"withComponentInputBinding() includes url parameter \"?parm=example\"\" (#59137)"},{"Id":"2730198653","IsPullRequest":false,"CreatedAt":"2024-12-10T14:12:11","Actor":"Gerandon","Number":"59135","RawContent":null,"Title":"signal-input-migration should watch out for re-assigning issues","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nPreviously Input decorators were not readonly mandatorily.\nI know it's not the best practice, but there could be special cases when we had to override the value of the input.\n\nNot the best example, but illustrates the problem:\n```typescript\n@Input() public id: string;\n@Input() public name = 'my-component';\nngOnInit() {\n    this.id = this.id || this.name;\n}\n```\nUsing the migration api, the following will be the output:\n```typescript\npublic readonly id = input.required<string>();\npublic readonly name = input.required<string>();\nngOnInit() {\n    this.id = this.id || this.name;\n}\n```\n\nThere are 2 problems (or lets call it questions for now) with it for me:\n- My input (even if it should) was not readonly, so i suppose the transformed signal form should not be that either.\n- Migration did not do anything with the reassigning part\n\n\nSo basically it enforces me to refactor my code.\n\nAs far as I know theres no simple way for an InputSignal to be overwritten (thats why its readonly I assume).\n\nShouldn't it work like the migration \"partially\" migrates my code, so where it could, switches to signal forms, but where it causes problems, or makes breaking changes, leaves them as they were?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: darwin x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4 (cli-only)\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59135","RelatedDescription":"Closed issue \"signal-input-migration should watch out for re-assigning issues\" (#59135)"},{"Id":"2730227012","IsPullRequest":false,"CreatedAt":"2024-12-10T14:08:10","Actor":"joewIST","Number":"59136","RawContent":null,"Title":"@defer causes rollup error in v19","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading to v19, we are getting errors during bundling (coming from the rollup package used by Vite). This occurs when standalone components are a) wrapped inside a @defer block and b) referenced in a component's imports array. It looks like something has happened which causes rollup to try to add the component twice.\n\nWith @defer :\n![Image](https://github.com/user-attachments/assets/c45754f4-af40-40d9-ad55-9e31a0b607e9)\n\nWhen I remove the @defer blocks, the code builds as before.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\ndist/libs/neve/ui/page/smart-generation/esm2022/portfolio-commentary/page-smart-generation-portfolio-commentary.component.mjs (172:704): Duplicate argument name \"MoleculeAiCardComponent\"\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: yarn 4.5.1\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/build                  19.0.4\n@angular/cdk                    19.0.2\n@angular/cdk-experimental       19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nwebpack                         5.97.1\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59136","RelatedDescription":"Open issue \"@defer causes rollup error in v19\" (#59136)"},{"Id":"2730153848","IsPullRequest":true,"CreatedAt":"2024-12-10T13:38:51","Actor":"crisbeto","Number":"59134","RawContent":null,"Title":"refactor(core): allow tracing service to wrap event listeners","State":"open","Body":"Allows the tracing service to wrap event listeners bound by the framework.\r\n","Url":"https://github.com/angular/angular/pull/59134","RelatedDescription":"Open PR \"refactor(core): allow tracing service to wrap event listeners\" (#59134)"},{"Id":"2730016554","IsPullRequest":true,"CreatedAt":"2024-12-10T12:39:50","Actor":"alan-agius4","Number":"59133","RawContent":null,"Title":"refactor(core): add `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token","State":"open","Body":"\r\n\r\nIntroduced the `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token to control the bootstrapping of components during application initialization. This token is utilized by the Angular CLI in the `@angular/ssr` package, particularly during server-side rendering (SSR) when extracting routes.\r\n\r\nWhen set to `false`, this token prevents the root component from being bootstrapped during SSR's route extraction phase, which is crucial for efficiently extracting routes without triggering component initialization. This mechanism separates the concerns of route extraction and component bootstrapping during SSR rendering, optimizing performance.\r\n\r\nIf not provided or set to `true`, the default behavior of bootstrapping the root component(s) during initialization is maintained.\r\n\r\nContext: https://github.com/angular/angular-cli/issues/29085","Url":"https://github.com/angular/angular/pull/59133","RelatedDescription":"Open PR \"refactor(core): add `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token\" (#59133)"},{"Id":"2730013224","IsPullRequest":true,"CreatedAt":"2024-12-10T12:38:16","Actor":"crisbeto","Number":"59132","RawContent":null,"Title":"fix(compiler-cli): incorrectly checking event side of two-way bindings when narrowed","State":"open","Body":"After #59002, we started producing code like the following for the event side of two-way bindings:\r\n\r\n```\r\nsomeOutput.subscribe($event => {\r\n  var _t1 = unwrapSignalValue(this.someField);\r\n  _t1 = $event;\r\n});\r\n```\r\n\r\nThe problem with this approach is that if `someField` is narrowed, the type of `_t1` will be narrowed as well which will make `$event` unassignable. This came up when trying to roll out the changes from the previous PR internally.\r\n\r\nThese changes rework the approach by generating a function call instead. Now the TCB looks as follows:\r\n\r\n```\r\nsomeOutput.subscribe($event => {\r\n  assignTwoWayBinding(this.someField, $event);\r\n});\r\n```","Url":"https://github.com/angular/angular/pull/59132","RelatedDescription":"Open PR \"fix(compiler-cli): incorrectly checking event side of two-way bindings when narrowed\" (#59132)"},{"Id":"2729579953","IsPullRequest":false,"CreatedAt":"2024-12-10T11:55:03","Actor":"AndSokolov","Number":"59129","RawContent":null,"Title":"flickering of elements with fixed or absolute positioning. After updating to Angular 19.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading from 17 Angular to 19 Angular. Components with “fixed” or “absoulute” positioning began to work poorly.\nFor example, when you click on the filter button, a window with filters with absolute positioning appears. At the beginning, it seems to shift elements for milliseconds, which are with static positioning, and then it is displayed normally.\nUnpleasant flickering appeared on the page.\n\nI use \"builder\": \"@angular-devkit/build-angular:application\"\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/AndSokolov/angular19\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.11.1\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... material, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.2\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nAfter pressing the button, a flickering occurs.\nThe problem disappears if you change the builder in angular.json to \"builder\": \"@angular-devkit/build-angular:browser\"","Url":"https://github.com/angular/angular/issues/59129","RelatedDescription":"Closed issue \"flickering of elements with fixed or absolute positioning. After updating to Angular 19.\" (#59129)"},{"Id":"2729899321","IsPullRequest":true,"CreatedAt":"2024-12-10T11:49:46","Actor":"tidusjar","Number":"59131","RawContent":null,"Title":"refactor(common): update the NgOptimizedImage message to use `@if` instead of `*ngIf`","State":"open","Body":"This commit updates an error message to mention `@if` rather than the `*ngIf` directive.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently it references using the `*ngIf` directive \r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nIt will suggest to use the `@if` control flow block\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59131","RelatedDescription":"Open PR \"refactor(common): update the NgOptimizedImage message to use `@if` instead of `*ngIf`\" (#59131)"},{"Id":"2729219626","IsPullRequest":false,"CreatedAt":"2024-12-10T07:11:48","Actor":"kzander91","Number":"59128","RawContent":null,"Title":"some diagrams are hard to read in dark mode","State":"open","Body":"### Describe the problem that you experienced\n\nMany of the diagrams don't work well in dark mode. For example:\n\nLight mode:\n![Image](https://github.com/user-attachments/assets/dcb8b240-388d-453c-8332-af0c7b89ee63)\n\nDark mode:\n![Image](https://github.com/user-attachments/assets/596ae229-e271-4b39-8ad9-d9df63514c6a)\n\nThe \"User\" label on start node uses white text on a very bright yellow background, making it almost impossible to read.\n\nThe other nodes, while readable, contrast _very_ harshly with the black background, making the entire diagram unpleasant to look at.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/forms#data-flow-in-reactive-forms\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nDoesn't seem to be browser specific, looks identical on Firefox, Chrome and Edge.\n```","Url":"https://github.com/angular/angular/issues/59128","RelatedDescription":"Open issue \"some diagrams are hard to read in dark mode\" (#59128)"},{"Id":"2729130619","IsPullRequest":true,"CreatedAt":"2024-12-10T06:16:09","Actor":"angular-robot","Number":"59127","RawContent":null,"Title":"build: update babel dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/cli](https://babel.dev/docs/en/next/babel-cli) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-cli)) | dependencies | minor | [`7.25.9` -> `7.26.4`](https://renovatebot.com/diffs/npm/@babel%2fcli/7.25.9/7.26.4) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-generator)) | dependencies | patch | [`7.26.2` -> `7.26.3`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.26.2/7.26.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/cli)</summary>\n\n### [`v7.26.4`](https://redirect.github.com/babel/babel/blob/HEAD/CHANGELOG.md#v7264-2024-12-05)\n\n[Compare Source](https://redirect.github.com/babel/babel/compare/v7.25.9...v7.26.4)\n\n##### :leftwards_arrow_with_hook: Revert\n\n-   `babel-traverse`\n    -   [#&#8203;17005](https://redirect.github.com/babel/babel/pull/17005) Revert \"perf: Improve scope information collection performance\" ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59127","RelatedDescription":"Open PR \"build: update babel dependencies\" (#59127)"},{"Id":"2729126052","IsPullRequest":true,"CreatedAt":"2024-12-10T06:12:45","Actor":"angular-robot","Number":"59125","RawContent":null,"Title":"build: update dependency https-proxy-agent to v7.0.6","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [https-proxy-agent](https://redirect.github.com/TooTallNate/proxy-agents) ([source](https://redirect.github.com/TooTallNate/proxy-agents/tree/HEAD/packages/https-proxy-agent)) | resolutions | patch | [`7.0.5` -> `7.0.6`](https://renovatebot.com/diffs/npm/https-proxy-agent/7.0.5/7.0.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>TooTallNate/proxy-agents (https-proxy-agent)</summary>\n\n### [`v7.0.6`](https://redirect.github.com/TooTallNate/proxy-agents/blob/HEAD/packages/https-proxy-agent/CHANGELOG.md#706)\n\n[Compare Source](https://redirect.github.com/TooTallNate/proxy-agents/compare/https-proxy-agent@7.0.5...https-proxy-agent@7.0.6)\n\n##### Patch Changes\n\n-   [`913a49a`](https://redirect.github.com/TooTallNate/proxy-agents/commit/913a49a): Only overwrite servername in tls connect when host is not an IP address\n-   Updated dependencies \\[[`1699a09`](https://redirect.github.com/TooTallNate/proxy-agents/commit/1699a09)]\n    -   agent-base@7.1.2\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59125","RelatedDescription":"Open PR \"build: update dependency https-proxy-agent to v7.0.6\" (#59125)"},{"Id":"2728819229","IsPullRequest":true,"CreatedAt":"2024-12-10T02:54:56","Actor":"alxhub","Number":"59124","RawContent":null,"Title":"perf(core): optimize multiple sequential reads of the same signal","State":"open","Body":"This commit adds an optimization to the signals graph to avoid adding multiple producer records to a consumer when the same signal is read several times in a row. This can happen when state is stored in a larger signal which is repeatedly read to access different individual properties.","Url":"https://github.com/angular/angular/pull/59124","RelatedDescription":"Open PR \"perf(core): optimize multiple sequential reads of the same signal\" (#59124)"},{"Id":"2728774776","IsPullRequest":true,"CreatedAt":"2024-12-10T02:26:11","Actor":"JeanMeche","Number":"59123","RawContent":null,"Title":"refactor(core): remove duplicate check.","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59123","RelatedDescription":"Open PR \"refactor(core): remove duplicate check.\" (#59123)"},{"Id":"2728626901","IsPullRequest":true,"CreatedAt":"2024-12-10T00:35:13","Actor":"JeanMeche","Number":"59122","RawContent":null,"Title":"refactor(core): extract `dirty` and `markForRefresh` from the private ViewRef.","State":"open","Body":"This allows better tree shaking when not using the `element` package.\r\n\r\n","Url":"https://github.com/angular/angular/pull/59122","RelatedDescription":"Open PR \"refactor(core): extract `dirty` and `markForRefresh` from the private ViewRef.\" (#59122)"},{"Id":"2728148861","IsPullRequest":true,"CreatedAt":"2024-12-09T23:09:52","Actor":"JeanMeche","Number":"59117","RawContent":null,"Title":"refactor(core): remove dependency on rxjs' `BehaviorSubject`.","State":"closed","Body":"The allows us to pull less symbols from RxJS in a bare minimum project.\r\n","Url":"https://github.com/angular/angular/pull/59117","RelatedDescription":"Closed or merged PR \"refactor(core): remove dependency on rxjs' `BehaviorSubject`.\" (#59117)"},{"Id":"2728314120","IsPullRequest":false,"CreatedAt":"2024-12-09T21:30:22","Actor":"wwjhu","Number":"59121","RawContent":null,"Title":"Conflicting advice regarding host property versus HostBinding and HostListener","State":"closed","Body":"### Describe the problem that you experienced\n\nIn https://angular.dev/guide/components/host-elements this advice is given:\n\n> Always prefer using the host property over @HostBinding and @HostListener. These decorators exist exclusively for backwards compatibility.\n\nIn https://angular.dev/style-guide#style-06-03 this advice is given:\n\n> Consider preferring the @HostListener and @HostBinding to the host property of the @Directive and @Component decorators.\n\nIt's either the one or the other.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59121","RelatedDescription":"Closed issue \"Conflicting advice regarding host property versus HostBinding and HostListener\" (#59121)"},{"Id":"2728219910","IsPullRequest":false,"CreatedAt":"2024-12-09T20:42:34","Actor":"robertIsaac","Number":"59120","RawContent":null,"Title":"signal-input-migration mark some optional inputs as required","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nthe migration migrated\n\n```\n@Input({ transform: booleanAttribute }) showAddTag!: boolean;\n```\n\nto\n\n```\nreadonly showAddTag = input.required<boolean, unknown>({\n    transform: booleanAttribute,\n  });\n```\n\nwhich broke the project\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 22.11.0\nPackage Manager: pnpm 9.9.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@angular/pwa                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nit happens to all input that has transform - while most of them are okay to be marked required - the boolean one in particular is problematic since I want the value to be false if it's missing","Url":"https://github.com/angular/angular/issues/59120","RelatedDescription":"Open issue \"signal-input-migration mark some optional inputs as required\" (#59120)"},{"Id":"2728208350","IsPullRequest":true,"CreatedAt":"2024-12-09T20:36:56","Actor":"shayan-ghzl","Number":"59119","RawContent":null,"Title":"docs(fix): correct typo in description of runTask method","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows the guidelines outlined here: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no API changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n<!-- Briefly describe the new behavior. If this is a fix, mention the issue addressed. -->\r\n\r\n- Fixed a typo in the description of the `runTask` method.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59119","RelatedDescription":"Open PR \"docs(fix): correct typo in description of runTask method\" (#59119)"},{"Id":"2728195606","IsPullRequest":true,"CreatedAt":"2024-12-09T20:29:38","Actor":"danielsogl","Number":"59118","RawContent":null,"Title":"docs(routing): update example to use inject function and self closing…","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe routing example uses constructer based dependency injection and also non closing tags\r\n\r\n## What is the new behavior?\r\nThe example uses injection function based dependency injection and self closing tags\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59118","RelatedDescription":"Open PR \"docs(routing): update example to use inject function and self closing…\" (#59118)"},{"Id":"2727923499","IsPullRequest":false,"CreatedAt":"2024-12-09T18:27:54","Actor":"crisbeto","Number":"59116","RawContent":null,"Title":"Remove support for non-null assertions from two-way bindings","State":"open","Body":"In v20 we should drop support for expressions like `[(ngModel)]=\"someExpr!\"`, because type checking is non-obvious. We can revive the migration from #54630 to migrate existing users.","Url":"https://github.com/angular/angular/issues/59116","RelatedDescription":"Open issue \"Remove support for non-null assertions from two-way bindings\" (#59116)"},{"Id":"2727230421","IsPullRequest":true,"CreatedAt":"2024-12-09T14:31:30","Actor":"hawkgs","Number":"59115","RawContent":null,"Title":"docs(docs-infra): fix SCSS and unused components build warnings","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere are plenty of SCSS warnings during build time.\r\n\r\n## What is the new behavior?\r\n\r\nFix SCSS \"declarations after nested rules\" and \\@ import warnings; remove an unused component import.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59115","RelatedDescription":"Open PR \"docs(docs-infra): fix SCSS and unused components build warnings\" (#59115)"},{"Id":"2726964990","IsPullRequest":false,"CreatedAt":"2024-12-09T12:50:38","Actor":"samuelfernandez","Number":"59114","RawContent":null,"Title":"Enhancements to forms for future signal forms","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nTemplate and reactive forms in Angular are great, yet using them through the years has revealed a few areas of improvement. This issue aims to provide feedback on some problems, hoping they can be addressed in the future re-vamped signal forms. I'd be happy to elaborate and provide further examples of any of the points below.\n\n## Problem 1: Control Value Accessor is not strongly typed\n\nCVA provide a nice separation of concerns and layer of abstraction between the form control and the DOM.\n\nNevertheless, form controls, either the reactive or template flavors, access the CVA through DI. This means that the binding is not strictly typed. A CVA can be designed to handle numbers, yet be used in a model that has the string value.\n\nAdditionally, the CVA interface builds on top of `any`, which offers a bad DX.\n\n**Example:**\n```ts\nclass NumberValueAccessor implements ControlValueAccessor {\n  writeValue(value: number): void { /* ... */ }\n  registerOnChange(fn: (value: number) => void): void { /* ... */ }\n  // ...\n}\n\n// Usage in a form control that expects a string\nthis.form = new FormGroup({\n  age: new FormControl('25') // This should be a number\n});\n```\n\n## Problem 2: Control Value Accessor can cause issues with the timing of its binding\n\nThe timing when `writeValue` and `registerOnChange` are called is somehow part of its public API, following Hyrum's Law. It can cause some issues, for example, if the CVA supports multiple types and does a parsing on `writeValue`. The first time it get's called, `registerOnChange` hasn't been called yet, so the parsed value can't be immediately propagated.\n\nAdditionally, this API feels verbose and not declarative when compared with more recent framework features.\n\n**Example:**\n```ts\nclass MultiTypeValueAccessor implements ControlValueAccessor {\n  writeValue(value: string | number): void {\n    const parsedValue = typeof value === 'string' ? parseInt(value, 10) : value;\n    // registerOnChange hasn't been called yet, so parsedValue can't be propagated\n  }\n  registerOnChange(fn: (value: number) => void): void { /* ... */ }\n  // ...\n}\n```\n\n## Problem 3: Strict typing of form controls and groups\n\nWhen typed forms were introduced, they had to be retro-compatible with existing implementations, which we appreciated. Nevertheless, it is painful to work with the `undefined` type of controls just because they can be disabled. I'd argue that this decision has caused typing issues in many cases, since the form value when is valid still has `undefined` all around. True, the raw value can be used, but feels unnecessary.\n\nAdditionally, there is a common case where a field uses the required validator, but it's underlying type also supports `null`. If the form is valid, the control would have a non-null value, yet the type still includes `null`.\n\n**Example:**\n```ts\nconst form = new FormGroup({\n  name: new FormControl<string | null>(null, Validators.required)\n});\n\n// When the form is valid, name should not be null, but the type still includes null\nconst name: string | null = form.get('name')?.value;\n```\n\nFinally, there are some controls that do parsing, such as supporting both `Date | string` as inputs, but always exposing a `Date`. Again, it can't be expressed with current typing, there is no transformation function or type narrowing.\n\n**Example:**\n```ts\nconst dateControl = new FormControl<Date | string>('2025-01-01');\n\n// The control should always expose a Date, but it can accept a string\nconst date: Date = dateControl.value; // This can't be done\n```\n\n## Problem 4: Error fields does not have strict typing\n\nRegardless of the return type of a validator, the `errors` property of controls is typed as `any`. For example, the max length validator exposes an error value similar to `{requiredLength: 5, actualLength: 7}`, but it can be consumed with type safety in the template.\n\n**Example:**\n```ts\nconst control = new FormControl('test', Validators.maxLength(5));\nconst errors = control.errors; // Typed as any, not safe to access properties\nif (errors?.maxlength) {\n  console.log(errors.maxlength.requiredLength); // No type safety\n}\n```\n\n## Problem 5: Accessibility with reactive form validators\n\nReactive form validators provide a great tooling to build dynamic validators. However, they don't add HTML attributes such as `required` or `maxlength`, lacking a11n support. Only template driven validators do this. For those who embrace the virtues of reactive forms, validators have to be duplicated in the control and template to ensure good HTML attributes.\n\n**Example:**\n```ts\nconst control = new FormControl('', [Validators.required, Validators.maxLength(5)]);\n// HTML does not reflect required or maxlength attributes\n```\n\n## Problem 6: Async validators are still pending when the form is submitted\n\nOne of the most common scenarios when using forms is acting when they are submitted. Currently, when the submit event is fired, a form with async validators is in pending state. It is not trivial to wait until they complete so as to decide whether the form action should be executed.\n\n**Example:**\n```ts\nthis.formGroup = new FormGroup({\n  asyncControl: new FormControl('', null, asyncValidator)\n});\n\nonSubmit() {\n  if (this.formGroup.pending) {\n    // Form is still pending, can't proceed with submission\n    console.log('Form is pending, please wait...');\n  } else if (this.formGroup.valid) {\n    // Form is valid, proceed with submission\n    console.log('Form submitted successfully:', this.formGroup.value);\n  } else {\n    // Form is invalid, handle errors\n    console.log('Form is invalid:', this.formGroup.errors);\n  }\n}\n```\n\n## Problem 7: Complex typing structures\n\nTyped form's typing is complex. For example, a form group can't be typed with just the type of its value, it needs to know whether each field is a control, group, or array.\n\n### Proposed solution\n\n## Proposed solution 1: Bind CVA through inputs to ensure strict typing\n\nIdeally, a CVA could expose a `model` consumed through two-way data binding rather than through DI. Since inputs are the only binding that enforces type safety, it would ensure that the CVA and its model value have the same type.\n\n**Proposal:**\n\n```ts\nexport interface ControlValueAccessor<T> {\n  readonly model: `ModelSignal<T>`;\n}\n```\n\n## Proposed solution 2: Use `model` for binding of the CVA\n\nHaving two methods for the data binding of a CVA could be better replaced with the new `model` that solves this specific problem and avoids timing issues.\n\n## Proposed solution 3: Support type narrowing\n\nReconsider the decision that  disabled controls should have `undefined` value and avoid the need of exposing `value` vs `rawValue`. If a control was undefined, it would be an application decision whether the value should be `undefined`. Another alternative to solve the typing issue would be only support disable on controls that include the type `undefined`.\n\nIf type narrowing could be applied to form controls, we could benefit, for example, from:\n\n* Required validator would ensure that, if successful, the value is not null and reflect that in the type.\n* A control that does parsing would support multiple values when \"setting\", but a narrowed type when \"getting\".\n\n**Proposal:**\n```ts\nexport function RequiredValidator<T>(control: AbstractControl<T | undefined>): control is AbstractControl<T>;\n```\n\n## Proposed solution 4: Support generic type for errors\n\nIf a control is defined with validators, make them part of the generic type so that `errors` has a strict type.\n\n## Proposed solution 5: Enhance API of programmatic validators\n\nA programmatic validator would have an API similar to `host` so that it can modify the HTML and add a11y attributes as needed.\n\n## Proposed solution 6: Provide `success` and `error` events on forms\n\nRather than relying on submit, provide `success` (or `validSubmit`) or `error` (or `invalidSubmit`) events that get triggered when, after the form is submitted, async validators are resolved, and the state is no longer pending, depending on whether it is `valid` or `invalid`.\n\nThe success event could also expose a narrowed type with the final types when validators are successful, following up on proposed solution 3.\n\n## Proposed solution 7: Simplify typing for form groups/arrays\n\nA form group/array would only have child abstract controls, regardless of their specific type. This way they can be typed with the value's type. If it had a child object-shaped field, it could later be bound to a control with an object value, or a child group dynamically.\n\n### Alternatives considered\n\nCreating my own forms library, but I really like Angular's 😉 ","Url":"https://github.com/angular/angular/issues/59114","RelatedDescription":"Open issue \"Enhancements to forms for future signal forms\" (#59114)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2731399577","IsPullRequest":true,"CreatedAt":"2024-12-10T23:01:02","Actor":"jkrems","Number":"29104","RawContent":null,"Title":"fix(@angular-devkit/build-angular): jasmine.clock with app builder","State":"open","Body":"Ports the logic from WTR and webpack and adds a regression test for this behavior.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28813","Url":"https://github.com/angular/angular-cli/pull/29104","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): jasmine.clock with app builder\" (#29104)"},{"Id":"2731169631","IsPullRequest":false,"CreatedAt":"2024-12-10T20:53:14","Actor":"stewieoO","Number":"29103","RawContent":null,"Title":"AngularNodeAppEngine - Support for custom static providers","State":"open","Body":"### Command\n\nserve, build, run\n\n### Description\n\nThe `renderApplication` function from `@angular/platform-server` supports providing your own static providers.\n\nIt is not possible to provide custom static providers when using the  `AngularNodeAppEngine` and it's `handle` function.\n\nYes, you can provide a request context that is later available through DI, but that is not the same as having direct access to the static providers.\n\nIs this maybe something already planned for a later release?\n\n### Describe the solution you'd like\n\nI would like the possibility to provide my own set of providers when initializing the `AngularNodeAppEngine` and then request specific providers when calling `handle`.\n\nFor example:\n```ts\n  const server = express();\n  const serverDistFolder = dirname(fileURLToPath(import.meta.url));\n  const browserDistFolder = resolve(serverDistFolder, '../browser');\n\n  const angularNodeAppEngine = new AngularNodeAppEngine([\n   { provide: MY_STATIC_TOKEN, value: 'same-value-for-each-request' }\n  ]);\n\n  server.get('**', (req, res, next) => {\n    // Yes, this is executed in devMode via the Vite DevServer\n    console.log('request', req.url, res.status);\n\n    angularNodeAppEngine\n      .handle(req, { server: 'express' }, [{ provide: MY_REQUEST_TOKEN, value: 'request-specific-value' }])\n      .then((response) =>\n        response ? writeResponseToNodeResponse(response, res) : next()\n      )\n      .catch(next);\n  });\n```\n\nFrom what i can see in the source code this would be just passing through and merging some provider arrays.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29103","RelatedDescription":"Open issue \"AngularNodeAppEngine - Support for custom static providers\" (#29103)"},{"Id":"2729144807","IsPullRequest":true,"CreatedAt":"2024-12-10T15:34:53","Actor":"angular-robot","Number":"29097","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2f92e20` -> `8aff236` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `1367371` -> `c5599d0` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `578aff1` -> `d5bab57` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `092f50b` -> `aa21cc1` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ac2fa10` -> `e0bc0d1` |\n| angular/dev-infra | action | digest | `40b2cbd` -> `dc20101` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29097","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29097)"},{"Id":"2730317760","IsPullRequest":true,"CreatedAt":"2024-12-10T15:21:14","Actor":"alan-agius4","Number":"29100","RawContent":null,"Title":"refactor(@angular/build): add `globalThis['ngServerMode']` only when `externalDependencies` are present","State":"closed","Body":"\r\n\r\nThis code is unnecessary when no external dependencies are involved.\r\n","Url":"https://github.com/angular/angular-cli/pull/29100","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add `globalThis['ngServerMode']` only when `externalDependencies` are present\" (#29100)"},{"Id":"2730340067","IsPullRequest":true,"CreatedAt":"2024-12-10T14:50:00","Actor":"alan-agius4","Number":"29101","RawContent":null,"Title":"fix(@angular/ssr): disable component bootstrapping during route extraction","State":"open","Body":"\r\n\r\nThis commit disables component bootstrapping during route extraction to prevent invoking the AppComponent and its lifecycle hooks.\r\n\r\nCloses #29085","Url":"https://github.com/angular/angular-cli/pull/29101","RelatedDescription":"Open PR \"fix(@angular/ssr): disable component bootstrapping during route extraction\" (#29101)"},{"Id":"2730078474","IsPullRequest":false,"CreatedAt":"2024-12-10T13:30:10","Actor":"kuzjka","Number":"29099","RawContent":null,"Title":"Compatibility issue after migration to v19 (node-forge)","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.11\n\n### Description\n\nHello,\n\nWe use [node-forge](https://www.npmjs.com/package/node-forge) in our Angular app. It is distributed as CommonJS module, and we are aware of the downsides. However, it used to work well in browser, as it has heuristics to learn the environment where the code is executed.\n\nWe have switched to new builder as soon as it was released with Angular 17. So it seems the breaking change is introduced in v19.\n\nAfter migration to Angular v19, it looks like `ng serve` tries to execute/analyze the code during build stage and falls into a branch, which is intended for NodeJS environment.\n\nProbably, it is related to server-side rendering optimizations introduced in version 19, which makes development server execute the code.\n\nI would be grateful if there is any workaround to set development server behavior similar to what existed in v18.\n\nThank you.\n\n\n\n### Minimal Reproduction\n\n1. Create new project with Angular v19\n2. Install typings for node-forge: `npm i @types/node-forge`\n3. Import and use forge in any component. Example:\n\n    ```typescript\n    // other imports\n    import * as forge from 'node-forge';\n    \n    @Component({/* ... */})\n    export class AppComponent {\n      title = 'tmp-ng';\n      something = forge.util.isArray([]);\n    }\n    ```\n\n5. `ng serve`\n\n### Exception or Error\n\n```text\nX [ERROR] The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/node-forge/lib/prng.js:16:20:\n      16 │   _crypto = require('crypto');\n         ╵                     ~~~~~~~~\n\n\n### and after first request to the Vite server:\n\n\nWaiting for the debugger to disconnect...\nC:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1472\n  let error = new Error(text);\n              ^\n\nError: Build failed with 1 error:\nnode_modules/node-forge/lib/prng.js:16:20: ERROR: [plugin: angular-browser-node-built-in] The package \"crypto\" wasn't found on the file system but is built into node.\n    at failureErrorWithLog (C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1472:15)\n    at C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:945:25\n    at C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1353:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  errors: [Getter/Setter],\n  warnings: [Getter/Setter]\n}\n\nNode.js v20.11.1\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.11.1\nPackage Manager: npm 10.8.1\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4 (cli-only)\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nThe `require` line is executed under condition `forge.util.isNodejs`:\n\nhttps://github.com/digitalbazaar/forge/blob/2bb97afb5058285ef09bcf1d04d6bd6b87cffd58/lib/prng.js#L16-L19\n\nwhere\n\nhttps://github.com/digitalbazaar/forge/blob/2bb97afb5058285ef09bcf1d04d6bd6b87cffd58/lib/util.js#L109-L111","Url":"https://github.com/angular/angular-cli/issues/29099","RelatedDescription":"Closed issue \"Compatibility issue after migration to v19 (node-forge)\" (#29099)"},{"Id":"2729145138","IsPullRequest":true,"CreatedAt":"2024-12-10T06:26:21","Actor":"angular-robot","Number":"29098","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.24.1` -> `1.25.0`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.24.1/1.25.0) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.17.0` -> `8.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.17.0/8.18.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.17.0` -> `8.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.17.0/8.18.0) |\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | dependencies | patch | [`0.30.14` -> `0.30.15`](https://renovatebot.com/diffs/npm/magic-string/0.30.14/0.30.15) |\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | devDependencies | patch | [`0.30.14` -> `0.30.15`](https://renovatebot.com/diffs/npm/magic-string/0.30.14/0.30.15) |\n| [npm-package-arg](https://redirect.github.com/npm/npm-package-arg) | dependencies | patch | [`12.0.0` -> `12.0.1`](https://renovatebot.com/diffs/npm/npm-package-arg/12.0.0/12.0.1) |\n| [npm-package-arg](https://redirect.github.com/npm/npm-package-arg) | devDependencies | patch | [`12.0.0` -> `12.0.1`](https://renovatebot.com/diffs/npm/npm-package-arg/12.0.0/12.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.25.0`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.25.0)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.24.1...v1.25.0)\n\nBazelisk v1.25.0 comes with several improvements:\n\n### New Features (Python)\n\n-   Added support for `.bazeliskrc` files ([https://github.com/bazelbuild/bazelisk/pull/494](https://redirect.github.com/bazelbuild/bazelisk/pull/494)).\n\n### Bug Fixes & Improvements (Go)\n\n-   Made it easier for other tools to use Bazelisk's core logic to locate (and download) Bazel binaries ([https://github.com/bazelbuild/bazelisk/pull/635](https://redirect.github.com/bazelbuild/bazelisk/pull/635)).\n-   Fixed errors when multiple Bazelisk instances were running in parallel ([https://github.com/bazelbuild/bazelisk/pull/638](https://redirect.github.com/bazelbuild/bazelisk/pull/638)).\n-   Improved signal handling ([https://github.com/bazelbuild/bazelisk/pull/642](https://redirect.github.com/bazelbuild/bazelisk/pull/642)).\n-   `bazelisk version` now also prints the Bazelisk version even if startup flags are set ([https://github.com/bazelbuild/bazelisk/pull/646](https://redirect.github.com/bazelbuild/bazelisk/pull/646)).\n\nWe’d like to thank our amazing contributors [@&#8203;hauserx](https://redirect.github.com/hauserx), [@&#8203;jwnimmer-tri](https://redirect.github.com/jwnimmer-tri) and [@&#8203;shs96c](https://redirect.github.com/shs96c)!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.18.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8180-2024-12-09)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.17.0...v8.18.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[switch-exhaustiveness-check] add support for \"no default\" comment ([#&#8203;10218](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10218))\n-   **eslint-plugin:** \\[no-deprecated] report on super call of deprecated constructor ([#&#8203;10397](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10397))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[use-unknown-in-catch-callback-variable] only flag function literals ([#&#8203;10436](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10436))\n-   **eslint-plugin:** \\[no-base-to-string] handle more robustly when multiple `toString()` declarations are present for a type ([#&#8203;10432](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10432))\n-   **eslint-plugin:** \\[no-deprecated] check if a JSX attribute is deprecated ([#&#8203;10374](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10374))\n-   typescript peer dependency ([#&#8203;10373](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10373))\n\n##### ❤️  Thank You\n\n-   Kim Sang Du [@&#8203;developer-bandi](https://redirect.github.com/developer-bandi)\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   mdm317\n-   rtritto\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.18.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8180-2024-12-09)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.17.0...v8.18.0)\n\n##### 🩹 Fixes\n\n-   typescript peer dependency ([#&#8203;10373](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10373))\n\n##### ❤️  Thank You\n\n-   rtritto\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string (magic-string)</summary>\n\n### [`v0.30.15`](https://redirect.github.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#03015-2024-12-10)\n\n[Compare Source](https://redirect.github.com/rich-harris/magic-string/compare/v0.30.14...v0.30.15)\n\n##### Features\n\n-   add `sideEffects: false` to package.json ([#&#8203;295](https://redirect.github.com/rich-harris/magic-string/issues/295)) ([889bd73](https://redirect.github.com/rich-harris/magic-string/commit/889bd738675cc599e6db591cef85c85cb36c8658))\n\n</details>\n\n<details>\n<summary>npm/npm-package-arg (npm-package-arg)</summary>\n\n### [`v12.0.1`](https://redirect.github.com/npm/npm-package-arg/blob/HEAD/CHANGELOG.md#1201-2024-12-10)\n\n[Compare Source](https://redirect.github.com/npm/npm-package-arg/compare/v12.0.0...v12.0.1)\n\n##### Bug Fixes\n\n-   [`ea07a6e`](https://redirect.github.com/npm/npm-package-arg/commit/ea07a6edc71caae4db9342f90e03457edbb7bb24) [#&#8203;197](https://redirect.github.com/npm/npm-package-arg/pull/197) allow for git usernames that start with a number ([#&#8203;197](https://redirect.github.com/npm/npm-package-arg/issues/197)) ([@&#8203;wraithgar](https://redirect.github.com/wraithgar))\n\n##### Chores\n\n-   [`41aa799`](https://redirect.github.com/npm/npm-package-arg/commit/41aa799ee562f97d4bef48d0d08be8d4320bb219) [#&#8203;196](https://redirect.github.com/npm/npm-package-arg/pull/196) bump [@&#8203;npmcli/template-oss](https://redirect.github.com/npmcli/template-oss) from 4.23.3 to 4.23.4 ([#&#8203;196](https://redirect.github.com/npm/npm-package-arg/issues/196)) ([@&#8203;dependabot](https://redirect.github.com/dependabot)\\[bot], [@&#8203;npm-cli-bot](https://redirect.github.com/npm-cli-bot))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29098","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29098)"},{"Id":"2728936468","IsPullRequest":false,"CreatedAt":"2024-12-10T03:59:59","Actor":"jmerro","Number":"29096","RawContent":null,"Title":"HMR_TEMPLATES + Tailwind problem","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhile it seems from the CLI output that the styles.css is being generated (see below) upon making changes to tailwind classes, the dev server does not seem to announce these HMR stylesheet changes or even serve the new stylesheet even after the client refreshes their page manually. Only way to \"re-sync\" the styles is to make changes to the model.\n```\nComponent update sent to client(s).\nInitial chunk files | Names  | Raw size\nstyles.css          | styles |  6.50 kB | \nmain.js             | main   |  3.95 kB | \n\nApplication bundle generation complete. [0.248 seconds]\n\nComponent update sent to client(s).\n```\n\nThe behaviour I would expect would be both component and style HMR are triggered or in the opposite order if that makes the changes smoothly apply.\n```\nStyles update sent to client(s).\nComponent update sent to client(s).\n```\n\n### Minimal Reproduction\n\n`ng new project`\n\nfollow install steps for https://tailwindcss.com/docs/guides/angular\n\n`NG_HMR_TEMPLATES=1 ng serve`\n\nadd tailwind class(es) to an element, save\n\nshould see `Component update sent to client(s)`\n\nOpen app page `Dev Tools | Elements`, should see new tailwind class(es) applied to element. \n\nAdded Tailwind class(es) (unless another element was already using those classes) won't be in `styles.css`- so doesn't apply them.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29096","RelatedDescription":"Open issue \"HMR_TEMPLATES + Tailwind problem\" (#29096)"},{"Id":"2726347795","IsPullRequest":true,"CreatedAt":"2024-12-09T18:20:25","Actor":"angular-robot","Number":"29086","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29086","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29086)"},{"Id":"2724406365","IsPullRequest":true,"CreatedAt":"2024-12-09T18:20:02","Actor":"angular-robot","Number":"29078","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `9c8bf57` -> `57a8326` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `9e15b9d` -> `1367371` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `84f9bf8` -> `1847b36` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `b9b1686` -> `a1fca72` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `1922bc7` -> `db08655` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c86076f` -> `37b0c4d` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `cdccd3e` -> `e30d8a3` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `17be159` -> `8d7f2ff` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `b870cc6` -> `b2003fd` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `1cd7565` -> `578aff1` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `0a80b38` -> `092f50b` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `5e1ba41` -> `866311b` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `233ef1c` -> `fe6cb87` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `3d6e0e1` -> `b5ea259` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `fde3dc3` -> `9070daf` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `e9f6144` -> `e1aaf4d` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29078","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29078)"},{"Id":"2726541397","IsPullRequest":false,"CreatedAt":"2024-12-09T17:28:01","Actor":"jmerro","Number":"29089","RawContent":null,"Title":"Template HMR broken running on Windows Dev Server","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAppears to be some issue with Template HMR on a Windows where even though the message \"Component update sent to client(s)\" is seen. ~~Most of the code responsible for template HMR in core is not being served to the client via the core.mjs script.~~ not sure about this anymore.\n\nWith this problem any changes to the template even after a manual page reload won't show the changes.\nThe `@ng/component?import` GET calls also don't have a response body either.\n\nI have tested the same repo served from Linux (WSL) and it works just fine. And tested with brand new `ng new` projects on Windows.\n\nThere are no errors in the console.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.2\n... compiler, compiler-cli, core\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1900.4\n@angular-devkit/build-angular       19.0.4\n@angular-devkit/core                19.0.4\n@angular-devkit/schematics          19.0.4\n@angular/animations                 19.0.1\n@angular/cli                        19.0.4\n@angular/common                     19.0.1\n@angular/forms                      19.0.1\n@angular/material                   19.0.1\n@angular/platform-browser           19.0.1\n@angular/platform-browser-dynamic   19.0.1\n@schematics/angular                 19.0.4\nrxjs                                7.8.1\ntypescript                          5.6.3\nzone.js                             0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29089","RelatedDescription":"Closed issue \"Template HMR broken running on Windows Dev Server\" (#29089)"},{"Id":"2726696319","IsPullRequest":false,"CreatedAt":"2024-12-09T17:26:14","Actor":"klerick","Number":"29092","RawContent":null,"Title":"SSR build prerender broken if configuration has externalDependencies options","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDear Angular Team,\n\nWe are experiencing an issue with external dependencies when using Angular 19. In our project, we utilize importmap to load external dependencies and have a custom registry hook for resolving these dependencies on our SSR server. However, we encounter an error when attempting to build the project in version 19.\n\nCauses of the Issue:\n\n1. Dependency Filtering:\n   - This part of the code (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-build.ts#L160) only retains Node.js dependencies for the server, leading to issues with external dependencies.\n\n2. Prerendering:\n   - Even though we do not have prerender routes, this section (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-post-bundle.ts#L133) attempts to call the prerender hook, resulting in an error.\n   - We are unable to set partialSSRBuild as it is an internal variable, and appShellOptions and prerenderOptions are set by default when outputMode is specified.\n\n3. Custom Hook:\n   - Custom load hook (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/utils/server-rendering/esm-in-memory-loader/loader-hooks.ts) does not load dependencies as expected.\n\n\n### Minimal Reproduction\n\nhttps://stackblitz.com/edit/stackblitz-starters-iudtwvic?file=package.json\n\nnpm run build.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: npm 10.5.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n\n### Possible Solutions\n\n1. Expose partialSSRBuild Configuration:\n   - Allow developers to manually configure or override the partialSSRBuild setting. This would provide more control over the build process and help accommodate projects with custom SSR requirements.\n\n2. Enhance or Extend Custom Hook:\n   - Modify or extend the existing custom hook to better handle dependency resolution. This could involve implementing functionality similar to that discussed in this issue (https://github.com/angular-architects/module-federation-plugin/issues/622). Specifically, enabling dynamic loading and resolution of dependencies that are not present in the initial bundle.","Url":"https://github.com/angular/angular-cli/issues/29092","RelatedDescription":"Closed issue \"SSR build prerender broken if configuration has externalDependencies options\" (#29092)"},{"Id":"2727163801","IsPullRequest":true,"CreatedAt":"2024-12-09T17:26:13","Actor":"alan-agius4","Number":"29094","RawContent":null,"Title":"fix(@angular/build): handle external `@angular/` packages during SSR","State":"closed","Body":"This commit introduces `ngServerMode` to ensure proper handling of external `@angular/` packages when they are used as externals during server-side rendering (SSR).\r\n\r\nCloses: #29092\r\n","Url":"https://github.com/angular/angular-cli/pull/29094","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle external `@angular/` packages during SSR\" (#29094)"},{"Id":"2727575954","IsPullRequest":true,"CreatedAt":"2024-12-09T16:47:02","Actor":"alan-agius4","Number":"29095","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29095","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29095)"},{"Id":"2723703884","IsPullRequest":false,"CreatedAt":"2024-12-09T16:11:05","Actor":"Deku-nattsu","Number":"29077","RawContent":null,"Title":"Inconsistency between ng serve and ng build when using Node.js built-ins","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nAfter updating the angular cli to 19.0.4, i can no longer serve my project, the issue comes from the usage of pdfjs-dist that includes usage of nodejs build-ins. however i am able to build successfully which contradicts with the goal fc41f50\n\nMy expecation is a workaround this build blocking error (probably through the compiler configuration) and the consistency of errors between serving and build.\n\n### Minimal Reproduction\n\n1. create a new angular project\n2. install any library that uses nodejs build-ins in my case pdfjs-dist@4.6.82\n3. try to serve/build\n\nhere's the repo to reproduce it: https://github.com/Deku-nattsu/nodejs-build-ins-error\nstackblitz: https://stackblitz.com/~/github.com/Deku-nattsu/nodejs-build-ins-error\n\n### Exception or Error\n\n```text\nwhen serving:\n\n [ERROR] The package \"url\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5666:48:\n      5666 │       url = await import(/*webpackIgnore: true*/\"url\");\n           ╵                                                 ~~~~~\n\n✘ [ERROR] The package \"fs\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5663:51:\n      5663 │     const fs = await import(/*webpackIgnore: true*/\"fs\"),\n           ╵                                                    ~~~~\n\n✘ [ERROR] The package \"http\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5664:49:\n      5664 │       http = await import(/*webpackIgnore: true*/\"http\"),\n           ╵                                                  ~~~~~~\n\n✘ [ERROR] The package \"https\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5665:50:\n      5665 │       https = await import(/*webpackIgnore: true*/\"https\"),\n           ╵                                                   ~~~~~~~\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.4\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29077","RelatedDescription":"Closed issue \"Inconsistency between ng serve and ng build when using Node.js built-ins\" (#29077)"},{"Id":"2726629480","IsPullRequest":true,"CreatedAt":"2024-12-09T16:11:03","Actor":"alan-agius4","Number":"29090","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29090","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29090)"},{"Id":"2726631044","IsPullRequest":true,"CreatedAt":"2024-12-09T16:10:58","Actor":"alan-agius4","Number":"29091","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29091","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29091)"},{"Id":"2726760265","IsPullRequest":true,"CreatedAt":"2024-12-09T14:38:19","Actor":"alan-agius4","Number":"29093","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29093","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29093)"},{"Id":"2724784427","IsPullRequest":false,"CreatedAt":"2024-12-09T14:19:08","Actor":"Char2sGu","Number":"29082","RawContent":null,"Title":"Add CSS Imports to Index HTML","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nWhen one add the following to their `styles.css`:\n```css\n@import 'https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap';\n```\nThe desired stylesheet is only fetched after `styles.css` is ready.\n\n### Describe the solution you'd like\n\nInstead, when top-level CSS imports are detected, automatically generate a `<link rel=\"stylesheet\">` in `index.html`, to enable parallel stylesheet loading.\n\nRemove from `styles.css`:\n\n```css\n@import 'https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap';\n```\n\nAdd to `index.html`:\n\n```html\n<link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap\" rel=\"stylesheet\">\n```\n\n### Describe alternatives you've considered\n\nPrint warning while building to suggest the developer to prefer `<link rel=\"stylesheet\">` than `@import`.","Url":"https://github.com/angular/angular-cli/issues/29082","RelatedDescription":"Closed issue \"Add CSS Imports to Index HTML\" (#29082)"},{"Id":"2726426837","IsPullRequest":false,"CreatedAt":"2024-12-09T10:46:10","Actor":"rsmogura","Number":"29087","RawContent":null,"Title":"Angular doesn't use ESM modules if package is multi module format","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi, I use angular 18 with Sweetalert2 library. During build I got information that this library is CommonJS and it's hard to optimise size (tree shaking). In fact size of project grown up around 0.5MB\n\nAfter inspecting library, it was found that library exports few types of modules through `package.json`:\n```\n  \"main\": \"dist/sweetalert2.all.js\",\n  \"browser\": \"dist/sweetalert2.all.js\",\n  \"module\": \"dist/sweetalert2.esm.all.js\",\n```\nand `module` is in fact an ESM module.\n\nHowever Angular doesn't pick up ESM version of sources instead focuses on on CommonJS version. I would like Angular to pickup ESM versions either by default, or by using additional switches.\n\n### Minimal Reproduction\n\n1. Create Angular project.\n2. Add SweetAlert2 library `npm install sweetalert2 @sweetalert2/ngx-sweetalert2`\n3. Reference Swal alert in source code, so that alert will get displayed.\n4. Build project and check output and warnings.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1802.12\n@angular-devkit/build-angular     18.2.12\n@angular-devkit/core              18.2.12\n@angular-devkit/schematics        18.2.12\n@angular/cdk                      18.2.13\n@angular/material                 18.2.13\n@angular/material-luxon-adapter   18.2.13\n@schematics/angular               18.2.12\nrxjs                              7.8.1\ntypescript                        5.5.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29087","RelatedDescription":"Closed issue \"Angular doesn't use ESM modules if package is multi module format\" (#29087)"},{"Id":"2726469743","IsPullRequest":false,"CreatedAt":"2024-12-09T09:23:39","Actor":"pawelfras","Number":"29088","RawContent":null,"Title":"Custom index output name is not taken into consideration in SSR app","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nThe output name for index set in `angular.json` file is not taken into consideration in app with SSR (regardless if pre-renderign is set to true).\nRegardless of the provided name, builder generates `browser/index.csr.html`. The problem was probably introduced with the https://github.com/angular/angular-cli/commit/21f21eda39c62e284c6cbee0d0ebfe271f605239 - `indexOutput` is set to the value from `options.index.value` but later it is overwritten:\n```\n    indexOutput =\n      (ssrOptions || prerenderOptions) && indexBaseName === 'index.html'\n        ? INDEX_HTML_CSR\n        : indexBaseName;\n```\n\n\n### Minimal Reproduction\n\nCreate new application with SSR:\n```bash\nnpx @angular/cli@19 new ng-19-ssr --ssr --server-routing=false\n```\nIn angular.json, change `index` option:\n```diff\n- \"index\": \"src/index.html\"\n+\"index\": {\n+   \"input\": \"src/index.html\",\n+   \"output\": \"index.html\n+}\n```\noptionally, set `\"prerendering\": false` in `angular.json` (to reduce noise in `dist/browser`)\n\nrun `ng build` and see generated files:\n![Image](https://github.com/user-attachments/assets/931e9bd9-5408-4126-ab61-10bb030a047c)\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29088","RelatedDescription":"Open issue \"Custom index output name is not taken into consideration in SSR app\" (#29088)"},{"Id":"2725780240","IsPullRequest":false,"CreatedAt":"2024-12-09T02:19:13","Actor":"lennybakkalian","Number":"29085","RawContent":null,"Title":"Route extraction shouldnt load the whole app in dev server","State":"open","Body":"I dont want to be that type of guy that just reopens a issue. But i only saw @alan-agius4 answers on that topic and i would kindly ask other angular engineers about their opinion and if its something that can be solved differently. Maybe without @alan-agius4 indirect implication that it would \"only\" be [solveable with file based](https://github.com/angular/angular-cli/issues/28995#issuecomment-2510789006) routing.\n\nThere are no docs on route extraction, but my understanding now is that all routes are computed in advance. I'm not deeper into angular code than the public_api, but I can't imagine that a full application load (full lifecycle or template execution) are necessary to figure this out. What does this have to do with route extraction?\n\n[proof of concept](https://stackblitz.com/~/github.com/lennybakkalian/angular-bug?file=src/app/app.component.ts)\nIn this example, it would only make sense for SSG if the REQUEST token is not available on the server. (but according to @alan-agius4 its \"[bad practice](https://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287)\" to think that the `REQUEST` token is available on the server with disabled prerender) - Just think about that for a second.\n\nSorry if I'm a bit salty, but it took me a really long time to figure out that (imo this bug) is due to the angular dev server.\n\nRelated to:\nhttps://github.com/angular/angular-cli/issues/28995\nhttps://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287\nhttps://github.com/angular/angular-cli/issues/29084 (my previous ticket)\n[Angular Discord - My thread](https://discord.com/channels/748677963142135818/1315303097664409691)\n[Angular Discord - Another thread](https://discord.com/channels/748677963142135818/1308766801919869009)\nand probably many more","Url":"https://github.com/angular/angular-cli/issues/29085","RelatedDescription":"Open issue \"Route extraction shouldnt load the whole app in dev server\" (#29085)"},{"Id":"2725465941","IsPullRequest":false,"CreatedAt":"2024-12-08T19:59:01","Actor":"lennybakkalian","Number":"29084","RawContent":null,"Title":"Observables Called Twice in Dev SSR Server","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn Angular SSR, observables are triggered (at least) twice **on the server** during the **first** page load. To demonstrate this issue, I created a fresh Angular project on StackBlitz. This only happen when running a dev server -> in prod, this behaviour doesnt happen.\n\nAdditionally, the `provideAppInitializer` function is also called twice. Afterward, everything works as expected without duplicate calls.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/~/github.com/lennybakkalian/angular-bug?file=src/app/app.component.ts\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```","Url":"https://github.com/angular/angular-cli/issues/29084","RelatedDescription":"Closed issue \"Observables Called Twice in Dev SSR Server\" (#29084)"},{"Id":"2724406472","IsPullRequest":true,"CreatedAt":"2024-12-08T14:32:04","Actor":"angular-robot","Number":"29079","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`5.0.2` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.0.2/5.1.0) |\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | minor | [`5.0.2` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.0.2/5.1.0) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`7.1.0` -> `7.2.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.1.0/7.2.0) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | minor | [`7.1.0` -> `7.2.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.1.0/7.2.0) |\n| [https-proxy-agent](https://redirect.github.com/TooTallNate/proxy-agents) ([source](https://redirect.github.com/TooTallNate/proxy-agents/tree/HEAD/packages/https-proxy-agent)) | dependencies | patch | [`7.0.5` -> `7.0.6`](https://renovatebot.com/diffs/npm/https-proxy-agent/7.0.5/7.0.6) |\n| [https-proxy-agent](https://redirect.github.com/TooTallNate/proxy-agents) ([source](https://redirect.github.com/TooTallNate/proxy-agents/tree/HEAD/packages/https-proxy-agent)) | devDependencies | patch | [`7.0.5` -> `7.0.6`](https://renovatebot.com/diffs/npm/https-proxy-agent/7.0.5/7.0.6) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | patch | [`4.28.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/rollup/4.28.0/4.28.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | patch | [`4.28.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/rollup/4.28.0/4.28.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.0`](https://redirect.github.com/SBoudrias/Inquirer.js/releases/tag/%40inquirer/confirm%405.1.0)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.0.2...@inquirer/confirm@5.1.0)\n\n-   Pressing `tab` will now toggle between yes/no answers.\n\n</details>\n\n<details>\n<summary>TooTallNate/proxy-agents (https-proxy-agent)</summary>\n\n### [`v7.0.6`](https://redirect.github.com/TooTallNate/proxy-agents/blob/HEAD/packages/https-proxy-agent/CHANGELOG.md#706)\n\n[Compare Source](https://redirect.github.com/TooTallNate/proxy-agents/compare/https-proxy-agent@7.0.5...https-proxy-agent@7.0.6)\n\n##### Patch Changes\n\n-   [`913a49a`](https://redirect.github.com/TooTallNate/proxy-agents/commit/913a49a): Only overwrite servername in tls connect when host is not an IP address\n-   Updated dependencies \\[[`1699a09`](https://redirect.github.com/TooTallNate/proxy-agents/commit/1699a09)]\n    -   agent-base@7.1.2\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.28.1`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4281)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.28.0...v4.28.1)\n\n*2024-12-06*\n\n##### Bug Fixes\n\n-   Support running Rollup natively on LoongArch ([#&#8203;5749](https://redirect.github.com/rollup/rollup/issues/5749))\n-   Add optional `debugId` to `SourceMap` types ([#&#8203;5751](https://redirect.github.com/rollup/rollup/issues/5751))\n\n##### Pull Requests\n\n-   [#&#8203;5749](https://redirect.github.com/rollup/rollup/pull/5749): feat: add support for LoongArch ([@&#8203;darkyzhou](https://redirect.github.com/darkyzhou))\n-   [#&#8203;5751](https://redirect.github.com/rollup/rollup/pull/5751): feat: Add `debugId` to `SourceMap` types ([@&#8203;timfish](https://redirect.github.com/timfish), [@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5752](https://redirect.github.com/rollup/rollup/pull/5752): chore(deps): update dependency mocha to v11 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5753](https://redirect.github.com/rollup/rollup/pull/5753): chore(deps): update dependency vite to v6 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5754](https://redirect.github.com/rollup/rollup/pull/5754): fix(deps): update swc monorepo (major) ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5755](https://redirect.github.com/rollup/rollup/pull/5755): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5756](https://redirect.github.com/rollup/rollup/pull/5756): Test if saving the Cargo cache can speed up FreeBSD ([@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29079","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29079)"},{"Id":"2725278936","IsPullRequest":true,"CreatedAt":"2024-12-08T14:31:22","Actor":"realtimetodie","Number":"29083","RawContent":null,"Title":"feat(@angular-devkit/architect): require build schemas from modules","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, when you create a custom builder for Angular CLI, the builder `schema` can only be a reference to a *local file* in the manifest directory. This is cumbersome, for example when you want to reference an external schema from a module instead.\r\n\r\nThis is now working:\r\n\r\n```json\r\n\"schema\": \"./src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\nThis is not working:\r\n\r\n```json\r\n\"schema\": \"@angular-devkit/build-angular/src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\n## What is the new behavior?\r\n\r\nIt is now possible to require a builder schema from a module.\r\n\r\nThis is now working:\r\n\r\n```json\r\n\"schema\": \"./src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\nand this too:\r\n\r\n```json\r\n\"schema\": \"@angular-devkit/build-angular/src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\n*Internal mechanics*:\r\n\r\nThe `localRequire.resolve` function will look up the location of a module, but rather than loading the module, just return the resolved filename:\r\n\r\n```\r\nschemaPath = localRequire.resolve(schemaPath, {\r\n  paths: [basePath],\r\n});\r\n```\r\n\r\nIf the module can not be found, a [MODULE_NOT_FOUND](https://nodejs.org/api/errors.html#module_not_found) error is thrown by Node.js and the filepath will be composed using the local manifest directory alternatively.\r\n\r\n*Error message*:\r\n\r\nIn any case, the schema will be read using `readFileSync` and the error message will always be the same:\r\n\r\n```\r\nENOENT: no such file or directory: <path>\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\n- Resolves #11307","Url":"https://github.com/angular/angular-cli/pull/29083","RelatedDescription":"Open PR \"feat(@angular-devkit/architect): require build schemas from modules\" (#29083)"},{"Id":"2723002499","IsPullRequest":true,"CreatedAt":"2024-12-07T17:46:14","Actor":"alan-agius4","Number":"29073","RawContent":null,"Title":"fix(@angular/ssr):  include `Content-Language` header when locale is set","State":"closed","Body":"The server now includes the `Content-Language` HTTP header in responses whenever a locale is explicitly set.\r\n","Url":"https://github.com/angular/angular-cli/pull/29073","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr):  include `Content-Language` header when locale is set\" (#29073)"},{"Id":"2724543539","IsPullRequest":false,"CreatedAt":"2024-12-07T11:23:03","Actor":"x-etienne","Number":"29080","RawContent":null,"Title":"The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.3\n\n### Description\n\nI updated angular cli to 19.0.4 version and my project break\n\n### Minimal Reproduction\n\n- create a new angular project with ng-cli 19.0.4\n- add the `npm i @gitbeaker/rest` package\n- import it in the app.component.ts\n- start the application with `ng start`\n- the error arise\n\nmy app.components.ts is\n\n```\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Gitlab } from '@gitbeaker/rest';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'nodedeperror';\n\n  testGitpeaker = () => {\n    const git = new Gitlab({});\n  }\n\n}\n```\n\n### Exception or Error\n\n```text\nX [ERROR] The package \"cluster\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js:22:24:\n      22 │ const cluster = require('cluster');\n         ╵                         ~~~~~~~~~\n\nX [ERROR] The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js:23:23:\n      23 │ const crypto = require('crypto');\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: npm 10.2.5\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nMy package.json is:\n\n```\n{\n  \"name\": \"nodedeperror\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.0\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"@gitbeaker/rest\": \"^41.3.0\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.4\",\n    \"@angular/cli\": \"^19.0.4\",\n    \"@angular/compiler-cli\": \"^19.0.0\",\n    \"@types/jasmine\": \"~5.1.0\",\n    \"jasmine-core\": \"~5.4.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"typescript\": \"~5.6.2\"\n  }\n}\n```","Url":"https://github.com/angular/angular-cli/issues/29080","RelatedDescription":"Closed issue \"The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\" (#29080)"},{"Id":"2723656620","IsPullRequest":false,"CreatedAt":"2024-12-06T18:18:44","Actor":"Char2sGu","Number":"29076","RawContent":null,"Title":"View Transition Selectors Produce Warnings","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen view transition selectors are present in `styles.scss`, the following warnings are produced.\n\n```\n▲ [WARNING] 10 rules skipped due to selector errors:\n  ::view-transition-group(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-group(root) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(landing-image) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(landing-image) -> Pseudo-elements are not supported by css-select\n```\n\n### Minimal Reproduction\n\n1. Add any view transition selectors to `styles.scss`\n2. Run `ng build`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core\n... elements, forms, google-maps, localize, material\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/build                  19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29076","RelatedDescription":"Closed issue \"View Transition Selectors Produce Warnings\" (#29076)"},{"Id":"2723210348","IsPullRequest":false,"CreatedAt":"2024-12-06T14:43:44","Actor":"viceice","Number":"29075","RawContent":null,"Title":"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.13\n\n### Description\n\nThe `@angular/build` is passing all node args to the `Worker` via `piscina` which is invalid. Angular should filter some args like `--use-openssl-ca`\n\nhttps://github.com/angular/angular-cli/blob/120f088778fa0023291781afb5199933d4ac69f7/packages/angular/build/src/tools/esbuild/javascript-transformer.ts#L63\n\n### Minimal Reproduction\n\ncreate a simple shell wrapper for node and add to path, then run nx build for an esbuild enabled project.\n\n```sh\n#!/bin/sh\n\nnode --use-openssl-ca \"$@\"\n```\n\n### Exception or Error\n\n```text\n15:01:04  ✘ [ERROR] Initiated Worker with invalid execArgv flags: --use-openssl-ca [plugin angular-compiler]\n15:01:04  \n15:01:04      node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:23:\n15:01:04        130 │         const worker = new node_worker_threads_1.Worker((0, node_...\n15:01:04            ╵                        ^\n15:01:04  \n15:01:04      at new Worker (node:internal/worker:222:13)\n15:01:04      at ThreadPool._addNewWorker (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:24)\n15:01:04      at ThreadPool._ensureMinimumWorkers (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:125:18)\n15:01:04      at new ThreadPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:116:14)\n15:01:04      at new Piscina (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:566:53)\n15:01:04      at new WorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/utils/worker-pool.js:40:9)\n15:01:04      at #ensureWorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:42:30)\n15:01:04      at JavaScriptTransformer.transformFile (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:80:51)\n15:01:04      at async /var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:381:38\n15:01:04      at async requestCallbacks.on-load (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/esbuild@0.24.0/node_modules/esbuild/lib/main.js:1276:22)\n15:01:04  \n15:01:04    This error came from the \"onLoad\" callback registered here:\n15:01:04  \n15:01:04      node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:371:18:\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: pnpm 9.14.4\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nI'm using nx but it shouldn't matter as the mentioned code uses `process.execArgv` directly","Url":"https://github.com/angular/angular-cli/issues/29075","RelatedDescription":"Closed issue \"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler\" (#29075)"},{"Id":"2722159427","IsPullRequest":true,"CreatedAt":"2024-12-06T09:14:31","Actor":"angular-robot","Number":"29072","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | minor | `v4.1.2` -> `v4.2.0` |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | dependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | devDependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.1` -> `4.21.2`](https://renovatebot.com/diffs/npm/express/4.21.1/4.21.2) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | dependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | devDependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [webpack](https://redirect.github.com/webpack/webpack) | devDependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n| [webpack](https://redirect.github.com/webpack/webpack) | dependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.2.0`](https://redirect.github.com/actions/cache/releases/tag/v4.2.0)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.2...v4.2.0)\n\n##### ⚠️ Important Changes\n\nThe cache backend service has been rewritten from the ground up for improved performance and reliability. [actions/cache](https://redirect.github.com/actions/cache) now integrates with the new cache service (v2) APIs.\n\nThe new service will gradually roll out as of **February 1st, 2025**. The legacy service will also be sunset on the same date. Changes in these release are **fully backward compatible**.\n\n**We are deprecating some versions of this action**. We recommend upgrading to version `v4` or `v3` as soon as possible before **February 1st, 2025.** (Upgrade instructions below).\n\nIf you are using pinned SHAs, please use the SHAs of versions `v4.2.0` or `v3.4.0`\n\nIf you do not upgrade, all workflow runs using any of the deprecated [actions/cache](https://redirect.github.com/actions/cache) will fail.\n\nUpgrading to the recommended versions will not break your workflows.\n\nRead more about the change & access the migration guide: [reference to the announcement](https://redirect.github.com/actions/cache/discussions/1510).\n\n##### Minor changes\n\nMinor and patch version updates for these dependencies:\n\n-   [@&#8203;actions/core](https://redirect.github.com/actions/core): `1.11.1`\n-   [@&#8203;actions/io](https://redirect.github.com/actions/io): `1.1.3`\n-   [@&#8203;vercel/ncc](https://redirect.github.com/vercel/ncc): `0.38.3`\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4...v4.2.0\n\n</details>\n\n<details>\n<summary>danielroe/beasties (beasties)</summary>\n\n### [`v0.2.0`](https://redirect.github.com/danielroe/beasties/releases/tag/v0.2.0)\n\n[Compare Source](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n[compare changes](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n##### 🔥 Performance\n\n-   Avoid repetitive string concatenation in favor of .push() for better performance ([#&#8203;48](https://redirect.github.com/danielroe/beasties/pull/48))\n-   Cache selector query ([#&#8203;49](https://redirect.github.com/danielroe/beasties/pull/49))\n-   Cache selector normalization ([#&#8203;47](https://redirect.github.com/danielroe/beasties/pull/47))\n\n##### 🩹 Fixes\n\n-   **beasties-webpack-plugin:** Only pass filename to readFile ([#&#8203;30](https://redirect.github.com/danielroe/beasties/pull/30))\n-   Update preload option with swap-high ([#&#8203;46](https://redirect.github.com/danielroe/beasties/pull/46))\n-   Improve handling of pseudo classes and elements ([#&#8203;58](https://redirect.github.com/danielroe/beasties/pull/58))\n\n##### 💅 Refactors\n\n-   Add missing await + remove redundant async keywords ([#&#8203;25](https://redirect.github.com/danielroe/beasties/pull/25))\n\n##### 📖 Documentation\n\n-   Remove reference to includeSelectors ([dbb12f8](https://redirect.github.com/danielroe/beasties/commit/dbb12f8))\n\n##### 🏡 Chore\n\n-   Run publish command recursively ([46c0329](https://redirect.github.com/danielroe/beasties/commit/46c0329))\n-   Set log level to error in benchmarks to reduce log noise ([#&#8203;26](https://redirect.github.com/danielroe/beasties/pull/26))\n-   Update tests to work on windows ([#&#8203;35](https://redirect.github.com/danielroe/beasties/pull/35))\n-   Bump dependencies ([b8d4c7e](https://redirect.github.com/danielroe/beasties/commit/b8d4c7e))\n-   Add engines.node and tidy workspace deps ([bff7d61](https://redirect.github.com/danielroe/beasties/commit/bff7d61))\n\n##### ❤️ Contributors\n\n-   Daniel Roe ([@&#8203;danielroe](https://redirect.github.com/danielroe))\n-   Alan Agius ([@&#8203;alan-agius4](https://redirect.github.com/alan-agius4))\n-   Ivan Demchuk ([@&#8203;Demivan](https://redirect.github.com/Demivan))\n-   ([@&#8203;xpdota](https://redirect.github.com/xpdota))\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.2`](https://redirect.github.com/expressjs/express/releases/tag/4.21.2)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.1...4.21.2)\n\n#### What's Changed\n\n-   Add funding field (v4) by [@&#8203;bjohansebas](https://redirect.github.com/bjohansebas) in [https://github.com/expressjs/express/pull/6065](https://redirect.github.com/expressjs/express/pull/6065)\n-   deps: path-to-regexp@0.1.11 by [@&#8203;blakeembrey](https://redirect.github.com/blakeembrey) in [https://github.com/expressjs/express/pull/5956](https://redirect.github.com/expressjs/express/pull/5956)\n-   deps: bump path-to-regexp@0.1.12 by [@&#8203;jonchurch](https://redirect.github.com/jonchurch) in [https://github.com/expressjs/express/pull/6209](https://redirect.github.com/expressjs/express/pull/6209)\n-   Release: 4.21.2 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6094](https://redirect.github.com/expressjs/express/pull/6094)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.1...4.21.2\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.37.0`](https://redirect.github.com/terser/terser/blob/HEAD/CHANGELOG.md#v5370)\n\n[Compare Source](https://redirect.github.com/terser/terser/compare/v5.36.0...v5.37.0)\n\n-   Reserved object properties from chrome extensions (domprops)\n-   Fix semicolon insertion between a class property without a semicolon `a` and a computed class property `[\"prop\"]`\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.3`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small603-2024-12-05-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.2...v6.0.3)\n\n-   fix: handle postcss load unhandled rejections ([#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)) ([d5fb653](https://redirect.github.com/vitejs/vite/commit/d5fb653c15903ccf84a093f212da86f0327a9a6f)), closes [#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)\n-   fix: make handleInvoke interface compatible with invoke ([#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)) ([a1dd396](https://redirect.github.com/vitejs/vite/commit/a1dd396da856401a12c921d0cd2c4e97cb63f1b5)), closes [#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)\n-   fix: make result interfaces for `ModuleRunnerTransport#invoke` more explicit ([#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)) ([a75fc31](https://redirect.github.com/vitejs/vite/commit/a75fc3193d5e8d8756dfb3a046873e9c222bb6c8)), closes [#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)\n-   fix: merge `environments.ssr.resolve` with root `ssr` config ([#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)) ([3104331](https://redirect.github.com/vitejs/vite/commit/310433106e1e8a0c39dc397e3eace8a71a2416c2)), closes [#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)\n-   fix: no permission to create vite config file ([#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)) ([ff47778](https://redirect.github.com/vitejs/vite/commit/ff47778004d609dbeef7f192783e6f253dd66237)), closes [#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)\n-   fix: remove CSS import in CJS correctly in some cases ([#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)) ([690a36f](https://redirect.github.com/vitejs/vite/commit/690a36ffdb7d6f6568f35a304b4904e7aa475f17)), closes [#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)\n-   fix(config): bundle files referenced with imports field ([#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)) ([2b5926a](https://redirect.github.com/vitejs/vite/commit/2b5926a0e79ce47d22536d38eed2629d326caca0)), closes [#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)\n-   fix(config): make stacktrace path correct when sourcemap is enabled ([#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)) ([20fdf21](https://redirect.github.com/vitejs/vite/commit/20fdf210ee0ac0824b2db74876527cb7f378a9e8)), closes [#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)\n-   fix(css): rewrite url when image-set and url exist at the same time ([#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)) ([d59efd8](https://redirect.github.com/vitejs/vite/commit/d59efd8dfd1c5bf2e7c45c7cdb1c0abc2a05ba02)), closes [#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)\n-   fix(deps): update all non-major dependencies ([#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)) ([5c02236](https://redirect.github.com/vitejs/vite/commit/5c0223636fa277d5daeb4d93c3f32d9f3cd69fc5)), closes [#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)\n-   fix(html): allow unexpected question mark in tag name ([#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)) ([1b54e50](https://redirect.github.com/vitejs/vite/commit/1b54e506a44420d0c8a9e000cf45b1c4f5e33026)), closes [#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)\n-   fix(module-runner): decode uri for file url passed to import ([#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)) ([88e49aa](https://redirect.github.com/vitejs/vite/commit/88e49aa0418cb3f6b579b744ba59daeda68432f3)), closes [#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)\n-   refactor: fix logic errors found by no-unnecessary-condition rule ([#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)) ([ea802f8](https://redirect.github.com/vitejs/vite/commit/ea802f8f8bcf3771a35c1eaf687378613fbabb24)), closes [#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)\n-   chore: fix duplicate attributes issue number in comment ([#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)) ([ffee618](https://redirect.github.com/vitejs/vite/commit/ffee61893cfe9f2b0db4aecf9ddb62ca79c80458)), closes [#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n### [`v5.97.1`](https://redirect.github.com/webpack/webpack/releases/tag/v5.97.1)\n\n[Compare Source](https://redirect.github.com/webpack/webpack/compare/v5.97.0...v5.97.1)\n\n##### Bug Fixes\n\n-   Performance regression\n-   Sub define key should't be renamed when it's a defined variable\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29072","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29072)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2731635209","IsPullRequest":false,"CreatedAt":"2024-12-11T02:06:20","Actor":"kanehjeong","Number":"30162","RawContent":null,"Title":"bug(mat-timepicker): Disabling TimePicker does not prevent dropdown from opening","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen disabling a mat timepicker input field as well as the timepicker toggle, clicking the toggle or time value on the field still triggers the select dropdown for the times.\n\n### Reproduction\n\n[Stackblitz Link](https://stackblitz.com/edit/4nj2hwbz?file=src%2Fexample%2Ftimepicker-forms-example.ts)\n\nMade the following changes off [this material example link](https://material.angular.io/components/timepicker/examples#timepicker-forms)\n```\n// timepicker-forms-example.ts\nnew FormControl({ value: initialValue, disabled: true }); // Added disabled here\n\n// timepicker-forms-example.html\n<mat-timepicker-toggle matIconSuffix [for]=\"picker\" [disabled]=\"true\"/> <!-- Added disabled here -->\n```\n\nSteps to reproduce:\n1. Click the time value of the disabled input or the toggle icon\n2. Notice the select menu pop up with the time selections despite input being disabled\n\n\n### Expected Behavior\n\nShould not open timepicker menu when input and toggle are both disabled\n\n### Actual Behavior\n\nTimepicker select menu opens\n\n### Environment\n\n- Angular: 19.0.2\n- CDK/Material: 19.0.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30162","RelatedDescription":"Open issue \"bug(mat-timepicker): Disabling TimePicker does not prevent dropdown from opening\" (#30162)"},{"Id":"2726475553","IsPullRequest":true,"CreatedAt":"2024-12-10T21:08:47","Actor":"crisbeto","Number":"30148","RawContent":null,"Title":"fix(material/menu): decouple menu lifecycle from animations","State":"closed","Body":"Reworks the menu so that its removal isn't bound by animations. The current approach is somewhat brittle and makes it difficult to eventually switch to a fully CSS-based animation.","Url":"https://github.com/angular/components/pull/30148","RelatedDescription":"Closed or merged PR \"fix(material/menu): decouple menu lifecycle from animations\" (#30148)"},{"Id":"2723064933","IsPullRequest":true,"CreatedAt":"2024-12-10T20:47:03","Actor":"crisbeto","Number":"30142","RawContent":null,"Title":"fix(material/select): add opt-in input that allows selection of nullable options","State":"closed","Body":"By default `mat-select` treats options with nullable values as \"reset options\", meaning that they can't be selected, but rather they clear the select's value. This behavior is based on how the native `select` works, however in some cases it's not desirable. These changes add an input that users can use to opt out of the default behavior.\r\n\r\nFixes #25120.","Url":"https://github.com/angular/components/pull/30142","RelatedDescription":"Closed or merged PR \"fix(material/select): add opt-in input that allows selection of nullable options\" (#30142)"},{"Id":"2722983802","IsPullRequest":false,"CreatedAt":"2024-12-10T20:33:43","Actor":"horesse","Number":"30140","RawContent":null,"Title":"bug(Timepicker): Luxon provider does not display date if it exists","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf there is an initial value in formControl, then when using provideLuxonDateAdapter(), the date will not be displayed when the page is loaded, but if we select the time, it will be displayed correctly.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/8xbgfc-eqfhl1?file=src%2Fexample%2Ftimepicker-forms-example.ts\nSteps to reproduce:\n1. Open Page\n2. Check value in formControl\n3. Timepicker input is empty\n\n\n### Expected Behavior\n\nDisplay time\n\n### Actual Behavior\n\nTimepicker value is empty when component is initialized even if formControl has value\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30140","RelatedDescription":"Closed issue \"bug(Timepicker): Luxon provider does not display date if it exists\" (#30140)"},{"Id":"2726531398","IsPullRequest":true,"CreatedAt":"2024-12-10T20:33:41","Actor":"crisbeto","Number":"30149","RawContent":null,"Title":"fix(material/timepicker): deserialize ControlValueAccessor values correctly","State":"closed","Body":"Fixes that the timepicker was clobbering otherwise parseable values when they're assigned through the `ControlValueAccessor`.\r\n\r\nFixes #30140.","Url":"https://github.com/angular/components/pull/30149","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): deserialize ControlValueAccessor values correctly\" (#30149)"},{"Id":"2731069924","IsPullRequest":true,"CreatedAt":"2024-12-10T20:01:29","Actor":"kseamon","Number":"30161","RawContent":null,"Title":"fix(cdk-experimental/column-resize): Previous size was being sent for…","State":"open","Body":"… persistance rather than newly updated size in non-live resize mode.","Url":"https://github.com/angular/components/pull/30161","RelatedDescription":"Open PR \"fix(cdk-experimental/column-resize): Previous size was being sent for…\" (#30161)"},{"Id":"2730998732","IsPullRequest":false,"CreatedAt":"2024-12-10T19:24:16","Actor":"scottg521","Number":"30160","RawContent":null,"Title":"bug(MatInputTestHarness): setValue does not trigger \"change\" event","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccording to the documentation, the MatInput component emits a \"change\" event when the value changes. However, the test harness does not emit this event after \"setValue()\". See the stackblitz.\n\nI have tried using focus() to focus the component before setting the value, then blur() to remove focus, which is what triggers \"change\" in the application, and there is still no \"change\" event.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/phfedq5f?file=src%2Fexample%2Finput-harness-example.html\nSteps to reproduce:\n1. modified example test from https://material.angular.io/components/input/examples should run automatically\n2. two tests fail because the event spy is not called\n\n\n### Expected Behavior\n\nYou should be able to trigger the expected event with the test harness.\n\n### Actual Behavior\n\nExpected code associated with (change) to run.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, macOs\n","Url":"https://github.com/angular/components/issues/30160","RelatedDescription":"Open issue \"bug(MatInputTestHarness): setValue does not trigger \"change\" event\" (#30160)"},{"Id":"2729466703","IsPullRequest":true,"CreatedAt":"2024-12-10T16:59:07","Actor":"crisbeto","Number":"30156","RawContent":null,"Title":"build: remove iOS test runs","State":"closed","Body":"Removes the tests that run against iOS. There are a couple of reasons to do so:\r\n* The tests haven't caught any issues in years.\r\n* The tests tend to be flaky.\r\n* They're running aginst iOS 15 which Angular no longer supports. We can't update to anything newer, because we would have to update our Saucelabs setup which will require dev infra time investment.","Url":"https://github.com/angular/components/pull/30156","RelatedDescription":"Closed or merged PR \"build: remove iOS test runs\" (#30156)"},{"Id":"2729762416","IsPullRequest":false,"CreatedAt":"2024-12-10T10:51:54","Actor":"pedroestabruxelles","Number":"30159","RawContent":null,"Title":"docs-bug(cdk-tree): stackblitz examples are broken","State":"open","Body":"### Documentation Feedback\n\nAll examples that are importing:\nimport {NestedFoodNode, NESTED_DATA} from '../tree-data';\nare missing that tree-data.ts file\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/overview","Url":"https://github.com/angular/components/issues/30159","RelatedDescription":"Open issue \"docs-bug(cdk-tree): stackblitz examples are broken\" (#30159)"},{"Id":"2729709634","IsPullRequest":false,"CreatedAt":"2024-12-10T10:33:28","Actor":"Muqhees","Number":"30158","RawContent":null,"Title":"bug(MATCHIP): Chip text doesn't truncate or wrap if the text length takes more width than the form field","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n Chip text doesn't truncate or wrap if the text length takes more width than the form field . Remove icon button is also not visible\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/hnhs71mw?file=src%2Fexample%2Fchips-autocomplete-example.html\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nText inside the chip should either truncate or wrap and the remove icon button should be visible\n\n### Actual Behavior\n\nText overflows the chip and the form field and the remove icon button is not visible\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30158","RelatedDescription":"Open issue \"bug(MATCHIP): Chip text doesn't truncate or wrap if the text length takes more width than the form field\" (#30158)"},{"Id":"2727505922","IsPullRequest":false,"CreatedAt":"2024-12-10T09:30:13","Actor":"naithagoni","Number":"30154","RawContent":null,"Title":"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Steps to Reproduce:**\n\n1. Open the application and navigate to the stepper component.\n2. Select a user in Step 1.\n3. Proceed to Step 2, where the `getProducts` method sets the value of the `productCtrl` control programmatically using `patchValue`.\n4. Open the autocomplete dropdown for the product selection.\n\n**Code Snippet:**\n\n```typescript\n<mat-stepper\n  linear\n  #stepper\n  (selectedIndexChange)=\"selectedStepperIndex.set($event)\"\n>\n  <mat-step [stepControl]=\"userFormGroup\">\n    <form class=\"example-form\" [formGroup]=\"userFormGroup\">\n      <ng-template matStepLabel>Step 1</ng-template>\n      @defer (when selectedStepperIndex() === 0; prefetch on idle) {\n      <user [form]=\"userFormGroup\"></user>\n      }\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"productFormGroup\">\n    <form [formGroup]=\"productFormGroup\">\n      <ng-template matStepLabel>Step 2</ng-template>\n      @defer (when selectedStepperIndex() === 1; prefetch on idle) {\n      <product\n        [form]=\"productFormGroup\"\n        [selectedUserId]=\"userFormGroup.controls.userCtrl.value?.id ?? ''\"\n      ></product>\n      }\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-stepper>\n\n\nimport { Component, inject, signal } from '@angular/core';\nimport {\n  FormBuilder,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserComponent } from 'src/user/user.component';\nimport { ProductComponent } from 'src/product/product.component';\n\nexport interface User {\n  id: string;\n  name: string;\n}\n\nexport interface Product {\n  id: string;\n  desc: string;\n}\n\nexport interface UserForm {\n  userCtrl: FormControl<User | null>;\n}\n\nexport interface ProductForm {\n  productCtrl: FormControl<Product | null>;\n}\n\n@Component({\n  selector: 'stepper-editable-example',\n  templateUrl: 'stepper-editable-example.html',\n  styleUrl: 'stepper-editable-example.css',\n  imports: [\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    UserComponent,\n    ProductComponent,\n  ],\n})\nexport class StepperEditableExample {\n  private _formBuilder = inject(FormBuilder);\n  selectedStepperIndex = signal(0);\n\n  userFormGroup: FormGroup<UserForm> = this._formBuilder.group({\n    userCtrl: [null as User | null, Validators.required],\n  });\n\n  productFormGroup: FormGroup<ProductForm> = this._formBuilder.group({\n    productCtrl: [null as Product | null, Validators.required],\n  });\n}\n\n\n<mat-form-field class=\"example-full-width\">\n<mat-label>User</mat-label>\n<input\n  type=\"text\"\n  placeholder=\"Pick one\"\n  matInput\n  [formControl]=\"form.controls.userCtrl\"\n  [matAutocomplete]=\"auto\"\n/>\n<mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n  @for (user of users; track user) {\n  <mat-option [value]=\"user\">{{ user.name }}</mat-option>\n  }\n</mat-autocomplete>\n</mat-form-field>\n\n\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { User, UserForm } from 'src/example/stepper-editable-example';\n\n@Component({\n  selector: 'user',\n  templateUrl: 'user.component.html',\n  styleUrl: 'user.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class UserComponent {\n  @Input() form: FormGroup<UserForm>;\n  users: User[] = [\n    {\n      id: '1',\n      name: 'John',\n    },\n    {\n      id: '2',\n      name: 'David',\n    },\n    {\n      id: '3',\n      name: 'Smith',\n    },\n  ];\n\n  displayFn(user: User): string {\n    return user ? user.name : '';\n  }\n}\n\n\n<div style=\"display: flex; flex-direction: column;\">\n<mat-form-field class=\"example-full-width\">\n  <mat-label>Product</mat-label>\n  <input\n    type=\"text\"\n    placeholder=\"Pick one\"\n    matInput\n    [formControl]=\"form.controls.productCtrl\"\n    [matAutocomplete]=\"autoProduct\"\n  />\n  <mat-autocomplete\n    #autoProduct=\"matAutocomplete\"\n    [displayWith]=\"displayProductFn\"\n  >\n    @for (product of products; track product) {\n    <mat-option [value]=\"product\">{{ product.desc }}</mat-option>\n    }\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n\n\nimport {\n  Component,\n  Injectable,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  Product,\n  ProductForm,\n  User,\n} from 'src/example/stepper-editable-example';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'product',\n  templateUrl: 'product.component.html',\n  styleUrl: 'product.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ProductComponent implements OnInit {\n  @Input() form: FormGroup<ProductForm>;\n  private _selectedUserId: string = '';\n  private isFirstChange = true;\n  @Input()\n  get selectedUserId(): string {\n    return this._selectedUserId;\n  }\n  set selectedUserId(value: string) {\n    if (this._selectedUserId !== value) {\n      this._selectedUserId = value;\n      if (!this.isFirstChange) {\n        console.log('SETTER INSIDE IF...');\n        this.onSelectedUserIdChange();\n      }\n      this.isFirstChange = false;\n    }\n  }\n  products: Product[] = [];\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit() {\n    if (this.selectedUserId) {\n      this.getProducts();\n    }\n  }\n\n  displayProductFn(product: Product): string {\n    return product ? product.desc : '';\n  }\n\n  getProducts() {\n    this.productService\n      .getProductsService(this.selectedUserId ? this.selectedUserId : '')\n      .subscribe((products) => {\n        this.products = products;\n        this.form.patchValue({\n          productCtrl: products[1],\n        });\n      });\n  }\n\n  private onSelectedUserIdChange(): void {\n    this.form.controls.productCtrl.setValue(null);\n    this.getProducts();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n  private sub = new BehaviorSubject<Product[]>([]);\n\n  private productMap: { [key: string]: Product[] } = {\n    '1': [\n      {\n        id: '1',\n        desc: 'One',\n      },\n      {\n        id: '2',\n        desc: 'Two',\n      },\n      {\n        id: '3',\n        desc: 'Three',\n      },\n    ],\n    '2': [\n      {\n        id: '1',\n        desc: 'Four',\n      },\n      {\n        id: '2',\n        desc: 'Five',\n      },\n      {\n        id: '3',\n        desc: 'Six',\n      },\n    ],\n    '3': [\n      {\n        id: '1',\n        desc: 'Seven',\n      },\n      {\n        id: '2',\n        desc: 'Eight',\n      },\n      {\n        id: '3',\n        desc: 'Nine',\n      },\n    ],\n  };\n\n  public observable$: Observable<Product[]> = this.sub.asObservable();\n  constructor(private httpClient: HttpClient) {}\n\n  getProductsService(userId: string): Observable<Product[]> {\n    const products = this.productMap[userId] || [];\n    return of(products);\n    // return this.httpClient.get<Product[]>(http://api/${userId});\n  }\n}\n```\n\n### Reproduction\n\nStackBlitz link: [mat-autocomplete with mat-stepper](https://stackblitz.com/edit/zzialkdj-d8rtr2sa)\n\n\n### Expected Behavior\n\nThe `<mat-option>` corresponding to the value set by `patchValue` should visually appear as selected in the autocomplete dropdown when the component is loaded.\n\n![Image](https://github.com/user-attachments/assets/09386ba4-6867-4467-b430-3ad7ae15da26)\n\n\n### Actual Behavior\n\nWhen setting the value of the product form control via `patchValue` inside the `getProducts` method, the form control updates its value correctly. However, the corresponding `<mat-option>` in the autocomplete dropdown does not visually show as selected on the initial load of the component.\n\n![Image](https://github.com/user-attachments/assets/2a862094-5b17-4b30-a53a-b7b197180e7d)\n\n\n### Environment\n\n- Angular: `18.2.9`\n- CDK/Material: `18.2.10`\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30154","RelatedDescription":"Closed issue \"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete\" (#30154)"},{"Id":"2727447736","IsPullRequest":false,"CreatedAt":"2024-12-10T09:21:46","Actor":"XavierDupessey","Number":"30153","RawContent":null,"Title":"bug(matAutocomplete): Autocomplete not opening with shadow DOM","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\n\nThe `MatAutocomplete` does not open when starting writing text if the Shadow DOM encapsulation is used.\nWe have to click to trigger the opening.\n\nWithout Shadow DOM encapsulation (working):\nhttps://github.com/user-attachments/assets/911e3de9-83c3-412e-a87e-6f994298fead\n\nWith Shadow DOM encapsulation (NOT working):\nhttps://github.com/user-attachments/assets/c0ced996-2bf9-40d5-84ba-d2d5e490e10a\n\nThank you,\nXavier\n\n### Reproduction\n\nCheckout: https://github.com/XavierDupessey/ng-14-mat-autocomplete-issue\nRun: `npm start`\nOpen `http://localhost:4200`\n\n### Expected Behavior\n\nThe autocomplete should open when entering text even when Shadow DOM encapsulation is enabled.\n\n### Actual Behavior\n\nSelect a value from the autocomplete, then input text to search another one: the autocomplete does not open.\n\n### Environment\n\n- Angular: 14\n- CDK/Material: 14\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows","Url":"https://github.com/angular/components/issues/30153","RelatedDescription":"Closed issue \"bug(matAutocomplete): Autocomplete not opening with shadow DOM\" (#30153)"},{"Id":"2727327112","IsPullRequest":false,"CreatedAt":"2024-12-10T09:12:17","Actor":"michaelstokes93","Number":"30152","RawContent":null,"Title":"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `mat-chip-grid` component in Angular Material includes an `aria-disabled` and `aria-invalid` attribute by default, even when not explicitly set in the application. This attributes are not valid on `mat-chip-grid` elements and results in accessibility violations flagged by tools like Siteimprove.\n\n### Reproduction\n\n1. Use a `mat-chip-grid` in an Angular component.\n2. Render the component and inspect the DOM.\n3. Observe that `aria-disabled=\"false\"` and `aria-false=\"false\"`is automatically added to the `mat-chip-grid`.\n\n\n### Expected Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes should only be applied to elements or roles that support it, such as interactive components.\n\n\n### Actual Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes is added to the `mat-chip-grid` component, which results in accessibility violations.\n\n\n### Environment\n\n- Angular: 16.2.0\n- CDK/Material: 16.2.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30152","RelatedDescription":"Closed issue \"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited\" (#30152)"},{"Id":"2721519823","IsPullRequest":true,"CreatedAt":"2024-12-10T08:55:22","Actor":"kseamon","Number":"30136","RawContent":null,"Title":"feat(cdk-experimental/column-resize): Support column size persistance…","State":"closed","Body":"… hooks","Url":"https://github.com/angular/components/pull/30136","RelatedDescription":"Closed or merged PR \"feat(cdk-experimental/column-resize): Support column size persistance…\" (#30136)"},{"Id":"2728143888","IsPullRequest":true,"CreatedAt":"2024-12-09T20:01:51","Actor":"andrewseguin","Number":"30155","RawContent":null,"Title":"fix(material/form-field): move error aria-live to parent container","State":"open","Body":"This is a slight change in behavior where the aria-live is always set to polite even if the user puts a different `aria-live` value on the error. Based on internal usage, this is very rare (and not part of the documented API)\r\n\r\nFixes #29616 ","Url":"https://github.com/angular/components/pull/30155","RelatedDescription":"Open PR \"fix(material/form-field): move error aria-live to parent container\" (#30155)"},{"Id":"2726744120","IsPullRequest":false,"CreatedAt":"2024-12-09T18:53:11","Actor":"janek64","Number":"30150","RawContent":null,"Title":"bug(Timepicker): Integration with Datepicker does not work with FormControl","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a `Timepicker` and `Datepicker` are bound to the same `FormControl` with a `Date` type, selecting a new value on either input will cause the data of the other input to be reset/removed. For example, when a date is already selected and then the time is selected, the date portion of the value will be reset to the current date.\n\nThe [documentation](https://material.angular.io/components/timepicker/overview#integration-with-matdatepicker) only demonstrates the integration via `ngModel`. Consequently, it is unclear to me whether it should also work with `FormControl`. Based on the description, I would have expected it. If it is explicitly not supported, I suggest that a corresponding hint should be added since using Reactive Forms is one of the most common ways for managing the values of inputs.\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts](https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts)\nSteps to reproduce:\n1. Select a date that is not the current date (e.g tomorrow). The displayed value will correctly display the selected date.\n2. Select any time. The displayed value will display the _current date_ and the selected time instead of the _selected date_.\n3. Select a date that is not the current date. The displayed date will display _0:00_ as the time instead of _selected time_.\n\n\n### Expected Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl`, but keep the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl`, but keep the selected date.\n\n### Actual Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl` and discard the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl` and discard the selected date.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.3\n- Browser(s): Firefox 133, Chrome 131\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30150","RelatedDescription":"Closed issue \"bug(Timepicker): Integration with Datepicker does not work with FormControl\" (#30150)"},{"Id":"2725053755","IsPullRequest":true,"CreatedAt":"2024-12-09T16:59:12","Actor":"crisbeto","Number":"30147","RawContent":null,"Title":"docs: archive changelog before v17","State":"closed","Body":"The changelog file was getting too big which made it hard to open online and soon Github was going to prevent it from opening at all. These changes move the changelog entries before v17 to the archive.","Url":"https://github.com/angular/components/pull/30147","RelatedDescription":"Closed or merged PR \"docs: archive changelog before v17\" (#30147)"},{"Id":"2722566709","IsPullRequest":true,"CreatedAt":"2024-12-09T16:43:25","Actor":"crisbeto","Number":"30138","RawContent":null,"Title":"fix(material/paginator): ignore clicks on disabled buttons","State":"closed","Body":"The changes in #29379 made the paginator interactive while they're disabled in order to improve accessibility, but as a result it also allows for the buttons to navigate while they're disabled.\r\n\r\nThese changes add internal checks to ensure that the buttons don't navigate while disabled. I've also cleaned up the logic a bit so we don't have four different places that deal with navigations.\r\n\r\nFixes #30124.","Url":"https://github.com/angular/components/pull/30138","RelatedDescription":"Closed or merged PR \"fix(material/paginator): ignore clicks on disabled buttons\" (#30138)"},{"Id":"2721322153","IsPullRequest":false,"CreatedAt":"2024-12-09T16:42:47","Actor":"horesse","Number":"30134","RawContent":null,"Title":"bug(Timepicker): Disabled not working in FormControl","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe disabled property does not work correctly in timepicker. It blocks the time selection, but the selection from the menu is available\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/czbajk?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.html\nSteps to reproduce: \n1. Use FormControl\n2. Disable input\n3. U can change time\n\n\n### Expected Behavior\n\nLock time selector\n\n### Actual Behavior\n\nTime selection is available\n\n### Environment\n\n- Angular: 19.0.0 - 19.0.2\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30134","RelatedDescription":"Closed issue \"bug(Timepicker): Disabled not working in FormControl\" (#30134)"},{"Id":"2722467646","IsPullRequest":true,"CreatedAt":"2024-12-09T16:42:46","Actor":"crisbeto","Number":"30137","RawContent":null,"Title":"fix(material/timepicker): disable toggle if timepicker is disabled","State":"closed","Body":"Fixes that the timepicker toggle wasn't considered as disabled automatically when the timepicker is disabled.\r\n\r\nFixes #30134.","Url":"https://github.com/angular/components/pull/30137","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): disable toggle if timepicker is disabled\" (#30137)"},{"Id":"2726807683","IsPullRequest":false,"CreatedAt":"2024-12-09T14:12:39","Actor":"kai1992cool","Number":"30151","RawContent":null,"Title":"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the below code block.\n\n```\n<form class=\"example-form\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input\n      type=\"email\"\n      matInput\n      [formControl]=\"emailFormControl\"\n      [errorStateMatcher]=\"matcher\"\n      placeholder=\"Ex. pat@example.com\"\n    />\n    @if(emailFormControl?.invalid && emailFormControl?.touched){ \n      @for(error of getErrorMessages(''); track i; let i = $index){\n        <mat-error> {{ error }} </mat-error>\n      } \n    }\n  </mat-form-field>\n</form>\n```\n\nThe errors get displayed inside the input field, which is wrong.\n\nI know this is due to content projection of `mat-error` but am not sure if its a bug or an expected result.\n\nCould you please advice.\n\n### Reproduction\n\nStackBlitz link: [stackblitz](https://stackblitz.com/edit/mpcfhkum?file=src%2Fexample%2Finput-error-state-matcher-example.html,src%2Fexample%2Finput-error-state-matcher-example.ts)\nSteps to reproduce:\n1. touch the input\n2. tab out or click elsewhere, the errors are shown inside the input\n\n\n### Expected Behavior\n\nthe error should display outside\n\n### Actual Behavior\n\nthe error are displayed inside\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material: ^19.0.0\n- Browser(s): Version 131.0.6778.109 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30151","RelatedDescription":"Closed issue \"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.\" (#30151)"},{"Id":"2724827013","IsPullRequest":false,"CreatedAt":"2024-12-07T21:48:42","Actor":"tommyc38","Number":"30146","RawContent":null,"Title":"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning","State":"open","Body":"### Feature Description\n\nCurrently, the only way to apply css to an overlay and target styles to a specific overlay position relative to a target element (e.g. above, below, etc.), you have to provide positions to the strategy you are using (such is this case in your autocomplete trigger where you need to swap the corner radius of the panel depending on if the position is above or below the target element).  If you want to use the defaults of your connected position strategy, without providing positions to a position's strategy, it would be helpful to leverage css classnames that were automatically applied depending on whatever the position the cdk chose to apply.  \n\n### Use Case\n\nA use case is exactly what you are doing in your autocomplete trigger.  Rather than using an explicit css class we could leverage selectors supplied by the cdk overlay.  For example, if the overlay was positioned above an element, the cdk would automatically apply '.cdk-overlay-positioned-above') to the parent element so we could leverage it to directly apply styles to the content in our overlay appropriately without needing to do so explicitly in our code.  A common use case other than corner radius would be css animations where we would need to know the position to appropriately target our animations (slide down or slide up, for example).  This would simplify our code and make applying styles under different positions much easier.","Url":"https://github.com/angular/components/issues/30146","RelatedDescription":"Open issue \"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning\" (#30146)"},{"Id":"2724669305","IsPullRequest":false,"CreatedAt":"2024-12-07T15:15:41","Actor":"michaelbe812","Number":"30145","RawContent":null,"Title":"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nif it is a user-issue/skill-issue on my side, excuse me to waste your time 😅\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-6rd4gzr4?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fmain.ts&file=src%2Fglobal_styles.css&template=node&title=Angular%20Starter\nSteps to reproduce:\nClick the button in the first container to open a cdkMenu.\nUpdate the position with the controls above. you will notive that the projected overlay is not positioned differently. \n\nIf you change the values for the initial position you will notice that the menu is positioned differently initially. \n\nHint: the second container below uses cdkOverlayOrigin and cdkConnectedOverlay for comparision.\n\nHere's also a short video\n\nhttps://github.com/user-attachments/assets/1bfeee47-9192-45b4-a247-e9d7fd7c6524\n\n\n### Expected Behavior\n\nThe cdkMenu-Position should react to new values via cdkMenuPosition-input\n\n### Actual Behavior\n\nSee repro\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n\n","Url":"https://github.com/angular/components/issues/30145","RelatedDescription":"Open issue \"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly\" (#30145)"},{"Id":"2724367612","IsPullRequest":false,"CreatedAt":"2024-12-07T05:17:02","Actor":"bitrxjs","Number":"30144","RawContent":null,"Title":"feat(MatRipple):  Do not trigger it when scrolling(touchstart)","State":"open","Body":"### Feature Description\n\nWhenever MatNavList is scrolled it triggers ripple effect on touchstart, instead it should emulate native android behaviour of only trigger when tap/click happens on mobile devices.\n\nit looks very janky on ios & other mobile devices when user start scrolling fast.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30144","RelatedDescription":"Open issue \"feat(MatRipple):  Do not trigger it when scrolling(touchstart)\" (#30144)"},{"Id":"2723181191","IsPullRequest":false,"CreatedAt":"2024-12-06T14:22:46","Actor":"russelporosky","Number":"30143","RawContent":null,"Title":"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is simply a quality of life improvement request.\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\nI've overridden `on-surface` and `surface` in [the recommended manner](https://material.angular.io/guide/theming#system-tokens), but the IDE (IntelliJ in this screenshot) won't pick those modifications up.\n\nThe rendered page in the browser shows the correct colour, this is strictly an issue within the IDE.\n\nThe concern is that deeper into the project, when a developer is using Material CSS variables, the colour hints will not match what they are expecting (and needing) which will cause confusion and potentially result in additional variables being created by the developer that aren't actually needed, just so the IDE hints match their expectations.\n\n### Reproduction\n\nSteps to reproduce:\n1. add Material to an Angular project\n2. override a theme variable such as `surface`\n3. use the matching CSS property in a rule (`--mat-sys-on-surface` in this example)\n4. observe that the IDE colour hint does not match the overridden value\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\n\n### Expected Behavior\n\nThe colour hints in the sidebar should show the overridden colour(s) instead of the defaults.\n\n### Actual Behavior\n\nWhat I see in the sidebar are the defaults for the current theme.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n- IDE: IntelliJ IDEA 2024.3 (Ultimate Edition)","Url":"https://github.com/angular/components/issues/30143","RelatedDescription":"Open issue \"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints\" (#30143)"},{"Id":"2723035715","IsPullRequest":false,"CreatedAt":"2024-12-06T13:14:07","Actor":"jfduhamel","Number":"30141","RawContent":null,"Title":"M3 material custom theme (doc+ howto)","State":"open","Body":"### Documentation Feedback\n\nhello angular / material / m3,\nwhere is the official doc of material 3 for angular material ?\nit's a nightmare to construct my CUSTOM scss theme since i moved from angular 17 to 19\nprimary secondary tertiary neutral ...\ni only need a primary why it seems i need to give the others secondary .....\nnowhere i can find a real example !\nhttps://material.angular.io/ its only about components\n\noh yeah using a prebuilt theme no souci but the other way...\n\nam i the only one in this situation ?\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/30141","RelatedDescription":"Open issue \"M3 material custom theme (doc+ howto)\" (#30141)"},{"Id":"2722982455","IsPullRequest":false,"CreatedAt":"2024-12-06T12:48:06","Actor":"SeraphCoding","Number":"30139","RawContent":null,"Title":"bug(Menu): fix menu panels not closing when no trigger is present","State":"open","Body":"### Is this a regression?\nNo.\n\n### The previous version in which this bug was not present was\n\nUnknown.\n\n### Description\n\nMenuPanels cannot be closed when they do not have an active trigger set.\nA scenario where unsetting the trigger during runtime may be wanted is when the button is meant to open a context menu or a bottom sheet depending on the size of the viewport and so needs to switch between a click handler (that opens a bottom sheet) or a matMenu Trigger that opens a menu panel during runtime. An example application has been setup for such a scenario (without the click handler, just temporarily setting the menu trigger to null during runtime)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ku1ehf?file=src%2Fexample%2Fmenu-icons-example.html\nSteps to reproduce:\n1. Downsize the window width until the button text says \"has Trigger\" (less than 600px)\n2. Hit the button\n3. The MatMenuPanel should be open now showing some dummy options - do not click anything\n4. Now upsize the window width until the button says \"no Trigger\" - ensure that the menu panel remains open during that time\n5. Try clicking a menu option or anywhere in the app window that would normally close the MatMenuPanel\n\n### Expected Behavior\n\nThe menu panel closes when an option is selected or anywhere within the app window outside the menu panel is clicked.\n\n### Actual Behavior\n\nWhen the trigger to open the menu is lost - the menu panel can no longer close until it regains a trigger.\n\n### Environment\n\n- Angular: 19.0.1\n- CDK/Material: 19.0.1\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Unrelated.","Url":"https://github.com/angular/components/issues/30139","RelatedDescription":"Open issue \"bug(Menu): fix menu panels not closing when no trigger is present\" (#30139)"},{"Id":"2721329785","IsPullRequest":false,"CreatedAt":"2024-12-06T06:00:10","Actor":"horesse","Number":"30135","RawContent":null,"Title":"bug(Timepicker): With changing the time, date is changing too","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn FormControl, when the time changes, the date also changes\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/czbajk-h7xm7v?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.ts\nSteps to reproduce:\n1. Add FormControl\n2. Add DatePicker and TimePicker\n3. Change Date\n4. Change Time\n5. See formControl value and value in DatePicker\n\n\n### Expected Behavior\n\nChange only time in value\n\n### Actual Behavior\n\nChange date\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome \n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30135","RelatedDescription":"Closed issue \"bug(Timepicker): With changing the time, date is changing too\" (#30135)"},{"Id":"2720654296","IsPullRequest":true,"CreatedAt":"2024-12-05T15:19:26","Actor":"josephperrott","Number":"30133","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30133","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#30133)"},{"Id":"2720353149","IsPullRequest":false,"CreatedAt":"2024-12-05T12:58:45","Actor":"keatkeat87","Number":"30132","RawContent":null,"Title":"bug(MatTooltip): body line-height will affect tooltip gap","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\napp.component.html\n\n`<button mat-button #matTooltip=\"matTooltip\" matTooltip=\"Info about the action\" style=\"background-color: pink;\">Action</button>`\n\nstyles.scss\n```\nbody {\n  line-height: 24px;\n}\n```\n\nThe problems:\nthere is a 1px gap between button and tooltip.\n![Image](https://github.com/user-attachments/assets/ba665f90-a94b-41f8-ac20-7916249ee868)\nif line-height 28px, the gap will become 2px.\n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/github/keatkeat87/ng-mat-tooltips-gap-issue\nSteps to reproduce:\n1. ng serve --open\n2. hover to button\n\n\n### Expected Behavior\n\nno extra 1px gap.\n\n### Actual Behavior\n\nthere is a 1px extra gap\n\n### Environment\n\nAngular CLI: 19.0.3\nNode: 20.18.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@angular/cdk                    19.0.2\n@angular/material               19.0.2\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0","Url":"https://github.com/angular/components/issues/30132","RelatedDescription":"Open issue \"bug(MatTooltip): body line-height will affect tooltip gap\" (#30132)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-11T03:30:02.7374038Z","RunDurationInMilliseconds":1937}