{"Data":{"Angular-Issues":{"Issues":[{"Id":"1483172968","IsPullRequest":true,"CreatedAt":"2022-12-08T00:08:12","Actor":"constantant","Number":"48394","RawContent":null,"Title":"fix(common): Update `Location` to get a normalized URL valid in case a represented URL starts with the substring equals `APP_BASE_HREF`","State":"open","Body":"Update `Location` to get a normalized URL valid in case a represented URL starts with the substring equals `APP_BASE_HREF`\r\n\r\n```ts\r\n@NgModule({\r\n  imports: [RouterModule.forRoot([{path: '/enigma', component: EnigmaComponent}])],\r\n  providers: [{provide: APP_BASE_HREF, useValue: '/en'}]\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nNavigating to `/enigma` will redirect to `/en/igma` not to `/en/enigma` as it expects\r\n\r\nFixes: #45744\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: 45744\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48394","RelatedDescription":"Open PR \"fix(common): Update `Location` to get a normalized URL valid in case a represented URL starts with the substring equals `APP_BASE_HREF`\" (#48394)"},{"Id":"1482088517","IsPullRequest":true,"CreatedAt":"2022-12-07T22:09:23","Actor":"alan-agius4","Number":"48387","RawContent":null,"Title":"refactor(compiler): replace deprecated `sourcemap-codec`","State":"closed","Body":"`sourcemap-codec` as been deprecated in favor of `@jridgewell/sourcemap-codec`.\r\n\r\nSee: https://www.npmjs.com/package/sourcemap-codec\r\n","Url":"https://github.com/angular/angular/pull/48387","RelatedDescription":"Closed or merged PR \"refactor(compiler): replace deprecated `sourcemap-codec`\" (#48387)"},{"Id":"1482952939","IsPullRequest":true,"CreatedAt":"2022-12-07T22:04:40","Actor":"AndrewKushnir","Number":"48393","RawContent":null,"Title":"Bump version to \"v15.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48393","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0-next.2\" with changelog.\" (#48393)"},{"Id":"1482940181","IsPullRequest":true,"CreatedAt":"2022-12-07T21:56:34","Actor":"AndrewKushnir","Number":"48392","RawContent":null,"Title":"docs: release notes for the v15.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/48392","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.3 release\" (#48392)"},{"Id":"1482935799","IsPullRequest":true,"CreatedAt":"2022-12-07T21:54:02","Actor":"AndrewKushnir","Number":"48391","RawContent":null,"Title":"Bump version to \"v15.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48391","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.3\" with changelog.\" (#48391)"},{"Id":"1482761924","IsPullRequest":true,"CreatedAt":"2022-12-07T20:23:13","Actor":"npx","Number":"48390","RawContent":null,"Title":"docs: add yannick baron to list of aio GDEs","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/48390","RelatedDescription":"Open PR \"docs: add yannick baron to list of aio GDEs\" (#48390)"},{"Id":"1481757584","IsPullRequest":false,"CreatedAt":"2022-12-07T17:11:34","Actor":"iusamaaziz","Number":"48385","RawContent":null,"Title":"FormBuilder not accepting RawValue of object while creating its FormGroup","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI've this custom type FormRawValue that returns the JSON/RawValue of any AbstractControl:\r\n\r\n```\r\nimport { AbstractControl } from '@angular/forms';\r\nexport type FormRawValue<T extends AbstractControl> = T extends AbstractControl<any, infer TRawValue> ? TRawValue : never;\r\n```\r\n\r\nand this simple `IPerson` interface:\r\n\r\n```\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { FormRawValue } from './Forms.type';\r\n\r\nexport interface IPerson {\r\n  id: FormControl<number>;\r\n  name: FormControl<string>;\r\n}\r\n\r\nexport type Person = FormRawValue<FormGroup<IPerson>>;\r\n```\r\n\r\nIn the component code, I've a function that creates a new FormGroup using the JSON rawValue provided to it like this:\r\n\r\n```\r\npublic map(data: Person) { // Person is simply the rawValue of IPerson\r\n\r\n    let group = this._formBuilder.group<IPerson>(data as any); // works fine but bad appraoch\r\n    let group1 = this._formBuilder.group<IPerson>(data); //ERROR here, but it should work because 'data' holds exactly the same thing that formBuilder is expecting.\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-s38dz8?file=src/app/app.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nArgument of type '{ id: number; name: string; }' is not assignable to parameter of type 'IPerson'.\r\nTypes of property 'id' are incompatible.\r\nType 'number' is not assignable to type 'FormControl<number>'.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.7\r\nNode: 18.12.0 (Unsupported)\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 14.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1402.7\r\n@angular-devkit/build-angular      14.2.7\r\n@angular-devkit/core               14.2.7\r\n@angular-devkit/schematics         14.2.7\r\n@angular/cdk                       14.2.6\r\n@angular/cli                       14.2.7\r\n@angular/material                  14.2.6\r\n@angular/material-moment-adapter   14.2.6\r\n@schematics/angular                14.2.7\r\nrxjs                               7.5.4\r\ntypescript                         4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48385","RelatedDescription":"Closed issue \"FormBuilder not accepting RawValue of object while creating its FormGroup\" (#48385)"},{"Id":"1481683209","IsPullRequest":true,"CreatedAt":"2022-12-07T17:09:35","Actor":"alan-agius4","Number":"48384","RawContent":null,"Title":"Backport #48372 and #47882","State":"closed","Body":"Backport the below PRs to patch branch\r\n\r\nhttps://github.com/angular/angular/pull/48372\r\nhttps://github.com/angular/angular/pull/47882","Url":"https://github.com/angular/angular/pull/48384","RelatedDescription":"Closed or merged PR \"Backport #48372 and #47882\" (#48384)"},{"Id":"1479402788","IsPullRequest":true,"CreatedAt":"2022-12-07T17:08:32","Actor":"alan-agius4","Number":"48378","RawContent":null,"Title":"refactor(compiler): replace `flatten` and `map` with `flatMap`.","State":"closed","Body":"Replace custom `flatten` and `map` with native `flatMap` usage.\r\n\r\nBenchmark:\r\n| Test case name \t| Result                                                 \t|\r\n|----------------\t|--------------------------------------------------------\t|\r\n| flatten & map  \t| flatten & map x 1,182 ops/sec ±2.18% (63 runs sampled) \t|\r\n| flatMap        \t| flatMap x 6,011 ops/sec ±0.91% (35 runs sampled)       \t|\r\n\r\n\r\nThe fact that `flatMap` is faster is also highlighted in https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap","Url":"https://github.com/angular/angular/pull/48378","RelatedDescription":"Closed or merged PR \"refactor(compiler): replace `flatten` and `map` with `flatMap`.\" (#48378)"},{"Id":"1478300016","IsPullRequest":true,"CreatedAt":"2022-12-07T17:07:40","Actor":"angular-robot","Number":"48371","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.35","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.34` -> `v2.1.35` |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.35`](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48371","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.35\" (#48371)"},{"Id":"1482365126","IsPullRequest":false,"CreatedAt":"2022-12-07T16:50:15","Actor":"romamatusevich","Number":"48389","RawContent":null,"Title":"Rename global namespace `ng` to avoid possible conflicts with minified code of other libraries","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon\n\n### Description\n\nActually global namespace name `ng` in development mode (https://angular.io/api/core/global) is not reliable. For instance in case of having other minified libraries it's possible to get name conflict based on minified output.\n\n### Proposed solution\n\nRename `ng` namespace at least to: `ngDevNamespace`.\n\n### Alternatives considered\n\nRename to any other not short name of the namespace.","Url":"https://github.com/angular/angular/issues/48389","RelatedDescription":"Open issue \"Rename global namespace `ng` to avoid possible conflicts with minified code of other libraries\" (#48389)"},{"Id":"1482267858","IsPullRequest":true,"CreatedAt":"2022-12-07T16:02:42","Actor":"angular-robot","Number":"48388","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/animations](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.0.1/15.1.0-next.2) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `d94cd02` -> `f6e4541` |\n| [@angular/common](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/common](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.0.1/15.1.0-next.2) |\n| [@angular/compiler](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/compiler](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.0.1/15.1.0-next.2) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/core](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/core](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.0.1/15.1.0-next.2) |\n| [@angular/elements](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2felements/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/forms](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a2a71f7` -> `5677f11` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.0.1/15.1.0-next.2) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | dependencies | minor | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.0.1/15.1.0-next.2) |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.1.0-next.1/15.1.0-next.2) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | dependencies | patch | [`15.1.0-next.1` -> `15.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.1.0-next.1/15.1.0-next.2) |\n| angular/dev-infra | action | digest | `c3339f5` -> `51f34ba` |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.1.0-next.2`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1510-next2-2022-12-07)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.1.0-next.1...15.1.0-next.2)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8e52ca2714](https://togithub.com/angular/angular/commit/8e52ca271496b0feebf66b2dc7c8f396b73d61a0) | fix | Don't generate srcsets with very large sources ([#&#8203;47997](https://togithub.com/angular/angular/pull/47997)) |\n| [f8ecc194e9](https://togithub.com/angular/angular/commit/f8ecc194e93bf9f80af0cb0e77032341bf2f9886) | fix | Update `Location` to support base href containing `origin` ([#&#8203;48327](https://togithub.com/angular/angular/pull/48327)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4c023956d8](https://togithub.com/angular/angular/commit/4c023956d8dd05d8455612dff185a7e7918c9fed) | fix | make sure selectors inside container queries are correctly scoped ([#&#8203;48353](https://togithub.com/angular/angular/pull/48353)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [27eaded62d](https://togithub.com/angular/angular/commit/27eaded62dbe059fc9ac02cfa7f53ccf8aebccbf) | fix | Produce diagnostic rather than crash when using invalid hostDirective ([#&#8203;48314](https://togithub.com/angular/angular/pull/48314)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [38421578a2](https://togithub.com/angular/angular/commit/38421578a2573bcbc86c927ed4015e20fc39f04a) | feat | Make the `isStandalone()` function available in public API ([#&#8203;48114](https://togithub.com/angular/angular/pull/48114)) |\n| [dd42974b07](https://togithub.com/angular/angular/commit/dd42974b070b068135c1bc34072486ae440e45e0) | feat | support TypeScript 4.9 ([#&#8203;48005](https://togithub.com/angular/angular/pull/48005)) |\n| [5f9c7ceb90](https://togithub.com/angular/angular/commit/5f9c7ceb907be47dff3e203dd837fd6ee9133fcb) | fix | unable to inject ChangeDetectorRef inside host directives ([#&#8203;48355](https://togithub.com/angular/angular/pull/48355)) |\n\n#### Special Thanks\n\nAlan Agius, Alex Castle, Andrew Kushnir, Andrew Scott, Bob Watson, Charles Lyding, Derek Cormier, Joey Perrott, Konstantin Kharitonov, Kristiyan Kostadinov, Matthieu Riegler, Paul Gschwendtner, Pawel Kozlowski, dario-piotrowicz, piyush132000 and sr5434\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Never, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48388","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#48388)"},{"Id":"1479204873","IsPullRequest":true,"CreatedAt":"2022-12-07T10:51:29","Actor":"devversion","Number":"48376","RawContent":null,"Title":"Switch `ng_module` and `ts_library` devmode to ES2020 and add ESM loader interop support","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/48376","RelatedDescription":"Closed or merged PR \"Switch `ng_module` and `ts_library` devmode to ES2020 and add ESM loader interop support\" (#48376)"},{"Id":"1481798992","IsPullRequest":false,"CreatedAt":"2022-12-07T10:41:22","Actor":"Marcarrian","Number":"48386","RawContent":null,"Title":"Different behaviour in tests when importing zone.js polyfills in angular.json vs test.ts","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThere is a different behaviour in tests when importing `zone.js` polyfills in `angular.json` vs. importing `zone.js` polyfills in `test.ts`. In our tests we have asynchronous expectations and wait for macro tasks.\r\n\r\nThis is a simple reproduction of the different behaviour:\r\n\r\n```ts\r\n  it('should not throw unhandled promise rejection', async () => {\r\n    const rejectPromise = Promise.reject('error');\r\n    await new Promise(resolve => setTimeout(resolve));\r\n    await expectAsync(rejectPromise).toBeRejected();\r\n  });\r\n```\r\n\r\nWhen importing `zone.js` and `zone.js/testing` polyfills in `angular.json`, **the test fails with Unhandled promise rejection**.\r\n\r\nWhen importing `zone.js` and `zone.js/testing` polyfills in `test.ts`, **the test succeeds**.\r\n\r\nPlease find the different configurations in my reproduction repository:\r\n\r\n- **projects/lib-one** imports `zone.js` polyfills in `angular.json`\r\n- **projects/lib-two** imports `zone.js` polyfills in `test.ts`\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/Marcarrian/angular-15-zone-js-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nUnhandled promise rejection: error thrown\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.0.2\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@schematics/angular             15.0.2\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48386","RelatedDescription":"Open issue \"Different behaviour in tests when importing zone.js polyfills in angular.json vs test.ts\" (#48386)"},{"Id":"1481229947","IsPullRequest":true,"CreatedAt":"2022-12-07T07:36:23","Actor":"Piyush132000","Number":"48382","RawContent":null,"Title":"docs: cleanup the components","State":"open","Body":"Removed empty methods and import from files\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nNA\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48382","RelatedDescription":"Open PR \"docs: cleanup the components\" (#48382)"},{"Id":"1481206880","IsPullRequest":false,"CreatedAt":"2022-12-07T07:24:14","Actor":"cexbrayat","Number":"48381","RawContent":null,"Title":"`FormBuilder.array()` has wrong inference with union types","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `FormBuilder.array()` method is usually used like this:\r\n```ts\r\ntype MovieFormGroup = FormGroup<{ type: FormControl<'movie'>, title: FormControl<string> }>\r\n// works great\r\nconst movies = fb.array<MovieFormGroup>([])\r\n//    ^? FormArray<FormGroup<{ type: FormControl<'movie'>, title: FormControl<string> }>>\r\nmovies.push(fb.group({ type: 'movie', title: '' }))\r\nconst moviesValue = movies.value;\r\n//    ^? Array<Partial<{ type: 'movie', title: '' }>>\r\n```\r\n\r\nNow let's consider that we want movies or books. We can use a union type, but that sadly brokes the type inference:\r\n```ts\r\n// let's use a union type, because we want movies or books\r\ntype BookFormGroup = FormGroup<{ type: FormControl<'book'>, title: FormControl<string> }>\r\n// sadly this breaks the types\r\nconst items = fb.array<MovieFormGroup | BookFormGroup>([])\r\n//    ^? FormArray<FormRecord<AbstractControl<any, any>>> which is incorrect\r\nitems.push(fb.group({ type: 'movie', title: '' }));\r\nitems.push(fb.group({ type: 'show', title: '' })); // should not compile but does\r\nconst itemsValue = items.value;\r\n//    ^? Array<Partial<{ [x]: string: any }>>\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgOQgO2QVwDbYIYBG2ApgGLQgBCmw2AJsVADRzlQgDiUEmYLbIAMLoY3bPwoBBKFDwBPOAF84AM24g4AcgACeNAHMceKAHoVFAM6aA3ACgYcsMTgBZCADdgZClx5g4ALysPty8ADxIDk4AXMHswmiiENhhmiAeXpoAfCwwwDAksQIJSSkWosAGWUpZtgDG6OWqBLGoGDj4RN7s1LQMUIFwaB1weBZwmGgA1mgQAO5oo+NtWLiEJAK99Ix2tiYmcHPQU+P6UMR4MPWN8OmexONBKgQAdMaycmFu9wK+vFkACgA2gBdACUewOcGhAD0APy2O5eCwvMCYCwACwBzxeZz8AMijmIsTSGWImly+UKWk0SjBEIaaCaSIeADU8NhMM4giyUe4OVy7PtobCEZC4CQYJpxujnHgJmhgOg4FFiCwCMQ6nhZYdnHM9LcyeNoHACBAICd7ES4JRzVNfqF-EEHX4IiqiUUKCUxKkzRbspSCsS4kIRD7ylBKvpqopasKLHg6NgFDAMcBxgRzngTiqMc5VRZrkz4PliCBHs03jJ5F8yS7eHAAD42u31sCA0EQ4Ui+G2Uvl1HorE4vG8AnumJaFkUlVU4OaWmKel2fsotGY7GvUdgceqkmY+YzvJBkmL5dweMYnj0IYQeBHKBTItNVfszncuCrl7899CqGi2xxS1JpUzlasFAgFQ4EZUpxjoCAHjQTR4DzbAwGfEsYDLCxpA+SQKxxd55GBEEljgXCa2+Lw2ybFsLTbLIu3-OBe1XCi5HwwcNxHR1dw9KcySPOdTzpMEVyw8t2M49dhy3XjCUnaUrzmISTxpUTrAvA4DxwOhb3vY4MM-CScPA-C3y5QY2LMvkBWIP8RRYsVhXQZNDmOYweDQPSAElVC8vT0xVCBoLGeAxgVGZ5jQIzV0EMLBkI8CSLBMjJiihYyIEdjax+EI-Fo216Py-5xR7BE4rCrjZNxeSJ3nadA2pBcNPFbQYAsABaYB9Fmc4+xM+LymqzdavxBT5wPFSmvnM8xK0uB4IefT3MfFgIuIAAPJw6iwuhYsGsKLI-Srhp-QUyoA2wgA\n\n### Please provide the exception or error you saw\n\n```true\nTypeScript should properly infer the type of the form array when using union type\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.2\r\nNode: 16.17.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@schematics/angular             15.0.2\r\nrxjs                            7.6.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48381","RelatedDescription":"Open issue \"`FormBuilder.array()` has wrong inference with union types\" (#48381)"},{"Id":"1480432328","IsPullRequest":true,"CreatedAt":"2022-12-06T23:12:11","Actor":"JeanMeche","Number":"48380","RawContent":null,"Title":"chore: cleanup polyfills by importing zone.js directly in angular.json","State":"open","Body":"Since v15, polyfills can be passed directly into angular.json let use this opportunity to reduce the number of unecessary files.\r\n\r\n## PR Type\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48380","RelatedDescription":"Open PR \"chore: cleanup polyfills by importing zone.js directly in angular.json\" (#48380)"},{"Id":"1479474023","IsPullRequest":false,"CreatedAt":"2022-12-06T21:21:38","Actor":"musheghz","Number":"48379","RawContent":null,"Title":"TypeError while using Forms: Cannot read properties of null (reading '_rawValidators')","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\ncore.mjs:9229 ERROR TypeError: Cannot read properties of null (reading '_rawValidators')\r\n    at getControlValidators (forms.mjs:901:20)\r\n    at setUpValidators (forms.mjs:3110:24)\r\n    at setUpControl (forms.mjs:3031:5)\r\n    at FormGroupDirective.addControl (forms.mjs:4927:9)\r\n    at FormControlName._setUpControl (forms.mjs:5491:43)\r\n    at FormControlName.ngOnChanges (forms.mjs:5436:18)\r\n    at FormControlName.rememberChangeHistoryAndInvokeOnChangesHook (core.mjs:1779:14)\r\n    at callHook (core.mjs:2762:18)\r\n    at callHooks (core.mjs:2721:17)\r\n    at executeInitAndCheckHooks (core.mjs:2672:9)\n\n### Proposed solution\n\nI think somehow we can add missed field name\n\n### Alternatives considered\n\nThis will help with dynamic forms","Url":"https://github.com/angular/angular/issues/48379","RelatedDescription":"Closed issue \"TypeError while using Forms: Cannot read properties of null (reading '_rawValidators')\" (#48379)"},{"Id":"1477641028","IsPullRequest":true,"CreatedAt":"2022-12-06T19:43:10","Actor":"angular-robot","Number":"48367","RawContent":null,"Title":"build: update dependency jasmine-spec-reporter to v7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine-spec-reporter](https://togithub.com/bcaudan/jasmine-spec-reporter) | devDependencies | major | [`~5.0.0` -> `~7.0.0`](https://renovatebot.com/diffs/npm/jasmine-spec-reporter/5.0.2/7.0.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>bcaudan/jasmine-spec-reporter</summary>\n\n### [`v7.0.0`](https://togithub.com/bcaudan/jasmine-spec-reporter/blob/HEAD/CHANGELOG.md#&#8203;700)\n\n[Compare Source](https://togithub.com/bcaudan/jasmine-spec-reporter/compare/v6.0.0...v7.0.0)\n\n#### Bugfix\n\n-   'SpecReporter' is not assignable to type 'Reporter | CustomReporter' [#&#8203;588](https://togithub.com/bcaudan/jasmine-spec-reporter/pull/588)\n\n#### Breaking change\n\nUpdate signature of `CustomReporterResult` to fix collision with new jasmine properties\n\n**Before:**\n\n```ts\nexport interface CustomReporterResult extends jasmine.CustomReporterResult {\n  duration?: string\n}\n```\n\n**Now:**\n\n```ts\nexport interface CustomReporterResult extends jasmine.CustomReporterResult {\n  _jsr?: {\n    formattedDuration?: string\n  }\n}\n```\n\n### [`v6.0.0`](https://togithub.com/bcaudan/jasmine-spec-reporter/blob/HEAD/CHANGELOG.md#&#8203;600)\n\n[Compare Source](https://togithub.com/bcaudan/jasmine-spec-reporter/compare/v5.0.2...v6.0.0)\n\n#### Feature\n\n-   Use colors/safe [#&#8203;538](https://togithub.com/bcaudan/jasmine-spec-reporter/pull/538)\n\n#### Breaking change\n\nString prototype does not contain color properties anymore, colors must now be applied with the new `theme` component available as a field in [custom display processors](docs/customize-output.md).\n\n**Before:**\n\n```ts\nclass MyProcessor extends DisplayProcessor {\n  public displaySuccessfulSpec(spec: CustomReporterResult, log: string): string {\n    return 'OK '.successful + log\n  }\n}\n```\n\n**Now:**\n\n```ts\nclass MyProcessor extends DisplayProcessor {\n  public displaySuccessfulSpec(spec: CustomReporterResult, log: string): string {\n    return this.theme.successful('OK ') + log\n  }\n}\n```\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48367","RelatedDescription":"Closed or merged PR \"build: update dependency jasmine-spec-reporter to v7\" (#48367)"},{"Id":"1478300571","IsPullRequest":true,"CreatedAt":"2022-12-06T19:06:44","Actor":"angular-robot","Number":"48372","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.17.0` -> `v1.18.0` |\n| [karma-coverage](https://togithub.com/karma-runner/karma-coverage) | devDependencies | minor | [`~2.0.3` -> `~2.2.0`](https://renovatebot.com/diffs/npm/karma-coverage/2.0.3/2.2.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | minor | [`^0.26.0` -> `^0.27.0`](https://renovatebot.com/diffs/npm/magic-string/0.26.7/0.27.0) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.5.0` -> `~7.6.0`](https://renovatebot.com/diffs/npm/rxjs/7.5.6/7.6.0) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.5.0` -> `~7.6.0`](https://renovatebot.com/diffs/npm/rxjs/7.5.7/7.6.0) |\n| [zone.js](https://togithub.com/angular/angular) ([changelog](https://togithub.com/angular/angular/blob/master/packages/zone.js/CHANGELOG.md)) | dependencies | minor | [`^0.11.4` -> `^0.12.0`](https://renovatebot.com/diffs/npm/zone.js/0.11.8/0.12.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.18.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.18.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.18.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"be236556c7b9c7b91cb370e837fdcec62b6e8893408cd4465ae883c9d7c67024\",\n    strip_prefix = \"bazel-lib-1.18.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.18.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   feat: add executable attribute to write_source_files by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/293](https://togithub.com/aspect-build/bazel-lib/pull/293)\n-   refactor: use rm -R instead -r as it is the primary option and lowercase -r is the alias by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/294](https://togithub.com/aspect-build/bazel-lib/pull/294)\n-   fix: add diff_test to docs by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/296](https://togithub.com/aspect-build/bazel-lib/pull/296)\n-   feat: add write_source_file to public API by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/295](https://togithub.com/aspect-build/bazel-lib/pull/295)\n-   fix: write_source_files should use target platform for additional_update_targets by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/297](https://togithub.com/aspect-build/bazel-lib/pull/297)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0\n\n</details>\n\n<details>\n<summary>karma-runner/karma-coverage</summary>\n\n### [`v2.2.0`](https://togithub.com/karma-runner/karma-coverage/blob/HEAD/CHANGELOG.md#&#8203;220-httpsgithubcomkarma-runnerkarma-coveragecomparev211v220-2022-02-10)\n\n[Compare Source](https://togithub.com/karma-runner/karma-coverage/compare/v2.1.1...v2.2.0)\n\n##### Features\n\n-   update Istanbul packages ([24aac11](https://togithub.com/karma-runner/karma-coverage/commit/24aac11aacef75aab720f69aabaa9651cc770630))\n\n#### [2.1.1](https://togithub.com/karma-runner/karma-coverage/compare/v2.1.0...v2.1.1) (2022-02-05)\n\n##### Bug Fixes\n\n-   handle unexpected error when generating code coverage ([bca2c69](https://togithub.com/karma-runner/karma-coverage/commit/bca2c69d43332598acb30d8e5d6e26d783bc06fb)), closes [/github.com/karma-runner/karma/blob/c985155a4eac95c525e1217e98d4013ac5f53305/lib/server.js#L392](https://togithub.com//github.com/karma-runner/karma/blob/c985155a4eac95c525e1217e98d4013ac5f53305/lib/server.js/issues/L392)\n-   race condition between the Karma shutdown and coverage writing ([44b31eb](https://togithub.com/karma-runner/karma-coverage/commit/44b31eba5a221e6e049b6dff426207f555b379e2)), closes [#&#8203;434](https://togithub.com/karma-runner/karma-coverage/issues/434)\n\n### [`v2.1.1`](https://togithub.com/karma-runner/karma-coverage/blob/HEAD/CHANGELOG.md#&#8203;211-httpsgithubcomkarma-runnerkarma-coveragecomparev210v211-2022-02-05)\n\n[Compare Source](https://togithub.com/karma-runner/karma-coverage/compare/v2.1.0...v2.1.1)\n\n##### Bug Fixes\n\n-   handle unexpected error when generating code coverage ([bca2c69](https://togithub.com/karma-runner/karma-coverage/commit/bca2c69d43332598acb30d8e5d6e26d783bc06fb)), closes [/github.com/karma-runner/karma/blob/c985155a4eac95c525e1217e98d4013ac5f53305/lib/server.js#L392](https://togithub.com//github.com/karma-runner/karma/blob/c985155a4eac95c525e1217e98d4013ac5f53305/lib/server.js/issues/L392)\n-   race condition between the Karma shutdown and coverage writing ([44b31eb](https://togithub.com/karma-runner/karma-coverage/commit/44b31eba5a221e6e049b6dff426207f555b379e2)), closes [#&#8203;434](https://togithub.com/karma-runner/karma-coverage/issues/434)\n\n### [`v2.1.0`](https://togithub.com/karma-runner/karma-coverage/blob/HEAD/CHANGELOG.md#&#8203;210-httpsgithubcomkarma-runnerkarma-coveragecomparev203v210-2021-12-01)\n\n[Compare Source](https://togithub.com/karma-runner/karma-coverage/compare/v2.0.3...v2.1.0)\n\n##### Bug Fixes\n\n-   **deps:** update main and dev dependencies ([c20d982](https://togithub.com/karma-runner/karma-coverage/commit/c20d982607168ccc302f1cca576dbbbdac0a1af6))\n\n##### Features\n\n-   **reporter:** log coverage threshold as a warning fixed [#&#8203;432](https://togithub.com/karma-runner/karma-coverage/issues/432) ([a6c95d8](https://togithub.com/karma-runner/karma-coverage/commit/a6c95d8fb932a4191474e6504174df7bc9a6fe60))\n\n#### [2.0.3](https://togithub.com/karma-runner/karma-coverage/compare/v2.0.2...v2.0.3) (2020-07-24)\n\n##### Bug Fixes\n\n-   **report:** waiting promise resolve in onExist method fix [#&#8203;418](https://togithub.com/karma-runner/karma-coverage/issues/418) ([c93f061](https://togithub.com/karma-runner/karma-coverage/commit/c93f0612da6898fb5cfbb9ece57556a2704c4397))\n\n#### [2.0.2](https://togithub.com/karma-runner/karma-coverage/compare/v2.0.1...v2.0.2) (2020-04-13)\n\n##### Bug Fixes\n\n-   **reporter:** update calls to  match new API in istanbul-lib-report fix [#&#8203;398](https://togithub.com/karma-runner/karma-coverage/issues/398) ([#&#8203;403](https://togithub.com/karma-runner/karma-coverage/issues/403)) ([4962a70](https://togithub.com/karma-runner/karma-coverage/commit/4962a70026efbbd77e9fa7b6bfd6be29047c1082))\n-   remove information about old istanbul lib ([#&#8203;404](https://togithub.com/karma-runner/karma-coverage/issues/404)) ([5cf931a](https://togithub.com/karma-runner/karma-coverage/commit/5cf931afe331cfcebf7cf934ec52de933344091d))\n\n#### [2.0.1](https://togithub.com/karma-runner/karma-coverage/compare/v2.0.0...v2.0.1) (2019-08-20)\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string</summary>\n\n### [`v0.27.0`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0270-httpsgithubcomrich-harrismagic-stringcomparev0267v0270-2022-12-03)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.26.7...v0.27.0)\n\n##### Performance Improvements\n\n-   use [@&#8203;jridgewell/sourcemap-codec](https://togithub.com/jridgewell/sourcemap-codec) ([e68f3e0](https://togithub.com/rich-harris/magic-string/commit/e68f3e05fe6d87acc1c41eddae97fc32e004320b))\n\n#### [0.26.7](https://togithub.com/rich-harris/magic-string/compare/v0.26.6...v0.26.7) (2022-10-09)\n\n##### Bug Fixes\n\n-   avoid mutating provided options ([#&#8203;227](https://togithub.com/rich-harris/magic-string/issues/227)) ([01d033e](https://togithub.com/rich-harris/magic-string/commit/01d033e6e8630ef1d0482d9a3899f1da2bf933d5))\n\n#### [0.26.6](https://togithub.com/rich-harris/magic-string/compare/v0.26.5...v0.26.6) (2022-10-05)\n\n##### Features\n\n-   add `update` method as safer alternative to `overwrite` ([#&#8203;212](https://togithub.com/rich-harris/magic-string/issues/212)) ([9a312e3](https://togithub.com/rich-harris/magic-string/commit/9a312e37a02629f7496c6cfcf307832e991669a3))\n\n#### [0.26.5](https://togithub.com/rich-harris/magic-string/compare/v0.26.4...v0.26.5) (2022-09-30)\n\n##### Bug Fixes\n\n-   update typescript definition file to contain `replaceAll()` ([#&#8203;224](https://togithub.com/rich-harris/magic-string/issues/224)) ([45a4921](https://togithub.com/rich-harris/magic-string/commit/45a49214ba244b906f4d20450debc8edcc06e2a8))\n\n#### [0.26.4](https://togithub.com/rich-harris/magic-string/compare/v0.26.3...v0.26.4) (2022-09-22)\n\n##### Features\n\n-   fix `.replace()` when searching string, add `.replaceAll()` ([#&#8203;222](https://togithub.com/rich-harris/magic-string/issues/222)) ([04a05bd](https://togithub.com/rich-harris/magic-string/commit/04a05bdc9bf56e00e616a0ae07923fbd9b63fbd0))\n\n##### Performance Improvements\n\n-   avoiding use of Object.defineProperty in Chunk constructor ([#&#8203;219](https://togithub.com/rich-harris/magic-string/issues/219)) ([130794b](https://togithub.com/rich-harris/magic-string/commit/130794bb8bfd9f21eb1f50c36a1da8eb5443d256))\n\n#### [0.26.3](https://togithub.com/rich-harris/magic-string/compare/v0.26.2...v0.26.3) (2022-08-30)\n\n##### Performance Improvements\n\n-   delay guess encoded ([#&#8203;216](https://togithub.com/rich-harris/magic-string/issues/216)) ([69b13c7](https://togithub.com/rich-harris/magic-string/commit/69b13c7a09af742e4f31cf419e8f96e6db32ab5a))\n\n#### [0.26.2](https://togithub.com/rich-harris/magic-string/compare/v0.26.1...v0.26.2) (2022-05-11)\n\n##### Bug Fixes\n\n-   specify types in exports ([#&#8203;214](https://togithub.com/rich-harris/magic-string/issues/214)) ([985e7b4](https://togithub.com/rich-harris/magic-string/commit/985e7b4d8a6fd5911d2ad2e6524999e9198a6b9f))\n\n#### [0.26.1](https://togithub.com/rich-harris/magic-string/compare/v0.26.0...v0.26.1) (2022-03-03)\n\n##### Bug Fixes\n\n-   **replace:** match replacer function signature with spec ([902541f](https://togithub.com/rich-harris/magic-string/commit/902541fdff3998e3c957908de10769d2af1a3c70))\n\n</details>\n\n<details>\n<summary>reactivex/rxjs</summary>\n\n### [`v7.6.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;760-httpsgithubcomreactivexrxjscompare757760-2022-12-03)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.5.7...7.6.0)\n\n##### Bug Fixes\n\n-   **schedulers:** no longer cause TypeScript build failures when Node types aren't included ([c1a07b7](https://togithub.com/reactivex/rxjs/commit/c1a07b71ac050ab36b371ff7f18dc9a924fffc9f))\n-   **types:** Improved subscribe and tap type overloads ([#&#8203;6718](https://togithub.com/reactivex/rxjs/issues/6718)) ([af1a9f4](https://togithub.com/reactivex/rxjs/commit/af1a9f446a860883abaa36ace21345dc923e7e53)), closes [#&#8203;6717](https://togithub.com/reactivex/rxjs/issues/6717)\n\n##### Features\n\n-   **onErrorResumeNextWith:** renamed `onErrorResumeNext` and exported from the top level. (`onErrorResumeNext` operator is stil available, but deprecated) ([#&#8203;6755](https://togithub.com/reactivex/rxjs/issues/6755)) ([51e3b2c](https://togithub.com/reactivex/rxjs/commit/51e3b2c8ec28b5d30bca4c63ad69ce6942c2cdcc))\n\n#### [7.5.7](https://togithub.com/reactivex/rxjs/compare/7.5.6...7.5.7) (2022-09-25)\n\n##### Bug Fixes\n\n-   **schedulers:** improve performance of animationFrameScheduler and asapScheduler ([#&#8203;7059](https://togithub.com/reactivex/rxjs/issues/7059)) ([c93aa60](https://togithub.com/reactivex/rxjs/commit/c93aa60e9f073297d959fa1fff9323e48872d47e)), closes [#&#8203;7017](https://togithub.com/reactivex/rxjs/issues/7017), related to [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018) and [#&#8203;6674](https://togithub.com/reactivex/rxjs/issues/6674)\n\n##### Performance Improvements\n\n-   **animationFrames:** uses fewer Subscription instances ([#&#8203;7060](https://togithub.com/reactivex/rxjs/issues/7060)) ([2d57b38](https://togithub.com/reactivex/rxjs/commit/2d57b38ec9f7ada838ee130ab75cd795b156c182)), closes [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018)\n\n#### [7.5.6](https://togithub.com/reactivex/rxjs/compare/7.5.5...7.5.6) (2022-07-11)\n\n##### Bug Fixes\n\n-   **share:** No longer results in a bad-state observable in an edge case where a synchronous source was shared and refCounted, and the result is subscribed to twice in a row synchronously. ([#&#8203;7005](https://togithub.com/reactivex/rxjs/issues/7005)) ([5d4c1d9](https://togithub.com/reactivex/rxjs/commit/5d4c1d9a37b1347217223adb0d9e166fd85f67a9))\n-   **share & connect:** `share` and `connect` no longer bundle scheduling code by default ([#&#8203;6873](https://togithub.com/reactivex/rxjs/issues/6873)) ([9948dc2](https://togithub.com/reactivex/rxjs/commit/9948dc2f5577eaa4013de234f3552508918518c7)), closes [#&#8203;6872](https://togithub.com/reactivex/rxjs/issues/6872)\n-   **exhaustAll:** Result will now complete properly when flattening all synchronous observables. ([#&#8203;6911](https://togithub.com/reactivex/rxjs/issues/6911)) ([3c1c6b8](https://togithub.com/reactivex/rxjs/commit/3c1c6b8303028eebc7af31cfc5e5bad42a5b2da4)), closes [#&#8203;6910](https://togithub.com/reactivex/rxjs/issues/6910)\n-   **TypeScript:** Now compatible with TypeScript 4.6 type checks ([#&#8203;6895](https://togithub.com/reactivex/rxjs/issues/6895)) ([fce9aa1](https://togithub.com/reactivex/rxjs/commit/fce9aa12931796892673581761bba1f7ceafabff))\n\n#### [7.5.5](https://togithub.com/reactivex/rxjs/compare/7.5.4...7.5.5) (2022-03-08)\n\n##### Bug Fixes\n\n-   **package:** add types to exports ([#&#8203;6802](https://togithub.com/reactivex/rxjs/issues/6802)) ([3750f75](https://togithub.com/reactivex/rxjs/commit/3750f75104bb82d870c53c0605c942e41245d79c))\n-   **package:** add `require` export condition ([#&#8203;6821](https://togithub.com/reactivex/rxjs/issues/6821)) ([c8955e4](https://togithub.com/reactivex/rxjs/commit/c8955e4c6a972135030fdfddc18a7a48337ae9c7))\n-   **timeout:** no longer will timeout when receiving the first value synchronously ([#&#8203;6865](https://togithub.com/reactivex/rxjs/issues/6865)) ([2330c96](https://togithub.com/reactivex/rxjs/commit/2330c9660b20f2e0cda0c4eeb36bb582b4a85186)), closes [#&#8203;6862](https://togithub.com/reactivex/rxjs/issues/6862)\n\n##### Performance Improvements\n\n-   Don't clone observers unless you have to ([#&#8203;6842](https://togithub.com/reactivex/rxjs/issues/6842)) ([3289d20](https://togithub.com/reactivex/rxjs/commit/3289d20ddc3a84d2aede8e3ab9962a8ef5d43c83))\n\n#### [7.5.4](https://togithub.com/reactivex/rxjs/compare/7.5.3...7.5.4) (2022-02-09)\n\n##### Performance Improvements\n\n-   removed code that would `bind` functions passed with observers to `subscribe`. ([#&#8203;6815](https://togithub.com/reactivex/rxjs/issues/6815)) ([fb375a0](https://togithub.com/reactivex/rxjs/commit/fb375a0c5befd6852cd63d3c310448e42fa9580e)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.3](https://togithub.com/reactivex/rxjs/compare/7.5.2...7.5.3) (2022-02-08)\n\n##### Bug Fixes\n\n-   **subscribe:** allow interop with Monio and other libraries that patch function bind ([0ab91eb](https://togithub.com/reactivex/rxjs/commit/0ab91eb4c1da914efbf03a2732629914cd3398dc)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.2](https://togithub.com/reactivex/rxjs/compare/7.5.1...7.5.2) (2022-01-11)\n\n##### Bug Fixes\n\n-   operators that ignore input values now use `unknown` rather than `any`, which should resolve issues with eslint no-unsafe-argument ([#&#8203;6738](https://togithub.com/reactivex/rxjs/issues/6738)) ([67cb317](https://togithub.com/reactivex/rxjs/commit/67cb317a7a6b9fdbd3d2e8fdbc2ac9ac7e57179c)), closes [#&#8203;6536](https://togithub.com/reactivex/rxjs/issues/6536)\n-   **ajax:** crossDomain flag deprecated and properly reported to consumers ([#&#8203;6710](https://togithub.com/reactivex/rxjs/issues/6710)) ([7fd0575](https://togithub.com/reactivex/rxjs/commit/7fd05756c595dddb288b732b00a90fcfb2a9080a)), closes [#&#8203;6663](https://togithub.com/reactivex/rxjs/issues/6663)\n\n#### [7.5.1](https://togithub.com/reactivex/rxjs/compare/7.5.0...7.5.1) (2021-12-28)\n\n##### Bug Fixes\n\n-   export supporting interfaces from top-level `rxjs` site. ([#&#8203;6733](https://togithub.com/reactivex/rxjs/issues/6733)) ([299a1e1](https://togithub.com/reactivex/rxjs/commit/299a1e16f725edfc2e333c430e3a7dfc75dd94e7))\n\n### [`v7.5.7`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;757-httpsgithubcomreactivexrxjscompare756757-2022-09-25)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.5.6...7.5.7)\n\n##### Bug Fixes\n\n-   **schedulers:** improve performance of animationFrameScheduler and asapScheduler ([#&#8203;7059](https://togithub.com/reactivex/rxjs/issues/7059)) ([c93aa60](https://togithub.com/reactivex/rxjs/commit/c93aa60e9f073297d959fa1fff9323e48872d47e)), closes [#&#8203;7017](https://togithub.com/reactivex/rxjs/issues/7017), related to [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018) and [#&#8203;6674](https://togithub.com/reactivex/rxjs/issues/6674)\n\n##### Performance Improvements\n\n-   **animationFrames:** uses fewer Subscription instances ([#&#8203;7060](https://togithub.com/reactivex/rxjs/issues/7060)) ([2d57b38](https://togithub.com/reactivex/rxjs/commit/2d57b38ec9f7ada838ee130ab75cd795b156c182)), closes [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018)\n\n</details>\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v0.12.0`](https://togithub.com/angular/angular/blob/HEAD/packages/zone.js/CHANGELOG.md#&#8203;0120-httpsgithubcomangularangularcomparezonejs-0118zonejs-0120-2022-10-27)\n\n[Compare Source](https://togithub.com/angular/angular/compare/zone.js-0.11.8...zone.js-0.12.0)\n\n##### Bug Fixes\n\n-   **zone.js:** cancel tasks only when they are scheduled or running ([#&#8203;46435](https://togithub.com/angular/angular/issues/46435)) ([b618b5a](https://togithub.com/angular/angular/commit/b618b5aa86138c900055c5496967e3348a7b98fc)), closes [#&#8203;45711](https://togithub.com/angular/angular/issues/45711)\n-   **zone.js:** Fix ConsoleTask interface typo ([#&#8203;47090](https://togithub.com/angular/angular/issues/47090)) ([91954cf](https://togithub.com/angular/angular/commit/91954cf20e17a386d71cc8ea25d1d17b9ae1e31c))\n\n#### [0.11.8](https://togithub.com/angular/angular/compare/zone.js-0.11.7...zone.js-0.11.8) (2022-08-08)\n\n##### Features\n\n-   **zone.js:** Update to the simpler Async Stack Tagging v2 API ([#&#8203;46958](https://togithub.com/angular/angular/issues/46958)) ([f23232f](https://togithub.com/angular/angular/commit/f23232ff66559ddc28aec26d461355568c25530d))\n\n#### [0.11.7](https://togithub.com/angular/angular/compare/zone.js-0.11.6...zone.js-0.11.7) (2022-07-20)\n\n##### Bug Fixes\n\n-   **zone.js:** do not invoke jasmine done callback multiple times with `waitForAsync` ([4e77c7fbf38](https://togithub.com/angular/angular/commit/4e77c7fbf38f27741617303165068e1cb1ef6354))\n\n##### Features\n\n-   **zone.js:** add AsyncStackTaggingZoneSpec implementation ([#&#8203;46693](https://togithub.com/angular/angular/issues/46693)) ([848a009](https://togithub.com/angular/angular/commit/848a00956e693ba8ab648c86cca034ed2e3c807c))\n-   **zone.js:** include jasmine `describe` block name when raising unexpected task error ([de86285](https://togithub.com/angular/angular/commit/de86285f2ee1c3a78489c8c40a15fc78f75e2620))\n-   **zone.js:** include zone name when sync-test zone reports tasks ([72c2567](https://togithub.com/angular/angular/commit/72c2567847c37b07e468a501a4b13edc791ae9ed))\n\n#### [0.11.6](https://togithub.com/angular/angular/compare/zone.js-0.11.5...zone.js-0.11.6) (2022-06-02)\n\n##### Bug Fixes\n\n-   **zone.js:** check if `process` is defined when patching the `GlobalErrors.install` ([#&#8203;45392](https://togithub.com/angular/angular/issues/45392)) ([c7bcc1b](https://togithub.com/angular/angular/commit/c7bcc1b50182e5378756aa4528a24075b5be026e)), closes [#&#8203;42260](https://togithub.com/angular/angular/issues/42260)\n-   **zone.js:** in TaskTrackingZoneSpec track a periodic task until it is cancelled ([#&#8203;45391](https://togithub.com/angular/angular/issues/45391)) ([f19b36f](https://togithub.com/angular/angular/commit/f19b36f462803b3b3b9410391c039649541b10bc))\n-   **zone.js:** read `Symbol.species` safely ([#&#8203;45369](https://togithub.com/angular/angular/issues/45369)) ([e2eaac3](https://togithub.com/angular/angular/commit/e2eaac34b06a558145be41853f1d3585c1108880))\n-   **zone.js:** should ignore multiple resolve call ([#&#8203;45283](https://togithub.com/angular/angular/issues/45283)) ([aebf165](https://togithub.com/angular/angular/commit/aebf165359ad6de5a8bacd9cb91651fc4175aaad)), closes [#&#8203;44913](https://togithub.com/angular/angular/issues/44913)\n-   **zone.js:** swallow the error when the element callback is not patchable ([#&#8203;45400](https://togithub.com/angular/angular/issues/45400)) ([4ea70e3](https://togithub.com/angular/angular/commit/4ea70e36b998208302183f78088637f3de86323d)), closes [lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186](https://togithub.com/lwc/engine-core/src/framework/base-bridge-element.ts/issues/L180-L186) [#&#8203;42546](https://togithub.com/angular/angular/issues/42546)\n\n##### BREAKING CHANGES\n\n-   **zone.js:** in TaskTrackingZoneSpec track a periodic task until it is cancelled\n\nThe breaking change is scoped only to the plugin\n`zone.js/plugins/task-tracking`. If you used `TaskTrackingZoneSpec` and\nchecked the pending macroTasks e.g. using `(this.ngZone as any)._inner ._parent._properties.TaskTrackingZone.getTasksFor('macroTask')`, then\nits behavior slightly changed for periodic macrotasks. For example,\npreviously the `setInterval` macrotask was no longer tracked after its\ncallback was executed for the first time. Now it's tracked until\nthe task is explicitly cancelled, e.g with `clearInterval(id)`.\n\n#### [0.11.5](https://togithub.com/angular/angular/compare/zone.js-0.11.4...zone.js-0.11.5) (2022-03-03)\n\n##### Bug Fixes\n\n-   **zone.js:** async-test should only call done once ([#&#8203;45025](https://togithub.com/angular/angular/issues/45025)) ([dea7234](https://togithub.com/angular/angular/commit/dea7234a76f652c8e9d9b79719e2b170a5a50777))\n-   **zone.js:** defineProperties should also set symbol props ([#&#8203;45098](https://togithub.com/angular/angular/issues/45098)) ([b437d12](https://togithub.com/angular/angular/commit/b437d1238d9006baa0cf749adbd7cc3270de3040)), closes [#&#8203;44095](https://togithub.com/angular/angular/issues/44095)\n-   **zone.js:** fix several test cases which trigger `done()` multiple times ([#&#8203;45025](https://togithub.com/angular/angular/issues/45025)) ([d5565cc](https://togithub.com/angular/angular/commit/d5565ccdb4573a47eb329b09c6852c1ae39672a6))\n-   **zone.js:** only one listener should also re-throw an error correctly ([#&#8203;41868](https://togithub.com/angular/angular/issues/41868)) ([299f92c](https://togithub.com/angular/angular/commit/299f92c3b62a43c94cff4a204f9e41c46a159efc)), closes [#&#8203;41867](https://togithub.com/angular/angular/issues/41867) [/github.com/angular/angular/pull/41562#issuecomment-822696973](https://togithub.com//github.com/angular/angular/pull/41562/issues/issuecomment-822696973)\n-   **zone.js:** patch global instead of Mocha object ([#&#8203;45047](https://togithub.com/angular/angular/issues/45047)) ([8efbdb5](https://togithub.com/angular/angular/commit/8efbdb57c11a6c632f69d7e142a632b6a853fa46)), closes [#&#8203;42834](https://togithub.com/angular/angular/issues/42834)\n-   **zone.js:** should continue to executue listeners when throw error ([#&#8203;41562](https://togithub.com/angular/angular/issues/41562)) ([008eaf3](https://togithub.com/angular/angular/commit/008eaf3b7df90b2cdd9c83e229d23d4014d6dbc9)), closes [#&#8203;41522](https://togithub.com/angular/angular/issues/41522)\n-   **zone.js:** update several flaky cases ([#&#8203;41526](https://togithub.com/angular/angular/issues/41526)) ([25a83eb](https://togithub.com/angular/angular/commit/25a83eb264aa19fc4616cea45e04d790b9bcd777)), closes [#&#8203;41434](https://togithub.com/angular/angular/issues/41434)\n\n##### Features\n\n-   **zone.js:** add Promise.any() implementation ([#&#8203;45064](https://togithub.com/angular/angular/issues/45064)) ([4d494d2](https://togithub.com/angular/angular/commit/4d494d24ccb69b40a477b0bccd97baf6af66accf)), closes [#&#8203;44393](https://togithub.com/angular/angular/issues/44393)\n-   **zone.js:** update electron patch to support electron/remote 14 ([#&#8203;45073](https://togithub.com/angular/angular/issues/45073)) ([d65706a](https://togithub.com/angular/angular/commit/d65706a3b225ccb88d719478c19a379aef1b6047)), closes [#&#8203;43346](https://togithub.com/angular/angular/issues/43346)\n\n#### [0.11.4](https://togithub.com/angular/angular/compare/zone.js-0.11.3...zone.js-0.11.4) (2021-02-10)\n\n##### Bug Fixes\n\n-   **zone.js:** fesm2015 bundle should also be strict module. ([#&#8203;40456](https://togithub.com/angular/angular/issues/40456)) ([f35f7c6](https://togithub.com/angular/angular/commit/f35f7c6)), closes [#&#8203;40215](https://togithub.com/angular/angular/issues/40215) [#&#8203;40215](https://togithub.com/angular/angular/issues/40215)\n-   **zone.js:** fix typo in zone_externs ([#&#8203;40348](https://togithub.com/angular/angular/issues/40348)) ([8116edb](https://togithub.com/angular/angular/commit/8116edb))\n-   **zone.js:** patch child method that overrides an already patched method ([#&#8203;39850](https://togithub.com/angular/angular/issues/39850)) ([82e3f54](https://togithub.com/angular/angular/commit/82e3f54))\n-   **zone.js:** setTimeout patch should clean tasksByHandleId cache. ([#&#8203;40586](https://togithub.com/angular/angular/issues/40586)) ([0652b29](https://togithub.com/angular/angular/commit/0652b29)), closes [#&#8203;40387](https://togithub.com/angular/angular/issues/40387)\n-   **zone.js:** update build tooling for latest changes in rules_nodejs ([#&#8203;40710](https://togithub.com/angular/angular/issues/40710)) ([2827845](https://togithub.com/angular/angular/commit/2827845))\n\n##### Features\n\n-   **zone.js:** monkey patches queueMicrotask() ([#&#8203;38904](https://togithub.com/angular/angular/issues/38904)) ([27358eb](https://togithub.com/angular/angular/commit/27358eb)), closes [#&#8203;38863](https://togithub.com/angular/angular/issues/38863)\n\n#### [0.11.3](https://togithub.com/angular/angular/compare/zone.js-0.11.2...zone.js-0.11.3) (2020-10-27)\n\n##### Bug Fixes\n\n-   **zone.js:** remove global declaration ([#&#8203;37861](https://togithub.com/angular/angular/issues/37861)) ([90c0772](https://togithub.com/angular/angular/commit/90c0772)), closes [#&#8203;37531](https://togithub.com/angular/angular/issues/37531)\n\n#### [0.11.2](https://togithub.com/angular/angular/compare/zone.js-0.11.0...zone.js-0.11.2) (2020-09-19)\n\n##### Bug Fixes\n\n-   **zone.js:** jest getRealSystemTime should return native time ([#&#8203;39127](https://togithub.com/angular/angular/issues/39127)) ([ffc3332](https://togithub.com/angular/angular/commit/ffc3332))\n-   **zone.js:** add missing types field in package.json ([#&#8203;38585](https://togithub.com/angular/angular/issues/38585)) ([27cc56b](https://togithub.com/angular/angular/commit/27cc56b)), closes [#&#8203;38584](https://togithub.com/angular/angular/issues/38584)\n-   **zone.js:** defineProperty patch should not swallow error ([#&#8203;37582](https://togithub.com/angular/angular/issues/37582)) ([45a73dd](https://togithub.com/angular/angular/commit/45a73dd)), closes [#&#8203;37432](https://togithub.com/angular/angular/issues/37432)\n-   **zone.js:** run tests in umd format ([#&#8203;37582](https://togithub.com/angular/angular/issues/37582)) ([40096be](https://togithub.com/angular/angular/commit/40096be))\n-   **zone.js:** should have better backward compatibilities ([#&#8203;38797](https://togithub.com/angular/angular/issues/38797)) ([a33d630](https://togithub.com/angular/angular/commit/a33d630)), closes [#&#8203;38561](https://togithub.com/angular/angular/issues/38561) [#&#8203;38669](https://togithub.com/angular/angular/issues/38669)\n-   **zone.js:** should invoke xhr send task when no response error occurs ([#&#8203;38836](https://togithub.com/angular/angular/issues/38836)) ([d92a0dd](https://togithub.com/angular/angular/commit/d92a0dd)), closes [#&#8203;38795](https://togithub.com/angular/angular/issues/38795)\n-   **zone.js:** zone.js toString patch should check typeof Promise is function ([#&#8203;38350](https://togithub.com/angular/angular/issues/38350)) ([18e474f](https://togithub.com/angular/angular/commit/18e474f)), closes [#&#8203;38361](https://togithub.com/angular/angular/issues/38361)\n\n##### Features\n\n-   **zone.js:** add jest fakeTimers support ([#&#8203;39016](https://togithub.com/angular/angular/issues/39016)) ([82d54fe](https://togithub.com/angular/angular/commit/82d54fe)), closes [#&#8203;38851](https://togithub.com/angular/angular/issues/38851)\n\n##### Refactor\n\n-   **zone.js:** refactor(zone.js): rename several internal apis in fake async zone spec ([#&#8203;39127](https://togithub.com/angular/angular/issues/39127)) ([8a68669](https://togithub.com/angular/angular/commit/8a68669))\n\n##### Build\n\n-   **zone.js:** build(zone.js): zone.js should output esm format for fesm2015 bundles ([#&#8203;39203](https://togithub.com/angular/angular/issues/39203)) ([822b838](https://togithub.com/angular/angular/commit/822b838))\n\n##### BREAKING CHANGES\n\n-   **zone.js:** ZoneJS no longer swallows errors produced by `Object.defineProperty` calls.\n\nPrior to this change, ZoneJS monkey patched `Object.defineProperty` and if there is an error\n(such as the property is not configurable or not writable) the patched logic swallowed it\nand only console.log was produced. This behavior used to hide real errors,\nso the logic is now updated to trigger original errors (if any). One exception\nwhere the patch remains in place is `document.registerElement`\n(to allow smooth transition for code/polyfills that rely on old behavior in legacy browsers).\nIf your code relies on the old behavior (where errors were not thrown before),\nyou may need to update the logic to handle the errors that are no longer masked by ZoneJS patch.\n\n#### [0.11.1](https://togithub.com/angular/angular/compare/zone.js-0.11.0...zone.js-0.11.1) (2020-08-19)\n\n##### Bug Fixes\n\n-   **zone.js:** zone.js package.json should not include files/directories field ([#&#8203;38528](https://togithub.com/angular/angular/issues/38528)) ([6b662d1](https://togithub.com/angular/angular/commit/6b662d1)), closes [#&#8203;38526](https://togithub.com/angular/angular/issues/38526) [#&#8203;38516](https://togithub.com/angular/angular/issues/38516) [#&#8203;38513](https://togithub.com/angular/angular/issues/38513)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48372","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#48372)"},{"Id":"1477640262","IsPullRequest":true,"CreatedAt":"2022-12-06T18:57:09","Actor":"angular-robot","Number":"48365","RawContent":null,"Title":"build: update dependency @types/jasmine to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~3.6.0` -> `~4.3.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/3.6.11/4.3.1) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48365","RelatedDescription":"Closed or merged PR \"build: update dependency @types/jasmine to v4\" (#48365)"},{"Id":"1477772992","IsPullRequest":true,"CreatedAt":"2022-12-06T18:09:20","Actor":"angular-robot","Number":"48369","RawContent":null,"Title":"build: update dependency karma-jasmine-html-reporter to v2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [karma-jasmine-html-reporter](https://togithub.com/dfederm/karma-jasmine-html-reporter) | devDependencies | major | [`^1.5.0` -> `^2.0.0`](https://renovatebot.com/diffs/npm/karma-jasmine-html-reporter/1.7.0/2.0.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>dfederm/karma-jasmine-html-reporter</summary>\n\n### [`v2.0.0`](https://togithub.com/dfederm/karma-jasmine-html-reporter/releases/tag/v2.0.0)\n\n[Compare Source](https://togithub.com/dfederm/karma-jasmine-html-reporter/compare/v1.7.0...v2.0.0)\n\nThis version rewrites the package to use the peer jasmine-core package instead of repackaging the html reporting code. This fixes support for Jasmine v4 and (hopefully) will require less package updates going forward.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48369","RelatedDescription":"Closed or merged PR \"build: update dependency karma-jasmine-html-reporter to v2\" (#48369)"},{"Id":"1478907539","IsPullRequest":true,"CreatedAt":"2022-12-06T17:58:28","Actor":"alan-agius4","Number":"48375","RawContent":null,"Title":"docs: wrap json property in double quotes","State":"closed","Body":"Previously, the `budgets` was not wrapped in quotes which caused the JSON to be invalid.\r\n","Url":"https://github.com/angular/angular/pull/48375","RelatedDescription":"Closed or merged PR \"docs: wrap json property in double quotes\" (#48375)"},{"Id":"1477773429","IsPullRequest":true,"CreatedAt":"2022-12-06T17:12:33","Actor":"angular-robot","Number":"48370","RawContent":null,"Title":"build: update dependency ts-node to v10","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ts-node](https://typestrong.org/ts-node) ([source](https://togithub.com/TypeStrong/ts-node)) | devDependencies | major | [`~8.3.0` -> `~10.9.0`](https://renovatebot.com/diffs/npm/ts-node/8.3.0/10.9.1) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>TypeStrong/ts-node</summary>\n\n### [`v10.9.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.9.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.9.0...v10.9.1)\n\n**Fixed**\n\n-   Workaround nodejs bug introduced in 18.6.0 ([#&#8203;1838](https://togithub.com/TypeStrong/ts-node/issues/1838)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Only affects projects on node >=18.6.0 using `--esm`\n    -   Older versions of node and projects without `--esm` are unaffected\n\nhttps://github.com/TypeStrong/ts-node/milestone/18?closed=1\n\n### [`v10.9.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.9.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.2...v10.9.0)\n\n**Added**\n\n-   `--project` accepts path to a directory containing a `tsconfig.json` ([#&#8203;1829](https://togithub.com/TypeStrong/ts-node/issues/1829), [#&#8203;1830](https://togithub.com/TypeStrong/ts-node/issues/1830)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   previously it required an explicit filename\n-   Added helpful error message when swc version is too old to support our configuration ([#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Added `experimentalTsImportSpecifiers` option which allows using voluntary `.ts` file extensions in import specifiers (undocumented except for [API docs](https://typestrong.org/ts-node/api/interfaces/CreateOptions.html#experimentalTsImportSpecifiers)) ([#&#8203;1815](https://togithub.com/TypeStrong/ts-node/issues/1815)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\n**Fixed**\n\n-   Fixed bug where `child_process.fork()` would erroneously execute the parent's entrypoint script, not the intended child script ([#&#8203;1812](https://togithub.com/TypeStrong/ts-node/issues/1812), [#&#8203;1814](https://togithub.com/TypeStrong/ts-node/issues/1814)) [@&#8203;devversion](https://togithub.com/devversion)\n-   Fixed support for jsx modes `\"react-jsx\"` and `\"react-jsxdev\"` in swc transpiler ([#&#8203;1800](https://togithub.com/TypeStrong/ts-node/issues/1800), [#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed support for import assertions in swc transpiler ([#&#8203;1817](https://togithub.com/TypeStrong/ts-node/issues/1817), [#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where calling `repl.evalCode()` with code not ending in a newline would not update the typechecker accordingly ([#&#8203;1764](https://togithub.com/TypeStrong/ts-node/issues/1764), [#&#8203;1824](https://togithub.com/TypeStrong/ts-node/issues/1824)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/16?closed=1\n\n### [`v10.8.2`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.2)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.1...v10.8.2)\n\n**Fixed**\n\n-   Revert \"Use file URL for source map paths\" ([#&#8203;1821](https://togithub.com/TypeStrong/ts-node/issues/1821)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Fixes [#&#8203;1790](https://togithub.com/TypeStrong/ts-node/issues/1790): ts-node 10.8.1 regression where `nyc` code coverage reports had incorrect paths\n    -   Fixes [#&#8203;1797](https://togithub.com/TypeStrong/ts-node/issues/1797): ts-node 10.8.1 regression where breakpoints did not hit in VSCode debugging\n-   Allow JSON imports in node 16.15 and up ([#&#8203;1792](https://togithub.com/TypeStrong/ts-node/issues/1792)) [@&#8203;queengooborg](https://togithub.com/queengooborg)\n    -   JSON imports were already supported in v17.5 and up\n    -   this change extends support to >=16.15.0,<17.0.0\n    -   These version ranges match vanilla node's support for JSON imports\n\nhttps://github.com/TypeStrong/ts-node/milestone/15?closed=1\n\n### [`v10.8.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.0...v10.8.1)\n\n**Fixed**\n\n-   Fixed [#&#8203;1769](https://togithub.com/TypeStrong/ts-node/issues/1769): source URLs in source map cache were malformed on Windows, affecting code coverage reports ([#&#8203;1769](https://togithub.com/TypeStrong/ts-node/issues/1769), [#&#8203;1771](https://togithub.com/TypeStrong/ts-node/issues/1771)) [@&#8203;PaperStrike](https://togithub.com/PaperStrike)\n-   Fixed [#&#8203;1778](https://togithub.com/TypeStrong/ts-node/issues/1778): typechecker was erronously resolving imports from ESM files as if they were from CJS files ([#&#8203;1778](https://togithub.com/TypeStrong/ts-node/issues/1778), [#&#8203;1782](https://togithub.com/TypeStrong/ts-node/issues/1782)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/14\n\n### [`v10.8.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.7.0...v10.8.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1767](https://togithub.com/TypeStrong/ts-node/issues/1767)\n\n**Added**\n\n-   Added support for `module=NodeNext`, `module=Node16`, `.mts`, `.cts`, `.mjs`, and `.cjs` file extensions ([#&#8203;1414](https://togithub.com/TypeStrong/ts-node/issues/1414), [#&#8203;1694](https://togithub.com/TypeStrong/ts-node/issues/1694), [#&#8203;1744](https://togithub.com/TypeStrong/ts-node/issues/1744), [#&#8203;1745](https://togithub.com/TypeStrong/ts-node/issues/1745), [#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1717](https://togithub.com/TypeStrong/ts-node/issues/1717), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753), [#&#8203;1757](https://togithub.com/TypeStrong/ts-node/issues/1757)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   For best results, enable `experimentalResolver` ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver))\n    -   See TypeScript's official documentation: https://www.typescriptlang.org/docs/handbook/esm-node.html\n    -   enables mixed-mode projects with both ESM and CommonJS\n    -   enables all supported file extensions in TypeScript 4.7\n    -   Obeys package.json \"type\"\n-   Added ability to include file extensions in CommonJS imports ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Enables consistency with ESM, where file extensions are often mandatory\n-   Resolves from emitted to source file extensions ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Must enable `experimentalResolver`, will be enabled by default in a future version ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver))\n    -   Typechecker requires importing the *emitted* file extension; ts-node resolves correctly to the *source* file.  E.g. `import \"./foo.js\"` will execute `foo.ts` See also: [TypeScript issue #&#8203;37582](https://togithub.com/microsoft/TypeScript/issues/37582)\n    -   If typechecking is disabled, you can also use *source* file extensions.  E.g. `import \"./foo.ts\"`\n-   Added `experimentalSpecifierResolution` ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   the same as Node's `--experimental-specifier-resolution` ([Node docs](https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm))\n    -   can also be specified in `tsconfig.json` for convenience, to avoid the CLI flag\n    -   allows omitting file extensions in ESM imports, plus a few other CommonJS-style conveniences\n-   Adds `diagnostics` property to `TSError`, with array of TypeScript diagnostic objects from the compiler ([API docs](https://typestrong.org/ts-node/api/classes/TSError.html)) ([#&#8203;1705](https://togithub.com/TypeStrong/ts-node/issues/1705), [#&#8203;1706](https://togithub.com/TypeStrong/ts-node/issues/1706)) [@&#8203;paulbrimicombe](https://togithub.com/paulbrimicombe)\n\n**Changed**\n\n-   Renames option `experimentalResolverFeatures` to `experimentalResolver` ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver)) ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Internal change to ESM loader for compatibility with forthcoming node versions: returns `shortCircuit: true` ([#&#8203;1714](https://togithub.com/TypeStrong/ts-node/issues/1714), [#&#8203;1715](https://togithub.com/TypeStrong/ts-node/issues/1715)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Performance: Optimize filesystem stat calls in ESM loader and new CommonJS resolver ([#&#8203;1758](https://togithub.com/TypeStrong/ts-node/issues/1758), [#&#8203;1759](https://togithub.com/TypeStrong/ts-node/issues/1759)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Performance, maintenance: Upgrade source-mapper dependency \"[@&#8203;cspotcode/source-map-support](https://togithub.com/cspotcode/source-map-support)\"\n    -   Switches to \"trace-mapping\" for underlying source-map parsing ([#&#8203;1729](https://togithub.com/TypeStrong/ts-node/issues/1729)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\n**Fixed**\n\n-   Fixed bug where REPL `.type` command was not showing any type information when using TypeScript nightly builds ([#&#8203;1761](https://togithub.com/TypeStrong/ts-node/issues/1761), [#&#8203;1762](https://togithub.com/TypeStrong/ts-node/issues/1762)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Correctly suppress \"Custom ESM Loaders\" warning on newer node versions where the warning's prose changed ([#&#8203;1701](https://togithub.com/TypeStrong/ts-node/issues/1701)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed REPL bug where function signatures could not be entered across multiple lines ([#&#8203;1667](https://togithub.com/TypeStrong/ts-node/issues/1667), [#&#8203;1677](https://togithub.com/TypeStrong/ts-node/issues/1677)) [@&#8203;d9k](https://togithub.com/d9k)\n-   REPL treats unparenthesized object literals as objects, instead of as block scopes ([#&#8203;1697](https://togithub.com/TypeStrong/ts-node/issues/1697), [#&#8203;1699](https://togithub.com/TypeStrong/ts-node/issues/1699)) [@&#8203;jhmaster2000](https://togithub.com/jhmaster2000)\n-   Fixed bug where `preferTsExts` combined with third-party transpiler hooks could disrupt `nyc` code coverage ([#&#8203;1755](https://togithub.com/TypeStrong/ts-node/issues/1755)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where `file://` URLs in stack traces did not always use percent-encoding ([#&#8203;1738](https://togithub.com/TypeStrong/ts-node/issues/1738), [#&#8203;1726](https://togithub.com/TypeStrong/ts-node/issues/1726), [#&#8203;1729](https://togithub.com/TypeStrong/ts-node/issues/1729)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where v8-compile-cache-lib did not correctly unhook itself ([#&#8203;1717](https://togithub.com/TypeStrong/ts-node/issues/1717), [#&#8203;1718](https://togithub.com/TypeStrong/ts-node/issues/1718), [#&#8203;1719](https://togithub.com/TypeStrong/ts-node/issues/1719)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   This internal dependency is used to speed up loading the TypeScript compiler\n\n**Docs**\n\n-   Many docs improvements ([#&#8203;1682](https://togithub.com/TypeStrong/ts-node/issues/1682)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Options page: each option its own linkable header w/usage example ([#&#8203;1606](https://togithub.com/TypeStrong/ts-node/issues/1606)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Categorize APIs in typedoc, make entrypoints more prominent ([#&#8203;1456](https://togithub.com/TypeStrong/ts-node/issues/1456)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Clarify that the shorthand for `--project` is `-P`, not `-p` ([#&#8203;1731](https://togithub.com/TypeStrong/ts-node/issues/1731), [#&#8203;1734](https://togithub.com/TypeStrong/ts-node/issues/1734)) [@&#8203;lobsterkatie](https://togithub.com/lobsterkatie)\n-   Add common ESM errors to Troubleshooting page ([#&#8203;1607](https://togithub.com/TypeStrong/ts-node/issues/1607)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/12\n\n### [`v10.7.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.7.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.6.0...v10.7.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1680](https://togithub.com/TypeStrong/ts-node/issues/1680)\n\n**Added**\n\n-   Adds `--esm` flag, option, and `ts-node-esm` binary ([#&#8203;1258](https://togithub.com/TypeStrong/ts-node/issues/1258), [#&#8203;1655](https://togithub.com/TypeStrong/ts-node/issues/1655))\n    -   Enables full `esm` support; no need for `--loader` nor `NODE_OPTIONS`\n    -   Use shebang `#!/usr/bin/env ts-node-esm`, run `ts-node --esm`, or add to your tsconfig.json: `\"ts-node\": {\"esm\": true}`\n\n**Changed**\n\n-   Unflag ESM json modules on node >=17.5.0 ([#&#8203;1661](https://togithub.com/TypeStrong/ts-node/issues/1661), [#&#8203;1665](https://togithub.com/TypeStrong/ts-node/issues/1665)) [@&#8203;Jamesernator](https://togithub.com/Jamesernator)\n    -   no longer requires `--experimental-json-modules`\n-   Lazy-load dependencies to improve startup responsiveness. ([#&#8203;1676](https://togithub.com/TypeStrong/ts-node/issues/1676))\n\n**Fixed**\n\n-   Fixed bug where \"compiler\", \"transpiler\", and swc backend would not resolve relative to the tsconfig.json that declared them ([#&#8203;1662](https://togithub.com/TypeStrong/ts-node/issues/1662), [#&#8203;1655](https://togithub.com/TypeStrong/ts-node/issues/1655))\n    -   Enables reusable tsconfig.json shared via node module to include necessary dependencies\n\nhttps://github.com/TypeStrong/ts-node/milestone/11\n\n### [`v10.6.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.6.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.5.0...v10.6.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1666](https://togithub.com/TypeStrong/ts-node/issues/1666)\n\n**Added**\n\n-   Adds workaround for extensionless entrypoints with ESM loader ([#&#8203;1649](https://togithub.com/TypeStrong/ts-node/issues/1649), [#&#8203;1654](https://togithub.com/TypeStrong/ts-node/issues/1654))\n    -   You can now combine tools such as `mocha` with `--loader ts-node/esm`, where previously node would throw `[ERR_UNKNOWN_FILE_EXTENSION]`\n    -   node has a bug where combining `--loader` with an extensionless entrypoint causes this error [nodejs/node#&#8203;33226](https://togithub.com/nodejs/node/issues/33226)\n    -   Some tools, for example `mocha`, have an extensionless entrypoint. ([source](https://togithub.com/mochajs/mocha/blob/547ffd73535088322579d3d2026432112eae3d4b/package.json#L37), [source](https://togithub.com/mochajs/mocha/blob/547ffd73535088322579d3d2026432112eae3d4b/bin/mocha))\n    -   Combining `NODE_OPTIONS=--loader ts-node/esm` with these tools causes this error.  [mochajs/mocha#&#8203;4645](https://togithub.com/mochajs/mocha/issues/4645)\n    -   node intends to fix this bug in a future release: [nodejs/node#&#8203;41711](https://togithub.com/nodejs/node/issues/41711)\n    -   In the interim, we have implemented a workaround in ts-node.\n-   Adds support for target \"ES2022\" in `moduleTypes` overrides ([#&#8203;1650](https://togithub.com/TypeStrong/ts-node/issues/1650))\n\n**Fixed**\n\n-   Fixed bug where `--swc` and other third-party transpilers did not respect `moduleTypes` overrides ([#&#8203;1651](https://togithub.com/TypeStrong/ts-node/issues/1651), [#&#8203;1652](https://togithub.com/TypeStrong/ts-node/issues/1652), [#&#8203;1660](https://togithub.com/TypeStrong/ts-node/issues/1660))\n-   Fixed bug where node flags were not preserved correctly in `process.execArgv` ([#&#8203;1657](https://togithub.com/TypeStrong/ts-node/issues/1657), [#&#8203;1658](https://togithub.com/TypeStrong/ts-node/issues/1658))\n    -   This affected `child_process.fork()`, since it uses `process.execArgv` to create a similar child runtime.\n    -   With this fix, `child_process.fork()` will preserve both node flags and `ts-node` hooks.\n-   Fixed compatibility TypeScript 4.7's API changes ([#&#8203;1647](https://togithub.com/TypeStrong/ts-node/issues/1647), [#&#8203;1648](https://togithub.com/TypeStrong/ts-node/issues/1648))\n\nhttps://github.com/TypeStrong/ts-node/milestone/9\n\n### [`v10.5.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.5.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.4.0...v10.5.0)\n\n<!--\n  I don't make a discussion thread for every release.  Github has a button to make a discussion thread for a release.\n  Then I update the discussion thread to remove the release notes and instead link to the release.\n-->\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1634](https://togithub.com/TypeStrong/ts-node/issues/1634)\n\n**Added**\n\n-   Eliminate \"Emit Skipped\" errors ([#&#8203;693](https://togithub.com/TypeStrong/ts-node/issues/693), [#&#8203;1345](https://togithub.com/TypeStrong/ts-node/issues/1345), [#&#8203;1629](https://togithub.com/TypeStrong/ts-node/issues/1629))\n    -   Avoids all \"Emit Skipped\" errors by performing a fallback `transpileOnly`-style transformation.\n    -   Does not affect typechecking.  Type errors are still detected and thrown.\n    -   Fallback has the same limitations as `isolatedModules`. This will only affect rare cases such as using `const enums` with `preserveConstEnums` disabled.\n    -   Fixes [#&#8203;693](https://togithub.com/TypeStrong/ts-node/issues/693)\n-   Graduate swc transpiler out of experimental; add `swc: true` convenience option ([docs](https://typestrong.org/ts-node/docs/transpilers)) ([#&#8203;1487](https://togithub.com/TypeStrong/ts-node/issues/1487), [#&#8203;1536](https://togithub.com/TypeStrong/ts-node/issues/1536), [#&#8203;1613](https://togithub.com/TypeStrong/ts-node/issues/1613), [#&#8203;1627](https://togithub.com/TypeStrong/ts-node/issues/1627))\n    -   `\"swc\": true` or `--swc` will use swc for faster execution\n    -   This feature is no longer marked \"experimental.\"  Thank you to everyone who filed bugs!\n-   swc transpiler attempts to load `@swc/core` or `@swc/wasm` dependencies from your project before falling-back to global installations ([#&#8203;1613](https://togithub.com/TypeStrong/ts-node/issues/1613), [#&#8203;1627](https://togithub.com/TypeStrong/ts-node/issues/1627))\n    -   global fallback only occurs when using a global installation of ts-node\n-   Add support for TypeScript's `traceResolution` output ([docs](https://www.typescriptlang.org/tsconfig/#traceResolution)) ([#&#8203;1128](https://togithub.com/TypeStrong/ts-node/issues/1128), [#&#8203;1491](https://togithub.com/TypeStrong/ts-node/issues/1491)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n-   Support import assertions in ESM loader ([docs](https://nodejs.org/dist/latest-v17.x/docs/api/esm.html#import-assertions)) ([#&#8203;1557](https://togithub.com/TypeStrong/ts-node/issues/1557), [#&#8203;1558](https://togithub.com/TypeStrong/ts-node/issues/1558), [#&#8203;1559](https://togithub.com/TypeStrong/ts-node/issues/1559), [#&#8203;1573](https://togithub.com/TypeStrong/ts-node/issues/1573)) [@&#8203;Pokute](https://togithub.com/Pokute), [@&#8203;geigerzaehler](https://togithub.com/geigerzaehler)\n    -   Allows importing JSON files from ESM with the requisite flag ([docs](https://nodejs.org/dist/latest-v17.x/docs/api/esm.html#json-modules))\n-   `ts-node -vvv` also logs absolute paths to `ts-node` and `typescript`, to make it more obvious when you're accidentally using globally-installed versions ([#&#8203;1323](https://togithub.com/TypeStrong/ts-node/issues/1323), [#&#8203;1620](https://togithub.com/TypeStrong/ts-node/issues/1620))\n-   Add swc target \"es2022\" ([#&#8203;1535](https://togithub.com/TypeStrong/ts-node/issues/1535), [#&#8203;1540](https://togithub.com/TypeStrong/ts-node/issues/1540))\n    -   When you have target es2022 in tsconfig, will use swc's es2022 target\n\n**Changed**\n\n-   Initialize TypeScript compiler before starting REPL prompt ([#&#8203;1498](https://togithub.com/TypeStrong/ts-node/issues/1498)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n    -   Improves responsiveness for first line of REPL input\n-   Use `v8-compile-cache-lib` to load typescript\n    -   improves startup time ([#&#8203;1339](https://togithub.com/TypeStrong/ts-node/issues/1339), [#&#8203;1603](https://togithub.com/TypeStrong/ts-node/issues/1603))\n-   Support both `--camelCase` and `--hyphen-case` for all CLI flags; update documentation to use `--camelCase` ([#&#8203;1598](https://togithub.com/TypeStrong/ts-node/issues/1598), [#&#8203;1599](https://togithub.com/TypeStrong/ts-node/issues/1599))\n    -   Not a breaking change; CLI continues to accept both forms\n-   Make `TSError` `diagnosticText` property non-enumerable to prevent it from being logged below the stack ([#&#8203;1632](https://togithub.com/TypeStrong/ts-node/issues/1632))\n\n**Fixed**\n\n-   Fix [#&#8203;1538](https://togithub.com/TypeStrong/ts-node/issues/1538): REPL inputs fail to transpile via swc ([#&#8203;1538](https://togithub.com/TypeStrong/ts-node/issues/1538), [#&#8203;1541](https://togithub.com/TypeStrong/ts-node/issues/1541), [#&#8203;1602](https://togithub.com/TypeStrong/ts-node/issues/1602))\n-   Fix [#&#8203;1478](https://togithub.com/TypeStrong/ts-node/issues/1478): REPL erroneously logged `undefined` for all inputs after the first when using swc transpiler ([#&#8203;1478](https://togithub.com/TypeStrong/ts-node/issues/1478), [#&#8203;1580](https://togithub.com/TypeStrong/ts-node/issues/1580), [#&#8203;1602](https://togithub.com/TypeStrong/ts-node/issues/1602))\n-   Fix [#&#8203;1389](https://togithub.com/TypeStrong/ts-node/issues/1389): In `--showConfig` output, emit accurate `moduleTypes` paths resolved relative to the `tsconfig.json` which declared them ([#&#8203;1389](https://togithub.com/TypeStrong/ts-node/issues/1389), [#&#8203;1619](https://togithub.com/TypeStrong/ts-node/issues/1619))\n-   Fix: Remove indentation from `ts-node --help` output ([#&#8203;1597](https://togithub.com/TypeStrong/ts-node/issues/1597), [#&#8203;1600](https://togithub.com/TypeStrong/ts-node/issues/1600))\n-   Fix [#&#8203;1425](https://togithub.com/TypeStrong/ts-node/issues/1425): Merged definitions correctly into `tsconfig.schemastore-schema.json` ([#&#8203;1425](https://togithub.com/TypeStrong/ts-node/issues/1425), [#&#8203;1618](https://togithub.com/TypeStrong/ts-node/issues/1618))\n-   Fix: Allow disabling `\"use strict\"` emit in SWC transpiler ([#&#8203;1531](https://togithub.com/TypeStrong/ts-node/issues/1531), [#&#8203;1537](https://togithub.com/TypeStrong/ts-node/issues/1537))\n-   Fix: Add missing `ERR_UNKNOWN_FILE_EXTENSION` constructor; was throwing `ERR_UNKNOWN_FILE_EXTENSION is not a constructor` ([#&#8203;1562](https://togithub.com/TypeStrong/ts-node/issues/1562)) [@&#8203;bluelovers](https://togithub.com/bluelovers)\n-   Fix [#&#8203;1565](https://togithub.com/TypeStrong/ts-node/issues/1565): entrypoint resolution failed on node v12.0.x and v12.1.x ([#&#8203;1565](https://togithub.com/TypeStrong/ts-node/issues/1565), [#&#8203;1566](https://togithub.com/TypeStrong/ts-node/issues/1566)) [@&#8203;davidmurdoch](https://togithub.com/davidmurdoch)\n\n#### Docs\n\n-   Explain `env -S` flag for shebangs ([docs](https://typestrong.org/ts-node/docs/usage#shebang)) ([#&#8203;1448](https://togithub.com/TypeStrong/ts-node/issues/1448), [#&#8203;1545](https://togithub.com/TypeStrong/ts-node/issues/1545)) [@&#8203;sheeit](https://togithub.com/sheeit), [@&#8203;chee](https://togithub.com/chee)\n-   Suggest `skipIgnore` when you want to compile files in node_modules ([docs](https://typestrong.org/ts-node/docs/how-it-works)) ([#&#8203;1553](https://togithub.com/TypeStrong/ts-node/issues/1553)) [@&#8203;webstrand](https://togithub.com/webstrand)\n-   Fix typo in `moduleTypes` on options page ([docs](https://typestrong.org/ts-node/docs/options)) ([#&#8203;1630](https://togithub.com/TypeStrong/ts-node/issues/1630), [#&#8203;1633](https://togithub.com/TypeStrong/ts-node/issues/1633))\n\n#### Misc\n\n-   Adds experimental `experimentalResolverFeatures` option, but it does not do anything yet ([#&#8203;1514](https://togithub.com/TypeStrong/ts-node/issues/1514), [#&#8203;1614](https://togithub.com/TypeStrong/ts-node/issues/1614))\n\nhttps://github.com/TypeStrong/ts-node/milestone/4\n\n### [`v10.4.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.4.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.3.1...v10.4.0)\n\n**Added**\n\n-   Adds support for targets \"es2020\" and \"es2021\" to swc transpiler ([#&#8203;1521](https://togithub.com/TypeStrong/ts-node/issues/1521))\n-   Adds automatic target downgrade when using older versions of swc ([#&#8203;1521](https://togithub.com/TypeStrong/ts-node/issues/1521))\n    -   If tsconfig specifies es2020, but your version of swc only supports up to es2019, ts-node will automatically switch to es2019 instead of throwing an error\n\n**Changed**\n\n-   Improves types and API docs for `creatEsmHooks` ([API docs](https://typestrong.org/ts-node/api/index.html#createEsmHooks)) ([#&#8203;1506](https://togithub.com/TypeStrong/ts-node/issues/1506), [#&#8203;1529](https://togithub.com/TypeStrong/ts-node/issues/1529))\n\n**Fixed**\n\n-   Fix [#&#8203;1526](https://togithub.com/TypeStrong/ts-node/issues/1526): data URL handling in new ESM loader hooks API ([#&#8203;1526](https://togithub.com/TypeStrong/ts-node/issues/1526), [#&#8203;1529](https://togithub.com/TypeStrong/ts-node/issues/1529))\n\nhttps://github.com/TypeStrong/ts-node/milestone/8\n\n### [`v10.3.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.3.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.3.0...v10.3.1)\n\n**Fixed**\n\n-   Add version check to use new loader hooks API for node >=16.12.0 ([#&#8203;1522](https://togithub.com/TypeStrong/ts-node/issues/1522)) [@&#8203;shrujalshah28](https://togithub.com/shrujalshah28)\n\nhttps://github.com/TypeStrong/ts-node/milestone/7\n\n### [`v10.3.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.3.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.2.1...v10.3.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1507](https://togithub.com/TypeStrong/ts-node/issues/1507)\n\n**Added**\n\n-   Declare types for node builtin modules within REPL so you do not need to import them ([#&#8203;1424](https://togithub.com/TypeStrong/ts-node/issues/1424), [#&#8203;1500](https://togithub.com/TypeStrong/ts-node/issues/1500))\n    -   Node REPL exposes builtin modules as globals; typechecker now understands this\n    -   Typechecking should no longer raise errors when using builtins without first importing\n    -   For example: `util.promisify(setTimeout)(1000)` or `fs.readFileSync('example.txt')`\n-   Add `createEsmHooks()` function to create ESM loader hooks ([API docs](https://typestrong.org/ts-node/api/index.html#createEsmHooks)) ([#&#8203;1439](https://togithub.com/TypeStrong/ts-node/issues/1439)) [@&#8203;nonara](https://togithub.com/nonara)\n    -   Can be used to compose our loader hooks with another loader or additional logic\n-   `register()` accepts a ts-node `Service` ([API docs](https://typestrong.org/ts-node/api/index.html#register)) ([#&#8203;1474](https://togithub.com/TypeStrong/ts-node/issues/1474))\n    -   `register(options)` is still supported; no breaking changes\n-   Add support for Node.js's new loader hooks API ([#&#8203;1372](https://togithub.com/TypeStrong/ts-node/issues/1372), [#&#8203;1457](https://togithub.com/TypeStrong/ts-node/issues/1457), [#&#8203;1007](https://togithub.com/TypeStrong/ts-node/issues/1007)) [@&#8203;jonaskello](https://togithub.com/jonaskello)\n    -   Node.js has changed their loader hooks API\n    -   ts-node is compatible with all node versions, detects your node version and exposes the correct hooks API\n    -   Node's new API currently only available in node v17 nightly builds\n    -   Node will eventually backport the changes to node 16, and may also be backport to 14 and 12\n-   Add `--emit` to `--help` output ([#&#8203;1400](https://togithub.com/TypeStrong/ts-node/issues/1400), [#&#8203;1484](https://togithub.com/TypeStrong/ts-node/issues/1484)) [@&#8203;markbradley27](https://togithub.com/markbradley27)\n\n**Changed**\n\n-   When ts-node is registered and other libraries `require('source-map-support')`, they will be redirected to `@cspotcode/source-map-support`\n    -   See complete description in **Fixed** section below\n\n**Fixed**\n\n-   Fix [#&#8203;1440](https://togithub.com/TypeStrong/ts-node/issues/1440), [#&#8203;1441](https://togithub.com/TypeStrong/ts-node/issues/1441), [#&#8203;1438](https://togithub.com/TypeStrong/ts-node/issues/1438), [#&#8203;1495](https://togithub.com/TypeStrong/ts-node/issues/1495): Incorrect stack traces when third-party libraries use `source-map-support` instead of `@cspotcode/source-map-support` ([#&#8203;1440](https://togithub.com/TypeStrong/ts-node/issues/1440), [#&#8203;1441](https://togithub.com/TypeStrong/ts-node/issues/1441), [#&#8203;1438](https://togithub.com/TypeStrong/ts-node/issues/1438), [#&#8203;1495](https://togithub.com/TypeStrong/ts-node/issues/1495), [cspotcode/node-source-map-support#&#8203;23](https://togithub.com/cspotcode/node-source-map-support/issues/23), [#&#8203;1496](https://togithub.com/TypeStrong/ts-node/issues/1496), [#&#8203;1497](https://togithub.com/TypeStrong/ts-node/issues/1497)) [@&#8203;ejose19](https://togithub.com/ejose19)\n    -   When ts-node is registered and other libraries `require('source-map-support')`, they will be redirected to `@cspotcode/source-map-support`\n    -   ts-node uses `@cspotcode/source-map-support` for the fixes and enhancements listed here: [`@cspotcode/source-map-support` changelog](https://togithub.com/cspotcode/node-source-map-support/issues/24)\n    -   To ensure correct stack traces, all libraries must share a compatible sourcemap support implementation\n-   Fix [#&#8203;1363](https://togithub.com/TypeStrong/ts-node/issues/1363): REPL may erroneously combine previous input with next input, eval both as a single statement ([#&#8203;1363](https://togithub.com/TypeStrong/ts-node/issues/1363), [#&#8203;1480](https://togithub.com/TypeStrong/ts-node/issues/1480)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n    -   For example, entering `100` on first line and `* 2` on second line would erronously be interpreted as `100 * 2`\n    -   REPL now ensures both lines are separate statements, both when typechecking and when evaluating\n-   Fix [#&#8203;1488](https://togithub.com/TypeStrong/ts-node/issues/1488): Node may log \"circular dependency\" warning when using `allowJs` ([#&#8203;1488](https://togithub.com/TypeStrong/ts-node/issues/1488), [#&#8203;1489](https://togithub.com/TypeStrong/ts-node/issues/1489))\n-   Fix [#&#8203;1301](https://togithub.com/TypeStrong/ts-node/issues/1301): Filter empty strings from `TS_NODE_IGNORE` and `TS_NODE_IGNORE_DIAGNOSTICS`; treat empty environment variable as empty array ([#&#8203;1301](https://togithub.com/TypeStrong/ts-node/issues/1301), [#&#8203;1483](https://togithub.com/TypeStrong/ts-node/issues/1483)) [@&#8203;ValeriaVG](https://togithub.com/ValeriaVG)\n    -   `TS_NODE_IGNORE= ts-node ./example.ts` will disable default ignore rules; will compile files in `./node_modules`\n\n**Docs**\n\n-   Update VSCode debug configuration ([Docs](https://typestrong.org/ts-node/docs/recipes/visual-studio-code)) ([#&#8203;1466](https://togithub.com/TypeStrong/ts-node/issues/1466))\n-   Update ESM-related messaging to clarify that experimental status is due to Node.js, not ts-node ([#&#8203;1455](https://togithub.com/TypeStrong/ts-node/issues/1455))\n-   Refer to ts-node consistently ([#&#8203;1481](https://togithub.com/TypeStrong/ts-node/issues/1481)) [@&#8203;animafps](https://togithub.com/animafps)\n\nhttps://github.com/TypeStrong/ts-node/milestone/5\n\n### [`v10.2.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.2.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.2.0...v10.2.1)\n\n**Fixed**\n\n-   Fixes [#&#8203;1426](https://togithub.com/TypeStrong/ts-node/issues/1426): Do not import typescript outside of configuration/project loading ([#&#8203;1433](https://togithub.com/TypeStrong/ts-node/issues/1433), [#&#8203;1426](https://togithub.com/TypeStrong/ts-node/issues/1426)) [@&#8203;Songkeys](https://togithub.com/Songkeys)\n    -   We take care to load your project's version of typescript, falling back to a globally-installed version if necessary.\n    -   10.2.0 introduced a bug where we did not do this consistently, causing global or npx installations of ts-node to attempt loading typescript relative to themselves, not your project.\n    -   This failed if typescript was not globally installed or npx did not install peer dependencies.\n\nhttps://github.com/TypeStrong/ts-node/milestone/6\n\n### [`v10.2.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.2.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.1.0...v10.2.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1423](https://togithub.com/TypeStrong/ts-node/issues/1423)\n\n**Added**\n\n-   Adds top-level await support to REPL ([#&#8203;1383](https://togithub.com/TypeStrong/ts-node/issues/1383), [#&#8203;245](https://togithub.com/TypeStrong/ts-node/issues/245)) [@&#8203;ejose19](https://togithub.com/ejose19)\n    -   can be disabled with `--no-experimental-repl-await`, `experimentalReplAwait`, or `TS_NODE_EXPERIMENTAL_REPL_AWAIT` ([CLI docs](https://typestrong.org/ts-node/docs/options), [API docs](https://typestrong.org/ts-node/api/interfaces/CreateOptions.html#experimentalReplAwait))\n-   Setting `\"pretty\": false` disables pretty formatting of diagnostics even when stdout is a TTY ([#&#8203;1418](https://togithub.com/TypeStrong/ts-node/issues/1418), [#&#8203;1420](https://togithub.com/TypeStrong/ts-node/issues/1420)) [@&#8203;elevatebart](https://togithub.com/elevatebart)\n    -   Applies to ts-node's `pretty` option, not to be confused with TypeScript's `pretty` option\n-   Ignores diagnostics which are annoying in an interactive REPL ([#&#8203;1396](https://togithub.com/TypeStrong/ts-node/issues/1396), [#&#8203;1120](https://togithub.com/TypeStrong/ts-node/issues/1120), [#&#8203;729](https://togithub.com/TypeStrong/ts-node/issues/729), [#&#8203;850](https://togithub.com/TypeStrong/ts-node/issues/850), [#&#8203;469](https://togithub.com/TypeStrong/ts-node/issues/469))\n    -   For example, when you input `const foo = 1` in the REPL, `foo` is unused.  We ignore the resulting diagnostic `foo is declared but its value is never read`\n    -   Diagnostics are only ignored in the REPL\n    -   Diagnostics for non-REPL files imported by the REPL will still be shown\n-   Logged stack traces are colorized to match vanilla node's behavior ([#&#8203;1412](https://togithub.com/TypeStrong/ts-node/issues/1412), [#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405))\n\n**Fixed**\n\n-   Fix [#&#8203;1397](https://togithub.com/TypeStrong/ts-node/issues/1397): SWC transpiler should emit ECMAScript imports and exports when configuration dictates ([#&#8203;1409](https://togithub.com/TypeStrong/ts-node/issues/1409), [#&#8203;1397](https://togithub.com/TypeStrong/ts-node/issues/1397))\n    -   Enables SWC transpiler to be used alongside `--loader`\n-   Fix [#&#8203;1403](https://togithub.com/TypeStrong/ts-node/issues/1403): source-map-support breaks rendering of node errors ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1403](https://togithub.com/TypeStrong/ts-node/issues/1403))\n-   Fix [#&#8203;1410](https://togithub.com/TypeStrong/ts-node/issues/1410): rendering of async stack frames should include `async` annotations ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1410](https://togithub.com/TypeStrong/ts-node/issues/1410))\n-   Fix [#&#8203;1411](https://togithub.com/TypeStrong/ts-node/issues/1411): wrong order of process 'exit' event and logging unhandled exception ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1411](https://togithub.com/TypeStrong/ts-node/issues/1411))\n-   Fix [#&#8203;1419](https://togithub.com/TypeStrong/ts-node/issues/1419): Should not throw `require.resolve` error when `@types/node` peerDependency is missing ([#&#8203;1419](https://togithub.com/TypeStrong/ts-node/issues/1419), [#&#8203;1422](https://togithub.com/TypeStrong/ts-node/issues/1422))\n\nhttps://github.com/TypeStrong/ts-node/milestone/2\n\n### [`v10.1.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.1.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.0.0...v10.1.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1390](https://togithub.com/TypeStrong/ts-node/issues/1390)\n\n**Added**\n\n-   Add `\"moduleType\"` option to override module type -- CommonJS or ECMAScript -- on select files. ([docs](https://typestrong.org/ts-node/docs/module-type-overrides)) ([#&#8203;1342](https://togithub.com/TypeStrong/ts-node/issues/1342), [#&#8203;1371](https://togithub.com/TypeStrong/ts-node/issues/1371), [#&#8203;1376](https://togithub.com/TypeStrong/ts-node/issues/1376))\n    -   Useful when a configuration file, for example `webpack.config.ts`, must execute as CommonJS but the rest of the project is ESM\n    -   selectively overrides `package.json` `\"type\"` and `tsconfig.json` `\"module\"`\n    -   akin to `.cjs` and `.mjs` extensions, but for `.ts` and `.tsx` files\n    -   thanks to [@&#8203;jayaddison](https://togithub.com/jayaddison) for help on test coverage\n-   Implement `\"extends\"` support for `\"ts-node\"` options in `tsconfig.json` ([#&#8203;1328](https://togithub.com/TypeStrong/ts-node/issues/1328), [#&#8203;1356](https://togithub.com/TypeStrong/ts-node/issues/1356))\n    -   `\"ts-node\": {}` options will be parsed from extended tsconfigs\n    -   allows sharing and deduplicating ts-node configuration\n-   Un-deprecate `scope` and `scopeDir`; add both to CLI and `tsconfig.json` options; un-deprecate `TS_NODE_SCOPE` env var; add `TS_NODE_SCOPE_DIR` env var ([docs](https://typestrong.org/ts-node/docs/options)) ([#&#8203;1346](https://togithub.com/TypeStrong/ts-node/issues/1346), [#&#8203;1367](https://togithub.com/TypeStrong/ts-node/issues/1367))\n\n**Changed**\n\n-   Improve error messages thrown by native ESM loader hooks ([#&#8203;1357](https://togithub.com/TypeStrong/ts-node/issues/1357), [#&#8203;1373](https://togithub.com/TypeStrong/ts-node/issues/1373)) [@&#8203;tars0x9752](https://togithub.com/tars0x9752)\n    -   messages more closely match node; are more descriptive\n-   Emit `\"ts-node\"` object at the top of `--showConfig` output instead of the bottom ([#&#8203;1355](https://togithub.com/TypeStrong/ts-node/issues/1355))\n\n**Fixed**\n\n-   Fix [#&#8203;1282](https://togithub.com/TypeStrong/ts-node/issues/1282): Set correct globals in `[stdin]`, `[eval]`, and `<repl>` contexts ([#&#8203;1333](https://togithub.com/TypeStrong/ts-node/issues/1333))\n    -   More closely align ts-node's behavior with vanilla node\n    -   Affects the interactive REPL, piping to stdin, and `ts-node -e`\n    -   Matches node's behavior for globals `__filename`, `__dirname`, `module` and sub-fields of `module`, `exports`, and builtin module aliases `fs`, etc\n-   Fix [#&#8203;1343](https://togithub.com/TypeStrong/ts-node/issues/1343): Set swc option `keepClassNames` to `true` ([#&#8203;1344](https://togithub.com/TypeStrong/ts-node/issues/1344))\n-   Fix: [#&#8203;1387](https://togithub.com/TypeStrong/ts-node/issues/1387): REPL outputs 'use strict' after first empty line of input ([#&#8203;1388](https://togithub.com/TypeStrong/ts-node/issues/1388)) [@&#8203;ejose19](https://togithub.com/ejose19)\n\n**Docs**\n\n-   Update ESM docs to say that env vars *are* supported with `node --loader ts-node/esm` ([docs](https://togithub.com/TypeStrong/ts-node/issues/1007)) ([#&#8203;1379](https://togithub.com/TypeStrong/ts-node/issues/1379))\n\nhttps://github.com/TypeStrong/ts-node/milestone/3\n\n### [`v10.0.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.0.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.1.1...v10.0.0)\n\nQuestions about this release?  Ask in the official discussion thread: [#&#8203;1337](https://togithub.com/TypeStrong/ts-node/issues/1337)\n\n*Breaking changes are prefixed with **\\[BREAKING]***\n\n**Added**\n\n-   Adds `--show-config` to log the resolved configuration ([docs](https://typestrong.org/ts-node/docs/troubleshooting#understanding-configuration)) ([#&#8203;1100](https://togithub.com/TypeStrong/ts-node/issues/1100), [#&#8203;1243](https://togithub.com/TypeStrong/ts-node/issues/1243))\n-   Bundle and re-export [@&#8203;tsconfig/node](https://togithub.com/tsconfig/node)\\* configurations for convenience ([docs](https://typestrong.org/ts-node/docs/configuration#tsconfigbases)) ([#&#8203;1202](https://togithub.com/TypeStrong/ts-node/issues/1202), [#&#8203;1236](https://togithub.com/TypeStrong/ts-node/issues/1236), [#&#8203;1313](https://togithub.com/TypeStrong/ts-node/issues/1313))\n-   Default to appropriate [@&#8203;tsconfig/node](https://togithub.com/tsconfig/node)\\* configuration based on node and typescript versions ([docs](https://typestrong.org/ts-node/docs/configuration#default-config)) ([#&#8203;1202](https://togithub.com/TypeStrong/ts-node/issues/1202), [#&#8203;1236](https://togithub.com/TypeStrong/ts-node/issues/1236), [#&#8203;1313](https://togithub.com/TypeStrong/ts-node/issues/1313))\n-   Automatically reference [@&#8203;types/node](https://togithub.com/types/node); use globally-installed [@&#8203;types/node](https://togithub.com/types/node) if not locally installed ([#&#8203;1240](https://togithub.com/TypeStrong/ts-node/issues/1240), [#&#8203;1257](https://togithub.com/TypeStrong/ts-node/issues/1257))\n-   Add `swc` integration and new `--transpiler` option to use third-party transpilers for a massive speed boost on large codebases ([docs](https://typestrong.org/ts-node/docs/transpilers)) ([#&#8203;779](https://togithub.com/TypeStrong/ts-node/issues/779), [#&#8203;1160](https://togithub.com/TypeStrong/ts-node/issues/1160))\n-   Add `scopeDir` API option ([docs](https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html#scopeDir)) ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Add `projectSearchDir` API option ([docs](https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html#projectSearchDir)) ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Add `--cwd-mode` and `ts-node-cwd` to resolve config file relative to cwd, not entrypoint script ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n\n**Changed**\n\n-   **\\[BREAKING]** Make `--script-mode` default behavior; resolve tsconfig relative to entrypoint script instead of cwd ([#&#8203;949](https://togithub.com/TypeStrong/ts-node/issues/949), [#&#8203;1197](https://togithub.com/TypeStrong/ts-node/issues/1197), [#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   In most cases this change will have no noticeable effect\n    -   Primarily benefits portable shell scripts on your `$PATH`, because `ts-node` will respect the script's local `tsconfig.json`\n    -   Use `--cwd-mode` or `ts-node-cwd` if you need legacy behavior\n-   **\\[BREAKING]** `ignore` rules evaluate relative to `tsconfig.json` directory, otherwise `cwd` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   **\\[BREAKING]** Remove support for node 10.  Minimum supported version is node 12 ([#&#8203;1312](https://togithub.com/TypeStrong/ts-node/issues/1312))\n-   Rename `--dir` to `--cwd`; rename `TS_NODE_DIR` to `TS_NODE_CWD` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   `--dir` and `TS_NODE_DIR` are deprecated but still parsed for backwards-compatibility\n    -   `--dir` effectively changed the working directory of `ts-node`; renaming makes this behavior more obvious\n\n**Deprecated**\n\n-   Deprecate `TS_NODE_SCOPE` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Deprecate `--dir` and `TS_NODE_DIR` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n\n**Removed**\n\n-   **\\[BREAKING]** Internal APIs removed from type declarations ([#&#8203;1242](https://togithub.com/TypeStrong/ts-node/issues/1242))\n    -   Removed `DEFAULTS`, `normalizeSlashes`, `parse`, `split`\n    -   No features were removed\n    -   This will only affect consumers of `ts-node`'s programmatic API\n\n**Fixed**\n\n-   **\\[BREAKING]** Fix [#&#8203;1229](https://togithub.com/TypeStrong/ts-node/issues/1229) and [#&#8203;1235](https://togithub.com/TypeStrong/ts-node/issues/1235): always throw `ERR_REQUIRE_ESM` when attempting to execute ESM as CJS, even when not using `--loader ts-node/esm` ([#&#8203;1232](https://togithub.com/TypeStrong/ts-node/issues/1232))\n    -   This aligns our behavior with vanilla `node`\n-   **\\[BREAKING]** Fix [#&#8203;1225](https://togithub.com/TypeStrong/ts-node/issues/1225): `compiler` is loaded relative to `tsconfig.json` instead of entrypoint script ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   In most cases this change will have no noticable effect\n-   Fix [#&#8203;1217](https://togithub.com/TypeStrong/ts-node/issues/1217): REPL not always using passed stdout and stderr ([#&#8203;1224](https://togithub.com/TypeStrong/ts-node/issues/1224))\n-   Fix [#&#8203;1220](https://togithub.com/TypeStrong/ts-node/issues/1220): `ts-node ./index` may execute the wrong file extension because tsconfig search poisons the `require.resolve` cache ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Fix [#&#8203;1322](https://togithub.com/TypeStrong/ts-node/issues/1322): Sourcemaps fail for filenames with spaces or other characters which are percent-encoded in URLs ([#&#8203;1160](https://togithub.com/TypeStrong/ts-node/issues/1160), [#&#8203;1330](https://togithub.com/TypeStrong/ts-node/issues/1330))\n-   Fix [#&#8203;1331](https://togithub.com/TypeStrong/ts-node/issues/1331): Resolution of node builtin modules in ESM loader fails on node >=12.20.0, <13 ([#&#8203;1332](https://togithub.com/TypeStrong/ts-node/issues/1332))\n\n**Docs**\n\n-   New documentation website: https://typestrong.org/ts-node\n    -   README is generated to match the website\n    -   Added page explaining CommonJS vs ESM\n    -   Added page with Performance advice\n    -   Added Troubleshooting page\n    -   Organized and added to \"Recipes\" section with third-party tool integrations\n    -   Added TypeDoc-generated API docs\n    -   Work was spread across multiple tickets: [#&#8203;1207](https://togithub.com/TypeStrong/ts-node/issues/1207), [#&#8203;1213](https://togithub.com/TypeStrong/ts-node/issues/1213), [#&#8203;1221](https://togithub.com/TypeStrong/ts-node/issues/1221), [#&#8203;1228](https://togithub.com/TypeStrong/ts-node/issues/1228), [#&#8203;1244](https://togithub.com/TypeStrong/ts-node/issues/1244), [#&#8203;1250](https://togithub.com/TypeStrong/ts-node/issues/1250), [#&#8203;1294](https://togithub.com/TypeStrong/ts-node/issues/1294), [#&#8203;1295](https://togithub.com/TypeStrong/ts-node/issues/1295), [#&#8203;1296](https://togithub.com/TypeStrong/ts-node/issues/1296), [#&#8203;1297](https://togithub.com/TypeStrong/ts-node/issues/1297)\n    -   Thanks to these contributors for PRs which improved our documentation\n        -   add troubleshooting tip for syntax errors ([#&#8203;1201](https://togithub.com/TypeStrong/ts-node/issues/1201)) [@&#8203;jedwards1211](https://togithub.com/jedwards1211)\n        -   Clarify handling of tsx/jsx file extensions ([#&#8203;1179](https://togithub.com/TypeStrong/ts-node/issues/1179)) [@&#8203;NaridaL](https://togithub.com/NaridaL)\n-   Added `CONTRIBUTING.md` to document the codebase and our development workflow\n\nhttps://github.com/TypeStrong/ts-node/milestone/1\n\n### [`v9.1.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.1.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.1.0...v9.1.1)\n\nNo code changes.  We re-packed and republished v9.1.1, because the v9.1.0 package was broken due to an npm v7 bug.\n\n**Fixes**\n\n-   Published tarball had extra slashes in the paths of dist files.  [#&#8203;1172](https://togithub.com/TypeStrong/ts-node/issues/1172)\n\n### [`v9.1.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.1.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.0.0...v9.1.0)\n\n**Added**\n\n-   Expose ts-node REPL via the API ([#&#8203;1121](https://togithub.com/TypeStrong/ts-node/issues/1121)) [@&#8203;MarcManiez](https://togithub.com/MarcManiez)\n-   Allow `--typeCheck` flag to override `--transpileOnly` flag specified in `tsconfig.json` ([#&#8203;1142](https://togithub.com/TypeStrong/ts-node/issues/1142))\n\n**Changed**\n\n-   Rename interface `Register` to `Service`. It is still aliased as `Register` for backwards compatibility ([#&#8203;1158](https://togithub.com/TypeStrong/ts-node/issues/1158))\n-   Update code copied from node's ESM resolver to be the latest from node 15, to keep our ESM resolver's behavior as close as possible to vanilla node ([#&#8203;1167](https://togithub.com/TypeStrong/ts-node/issues/1167))\n\n**Fixed**\n\n-   ESM resolver will preserve search portion of URL, used for cache busting ([#&#8203;1165](https://togithub.com/TypeStrong/ts-node/issues/1165)) [@&#8203;frandiox](https://togithub.com/frandiox)\n-   Fix ESM resolution of builtin modules on node >=14.13.1 ([#&#8203;1136](https://togithub.com/TypeStrong/ts-node/issues/1136))\n-   Recognize `--es-module-specifier-resolution` as an alias of `--experimental-specifier-resolution` for node 12 compatibility ([#&#8203;1122](https://togithub.com/TypeStrong/ts-node/issues/1122)) [@&#8203;nguyensomniac](https://togithub.com/nguyensomniac)\n\n**Docs**\n\n-   Fix description of `ts-node-dev` in README ([#&#8203;1131](https://togithub.com/TypeStrong/ts-node/issues/1131)) [@&#8203;iamandrewluca](https://togithub.com/iamandrewluca)\n-   Update `transformers` description to clarify incompatibility with `transpileOnly` ([#&#8203;1123](https://togithub.com/TypeStrong/ts-node/issues/1123))\n\n**Misc**\n\n-   Changes to test matrix: Test against node 15; drop node 13 tests; remove 12.16 in favor of latest 12.x.x ([#&#8203;1138](https://togithub.com/TypeStrong/ts-node/issues/1138), [#&#8203;1148](https://togithub.com/TypeStrong/ts-node/issues/1148))\n-   Improve codecov rules to remove misleading test failures ([#&#8203;1159](https://togithub.com/TypeStrong/ts-node/issues/1159))\n\n### [`v9.0.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.0.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.2...v9.0.0)\n\n*Breaking changes are labelled \\[BREAKING] below.*\n\n**Added**\n\n-   Throw `ERR_REQUIRE_ESM` when a file is `require()`d which should be loaded as ESM ([#&#8203;1031](https://togithub.com/TypeStrong/ts-node/issues/1031))\n-   Re-add `\"exports\"` declaration to package.json in backwards-compatible way, enabling `node --loader ts-node/esm` without file extension ([#&#8203;1028](https://togithub.com/TypeStrong/ts-node/issues/1028))\n-   Allow specifying `\"require\"` option via tsconfig ([#&#8203;925](https://togithub.com/TypeStrong/ts-node/issues/925))\n-   REPL respects node's `NODE_NO_READLINE` environment variable ([#&#8203;1090](https://togithub.com/TypeStrong/ts-node/issues/1090))\n-   Add a transpile-only entrypoint for ESM loader: `node --loader ts-node/esm/transpile-only` ([#&#8203;1102](https://togithub.com/TypeStrong/ts-node/issues/1102)) [@&#8203;concision](https://togithub.com/concision)\n\n**Changed**\n\n-   \\[BREAKING] Drops support for node versions < 10 ([#&#8203;1036](https://togithub.com/TypeStrong/ts-node/issues/1036))\n\n**Fixed**\n\n-   \\[BREAKING] Re-add `realpath`, which should fix workflows that use symlinks, such as `pnpm`, Lerna workspaces, or other mono-repo configurations ([#&#8203;970](https://togithub.com/TypeStrong/ts-node/issues/970))\n-   Compile files within `node_modules` when `--skip-ignore` or `--ignore` options are configured to allow it ([#&#8203;970](https://togithub.com/TypeStrong/ts-node/issues/970))\n-   Fix [#&#8203;884](https://togithub.com/TypeStrong/ts-node/issues/884) by not adding all referenced files to `getSourceFileNames`/`rootNames` ([#&#8203;999](https://togithub.com/TypeStrong/ts-node/issues/999))\n-   Fix [#&#8203;996](https://togithub.com/TypeStrong/ts-node/issues/996): bump `projectVersion` every time `getSourceFileNames` changes, avoiding accidentally outdated typechecking ([#&#8203;998](https://togithub.com/TypeStrong/ts-node/issues/998))\n-   Fix [#&#8203;1051](https://togithub.com/TypeStrong/ts-node/issues/1051): pass transformers object to `ts.transpileModule` ([#&#8203;1054](https://togithub.com/TypeStrong/ts-node/issues/1054)) [@&#8203;thetutlage](https://togithub.com/thetutlage)\n-   Fix [#&#8203;1060](https://togithub.com/TypeStrong/ts-node/issues/1060): use source maps for stack traces in ESM modules ([#&#8203;1087](https://togithub.com/TypeStrong/ts-node/issues/1087))\n-   Fix [#&#8203;1072](https://togithub.com/TypeStrong/ts-node/issues/1072): Respect `--experimental-specifier-resolution` coming from `NODE_OPTIONS` in ESM loader ([#&#8203;1085](https://togithub.com/TypeStrong/ts-node/issues/1085)) [@&#8203;evg656e](https://togithub.com/evg656e)\n-   Fix [#&#8203;1098](https://togithub.com/TypeStrong/ts-node/issues/1098): ESM loader should skip `.cjs`, `.mjs`, and any unexpected file extensions ([#&#8203;1103](https://togithub.com/TypeStrong/ts-node/issues/1103)) [@&#8203;concision](https://togithub.com/concision)\n\n**Docs**\n\n-   Better explain how to compile imports, either CommonJS or using experimental ESM loader. Resolves [#&#8203;1075](https://togithub.com/TypeStrong/ts-node/issues/1075) ([#&#8203;1086](https://togithub.com/TypeStrong/ts-node/issues/1086))\n\n**Misc**\n\n-   Fix, re-enable, and add various tests ([#&#8203;1044](https://togithub.com/TypeStrong/ts-node/issues/1044), [#&#8203;1088](https://togithub.com/TypeStrong/ts-node/issues/1088), [#&#8203;1108](https://togithub.com/TypeStrong/ts-node/issues/1108), [#&#8203;1110](https://togithub.com/TypeStrong/ts-node/issues/1110), [#&#8203;1109](https://togithub.com/TypeStrong/ts-node/issues/1109), [#&#8203;1115](https://togithub.com/TypeStrong/ts-node/issues/1115), [#&#8203;1043](https://togithub.com/TypeStrong/ts-node/issues/1043), [#&#8203;999](https://togithub.com/TypeStrong/ts-node/issues/999))\n\n### [`v8.10.2`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.2)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.1...v8.10.2)\n\n**Fixed**\n\nFixes [#&#8203;1037](https://togithub.com/TypeStrong/ts-node/issues/1037): source maps broken on Windows. ([#&#8203;1038](https://togithub.com/TypeStrong/ts-node/issues/1038))\n\n**Misc**\n\nFix failing tests on node 6 ([#&#8203;1035](https://togithub.com/TypeStrong/ts-node/issues/1035))\nPush coverage from Github Actions; remove TravisCI ([#&#8203;1034](https://togithub.com/TypeStrong/ts-node/issues/1034))\nRun tests e2e against an `npm pack && npm install`ed ts-node ([#&#8203;1032](https://togithub.com/TypeStrong/ts-node/issues/1032))\nRun CI tests on Windows ([#&#8203;1041](https://togithub.com/TypeStrong/ts-node/issues/1041))\nRun CI only once per commit on pull requests and master ([#&#8203;1042](https://togithub.com/TypeStrong/ts-node/issues/1042))\n\n### [`v8.10.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.0...v8.10.1)\n\n**Fix**\n\nFixes [#&#8203;1026](https://togithub.com/TypeStrong/ts-node/issues/1026): revert the addition of package.json \"exports\" because it blocked `require()`s that used to work, for example `require('ts-node/register')` ([#&#8203;1027](https://togithub.com/TypeStrong/ts-node/issues/1027))\n\n### [`v8.10.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.9.1...v8.10.0)\n\n**Added**\n\nExperimental support for native ECMAScript modules in node >=13 ([#&#8203;1007](https://togithub.com/TypeStrong/ts-node/issues/1007), [#&#8203;1010](https://togithub.com/TypeStrong/ts-node/issues/1010))\n\n### [`v8.9.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.9.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.9.0...v8.9.1)\n\n**Fixed**\n\nFix `--interactive` / `-i` flag so it forces REPL even when stdin is not a TTY ([#&#8203;1019](https://togithub.com/TypeStrong/ts-node/issues/1019))\n\n### [`v8.9.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.9.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.8.2...v8.9.0)\n\n**Fixed**\n\nFix failing tests caused by recent changes to [@&#8203;types/node](https://togithub.com/types/node) ([#&#8203;1016](https://togithub.com/TypeStrong/ts-node/issues/1016))\nFix [#&#8203;945](https://togithub.com/TypeStrong/ts-node/issues/945): Bump source-map-support dependency to include upstream fix for worker threads error handling ([#&#8203;1015](https://togithub.com/TypeStrong/ts-node/issues/1015)) [@&#8203;addaleax](https://togithub.com/addaleax)\nFix [#&#8203;1004](https://togithub.com/TypeStrong/ts-node/issues/1004): in `--scriptMode`, resolve config file relative to realpath of entrypoint script ([#&#8203;1009](https://togithub.com/TypeStrong/ts-node/issues/1009))\nNormalized filenames in cache to fix performance issues on Windows ([#&#8203;997](https://togithub.com/TypeStrong/ts-node/issues/997)) [@&#8203;sylc](https://togithub.com/sylc)\n\n**Added**\n\nAdd timestamps to debug logging ([#&#8203;994](https://togithub.com/TypeStrong/ts-node/issues/994)) [@&#8203;sylc](https://togithub.com/sylc)\n\n**Docs**\n\nImprove coverage of the README ([#&#8203;1000](https://togithub.com/TypeStrong/ts-node/issues/1000)) [@&#8203;KasparEtter](https://togithub.com/KasparEtter)\nChange order of install \n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48370","RelatedDescription":"Closed or merged PR \"build: update dependency ts-node to v10\" (#48370)"},{"Id":"1477772740","IsPullRequest":true,"CreatedAt":"2022-12-06T17:11:54","Actor":"angular-robot","Number":"48368","RawContent":null,"Title":"build: update dependency karma-jasmine to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [karma-jasmine](https://togithub.com/karma-runner/karma-jasmine) | devDependencies | major | [`~4.0.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/karma-jasmine/4.0.2/5.1.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>karma-runner/karma-jasmine</summary>\n\n### [`v5.1.0`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;510-httpsgithubcomkarma-runnerkarma-jasminecomparev501v510-2022-06-16)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.1...v5.1.0)\n\n##### Features\n\n-   **spec-filter:** allow custom specFilter ([b73dbd6](https://togithub.com/karma-runner/karma-jasmine/commit/b73dbd69050bc7e192b1ad0ac9bb880f0ec00a0e))\n\n#### [5.0.1](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.0...v5.0.1) (2022-05-13)\n\n##### Bug Fixes\n\n-   fixes matches performance issue, github[#&#8203;302](https://togithub.com/karma-runner/karma-jasmine/issues/302) ([e964fa6](https://togithub.com/karma-runner/karma-jasmine/commit/e964fa60ad63826e2e85f712eb119c524f4ef428))\n\n### [`v5.0.1`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;501-httpsgithubcomkarma-runnerkarma-jasminecomparev500v501-2022-05-13)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.0...v5.0.1)\n\n##### Bug Fixes\n\n-   fixes matches performance issue, github[#&#8203;302](https://togithub.com/karma-runner/karma-jasmine/issues/302) ([e964fa6](https://togithub.com/karma-runner/karma-jasmine/commit/e964fa60ad63826e2e85f712eb119c524f4ef428))\n\n### [`v5.0.0`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;500-httpsgithubcomkarma-runnerkarma-jasminecomparev402v500-2022-04-12)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.2...v5.0.0)\n\n##### Bug Fixes\n\n-   limit karma peer dependency to ^6.0.0 ([d72c124](https://togithub.com/karma-runner/karma-jasmine/commit/d72c124d9f30402acb31ecdf77fd517208713320))\n\n##### Build System\n\n-   drop Node.js 10 support ([ea691e8](https://togithub.com/karma-runner/karma-jasmine/commit/ea691e82cffe14358bfaddfc1f42f0ba58145e32))\n\n##### Features\n\n-   **deps:** update dependencies including jasmine-core ([821f094](https://togithub.com/karma-runner/karma-jasmine/commit/821f094801dcd8380c2dee15c0f1686e9df5dca7))\n\n##### BREAKING CHANGES\n\n-   The minimum required version of karma is 6.0.0.\n-   The minimum required version of Node is 12.0.0.\n-   **deps:** jasmine-core was updated to the 4.1.0.\n\nPlease refer to the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md) for the complete list of changes and migration instructions.\n\n#### [4.0.2](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.1...v4.0.2) (2022-03-30)\n\n##### Bug Fixes\n\n-   sync package-lock.json and package.json ([4dacc5d](https://togithub.com/karma-runner/karma-jasmine/commit/4dacc5d4cae68d73337cefad5a5879a6471fe42c))\n\n#### [4.0.1](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.0...v4.0.1) (2020-08-12)\n\n##### Bug Fixes\n\n-   **adapter:** filter functions from result.order ([#&#8203;272](https://togithub.com/karma-runner/karma-jasmine/issues/272)) ([28f337c](https://togithub.com/karma-runner/karma-jasmine/commit/28f337caa86e9147d2110a27fb78cc072409c62a))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48368","RelatedDescription":"Closed or merged PR \"build: update dependency karma-jasmine to v5\" (#48368)"},{"Id":"1479375647","IsPullRequest":false,"CreatedAt":"2022-12-06T15:24:57","Actor":"pweyrich","Number":"48377","RawContent":null,"Title":"Throw NG0300 error at built-time rather than at runtime","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nCurrently, [NG0300](https://angular.io/errors/NG0300) is thrown at runtime.\r\nI am wondering whether it is possible to throw this error already at built-time.\r\nThis would improve DX in the way that an app with this error would not be possible to ship.\n\n### Proposed solution\n\nDetect and throw error at built-time.\r\nMight implement an extended diagnostic for it!?\n\n### Alternatives considered\n\nSince this is very likely a static code analysis, linting tools should also be able to detect these.\r\nHowever, I haven't found any lint rule that would report this error.","Url":"https://github.com/angular/angular/issues/48377","RelatedDescription":"Open issue \"Throw NG0300 error at built-time rather than at runtime\" (#48377)"},{"Id":"1478629520","IsPullRequest":false,"CreatedAt":"2022-12-06T10:17:57","Actor":"Sravan6969","Number":"48373","RawContent":null,"Title":"Make angular 15 compatible with node v19.2.0","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [ ] Bug Report\n- [X] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\ncurrently Angular 15 doesn't support Node v19.2.0 and I am using M1 Mac apple silicon.\r\nI am unable to downgrade the angular versions or nodeJS version,\n\n### Proposed solution [Feature Request only]\n\nmake angular 15 compatible node 19.2.0\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/48373","RelatedDescription":"Closed issue \"Make angular 15 compatible with node v19.2.0\" (#48373)"},{"Id":"1478649284","IsPullRequest":true,"CreatedAt":"2022-12-06T09:29:20","Actor":"tomalaforge","Number":"48374","RawContent":null,"Title":"fix(common): strict type checking for ngtemplateoutlet","State":"open","Body":"When we create a context to inject inside our ngTemplateOutlet, the context was declare as Object, therefore, there are no compilation error. \r\n\r\nNow if we add a context, we get error at compile type.\r\n\r\nfix #43510 \r\n","Url":"https://github.com/angular/angular/pull/48374","RelatedDescription":"Open PR \"fix(common): strict type checking for ngtemplateoutlet\" (#48374)"},{"Id":"1477640818","IsPullRequest":true,"CreatedAt":"2022-12-05T23:56:51","Actor":"angular-robot","Number":"48366","RawContent":null,"Title":"build: update dependency jasmine-core to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | devDependencies | major | [`~3.6.0` -> `~4.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/3.6.0/4.5.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine</summary>\n\n### [`v4.5.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.5.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.4.0...v4.5.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.5.0.md).\n\n### [`v4.4.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.4.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.3.0...v4.4.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.4.0.md).\n\n### [`v4.3.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.3.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.2.0...v4.3.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.3.0.md).\n\n### [`v4.2.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.2.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.1.1...v4.2.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.2.0.md).\n\n### [`v4.1.1`](https://togithub.com/jasmine/jasmine/releases/tag/v4.1.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.1.0...v4.1.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.1.1.md).\n\n### [`v4.1.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.1.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.0.1...v4.1.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.1.0.md).\n\n### [`v4.0.1`](https://togithub.com/jasmine/jasmine/releases/tag/v4.0.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.0.0...v4.0.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.1.md).\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.1...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md).\n\n### [`v3.99.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.99.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.0...v3.99.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.1.md).\n\n### [`v3.99.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.99.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.1...v3.99.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.0.md).\n\n### [`v3.10.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.10.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.0...v3.10.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.10.1.md).\n\n### [`v3.10.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.10.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.9.0...v3.10.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.10.0.md).\n\n### [`v3.9.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.9.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.8.0...v3.9.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.9.0.md).\n\n### [`v3.8.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.8.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.7.1...v3.8.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.8.0.md).\n\n### [`v3.7.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.7.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.7.0...v3.7.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.7.1.md).\n\n### [`v3.7.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.7.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.6.0...v3.7.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48366","RelatedDescription":"Closed or merged PR \"build: update dependency jasmine-core to v4\" (#48366)"},{"Id":"1477273736","IsPullRequest":false,"CreatedAt":"2022-12-05T19:27:55","Actor":"arambazamba","Number":"48364","RawContent":null,"Title":"Update docs on how to create code coverage in the current Angular version (15)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\ncontent of this file is outdated. newly generatec angular 15 projects do no contain karma.conf.js\r\n\r\nhttps://angular.io/guide/testing-code-coverage\n\n### Please provide a link to a minimal reproduction of the bug\n\nkarma.conf.js\n\n### Please provide the exception or error you saw\n\n```true\nno karma.conf.js present\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI 15\n```\n\n\n### Anything else?\n\nno","Url":"https://github.com/angular/angular/issues/48364","RelatedDescription":"Open issue \"Update docs on how to create code coverage in the current Angular version (15)\" (#48364)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1483070425","IsPullRequest":true,"CreatedAt":"2022-12-08T00:04:49","Actor":"dgp1130","Number":"24391","RawContent":null,"Title":"docs: release notes for the v15.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24391","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.3 release\" (#24391)"},{"Id":"1482924000","IsPullRequest":true,"CreatedAt":"2022-12-07T23:17:22","Actor":"dgp1130","Number":"24390","RawContent":null,"Title":"Bump version to \"v15.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24390","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.3\" with changelog.\" (#24390)"},{"Id":"1481054784","IsPullRequest":true,"CreatedAt":"2022-12-07T21:41:29","Actor":"angular-robot","Number":"24385","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `0512a68` -> `ea00347` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `d94cd02` -> `f6e4541` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `9ddbd18` -> `ddb1124` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `c71291d` -> `eb59696` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `1b4a89c` -> `e3ae2ea` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5692fa2` -> `dc902b2` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `e9ccf0e` -> `9b162c1` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `d14d544` -> `4f7c357` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a8913fd` -> `d480d3f` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `4fdccb7` -> `c9a175a` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `b6691fd` -> `747236e` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `2bcdbfe` -> `3e1339a` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a2a71f7` -> `5677f11` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `a6577ee` -> `1ea9651` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `1ce2ab9` -> `84fb629` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `72cb996` -> `a9618ca` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `ae8bea9` -> `03708d0` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `00afb9c` -> `940c73c` |\n| angular/dev-infra | action | digest | `c3339f5` -> `51f34ba` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24385","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24385)"},{"Id":"1482666871","IsPullRequest":false,"CreatedAt":"2022-12-07T19:21:36","Actor":"mylifeandcode","Number":"24389","RawContent":null,"Title":"After Upgrade from Angular 14 to Angular 15, Tests No Longer Run","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.0.1\n\n### Description\n\nI upgraded an Angular application from v14.0.1 to v15.0.2. The app builds without issue, but now when I run _ng test_, it does not find any tests. It doesn't _say_ that it doesn't find any, but instead gives this output.\r\n\r\n<img width=\"767\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5560700/206275456-59e9d2fd-4f8d-47d2-8511-eba6d8c4bc80.png\">\r\n\r\nThere are no errors in the browser console when this happens.\n\n### Minimal Reproduction\n\n1. Clone repo: https://github.com/mylifeandcode/workouttracker.git\r\n2. Get the code from the Angular15UpgradeTake2 branch\r\n3. Install packages\r\n4. Run _ng test_\n\n### Exception or Error\n\n```text\nNo error, just a Karma window that says \", randomized with seed \" + the random number it used.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.2\r\nNode: 18.12.0\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    13.3.3\r\n@schematics/angular             15.0.2\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\nHere is a link to the commit where the upgrade was performed:\r\nhttps://github.com/mylifeandcode/workouttracker/commit/f0702b93ef15ea0e2dd175e5acb2876fadd8470e\r\n\r\nI understand that for new apps the _test.ts_ file will no longer be generated. My app still has it, but the code that appears to be what would once get the list of spec files to process was removed during the upgrade migrations:\r\n(https://github.com/mylifeandcode/workouttracker/commit/f0702b93ef15ea0e2dd175e5acb2876fadd8470e#diff-a4f4ad1111064cc43a8f876c1be0bd5ba98f1b2b18f6fdfff6fec7057d515599). If this is the case, it would explain why no tests get run, but what are the correct modifications to re-enable them?\r\n\r\nI followed the steps listed in the update guide but did not see any instructions related to this. I only learned of the changes related to _test.ts_ after some searching.\r\n\r\nMy application was originally written in Angular 4 and I've upgraded it over the years as new versions are released -- I'm not sure if that would have any bearing on this or not. This most recent upgrade was from v14.0.1 to v15.0.2.\r\n\r\nThank you for your help!","Url":"https://github.com/angular/angular-cli/issues/24389","RelatedDescription":"Open issue \"After Upgrade from Angular 14 to Angular 15, Tests No Longer Run\" (#24389)"},{"Id":"1482629236","IsPullRequest":true,"CreatedAt":"2022-12-07T19:10:36","Actor":"kashyapGit1","Number":"24388","RawContent":null,"Title":"changes","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24388","RelatedDescription":"Closed or merged PR \"changes\" (#24388)"},{"Id":"1481843936","IsPullRequest":false,"CreatedAt":"2022-12-07T13:01:22","Actor":"piernik","Number":"24387","RawContent":null,"Title":"Can't load bootstrap scss files","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13\r\n\r\n### Description\r\n\r\nI've made upgrade to `angular@15`. In my scss files I import bootstrap files using:\r\n`@import \"~bootstrap/scss/variables\";`\r\n\r\nNow it doesn't want to work giving me error:\r\n```\r\n./src/styles/motywy/dark/index.scss - Error: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"~bootstrap/scss/variables\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\styles\\libraries\\bootstrap-hacks\\breadcrumb.scss 1:9  @import\r\n  src\\styles\\libraries\\bootstrap-hacks\\index.scss 4:9       @import\r\n  src\\styles\\libraries\\bootstrap.scss 3:9                   @import\r\n  src\\styles\\libraries\\index.scss 1:9                       @import\r\n  src\\styles\\motywy\\common\\_imports.scss 1:9                @import\r\n  src\\styles\\motywy\\dark\\index.scss 3:9                     root stylesheet\r\n```\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nnone\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.2\r\nNode: 16.14.0\r\nPackage Manager: npm 8.5.3\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... pwa, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@angular/google-maps            15.0.1\r\n@schematics/angular             15.0.2\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4\r\n```\r\n\r\nbootstrap@5.2.3\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24387","RelatedDescription":"Closed issue \"Can't load bootstrap scss files\" (#24387)"},{"Id":"1475322626","IsPullRequest":false,"CreatedAt":"2022-12-07T10:34:04","Actor":"prabh-62","Number":"24373","RawContent":null,"Title":"Angular 15: webpack dev server websocket URL should use port number specified in config instead of hardcoding 0","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen serving angular 15 application behind a reverse proxy on different port, webpack dev server fails to live-reload.\r\n\r\nSpecifically, this line of code should use `options.port` rather than hardcoding 0\r\n[[dev-server.ts#L333](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/webpack/configs/dev-server.ts#L333)](https://github.com/angular/angular-cli/blob/cf2f30afc0ad0ceae34c457955a22186bc5ce60d/packages/angular_devkit/build_angular/src/webpack/configs/dev-server.ts#L333)\r\nshould become\r\n```ts\r\n    return `${options.sslKey === undefined ? 'ws': 'wss'}://${publicHost || options.host}:${options.port}${webSocketPath}`;\r\n```\n\n### Minimal Reproduction\n\n- Create an angular 15 application\r\n\t- Serve the app : `ng serve --project teddyBear --port 4201`\r\n- Launch a reverse proxy which serves on different host and/or port and just returns the angular 15 app files.\r\n\t- Even though the angular app might serve, live-reload should fail\r\n<img width=\"1158\" alt=\"webpack_ws_fails_no_port\" src=\"https://user-images.githubusercontent.com/13006107/205523498-df467ef0-dce9-480c-be89-f447555d6700.png\">\n\n### Exception or Error\n\n```text\n[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.\r\nWebSocket connection to 'ws://localhost/ng-cli-ws' failed: \r\n[webpack-dev-server] Trying to reconnect...\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.2\r\nNode: 18.12.1\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@schematics/angular             15.0.2\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24373","RelatedDescription":"Closed issue \"Angular 15: webpack dev server websocket URL should use port number specified in config instead of hardcoding 0\" (#24373)"},{"Id":"1475957715","IsPullRequest":true,"CreatedAt":"2022-12-06T22:34:19","Actor":"angular-robot","Number":"24374","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24374","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24374)"},{"Id":"1472726947","IsPullRequest":true,"CreatedAt":"2022-12-06T22:33:55","Actor":"angular-robot","Number":"24368","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `e014849` -> `0512a68` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `700b1eb` -> `d94cd02` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `e9e267d` -> `9ddbd18` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `066d2f3` -> `c71291d` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `7ab7ff7` -> `1b4a89c` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `e751581` -> `5692fa2` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a8a0d4c` -> `e9ccf0e` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `ad5bcaf` -> `d14d544` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `7f8f844` -> `a8913fd` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `60e625c` -> `4fdccb7` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `062631f` -> `b6691fd` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `8ca9614` -> `2bcdbfe` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0fd48ee` -> `a2a71f7` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `825881d` -> `a6577ee` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `fd7b2b1` -> `1ce2ab9` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `20eabc2` -> `72cb996` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `01ec378` -> `ae8bea9` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `25b3619` -> `00afb9c` |\n| angular/dev-infra | action | digest | `3bc9344` -> `c3339f5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24368","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24368)"},{"Id":"1477255923","IsPullRequest":true,"CreatedAt":"2022-12-06T22:33:32","Actor":"clydin","Number":"24382","RawContent":null,"Title":"fix(@angular-devkit/build-angular): explicitly send options to JS transformer workers","State":"closed","Body":"When using the experimental esbuild-based browser application builder, the JavaScript transformation workers will now only receive the explicit options expected. Previously, additional Angular compiler plugin options could have been serialized and sent as well. While these would be unused, there was no need to serialize/deserialize these option values.","Url":"https://github.com/angular/angular-cli/pull/24382","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): explicitly send options to JS transformer workers\" (#24382)"},{"Id":"1479615905","IsPullRequest":false,"CreatedAt":"2022-12-06T16:54:19","Actor":"Kp0c","Number":"24384","RawContent":null,"Title":"Compilation Crash: `Error: Content and Map of this Source is not available (only size() is supported)`","State":"open","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nAngular 12\r\n\r\n### Description\r\n\r\nReopen of #22237\r\n\r\nI'm able to reproduce it using `Angular 13` and `Angular 14`.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Download the attached project ([build-issue-angular.zip](https://github.com/angular/angular-cli/files/10168558/build-issue-angular.zip))\r\n2. Run `npm ci`\r\n3. Run `npm start`\r\n4. Wait a few seconds (it makes 2nd small compilation, and a few seconds after the 2nd compilation it throws an error)\r\n\r\nIf you make another attempt to reproduce inside the same project, then the steps are a bit different:\r\n1. Remove `node_modules`\r\n2. Remove `.angular`\r\n3. Run `npm ci`\r\n4. Run `npm start`\r\n5. Wait a few seconds (it makes 2nd small compilation, and a few seconds after the 2nd compilation it throws an error)\r\n\r\nSometimes it is enough to:\r\n1. Run `npm start`\r\n2. Wait a few seconds (it makes 2nd small compilation, and a few seconds after the 2nd compilation it throws an error)\r\n\r\nP.S. \"a few seconds after\" on my PC is ~6 seconds. I'm not sure if it depends on something or not\r\n\r\nI was able to reproduce it 5 times in a row\r\n\r\nAlso, I noticed that workarounds work totally differently for 2 projects where it is reproducible and what I tried:\r\n1. Personal on Angular 13 -> you need to delete .angular and run `npm start` again.\r\n2. Personal on Angular 14 -> run `npm start` one more time after the error is enough.\r\n3. Attached project -> nothing helps\r\n\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\nC:\\sample-angular-13\\node_modules\\webpack-sources\\lib\\SizeOnlySource.js:16\r\n                return new Error(\r\n                       ^\r\n\r\nError: Content and Map of this Source is not available (only size() is supported)\r\n    at SizeOnlySource._error (C:\\sample-angular-13\\node_modules\\webpack-sources\\lib\\SizeOnlySource.js:16:10)\r\n    at SizeOnlySource.buffer (C:\\sample-angular-13\\node_modules\\webpack-sources\\lib\\SizeOnlySource.js:30:14)\r\n    at _isSourceEqual (C:\\sample-angular-13\\node_modules\\webpack\\lib\\util\\source.js:21:51)\r\n    at isSourceEqual (C:\\sample-angular-13\\node_modules\\webpack\\lib\\util\\source.js:43:17)\r\n    at Compilation.emitAsset (C:\\sample-angular-13\\node_modules\\webpack\\lib\\Compilation.js:4171:9)\r\n    at C:\\sample-angular-13\\node_modules\\webpack\\lib\\Compiler.js:548:28\r\n    at C:\\sample-angular-13\\node_modules\\webpack\\lib\\Compiler.js:1129:17\r\n    at eval (eval at create (C:\\sample-angular-13\\node_modules\\tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:13:1)\r\n    at runMicrotasks (<anonymous>)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.0.3\r\nNode: 16.16.0\r\nPackage Manager: npm 9.1.3\r\nOS: win32 x64\r\n\r\nAngular: 13.0.2\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            13.0.3\r\n@angular-devkit/schematics      13.0.3\r\n@angular/cli                    13.0.3\r\n@schematics/angular             13.0.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24384","RelatedDescription":"Open issue \"Compilation Crash: `Error: Content and Map of this Source is not available (only size() is supported)`\" (#24384)"},{"Id":"1478757334","IsPullRequest":false,"CreatedAt":"2022-12-06T10:53:52","Actor":"nulilakshman","Number":"24383","RawContent":null,"Title":"How to set 'publicPath' after 'deployUrl' option is deprecated","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nWe are loading the angular application JavaScript embedded widget, and our application internally using lazy loading concept. Earlier we used --deployurl to set the domain of the application where the actual scripts were deployed. As the deployUrl is deprecated which property we need to use to set it. We tried with --base-href but its not working as expected.\r\n\r\nIf we don't set the URL, it will try to load the script from the URL that belong to the main application, but it should be loaded from the widget domain. \r\n\r\nCurrently this can be achieved by using deploy-url during widgets app build. How to do it without this option?\n\n### Minimal Reproduction\n\n\"build:prod\": \"ng build --configuration production --deployUrl http://scorewidget.cdk.com/\",\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n13.1.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24383","RelatedDescription":"Closed issue \"How to set 'publicPath' after 'deployUrl' option is deprecated\" (#24383)"},{"Id":"1476817631","IsPullRequest":false,"CreatedAt":"2022-12-06T08:58:31","Actor":"lhanneman","Number":"24379","RawContent":null,"Title":"ng build always includes html/head tags, even when removed from src/index.html","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n11.2.19\r\n\r\n### Description\r\n\r\nWhen running `ng-build`, the generated index.html (dist/index.html) always includes the parent `<html>` and `<head>` tags around the `<app-root>`. Previously (this worked in 11.2.9) one could remove the `<html>` and `<head>` tags from src/index.html and they would not be included in dist/index.html on build. This is helpful when integrating an angular app with another (such as ASP.NET MVC) and the parent HTML/layout will already exist.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new angular 15 application using the latest CLI (or any CLI version after 12)\r\n2. Update src/index.html to include only `<app-root></app-root>`\r\n3. Run `ng build`\r\n\r\n\r\n### Exception or Error\r\n\r\n\r\nThe output index.html in /dist contains `<html>`, `<head>`, and `<body>` tags, along with the generated scripts.\r\n\r\nWhen following those same steps with version 11.2.19 of the CLI, the output in /dist will contain only `<app-root>` and the generated scripts.\r\n\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.2\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@schematics/angular             15.0.2\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24379","RelatedDescription":"Closed issue \"ng build always includes html/head tags, even when removed from src/index.html\" (#24379)"},{"Id":"1477032739","IsPullRequest":true,"CreatedAt":"2022-12-05T19:08:35","Actor":"clydin","Number":"24380","RawContent":null,"Title":"fix(@angular-devkit/build-angular): default preserve symlinks to Node.js value for esbuild","State":"closed","Body":"When using the experimental esbuild-based browser application builder, the `preserveSymlinks` option will now default to the value of the Node.js `--preserve-symlinks` argument. This removes the need to manually specify the option in two places if executing the build manually with Node.js or via the `NODE_OPTIONS` environment variable. This behavior mimics that of the default Webpack-based builder.","Url":"https://github.com/angular/angular-cli/pull/24380","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): default preserve symlinks to Node.js value for esbuild\" (#24380)"},{"Id":"1477126617","IsPullRequest":false,"CreatedAt":"2022-12-05T18:10:52","Actor":"arambazamba","Number":"24381","RawContent":null,"Title":"Bring back environment.ts to new projects","State":"open","Body":"### Command\r\n\r\nnew\r\n\r\n### Description\r\n\r\nNot generating environment.ts in new ng 15 projects is a big breaking change. So you are so proud of stand alone components and single file components and you do everything to please React developers. They will still prefere React. But if you go on changing everything Angular developers are used to you will push them away!!!\r\n\r\n### Describe the solution you'd like\r\n\r\nI want environment.ts and envrionment.prod.ts generated when creating a new project. Or at least have a flag to indicate that I want this to be done\r\n\r\n### Describe alternatives you've considered\r\n\r\nCreate manually or change to React","Url":"https://github.com/angular/angular-cli/issues/24381","RelatedDescription":"Open issue \"Bring back environment.ts to new projects\" (#24381)"},{"Id":"1476382728","IsPullRequest":false,"CreatedAt":"2022-12-05T12:03:32","Actor":"Ketec","Number":"24378","RawContent":null,"Title":"ChunkError (lazy loaded modules) causes files to lose cache-control and remain broken","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen after a new deployment user interacts with the app - navigating to a lazy loaded route, you get a Chunk load error.\r\nThat old chunk is no longer available.\r\nHowever, upon reloading the page, opening a new tab etc - the page remains broken with no errors.\r\n\r\nAfter debugging and comparing - it seems CSS files are generated with old content but with the correct new chunk name and saved to the disk cache.\r\nInspecting the local cache I see that all cache-control and etag information is lost causing them to always be loaded from memory/disk with default expiration time.\r\n\r\nIt requires hard cache clear to force the browser to fetch the correct chunks and keeps working as expected after that (not locally stored). However, this is not a solution for customer-facing sites with many different browsers and users who do not even understand what \"cache\" means.\r\n\r\nThis is exactly what no-cache and output hashing is supposed to prevent. Yet it seems to generate new file with old contents and no cache information.\r\n\r\nThe original files have no-cache, no-store and max-age=0 (cache is globally disabled for all js, CSS, HTML, index.html).\r\n\r\n\r\nHas anyone come across this anomaly? Is webpack/angular somehow renaming the files  - then loads in the chunk contents - and if that fails, it does not rollback or even update cache control?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 12.2 all browsers\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24378","RelatedDescription":"Closed issue \"ChunkError (lazy loaded modules) causes files to lose cache-control and remain broken\" (#24378)"},{"Id":"1476324365","IsPullRequest":true,"CreatedAt":"2022-12-05T11:21:44","Actor":"alan-agius4","Number":"24377","RawContent":null,"Title":"build: update to rxjs 7","State":"open","Body":"**feat(@angular-devkit/schematics): add `runSchematic` and `runExternalSchematic` methods**\r\n    \r\nThese async methods are a replacement for the Observable based `runSchematicAsync` and `runExternalSchematicAsync` methods.\r\n    \r\nDEPRECATED:\r\nThe Observable based `SchematicTestRunner.runSchematicAsync` and `SchematicTestRunner.runExternalSchematicAsync` method have been deprecated in favor of the Promise based `SchematicTestRunner.runSchematic` and `SchematicTestRunner.runExternalSchematic`.\r\n\r\n\r\n---\r\n**feat(@angular-devkit/core): add `compileAsync` to `SchemaRegistry`**\r\n\r\nIntroduce promise based method to reduce RXJS usage and boiler-platting.\r\n\r\nDEPRECATED: The Observable based `SchemaRegistry.compile` has been deprecated in favor of the Promise based `SchemaRegistry.compileAsync`.\r\n\r\n\r\n---\r\n**build: update to rxjs 7**\r\n\r\nG3 is now using RXJS version 7 which makes it possible for the CLI to also be updated to RXJS 7.\r\n    \r\nNB: this change does not remove all usages of the deprecated APIs.\r\n    \r\nCloses #24371","Url":"https://github.com/angular/angular-cli/pull/24377","RelatedDescription":"Open PR \"build: update to rxjs 7\" (#24377)"},{"Id":"1476292737","IsPullRequest":true,"CreatedAt":"2022-12-05T11:21:04","Actor":"alan-agius4","Number":"24376","RawContent":null,"Title":"build: update to rxjs 7","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24376","RelatedDescription":"Closed or merged PR \"build: update to rxjs 7\" (#24376)"},{"Id":"1474471351","IsPullRequest":false,"CreatedAt":"2022-12-04T05:20:44","Actor":"XhmikosR","Number":"24371","RawContent":null,"Title":"Update rxjs to v7.x","State":"open","Body":"### Command\r\n\r\nnew\r\n\r\n### Description\r\n\r\nUpdate rxjs to v7.x\r\n\r\n### Describe the solution you'd like\r\n\r\nrxjs is a quite heavy package at least in terms of the number of files ([v6.x ~3.7K, v7.x ~2.3K](https://packagephobia.com/result?p=rxjs%406.6.7%2Crxjs%407.6.0)). It'd be nice if the `@angular-devkit` packages updated to rxjs v7.x so that it can be deduped by package managers. An example from [keycloak-angular](https://github.com/mauriciovigolo/keycloak-angular):\r\n\r\n```\r\nC:\\Users\\xmr\\Desktop\\keycloak-angular>npm ls rxjs\r\nkeycloak-angular@13.0.0 C:\\Users\\xmr\\Desktop\\keycloak-angular\r\n+-- @angular-devkit/build-angular@15.0.2\r\n| +-- @angular-devkit/architect@0.1500.2\r\n| | `-- rxjs@6.6.7\r\n| +-- @angular-devkit/build-webpack@0.1500.2\r\n| | `-- rxjs@6.6.7\r\n| +-- inquirer@8.2.4\r\n| | `-- rxjs@7.6.0 deduped\r\n| `-- rxjs@6.6.7\r\n+-- @angular-devkit/core@15.0.2\r\n| `-- rxjs@6.6.7\r\n+-- @angular/cli@15.0.2\r\n| `-- @angular-devkit/schematics@15.0.2\r\n|   `-- rxjs@6.6.7\r\n+-- @angular/common@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- @angular/core@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- @angular/router@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- concurrently@7.6.0\r\n| `-- rxjs@7.6.0 deduped\r\n+-- ng-packagr@15.0.1\r\n| `-- rxjs@7.6.0 deduped\r\n`-- rxjs@7.6.0\r\n```\r\n\r\nDiff if I remove the duplicate rxjs 6.x packages from `node_modules`:\r\n\r\n```\r\n314 MB (329.442.193 bytes)\r\n50.924 Files, 6.359 Folders\r\n\r\n289 MB (303.781.653 bytes)\r\n32.831 Files, 5.919 Folders\r\n```\r\n\r\nAs you can see, even with fast disks and fast connections, this would significantly reduce the disk churn.\r\n\r\n---\r\n\r\nSorry if there's had been an issue about it already, I searched but I couldn't find an existent issue.\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24371","RelatedDescription":"Open issue \"Update rxjs to v7.x\" (#24371)"},{"Id":"1473790541","IsPullRequest":true,"CreatedAt":"2022-12-03T06:04:58","Actor":"angular-robot","Number":"24370","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.45.0` -> `5.45.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.45.0/5.45.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.45.0` -> `5.45.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.45.0/5.45.1) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.17.0` -> `v1.18.0` |\n| [cacache](https://togithub.com/npm/cacache) | dependencies | patch | [`17.0.2` -> `17.0.3`](https://renovatebot.com/diffs/npm/cacache/17.0.2/17.0.3) |\n| [cacache](https://togithub.com/npm/cacache) | devDependencies | patch | [`17.0.2` -> `17.0.3`](https://renovatebot.com/diffs/npm/cacache/17.0.2/17.0.3) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | minor | [`0.15.16` -> `0.16.1`](https://renovatebot.com/diffs/npm/esbuild/0.15.16/0.16.1) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.15.16` -> `0.16.1`](https://renovatebot.com/diffs/npm/esbuild/0.15.16/0.16.1) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | minor | [`0.15.16` -> `0.16.1`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.15.16/0.16.1) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.15.16` -> `0.16.1`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.15.16/0.16.1) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.28.0` -> `8.29.0`](https://renovatebot.com/diffs/npm/eslint/8.28.0/8.29.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | minor | [`0.26.7` -> `0.27.0`](https://renovatebot.com/diffs/npm/magic-string/0.26.7/0.27.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | devDependencies | minor | [`0.26.7` -> `0.27.0`](https://renovatebot.com/diffs/npm/magic-string/0.26.7/0.27.0) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | dependencies | patch | [`2.7.1` -> `2.7.2`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/2.7.1/2.7.2) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | devDependencies | patch | [`2.7.1` -> `2.7.2`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/2.7.1/2.7.2) |\n| [pacote](https://togithub.com/npm/pacote) | dependencies | patch | [`15.0.6` -> `15.0.7`](https://renovatebot.com/diffs/npm/pacote/15.0.6/15.0.7) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | patch | [`15.0.6` -> `15.0.7`](https://renovatebot.com/diffs/npm/pacote/15.0.6/15.0.7) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.5.0` -> `~7.6.0`](https://renovatebot.com/diffs/npm/rxjs/7.5.7/7.6.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.16.0` -> `5.16.1`](https://renovatebot.com/diffs/npm/terser/5.16.0/5.16.1) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.16.0` -> `5.16.1`](https://renovatebot.com/diffs/npm/terser/5.16.0/5.16.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.45.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5451-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5450v5451-2022-12-05)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.45.0...v5.45.1)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[keyword-spacing] unexpected space before/after in `import type` ([#&#8203;6095](https://togithub.com/typescript-eslint/typescript-eslint/issues/6095)) ([98caa92](https://togithub.com/typescript-eslint/typescript-eslint/commit/98caa92ca89bdf0ca6ba6e4ff1f13c60221579e8))\n-   **eslint-plugin:** \\[no-shadow] add call and method signatures to `ignoreFunctionTypeParameterNameValueShadow` ([#&#8203;6129](https://togithub.com/typescript-eslint/typescript-eslint/issues/6129)) ([9d58b6b](https://togithub.com/typescript-eslint/typescript-eslint/commit/9d58b6be246507d20af67c84a5e9bb592d97cff5))\n-   **eslint-plugin:** \\[prefer-optional-chain] collect MetaProperty type ([#&#8203;6083](https://togithub.com/typescript-eslint/typescript-eslint/issues/6083)) ([d7114d3](https://togithub.com/typescript-eslint/typescript-eslint/commit/d7114d3ab09d1b93627d3b3dbb9862e37ee29c97))\n-   **eslint-plugin:** \\[sort-type-constituents, sort-type-union-intersection-members] handle some required parentheses cases in the fixer ([#&#8203;6118](https://togithub.com/typescript-eslint/typescript-eslint/issues/6118)) ([5d49d5d](https://togithub.com/typescript-eslint/typescript-eslint/commit/5d49d5dbee4425fc8bc01c5e748d161f3619477b))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.45.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5451-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5450v5451-2022-12-05)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.45.0...v5.45.1)\n\n##### Bug Fixes\n\n-   **parser:** remove the jsx option requirement for automatic jsx pragma resolution ([#&#8203;6134](https://togithub.com/typescript-eslint/typescript-eslint/issues/6134)) ([e777f5e](https://togithub.com/typescript-eslint/typescript-eslint/commit/e777f5e225b9ddfb6bb1eaa74cbc5171a17ac017))\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.18.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.18.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.18.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"be236556c7b9c7b91cb370e837fdcec62b6e8893408cd4465ae883c9d7c67024\",\n    strip_prefix = \"bazel-lib-1.18.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.18.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   feat: add executable attribute to write_source_files by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/293](https://togithub.com/aspect-build/bazel-lib/pull/293)\n-   refactor: use rm -R instead -r as it is the primary option and lowercase -r is the alias by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/294](https://togithub.com/aspect-build/bazel-lib/pull/294)\n-   fix: add diff_test to docs by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/296](https://togithub.com/aspect-build/bazel-lib/pull/296)\n-   feat: add write_source_file to public API by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/295](https://togithub.com/aspect-build/bazel-lib/pull/295)\n-   fix: write_source_files should use target platform for additional_update_targets by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/297](https://togithub.com/aspect-build/bazel-lib/pull/297)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0\n\n</details>\n\n<details>\n<summary>npm/cacache</summary>\n\n### [`v17.0.3`](https://togithub.com/npm/cacache/blob/HEAD/CHANGELOG.md#&#8203;1703-httpsgithubcomnpmcacachecomparev1702v1703-2022-12-07)\n\n[Compare Source](https://togithub.com/npm/cacache/compare/v17.0.2...v17.0.3)\n\n##### Dependencies\n\n-   [`0dc98f7`](https://togithub.com/npm/cacache/commit/0dc98f7ca0940ea010ef3ba5257887e36083b3a2) [#&#8203;156](https://togithub.com/npm/cacache/pull/156) bump minipass from 3.3.6 to 4.0.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.1`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0161)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.0...v0.16.1)\n\nThis is a hotfix for the previous release.\n\n-   Re-allow importing JSON with the `copy` loader using an import assertion\n\n    The previous release made it so when `assert { type: 'json' }` is present on an import statement, esbuild validated that the `json` loader was used. This is what an import assertion is supposed to do. However, I forgot about the relatively new `copy` loader, which sort of behaves as if the import path was marked as external (and thus not loaded at all) except that the file is copied to the output directory and the import path is rewritten to point to the copy. In this case whatever JavaScript runtime ends up running the code is the one to evaluate the import assertion. So esbuild should really allow this case as well. With this release, esbuild now allows both the `json` and `copy` loaders when an `assert { type: 'json' }` import assertion is present.\n\n### [`v0.16.0`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0160)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.15.18...v0.16.0)\n\n**This release deliberately contains backwards-incompatible changes.** To avoid automatically picking up releases like this, you should either be pinning the exact version of `esbuild` in your `package.json` file (recommended) or be using a version range syntax that only accepts patch upgrades such as `~0.15.0`. See npm's documentation about [semver](https://docs.npmjs.com/cli/v6/using-npm/semver/) for more information.\n\n-   Move all binary executable packages to the `@esbuild/` scope\n\n    Binary package executables for esbuild are published as individual packages separate from the main `esbuild` package so you only have to download the relevant one for the current platform when you install esbuild. This release moves all of these packages under the `@esbuild/` scope to avoid collisions with 3rd-party packages. It also changes them to a consistent naming scheme that uses the `os` and `cpu` names from node.\n\n    The package name changes are as follows:\n\n    -   `@esbuild/linux-loong64` => `@esbuild/linux-loong64` (no change)\n    -   `esbuild-android-64` => `@esbuild/android-x64`\n    -   `esbuild-android-arm64` => `@esbuild/android-arm64`\n    -   `esbuild-darwin-64` => `@esbuild/darwin-x64`\n    -   `esbuild-darwin-arm64` => `@esbuild/darwin-arm64`\n    -   `esbuild-freebsd-64` => `@esbuild/freebsd-x64`\n    -   `esbuild-freebsd-arm64` => `@esbuild/freebsd-arm64`\n    -   `esbuild-linux-32` => `@esbuild/linux-ia32`\n    -   `esbuild-linux-64` => `@esbuild/linux-x64`\n    -   `esbuild-linux-arm` => `@esbuild/linux-arm`\n    -   `esbuild-linux-arm64` => `@esbuild/linux-arm64`\n    -   `esbuild-linux-mips64le` => `@esbuild/linux-mips64el`\n    -   `esbuild-linux-ppc64le` => `@esbuild/linux-ppc64`\n    -   `esbuild-linux-riscv64` => `@esbuild/linux-riscv64`\n    -   `esbuild-linux-s390x` => `@esbuild/linux-s390x`\n    -   `esbuild-netbsd-64` => `@esbuild/netbsd-x64`\n    -   `esbuild-openbsd-64` => `@esbuild/openbsd-x64`\n    -   `esbuild-sunos-64` => `@esbuild/sunos-x64`\n    -   `esbuild-wasm` => `esbuild-wasm` (no change)\n    -   `esbuild-windows-32` => `@esbuild/win32-ia32`\n    -   `esbuild-windows-64` => `@esbuild/win32-x64`\n    -   `esbuild-windows-arm64` => `@esbuild/win32-arm64`\n    -   `esbuild` => `esbuild` (no change)\n\n    Normal usage of the `esbuild` and `esbuild-wasm` packages should not be affected. These name changes should only affect tools that hard-coded the individual binary executable package names into custom esbuild downloader scripts.\n\n    This change was not made with performance in mind. But as a bonus, installing esbuild with npm may potentially happen faster now. This is because npm's package installation protocol is inefficient: it always downloads metadata for all past versions of each package even when it only needs metadata about a single version. This makes npm package downloads O(n) in the number of published versions, which penalizes packages like esbuild that are updated regularly. Since most of esbuild's package names have now changed, npm will now need to download much less data when installing esbuild (8.72mb of package manifests before this change → 0.06mb of package manifests after this change). However, this is only a temporary improvement. Installing esbuild will gradually get slower again as further versions of esbuild are published.\n\n-   Publish a shell script that downloads esbuild directly\n\n    In addition to all of the existing ways to install esbuild, you can now also download esbuild directly like this:\n\n    ```sh\n    curl -fsSL https://esbuild.github.io/dl/latest | sh\n    ```\n\n    This runs a small shell script that downloads the latest `esbuild` binary executable to the current directory. This can be convenient on systems that don't have `npm` installed or when you just want to get a copy of esbuild quickly without any extra steps. If you want a specific version of esbuild (starting with this version onward), you can provide that version in the URL instead of `latest`:\n\n    ```sh\n    curl -fsSL https://esbuild.github.io/dl/v0.16.0 | sh\n    ```\n\n    Note that the download script needs to be able to access registry.npmjs.org to be able to complete the download. This download script doesn't yet support all of the platforms that esbuild supports because I lack the necessary testing environments. If the download script doesn't work for you because you're on an unsupported platform, please file an issue on the esbuild repo so we can add support for it.\n\n-   Fix some parameter names for the Go API\n\n    This release changes some parameter names for the Go API to be consistent with the JavaScript and CLI APIs:\n\n    -   `OutExtensions` => `OutExtension`\n    -   `JSXMode` => `JSX`\n\n-   Add additional validation of API parameters\n\n    The JavaScript API now does some additional validation of API parameters to catch incorrect uses of esbuild's API. The biggest impact of this is likely that esbuild now strictly only accepts strings with the `define` parameter. This would already have been a type error with esbuild's TypeScript type definitions, but it was previously not enforced for people using esbuild's API JavaScript without TypeScript.\n\n    The `define` parameter appears at first glance to take a JSON object if you aren't paying close attention, but this actually isn't true. Values for `define` are instead strings of JavaScript code. This means you have to use `define: { foo: '\"bar\"' }` to replace `foo` with the string `\"bar\"`. Using `define: { foo: 'bar' }` actually replaces `foo` with the identifier `bar`. Previously esbuild allowed you to pass `define: { foo: false }` and `false` was automatically converted into a string, which made it more confusing to understand what `define` actually represents. Starting with this release, passing non-string values such as with `define: { foo: false }` will no longer be allowed. You will now have to write `define: { foo: 'false' }` instead.\n\n-   Generate shorter data URLs if possible ([#&#8203;1843](https://togithub.com/evanw/esbuild/issues/1843))\n\n    Loading a file with esbuild's `dataurl` loader generates a JavaScript module with a [data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs) for that file in a string as a single default export. Previously the data URLs generated by esbuild all used [base64 encoding](https://en.wikipedia.org/wiki/Base64). However, this is unnecessarily long for most textual data (e.g. SVG images). So with this release, esbuild's `dataurl` loader will now use percent encoding instead of base64 encoding if the result will be shorter. This can result in ~25% smaller data URLs for large SVGs. If you want the old behavior, you can use the `base64` loader instead and then construct the data URL yourself.\n\n-   Avoid marking entry points as external ([#&#8203;2382](https://togithub.com/evanw/esbuild/issues/2382))\n\n    Previously you couldn't specify `--external:*` to mark all import paths as external because that also ended up making the entry point itself external, which caused the build to fail. With this release, esbuild's `external` API parameter no longer applies to entry points so using `--external:*` is now possible.\n\n    One additional consequence of this change is that the `kind` parameter is now required when calling the `resolve()` function in esbuild's plugin API. Previously the `kind` parameter defaulted to `entry-point`, but that no longer interacts with `external` so it didn't seem wise for this to continue to be the default. You now have to specify `kind` so that the path resolution mode is explicit.\n\n-   Disallow non-`default` imports when `assert { type: 'json' }` is present\n\n    There is now standard behavior for importing a JSON file into an ES module using an `import` statement. However, it requires you to place the `assert { type: 'json' }` import assertion after the import path. This import assertion tells the JavaScript runtime to throw an error if the import does not end up resolving to a JSON file. On the web, the type of a file is determined by the `Content-Type` HTTP header instead of by the file extension. The import assertion prevents security problems on the web where a `.json` file may actually resolve to a JavaScript file containing malicious code, which is likely not expected for an import that is supposed to only contain pure side-effect free data.\n\n    By default, esbuild uses the file extension to determine the type of a file, so this import assertion is unnecessary with esbuild. However, esbuild's JSON import feature has a non-standard extension that allows you to import top-level properties of the JSON object as named imports. For example, esbuild lets you do this:\n\n    ```js\n    import { version } from './package.json'\n    ```\n\n    This is useful for tree-shaking when bundling because it means esbuild will only include the the `version` field of `package.json` in your bundle. This is non-standard behavior though and doesn't match the behavior of what happens when you import JSON in a real JavaScript runtime (after adding `assert { type: 'json' }`). In a real JavaScript runtime the only thing you can import is the `default` import. So with this release, esbuild will now prevent you from importing non-`default` import names if `assert { type: 'json' }` is present. This ensures that code containing `assert { type: 'json' }` isn't relying on non-standard behavior that won't work everywhere. So the following code is now an error with esbuild when bundling:\n\n    ```js\n    import { version } from './package.json' assert { type: 'json' }\n    ```\n\n    In addition, adding `assert { type: 'json' }` to an import statement now means esbuild will generate an error if the loader for the file is anything other than `json`, which is required by the import assertion specification.\n\n-   Provide a way to disable automatic escaping of `</script>` ([#&#8203;2649](https://togithub.com/evanw/esbuild/issues/2649))\n\n    If you inject esbuild's output into a script tag in an HTML file, code containing the literal characters `</script>` will cause the tag to be ended early which will break the code:\n\n    ```html\n    <script>\n      console.log(\"</script>\");\n    </script>\n    ```\n\n    To avoid this, esbuild automatically escapes these strings in generated JavaScript files (e.g. `\"</script>\"` becomes `\"<\\/script>\"` instead). This also applies to `</style>` in generated CSS files. Previously this always happened and there wasn't a way to turn this off.\n\n    With this release, esbuild will now only do this if the `platform` setting is set to `browser` (the default value). Setting `platform` to `node` or `neutral` will disable this behavior. This behavior can also now be disabled with `--supported:inline-script=false` (for JS) and `--supported:inline-style=false` (for CSS).\n\n-   Throw an early error if decoded UTF-8 text isn't a `Uint8Array` ([#&#8203;2532](https://togithub.com/evanw/esbuild/issues/2532))\n\n    If you run esbuild's JavaScript API in a broken JavaScript environment where `new TextEncoder().encode(\"\") instanceof Uint8Array` is false, then esbuild's API will fail with a confusing serialization error message that makes it seem like esbuild has a bug even though the real problem is that the JavaScript environment itself is broken. This can happen when using the test framework called [Jest](https://jestjs.io/). With this release, esbuild's API will now throw earlier when it detects that the environment is unable to encode UTF-8 text correctly with an error message that makes it more clear that this is not a problem with esbuild.\n\n-   Change the default \"legal comment\" behavior\n\n    The legal comments feature automatically gathers comments containing `@license` or `@preserve` and puts the comments somewhere (either in the generated code or in a separate file). People sometimes want this to happen so that the their dependencies' software licenses are retained in the generated output code. By default esbuild puts these comments at the end of the file when bundling. However, people sometimes find this confusing because these comments can be very generic and may not mention which library they come from. So with this release, esbuild will now discard legal comments by default. You now have to opt-in to preserving them if you want this behavior.\n\n-   Enable the `module` condition by default ([#&#8203;2417](https://togithub.com/evanw/esbuild/issues/2417))\n\n    Package authors want to be able to use the new [`exports`](https://nodejs.org/api/packages.html#conditional-exports) field in `package.json` to provide tree-shakable ESM code for ESM-aware bundlers while simultaneously providing fallback CommonJS code for other cases.\n\n    Node's proposed way to do this involves using the `import` and `require` export conditions so that you get the ESM code if you use an import statement and the CommonJS code if you use a require call. However, this has a major drawback: if some code in the bundle uses an import statement and other code in the bundle uses a require call, then you'll get two copies of the same package in the bundle. This is known as the [dual package hazard](https://nodejs.org/api/packages.html#dual-package-hazard) and can lead to bloated bundles or even worse to subtle logic bugs.\n\n    Webpack supports an alternate solution: an export condition called `module` that takes effect regardless of whether the package was imported using an import statement or a require call. This works because bundlers such as Webpack support importing a ESM using a require call (something node doesn't support). You could already do this with esbuild using `--conditions=module` but you previously had to explicitly enable this. Package authors are concerned that esbuild users won't know to do this and will get suboptimal output with their package, so they have requested for esbuild to do this automatically.\n\n    So with this release, esbuild will now automatically add the `module` condition when there aren't any custom `conditions` already configured. You can disable this with `--conditions=` or `conditions: []` (i.e. explicitly clearing all custom conditions).\n\n-   Rename the `master` branch to `main`\n\n    The primary branch for this repository was previously called `master` but is now called `main`. This change mirrors a similar change in many other projects.\n\n-   Remove esbuild's `_exit(0)` hack for WebAssembly ([#&#8203;714](https://togithub.com/evanw/esbuild/issues/714))\n\n    Node had an unfortunate bug where the node process is unnecessarily kept open while a WebAssembly module is being optimized: [https://github.com/nodejs/node/issues/36616](https://togithub.com/nodejs/node/issues/36616). This means cases where running `esbuild` should take a few milliseconds can end up taking many seconds instead.\n\n    The workaround was to force node to exit by ending the process early. This was done by esbuild in one of two ways depending on the exit code. For non-zero exit codes (i.e. when there is a build error), the `esbuild` command could just call `process.kill(process.pid)` to avoid the hang. But for zero exit codes, esbuild had to load a N-API native node extension that calls the operating system's `exit(0)` function.\n\n    However, this problem has essentially been fixed in node starting with version 18.3.0. So I have removed this hack from esbuild. If you are using an earlier version of node with `esbuild-wasm` and you don't want the `esbuild` command to hang for a while when exiting, you can upgrade to node 18.3.0 or higher to remove the hang.\n\n    The fix came from a V8 upgrade: [this commit](https://togithub.com/v8/v8/commit/bfe12807c14c91714c7db1485e6b265439375e16) enabled [dynamic tiering for WebAssembly](https://v8.dev/blog/wasm-dynamic-tiering) by default for all projects that use V8's WebAssembly implementation. Previously all functions in the WebAssembly module were optimized in a single batch job but with dynamic tiering, V8 now optimizes individual WebAssembly functions as needed. This avoids unnecessary WebAssembly compilation which allows node to exit on time.\n\n### [`v0.15.18`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01518)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.15.17...v0.15.18)\n\n-   Performance improvements for both JS and CSS\n\n    This release brings noticeable performance improvements for JS parsing and for CSS parsing and printing. Here's an example benchmark for using esbuild to pretty-print a single large minified CSS file and JS file:\n\n    | Test case      | Previous release | This release       |\n    |----------------|------------------|--------------------|\n    | 4.8mb CSS file | 19ms             | 11ms (1.7x faster) |\n    | 5.8mb JS file  | 36ms             | 32ms (1.1x faster) |\n\n    The performance improvements were very straightforward:\n\n    -   Identifiers were being scanned using a generic character advancement function instead of using custom inline code. Advancing past each character involved UTF-8 decoding as well as updating multiple member variables. This was sped up using loop that skips UTF-8 decoding entirely and that only updates member variables once at the end. This is faster because identifiers are plain ASCII in the vast majority of cases, so Unicode decoding is almost always unnecessary.\n\n    -   CSS identifiers and CSS strings were still being printed one character at a time. Apparently I forgot to move this part of esbuild's CSS infrastructure beyond the proof-of-concept stage. These were both very obvious in the profiler, so I think maybe I have just never profiled esbuild's CSS printing before?\n\n    -   There was unnecessary work being done that was related to source maps when source map output was disabled. I likely haven't observed this before because esbuild's benchmarks always have source maps enabled. This work is now disabled when it's not going to be used.\n\n    I definitely should have caught these performance issues earlier. Better late than never I suppose.\n\n### [`v0.15.17`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01517)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.15.16...v0.15.17)\n\n-   Search for missing source map code on the file system ([#&#8203;2711](https://togithub.com/evanw/esbuild/issues/2711))\n\n    [Source maps](https://sourcemaps.info/spec.html) are JSON files that map from compiled code back to the original code. They provide the original source code using two arrays: `sources` (required) and `sourcesContent` (optional). When bundling is enabled, esbuild is able to bundle code with source maps that was compiled by other tools (e.g. with Webpack) and emit source maps that map all the way back to the original code (e.g. before Webpack compiled it).\n\n    Previously if the input source maps omitted the optional `sourcesContent` array, esbuild would use `null` for the source content in the source map that it generates (since the source content isn't available). However, sometimes the original source code is actually still present on the file system. With this release, esbuild will now try to find the original source code using the path in the `sources` array and will use that instead of `null` if it was found.\n\n-   Fix parsing bug with TypeScript `infer` and `extends` ([#&#8203;2712](https://togithub.com/evanw/esbuild/issues/2712))\n\n    This release fixes a bug where esbuild incorrectly failed to parse valid TypeScript code that nests `extends` inside `infer` inside `extends`, such as in the example below:\n\n    ```ts\n    type A<T> = {};\n    type B = {} extends infer T extends {} ? A<T> : never;\n    ```\n\n    TypeScript code that does this should now be parsed correctly.\n\n-   Use `WebAssembly.instantiateStreaming` if available ([#&#8203;1036](https://togithub.com/evanw/esbuild/pull/1036), [#&#8203;1900](https://togithub.com/evanw/esbuild/pull/1900))\n\n    Currently the WebAssembly version of esbuild uses `fetch` to download `esbuild.wasm` and then `WebAssembly.instantiate` to compile it. There is a newer API called `WebAssembly.instantiateStreaming` that both downloads and compiles at the same time, which can be a performance improvement if both downloading and compiling are slow. With this release, esbuild now attempts to use `WebAssembly.instantiateStreaming` and falls back to the original approach if that fails.\n\n    The implementation for this builds on a PR by [@&#8203;lbwa](https://togithub.com/lbwa).\n\n-   Preserve Webpack comments inside constructor calls ([#&#8203;2439](https://togithub.com/evanw/esbuild/issues/2439))\n\n    This improves the use of esbuild as a faster TypeScript-to-JavaScript frontend for Webpack, which has special [magic comments](https://webpack.js.org/api/module-methods/#magic-comments) inside `new Worker()` expressions that affect Webpack's behavior.\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.29.0`](https://togithub.com/eslint/eslint/releases/tag/v8.29.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.28.0...v8.29.0)\n\n#### Features\n\n-   [`49a07c5`](https://togithub.com/eslint/eslint/commit/49a07c52c5af7e98d161ff4acd44bbbe0aa6383b) feat: add `allowParensAfterCommentPattern` option to no-extra-parens ([#&#8203;16561](https://togithub.com/eslint/eslint/issues/16561)) (Nitin Kumar)\n-   [`e6a865d`](https://togithub.com/eslint/eslint/commit/e6a865d70aed9e1c07be712e40c38da1a5dda849) feat: `prefer-named-capture-group` add suggestions ([#&#8203;16544](https://togithub.com/eslint/eslint/issues/16544)) (Josh Goldberg)\n-   [`a91332b`](https://togithub.com/eslint/eslint/commit/a91332b8bd9adfa2aa8110071bdf73f56d400050) feat: In no-invalid-regexp validate flags also for non-literal patterns ([#&#8203;16583](https://togithub.com/eslint/eslint/issues/16583)) (trosos)\n\n#### Documentation\n\n-   [`0311d81`](https://togithub.com/eslint/eslint/commit/0311d81834d675b8ae7cc92a460b37115edc4018) docs: Configuring Plugins page intro, page tweaks, and rename ([#&#8203;16534](https://togithub.com/eslint/eslint/issues/16534)) (Ben Perlmutter)\n-   [`57089b1`](https://togithub.com/eslint/eslint/commit/57089b1ede624452bc94404b6e60d01d48cfd468) docs: add a property assignment example for camelcase rule ([#&#8203;16605](https://togithub.com/eslint/eslint/issues/16605)) (Milos Djermanovic)\n-   [`b6ab030`](https://togithub.com/eslint/eslint/commit/b6ab030897d2e8b314b33a6502346a4ac45bb8da) docs: add docs codeowners ([#&#8203;16601](https://togithub.com/eslint/eslint/issues/16601)) (Strek)\n-   [`6380c87`](https://togithub.com/eslint/eslint/commit/6380c87c563be5dc78ce0ddd5c7409aaf71692bb) docs: fix sitemap and feed ([#&#8203;16592](https://togithub.com/eslint/eslint/issues/16592)) (Milos Djermanovic)\n-   [`ade621d`](https://togithub.com/eslint/eslint/commit/ade621dd12fcd3b65644bb3468248cc040db756c) docs: perf debounce the search query ([#&#8203;16586](https://togithub.com/eslint/eslint/issues/16586)) (Shanmughapriyan S)\n-   [`fbcf3ab`](https://togithub.com/eslint/eslint/commit/fbcf3abd54dd20aec3c695cacece56493633c97f) docs: fix searchbar clear button ([#&#8203;16585](https://togithub.com/eslint/eslint/issues/16585)) (Shanmughapriyan S)\n-   [`f894035`](https://togithub.com/eslint/eslint/commit/f89403553b31d24f4fc841424cc7dcb8c3ef689f) docs: HTTPS link to yeoman.io ([#&#8203;16582](https://togithub.com/eslint/eslint/issues/16582)) (Christian Oliff)\n-   [`de12b26`](https://togithub.com/eslint/eslint/commit/de12b266f2aa6f063d0af888b8f0de41d09ec33f) docs: Update configuration file pages ([#&#8203;16509](https://togithub.com/eslint/eslint/issues/16509)) (Ben Perlmutter)\n-   [`1ae9f20`](https://togithub.com/eslint/eslint/commit/1ae9f2067442434c6ccc6b41703624b302d17c67) docs: update correct code examples for `no-extra-parens` rule ([#&#8203;16560](https://togithub.com/eslint/eslint/issues/16560)) (Nitin Kumar)\n\n#### Chores\n\n-   [`7628403`](https://togithub.com/eslint/eslint/commit/7628403a57d9d9b4e2cb2b36309170900f58832e) chore: add discord channel link ([#&#8203;16590](https://togithub.com/eslint/eslint/issues/16590)) (Amaresh  S M)\n-   [`f5808cb`](https://togithub.com/eslint/eslint/commit/f5808cb51529174a67b4938223f06435ad6d5118) chore: fix rule doc headers check ([#&#8203;16564](https://togithub.com/eslint/eslint/issues/16564)) (Milos Djermanovic)\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string</summary>\n\n### [`v0.27.0`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0270-httpsgithubcomrich-harrismagic-stringcomparev0267v0270-2022-12-03)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.26.7...v0.27.0)\n\n##### Performance Improvements\n\n-   use [@&#8203;jridgewell/sourcemap-codec](https://togithub.com/jridgewell/sourcemap-codec) ([e68f3e0](https://togithub.com/rich-harris/magic-string/commit/e68f3e05fe6d87acc1c41eddae97fc32e004320b))\n\n#### [0.26.7](https://togithub.com/rich-harris/magic-string/compare/v0.26.6...v0.26.7) (2022-10-09)\n\n##### Bug Fixes\n\n-   avoid mutating provided options ([#&#8203;227](https://togithub.com/rich-harris/magic-string/issues/227)) ([01d033e](https://togithub.com/rich-harris/magic-string/commit/01d033e6e8630ef1d0482d9a3899f1da2bf933d5))\n\n#### [0.26.6](https://togithub.com/rich-harris/magic-string/compare/v0.26.5...v0.26.6) (2022-10-05)\n\n##### Features\n\n-   add `update` method as safer alternative to `overwrite` ([#&#8203;212](https://togithub.com/rich-harris/magic-string/issues/212)) ([9a312e3](https://togithub.com/rich-harris/magic-string/commit/9a312e37a02629f7496c6cfcf307832e991669a3))\n\n#### [0.26.5](https://togithub.com/rich-harris/magic-string/compare/v0.26.4...v0.26.5) (2022-09-30)\n\n##### Bug Fixes\n\n-   update typescript definition file to contain `replaceAll()` ([#&#8203;224](https://togithub.com/rich-harris/magic-string/issues/224)) ([45a4921](https://togithub.com/rich-harris/magic-string/commit/45a49214ba244b906f4d20450debc8edcc06e2a8))\n\n#### [0.26.4](https://togithub.com/rich-harris/magic-string/compare/v0.26.3...v0.26.4) (2022-09-22)\n\n##### Features\n\n-   fix `.replace()` when searching string, add `.replaceAll()` ([#&#8203;222](https://togithub.com/rich-harris/magic-string/issues/222)) ([04a05bd](https://togithub.com/rich-harris/magic-string/commit/04a05bdc9bf56e00e616a0ae07923fbd9b63fbd0))\n\n##### Performance Improvements\n\n-   avoiding use of Object.defineProperty in Chunk constructor ([#&#8203;219](https://togithub.com/rich-harris/magic-string/issues/219)) ([130794b](https://togithub.com/rich-harris/magic-string/commit/130794bb8bfd9f21eb1f50c36a1da8eb5443d256))\n\n#### [0.26.3](https://togithub.com/rich-harris/magic-string/compare/v0.26.2...v0.26.3) (2022-08-30)\n\n##### Performance Improvements\n\n-   delay guess encoded ([#&#8203;216](https://togithub.com/rich-harris/magic-string/issues/216)) ([69b13c7](https://togithub.com/rich-harris/magic-string/commit/69b13c7a09af742e4f31cf419e8f96e6db32ab5a))\n\n#### [0.26.2](https://togithub.com/rich-harris/magic-string/compare/v0.26.1...v0.26.2) (2022-05-11)\n\n##### Bug Fixes\n\n-   specify types in exports ([#&#8203;214](https://togithub.com/rich-harris/magic-string/issues/214)) ([985e7b4](https://togithub.com/rich-harris/magic-string/commit/985e7b4d8a6fd5911d2ad2e6524999e9198a6b9f))\n\n#### [0.26.1](https://togithub.com/rich-harris/magic-string/compare/v0.26.0...v0.26.1) (2022-03-03)\n\n##### Bug Fixes\n\n-   **replace:** match replacer function signature with spec ([902541f](https://togithub.com/rich-harris/magic-string/commit/902541fdff3998e3c957908de10769d2af1a3c70))\n\n</details>\n\n<details>\n<summary>webpack-contrib/mini-css-extract-plugin</summary>\n\n### [`v2.7.2`](https://togithub.com/webpack-contrib/mini-css-extract-plugin/blob/HEAD/CHANGELOG.md#&#8203;272-httpsgithubcomwebpack-contribmini-css-extract-plugincomparev271v272-2022-12-06)\n\n[Compare Source](https://togithub.com/webpack-contrib/mini-css-extract-plugin/compare/v2.7.1...v2.7.2)\n\n</details>\n\n<details>\n<summary>npm/pacote</summary>\n\n### [`v15.0.7`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#&#8203;1507-httpsgithubcomnpmpacotecomparev1506v1507-2022-12-07)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v15.0.6...v15.0.7)\n\n##### Dependencies\n\n-   [`a734d61`](https://togithub.com/npm/pacote/commit/a734d61379c3b5690ad2e10d382dc5486b93266b) [#&#8203;250](https://togithub.com/npm/pacote/pull/250) bump minipass from 3.3.6 to 4.0.0\n\n</details>\n\n<details>\n<summary>reactivex/rxjs</summary>\n\n### [`v7.6.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;760-httpsgithubcomreactivexrxjscompare757760-2022-12-03)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.5.7...7.6.0)\n\n##### Bug Fixes\n\n-   **schedulers:** no longer cause TypeScript build failures when Node types aren't included ([c1a07b7](https://togithub.com/reactivex/rxjs/commit/c1a07b71ac050ab36b371ff7f18dc9a924fffc9f))\n-   **types:** Improved subscribe and tap type overloads ([#&#8203;6718](https://togithub.com/reactivex/rxjs/issues/6718)) ([af1a9f4](https://togithub.com/reactivex/rxjs/commit/af1a9f446a860883abaa36ace21345dc923e7e53)), closes [#&#8203;6717](https://togithub.com/reactivex/rxjs/issues/6717)\n\n##### Features\n\n-   **onErrorResumeNextWith:** renamed `onErrorResumeNext` and exported from the top level. (`onErrorResumeNext` operator is stil available, but deprecated) ([#&#8203;6755](https://togithub.com/reactivex/rxjs/issues/6755)) ([51e3b2c](https://togithub.com/reactivex/rxjs/commit/51e3b2c8ec28b5d30bca4c63ad69ce6942c2cdcc))\n\n#### [7.5.7](https://togithub.com/reactivex/rxjs/compare/7.5.6...7.5.7) (2022-09-25)\n\n##### Bug Fixes\n\n-   **schedulers:** improve performance of animationFrameScheduler and asapScheduler ([#&#8203;7059](https://togithub.com/reactivex/rxjs/issues/7059)) ([c93aa60](https://togithub.com/reactivex/rxjs/commit/c93aa60e9f073297d959fa1fff9323e48872d47e)), closes [#&#8203;7017](https://togithub.com/reactivex/rxjs/issues/7017), related to [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018) and [#&#8203;6674](https://togithub.com/reactivex/rxjs/issues/6674)\n\n##### Performance Improvements\n\n-   **animationFrames:** uses fewer Subscription instances ([#&#8203;7060](https://togithub.com/reactivex/rxjs/issues/7060)) ([2d57b38](https://togithub.com/reactivex/rxjs/commit/2d57b38ec9f7ada838ee130ab75cd795b156c182)), closes [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018)\n\n#### [7.5.6](https://togithub.com/reactivex/rxjs/compare/7.5.5...7.5.6) (2022-07-11)\n\n##### Bug Fixes\n\n-   **share:** No longer results in a bad-state observable in an edge case where a synchronous source was shared and refCounted, and the result is subscribed to twice in a row synchronously. ([#&#8203;7005](https://togithub.com/reactivex/rxjs/issues/7005)) ([5d4c1d9](https://togithub.com/reactivex/rxjs/commit/5d4c1d9a37b1347217223adb0d9e166fd85f67a9))\n-   **share & connect:** `share` and `connect` no longer bundle scheduling code by default ([#&#8203;6873](https://togithub.com/reactivex/rxjs/issues/6873)) ([9948dc2](https://togithub.com/reactivex/rxjs/commit/9948dc2f5577eaa4013de234f3552508918518c7)), closes [#&#8203;6872](https://togithub.com/reactivex/rxjs/issues/6872)\n-   **exhaustAll:** Result will now complete properly when flattening all synchronous observables. ([#&#8203;6911](https://togithub.com/reactivex/rxjs/issues/6911)) ([3c1c6b8](https://togithub.com/reactivex/rxjs/commit/3c1c6b8303028eebc7af31cfc5e5bad42a5b2da4)), closes [#&#8203;6910](https://togithub.com/reactivex/rxjs/issues/6910)\n-   **TypeScript:** Now compatible with TypeScript 4.6 type checks ([#&#8203;6895](https://togithub.com/reactivex/rxjs/issues/6895)) ([fce9aa1](https://togithub.com/reactivex/rxjs/commit/fce9aa12931796892673581761bba1f7ceafabff))\n\n#### [7.5.5](https://togithub.com/reactivex/rxjs/compare/7.5.4...7.5.5) (2022-03-08)\n\n##### Bug Fixes\n\n-   **package:** add types to exports ([#&#8203;6802](https://togithub.com/reactivex/rxjs/issues/6802)) ([3750f75](https://togithub.com/reactivex/rxjs/commit/3750f75104bb82d870c53c0605c942e41245d79c))\n-   **package:** add `require` export condition ([#&#8203;6821](https://togithub.com/reactivex/rxjs/issues/6821)) ([c8955e4](https://togithub.com/reactivex/rxjs/commit/c8955e4c6a972135030fdfddc18a7a48337ae9c7))\n-   **timeout:** no longer will timeout when receiving the first value synchronously ([#&#8203;6865](https://togithub.com/reactivex/rxjs/issues/6865)) ([2330c96](https://togithub.com/reactivex/rxjs/commit/2330c9660b20f2e0cda0c4eeb36bb582b4a85186)), closes [#&#8203;6862](https://togithub.com/reactivex/rxjs/issues/6862)\n\n##### Performance Improvements\n\n-   Don't clone observers unless you have to ([#&#8203;6842](https://togithub.com/reactivex/rxjs/issues/6842)) ([3289d20](https://togithub.com/reactivex/rxjs/commit/3289d20ddc3a84d2aede8e3ab9962a8ef5d43c83))\n\n#### [7.5.4](https://togithub.com/reactivex/rxjs/compare/7.5.3...7.5.4) (2022-02-09)\n\n##### Performance Improvements\n\n-   removed code that would `bind` functions passed with observers to `subscribe`. ([#&#8203;6815](https://togithub.com/reactivex/rxjs/issues/6815)) ([fb375a0](https://togithub.com/reactivex/rxjs/commit/fb375a0c5befd6852cd63d3c310448e42fa9580e)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.3](https://togithub.com/reactivex/rxjs/compare/7.5.2...7.5.3) (2022-02-08)\n\n##### Bug Fixes\n\n-   **subscribe:** allow interop with Monio and other libraries that patch function bind ([0ab91eb](https://togithub.com/reactivex/rxjs/commit/0ab91eb4c1da914efbf03a2732629914cd3398dc)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.2](https://togithub.com/reactivex/rxjs/compare/7.5.1...7.5.2) (2022-01-11)\n\n##### Bug Fixes\n\n-   operators that ignore input values now use `unknown` rather than `any`, which should resolve issues with eslint no-unsafe-argument ([#&#8203;6738](https://togithub.com/reactivex/rxjs/issues/6738)) ([67cb317](https://togithub.com/reactivex/rxjs/commit/67cb317a7a6b9fdbd3d2e8fdbc2ac9ac7e57179c)), closes [#&#8203;6536](https://togithub.com/reactivex/rxjs/issues/6536)\n-   **ajax:** crossDomain flag deprecated and properly reported to consumers ([#&#8203;6710](https://togithub.com/reactivex/rxjs/issues/6710)) ([7fd0575](https://togithub.com/reactivex/rxjs/commit/7fd05756c595dddb288b732b00a90fcfb2a9080a)), closes [#&#8203;6663](https://togithub.com/reactivex/rxjs/issues/6663)\n\n#### [7.5.1](https://togithub.com/reactivex/rxjs/compare/7.5.0...7.5.1) (2021-12-28)\n\n##### Bug Fixes\n\n-   export supporting interfaces from top-level `rxjs` site. ([#&#8203;6733](https://togithub.com/reactivex/rxjs/issues/6733)) ([299a1e1](https://togithub.com/reactivex/rxjs/commit/299a1e16f725edfc2e333c430e3a7dfc75dd94e7))\n\n</details>\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.16.1`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5161)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.16.0...v5.16.1)\n\n-   Properly handle references in destructurings (`const { [reference]: val } = ...`)\n-   Allow parsing of `.#privatefield` in nested classes\n-   Do not evaluate operations that return large strings if that would make the output code larger\n-   Make `collapse_vars` handle block scope correctly\n-   Internal improvements: Typos ([#&#8203;1311](https://togithub.com/terser/terser/issues/1311)), more tests, small-scale refactoring\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24370","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24370)"},{"Id":"1473352845","IsPullRequest":false,"CreatedAt":"2022-12-02T19:40:01","Actor":"abf7d","Number":"24369","RawContent":null,"Title":"Publish React component / web component from an Angular library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am looking to publish a react component and web component from an angular library. \r\n\r\nI followed a few tutorials that step you through creating a react component inside an angular library. For example you install `react` and `react-dom` into the workspace, you add `\"jsx\": \"react-jsx\"` to your tsconfig, you wrap your react component in a web component, you import your web component into your project app, you add CUSTOM_ELEMENTS_SCHEMA to the app.module.ts, and you use the webcomponent markup inside of the template of the component of your choosing. (I also added the line `\"include\": [\"./src/**/*.ts\", \"./src/**/*.js\", \"./src/**/*.tsx\", \"./src/**/*.jsx\"],` to the tsconfig.)\r\n\r\nI am now trying to set up building the library. I added an index.ts file to the library as the entry point and export my web component from it:\r\n```\r\nexport * as any from './lib/my-web-component.jsx';\r\n```\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nI'm getting non-descriptive errors when I build that say\r\n\r\n✖ Generating FESM2020\r\nCould not resolve \"./lib/my-web-component.jsx\" from \"dist/my-lib/esm2020/index.mjs\"\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.2\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@schematics/angular             15.0.2\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24369","RelatedDescription":"Closed issue \"Publish React component / web component from an Angular library\" (#24369)"},{"Id":"1472047954","IsPullRequest":true,"CreatedAt":"2022-12-02T18:39:13","Actor":"clydin","Number":"24363","RawContent":null,"Title":"fix(@angular-devkit/build-angular): downlevel class fields with Safari <= v15 for esbuild","State":"closed","Body":"To provide a workaround for a Safari bug involving class fields and variable scoping,\r\nthe esbuild-based browser application builder will now downlevel class fields if Safari\r\n(desktop or iOS) v15.x or earlier is within the target browsers for an application.\r\nThis is an esbuild variant of the fix for the Webpack-based builder. For more details\r\nregarding the issue, please see: https://github.com/angular/angular-cli/pull/24357","Url":"https://github.com/angular/angular-cli/pull/24363","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): downlevel class fields with Safari <= v15 for esbuild\" (#24363)"},{"Id":"1476053436","IsPullRequest":false,"CreatedAt":"2022-12-02T10:28:29","Actor":"cskiwi","Number":"24375","RawContent":null,"Title":"bug(cdk): Builds fail with cdk@15.0.1 due to parse5 library error","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.0.0\r\n\r\n### Description\r\n\r\nWhen updating to the latest version: 15.0.1 of cdk, the builds start to fail,\r\n\r\nWas introduced in update: https://github.com/angular/components/pull/26086\r\n\r\n```\r\n./node_modules/parse5-htmlparser2-tree-adapter/lib/index.js:3:16-52 - Error: Module not found: Error: Package path ./lib/common/doctype is not exported from package <project>\\node_modules\\parse5 (see exports field in <project>\\node_modules\\parse5\\package.json)\r\n\r\n./node_modules/parse5-htmlparser2-tree-adapter/lib/index.js:6:4-37 - Error: Module not found: Error: Package path ./lib/common/html is not exported from package <project>\\node_modules\\parse5 (see exports field in <project>\\node_modules\\parse5\\package.json)\r\n\r\n./node_modules/critters/dist/critters.mjs:38:2-14 - Error: export 'default' (imported as 'parse5') was not found in 'parse5' (possible exports: ErrorCodes, Parser, Token, Tokenizer, TokenizerMode, defaultTreeAdapter, foreignContent, html, parse, parseFragment, serialize, serializeOuter)\r\n\r\n./node_modules/critters/dist/critters.mjs:55:9-25 - Error: export 'default' (imported as 'parse5') was not found in 'parse5' (possible exports: ErrorCodes, Parser, Token, Tokenizer, TokenizerMode, defaultTreeAdapter, foreignContent, html, parse, parseFragment, serialize, serializeOuter)\r\n```\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. update to the latest version of cdk\r\n2. Build\r\n\r\n\r\n### Expected Behavior\r\n\r\nThat the build would work\r\n\r\n### Actual Behavior\r\n\r\nBuild is crashing\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): x\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/angular-cli/issues/24375","RelatedDescription":"Open issue \"bug(cdk): Builds fail with cdk@15.0.1 due to parse5 library error\" (#24375)"},{"Id":"1472362758","IsPullRequest":true,"CreatedAt":"2022-12-02T10:22:46","Actor":"angular-robot","Number":"24364","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `29a40cb` -> `e014849` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `7250998` -> `e9e267d` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `cb06ba9` -> `066d2f3` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `e82af85` -> `7ab7ff7` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `90835b7` -> `e751581` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `004dcae` -> `a8a0d4c` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `d1ce91d` -> `ad5bcaf` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `627f482` -> `7f8f844` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `918ffd6` -> `60e625c` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `c6cd110` -> `062631f` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `a7fce23` -> `8ca9614` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `82d5991` -> `825881d` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `2209d5e` -> `fd7b2b1` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `6e06a85` -> `20eabc2` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `92d5133` -> `01ec378` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `05a07d9` -> `25b3619` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24364","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24364)"},{"Id":"1472549409","IsPullRequest":true,"CreatedAt":"2022-12-02T10:20:35","Actor":"d3lm","Number":"24367","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): convert `transformedContent` into a function","State":"closed","Body":"This PR converts `transformedContent` into a function to give more control when the readable stream is initialized. There might be issues with late \"subscribers\" where events are added after the readable stream was initialized and the data was already pushed, e.g.\r\n\r\n```ts\r\nconst { rewriter } = await htmlRewritingStream('<div />');\r\n\r\nsetTimeout(() => {\r\n  rewriter.on('startTag', (tag) => {\r\n    console.log(tag);\r\n  });\r\n})\r\n```\r\n\r\nThis will not work and potentially wait indefinitely. I have ran into such issue with WebContainer on stackblitz.com.\r\n\r\nWith this change the stream now needs to be explicitily initialized:\r\n\r\n```ts\r\nconst { rewriter, transformedContent } = await htmlRewritingStream('<div />');\r\n\r\nsetTimeout(() => {\r\n  rewriter.on('startTag', (tag) => {\r\n    console.log(tag);\r\n  });\r\n  \r\n  // calling this function will create the readable stream\r\n  transformedContent();\r\n})\r\n```\r\n\r\nThis will work as expected.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular-cli/pull/24367","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): convert `transformedContent` into a function\" (#24367)"},{"Id":"1472413322","IsPullRequest":true,"CreatedAt":"2022-12-02T09:04:04","Actor":"angular-robot","Number":"24366","RawContent":null,"Title":"build: update dependency npm-package-arg to v10.1.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | dependencies | minor | [`10.0.0` -> `10.1.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.0.0/10.1.0) |\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | devDependencies | minor | [`10.0.0` -> `10.1.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.0.0/10.1.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/npm-package-arg</summary>\n\n### [`v10.1.0`](https://togithub.com/npm/npm-package-arg/blob/HEAD/CHANGELOG.md#&#8203;1010-httpsgithubcomnpmnpm-package-argcomparev1000v1010-2022-12-01)\n\n[Compare Source](https://togithub.com/npm/npm-package-arg/compare/v10.0.0...v10.1.0)\n\n##### Features\n\n-   [`f2c243c`](https://togithub.com/npm/npm-package-arg/commit/f2c243c140a397d3054fe1ec84a091d237bbd6e9) [#&#8203;122](https://togithub.com/npm/npm-package-arg/pull/122) add function to return pacakge purl ([@&#8203;bdehamer](https://togithub.com/bdehamer), [@&#8203;ljharb](https://togithub.com/ljharb))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24366","RelatedDescription":"Closed or merged PR \"build: update dependency npm-package-arg to v10.1.0\" (#24366)"},{"Id":"1472362817","IsPullRequest":true,"CreatedAt":"2022-12-02T09:01:15","Actor":"angular-robot","Number":"24365","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.35","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.34` -> `v2.1.35` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.35`](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24365","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.35\" (#24365)"},{"Id":"1471858750","IsPullRequest":false,"CreatedAt":"2022-12-01T20:29:41","Actor":"dgp1130","Number":"24361","RawContent":null,"Title":"Schematics progress reporting","State":"closed","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\nFrom http://b/188066584.\r\n\r\nFor long running schematics, it can sometimes be unclear if the schematic is stalled or just taking a long time. A loading spinner might be useful to communicate current status.\r\n\r\n### Describe the solution you'd like\r\n\r\nMore comprehensive progress reporting would be very cool. I doubt we could do a proper progress bar, but even just a spinner which updates every frame would at least validate that the program is stalled in an infinite loop.\r\n\r\n### Describe alternatives you've considered\r\n\r\nI think schematics could implement this themselves via the logger to a certain extent, but it might get a bit tricky. Not sure if a loading spinner is feasible at all.","Url":"https://github.com/angular/angular-cli/issues/24361","RelatedDescription":"Closed issue \"Schematics progress reporting\" (#24361)"},{"Id":"1471900695","IsPullRequest":false,"CreatedAt":"2022-12-01T20:12:57","Actor":"dgp1130","Number":"24362","RawContent":null,"Title":"Schematics: Edit files in different places of monorepo","State":"open","Body":"### Command\n\ngenerate\n\n### Description\n\nFrom http://b/120993063.\r\n\r\nIn large monorepos (such as google3), it is often common to want to edit files in multiple directories from a schematic. Java paths in particular run into this in google3, where users might want to generate `foo/bar/baz.ts`, `java/com/corp/foo/bar/baz.java`, and `javatests/com/corp/foo/bar/baz.java`.\r\n\r\nSchematics currently restricts users to the current directory, so this use case doesn't work intuitively.\n\n### Describe the solution you'd like\n\nI'm not sure about the proper solution to this problem. I do agree with the current behavior that schematics _should_ be scoped to a particular directory and prevent accesses outside of that, both for security and usability reasons. That said, I think this monorepo issue is a very real problem, so it would be nice to have some kind of support for it.\r\n\r\nSome strawman ideas for a solution:\r\n* Let schematics \"`cd`\" into a different directory and use that as the root. So even if it's run in `foo/bar/`, it could use `../../` as its root and access the whole monorepo.\r\n* Let schematics declare the root directory in their schema relative to the project root: `{ \"root\": \"../../\" }`.\r\n* Prompt users to give access to directories outside the default one in a permissions model. This is probably the safest but also the most annoying to use.\n\n### Describe alternatives you've considered\n\nBest alternative is to run the schematic in the monorepo root, but this can be awkward for users who `cd` in to their particular project directory.\r\n\r\nI think you can also edit external files via a `Task`, but then you're throwing away a lot of the ergonomics of schematics, so that's not a great escape hatch. I guess you could schedule a `Task` which reruns the schematic in a different directory?","Url":"https://github.com/angular/angular-cli/issues/24362","RelatedDescription":"Open issue \"Schematics: Edit files in different places of monorepo\" (#24362)"},{"Id":"1471849659","IsPullRequest":false,"CreatedAt":"2022-12-01T19:40:34","Actor":"dgp1130","Number":"24360","RawContent":null,"Title":"[Schematics CLI] Numeric strings in schematics options","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFrom http://b/196605664.\r\n\r\nApparently you can't pass in a numeric value into a string argument in schematics. This appears to be interpreted as number and leads to a validation error.\n\n### Minimal Reproduction\n\n```\r\n$ schematics run test --stringValue \"1234\"\r\nSchematic input does not validate against the Schema: {\"stringValue\":1234}\r\nErrors:\r\n\r\n  Data path \".stringValue\" should be string.\r\n```\r\n\r\nMinimist seems to interpret \"1234\" as a number instead of a string, and schematics treats that as a type mismatch.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nSee http://b/196605664.\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24360","RelatedDescription":"Open issue \"[Schematics CLI] Numeric strings in schematics options\" (#24360)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1483210512","IsPullRequest":true,"CreatedAt":"2022-12-08T01:06:08","Actor":"mmalerba","Number":"26207","RawContent":null,"Title":"Bump version to \"v15.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26207","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0-next.1\" with changelog.\" (#26207)"},{"Id":"1483196642","IsPullRequest":true,"CreatedAt":"2022-12-08T00:36:39","Actor":"mmalerba","Number":"26206","RawContent":null,"Title":"docs: release notes for the v15.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26206","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.2 release\" (#26206)"},{"Id":"1483194917","IsPullRequest":true,"CreatedAt":"2022-12-08T00:33:18","Actor":"mmalerba","Number":"26205","RawContent":null,"Title":"Bump version to \"v15.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26205","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.2\" with changelog.\" (#26205)"},{"Id":"1482993384","IsPullRequest":true,"CreatedAt":"2022-12-07T22:29:46","Actor":"ShauniArima","Number":"26204","RawContent":null,"Title":"refactor(cdk/table): convert all directives to standalone","State":"open","Body":"This work converts all of the `@angular/cdk/table` directives to `standalone`. With these changes, `table` directives can be used as host directives.","Url":"https://github.com/angular/components/pull/26204","RelatedDescription":"Open PR \"refactor(cdk/table): convert all directives to standalone\" (#26204)"},{"Id":"1482562333","IsPullRequest":false,"CreatedAt":"2022-12-07T18:23:46","Actor":"mrmokwa","Number":"26203","RawContent":null,"Title":"bug(material/table): mouse hover not working with indigo & pink","State":"open","Body":"### Description\r\n\r\n![Animation](https://user-images.githubusercontent.com/12090931/206264854-b1c52532-2038-461b-8197-ccadb8795629.gif)\r\n\r\nYou can check at the table examples in material.io:\r\nhttps://material.angular.io/components/table/examples\r\n\r\n- [X] Deep-purple & Amber\r\n- [ ] Indigo & Pink\r\n- [X] Pink & Blue-Grey\r\n- [X] Purple & Green\r\n\r\nThe talbe hovering effect doesn't work with Indigo & Pink theme.\r\nCustom light-theme seens to not being working too.\r\n\r\nExample:\r\n![image](https://user-images.githubusercontent.com/12090931/206263237-3ca6165c-6abc-43dd-9ef4-b94886f52da7.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Select in material.io table examples the indigo and pink theme\r\n2. Hover over the row and nothing happens.\r\n3. Select in material.io table examples the deeo purple and amber theme\r\n4. Hover over the row, and the styling is applied.\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome and Firefox\r\n\r\n","Url":"https://github.com/angular/components/issues/26203","RelatedDescription":"Open issue \"bug(material/table): mouse hover not working with indigo & pink\" (#26203)"},{"Id":"1482272035","IsPullRequest":true,"CreatedAt":"2022-12-07T16:04:33","Actor":"angular-robot","Number":"26202","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `d94cd02` -> `f6e4541` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a2a71f7` -> `5677f11` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/components/pull/26202","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#26202)"},{"Id":"1482243820","IsPullRequest":true,"CreatedAt":"2022-12-07T15:59:57","Actor":"devversion","Number":"26201","RawContent":null,"Title":"test: action","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26201","RelatedDescription":"Closed or merged PR \"test: action\" (#26201)"},{"Id":"1482043850","IsPullRequest":true,"CreatedAt":"2022-12-07T15:30:47","Actor":"devversion","Number":"26200","RawContent":null,"Title":"build: test speed up of preview deploy action","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26200","RelatedDescription":"Closed or merged PR \"build: test speed up of preview deploy action\" (#26200)"},{"Id":"1481781999","IsPullRequest":false,"CreatedAt":"2022-12-07T12:17:45","Actor":"JonWallsten","Number":"26199","RawContent":null,"Title":"bug(MatAutocomplete): BlockScrollStrategy doesn't work with cdkScrollable","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nUsing `BlockScrollStrategy` on `MatAutocomplete` does not work unless the scroll container is the document itself.\r\nI've added `cdkScrollable` to the scroll container, and `CloseScrollStrategy` and `RepositionScrollStrategy` do work, but not `BlockScrollStrategy`.  \r\n\r\n### Reproduction\r\n\r\n1. https://angular-scroll-block.stackblitz.io\r\n2. Use Ctrl+Space inside the input field and scroll the scroll-container.\r\n\r\nWorking example with the scroll in the document:\r\n1. https://angular-scroll-block-works.stackblitz.io \r\n2. 2. Use Ctrl+Space inside the input field and scroll the document.\r\n\r\n### Expected Behavior\r\n\r\nScroll should be blocked when using `BlockScrollStrategy`\r\n\r\n### Actual Behavior\r\n\r\nScroll is not blocked when using `BlockScrollStrategy`\r\n\r\n### Environment\r\n\r\n<pre>\r\nAngular CLI: 14.2.3\r\nNode: 18.12.0 (Unsupported)\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 14.2.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.3\r\n@angular-devkit/build-angular   14.2.3\r\n@angular-devkit/core            14.2.3\r\n@angular-devkit/schematics      14.2.3\r\n@angular/cli                    14.2.3\r\n@ngtools/webpack                14.2.3\r\n@schematics/angular             14.2.3\r\nng-packagr                      14.2.1\r\nrxjs                            7.5.6\r\ntypescript                      4.8.3\r\nwebpack                         5.74.0\r\n</pre>","Url":"https://github.com/angular/components/issues/26199","RelatedDescription":"Open issue \"bug(MatAutocomplete): BlockScrollStrategy doesn't work with cdkScrollable\" (#26199)"},{"Id":"1481499717","IsPullRequest":false,"CreatedAt":"2022-12-07T09:56:28","Actor":"marcobuschini","Number":"26198","RawContent":null,"Title":"bug(sort): sort arrow takes up space even when not shown","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the sort arrow is not shown (the column is not sorted and the mouse is not over it) the sort arrow is not removed from the DOM but only made 100% transparent. This makes the arrow take up space event if not shown. If the table has many columns and the columns become tight this makes **centered headers** appear not centered.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. create a mat-table with many centered headers than can be sorted\r\n\r\n\n\n### Expected Behavior\n\nThe sort arrow should be removed from the DOM via ng-if instead of via color change.\n\n### Actual Behavior\n\nThe sort headers appear not to be centered when the arrow is not visible (they are centered if the arrow is taken into account)\n\n### Environment\n\n```\r\nAngular CLI: 14.2.10\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0 \r\nOS: linux x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    14.2.7\r\n@angular/cli                    14.2.10\r\n@angular/material               14.2.7\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```","Url":"https://github.com/angular/components/issues/26198","RelatedDescription":"Open issue \"bug(sort): sort arrow takes up space even when not shown\" (#26198)"},{"Id":"1481432982","IsPullRequest":true,"CreatedAt":"2022-12-07T09:24:44","Actor":"crisbeto","Number":"26197","RawContent":null,"Title":"fix(material/button): use token API for typography","State":"open","Body":"Fixes that the buttons were going through the `without-ripple` mixins for their typography, instead of the token API. Note that the FAB isn't included here, because it doesn't support typography through tokens yet.","Url":"https://github.com/angular/components/pull/26197","RelatedDescription":"Open PR \"fix(material/button): use token API for typography\" (#26197)"},{"Id":"1481387075","IsPullRequest":false,"CreatedAt":"2022-12-07T09:02:28","Actor":"anschm","Number":"26196","RawContent":null,"Title":"feat(Button): Make content-projection for icon possible for any other icon definitions like fa-icon or <i>","State":"open","Body":"### Feature Description\r\n\r\nActually the button HTML is implemented like this:\r\n\r\n```\r\n<span\r\n    class=\"mat-mdc-button-persistent-ripple\"\r\n    [class.mdc-button__ripple]=\"!_isFab\"\r\n    [class.mdc-fab__ripple]=\"_isFab\"></span>\r\n\r\n<ng-content select=\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\">\r\n</ng-content>\r\n\r\n<span class=\"mdc-button__label\"><ng-content></ng-content></span>\r\n\r\n<ng-content select=\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\">\r\n</ng-content>\r\n\r\n<span class=\"mat-mdc-focus-indicator\"></span>\r\n\r\n<span matRipple class=\"mat-mdc-button-ripple\"\r\n     [matRippleDisabled]=\"_isRippleDisabled()\"\r\n     [matRippleTrigger]=\"_elementRef.nativeElement\"></span>\r\n\r\n<span class=\"mat-mdc-button-touch-target\"></span>\r\n```\r\n\r\nWe can see that the mat-icon is projected into the button by using css classes. This has the limitation to use the button only with mat-icon if the button should habe a icon. But whats about fa-icon or <i>?\r\n\r\nIt would be great to add a button like:\r\n\r\n```\r\n  <button mat-icon-button (click)=\"click()\">\r\n    <fa-icon [icon]=\"faIcon\"></fa-icon>\r\n  </button>\r\n```\r\n\r\nIn this case the fa-icon contains a svg like mat-icon can do. It would be cool to project fa-icon into the button like mat-icon. This can be done with a directive name like icon or any other name.\r\n\r\n### Use Case\r\n\r\nUse mat-button also with other icon components like <i> or fa-icon.","Url":"https://github.com/angular/components/issues/26196","RelatedDescription":"Open issue \"feat(Button): Make content-projection for icon possible for any other icon definitions like fa-icon or <i>\" (#26196)"},{"Id":"1481120669","IsPullRequest":false,"CreatedAt":"2022-12-07T06:37:09","Actor":"goodmite","Number":"26195","RawContent":null,"Title":"bug(Mat tab): Not able to click on icon inside mat tab","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nAngular 7\r\n\r\n### Description\r\n\r\n(click) on Icon inside mat tab isnt firing. \r\n[Stackblitz](https://stackblitz.com/edit/angular-waqy4a-5p9wpp?file=src%2Fapp%2Ftab-group-basic-example.ts,src%2Fapp%2Ftab-group-basic-example.html)\r\n\r\n### Code\r\n\r\n```\r\n<mat-tab-group>\r\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\">\r\n    <ng-template mat-tab-label>\r\n      <mat-icon (click)=\"alertRef()\" class=\"example-tab-icon\">delete</mat-icon>\r\n      <-- alert ref not firing on click -->\r\n      Third\r\n    </ng-template>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nClicking on delete icon should trigger its (click)\r\n\r\n### Actual Behavior\r\n\r\nClicking on delete icon doesn't trigger its (click)\r\n\r\n### Environment\r\n\r\n- Angular: V15\r\n- CDK/Material: V15\r\n- Browser(s): Any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Any\r\n","Url":"https://github.com/angular/components/issues/26195","RelatedDescription":"Open issue \"bug(Mat tab): Not able to click on icon inside mat tab\" (#26195)"},{"Id":"1480547321","IsPullRequest":true,"CreatedAt":"2022-12-07T00:30:15","Actor":"ShauniArima","Number":"26194","RawContent":null,"Title":"refactor(cdk/accordion): convert all directives to standalone","State":"open","Body":"This work converts all of the `@angular/cdk/accordion` directives to `standalone`. With these changes, `accordion` directives can be used as host directives.","Url":"https://github.com/angular/components/pull/26194","RelatedDescription":"Open PR \"refactor(cdk/accordion): convert all directives to standalone\" (#26194)"},{"Id":"1478595131","IsPullRequest":true,"CreatedAt":"2022-12-06T22:06:11","Actor":"crisbeto","Number":"26186","RawContent":null,"Title":"perf(material/tabs): reduce amount of CSS generated for background color","State":"closed","Body":"We were generating more than 15kb of selectors to support the background colors for tabs. These changes move the selectors into the base styles and use variables to set the colors.","Url":"https://github.com/angular/components/pull/26186","RelatedDescription":"Closed or merged PR \"perf(material/tabs): reduce amount of CSS generated for background color\" (#26186)"},{"Id":"1480191700","IsPullRequest":false,"CreatedAt":"2022-12-06T21:11:23","Actor":"karptonite","Number":"26193","RawContent":null,"Title":"docs-bug(cdk-dialog): CDK Dialog docs missing explanation on how to access dialogRef when using a TemplateRef","State":"open","Body":"### Documentation Feedback\n\nThe docs [are clear](https://material.angular.io/cdk/dialog/overview#sharing-data-with-the-dialog-component) on how to access the data when opening a modal using a TemplateRef--you can use `let-data`. But it is silent on how to access the `dialogRef`, which is needed if you want to, for example, close the modal. By inspecting the code, I figured out I could use `let-dialogRef=\"dialogRef\"`, but it wasn't obvious.\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/dialog/overview","Url":"https://github.com/angular/components/issues/26193","RelatedDescription":"Open issue \"docs-bug(cdk-dialog): CDK Dialog docs missing explanation on how to access dialogRef when using a TemplateRef\" (#26193)"},{"Id":"1480071210","IsPullRequest":false,"CreatedAt":"2022-12-06T20:08:46","Actor":"romainmoreau","Number":"26192","RawContent":null,"Title":"bug(toolbar): wrong text color of a button with a color in a toolbar","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14 and 15.0.0\n\n### Description\n\nWith [this change](https://github.com/angular/components/issues/26063), it causes another regression versus v14 when it's the buttons inside the toolbar that have a color; now in v15, the text of the buttons doesn't use the specified color.\r\n\n\n### Reproduction\n\nhttps://stackblitz.com/edit/toolbar-colored-buttons-15?file=src/app/app.component.html\n\n### Expected Behavior\n\nButton text color to match button color\r\n\r\nhttps://stackblitz.com/edit/toolbar-colored-buttons-14?file=src/app/app.component.html\n\n### Actual Behavior\n\nButton text color is toolbar text color\r\n\r\nhttps://stackblitz.com/edit/toolbar-colored-buttons-15?file=src/app/app.component.html\n\n### Environment\n\n- Angular: 15.0.2\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26192","RelatedDescription":"Open issue \"bug(toolbar): wrong text color of a button with a color in a toolbar\" (#26192)"},{"Id":"1479661299","IsPullRequest":false,"CreatedAt":"2022-12-06T17:12:21","Actor":"anschm","Number":"26191","RawContent":null,"Title":"bug(MAT-ICON): SVG Icons rendered below the text","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI registered a SVG icon using the MatIconRegistry like:\r\n\r\nthis.matIconRegistry\r\n      .addSvgIconInNamespace(NAMESPACE, iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(BASE_PATH + path));\r\n\r\nAfter that I added a button like:\r\n\r\n          <button mat-flat-button\r\n                  color=\"accent\"\r\n                  (click)=\"login()\">\r\n            <mat-icon svgIcon=\"fas:right-to-bracket\"></mat-icon>\r\n            {{ 'general.login' | translate }}\r\n          </button>\r\n\r\nAnd its seems that the icon is not rendered well. Its rendered below the text. See the picture.\r\n![Bildschirmfoto 2022-12-06 um 18 07 20](https://user-images.githubusercontent.com/79454810/205977343-38bc9f6e-8828-49f9-b6b3-ccbd262387b8.png)\r\n\r\nAfter dealing a little bit with the css. If i remove the height: 18px from the mat-icon css the icon is rendered well.\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add SVG image\r\n2. Create button with mat-icon and the added svg image\r\n\n\n### Expected Behavior\n\nThe svg icon is added like all other material icons.\n\n### Actual Behavior\n\nThe icon is rendered below.\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac M1\r\n","Url":"https://github.com/angular/components/issues/26191","RelatedDescription":"Open issue \"bug(MAT-ICON): SVG Icons rendered below the text\" (#26191)"},{"Id":"1479160373","IsPullRequest":false,"CreatedAt":"2022-12-06T13:52:42","Actor":"GregoireLgt","Number":"26190","RawContent":null,"Title":"feat(badge): a badge with some meaningful information should not have the aria-hidden=true attribute","State":"open","Body":"### Feature Description\r\n\r\n### For accessibility purposes,\r\n\r\nWhen you have a badge which communicates some meaningful information such as a number or something else, it should not have the aria-hidden=true attribute\r\n\r\nSo is it possible to create in the API a new \"matBadgeAriaHidden\" directive to set it manually according to the relevance of the badge content?\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/26190","RelatedDescription":"Open issue \"feat(badge): a badge with some meaningful information should not have the aria-hidden=true attribute\" (#26190)"},{"Id":"1479126959","IsPullRequest":false,"CreatedAt":"2022-12-06T13:36:11","Actor":"GregoireLgt","Number":"26189","RawContent":null,"Title":"feat(sidenav): [ACCESSIBILITY] focus should not be allowed on elements placed \"behind\" the opened sidenav in over mode (at least)","State":"open","Body":"### Feature Description\r\n\r\n### For accessibility purposes,\r\n\r\nWhen you open a sidenav in over mode, focus should not be allowed on elements placed behind the sidenav.\r\n\r\nng-bootstrap has a similar offcanvas component : https://ng-bootstrap.github.io/#/components/offcanvas/examples\r\n\r\nFocus is restricted to the opened offcanvas until you explicitly dismiss it by pressing escape or the close button\r\n\r\n\r\nConcerning the the push mode i don't know whether this should be considered, if you have any thoughts...\r\n \r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/26189","RelatedDescription":"Open issue \"feat(sidenav): [ACCESSIBILITY] focus should not be allowed on elements placed \"behind\" the opened sidenav in over mode (at least)\" (#26189)"},{"Id":"1479064969","IsPullRequest":false,"CreatedAt":"2022-12-06T13:04:33","Actor":"sqljim","Number":"26188","RawContent":null,"Title":"bug(tabs): Buttons no longer work in tab labels after MDC alignment.","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nPrior to the MDC alignment, icon buttons could be added to mat-tab-labels. This allowed for removing tabs, just like how chrome tabs works. With the new MDC tabs, and mat-tab-nav-bar the whole tab takes the click, instead of being able to add an icon.\r\n\r\n\n\n### Reproduction\n\nHere's a stackblitz:\r\n\r\nhttps://stackblitz.com/edit/angular-yewshy?file=src%2Fapp%2Ftab-nav-bar-basic-example.html,src%2Fapp%2Ftab-nav-bar-basic-example.ts\r\n\r\nYou can see that there's a tab for adding new tabs, which works well, basically because it just looks like the user is clicking the icon, when it's just the tab.\r\n\r\nBut none of the close buttons work. I've tried changing the z-index and adding the mat-tab-nav-bar directive to a div instead of an anchor, and a few other things to no avail.\n\n### Expected Behavior\n\nAdding a mat-icon-button should be clickable on a mat tab. Alternatively it would be great to have a feature to be able to remove the tab from the tab itself.\n\n### Actual Behavior\n\nNothing happens when clicking on the icon in either a mat-tab or an anchor tag with the mat-tab-nav-bar directive.\n\n### Environment\n\n- Angular: 15\r\n- Material:\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/26188","RelatedDescription":"Open issue \"bug(tabs): Buttons no longer work in tab labels after MDC alignment.\" (#26188)"},{"Id":"1478780740","IsPullRequest":false,"CreatedAt":"2022-12-06T10:39:38","Actor":"SebastianPodgajny","Number":"26187","RawContent":null,"Title":"bug(CdkPortalOutlet): Component can be rendered outside CdkPortalOutlet","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf you have ComponentPortal with provided ViewContainerRef NgForOf can rerender component outside CdkPortalOutlet.\r\nLooks like [this code](https://github.com/angular/components/blob/7a24e95bafbdeb697f74a48e275c2442bcbefc74/src/cdk/portal/portal-directives.ts#L166) is executed only once and after NgForOf dom manipulations there is nothing that can move ComponentPortalExample to expected position\r\n\r\n### Reproduction\r\n\r\n[Demo](https://stackblitz.com/edit/angular-ivy-lthq8f?file=src%2Fapp%2Fportal.component.ts,src%2Fapp%2Fapp.module.ts,src%2Fapp%2Fapp.component.html)\r\n\r\nSteps to reproduce:\r\n1. Wait until component outlet will render component\r\n2. Drag Item 1 down\r\n3. Drag Item 1 up\r\n4. ComponentPortalExample is rendered inside item list instead of inside component outlet \r\ninstead\r\n\r\n### Expected Behavior\r\n\r\nComponentPortalExample should stay inside CdkPortalOutlet\r\n\r\n### Actual Behavior\r\n\r\nComponentPortalExample is rendered inside item list instead of inside CdkPortalOutlet\r\n\r\n### Environment\r\n\r\n![image](https://user-images.githubusercontent.com/21180501/205888660-85a14f18-8501-4d2f-ba01-6c561bfb8500.png)","Url":"https://github.com/angular/components/issues/26187","RelatedDescription":"Open issue \"bug(CdkPortalOutlet): Component can be rendered outside CdkPortalOutlet\" (#26187)"},{"Id":"1477446025","IsPullRequest":false,"CreatedAt":"2022-12-05T21:10:29","Actor":"Hinnom","Number":"26185","RawContent":null,"Title":"bug(mat-form-field): label not shown when appearance=\"fill\" with styles generated on density: -2","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmat-label is not showing on a mat-form-field when styles are generated with density: -2\n\n### Reproduction\n\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/angular-fxdho2?file=src/theme.scss\r\n2. mat-label is not visible\r\n3. change theme density to -1 and mat-label becomes visible\r\n\n\n### Expected Behavior\n\nmat-label should be visible on density: -2 generated styles\n\n### Actual Behavior\n\nmat-label is not visible :)\n\n### Environment\n\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.1\r\n- Browser(s): google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26185","RelatedDescription":"Open issue \"bug(mat-form-field): label not shown when appearance=\"fill\" with styles generated on density: -2\" (#26185)"},{"Id":"1477049139","IsPullRequest":false,"CreatedAt":"2022-12-05T17:26:46","Actor":"anschm","Number":"26184","RawContent":null,"Title":"bug(TYPOGRAPHY): mat-typography css class only working after mat.typography-hierarchy($theme)","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.1.3\n\n### Description\n\nThe css class .mat-typography on the body html tag does only work if the following line of code was executed at the theming:\r\n\r\n$theme: mat.define-light-theme((\r\n  color: (\r\n....\r\n  ),\r\n  typography: mat.define-typography-config()\r\n));\r\n\r\n@include mat.all-component-themes($theme);\r\n@include mat.typography-hierarchy($theme);\r\n\r\nIn angular 14 the typography was generated by default and provided by the css class mat-typography to the content. This is described at the documation for angular material 15 at the same way. But the typography style is not provided to the contant. All <p> tag have font family Times. After doing mat.typography-hierarchy($theme) all works. I dont know whether this is new and the documentation should changed or it is a bug.\n\n### Reproduction\n\n1.) Create a angular project with angular material\r\n2.) Create a custom theme\r\n3.) Add mat-typography ass css class to the body tag\n\n### Expected Behavior\n\nAll elements have the same font familiy\n\n### Actual Behavior\n\nDifferent font-families on different elements.\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MAC M1\r\n","Url":"https://github.com/angular/components/issues/26184","RelatedDescription":"Open issue \"bug(TYPOGRAPHY): mat-typography css class only working after mat.typography-hierarchy($theme)\" (#26184)"},{"Id":"1476607086","IsPullRequest":false,"CreatedAt":"2022-12-05T13:46:40","Actor":"GregoireLgt","Number":"26183","RawContent":null,"Title":"feat(tabs): [ACCESSIBILITY] possibility to add a descriptive title=\"\" attribute or a mat-tooltip to mat-tab-header-pagination buttons","State":"open","Body":"### Feature Description\n\n ### For accessibility purposes,\r\n\r\nWhen the viewport is not large enough to display the whole mat-tab-group or mat-tab-navbar, it would be nice to have the possibility to add a descriptive title=\"\" attribute or a descriptive mat-tooltip to the mat-tab-header-pagination buttons so the user is aware what are these buttons for\r\n\r\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/26183","RelatedDescription":"Open issue \"feat(tabs): [ACCESSIBILITY] possibility to add a descriptive title=\"\" attribute or a mat-tooltip to mat-tab-header-pagination buttons\" (#26183)"},{"Id":"1476527084","IsPullRequest":false,"CreatedAt":"2022-12-05T13:06:00","Actor":"GregoireLgt","Number":"26182","RawContent":null,"Title":"feat(tabs): [ACCESSIBILITY] possibility to have mat-tab-button instead of mat-tab-link","State":"open","Body":"### Feature Description\r\n\r\n### For accessibility purposes,\r\n\r\nIs it possible to have the mat-tab-button directive instead of mat-tab-link  when using the Tabs component in general? The mat-tab-link directive adds role=\"tab\" to the link (a tag) in which you put this directive but according to the W3C, it is not recommended to have an a tag with role=\"tab\" attribute as you can see here :\r\n\r\nhttps://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-2/tabs.html\r\n\r\nrole=\"tab\" requires a button\r\n\r\nTo sum up,\r\n\r\nAdd the possibility to have button mat-tab-button instead of a mat-tab-link\r\n\r\nThanks a lot\r\n\r\n### Use Case\r\n\r\nThere are two corresponding use cases:\r\n\r\n- When you want to use mat-tab-group to switch between views within a single route in your application\r\n- When you want to use nav mat-tab-nav-bar for navigating between routes in your application\r\n","Url":"https://github.com/angular/components/issues/26182","RelatedDescription":"Open issue \"feat(tabs): [ACCESSIBILITY] possibility to have mat-tab-button instead of mat-tab-link\" (#26182)"},{"Id":"1476514309","IsPullRequest":false,"CreatedAt":"2022-12-05T12:59:46","Actor":"RafaelMartinsRibeiro","Number":"26181","RawContent":null,"Title":"help(Angular Material): Problem changing a default variable","State":"open","Body":"### What are you trying to do?\r\n\r\nI'm trying to change the default value of these variables:\r\n\r\n```\r\n$overlay-container-z-index,\r\n$overlay-z-index,\r\n$overlay-backdrop-z-index,\r\n```\r\n\r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/102157214/205641182-b0e3cfa9-d6de-416b-9098-c9c179af6001.png)\r\n![image](https://user-images.githubusercontent.com/102157214/205641287-af1fc2d4-1a75-43de-8cf8-da07781dcd51.png)\r\n\r\n\r\nBut it is saying that the variable is not declared with !default\r\n![image](https://user-images.githubusercontent.com/102157214/205641741-7767a36e-dc6f-43f3-9920-591d3cedc7fd.png)\r\n\r\n### Environment\r\n\r\n- Angular: \"@angular/core\": \"~12.2.6\"\r\n- CDK/Material: \"@angular/cdk\": \"~12.2.6\", \"@angular/material\": \"^12.2.6\"\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26181","RelatedDescription":"Open issue \"help(Angular Material): Problem changing a default variable\" (#26181)"},{"Id":"1475277419","IsPullRequest":false,"CreatedAt":"2022-12-05T09:38:38","Actor":"michaelfaith","Number":"26178","RawContent":null,"Title":"bug(mdc-migration): Snackbar migration doesn't migrate 'mat-simple-snackbar-action' class","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAfter running the MDC Migration, I noticed the `mat-simple-snackbar-action` class wasn't migrated to the new mdc class.  I believe it should be `mat-mdc-snack-bar-action`.  I confirmed it doesn't appear to be in the map used in the schematic config: https://github.com/angular/components/blob/2629047ace5a17714a17f1c358296c9dd1f73e63/src/material/schematics/ng-generate/mdc-migration/rules/components/snack-bar/snack-bar-styles.ts#L36\r\n\r\nNot sure if that class just isn't considered official public API or not.  We're using it to override the action button color, and noticed it didn't get migrated.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Run Snackbar migration on app with overrides to `.mat-simple-snackbar-action`\r\n\r\n\r\n### Expected Behavior\r\n\r\nMigrate to `.mat-mdc-snack-bar-action`\r\n\r\n### Actual Behavior\r\n\r\nLeft the class alone\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26178","RelatedDescription":"Closed issue \"bug(mdc-migration): Snackbar migration doesn't migrate 'mat-simple-snackbar-action' class\" (#26178)"},{"Id":"1476031222","IsPullRequest":true,"CreatedAt":"2022-12-05T09:38:37","Actor":"crisbeto","Number":"26180","RawContent":null,"Title":"fix(material/schematics): some snack bar styles not being migrated","State":"closed","Body":"Fixes that a couple of styles weren't added to the migration mapping.\r\n\r\nFixes #26178.","Url":"https://github.com/angular/components/pull/26180","RelatedDescription":"Closed or merged PR \"fix(material/schematics): some snack bar styles not being migrated\" (#26180)"},{"Id":"1475367154","IsPullRequest":false,"CreatedAt":"2022-12-05T01:12:51","Actor":"BenGrn","Number":"26179","RawContent":null,"Title":"bug(material/button): mdc unelevated button not getting custom theme color","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen creating custom themes flat buttons revert to default font color instead of using theme contrast colors.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a new Angular project with Material\r\n2. Apply custom theme\r\n\r\nhttps://stackblitz.com/edit/angular-jixnhd\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/55842503/205528155-9d9a2fd2-99bf-484c-92da-1f0414b00ebc.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/55842503/205528188-a7ea1156-775c-431b-926d-8ce261fb3b70.png)\r\n\n\n### Environment\n\n- Angular: 15.0.2\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26179","RelatedDescription":"Open issue \"bug(material/button): mdc unelevated button not getting custom theme color\" (#26179)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-08T03:30:03.2762856Z","RunDurationInMilliseconds":2217}