{"Data":{"Angular-Issues":{"Issues":[{"Id":"1072928711","IsPullRequest":false,"CreatedAt":"2021-12-07T05:24:36","Actor":"phihochzwei","Number":"44390","RawContent":null,"Title":"Components for lazy loaded module get bundled in the wrong file","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, router\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe use to lazy load several parts of our application. Basically, we try to lazy load every route. At one point, we lazy load the \"My Account\" section which uses 5 components from a library we created. This works fine, but one thing bothers me: \r\n\r\nWhen I check the built bundles with webpack bundle analyzer, the components we use inside the lazy loaded modules routes dont get bundled inside the respective bundle file (which would be the way I would expect and prefer it since this is the whole thing about lazy loading, to have only in memory what you need) but inside the main.js. Those components dont get referenced anywhere else, only in the routing-module of the lazy loaded module. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: win32 x64\r\n\r\nAngular: 13.0.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                                    Version\r\n--------------------------------------------------------------------\r\n@angular-devkit/architect                  0.1300.4\r\n@angular-devkit/build-angular              13.0.4\r\n@angular-devkit/core                       13.0.4\r\n@angular-devkit/schematics                 13.0.4\r\n@angular/cli                               13.0.4\r\n@nguniversal/express-engine                13.0.1\r\n@nguniversal/module-map-ngfactory-loader   v8.2.6\r\n@schematics/angular                        13.0.4\r\nng-packagr                                 13.0.8\r\nrxjs                                       7.4.0\r\ntypescript                                 4.4.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44390","RelatedDescription":"Open issue \"Components for lazy loaded module get bundled in the wrong file\" (#44390)"},{"Id":"1071092718","IsPullRequest":true,"CreatedAt":"2021-12-06T21:20:17","Actor":"dgp1130","Number":"44374","RawContent":null,"Title":"build: enable `noPropertyAccessFromIndexSignature`","State":"closed","Body":"This flag makes TypeScript throw an error when using `foo.bar` syntax to resolve an index signature type (`{[prop: string]: T}`). This avoids accidentally using the index signature type when a more explict type was intended, catching many typos. For example, it would catch:\r\n\r\n```typescript\r\ninterface Foo {\r\n  bar: string;\r\n  [prop: string]: any;\r\n}\r\n\r\nconst foo: Foo = /* ... */;\r\nfoo.bar; // string\r\nfoo.abr; // Error...\r\nfoo['abr']; // any\r\n```\r\n\r\nMotivation for this is an upcoming `CompilerOptions` change for extended template diagnostics which will require adding `{[prop: string]: any}` to remain compatible with TypeScript's existing types while having a more flexible `tsconfig.json` structure.\r\n\r\nIt's only really needed in the `compiler-cli` package, but I put this in `packages/tsconfig.json` to be consistent across the whole repository. If that's too broad, I can narrow it down to `packages/compiler-cli/tsconfig.json`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Build related changes","Url":"https://github.com/angular/angular/pull/44374","RelatedDescription":"Closed or merged PR \"build: enable `noPropertyAccessFromIndexSignature`\" (#44374)"},{"Id":"1072577229","IsPullRequest":true,"CreatedAt":"2021-12-06T21:05:29","Actor":"alxhub","Number":"44387","RawContent":null,"Title":"View Engine compiler deletion, v13 edition","State":"closed","Body":"Contains my backported PR as well as some earlier commits by @JoostK.","Url":"https://github.com/angular/angular/pull/44387","RelatedDescription":"Closed or merged PR \"View Engine compiler deletion, v13 edition\" (#44387)"},{"Id":"1072612602","IsPullRequest":true,"CreatedAt":"2021-12-06T21:05:20","Actor":"PzYon","Number":"44389","RawContent":null,"Title":"docs(localize): fix typo in i18n-overview.md","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/44389","RelatedDescription":"Open PR \"docs(localize): fix typo in i18n-overview.md\" (#44389)"},{"Id":"1072596970","IsPullRequest":false,"CreatedAt":"2021-12-06T20:48:38","Actor":"SetTrend","Number":"44388","RawContent":null,"Title":"Tabs in documentation should all be displayed when printed","State":"open","Body":"### Description\r\n\r\nIn the Angular documentation, tab strips don't print well.\r\n\r\nSee [here](https://angular.io/guide/pipes#using-a-pipe-in-a-template) for reference.\r\n\r\nOnly the first tab is getting printed:\r\n\r\n![Printed pipes example](https://user-images.githubusercontent.com/9283914/144919442-f48b3209-29ad-4aac-b03c-308a6b04379c.png)\r\n\r\nPlease amend the `print` media rules to gracefully print all tabs of a tab strip, vertically stacked.\r\n\r\n### What is the affected URL?\r\n\r\nhttps://angular.io/guide/pipes#using-a-pipe-in-a-template\r\n\r\n### Please provide the steps to reproduce the issue\r\n\r\nPrint the above mentioned Angular documenation web page.\r\n\r\n### Please provide the expected behavior vs the actual behavior you encountered\r\n\r\nWhen printing an Angular documentation web page for offline reading, I'd expect to see all content. This includes the content of all of a tab strip's tabs:\r\n\r\n![Proposed tab printing](https://user-images.githubusercontent.com/9283914/144927038-058d0377-47ca-4b53-aaf9-b9444c49ee47.png)\r\n\r\nCurrently, only the first tab's content is being rendered.","Url":"https://github.com/angular/angular/issues/44388","RelatedDescription":"Open issue \"Tabs in documentation should all be displayed when printed\" (#44388)"},{"Id":"1072576135","IsPullRequest":true,"CreatedAt":"2021-12-06T20:22:20","Actor":"alxhub","Number":"44386","RawContent":null,"Title":"View Engine compiler deletion, v13 edition","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44386","RelatedDescription":"Closed or merged PR \"View Engine compiler deletion, v13 edition\" (#44386)"},{"Id":"1070716767","IsPullRequest":true,"CreatedAt":"2021-12-06T18:12:45","Actor":"alxhub","Number":"44368","RawContent":null,"Title":"refactor(compiler): delete View Engine components of @angular/compiler","State":"closed","Body":"This commit finishes the removal of View Engine from the codebase, deleting\r\nthose pieces of @angular/compiler which were only used for VE.\r\n\r\nCo-Authored-By: JoostK <joost.koehoorn@gmail.com>\r\n","Url":"https://github.com/angular/angular/pull/44368","RelatedDescription":"Closed or merged PR \"refactor(compiler): delete View Engine components of @angular/compiler\" (#44368)"},{"Id":"1072117994","IsPullRequest":false,"CreatedAt":"2021-12-06T15:43:37","Actor":"infacto","Number":"44385","RawContent":null,"Title":"BrowserModule has already been loaded. Using BrowserAnimationsModule.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nanimations\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI have imported `BrowserAnimationsModule` into root app module. But page from another module wants: \r\n\r\n> Found the synthetic property @tabAnimation. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.\r\n\r\nBut adding this module to this causes the error: \r\n\r\n> BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\r\n\r\nWhy this error? Angular wants the `BrowserAnimationsModule`, but when adding `BrowserAnimationsModule` it claims that it is already imported? Or what's the problem here?\r\n\r\napp-routing,module.ts\r\n\r\n```ts\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RootComponent,\r\n    children: [{ path: '', component: LandingPage }],\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: async () => import('./modules/dashboard.module').then((m) => m.DashboardModule),\r\n  },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { enableTracing: false })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n```\r\n\r\nThe `BrowserAnimationsModule` is imported in AppModule for e.g. `LandingPage`. But the Dashboard wants it too in `DashboardModule`. Adding this causes the error (see above). \r\n\r\n### NG Version\r\n\r\n```true\r\nAngular CLI: 12.1.2\r\nNode: 14.15.1\r\nPackage Manager: npm 6.14.8\r\nOS: win32 x64\r\n\r\nAngular: 12.1.2\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1201.2\r\n@angular-devkit/build-angular   12.1.2\r\n@angular-devkit/core            12.1.2\r\n@angular-devkit/schematics      12.1.2\r\n@schematics/angular             12.1.2\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n```\r\n","Url":"https://github.com/angular/angular/issues/44385","RelatedDescription":"Closed issue \"BrowserModule has already been loaded. Using BrowserAnimationsModule.\" (#44385)"},{"Id":"1071592086","IsPullRequest":false,"CreatedAt":"2021-12-05T23:48:59","Actor":"ChabuRah","Number":"44383","RawContent":null,"Title":"Route reuse strategy throwing RangeError: Maximum call stack size exceeded in Angular 13","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nrouter\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWe have a considerable large angular app, where we use custom route reuse strategy for performance gains.\r\nThe route reuse strategy we use was working perfectly fine in angular 12. However, when we upgraded to Angular 13 we have started seeing the following error:\r\n\r\n`Error: Uncaught (in promise): RangeError: Maximum call stack size exceeded`\r\n\r\nThe error happens in this scenario:\r\n- Go to Route A\r\n- Go to Route B\r\n- Go to Route A again(either by hitting browser back, or by going to the route A through href on <a> tag on page B), crash and navigation doesn't happen.\r\n\r\nThe inifinite loop is happening inside Angular router's code (router.mjs) in RouterStateSnapshot's constructor, that calls into following function:\r\n\r\n`function setRouterState(state, node) {\r\n    node.value._routerState = state;\r\n    node.children.forEach(c => setRouterState(state, c));\r\n}`\r\n\r\nHere is how we have our custom route reuse strategy:\r\n\r\n`import {\r\n\tRouteReuseStrategy,\r\n\tDetachedRouteHandle,\r\n\tActivatedRouteSnapshot,\r\n} from \"@angular/router\";\r\n\r\nexport class CustomRouteReuseStrategy implements RouteReuseStrategy {\r\n\tprivate handlers: { [key: string]: DetachedRouteHandle } = {};\r\n\r\n\tconstructor() {}\r\n\r\n\tpublic shouldDetach(_route: ActivatedRouteSnapshot): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic store(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\thandle: DetachedRouteHandle\r\n\t): void {\r\n\t\tthis.handlers[route.data.title] = handle;\r\n\t}\r\n\r\n\tpublic shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n\t\treturn !!this.handlers[route.data.title];\r\n\t}\r\n\r\n\tpublic retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\r\n\t\treturn this.handlers[route.data.title];\r\n\t}\r\n\r\n\tpublic shouldReuseRoute(\r\n\t\tfuture: ActivatedRouteSnapshot,\r\n\t\tcurr: ActivatedRouteSnapshot\r\n\t): boolean {\r\n\t\tconst reuse = future.routeConfig === curr.routeConfig;\r\n\t\treturn reuse;\r\n\t}\r\n}\r\n`\r\n\r\nHere is how we add route to Routing Module:\r\n\r\n`\r\n\t{\r\n\t\tpath: \"post/:id\",\r\n\t\tloadChildren: () =>\r\n\t\t\timport(\"path-to-post-module\").then(\r\n\t\t\t\t(module) => module.PostModule\r\n\t\t\t),\r\n\t\tdata: { title: \"post\" },\r\n\t},`\r\n\r\nThis may sound like a stack overflow question, but this setup used to work in Angular 12 without any issues. So, I'm not sure what changed in version 13, that's causing this crash. If I remove the route reuse strategy, this error doesn't happen, but obviously we want the route reuse in our app.\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: Uncaught (in promise): RangeError: Maximum call stack size exceeded\r\nRangeError: Maximum call stack size exceeded\r\n    at setRouterState (router.mjs:1610)\r\n    at router.mjs:1612\r\n    at Array.forEach (<anonymous>)\r\n    at setRouterState (router.mjs:1612)\r\n    at router.mjs:1612\r\n    at Array.forEach (<anonymous>)\r\n    at setRouterState (router.mjs:1612)\r\n    at router.mjs:1612\r\n    at Array.forEach (<anonymous>)\r\n    at setRouterState (router.mjs:1612)\r\n    at resolvePromise (zone.js:1213)\r\n    at resolvePromise (zone.js:1167)\r\n    at zone.js:1279\r\n    at ZoneDelegate.invokeTask (zone.js:406)\r\n    at Object.onInvokeTask (core.mjs:25463)\r\n    at ZoneDelegate.invokeTask (zone.js:405)\r\n    at Zone.runTask (zone.js:178)\r\n    at drainMicroTaskQueue (zone.js:582)\r\n    at invokeTask (zone.js:491)\r\n    at ZoneTask.invoke (zone.js:476)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.0.3\r\nNode: 14.15.5\r\nPackage Manager: npm 6.14.11\r\nOS: linux x64\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1300.3 (cli-only)\r\n@angular-devkit/core         13.0.3 (cli-only)\r\n@angular-devkit/schematics   13.0.3 (cli-only)\r\n@schematics/angular          13.0.3 (cli-only)\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44383","RelatedDescription":"Open issue \"Route reuse strategy throwing RangeError: Maximum call stack size exceeded in Angular 13\" (#44383)"},{"Id":"1071557549","IsPullRequest":true,"CreatedAt":"2021-12-05T21:06:25","Actor":"gkalpak","Number":"44382","RawContent":null,"Title":"fix(ngcc): correctly resolve UMD dependencies","State":"open","Body":"_This is a backport of #44381 to the `12.2.x` branch._\r\n\r\n##\r\nPreviously, when processing UMD, ngcc assumed that the `exports` argument of the CommonJS factory call (if present) would be the first argument of the call. This is generally true for the supported UMD formats, but can change if ngcc prepends more imports (and thus factory arguments) while processing the module. This could lead to errors when trying to collect dependencies of an already processed module.\r\n(This was accidentally broken in #44245 (commit 2bc3522e167).)\r\n\r\nThis commit fixes it by not making any assumptions about the position of an `exports` argument in the CommonJS factory call.\r\n\r\nFixes #44380.\r\n","Url":"https://github.com/angular/angular/pull/44382","RelatedDescription":"Open PR \"fix(ngcc): correctly resolve UMD dependencies\" (#44382)"},{"Id":"1071556863","IsPullRequest":true,"CreatedAt":"2021-12-05T21:03:22","Actor":"gkalpak","Number":"44381","RawContent":null,"Title":"fix(ngcc): correctly resolve UMD dependencies","State":"open","Body":"Previously, when processing UMD, ngcc assumed that the `exports` argument of the CommonJS factory call (if present) would be the first argument of the call. This is generally true for the supported UMD formats, but can change if ngcc prepends more imports (and thus factory arguments) while processing the module. This could lead to errors when trying to collect dependencies of an already processed module.\r\n(This was accidentally broken in #44245 (commit 2bc3522e167).)\r\n\r\nThis commit fixes it by not making any assumptions about the position of an `exports` argument in the CommonJS factory call.\r\n\r\nFixes #44380.","Url":"https://github.com/angular/angular/pull/44381","RelatedDescription":"Open PR \"fix(ngcc): correctly resolve UMD dependencies\" (#44381)"},{"Id":"1070467141","IsPullRequest":false,"CreatedAt":"2021-12-05T20:23:34","Actor":"Adibla","Number":"44364","RawContent":null,"Title":"Error: Cannot find module from import in component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHi, I've an issue when I try to import from a component external js file, which path is passed as Input property. Using directly a string causes no problem, and module is correctly imported.  \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://codesandbox.io/s/priceless-mirzakhani-t50f0?file=/src/app/sample.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nError: Cannot find module\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44364","RelatedDescription":"Closed issue \"Error: Cannot find module from import in component\" (#44364)"},{"Id":"1071510367","IsPullRequest":false,"CreatedAt":"2021-12-05T17:14:29","Actor":"NareshSmith","Number":"44380","RawContent":null,"Title":"Error: Argument at index 2 of UMD factory call is not a `require` call with a single string argument","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler, upgrade\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nHi Team, After upgrade our existing project from  angular 12 to 13, It starting throwing error and stucked at generating browser application bundle phase. Please find the error below:\r\n\r\n```\r\nError: Argument at index 2 of UMD factory call is not a `require` call with a single string argument:\r\nfactory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('perfect-scrollbar'), require('rxjs'), require('rxjs/operators'), require('@angular/common'))\r\n    at getRequiredModulePath (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:3627:11)\r\n    at getImportsOfUmdModule (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:3618:15)\r\n    at UmdDependencyHost.extractImports (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:4085:37)\r\n    at UmdDependencyHost.recursivelyCollectDependencies (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:1459:26)\r\n    at UmdDependencyHost.collectDependencies (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:1445:12)\r\n    at DependencyResolver.getEntryPointWithDependencies (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:3833:12)\r\n    at EntryPointCollector.walkDirectoryForPackages (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:4403:40)\r\n    at EntryPointCollector.walkDirectoryForPackages (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:4423:32)\r\n    at file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:4557:70\r\n    at trackDuration (file:///***/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:4154:18)\r\n(node:12620) UnhandledPromiseRejectionWarning: Error: NGCC failed.\r\n    at NgccProcessor.process (***\\node_modules\\@ngtools\\webpack\\src\\ngcc_processor.js:146:19)\r\n    at ***\\node_modules\\@ngtools\\webpack\\src\\ivy\\plugin.js:141:27\r\n    at Hook.eval [as call] (eval at create (***\\node_modules\\tapable\\lib\\HookCodeFactory.js:19:10), <anonymous>:24:1)\r\n    at Hook.CALL_DELEGATE [as _call] (***\\node_modules\\tapable\\lib\\Hook.js:14:14)\r\n    at Compiler.newCompilation (***\\node_modules\\webpack\\lib\\Compiler.js:1054:30)\r\n    at ***\\node_modules\\webpack\\lib\\Compiler.js:1099:29\r\n    at eval (eval at create (***\\node_modules\\tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:31:1)\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:12620) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\r\n(node:12620) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n```\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44380","RelatedDescription":"Open issue \"Error: Argument at index 2 of UMD factory call is not a `require` call with a single string argument\" (#44380)"},{"Id":"1071492315","IsPullRequest":true,"CreatedAt":"2021-12-05T15:53:15","Actor":"dario-piotrowicz","Number":"44379","RawContent":null,"Title":"docs(animations): add `:enter` and `:leave` info to query api docs","State":"open","Body":"add information to the query api docs clarifying what elements can be\r\nqueried as entering and leaving (as that is not currently clearly\r\ndocumented and has caused confusions to developers)\r\n\r\none of the tasks of issue #44253\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #44253\r\n\r\nThe query api docs do not clearly specify what elements can be queried via `:enter` and `:leave`\r\n\r\n## What is the new behavior?\r\n\r\nInformation regarding elements that can be queried via `:enter` and `:leave` has been added \r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/44379","RelatedDescription":"Open PR \"docs(animations): add `:enter` and `:leave` info to query api docs\" (#44379)"},{"Id":"1071401626","IsPullRequest":true,"CreatedAt":"2021-12-05T08:28:45","Actor":"crisbeto","Number":"44378","RawContent":null,"Title":"refactor(animations): remove unnecessary code","State":"open","Body":"* The `TransitionAnimationEngine` had a fallback where it would store classes directly on a node if it doesn't have a `classList`. Presumably this is to support old browsers or if an animation is set on something like `ng-container`. This information was never used for anything since `containsClass` was never called. These changes simplify the logic to just a null check.\r\n* Deprecates the `AnimationDriver.matchesElement` method, because it was only used in one place which can be replaced with `classList.contains`. We can't remove the method completely, because `AnimationDriver` is a public API. We also can't turn it into a method on the base class in order to remove it from the sub-classes, because it can break apps using `noImplicitOverride` while extending `AnimationDriver`.","Url":"https://github.com/angular/angular/pull/44378","RelatedDescription":"Open PR \"refactor(animations): remove unnecessary code\" (#44378)"},{"Id":"1071230766","IsPullRequest":true,"CreatedAt":"2021-12-04T15:20:20","Actor":"dario-piotrowicz","Number":"44377","RawContent":null,"Title":"test: spy on console.error in configureTestingModule reset test","State":"open","Body":"improve the configureTestingModule reset test by also spying on\r\nconsole.error and making sure that an error is logged to the user\r\nwhen it should be\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\nWhen running the web karma unit tests (https://github.com/angular/angular/blob/master/docs/BAZEL.md#debugging-a-karma-test) one test always shows a console error:\r\n![Screenshot at 2021-12-04 14-50-05](https://user-images.githubusercontent.com/61631103/144714765-882de6fe-5ae0-4326-8ed0-e07f7a750808.png)\r\n\r\nThat is not a real issue/error as it the expected behavior in the test, but it does always appear and can lead to devs not familiar with it to think that something is going wrong (/is broken) somewhere\r\n\r\n## What is the new behavior?\r\n\r\nA spy has been added on console.error so that\r\n - the error is not shown anymore in the tests results\r\n - we actually also check that the error is being shown to the user, which is the expected behavior\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/44377","RelatedDescription":"Open PR \"test: spy on console.error in configureTestingModule reset test\" (#44377)"},{"Id":"1071212563","IsPullRequest":true,"CreatedAt":"2021-12-04T13:53:25","Actor":"dario-piotrowicz","Number":"44376","RawContent":null,"Title":"docs(animations): add links to `state()` references","State":"open","Body":"the keyword 'state' is included in the `ignoredWords` set that prevents\r\ncertain words to be autolinked, this causes the animations' state\r\nfunction not to be automatically linked, so manually link those\r\nreferences to the state api docs\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Issue\r\n\r\nIssue Number: N/A\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/44376","RelatedDescription":"Open PR \"docs(animations): add links to `state()` references\" (#44376)"},{"Id":"1071101820","IsPullRequest":true,"CreatedAt":"2021-12-04T02:45:22","Actor":"AndrewKushnir","Number":"44375","RawContent":null,"Title":"refactor(animations): reuse existing Version class","State":"open","Body":"Animations package has its own implementation of the `Version` class, when other packages use an implementation from `@angular/core`. This commit aligns Animations package with other packages and makes use of the `Version` class from `@angular/core`.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44375","RelatedDescription":"Open PR \"refactor(animations): reuse existing Version class\" (#44375)"},{"Id":"1071051653","IsPullRequest":false,"CreatedAt":"2021-12-03T23:57:15","Actor":"henrikdahl8240","Number":"44373","RawContent":null,"Title":"Angular 13.0.3 Type guards do not work","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn Angular 13, as you use a type guard in a template like *ngIf=\"myMammal.IsDog()\", the compiler does not take the type the type guard resolves into consideration. It means, that inside the *ngIF body, myMammal has the type Mammal and not Dog.\r\n\r\nIn Angular 12 it worked perfectly.\r\n\r\nCan it be fixed to work again?\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 13.0.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44373","RelatedDescription":"Closed issue \"Angular 13.0.3 Type guards do not work\" (#44373)"},{"Id":"1070591326","IsPullRequest":false,"CreatedAt":"2021-12-03T23:55:58","Actor":"rakhikhengar","Number":"44366","RawContent":null,"Title":"node_modules/@angular/core/core\"' has no exported member 'ɵɵFactoryDeclaration' - Angular 10","State":"closed","Body":"Hello!\r\n\r\nWe are facing an issue as mentioned in the title. When we are doing ng build than its shows an error, see attached. We have tried all possible ways as already shared in GitHub / StackOverflow community. But still, we are facing the same error. \r\n\r\nWe are unable to create the build. Please help us to get it resolved.\r\n\r\nHere, are my package.json dependencies :\r\n```\r\n\"dependencies\": {\r\n\"@angular/animations\": \"~10.1.6\",\r\n\"@angular/cdk\": \"^10.2.5\",\r\n\"@angular/common\": \"~10.1.6\",\r\n\"@angular/compiler\": \"~10.1.6\",\r\n\"@angular/core\": \"~10.1.6\",\r\n\"@angular/forms\": \"~10.1.6\",\r\n\"@angular/material\": \"^10.2.5\",\r\n\"@angular/platform-browser\": \"~10.1.6\",\r\n\"@angular/platform-browser-dynamic\": \"~10.1.6\",\r\n\"@angular/router\": \"~10.1.6\",\r\n\"@angular/service-worker\": \"~10.1.6\",\r\n\"@iplab/ngx-file-upload\": \"^3.1.1\",\r\n\"angular-datatables\": \"10.0.0\",\r\n\"angular-pipes\": \"^10.0.0\",\r\n\"bootstrap\": \"^4.5.3\",\r\n\"braintree-web\": \"^3.71.1\",\r\n\"datatables.net\": \"^1.10.23\",\r\n\"datatables.net-bs4\": \"^1.10.23\",\r\n\"datatables.net-buttons\": \"^1.7.1\",\r\n\"datatables.net-buttons-dt\": \"^1.7.1\",\r\n\"jquery\": \"^3.5.1\",\r\n\"jszip\": \"^3.6.0\",\r\n\"laravel-echo\": \"^1.10.0\",\r\n\"moment\": \"^2.29.1\",\r\n\"ng-connection-service\": \"^1.0.4\",\r\n\"ngx-bootstrap\": \"^6.1.0\",\r\n\"ngx-chips\": \"^2.2.2\",\r\n\"ngx-drag-scroll\": \"^9.0.0-beta.4\",\r\n\"ngx-mask\": \"^11.1.4\",\r\n\"ngx-pagination\": \"^5.0.0\",\r\n\"ngx-pipes\": \"^2.7.5\",\r\n\"ngx-select-dropdown\": \"1.5.0\",\r\n\"popper.js\": \"^1.16.1\",\r\n\"pusher-js\": \"^7.0.2\",\r\n\"rxjs\": \"~6.6.0\",\r\n\"sweetalert2\": \"^10.15.7\",\r\n\"tslib\": \"^2.0.0\",\r\n\"uuid\": \"^8.3.2\",\r\n\"zone.js\": \"~0.10.2\"\r\n```\r\nHere, are my tsconfig.json\r\n```\r\n\r\n/* To learn more about this file see: https://angular.io/config/tsconfig. */\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"./\",\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"sourceMap\": true,\r\n    \"declaration\": false,\r\n    \"downlevelIteration\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"moduleResolution\": \"node\",\r\n    \"importHelpers\": true,\r\n    \"target\": \"es2015\",\r\n    \"module\": \"es2020\",\r\n    \"lib\": [\"es2018\", \"dom\"],\r\n    \"esModuleInterop\": true,\r\n    \"skipLibCheck\": true,\r\n    \"paths\": {\r\n      \"@angular/*\": [\"./node_modules/@angular/*\"]\r\n    }    \r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"enableIvy\": true\r\n  },\r\n}\r\n\r\n```\r\nWe are using version as below : \r\n\r\n```\r\nAngular CLI: 10.1.7\r\nNode: 14.14.0\r\nOS: linux x64\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/27191001/144607189-f2aeca30-5209-4738-bc30-80644109f08a.png)\r\n\r\nThanks!","Url":"https://github.com/angular/angular/issues/44366","RelatedDescription":"Closed issue \"node_modules/@angular/core/core\"' has no exported member 'ɵɵFactoryDeclaration' - Angular 10\" (#44366)"},{"Id":"1070960642","IsPullRequest":false,"CreatedAt":"2021-12-03T20:55:40","Actor":"danielehrhardt","Number":"44372","RawContent":null,"Title":"Angular 13 Build Times increased a lot","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nSince I upgraded some Projects from Angular 12 to Angular 13 the build times increased by factor 3x.\r\n\r\nSame Project (Build by Github Actions):\r\nAngular 12 ➤ 6 min \r\nAngular 13 ➤ 18 min\r\n\r\nI can see this in multiple Angular Projects. I did the upgrade with ng update. \r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo errors.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.0.2\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.3\r\nOS: darwin arm64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1300.2 (cli-only)\r\n@angular-devkit/core         13.0.2 (cli-only)\r\n@angular-devkit/schematics   13.0.2 (cli-only)\r\n@schematics/angular          13.0.2 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44372","RelatedDescription":"Open issue \"Angular 13 Build Times increased a lot\" (#44372)"},{"Id":"1070855519","IsPullRequest":true,"CreatedAt":"2021-12-03T18:39:03","Actor":"dylhunn","Number":"44370","RawContent":null,"Title":"feat(forms): Fix weak helper types in the Forms package","State":"open","Body":"Fix weak helper types in the Forms package, mostly `Function` types that can be strengthened to specific callbacks. This was original proposed as part of Typed Forms, but it should be possible to submit at least some of these changes separately and unconditionally (i.e. without relying on `TypedOrUntyped`.)\r\n\r\nIt is desirable to land this separately to reduce the scope of the Typed Forms PR, by focusing it only on the new type parameters (rather than incidental strictness fixes). Submitting separately will also reduce the complexity of the final API, by seeing if we can land these without relying on `TypedOrUntyped`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nMany forms methods have unnecessarily weak types (e.g. `Function`).\r\n\r\nIssue Number: #13721\r\n\r\n\r\n## What is the new behavior?\r\nThe types of these methods are strengthened to specific callbacks.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\nThis is *technically* breaking, but the affected methods are mostly internal. Also, any invocations of these methods that don't fit the specified callback types are incorrect, and can be fixed in g3 as part of landing the change. Overall, this is a breaking change in name only that should be extremely low risk.\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44370","RelatedDescription":"Open PR \"feat(forms): Fix weak helper types in the Forms package\" (#44370)"},{"Id":"1070272806","IsPullRequest":true,"CreatedAt":"2021-12-03T16:49:47","Actor":"renovate[bot]","Number":"44362","RawContent":null,"Title":"build: update dependency jsdom to v19","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [jsdom](https://togithub.com/jsdom/jsdom) | [`^18.0.0` -> `^19.0.0`](https://renovatebot.com/diffs/npm/jsdom/18.0.1/19.0.0) | [![age](https://badges.renovateapi.com/packages/npm/jsdom/19.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jsdom/19.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jsdom/19.0.0/compatibility-slim/18.0.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jsdom/19.0.0/confidence-slim/18.0.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jsdom/jsdom</summary>\n\n### [`v19.0.0`](https://togithub.com/jsdom/jsdom/blob/master/Changelog.md#&#8203;1900)\n\n[Compare Source](https://togithub.com/jsdom/jsdom/compare/18.1.1...19.0.0)\n\n-   Changed `jsdom.nodeLocation()` to return `undefined` when used on nodes that originate via fragment parsing (e.g., via `innerHTML`). Previously it would return based on the node location of the fragment string, which made node locations unreliable with respect to the original document source. This restores the behavior that was present in v14.0.0, and was accidentally broken in v14.1.0. (bakkot)\n-   Fixed calling `window.close()` inside the `Window`'s `load` event to no longer crash. (MattiasBuelens)\n\n### [`v18.1.1`](https://togithub.com/jsdom/jsdom/blob/master/Changelog.md#&#8203;1811)\n\n[Compare Source](https://togithub.com/jsdom/jsdom/compare/18.1.0...18.1.1)\n\n-   Fixed `connectedCallback` to fire in situations involving document fragments, which was broken in v18.0.1. (GrantGryczan)\n\n### [`v18.1.0`](https://togithub.com/jsdom/jsdom/blob/master/Changelog.md#&#8203;1810)\n\n[Compare Source](https://togithub.com/jsdom/jsdom/compare/18.0.1...18.1.0)\n\n-   Fixed `headers.append()` and `headers.set()` to normalize values. (MattiasBuelens)\n-   Fixed `pageshow` events to have `bubbles: true` and `cancelable: true`. (MattiasBuelens)\n-   Implemented the `reason` property on `AbortSignal`s, along with the corresponding `reason` argument to `abortSignal.abort()` and `AbortSignal.abort()`. (MattiasBuelens)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/44362","RelatedDescription":"Closed or merged PR \"build: update dependency jsdom to v19\" (#44362)"},{"Id":"1070270321","IsPullRequest":true,"CreatedAt":"2021-12-03T16:48:50","Actor":"renovate[bot]","Number":"44361","RawContent":null,"Title":"build: update dependency tsec to v0.2.1","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [tsec](https://togithub.com/google/tsec) | [`0.2.0` -> `0.2.1`](https://renovatebot.com/diffs/npm/tsec/0.2.0/0.2.1) | [![age](https://badges.renovateapi.com/packages/npm/tsec/0.2.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/tsec/0.2.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/tsec/0.2.1/compatibility-slim/0.2.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/tsec/0.2.1/confidence-slim/0.2.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>google/tsec</summary>\n\n### [`v0.2.1`](https://togithub.com/google/tsec/compare/a61ceb0f0d02ded9c4278bacfb6d2cab9a2c0fd3...a12f32b7866945b776cfe02edc57604e25c28c08)\n\n[Compare Source](https://togithub.com/google/tsec/compare/a61ceb0f0d02ded9c4278bacfb6d2cab9a2c0fd3...a12f32b7866945b776cfe02edc57604e25c28c08)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/44361","RelatedDescription":"Closed or merged PR \"build: update dependency tsec to v0.2.1\" (#44361)"},{"Id":"1070729549","IsPullRequest":false,"CreatedAt":"2021-12-03T15:27:35","Actor":"jsanta","Number":"44369","RawContent":null,"Title":"Angular 13 >=13.0.3 ng serve throws UnhandledPromiseRejectionWarning: Error: NGCC failed.","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nIt seems to be a regression as when we first updated our project to Angular 13, it didn't happen.\r\nFIxed all @angular/* versions to 13.0.2 and stopped getting the error.\r\nTried it myself and with a couple of coworkers. Same problem.\r\n\r\n### Description\r\n```\r\nnpm run ng serve \r\n[... some other logs ...]\r\n[... exception on exception section]\r\n[.. command stuck on '⠹ Generating browser application bundles (phase: setup)...' ]\r\n\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\nNX monorepo once working with Angular 12 migrated to Angular 13, package.json installed version 13.0.1.\r\nRecently had to delete the node_modules and npm install again. npm installed version 13.0.3\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n(node:24753) UnhandledPromiseRejectionWarning: Error: NGCC failed.\r\n    at NgccProcessor.process (/home/buru/Eze/queplancl/node_modules/@ngtools/webpack/src/ngcc_processor.js:146:19)\r\n    at /home/buru/Eze/queplancl/node_modules/@ngtools/webpack/src/ivy/plugin.js:141:27\r\n    at Hook.eval [as call] (eval at create (/home/buru/Eze/queplancl/node_modules/tapable/lib/HookCodeFactory.js:19:10), <anonymous>:24:1)\r\n    at Hook.CALL_DELEGATE [as _call] (/home/buru/Eze/queplancl/node_modules/tapable/lib/Hook.js:14:14)\r\n    at Compiler.newCompilation (/home/buru/Eze/queplancl/node_modules/webpack/lib/Compiler.js:1054:30)\r\n    at /home/buru/Eze/queplancl/node_modules/webpack/lib/Compiler.js:1099:29\r\n    at eval (eval at create (/home/buru/Eze/queplancl/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:31:1)\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:24753) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n› ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.0.3\r\nNode: 14.17.4\r\nPackage Manager: npm 6.14.14\r\nOS: darwin x64\r\n\r\nAngular: 13.0.3\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, localize, material\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.2\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            13.0.3\r\n@angular-devkit/schematics      13.0.3\r\n@angular/flex-layout            12.0.0-beta.35\r\n@schematics/angular             10.2.3\r\nng-packagr                      13.0.8\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular/issues/44369","RelatedDescription":"Open issue \"Angular 13 >=13.0.3 ng serve throws UnhandledPromiseRejectionWarning: Error: NGCC failed.\" (#44369)"},{"Id":"1070650781","IsPullRequest":false,"CreatedAt":"2021-12-03T15:20:21","Actor":"TMInnovations","Number":"44367","RawContent":null,"Title":"Number input model change not triggered when number incremented using stepUp()","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI extended a number input with a button that triggers the inputs stepUp() method to increment and decrement values.\r\nThe number-model's value doesn't change as the button gets clicked.\r\n\r\nA naive addition in the \"model-world\" leads to wrong results => see plnkr\r\n\r\n**Is there any way to trigger the input's change event in angular OR another way to trigger correct incrementation?**\r\n\r\nSame bug/behavior as in angular.js:\r\nhttps://github.com/angular/angular.js/issues/15146\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://plnkr.co/edit/V9tmBbhr4VNG4FM5\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n\"@angular/common\": \"^8.2.14\",\r\n    \"@angular/compiler\": \"^8.2.14\",\r\n    \"@angular/core\": \"^8.2.14\",\r\n    \"@angular/platform-browser\": \"^8.2.14\",\r\n    \"@angular/platform-browser-dynamic\": \"^8.2.14\",\r\n    \"core-js\": \"2.6.11\",\r\n    \"rxjs\": \"6.5.4\",\r\n    \"zone.js\": \"0.10.2\"\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44367","RelatedDescription":"Closed issue \"Number input model change not triggered when number incremented using stepUp()\" (#44367)"},{"Id":"1070484310","IsPullRequest":true,"CreatedAt":"2021-12-03T11:17:26","Actor":"PatrickPrakash","Number":"44365","RawContent":null,"Title":"docs: Updated described version number","State":"open","Body":"Updated a mentioned version to a recent angular version number to cope up with the latest version\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44365","RelatedDescription":"Open PR \"docs: Updated described version number\" (#44365)"},{"Id":"1070399248","IsPullRequest":true,"CreatedAt":"2021-12-03T09:40:10","Actor":"cexbrayat","Number":"44363","RawContent":null,"Title":"fix(common): stricter type for http methods","State":"open","Body":"(Less breaky) alternative to #44328 \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nThe current API accepts `string` for the HTTP method.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThis commit tightens the API to accept both one of the common  HTTP verb (either in lowercase or in uppercase to preserve the existing behavior), or a `string` to be as less breaking as possible.\r\n\r\nThe common HTTP methods picked are `'GET'|'HEAD'|'POST'|'PUT'|'DELETE'|'CONNECT'|'OPTIONS'|'TRACE'|'PATCH'|'JSONP'` (or one of these in lowercase), based on:\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7231#section-4 for `'GET'|'HEAD'|'POST'|'PUT'|'DELETE'|'CONNECT'|'OPTIONS'|'TRACE'`\r\n- https://datatracker.ietf.org/doc/html/rfc5789#section-2 for `'PATCH`'\r\n- `'JSONP'` as a special one for jsonp support.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44363","RelatedDescription":"Open PR \"fix(common): stricter type for http methods\" (#44363)"},{"Id":"1070246506","IsPullRequest":true,"CreatedAt":"2021-12-03T05:55:39","Actor":"Highbury14","Number":"44360","RawContent":null,"Title":"docs: Correction of sentence structure","State":"open","Body":"Correction of the sentence describing the next step in the tutorial.\r\nThe shopping cart view has already been created by now. \r\nThe checkout-form is to be added to this shopping cart view, in the next section of the tutorial.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe sentence gives a confusing message about what is to be done next.\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe sentence now conveys the correct message about what is to be done next.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44360","RelatedDescription":"Open PR \"docs: Correction of sentence structure\" (#44360)"},{"Id":"1070096268","IsPullRequest":true,"CreatedAt":"2021-12-03T00:19:00","Actor":"ramthir","Number":"44359","RawContent":null,"Title":"refactor(core): make the error messages tree shakable","State":"open","Body":"Long error messages can be tree-shaken in the production build and replaced with error codes.\r\n\r\nSee: https://github.com/angular/angular/pull/44219#issuecomment-983216374\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nLong error messages are not tree-shakable in the production build.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nLong error messages are tree-shaken in the production build and replaced with error codes.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44359","RelatedDescription":"Open PR \"refactor(core): make the error messages tree shakable\" (#44359)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1072492025","IsPullRequest":false,"CreatedAt":"2021-12-06T18:54:07","Actor":"NeilSorensen","Number":"22309","RawContent":null,"Title":"ng serve --public-host issue in 13","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes, this was working in Angular 12\r\n\r\n### Description\r\n\r\nIn spite of the `--public-host` parameter, webpack is attempting to establish a websocket with `wss://localhost/ws`.\r\n\r\nWe run our development environment through a reverse proxy to allow us to host several apps on the same \"domain\" to better simulate our production environment. After upgrading to Angular 13, an app hosted off the main path constantly refreshes because webpack is trying to connect to the app hosted at the root.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nI've produced a repository that reproduces the issue at https://github.com/emmersion/repro-app.  \r\nWith both `base-href` set in `index.html` and `--public-host` set to `http://localhost/foo`, I expect webpack to attempt to connect to `wss://localhost/foo/ws`.\r\nThe easiest way to confirm this is to watch the network tab of the developer tools when loading the app.\r\nInstead, it attempts to connect to `wss://localhost/ws`.\r\nThe problem is particularly acute in my actual dev environment because we host a different angular app at `http://localhost`, leading to constant reloading when the `foo` app connects to the root app's websocket.\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 13.0.4\r\nNode: 14.18.1\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cli                    13.0.4\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nWe're running an Nginx reverse-proxy server. I've included a docker-compose file for a simplified (no https) version of our proxy configuration in the repro-app repository.\r\n","Url":"https://github.com/angular/angular-cli/issues/22309","RelatedDescription":"Open issue \"ng serve --public-host issue in 13\" (#22309)"},{"Id":"1072478149","IsPullRequest":true,"CreatedAt":"2021-12-06T18:39:19","Actor":"kormide","Number":"22308","RawContent":null,"Title":"build: reproduce original package structure using bazel","State":"open","Body":"@gregmagolan @josephperrott \r\n\r\nThis PR modifies the existing bazel rules to reproduce the packages that are currently being produced by the `build.ts` script. I also added version stamping which works for snapshot and release builds.\r\n\r\nThere are still some differences between the `package.json` files that bazel produces compared to `build.ts`, which I will work through in future pull requests. These differences include:\r\n* using tars as dependency versions for local builds\r\n* additional substitutions such as removing devDependencies, merging keywords from the base package.json, etc.\r\n\r\nOnce bazel is producing identical pacakges, I will switch the `build.ts` script to call bazel instead of tsc. Until then, none of this should affect the currently used build process.","Url":"https://github.com/angular/angular-cli/pull/22308","RelatedDescription":"Open PR \"build: reproduce original package structure using bazel\" (#22308)"},{"Id":"1069326346","IsPullRequest":false,"CreatedAt":"2021-12-06T17:30:10","Actor":"wesselvdv","Number":"22277","RawContent":null,"Title":"NG_CLI_PROFILING and DEVKIT_PROFILING don't do anything","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] new\r\n- [x] build\r\n- [x] serve\r\n- [x] test\r\n- [x] e2e\r\n- [x] generate\r\n- [x] add\r\n- [x] update\r\n- [x] lint\r\n- [x] extract-i18n\r\n- [x] run\r\n- [x] config\r\n- [x] help\r\n- [x] version\r\n- [x] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\nI think this is a regression, just not sure when it worked for the last time.\r\n\r\n### Description\r\n\r\nWhen trying to get a cpu profile according to the docs a set of ENV variables can be used, but when enabled it does nothing.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n`DEVKIT_PROFILING=devkit NG_CLI_PROFILING=ng DEBUG=ng:* ng build --progress --verbose`\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: linux x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cli                    13.0.4\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.5.2\r\nwebpack                         5.64.4\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22277","RelatedDescription":"Closed issue \"NG_CLI_PROFILING and DEVKIT_PROFILING don't do anything\" (#22277)"},{"Id":"1070740800","IsPullRequest":true,"CreatedAt":"2021-12-06T14:53:05","Actor":"alan-agius4","Number":"22299","RawContent":null,"Title":"Remove ESM workarounds","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22299","RelatedDescription":"Closed or merged PR \"Remove ESM workarounds\" (#22299)"},{"Id":"1070683616","IsPullRequest":true,"CreatedAt":"2021-12-06T14:52:26","Actor":"alan-agius4","Number":"22297","RawContent":null,"Title":"refactor(@ngtools/webpack): use webpack API to delete assets in compilation","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22297","RelatedDescription":"Closed or merged PR \"refactor(@ngtools/webpack): use webpack API to delete assets in compilation\" (#22297)"},{"Id":"1070491508","IsPullRequest":true,"CreatedAt":"2021-12-06T14:51:17","Actor":"alan-agius4","Number":"22294","RawContent":null,"Title":"fix(@angular-devkit/build-angular): Sass compilation in StackBlitz webcontainers","State":"closed","Body":"\r\n\r\nWhen `process.versions.webcontainer` is a string it means that we are running in a StackBlitz webcontainer. `SassWorkerImplementation` uses `receiveMessageOnPort` Node.js `worker_thread` API to ensure sync behavior which is ~2x faster. However, it is non trivial to support this in a webcontainer and while slower we choose to use `dart-sass` which in Webpack uses the slower async path.\r\n\r\n\r\n// cc @markwhitfeld ","Url":"https://github.com/angular/angular-cli/pull/22294","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): Sass compilation in StackBlitz webcontainers\" (#22294)"},{"Id":"1070429724","IsPullRequest":true,"CreatedAt":"2021-12-06T14:51:01","Actor":"alan-agius4","Number":"22292","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove `NG_BUILD_PROFILING` and `DEVKIT_PROFILING` logic","State":"closed","Body":"\r\n\r\nGenerating a CPU profile using Node.JS `--cpu-prof` or Chrome inspector is preferred.\r\n\r\nCloses #20336","Url":"https://github.com/angular/angular-cli/pull/22292","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove `NG_BUILD_PROFILING` and `DEVKIT_PROFILING` logic\" (#22292)"},{"Id":"1070422204","IsPullRequest":true,"CreatedAt":"2021-12-06T14:50:27","Actor":"alan-agius4","Number":"22291","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fallback to use language ID to set the `dir` attribute","State":"closed","Body":"\r\nIn some cases we don't ship certain locales, or they map to files which are named only the language IDs. Example `en-US`, which it's locale data is available from `@angular/common/locales/en.mjs`\r\n\r\nCloses #22285","Url":"https://github.com/angular/angular-cli/pull/22291","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fallback to use language ID to set the `dir` attribute\" (#22291)"},{"Id":"1069830166","IsPullRequest":false,"CreatedAt":"2021-12-06T14:50:27","Actor":"cexbrayat","Number":"22285","RawContent":null,"Title":"`dir` attribute is not set for default locale `en-US`","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nNo, this is a new feature introduced in v13.1.0-next.3\r\n\r\n### Description\r\n\r\nRunning `ng build --localize` in a brand new CLI app generated with v13.1.0-next.3 outputs the following warning:\r\n\r\n```\r\nLocale data for 'en-US' cannot be found. 'dir' attribute will not be set for this locale.\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n```\r\nnpx @angular/cli@13.1.0-next.3 new dir-attribute --defaults\r\ncd dir-attribute\r\nng add @angular/localize@13.1.0-next.3\r\nng build --localize\r\n```\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nLocale data for 'en-US' cannot be found. 'dir' attribute will not be set for this locale.\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.1.0-next.3\r\nNode: 14.18.1\r\nPackage Manager: npm 6.14.14\r\nOS: darwin x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.0-next.3\r\n@angular-devkit/build-angular   13.1.0-next.3\r\n@angular-devkit/core            13.1.0-next.3\r\n@angular-devkit/schematics      13.1.0-next.3\r\n@angular/cli                    13.1.0-next.3\r\n@angular/localize               13.1.0-next.3\r\n@schematics/angular             13.1.0-next.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n","Url":"https://github.com/angular/angular-cli/issues/22285","RelatedDescription":"Closed issue \"`dir` attribute is not set for default locale `en-US`\" (#22285)"},{"Id":"1069541228","IsPullRequest":true,"CreatedAt":"2021-12-06T14:50:12","Actor":"alan-agius4","Number":"22279","RawContent":null,"Title":"docs: update CPU profiling section","State":"closed","Body":"This section is outdated.\r\n\r\nCloses #20336","Url":"https://github.com/angular/angular-cli/pull/22279","RelatedDescription":"Closed or merged PR \"docs: update CPU profiling section\" (#22279)"},{"Id":"1071925119","IsPullRequest":true,"CreatedAt":"2021-12-06T09:31:31","Actor":"renovate[bot]","Number":"22307","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22307","RelatedDescription":"Open PR \"build: lock file maintenance\" (#22307)"},{"Id":"1071140972","IsPullRequest":false,"CreatedAt":"2021-12-06T08:23:17","Actor":"SamShekhovtsov","Number":"22300","RawContent":null,"Title":"Angular 13 SCSS is not supported","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen I create a new project from scratch using scss - the scss files are completely ignored, styles are not used at all. There is something huge broken in Angular 13 in regards to SCSS.\n\n### Please provide a link to a minimal reproduction of the bug\n\nng new angular-scss-demo\n\n### Please provide the exception or error you saw\n\n```true\nthere are no errors. SCSS styles are just now working.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.0.4\r\nNode: 12.22.7\r\nPackage Manager: npm 8.1.0\r\nOS: linux x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cli                    13.0.4\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/22300","RelatedDescription":"Closed issue \"Angular 13 SCSS is not supported\" (#22300)"},{"Id":"1071852002","IsPullRequest":true,"CreatedAt":"2021-12-06T08:13:15","Actor":"alan-agius4","Number":"22306","RawContent":null,"Title":"fix(@angular-devkit/build-angular): prefer ES2015 entrypoints when application targets ES2019 or lower","State":"open","Body":"Patch version of https://github.com/angular/angular-cli/pull/22305","Url":"https://github.com/angular/angular-cli/pull/22306","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): prefer ES2015 entrypoints when application targets ES2019 or lower\" (#22306)"},{"Id":"1071848208","IsPullRequest":true,"CreatedAt":"2021-12-06T08:09:17","Actor":"alan-agius4","Number":"22305","RawContent":null,"Title":"fix(@angular-devkit/build-angular): prefer ES2015 entrypoints when application targets ES2019 or lower","State":"open","Body":"\r\nPreviously, we always consumed the ES2020 entrypoints, which caused issues in environments where the application compilation target is ES2019 or lower and ES2020 is not supported.\r\n\r\nThis is because we only downlevel code when we target ES5 or below.\r\n\r\n- ES5 or below compilations, ES2015 entrypoints are used and their code is downlevelled to ES5.\r\n- ES2019 or below, ES2015 entrypoints are used and no downlevelling is involved.\r\n- ES2020 or later, ES2020 entrypoints are used.\r\n\r\nCloses #22270","Url":"https://github.com/angular/angular-cli/pull/22305","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): prefer ES2015 entrypoints when application targets ES2019 or lower\" (#22305)"},{"Id":"1071831644","IsPullRequest":false,"CreatedAt":"2021-12-06T08:00:21","Actor":"nicolae536","Number":"22304","RawContent":null,"Title":"ng serve seems to not work when chrome devtools are opened","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli, compiler\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nNg serve doesn't seem to work when chrome dev tools are opened.\r\nThe app seems to work normally when the dev tools are closed.\r\nThis is the network tab when refresh the app.\r\n\r\n![image](https://user-images.githubusercontent.com/9453094/144803827-b09409f1-c241-41d0-8601-b99b7676df4a.png)\r\n\r\nWhen I close the chrome devtools the app just runs fine. We are also using storybook for angular and noticed the same pattern once the dev tools are opened the storybook project fails silently to me it seems the same issue.\r\n\r\nI will try to do a reproduction repository if possible\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/nicolae536/ng-serve-not-working\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nUnfortunately in the console are just failed requests to the dev server like he doesn't want to respond somehow.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nThe package info is from our project: \r\nThe reproduction repro has a lower angular version.\r\n\r\nNode: 16.13.0\r\nPackage Manager: npm\r\nOS: Windows 10\r\nTerminal: Git bash\r\n\r\nAngular packages:\r\n\r\n    \"@angular/animations\": \"~13.0.3\",\r\n    \"@angular/cdk\": \"~13.0.3\",\r\n    \"@angular/common\": \"~13.0.3\",\r\n    \"@angular/compiler\": \"~13.0.3\",\r\n    \"@angular/core\": \"~13.0.3\",\r\n    \"@angular/forms\": \"~13.0.3\",\r\n    \"@angular/google-maps\": \"~13.0.3\",\r\n    \"@angular/material\": \"~13.0.3\",\r\n    \"@angular/platform-browser\": \"~13.0.3\",\r\n    \"@angular/platform-browser-dynamic\": \"~13.0.3\",\r\n    \"@angular/router\": \"~13.0.3\",\r\n    \"@angular/cli\": \"~13.0.4\",\r\n    \"@angular/compiler-cli\": \"~13.0.3\",\r\n    \"@angular/elements\": \"~13.0.3\",\r\n    \"@angular/language-service\": \"~13.0.3\",\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nStart command maybe it matters:\r\n\"start\": \"node --max-old-space-size=4096 ./node_modules/@angular/cli/bin/ng serve --host 0.0.0.0 --port 4999 --disable-host-check\"","Url":"https://github.com/angular/angular-cli/issues/22304","RelatedDescription":"Closed issue \"ng serve seems to not work when chrome devtools are opened\" (#22304)"},{"Id":"1071493616","IsPullRequest":false,"CreatedAt":"2021-12-05T18:57:21","Actor":"jackwootton","Number":"22303","RawContent":null,"Title":"@angular-devkit/architect published as `0.1300.4` npm","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\nN/A\r\n\r\n### Description\r\nThe npm for [@angular-devkit/architect](https://www.npmjs.com/package/@angular-devkit/architect) is published as `0.1300.4` whereas other Angular CLI npms are published as `13.0.4` (for example [@angular-devkit/build-angular](https://www.npmjs.com/package/@angular-devkit/build-angular)). Is this a typo?\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nSee `0.1300.4 • Public • Published 4 days ago` in the screenshot.\r\n![image](https://user-images.githubusercontent.com/1623996/144753827-654e6a19-0558-42a7-b829-79b9d4579ac1.png)\r\n\r\n## 🔥 Exception or Error\r\n\r\nN/A\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 12.0.4\r\nNode: 14.18.1\r\nPackage Manager: npm 8.1.3\r\nOS: linux x64\r\n\r\nAngular: <error>\r\n... animations, cdk, common, compiler, compiler-cli, core, fire\r\n... flex-layout, forms, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1200.4 (cli-only)\r\n@angular-devkit/build-angular   <error>\r\n@angular-devkit/core            12.0.4 (cli-only)\r\n@angular-devkit/schematics      12.0.4 (cli-only)\r\n@angular/cli                    12.0.4 (cli-only)\r\n@schematics/angular             12.0.4 (cli-only)\r\nrxjs                            6.6.7 (cli-only)\r\ntypescript                      <error>\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22303","RelatedDescription":"Closed issue \"@angular-devkit/architect published as `0.1300.4` npm\" (#22303)"},{"Id":"1071179341","IsPullRequest":false,"CreatedAt":"2021-12-04T11:01:29","Actor":"acklj1","Number":"22302","RawContent":null,"Title":"[bug] electron16 + angular13 use ipcRenderer, get error","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nno\r\n\r\n### Description\r\n\r\nelectron16 + angular13 use ipcRenderer, get error\r\n\r\n![image](https://user-images.githubusercontent.com/18612941/144705985-9805d503-3d42-4249-8068-edf53796e7d8.png)\r\n\r\nI search other issue, answer is change webpack config, but angular builder is not webpack\r\n![image](https://user-images.githubusercontent.com/18612941/144706091-ed259d5a-fcf6-4009-8821-cb3f231c96bc.png)\r\nbuilder is angular-devkit/build-angular:browser\r\nI must use ipcRenderer, like\r\nimport { ipcRenderer } from 'electron';\r\n\r\nbut ng build is error\r\n\r\nplease help to resolve it\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n./node_modules/electron/index.js:1:11-24 - Error: Module not found: Error: Can't resolve 'fs' in 'D:\\gitproject\\das\\das\\node_modules\\electron'\r\n\r\n./node_modules/electron/index.js:3:13-28 - Error: Module not found: Error: Can't resolve 'path' in 'D:\\gitproject\\das\\das\\node_modules\\electron'\r\n\r\nBREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.\r\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\r\n\r\nIf you want to include a polyfill, you need to:\r\n        - add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\r\n        - install 'path-browserify'\r\nIf you don't want to include a polyfill, you can use an empty module like this:\r\n        resolve.fallback: { \"path\": false }\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.0.4\r\nNode: 16.13.1\r\nPackage Manager: npm 8.1.2\r\nOS: win32 x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cli                    13.0.4\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22302","RelatedDescription":"Closed issue \"[bug] electron16 + angular13 use ipcRenderer, get error\" (#22302)"},{"Id":"1071157953","IsPullRequest":true,"CreatedAt":"2021-12-04T08:28:48","Actor":"renovate[bot]","Number":"22301","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@bazel/buildifier](https://togithub.com/bazelbuild/buildtools) | [`4.2.3` -> `4.2.4`](https://renovatebot.com/diffs/npm/@bazel%2fbuildifier/4.2.3/4.2.4) | [![age](https://badges.renovateapi.com/packages/npm/@bazel%2fbuildifier/4.2.4/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@bazel%2fbuildifier/4.2.4/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@bazel%2fbuildifier/4.2.4/compatibility-slim/4.2.3)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@bazel%2fbuildifier/4.2.4/confidence-slim/4.2.3)](https://docs.renovatebot.com/merge-confidence/) |\n| [@types/babel__core](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | [`7.1.16` -> `7.1.17`](https://renovatebot.com/diffs/npm/@types%2fbabel__core/7.1.16/7.1.17) | [![age](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.17/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.17/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.17/compatibility-slim/7.1.16)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.17/confidence-slim/7.1.16)](https://docs.renovatebot.com/merge-confidence/) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.5.0` -> `5.6.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.5.0/5.6.0) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.6.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.6.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.6.0/compatibility-slim/5.5.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.6.0/confidence-slim/5.5.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.5.0` -> `5.6.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.5.0/5.6.0) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.6.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.6.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.6.0/compatibility-slim/5.5.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.6.0/confidence-slim/5.5.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [core-js](https://togithub.com/zloirock/core-js) | [`3.19.2` -> `3.19.3`](https://renovatebot.com/diffs/npm/core-js/3.19.2/3.19.3) | [![age](https://badges.renovateapi.com/packages/npm/core-js/3.19.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/core-js/3.19.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/core-js/3.19.3/compatibility-slim/3.19.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/core-js/3.19.3/confidence-slim/3.19.2)](https://docs.renovatebot.com/merge-confidence/) |\n| [esbuild](https://togithub.com/evanw/esbuild) | [`0.14.1` -> `0.14.2`](https://renovatebot.com/diffs/npm/esbuild/0.14.1/0.14.2) | [![age](https://badges.renovateapi.com/packages/npm/esbuild/0.14.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild/0.14.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild/0.14.2/compatibility-slim/0.14.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild/0.14.2/confidence-slim/0.14.1)](https://docs.renovatebot.com/merge-confidence/) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | [`0.14.1` -> `0.14.2`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.14.1/0.14.2) | [![age](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.2/compatibility-slim/0.14.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.2/confidence-slim/0.14.1)](https://docs.renovatebot.com/merge-confidence/) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | [`8.3.0` -> `8.4.1`](https://renovatebot.com/diffs/npm/eslint/8.3.0/8.4.1) | [![age](https://badges.renovateapi.com/packages/npm/eslint/8.4.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/eslint/8.4.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/eslint/8.4.1/compatibility-slim/8.3.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/eslint/8.4.1/confidence-slim/8.3.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [webpack](https://togithub.com/webpack/webpack) | [`5.64.4` -> `5.65.0`](https://renovatebot.com/diffs/npm/webpack/5.64.4/5.65.0) | [![age](https://badges.renovateapi.com/packages/npm/webpack/5.65.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/webpack/5.65.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/webpack/5.65.0/compatibility-slim/5.64.4)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/webpack/5.65.0/confidence-slim/5.64.4)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/buildtools</summary>\n\n### [`v4.2.4`](https://togithub.com/bazelbuild/buildtools/releases/4.2.4)\n\n[Compare Source](https://togithub.com/bazelbuild/buildtools/compare/4.2.3...4.2.4)\n\n-   Minor bug fixes\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.6.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/CHANGELOG.md#&#8203;560-httpsgithubcomtypescript-eslinttypescript-eslintcomparev550v560-2021-12-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.5.0...v5.6.0)\n\n##### Features\n\n-   **scope-manager:** support TS4.5 import/export specifier kind ([#&#8203;4234](https://togithub.com/typescript-eslint/typescript-eslint/issues/4234)) ([833f822](https://togithub.com/typescript-eslint/typescript-eslint/commit/833f8221ce00aecb7d08c519bab9568353850f48))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.6.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/CHANGELOG.md#&#8203;560-httpsgithubcomtypescript-eslinttypescript-eslintcomparev550v560-2021-12-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.5.0...v5.6.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>zloirock/core-js (core-js)</summary>\n\n### [`v3.19.3`](https://togithub.com/zloirock/core-js/blob/master/CHANGELOG.md#&#8203;3193---20211206)\n\n[Compare Source](https://togithub.com/zloirock/core-js/compare/v3.19.2...v3.19.3)\n\n-   Fixed internal slots check in methods of some built-in types, [#&#8203;1017](https://togithub.com/zloirock/core-js/issues/1017)\n-   Fixed `URLSearchParams` iterator `.next` that should be enumerable [by the spec](https://webidl.spec.whatwg.org/#es-iterator-prototype-object)\n-   Refactored `Subscription`\n-   Added NodeJS 17.2 compat data mapping\n\n</details>\n\n<details>\n<summary>zloirock/core-js (core-js)</summary>\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.14.2`](https://togithub.com/evanw/esbuild/blob/master/CHANGELOG.md#&#8203;0142)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.14.1...v0.14.2)\n\n-   Add `[ext]` placeholder for path templates ([#&#8203;1799](https://togithub.com/evanw/esbuild/pull/1799))\n\n    This release adds the `[ext]` placeholder to the `--entry-names=`, `--chunk-names=`, and `--asset-names=` configuration options. The `[ext]` placeholder takes the value of the file extension without the leading `.`, and can be used to place output files with different file extensions into different folders. For example, `--asset-names=assets/[ext]/[name]-[hash]` might generate an output path of `assets/png/image-LSAMBFUD.png`.\n\n    This feature was contributed by [@&#8203;LukeSheard](https://togithub.com/LukeSheard).\n\n-   Disable star-to-clause transform for external imports ([#&#8203;1801](https://togithub.com/evanw/esbuild/issues/1801))\n\n    When bundling is enabled, esbuild automatically transforms `import * as x from 'y'; x.z()` into `import {z} as 'y'; z()` to improve tree shaking. This avoids needing to create the import namespace object `x` if it's unnecessary, which can result in the removal of large amounts of unused code. However, this transform shouldn't be done for external imports because that incorrectly changes the semantics of the import. If the export `z` doesn't exist in the previous example, the value `x.z` is a property access that is undefined at run-time, but the value `z` is an import error that will prevent the code from running entirely. This release fixes the problem by avoiding doing this transform for external imports:\n\n    ```js\n    // Original code\n    import * as x from 'y';\n    x.z();\n\n    // Old output (with --bundle --format=esm --external:y)\n    import { z } from \"y\";\n    z();\n\n    // New output (with --bundle --format=esm --external:y)\n    import * as x from \"y\";\n    x.z();\n    ```\n\n-   Disable `calc()` transform for numbers with many fractional digits ([#&#8203;1821](https://togithub.com/evanw/esbuild/issues/1821))\n\n    Version 0.13.12 introduced simplification of `calc()` expressions in CSS when minifying. For example, `calc(100% / 4)` turns into `25%`. However, this is problematic for numbers with many fractional digits because either the number is printed with reduced precision, which is inaccurate, or the number is printed with full precision, which could be longer than the original expression. For example, turning `calc(100% / 3)` into `33.33333%` is inaccurate and turning it into `33.333333333333336%` likely isn't desired. In this release, minification of `calc()` is now disabled when any number in the result cannot be represented to full precision with at most five fractional digits.\n\n-   Fix an edge case with `catch` scope handling ([#&#8203;1812](https://togithub.com/evanw/esbuild/issues/1812))\n\n    This release fixes a subtle edge case with `catch` scope and destructuring assignment. Identifiers in computed properties and/or default values inside the destructuring binding pattern should reference the outer scope, not the inner scope. The fix was to split the destructuring pattern into its own scope, separate from the `catch` body. Here's an example of code that was affected by this edge case:\n\n    ```js\n    // Original code\n    let foo = 1\n    try {\n      throw ['a', 'b']\n    } catch ({ [foo]: y }) {\n      let foo = 2\n      assert(y === 'b')\n    }\n\n    // Old output (with --minify)\n    let foo=1;try{throw[\"a\",\"b\"]}catch({[o]:t}){let o=2;assert(t===\"b\")}\n\n    // New output (with --minify)\n    let foo=1;try{throw[\"a\",\"b\"]}catch({[foo]:t}){let o=2;assert(t===\"b\")}\n    ```\n\n-   Go 1.17.2 was upgraded to Go 1.17.4\n\n    The previous release was built with Go 1.17.2, but this release is built with Go 1.17.4. This is just a routine upgrade. There are no changes significant to esbuild outside of some security-related fixes to Go's HTTP stack (but you shouldn't be running esbuild's dev server in production anyway).\n\n    One notable change related to this is that esbuild's publishing script now ensures that git's state is free of uncommitted and/or untracked files before building. Previously this wasn't the case because publishing esbuild involved changing the version number, running the publishing script, and committing at the end, which meant that files were uncommitted during the build process. I also typically had some untracked test files in the same directory during publishing (which is harmless).\n\n    This matters because there's an upcoming change in Go 1.18 where the Go compiler will include metadata about whether there are untracked files or not when doing a build: [https://github.com/golang/go/issues/37475](https://togithub.com/golang/go/issues/37475). Changing esbuild's publishing script should mean that when esbuild upgrades to Go 1.18, esbuild's binary executables will be marked as being built off of a specific commit without any modifications. This is important for reproducibility. Checking out a specific esbuild commit and building it should give a bitwise-identical binary executable to one that I published. But if this metadata indicated that there were untracked files during the published build, then the resulting executable would no longer be bitwise-identical.\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.4.1`](https://togithub.com/eslint/eslint/releases/v8.4.1)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.4.0...v8.4.1)\n\n#### Bug Fixes\n\n-   [`234e3d9`](https://togithub.com/eslint/eslint/commit/234e3d98eeab8956cefb14c982b9c348c21bb2d9) fix: revert changes to reported locations in max-lines-per-function ([#&#8203;15397](https://togithub.com/eslint/eslint/issues/15397)) (Milos Djermanovic)\n\n#### Documentation\n\n-   [`fa4d483`](https://togithub.com/eslint/eslint/commit/fa4d4830a0e77f92154079ada17ffb893ce64232) docs: fix typo in example for `sort-keys` rule ([#&#8203;15393](https://togithub.com/eslint/eslint/issues/15393)) (Nitin Kumar)\n\n### [`v8.4.0`](https://togithub.com/eslint/eslint/releases/v8.4.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.3.0...v8.4.0)\n\n##### Features\n\n-   [`5771663`](https://togithub.com/eslint/eslint/commit/5771663e8d3e86fec9454ee0af439c6989506bf3) feat: add `allowReserved` parser option ([#&#8203;15387](https://togithub.com/eslint/eslint/issues/15387)) (Milos Djermanovic)\n-   [`32ac37a`](https://togithub.com/eslint/eslint/commit/32ac37a76b2e009a8f106229bc7732671d358189) feat: Flat config support in Linter (refs [#&#8203;13481](https://togithub.com/eslint/eslint/issues/13481)) ([#&#8203;15185](https://togithub.com/eslint/eslint/issues/15185)) (Nicholas C. Zakas)\n-   [`d041f34`](https://togithub.com/eslint/eslint/commit/d041f345cdf0306f15faa2f305fe1d21ef137eb1) feat: Treat Class/New Expressions as truthy in no-constant-condition ([#&#8203;15326](https://togithub.com/eslint/eslint/issues/15326)) (Jordan Eldredge)\n-   [`8f44cf5`](https://togithub.com/eslint/eslint/commit/8f44cf505765b663e371412ab57f0f1dbbe78513) feat: report only lines that exceed the limit in max-lines-per-function ([#&#8203;15140](https://togithub.com/eslint/eslint/issues/15140)) (Sneh Khatri)\n-   [`808ad35`](https://togithub.com/eslint/eslint/commit/808ad35f204c838cd5eb8d766807dc43692f42f9) feat: pass cwd to formatters (refs [eslint/rfcs#&#8203;57](https://togithub.com/eslint/rfcs/issues/57)) ([#&#8203;13392](https://togithub.com/eslint/eslint/issues/13392)) (Toru Nagashima)\n-   [`f1b7499`](https://togithub.com/eslint/eslint/commit/f1b7499a5162d3be918328ce496eb80692353a5a) feat: support async formatters ([#&#8203;15243](https://togithub.com/eslint/eslint/issues/15243)) (MO)\n\n##### Bug Fixes\n\n-   [`4940cc5`](https://togithub.com/eslint/eslint/commit/4940cc5c4903a691fe51d409137dd573c4c7706e) fix: mark --rulesdir option as deprecated in CLI docs ([#&#8203;15310](https://togithub.com/eslint/eslint/issues/15310)) (Kevin Partington)\n\n##### Documentation\n\n-   [`54deec5`](https://togithub.com/eslint/eslint/commit/54deec56bc25d516becaf767769ee7543f491d62) docs: update integrations.md ([#&#8203;15380](https://togithub.com/eslint/eslint/issues/15380)) (Vlad Sholokhov)\n-   [`fa0423a`](https://togithub.com/eslint/eslint/commit/fa0423af7f8453f6c97b915b3b026f258b76a600) docs: fix typo in PR template ([#&#8203;15365](https://togithub.com/eslint/eslint/issues/15365)) (Nitin Kumar)\n-   [`e233920`](https://togithub.com/eslint/eslint/commit/e233920857e282ba22116ad5f1dcc6dfabc8ef5b) docs: enable a few more markdownlint rules and fix violations ([#&#8203;15368](https://togithub.com/eslint/eslint/issues/15368)) (Bryan Mishkin)\n-   [`632176d`](https://togithub.com/eslint/eslint/commit/632176dc43180ea4e7f99da429fee3ee3814a04d) docs: Dedent needlessly indented example in getter-return docs ([#&#8203;15363](https://togithub.com/eslint/eslint/issues/15363)) (Jordan Eldredge)\n-   [`4497e88`](https://togithub.com/eslint/eslint/commit/4497e880248c24dc19eea8a5466555b847c0c7eb) docs: Update release notes blog post template ([#&#8203;15285](https://togithub.com/eslint/eslint/issues/15285)) (Nicholas C. Zakas)\n\n##### Chores\n\n-   [`efede90`](https://togithub.com/eslint/eslint/commit/efede90d59edc5cca9cd739df7e98f1ff00ca37d) chore: upgrade [@&#8203;eslint/eslintrc](https://togithub.com/eslint/eslintrc)[@&#8203;1](https://togithub.com/1).0.5 ([#&#8203;15389](https://togithub.com/eslint/eslint/issues/15389)) (Milos Djermanovic)\n-   [`0b8c846`](https://togithub.com/eslint/eslint/commit/0b8c846c77234125fbb211980bc1e62dc8791513) chore: fix update-readme to avoid multiple consecutive blank lines ([#&#8203;15375](https://togithub.com/eslint/eslint/issues/15375)) (Milos Djermanovic)\n-   [`94b2a8b`](https://togithub.com/eslint/eslint/commit/94b2a8b3d1f7d139dd6b06216a64727b7d5f009b) chore: Use default Chromium binary in M1 Mac tests ([#&#8203;15371](https://togithub.com/eslint/eslint/issues/15371)) (Brandon Mills)\n-   [`ba58d94`](https://togithub.com/eslint/eslint/commit/ba58d94cb51d4d2644c024446d5750eaf4853129) ci: use node `v16` for Verify Files ([#&#8203;15364](https://togithub.com/eslint/eslint/issues/15364)) (Nitin Kumar)\n-   [`1e32ee5`](https://togithub.com/eslint/eslint/commit/1e32ee591e978188b121604d0af9cbc04a50a3b5) chore: add jsdoc type annotation to rules ([#&#8203;15291](https://togithub.com/eslint/eslint/issues/15291)) (Bryan Mishkin)\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n### [`v5.65.0`](https://togithub.com/webpack/webpack/releases/v5.65.0)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v5.64.4...v5.65.0)\n\n##### Features\n\n-   static evaluation understands `undefined` now\n-   reduce container entry code by a few chars\n-   use template literals when available and they make sense\n\n##### Bugfixes\n\n-   handle `singleton` flag without `requiredVersion` in Module Federation\n-   upgrade `watchpack` for context time info bugfix\n\n##### Performance\n\n-   improve RegExp in error message formating for non-quadratic performance\n\n##### Developer Experience\n\n-   automatically insert brackets when `output.globalObject` contains a non-trival expression\n-   show error when using `script` type external with invalid syntax\n-   expose types for `Resolver`, `StatsOptions` and `ResolvePluginInstance`\n\n##### Preparations for the future\n\n-   `hashDigestLength` will default to 16 in webpack 6 (`experiments.futureDefaults`)\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22301","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#22301)"},{"Id":"1070532504","IsPullRequest":true,"CreatedAt":"2021-12-03T13:19:23","Actor":"alan-agius4","Number":"22295","RawContent":null,"Title":"perf(@ngtools/webpack): remove child compilation stylesheet chunk assets","State":"closed","Body":"Stylesheet chunk assets are emitted via the parent compilation and hence these are not needed to be retained in the child compilation.","Url":"https://github.com/angular/angular-cli/pull/22295","RelatedDescription":"Closed or merged PR \"perf(@ngtools/webpack): remove child compilation stylesheet chunk assets\" (#22295)"},{"Id":"1070431407","IsPullRequest":false,"CreatedAt":"2021-12-03T10:16:11","Actor":"cexbrayat","Number":"22293","RawContent":null,"Title":"Budgets on \"Estimated transfer size\"","State":"open","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\n`ng build` allows to see the \"Estimated Transfer Size\" as of version v13.1.\r\n\r\nIt would be very neat to be able to define budgets based not only the \"Raw size\", but also on this \"Estimated Transfer Size\"\r\n\r\n### Describe the solution you'd like\r\n\r\nSomething along the lines of:\r\n\r\n```json\r\n\"budgets\": [\r\n  {\r\n    \"type\": \"initial-estimated\",\r\n    \"maximumWarning\": \"80kb\",\r\n    \"maximumError\": \"160kb\"\r\n},\r\n```\r\n\r\nor \r\n\r\n```json\r\n\"budgets\": [\r\n  {\r\n    \"type\": \"initial\",\r\n    \"estimated\": true,\r\n    \"maximumWarning\": \"80kb\",\r\n    \"maximumError\": \"160kb\"\r\n},\r\n```","Url":"https://github.com/angular/angular-cli/issues/22293","RelatedDescription":"Open issue \"Budgets on \"Estimated transfer size\"\" (#22293)"},{"Id":"1070275165","IsPullRequest":false,"CreatedAt":"2021-12-03T09:23:08","Actor":"indraraj26","Number":"22289","RawContent":null,"Title":"[v12 to v13] stuck on UPDATE package.json (2055 bytes)","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: No\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nI am trying to update mine ionic app v12 to v13. command that I m using \r\n`ng update @angular/core @angular/cli  --force`\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nng update @angular/core @angular/cli  --force\r\nThe installed local Angular CLI version is older than the latest stable version.\r\nInstalling a temporary version to perform the update.\r\n✔ Package successfully installed.\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 28 dependencies.\r\nFetching dependency metadata from registry...\r\n                  Package \"@angular-eslint/builder\" has an incompatible peer dependency to \"@angular/cli\" (requires \">= 12.0.0 < 13.0.0\", would install \"13.0.4\").\r\n    Updating package.json with dependency @angular-devkit/build-angular @ \"13.0.4\" (was \"12.1.4\")...\r\n    Updating package.json with dependency @angular/cli @ \"13.0.4\" (was \"12.1.4\")...\r\n    Updating package.json with dependency @angular/compiler @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/compiler-cli @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/language-service @ \"13.0.3\" (was \"12.0.5\")...\r\n    Updating package.json with dependency typescript @ \"4.4.4\" (was \"4.2.4\")...\r\n    Updating package.json with dependency @angular/common @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/core @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/forms @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/platform-browser @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"13.0.3\" (was \"12.1.5\")...\r\n    Updating package.json with dependency @angular/router @ \"13.0.3\" (was \"12.1.5\")...\r\n  UPDATE package.json (2055 bytes)\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 12.1.0\r\nNode: 14.17.1\r\nPackage Manager: npm 6.14.13\r\nOS: win32 x64\r\n\r\nAngular: <error>\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1201.0 (cli-only)\r\n@angular-devkit/build-angular   <error>\r\n@angular-devkit/core            12.1.0 (cli-only)\r\n@angular-devkit/schematics      12.1.0 (cli-only)\r\n@angular/cli                    12.1.0 (cli-only)\r\n@schematics/angular             12.1.0 (cli-only)\r\nrxjs                            6.6.7 (cli-only)\r\ntypescript                      <error>\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22289","RelatedDescription":"Closed issue \"[v12 to v13] stuck on UPDATE package.json (2055 bytes)\" (#22289)"},{"Id":"1070313045","IsPullRequest":true,"CreatedAt":"2021-12-03T07:51:49","Actor":"renovate[bot]","Number":"22290","RawContent":null,"Title":"build: update angular","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `8dafbe3` -> `b22eb82` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `117a525` -> `a75aee3` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `a3590fc` -> `b2bf3e1` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `0034864` -> `dd04d8a` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `0f089ae` -> `a35bb34` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `623714f` -> `eef804c` |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `e4a13cf` -> `6237394` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `373a3a2` -> `5f1e31c` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `261084a` -> `4654ab9` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `660feb7` -> `700f189` |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | `833046d` -> `b55e610` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `30a5fc3` -> `f58f2b3` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `2a257f2` -> `dd741c7` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `2507021` -> `01aff7b` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `1adaec2` -> `6b07c98` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `b243ca1` -> `da9b84d` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `c2cceed` -> `b533da5` |\n| angular/dev-infra | action | digest | `486b6e2` -> `885008c` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22290","RelatedDescription":"Open PR \"build: update angular\" (#22290)"},{"Id":"1069845574","IsPullRequest":true,"CreatedAt":"2021-12-02T22:12:18","Actor":"dgp1130","Number":"22286","RawContent":null,"Title":"Bump version to \"v12.2.14\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22286","RelatedDescription":"Closed or merged PR \"Bump version to \"v12.2.14\" with changelog.\" (#22286)"},{"Id":"1069953335","IsPullRequest":false,"CreatedAt":"2021-12-02T20:27:54","Actor":"dgp1130","Number":"22288","RawContent":null,"Title":"Generate and manage schematic configuration files","State":"open","Body":"# 🚀 Feature request\r\n\r\n## Edit: The feature described in this comment already exists as [`schematics blank`](https://github.com/angular/angular-cli/issues/22288#issuecomment-984980408), the [real feature request is here](https://github.com/angular/angular-cli/issues/22288#issuecomment-985493888).\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [X] generate\r\n\r\n### Description\r\n\r\nIt came up in an Angular Nation discussion today that making a new schematic is really difficult and requires a lot of steps with complex documentation. I think this came up before but I wasn't able to find an existing issue quickly.\r\n\r\n### Describe the solution you'd like\r\n\r\nIdeally we would have something like `ng generate schematic` (or `schematics new`) which could create a new schematic. We'll probably have to workshop how to support both creating a new collection and adding to an existing collection. This would also help improve [some of the documentation](https://angular.io/guide/schematics-authoring), since users can get started with schematics much easily.\r\n\r\n### Describe alternatives you've considered\r\n\r\nAlternative is to just document everything and make users type everything out by hand, which is how it works today.\r\n\r\n/cc @kroeder.\r\n","Url":"https://github.com/angular/angular-cli/issues/22288","RelatedDescription":"Open issue \"Generate and manage schematic configuration files\" (#22288)"},{"Id":"1069944565","IsPullRequest":false,"CreatedAt":"2021-12-02T20:22:29","Actor":"dgp1130","Number":"22287","RawContent":null,"Title":"Search schematics","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [X] generate\r\n\r\n### Description\r\n\r\nIn an Angular Nation discussion today, it came up that it can be difficult to discover schematics due to the lack of a centralized registry. The closest things that exists are probably NPM and GitHub, which tend to be tagged \"schematics\" by convention, which is not intuitive to look for. The lack of discoverability makes it harder for user schematics to find their users beyond simple word of mouth.\r\n\r\n### Describe the solution you'd like\r\n\r\nWe should consider some kind of search functionality (either within the Angular CLI `ng add --search` or something in `schematics` directly) which looks for compatible packages on NPM. \"Compatible\" packages could be identified by inspecting the contents for the relevant JSON files or just looking for a \"schematics\" tag. Using a specific tag in the CLI could also help the community standardize on a particular convention to improve consistency. This could help improve discoverability of schematics.\r\n\r\n### Describe alternatives you've considered\r\n\r\nThe most obvious workaround is to search for schematics via your favorite search engine or directly on NPM. These are reasonable approaches, but will vary wildly in quality and may not be obvious to many devs who may not know what tags to search for.","Url":"https://github.com/angular/angular-cli/issues/22287","RelatedDescription":"Closed issue \"Search schematics\" (#22287)"},{"Id":"1069548004","IsPullRequest":false,"CreatedAt":"2021-12-02T18:04:31","Actor":"alessandro-tucci-visiontech","Number":"22280","RawContent":null,"Title":"The dependence on @ampproject/remapping@1.0.1 should be updated to 1.0.2 due to a blocking issue during `ng build`","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [X] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\n`@angular-devkit/build-angular@12.2.13`  depends on `@ampproject/remapping@1.0.1`, which is affected by this blocking issue: https://github.com/ampproject/remapping/issues/153\r\n\r\nThe issue was quickly fixed and a new version `@ampproject/remapping@1.0.2` was released just yesterday.\r\nLike reported in the linked page, the issue affects all the projects having at least one library containing at least one .js file made up of just a source map and no additional content. In my specific case, the impacted library is `@zxing/browser@~0.0.10`:\r\n\r\n![image](https://user-images.githubusercontent.com/50661302/144427897-1b0f84d9-088a-4b0f-8469-b1521dc8a5f0.png)\r\n\r\nDue to the blocking nature of the issue, I kindly ask you to publish a new `patch` version which depends on the fixed version of `@ampproject/remapping`.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nJust launch `ng build` on a project which depends on `@angular-devkit/build-angular@12.2.13` and, for example, `@zxing/browser@~0.0.10` (like in my screenshot)\r\n\r\n## 🔥 Exception or Error\r\n\r\nLike reported on the linked issue, the following error is displayed:\r\n<pre><code>\r\n./node_modules/<JS file having only a source map reference> - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js):\r\nError: Transformation map 0 must have exactly one source file.\r\nDid you specify these with the most recent transformation maps first?\r\n    at buildSourceMapTree (/cut/node_modules/@ampproject/remapping/dist/remapping.umd.js:729:23)\r\n    at remapping (/cut/node_modules/@ampproject/remapping/dist/remapping.umd.js:831:23)\r\n    at Object.result (/cut/node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js:202:54)\r\n    at Object.<anonymous> (/cut/node_modules/babel-loader/lib/index.js:221:43)\r\n    at Generator.next (<anonymous>)\r\n    at asyncGeneratorStep (/cut/node_modules/babel-loader/lib/index.js:3:103)\r\n    at _next (/cut/node_modules/babel-loader/lib/index.js:5:194)\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 12.2.13\r\nNode: 16.13.0 (Unsupported)\r\nPackage Manager: npm 8.1.0\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.13\r\n@angular-devkit/build-angular   12.2.13\r\n@angular-devkit/core            12.2.13\r\n@angular-devkit/schematics      12.2.13\r\n@angular/cli                    12.2.13\r\n@angular/compiler-cli           12.2.13\r\n@angular/language-service       12.2.13\r\n@angular/service-worker         12.2.13\r\n@schematics/angular             12.2.13\r\ntypescript                      4.3.5\r\n\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22280","RelatedDescription":"Closed issue \"The dependence on @ampproject/remapping@1.0.1 should be updated to 1.0.2 due to a blocking issue during `ng build`\" (#22280)"},{"Id":"1069557660","IsPullRequest":true,"CreatedAt":"2021-12-02T17:58:12","Actor":"alan-agius4","Number":"22281","RawContent":null,"Title":"build: update `@ampproject/remapping` to `1.0.2`","State":"closed","Body":"Closes #22280\r\n\r\nAlready updated on master via https://github.com/angular/angular-cli/pull/22263","Url":"https://github.com/angular/angular-cli/pull/22281","RelatedDescription":"Closed or merged PR \"build: update `@ampproject/remapping` to `1.0.2`\" (#22281)"},{"Id":"1069522520","IsPullRequest":true,"CreatedAt":"2021-12-02T17:57:17","Actor":"alan-agius4","Number":"22278","RawContent":null,"Title":"fix(@angular-devkit/build-angular): display cleaner errors","State":"closed","Body":"Cherry-pick of https://github.com/angular/angular-cli/pull/22268","Url":"https://github.com/angular/angular-cli/pull/22278","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): display cleaner errors\" (#22278)"},{"Id":"1069578035","IsPullRequest":true,"CreatedAt":"2021-12-02T17:55:02","Actor":"alan-agius4","Number":"22283","RawContent":null,"Title":"fix(@angular/cli): `ng doc` does open browser on Windows","State":"closed","Body":"Wait until the browser has been launched before exiting the Node.js process.\r\n\r\nFor more about this change see the explanation https://github.com/angular/angular-cli/issues/22257#issuecomment-983006518\r\n\r\nCloses #22257","Url":"https://github.com/angular/angular-cli/pull/22283","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): `ng doc` does open browser on Windows\" (#22283)"},{"Id":"1069637011","IsPullRequest":true,"CreatedAt":"2021-12-02T17:45:04","Actor":"alan-agius4","Number":"22284","RawContent":null,"Title":"update to TypeScript 4.5","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22284","RelatedDescription":"Closed or merged PR \"update to TypeScript 4.5\" (#22284)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1072544162","IsPullRequest":true,"CreatedAt":"2021-12-06T19:50:36","Actor":"mmalerba","Number":"24063","RawContent":null,"Title":"feat(material-excperimental/mdc-core): add missing color, density, typography mixins","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24063","RelatedDescription":"Open PR \"feat(material-excperimental/mdc-core): add missing color, density, typography mixins\" (#24063)"},{"Id":"1072506914","IsPullRequest":true,"CreatedAt":"2021-12-06T19:08:33","Actor":"zelliott","Number":"24062","RawContent":null,"Title":"Refactor MatTabNav as ARIA tabs with a new MatTabNavPanel component and [panel] input.","State":"open","Body":"One approach to resolve https://github.com/angular/components/issues/23706. WIP.\r\n\r\n* Adds a new `MatTabNavPanel` component that is intended to be used with `MatTabNav`. `MatTabNavPanel` renders the `tabpanel`, `MatTabNav` renders the `tablist`.\r\n* Adds a new optional `[panel]` input to `MatTabNav` that accepts a `MatTabNavPanel`. Allows `MatTabNav` to make changes to `MatTabNavPanel` (i.e. `aria-labelledby`).\r\n* If `[panel]` is provided, `MatTabNav` acts as an ARIA tabs. Otherwise, it continues to act as links within a navigation landmark (no change from status quo).","Url":"https://github.com/angular/components/pull/24062","RelatedDescription":"Open PR \"Refactor MatTabNav as ARIA tabs with a new MatTabNavPanel component and [panel] input.\" (#24062)"},{"Id":"1072022652","IsPullRequest":false,"CreatedAt":"2021-12-06T15:04:49","Actor":"adityakmehta","Number":"24060","RawContent":null,"Title":"docs-bug(COMPONENT): Need more info on getSvgIconFromURL ","State":"closed","Body":"### Documentation Feedback\n\nLooking for an Implementation example of \"**getSvgIconFromURL**\" in **mat-icon**. It would be great if we can get a detailed documentation on using this method to implement caching. There is no sample implementation of this functionality whatsoever.\r\n\r\nThanks\n\n### Affected documentation page\n\nhttps://v9.material.angular.io/components/icon/api","Url":"https://github.com/angular/components/issues/24060","RelatedDescription":"Closed issue \"docs-bug(COMPONENT): Need more info on getSvgIconFromURL \" (#24060)"},{"Id":"1071665679","IsPullRequest":false,"CreatedAt":"2021-12-06T14:50:10","Actor":"thu9999","Number":"24058","RawContent":null,"Title":"bug(COMPONENT): Angular material component harness expansion panel description not working","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nMatExpansionPanelHarness getDescription return a Promise<''> instead of Promise<string|null>\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Testing component template having mat-panel-description inside a mat-expansion-panel\r\n\r\n### Expected Behavior\r\n\r\nMatExpansionPanelHarness.getDescription() should return a Promise<string|null> instead of Promise<''>\r\n\r\n### Actual Behavior\r\n\r\nMatExpansionPanelHarness.getDescription() returns Promise<''>\r\n\r\n### Environment\r\n\r\n- Angular: 11.2.4\r\n- CDK/Material: 11.2.3\r\n- Browser(s): NA\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows 11\r\n","Url":"https://github.com/angular/components/issues/24058","RelatedDescription":"Closed issue \"bug(COMPONENT): Angular material component harness expansion panel description not working\" (#24058)"},{"Id":"1070313134","IsPullRequest":false,"CreatedAt":"2021-12-06T14:47:09","Actor":"Pradeep12191","Number":"24047","RawContent":null,"Title":"bug(stepper): stepper icons are not aligned properly when direction of html is changed to ltr to rtl and vice versa","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nstepper icons are going outside of circle when the direction of html is changed to ltr to rtl and vice versa\r\n\r\n### Reproduction\r\n\r\nI have created a stackblitz example with stepper and change direction button which will change the html to rtl and ltr\r\nhttps://stackblitz.com/edit/components-issue-jjfbhm\r\n\r\nSteps to reproduce:\r\n1. Enter some values in name input and click next button, and go to next step. \r\n2. Edit icon in 1st step label will appear.\r\n3. Click on change direction button and observe edit icon\r\n4. Edit icon is misaligned \r\n\r\nTry the same steps in rtl direction and observe the edit icon, Edit icon goes outside of the circle.\r\n\r\nBelow is the screen shots\r\n in ltr to rtl direction\r\n![image](https://user-images.githubusercontent.com/10145706/144565930-8634fa37-b3db-44d1-a1c3-9095d43b4a28.png)\r\n\r\nin rtl to ltr direction\r\n![image](https://user-images.githubusercontent.com/10145706/144565808-33da0056-c8fc-4771-968c-6356a80643e6.png)\r\n\r\n### Expected Behavior\r\n\r\nStep icon is going outside of the circle, when direction of html  is changed\r\n\r\n### Actual Behavior\r\n\r\nStep icons should stay at middle of the circle, when direction of html  is changed\r\n\r\n### Environment\r\n\r\n- Angular: ^12.2.9\r\n- CDK/Material: ^12.2.9 / ^12.2.9\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24047","RelatedDescription":"Closed issue \"bug(stepper): stepper icons are not aligned properly when direction of html is changed to ltr to rtl and vice versa\" (#24047)"},{"Id":"1072025416","IsPullRequest":true,"CreatedAt":"2021-12-06T11:12:37","Actor":"crisbeto","Number":"24061","RawContent":null,"Title":"fix(material-experimental/mdc-slider): throw error when thumb is missing","State":"open","Body":"Adds a proper error when the MDC slider is missing a thumb. Currently we eventually hit a runtime error which isn't easy to debug.\r\n\r\nFixes #24057.","Url":"https://github.com/angular/components/pull/24061","RelatedDescription":"Open PR \"fix(material-experimental/mdc-slider): throw error when thumb is missing\" (#24061)"},{"Id":"1071308368","IsPullRequest":false,"CreatedAt":"2021-12-06T10:00:01","Actor":"grapevinegizmos","Number":"24056","RawContent":null,"Title":"docs-bug(density): Why doesn't \"applying density\" describe how to apply density.","State":"closed","Body":"### Documentation Feedback\r\n\r\nVery frustrating that nowhere on the page titled \"Applying Density\", here [https://material.io/design/layout/applying-density.html](url), does it actually explain how to apply density to a particular control on a form or view.\r\n\r\nThere's a lot of info on **why** and **when** you might adjust density, and what it will look like when you do, but not a single code example on how to actually \"apply density\" to a control in a component template and support it in a module.   Why are there no stackblitz links demonstrating how to use the feature?\r\n\r\n\r\n\r\nThe one example I did find elsewhere, was pretty much incomprehensible to me and would itself would require a lot of studying just to figure out what's going on.  The example is not constructed in the usual way, with components, templates etc., but instead builds the entire example in .ts files (no html or css templates) which makes it just really opaque to figure out how to actually use it in a conventional angular application.   (Also you can't even get to this example on this page -- you have to click through to the install page on https://material.io/develop/web/supporting/density and for some reason the example is hosted on something called \"Glitch\" rather than on Stackblitz, like _every other example code section in material.io_\r\n\r\nCan you do better here?  I was really lookingf forward to this feature, but its going to take me (unnecessary) hours of experimentation to guess at how to use it.\r\n\r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.io/design/layout/applying-density.html","Url":"https://github.com/angular/components/issues/24056","RelatedDescription":"Closed issue \"docs-bug(density): Why doesn't \"applying density\" describe how to apply density.\" (#24056)"},{"Id":"1069130305","IsPullRequest":false,"CreatedAt":"2021-12-06T09:54:29","Actor":"JmattaPF","Number":"24043","RawContent":null,"Title":"How to override Angular material styling with using ::ng-deep","State":"closed","Body":"### Feature Description\n\nI need to update Angular material dropdown and textbox styling but not able to do it without using ::ng-deep but it is going to be deprecated soon. So what are the other ways to do it?\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/24043","RelatedDescription":"Closed issue \"How to override Angular material styling with using ::ng-deep\" (#24043)"},{"Id":"1069203225","IsPullRequest":false,"CreatedAt":"2021-12-06T09:53:27","Actor":"vardhan1122","Number":"24044","RawContent":null,"Title":"input type=\"file\"","State":"closed","Body":"### Feature Description\n\nHi Good Morning.,\r\nI am reading all angular-material document, not available in matInput type=\"file\",please add this new feature as soon as possible.\n\n### Use Case\n\nProfile Image Upload","Url":"https://github.com/angular/components/issues/24044","RelatedDescription":"Closed issue \"input type=\"file\"\" (#24044)"},{"Id":"1071923099","IsPullRequest":false,"CreatedAt":"2021-12-06T09:29:21","Actor":"winstonhong15","Number":"24059","RawContent":null,"Title":"bug(MatDialog): Focus trap does not work if dialog only contains an iframe element","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI add an iframe element to the content of the mat-dialog and I find the following issues:\r\n1. If the mat-dialog contains only an iframe element, focus trap does not constrain the focusable elements to those only inside the modal dialog. \r\n2.  The focus trap works if I add another element to the iframe (like a button), but I cannot use tab key to navigate to elements inside the iframe. \n\n### Reproduction\n\nSteps to reproduce:\r\nI created two separate StackBlitz projects to repro those issues. \r\n1. This project is the entry point which contains a button to open a dialog and the content of the dialog. \r\nhttps://stackblitz.com/edit/angular-ivy-vqwhly?file=src/app/dialogs/dialog-content/dialog-content.component.html\r\n\r\n2. This project contains the content loaded in the iframe. \r\nhttps://stackblitz.com/edit/angular-ivy-34o8qo\r\nFor some reason, it cannot be loaded in the iframe of the dialog if you also open this link in your browser at the same time. \r\n\r\nTo reproduce the first issue:\r\nOpen the first link, ensure that the button is commented out. <!-- <button mat-dialog-close=\"\">Close</button> -->\r\nOpen the dialog, use tab key to navigate all focusable elements. Verify that it is possible to move the focus outside of the dialog. \r\n\r\nTo reproduce the second issue:\r\nOpen the first link and use the code editor to add the button back in dialog-content component. \r\nOpen the dialog and use tab key to test that focusable elements are restrained to those inside the dialog, but it cannot move the focus automatically inside elements of the iframe. You may use your mouse to click on the iframe and set focus inside, but after you focus out of the iframe using keyboard, you cannot use keyboard to focus on the elements inside the iframe again. \n\n### Expected Behavior\n\nIf the iframe is the only element inside the dialog-content, focusable elements should be constrained to those inside the modal dialog only. It should also autofocus on the first focusable element according to this doc: [ARIA: dialog role\r\n](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role#required_javascript_features)\r\n\r\nIf there are multiple elements inside the dialog-content, using keyboard should be able to navigate to all focusable elements no matter those elements are inside an iframe or not. \n\n### Actual Behavior\n\nTo reproduce the first issue:\r\nOpen the first link, ensure that the button is commented out. <!-- <button mat-dialog-close=\"\">Close</button> -->\r\nOpen the dialog, use tab key to navigate all focusable elements. Verify that it is possible to move the focus outside of the dialog. \r\n\r\nTo reproduce the second issue:\r\nOpen the first link and use the code editor to add the button back in dialog-content component. \r\nOpen the dialog and use tab key to test that focusable elements are restrained to those inside the dialog, but it cannot move the focus automatically inside elements of the iframe. You may use your mouse to click on the iframe and set focus inside, but after you focus out of the iframe using keyboard, you cannot use keyboard to focus on the elements inside the iframe again. \r\n\n\n### Environment\n\n- Angular: 12.2.14\r\n- CDK/Material: 12.2.13\r\n- Browser(s): Microsoft Edge Version 96.0.1054.43 (Official build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24059","RelatedDescription":"Open issue \"bug(MatDialog): Focus trap does not work if dialog only contains an iframe element\" (#24059)"},{"Id":"1071534551","IsPullRequest":false,"CreatedAt":"2021-12-05T19:13:14","Actor":"adrian-heath","Number":"24057","RawContent":null,"Title":"bug(mat-slider): Experimental mat-slider throws Cannot read properties of undefined (reading '_hostElement')","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen adding the most basic experimental mat-slider to a page it throws the error\r\n\r\nTypeError: Cannot read properties of undefined (reading '_hostElement')\r\n\r\nwhen initializing the page.  This does not happen with other experimental controls or the normal mat-slider.  The page does not use a form.\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Create a page with routing (in my case it is lazy-loaded but I don't think this matters)\r\n2. craete a <mat-toolbar> containing a <mat-slider>  \r\n3. Navigate to the page and an alert is show with the above message\r\n\n\n### Expected Behavior\n\nthe experimental mat-slider works as expected\n\n### Actual Behavior\n\nError thrown and the slider renders as a solid bar\n\n### Environment\n\n- Angular: 13.0.2 (also 12.x)\r\n- CDK/Material: Experimental 13.0.2\r\n- Browser(s): Chrome 96\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/24057","RelatedDescription":"Open issue \"bug(mat-slider): Experimental mat-slider throws Cannot read properties of undefined (reading '_hostElement')\" (#24057)"},{"Id":"1071163399","IsPullRequest":true,"CreatedAt":"2021-12-04T09:02:34","Actor":"crisbeto","Number":"24055","RawContent":null,"Title":"refactor(multiple): remove coercion members","State":"open","Body":"* Replaces all usages of the `ngAcceptInputType` members with type declarations directly on the setters.\r\n* Replaces the lint rule that was checking that the correct coercion members were added with a rule that doesn't allow new coercion members to be added.","Url":"https://github.com/angular/components/pull/24055","RelatedDescription":"Open PR \"refactor(multiple): remove coercion members\" (#24055)"},{"Id":"1070858885","IsPullRequest":true,"CreatedAt":"2021-12-03T18:44:24","Actor":"lekhmanrus","Number":"24054","RawContent":null,"Title":"fix(material/paginator): allow readonly options (#24050)","State":"open","Body":"Adds `readonly` support for paginator `pageSizeOptions`.\r\n\r\ncloses #24050","Url":"https://github.com/angular/components/pull/24054","RelatedDescription":"Open PR \"fix(material/paginator): allow readonly options (#24050)\" (#24054)"},{"Id":"1070663264","IsPullRequest":false,"CreatedAt":"2021-12-03T14:44:31","Actor":"infacto","Number":"24053","RawContent":null,"Title":"feat(mat-tab-nav-bar): router-outlet transition animation like mat-tab-group","State":"open","Body":"### Feature Description\r\n\r\nWhen enableing tab navigation, I have to use `mat-tab-nav-bar` instead of `mat-tab-group`. Works great, but removes the transition animation between the tabs (sliding left / right). \r\n\r\nThere are some other related issues about it: #15570, #18169\r\n\r\nI cannot accept the answer that I should use `mat-tab-group` instead. The reason using `mat-tab-nav-bar` is the tab navigation over URL, etc. Or do you generally not recommend this? If yes why?\r\n\r\nThe workaround in the other solution works. But I wonder, why not just implement this this framework? Since the `mat-tab-group` already has this animation. What is the reason for refusing such a legitimate request?\r\n\r\nI don't like to write code / workaround for stuff that should actually be part of the framework. Custom data with index for the animation, etc. \r\n\r\nNo offense, I was just wondering what the problem is. Together we could think about an elegant solution. Maybe a directive for the `router-outlet` container? But how to detect left and right sliding? (See workaround #18169)\r\n\r\n\r\n### Use Case\r\n\r\nJust be consistent to `mat-tab-group`. Why not? Why should we regret implementing tab navigation using `mat-tab-nav-bar`. Which is an awesome feature? Just complete the implementation by adding the same animation like in `mat-tab-group`.","Url":"https://github.com/angular/components/issues/24053","RelatedDescription":"Open issue \"feat(mat-tab-nav-bar): router-outlet transition animation like mat-tab-group\" (#24053)"},{"Id":"1070656332","IsPullRequest":false,"CreatedAt":"2021-12-03T14:37:09","Actor":"hodossy","Number":"24052","RawContent":null,"Title":"bug(CdkDragDrop): Drag placeholder is shown in the original place, while an index change is emitted on drag release","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDrag and Drop placeholder is shown in the wrong place in some cases, and that causes confusion upon drag release.\r\n\r\nI use DragListGroup and DragLists to support drag and drop in a wrapped flex environment.\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Drag a chip (eg fourth) at the leftmost side of the text\r\n2.  Move a bit forward, still dragging, until previous chip hover effect is shown. The chip placeholder should be in its original place (bit hard to find the sweet spot)\r\n2.  Release the drag\r\n\r\nStackblitz: https://stackblitz.com/edit/components-issue-cdmhsa?file=src/app/example-component.ts\n\n### Expected Behavior\n\nexpecting the dragged chip to be in its original place, ie event emitted with the same previous and current container.\n\n### Actual Behavior\n\nthe dragged chip moves, event emitted with the `n` previous and `n-1` current container.\n\n### Environment\n\n- Angular: 12.2.9\r\n- CDK/Material: 12.2.9\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24052","RelatedDescription":"Open issue \"bug(CdkDragDrop): Drag placeholder is shown in the original place, while an index change is emitted on drag release\" (#24052)"},{"Id":"1070651572","IsPullRequest":false,"CreatedAt":"2021-12-03T14:32:10","Actor":"crisbeto","Number":"24051","RawContent":null,"Title":"Continue test harness execution if zone doesn't stabilize within a certain amount of time","State":"open","Body":"Currently the test harnesses wait for the zone to stabilize before executing, however there are some cases where it might not happen. For example, in https://github.com/angular/components/issues/23964 the test times out because a Material component uses `requestAnimationFrame` which the browser can decide to pause if it's out of view.\r\n\r\nOne thing to consider is that Jasmine tests time out after 5s by default so we should pick a number that is lower.\r\n","Url":"https://github.com/angular/components/issues/24051","RelatedDescription":"Open issue \"Continue test harness execution if zone doesn't stabilize within a certain amount of time\" (#24051)"},{"Id":"1070608418","IsPullRequest":false,"CreatedAt":"2021-12-03T13:46:12","Actor":"max-vogler","Number":"24050","RawContent":null,"Title":"bug(MatPaginator): pageSizeOptions are required to be mutable Array, ReadonlyArray fails","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatPaginator requires `pageSizeOptions` to be a mutable array. Passing in a ReadonlyArray<number> fails.\n\n### Reproduction\n\nSteps to reproduce:\r\n```typescript\r\n@Component({\r\n  selector: 'example-component',\r\n  template: '<mat-paginator [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>',\r\n})\r\nexport class ExampleComponent {\r\n pageSizeOptions: ReadonlyArray<number> = [10, 20];\r\n}\r\n```\r\nhttps://stackblitz.com/edit/components-issue-rvmtli?file=src/app/example-component.ts\r\n\n\n### Expected Behavior\n\nI am unaware that MatPaginator would mutate the passed in Array. Passing in a ReadonlyArray<number> should work.\n\n### Actual Behavior\n\nThrows\r\n\r\n```\r\nThe type 'readonly number[]' is 'readonly' and cannot be assigned to the mutable type 'number[]'.\r\n```\n\n### Environment\n\n- Angular: ^12.2.9\r\n- CDK/Material: ^12.2.9\r\n- TypeScript: ^3.7.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS","Url":"https://github.com/angular/components/issues/24050","RelatedDescription":"Open issue \"bug(MatPaginator): pageSizeOptions are required to be mutable Array, ReadonlyArray fails\" (#24050)"},{"Id":"1070462045","IsPullRequest":false,"CreatedAt":"2021-12-03T10:51:12","Actor":"bunsenbeaker","Number":"24049","RawContent":null,"Title":"create portal for a projected component","State":"open","Body":"### What are you trying to do?\r\n\r\nI have a component which receives multiple projected components as components:\r\n`@ContentChildren(ChildComponent) children:QueryList<ChildComponent>;`\r\nI'd like to be able to select a specific component from this list and display this one only, based on some of its @Input properties. I'd also like to be able to subscribe to this component's @Outputs.\r\n\r\nSo my child component looks like:\r\n```\r\n@Component({\r\n  selector: 'app-child',\r\n  template: `<p>child works! {{param}}</p>`,\r\n  styleUrls: ['./child.component.scss']\r\n})\r\nexport class ChildComponent implements OnInit {\r\n\r\n  @Input() param!:string;\r\n  @Output() clicked:EventEmitter<any>=new EventEmitter();\r\n\r\n\r\n  constructor(public view: ViewContainerRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n```\r\n\r\nand my parent component:\r\n`\r\n@Component({\r\n  selector: 'app-parent',\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss']\r\n})\r\nexport class ParentComponent implements OnInit{\r\n\r\n  @ContentChildren(ChildComponent) children!:QueryList<ChildComponent>;\r\n\r\n  selectedchild!:ComponentPortal<ChildComponent>;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngAfterContentInit(): void {\r\n\r\n    \r\n    const child:ChildComponent = this.children?.toArray()[0]; //just for the sample ;)\r\n    child.param=\"param 1\";\r\n    child.clicked.subscribe(c=> {\r\n      console.log('clicked');\r\n      \r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    \r\n    this.selectedchild = new ComponentPortal(ChildComponent, this.child.view);\r\n    //this.cdr.detectChanges();\r\n\r\n  }\r\n}`\r\n\r\nand in my parent component template:\r\n`<div class=\"portal\" [cdkPortalOutlet]=\"selectedchild\"></div>\r\n`\r\n\r\nThe projected content is loaded into the portal outlet, however it does not display the updated param that was passed in from the parent component.\r\nWhen using simle content projection (ng-content) for displaying all projected components - I'm able to see updated values and respond to Outputs properly from parent component.\r\nIs there another way to bring AN EXISTING component (the projected component) into view using Portal?\r\nPls advise...\r\nThanks!\r\nMK          \r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\ndisplaying projected content without portal\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. \r\n2. \r\n\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.0\r\n- CDK/Material:12.2.13\r\n- Browser(s): Chrome 96\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win\r\n","Url":"https://github.com/angular/components/issues/24049","RelatedDescription":"Open issue \"create portal for a projected component\" (#24049)"},{"Id":"1070400473","IsPullRequest":true,"CreatedAt":"2021-12-03T09:41:35","Actor":"crisbeto","Number":"24048","RawContent":null,"Title":"build: update to typescript 4.5 and angular 13.1","State":"open","Body":"Bumps the versions of TypeScript and Angular to 4.5 and 13.1 respectively, and accounts for some breaking changes.\r\n\r\n**Note:** not totally sure on the PR target since 13.1.0-next.3 is already out.","Url":"https://github.com/angular/components/pull/24048","RelatedDescription":"Open PR \"build: update to typescript 4.5 and angular 13.1\" (#24048)"},{"Id":"1070308872","IsPullRequest":false,"CreatedAt":"2021-12-03T07:45:14","Actor":"vsarangan","Number":"24046","RawContent":null,"Title":"Stepper component tick icon not render properly in RTL direction","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi Team,\r\n\r\nIn the Stepper component (horizontal stepper ) tick icon does not render properly in the RTL direction.\r\nit is not working in the angular material sample also\r\n\r\nhttps://material.angular.io/components/stepper/examples\r\n\r\n**I tried the tricky solution**\r\n[editable]=\"isEditable\"\r\ntoggle the isEditable value if the user change to RTL language, it is worked as expected.\r\n\r\nIs there any alternative solution for this issue?\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Open the angular material stepper component in stackblitz\r\n2. Fill the first step and move to the next step \r\n3. Apply the RTL direction in the HTML element \r\n4. we can the tick icon in the first step is misalignment \r\n\r\n\r\n### Expected Behavior\r\n\r\nit's  should be alignment proper both  RTL and LTR\r\n\r\n### Actual Behavior\r\n\r\nIssue in Stepper component\r\n![image](https://user-images.githubusercontent.com/26595698/144564517-8825fa5e-6b2c-4901-8c7c-9f6a550e6a8d.png)\r\n\r\n\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24046","RelatedDescription":"Open issue \"Stepper component tick icon not render properly in RTL direction\" (#24046)"},{"Id":"1069319454","IsPullRequest":true,"CreatedAt":"2021-12-02T09:27:55","Actor":"crisbeto","Number":"24045","RawContent":null,"Title":"fix(material/expansion): able to tab into descendants with visibility while closed","State":"open","Body":"The expansion panel sets `visibility: hidden` while it's closed in order to prevent users from tabbing into the content. This breaks down if a child has its own `visibility`, because it overrides the one coming from the parent. We can't use `display` in the animation definition, because it prevents the animations module from calculating the height when animating.\r\n\r\nThese changes add some CSS that will set `display: none` once the animation has settled.","Url":"https://github.com/angular/components/pull/24045","RelatedDescription":"Open PR \"fix(material/expansion): able to tab into descendants with visibility while closed\" (#24045)"},{"Id":"1068820633","IsPullRequest":false,"CreatedAt":"2021-12-01T20:04:15","Actor":"SheldonHage","Number":"24042","RawContent":null,"Title":"docs(maps): Describe how to get map instance from within component.ts to input to MapMarker, InfoWindow","State":"open","Body":"### Documentation Feedback\n\nCurrently the example docs rely on a single use case where the user interacts with the map and a (mapClick) event grabs the map instance and passes it back to a component.ts function.   If a developer wishes to decorate a map with a marker or an info window before a user interacts with it, there is no map reference to use.\r\n\r\nIt appears that standard @ViewChild methods for obtaining a dom reference do not work with the angular google-maps component.   We could use a good example of how to get the map reference.\n\n### Affected documentation page\n\nhttps://github.com/angular/components/tree/master/src/google-maps/map-marker","Url":"https://github.com/angular/components/issues/24042","RelatedDescription":"Open issue \"docs(maps): Describe how to get map instance from within component.ts to input to MapMarker, InfoWindow\" (#24042)"},{"Id":"1068469280","IsPullRequest":true,"CreatedAt":"2021-12-01T14:47:42","Actor":"andrewseguin","Number":"24041","RawContent":null,"Title":"Bump version to \"v13.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24041","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.1.0-next.3\" with changelog.\" (#24041)"},{"Id":"1068422079","IsPullRequest":true,"CreatedAt":"2021-12-01T14:21:22","Actor":"andrewseguin","Number":"24040","RawContent":null,"Title":"docs: release notes for the v13.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.0.x\" branch to the next branch (master).","Url":"https://github.com/angular/components/pull/24040","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.0.3 release\" (#24040)"},{"Id":"1068402451","IsPullRequest":true,"CreatedAt":"2021-12-01T13:29:09","Actor":"andrewseguin","Number":"24039","RawContent":null,"Title":"Bump version to \"v13.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24039","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.0.3\" with changelog.\" (#24039)"},{"Id":"1068133476","IsPullRequest":false,"CreatedAt":"2021-12-01T08:56:25","Actor":"mrw007","Number":"24038","RawContent":null,"Title":"Problem Overriding Angular material components styles","State":"open","Body":"### What are you trying to do?\r\n\r\nI have built a custom Web Application theme based on Angular Material UI Components. I'm overriding styles using @mixins and it was working in previous version of Angular/Angular Material (7 and up to 9). The problem occured after upgrading from Angular 9 to Angular 12. \r\n\r\nThis how my styles.scss looks like:\r\n\r\n``` scss\r\n@use \"~@angular/material\" as mat;\r\n @include mat.core();\r\n\r\n// Themes\r\n@import \"./themes/default-theme.scss\";\r\n@import \"./themes/dark-theme.scss\";\r\n\r\n// Colors\r\n@import \"./scss/colors.scss\";\r\n\r\n// Main Mixin\r\n@mixin custom-components-theme($theme, $colors) {\r\n  @include app-style-theme($theme, $colors);\r\n  @include secondary-sidenav-theme($theme, $colors);\r\n  @include yes-no-theme($theme, $colors);\r\n  @include skeleton-loader-theme($theme, $colors);\r\n  @include avatar-bar-theme($theme, $colors);\r\n  @include bottom-nav-theme($theme, $colors);\r\n}\r\n\r\n@include mat.all-component-themes($actulite-light-theme);\r\n\r\n.default-theme {\r\n  @include custom-components-theme(\r\n    $actulite-light-theme,\r\n    $colors-default-theme\r\n  );\r\n}\r\n\r\n.black-theme {\r\n  @include custom-components-theme($actualite-dark-theme, $colors-dark-theme);\r\n}\r\n```\r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\n- I was suspecting that Angular Material didn't load properly but it is working perfectly fine.\r\n- The mixin override works on Angular 9 (Last stable version of the project).\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Load Angular Material theme.\r\n2. Override Styles using mixins.\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.13\r\n- CDK/Material: 12.2.13\r\n- Browser(s): Goggle Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Ubuntu (Using Docker containers)\r\n","Url":"https://github.com/angular/components/issues/24038","RelatedDescription":"Open issue \"Problem Overriding Angular material components styles\" (#24038)"},{"Id":"1067761274","IsPullRequest":false,"CreatedAt":"2021-11-30T23:07:29","Actor":"guimabdo","Number":"24037","RawContent":null,"Title":"bug(MatDialog): When opening multiple dialogs in a short amount of time, some of them do not open","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n12.2.0\r\n\r\n### Description\r\n\r\nWhen opening multiple dialogs in a short amount of time, some of them do not open\r\n\r\n### Reproduction\r\n\r\nThe bug can be noticed with the example below, when clicking the \"Open Fast\" button.\r\n\r\n```ts\r\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n  <button (click)=\"openFast()\">Open Fast</button>\r\n  <button (click)=\"openSlow()\">Open Slow</button>\r\n  <ng-template let-data #template>\r\n    {{data.message}}\r\n    <button mat-dialog-close>close</button>\r\n  </ng-template>\r\n  `\r\n})\r\nexport class AppComponent {\r\n  @ViewChild(\"template\") template?: TemplateRef<any>;\r\n  constructor(private matDialog: MatDialog){}\r\n  openFast(){\r\n    this.open('1');\r\n    setTimeout(() => this.open('2'), 1);\r\n    setTimeout(() => this.open('3'), 50);\r\n    setTimeout(() => this.open('4'), 100);\r\n    setTimeout(() => this.open('5'), 150);\r\n    setTimeout(() => this.open('6'), 200);\r\n  }\r\n  openSlow(){\r\n    this.open('1');\r\n    setTimeout(() => this.open('2'), 300);\r\n    setTimeout(() => this.open('3'), 600);\r\n    setTimeout(() => this.open('4'), 900);\r\n    setTimeout(() => this.open('5'), 1200);\r\n    setTimeout(() => this.open('6'), 1500);\r\n  }\r\n\r\n  private open(message: string){\r\n    this.matDialog.open(this.template!, { \r\n      disableClose: true,\r\n      data: { message } \r\n    });\r\n  }\r\n}\r\n\r\n```\r\n\r\n### Expected Behavior\r\n\r\n\"Open fast\" button should open 6 dialogs, just like the \"Open slow\" button.\r\n\r\n### Actual Behavior\r\n\r\nThe \"Open fast\" button opens only 2 dialogs.\r\nOn most attempts it opens (1) and (5), but in some cases (1) and (6) are open.\r\n\r\n### Environment\r\n\r\n- Angular: 13.0.0\r\n- CDK/Material: 13.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24037","RelatedDescription":"Open issue \"bug(MatDialog): When opening multiple dialogs in a short amount of time, some of them do not open\" (#24037)"},{"Id":"1067729811","IsPullRequest":false,"CreatedAt":"2021-11-30T22:20:26","Actor":"andrewseguin","Number":"24036","RawContent":null,"Title":"bug(mdc-tabs): animationDuration does not affect the tab indicator","State":"open","Body":"The tab config's `animationDuration` should affect the tab indicator.\r\n","Url":"https://github.com/angular/components/issues/24036","RelatedDescription":"Open issue \"bug(mdc-tabs): animationDuration does not affect the tab indicator\" (#24036)"},{"Id":"1066329703","IsPullRequest":true,"CreatedAt":"2021-11-30T14:26:16","Actor":"devversion","Number":"24034","RawContent":null,"Title":"Initial update-tool and bundle setup for the mdc migration","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/components/pull/24034","RelatedDescription":"Closed or merged PR \"Initial update-tool and bundle setup for the mdc migration\" (#24034)"},{"Id":"1067291747","IsPullRequest":false,"CreatedAt":"2021-11-30T14:19:07","Actor":"moniuch","Number":"24035","RawContent":null,"Title":"feat(drag drop): add cdkDragReady event ","State":"open","Body":"### Feature Description\n\nI see a need for adding an event that would signal drag readiness, ie. be fired **after** the `cdkDragStartDelay` elapse, regardless of whether the subsequent `cdkDragStart` occurs or not.\r\n\r\nLet's call it `cdkDragReady`.\r\n\r\nWhen introduced,`cdkDragReleased` should also be fired on touchup/mouseup where the `cdkDragStart` has not occurred (user released before making a move).\n\n### Use Case\n\nEspecially on mobile, scenarios involving vertically long, scrollable containers with drag-and-drop enabled elements need `[cdkDragStartDelay]` in place in order to guard user against accidental drag-and-drop. In this scenarios you'd want to let user know when the drag readiness actually starts. \r\n\r\nThe event at hand would allow to signal drag readiness either visually (adding a class to an element) or through a haptic feedback on mobile.\r\n\r\n```html\r\n<my-comp\r\n  [cdkDragStartDelay]=\"200\"\r\n  (cdkDragReady)=\"handleDragReady($event)\"\r\n  (cdkDragReleased)=\"handleDragReleased($event)\"\r\n></my-comp>\r\n```\r\n\r\n```ts\r\nexport class MyComp {\r\n  handleDragReady($event: CdkDragReady){\r\n    window.navigator.vibrate(15); // mobile haptic feedback\r\n    $event.source.element.nativeElement.classList.add('my-comp-drag-ready'); // highlight the drag source container\r\n  }\r\n\r\n  handleDragReleased($event: CdkDragRelease){ // fired even when no drag occurred\r\n    $event.source.element.nativeElement.classList.remove('my-comp-drag-ready'); // unhighlight the drag source container\r\n  }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/angular/components/issues/24035","RelatedDescription":"Open issue \"feat(drag drop): add cdkDragReady event \" (#24035)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-07T05:30:05.4954946Z","RunDurationInMilliseconds":2972}