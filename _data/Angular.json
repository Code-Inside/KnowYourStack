{"Data":{"Angular-Issues":{"Issues":[{"Id":"1063123928","IsPullRequest":false,"CreatedAt":"2021-11-25T03:36:40","Actor":"benedict-chng","Number":"44272","RawContent":null,"Title":"Migrating from Angular 12.2.13 to Angular 13.0.2 Unsuccessful","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHi,\r\n\r\nI'm unable to migrate our existing application from Angular 12.2.13 to Angular 13.0.2. It is a moderately complex application and use the following command to do the migration as advised by on:\r\n\r\nhttps://update.angular.io/?l=2&v=12.0-13.0\r\n\r\nHas anyone seen this?\r\n\r\nRgds,\r\nBenedict\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nMicrosoft Windows [Version 10.0.19043.1348]\r\n(c) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\angular_upgrade\\Nova>npx @angular/cli@13 update @angular/core@13 @angular/cli@13\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nAn unhandled exception occurred: Could not find package.json\r\nSee \"C:\\Users\\BENEDI~1\\AppData\\Local\\Temp\\ng-F4zzJ2\\angular-errors.log\" for further details.\r\n\r\nC:\\angular_upgrade\\Nova>cd Avatar\r\n\r\nC:\\angular_upgrade\\Nova\\Avatar>npx @angular/cli@13 update @angular/core@13 @angular/cli@13\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 79 dependencies.\r\nFetching dependency metadata from registry...\r\n    Updating package.json with dependency @angular-devkit/build-angular @ \"13.0.3\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/cli @ \"13.0.3\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/compiler-cli @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/language-service @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency typescript @ \"4.4.4\" (was \"4.3.5\")...\r\n    Updating package.json with dependency @angular/animations @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/common @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/compiler @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/core @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/forms @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/localize @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/platform-browser @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"13.0.2\" (was \"12.2.13\")...\r\n    Updating package.json with dependency @angular/router @ \"13.0.2\" (was \"12.2.13\")...\r\n  UPDATE package.json (5301 bytes)\r\n✔ Packages successfully installed.\r\n** Executing migrations of package '@angular/cli' **\r\n\r\n> Remove polyfills required only for Internet Explorer which is no longer supported.\r\n  UPDATE package.json (5267 bytes)\r\n  UPDATE apps/snapp/src/polyfills.ts (2961 bytes)\r\n  UPDATE apps/member/src/polyfills.ts (3053 bytes)\r\n  UPDATE apps/staff/src/polyfills.ts (2961 bytes)\r\n✔ Packages installed successfully.\r\n  Migration completed.\r\n\r\n> Remove no longer valid Angular schematic options from `angular.json`.\r\n  Migration completed.\r\n\r\n> Remove deprecated options from 'angular.json' that are no longer present in v13.\r\n  UPDATE angular.json (29522 bytes)\r\n  Migration completed.\r\n\r\n> Updating '.gitignore' to include '.angular/cache'.\r\n  UPDATE .gitignore (547 bytes)\r\n  Migration completed.\r\n\r\n> Update library projects to be published in partial mode and removed deprecated options from ng-packagr configuration.\r\n  Migration completed.\r\n\r\n** Executing migrations of package '@angular/core' **\r\n\r\n> Migrates `[routerLink]=\"\"` in templates to `[routerLink]=\"[]\"` because these links are likely intended to route to the current page with updated fragment/query params.\r\n× Migration failed: Cannot read property 'readWorkspace' of undefined\r\n  See \"C:\\Users\\BENEDI~1\\AppData\\Local\\Temp\\ng-0SNaUB\\angular-errors.log\" for further details.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nC:\\Workspace\\Nova\\Avatar>ng version\r\n\r\n     _                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 12.2.13\r\nNode: 14.18.1\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\nAngular: 12.2.13\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.13.10\r\n@angular-devkit/build-angular   12.2.13\r\n@angular-devkit/core            7.3.10\r\n@angular-devkit/schematics      12.2.13\r\n@schematics/angular             12.2.13\r\nrxjs                            6.5.5\r\ntypescript                      4.3.5\r\n\r\n\r\nC:\\Workspace\\Nova\\Avatar>\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44272","RelatedDescription":"Open issue \"Migrating from Angular 12.2.13 to Angular 13.0.2 Unsuccessful\" (#44272)"},{"Id":"1062972381","IsPullRequest":false,"CreatedAt":"2021-11-24T22:41:53","Actor":"LPCmedia","Number":"44271","RawContent":null,"Title":"Unable to test / mock dom sanitizer - unsafe value used in a resource URL context","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes, this showed up with angular 13 + mjs fesm2020\r\n\r\n### Description\r\n\r\nWhen testing a component that contains an iframe with a url binding, we cannot mock bypassSecurityTrustResourceUrl from the DomSanitizer. Running fixture.detectChanges() generates an error:  \r\n\r\nunsafe value used in a resource URL context (see https://g.co/ng/security#xss)\r\n\r\nSeems that angular core is internally not using DomSanitizer in core.mjs' elementPropertyInternal which leads to the attached  error. \r\n\r\nlooking for a clear way / guide to test in this case and/or fix. This is new with ng13 and mjs modules. \r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/LPCmedia/sanitizer-test-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nunsafe value used in a resource URL context (see https://g.co/ng/security#xss)\r\n\r\n      at ɵɵsanitizeResourceUrl (../../node_modules/@angular/core/fesm2020/core.mjs:6023:11)\r\n      at elementPropertyInternal (../../node_modules/@angular/core/fesm2020/core.mjs:10062:37)\r\n      at ɵɵproperty (../../node_modules/@angular/core/fesm2020/core.mjs:14770:9)\r\n      at AppComponent_Template (../../ng:/AppComponent.js:7:21)\r\n      at executeTemplate (../../node_modules/@angular/core/fesm2020/core.mjs:9637:9)\r\n      at refreshView (../../node_modules/@angular/core/fesm2020/core.mjs:9503:13)\r\n      at refreshComponent (../../node_modules/@angular/core/fesm2020/core.mjs:10674:13)\r\n      at refreshChildComponents (../../node_modules/@angular/core/fesm2020/core.mjs:9299:9)\r\n      at refreshView (../../node_modules/@angular/core/fesm2020/core.mjs:9553:13)\r\n      at renderComponentOrTemplate (../../node_modules/@angular/core/fesm2020/core.mjs:9617:9)\r\n      at tickRootContext (../../node_modules/@angular/core/fesm2020/core.mjs:10848:9)\r\n      at detectChangesInRootView (../../node_modules/@angular/core/fesm2020/core.mjs:10873:5)\r\n      at RootViewRef.detectChanges (../../node_modules/@angular/core/fesm2020/core.mjs:21796:9)\r\n      at ComponentFixture._tick (../../node_modules/@angular/core/fesm2015/testing.mjs:141:32)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.0.3\r\nNode: 14.17.0\r\nPackage Manager: npm 6.14.13\r\nOS: darwin x64\r\n\r\nAngular: 13.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            13.0.3\r\n@angular-devkit/schematics      13.0.3\r\n@angular/cli                    13.0.3\r\n@schematics/angular             13.0.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44271","RelatedDescription":"Open issue \"Unable to test / mock dom sanitizer - unsafe value used in a resource URL context\" (#44271)"},{"Id":"1061716524","IsPullRequest":false,"CreatedAt":"2021-11-24T22:10:00","Actor":"jzabinski-dolios","Number":"44254","RawContent":null,"Title":"Private router property exposed via route.snapshot","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nRoute snapshots apparently expose properties private to the router. These can be manipulated by apps, which can break the router.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular-ivy-c9ixc5.stackblitz.io/\n\n### Please provide the exception or error you saw\n\n```true\nNo exception, but the router fails to operate correctly.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nDiscovered in 12.2.13, but reproduces in Angular 13.\r\n\r\nAngular CLI: 13.0.3\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: darwin x64\r\n\r\nAngular: 13.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            13.0.3\r\n@angular-devkit/schematics      13.0.3\r\n@angular/cli                    13.0.3\r\n@schematics/angular             13.0.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\n```\n\n\n### Anything else?\n\nThe attached Stackblitz has a few different levels of `router-outlet` and a button. When the button is clicked, the router state should go from ./child1/child2 to ./child1/child2;newParam=123. Instead it remains ./child1/child2.\r\n\r\nThe core issue is that when `route.snapshot` is used, `route.snapshot.url` seems to refer directly to the `UrlTree` object stored in `router.browserUrlTree`. If properties from the `UrlTree` are manipulated in the app, they are changed on the private instance of the router.\r\n\r\nThe attached Stackblitz uses this code:\r\n\r\n```\r\ngetChildSegments(route: ActivatedRoute): Array<string | Params> {\r\n    const childSegments: Array<string | Params> = [];\r\n    while (route.firstChild) {\r\n      const snpsht = route.snapshot;\r\n      childSegments.push(\r\n        ...snpsht.url.map(segment => [segment.path, segment.parameters]).flat()\r\n    );\r\n      route = route.firstChild;\r\n    }\r\n    return childSegments;\r\n  }\r\n```\r\n\r\nThe basic idea is to collect segments for route children so that they can be defined in a later call to `router.navigate`. The overall use case is to be able to define a matrix parameter for a child segment.\r\n\r\nBut with a reference to the private router state, code like this becomes a problem:\r\n```\r\nconst [childPath, childParams] = this.getChildSegments(this.route);\r\nObject.defineProperty(childParams, 'newParam', {\r\n      value: '123',\r\n      enumerable: true,\r\n    });\r\nthis.router\r\n      .navigate(['./', anyMatrixParams, childPath, childParams],\r\n      { queryParams: this.route.snapshot.queryParams })\r\n      .catch((err) => console.error(err));\r\n```\r\n\r\nIn the above code, `childParams` is part of the definition of the private router state. So when a new property is added, the router can no longer detect that the URL has changed. The detection is attempted [here](https://github.com/angular/angular/blob/master/packages/router/src/router.ts#L659) but since the app was allowed to alter `router.browserUrlTree` directly, `t.extractedUrl.toString()` and `browserUrlTree` are prematurely equal. The router thus incorrectly assumes that this is a duplicate route.\r\n\r\nThe suggested fix is to provide a copy of anything private to the router in any references accessed through the `ActivatedRoute`.","Url":"https://github.com/angular/angular/issues/44254","RelatedDescription":"Closed issue \"Private router property exposed via route.snapshot\" (#44254)"},{"Id":"1062941199","IsPullRequest":true,"CreatedAt":"2021-11-24T21:54:20","Actor":"AndrewKushnir","Number":"44270","RawContent":null,"Title":"refactor(core): cleanup `DebugNode` and `DebugElement` implementations","State":"open","Body":"This commit updates `DebugNode` and `DebugElement` implementaitons to cleanup ViewEngine removal artifacts. There is no need for a separate interface and implementation class, so we can combine them now. This comment also gets rid of `R3` suffixes (denoting Ivy) in helper methods.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44270","RelatedDescription":"Open PR \"refactor(core): cleanup `DebugNode` and `DebugElement` implementations\" (#44270)"},{"Id":"1062934700","IsPullRequest":true,"CreatedAt":"2021-11-24T21:44:38","Actor":"JoostK","Number":"44269","RawContent":null,"Title":"Remove ve ngc","State":"open","Body":"Just removing some code, nothing to see here 👀 But if you must, please see the individual commits.","Url":"https://github.com/angular/angular/pull/44269","RelatedDescription":"Open PR \"Remove ve ngc\" (#44269)"},{"Id":"1062928227","IsPullRequest":true,"CreatedAt":"2021-11-24T21:34:18","Actor":"atscott","Number":"44268","RawContent":null,"Title":"fix(language-service): Correctly inputs and selectors with dollar signs","State":"open","Body":"When we are going to the definition of an input, we find _both_ the\r\ndefinition of the input _and_ also look for any directives which have\r\na selector that matches the input. For example:\r\n\r\n```\r\n@Directive({\r\n  selector: '[greeting]'\r\n})\r\nexport class MyDir {\r\n  @Input() greeting!: string;\r\n}\r\n```\r\n\r\nWith this commit, we now correctly handle the case where inputs and/or\r\nselectors have a dollar sign in them. The dollar sign has special\r\nmeaning in CSS, but when we encounter the dollar in a template, we need\r\nto escape it when used as a selector so that it is taken as a dollar\r\nliteral rather than a character with special meaning.\r\n\r\nPreviously, we were not escaping the dollar sign and the CSS parsing\r\nlogic would throw an error. The change in this commit prevents that\r\nerror from happening, but a `try...catch` is still added in case there\r\nis another unhandled use-case. If this happens, we do not want the\r\n`goToDefinition` operation to completely fail.\r\n\r\nFixes https://github.com/angular/vscode-ng-language-service/issues/1574\r\n","Url":"https://github.com/angular/angular/pull/44268","RelatedDescription":"Open PR \"fix(language-service): Correctly inputs and selectors with dollar signs\" (#44268)"},{"Id":"1062896508","IsPullRequest":true,"CreatedAt":"2021-11-24T21:02:23","Actor":"JoostK","Number":"44267","RawContent":null,"Title":"refactor(platform-browser-dynamic): remove private export of `Resourc…","State":"open","Body":"…eLoaderImpl`\r\n\r\nThis type was exported for the ViewEngine compiler as it needed to\r\nreference the class in its DI codegen. This is no longer a requirement\r\nwith Ivy, hence the private export can be removed.\r\n\r\nThis change prevents an import of `@angular/compiler` to be referenced\r\nin the .d.ts file of `@angular/platform-browser-dynamic`, which is\r\nbeneficial for application compilations as that prevents the\r\n`@angular/compiler` .d.ts files from being included in the `ts.Program`\r\nof an application.\r\n\r\nCloses #44157.","Url":"https://github.com/angular/angular/pull/44267","RelatedDescription":"Open PR \"refactor(platform-browser-dynamic): remove private export of `Resourc…\" (#44267)"},{"Id":"1062886462","IsPullRequest":true,"CreatedAt":"2021-11-24T20:55:03","Actor":"dario-piotrowicz","Number":"44266","RawContent":null,"Title":"fix(docs-infra): add safari-only media query for aio footer flex","State":"open","Body":"safari handles rem based media queries differently so in order to\r\nprovide a similar user-experience to safari users, add a new\r\nsafari-only media query for the footer's flex container\r\n\r\nsolves #44242\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #44242\r\n\r\n\r\n## What is the new behavior?\r\n\r\nAdded a new media query which only applies to safari which fixes the issue\r\nwithout changing any style in non-safari browsers\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/44266","RelatedDescription":"Open PR \"fix(docs-infra): add safari-only media query for aio footer flex\" (#44266)"},{"Id":"1062879441","IsPullRequest":false,"CreatedAt":"2021-11-24T20:45:01","Actor":"AndrewKushnir","Number":"44265","RawContent":null,"Title":"AIO: UI improvements for deprecated APIs","State":"open","Body":"### Description\r\n\r\nSometimes it's a bit unclear that a particular API is deprecated, for example take a look at the \"entryComponents\" at https://angular.io/api/core/NgModule. It'd be great to highlight deprecated APIs as such a bit more. Here are some ideas:\r\n\r\n- on the summary list we can add a \"deprecated\" label/tag and also strikethrough the name:\r\n\r\n<img width=\"828\" alt=\"deprecated-ui-1\" src=\"https://user-images.githubusercontent.com/43554145/143310138-daef73fb-cb51-48ca-a662-842f0b2e635c.png\">\r\n\r\n- on a method/property details section we can do the same:\r\n\r\n<img width=\"811\" alt=\"deprecated-ui-2\" src=\"https://user-images.githubusercontent.com/43554145/143310201-8bce2695-ee54-486e-a315-973657112581.png\">\r\n\r\nAlso for some reasons the deprecation message itself is missing as well (see the message at https://github.com/angular/angular/blob/master/packages/core/src/metadata/ng_module.ts#L200-L203).\r\n\r\n### What is the affected URL?\r\n\r\nhttps://angular.io/api/core/NgModule","Url":"https://github.com/angular/angular/issues/44265","RelatedDescription":"Open issue \"AIO: UI improvements for deprecated APIs\" (#44265)"},{"Id":"1062866655","IsPullRequest":false,"CreatedAt":"2021-11-24T20:26:37","Actor":"AndrewKushnir","Number":"44264","RawContent":null,"Title":"AIO: deprecated APIs are not highlighted as such","State":"open","Body":"### Description\r\n\r\nDeprecated APIs are not highlighted as such on some of the AIO pages, for example:\r\n\r\nhttps://angular.io/api/core/PlatformRef\r\n\r\nThe `bootstrapModuleFactory` is deprecated, but it has no line through to indicate it. It looks like the CSS class is there and there is a problem with CSS rule specificity (correct rule is overridden by more specific one), see screen shot attached.\r\n\r\n<img width=\"1088\" alt=\"deprecated-api-ui\" src=\"https://user-images.githubusercontent.com/43554145/143308493-96f1be7b-b74a-4fde-8860-4b5f37d45f56.png\">\r\n\r\n\r\n### What is the affected URL?\r\n\r\nhttps://angular.io/api/core/PlatformRef","Url":"https://github.com/angular/angular/issues/44264","RelatedDescription":"Open issue \"AIO: deprecated APIs are not highlighted as such\" (#44264)"},{"Id":"1062849650","IsPullRequest":true,"CreatedAt":"2021-11-24T20:14:06","Actor":"AndrewKushnir","Number":"44263","RawContent":null,"Title":"wip: CI check for forms cleanup","State":"closed","Body":"This is a test-only PR, please do NOT review and do NOT merge.","Url":"https://github.com/angular/angular/pull/44263","RelatedDescription":"Closed or merged PR \"wip: CI check for forms cleanup\" (#44263)"},{"Id":"1062838955","IsPullRequest":true,"CreatedAt":"2021-11-24T20:10:05","Actor":"AndrewKushnir","Number":"44262","RawContent":null,"Title":"[13.0.x] test: remove Ivy/ViewEngine switch helpers and obsolete tests (#44120)","State":"closed","Body":"**This is a cherry-pick of the changes from PR #44120.**\r\n\r\nThis commit removes special functions that were used to run tests in ViewEngine or Ivy only.\r\nSince ViewEngine is deprecated and we no longer run ViewEngine tests on CI, we can cleanup\r\nthose special helpers and ViewEngine-only tests.\r\n\r\nPR Close #44120\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44262","RelatedDescription":"Closed or merged PR \"[13.0.x] test: remove Ivy/ViewEngine switch helpers and obsolete tests (#44120)\" (#44262)"},{"Id":"1062827156","IsPullRequest":true,"CreatedAt":"2021-11-24T19:32:28","Actor":"AndrewKushnir","Number":"44261","RawContent":null,"Title":"refactor(forms): minor refactoring of `SelectMultipleControlValueAccessor`","State":"open","Body":"This commit removes a branch in the code that was only needed for IE (which is no longer supported). The `selectedOptions` property of HTMLSelect elements is supported by all the browsers that Angular supports.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44261","RelatedDescription":"Open PR \"refactor(forms): minor refactoring of `SelectMultipleControlValueAccessor`\" (#44261)"},{"Id":"1062736319","IsPullRequest":true,"CreatedAt":"2021-11-24T18:10:53","Actor":"trekladyone","Number":"44260","RawContent":null,"Title":"docs: attribute binding changed to include only attribute binding wit…","State":"open","Body":"docs: attribute binding changed to include only attribute binding with class and style moved to their own docs\r\n","Url":"https://github.com/angular/angular/pull/44260","RelatedDescription":"Open PR \"docs: attribute binding changed to include only attribute binding wit…\" (#44260)"},{"Id":"1060973486","IsPullRequest":true,"CreatedAt":"2021-11-24T17:03:41","Actor":"gkalpak","Number":"44250","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 481eb4544","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/b8e198ba5...481eb4544):\n\n**Modified**\n- help/new.json","Url":"https://github.com/angular/angular/pull/44250","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to 481eb4544\" (#44250)"},{"Id":"1062401012","IsPullRequest":true,"CreatedAt":"2021-11-24T17:03:01","Actor":"artu-ole","Number":"44258","RawContent":null,"Title":"docs: fix issue link in v13 release notes","State":"closed","Body":"See:  #44181\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Documentation content changes\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nLink is broken\r\n![image](https://user-images.githubusercontent.com/15938416/143242901-317b954f-4e69-4580-8eea-e04d26df575d.png)\r\n\r\n\r\n\r\n## What is the new behavior?\r\n\r\nLink works\r\n![image](https://user-images.githubusercontent.com/15938416/143242952-69869bba-a174-4b84-90d2-9e3910fa4320.png)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44258","RelatedDescription":"Closed or merged PR \"docs: fix issue link in v13 release notes\" (#44258)"},{"Id":"1061854288","IsPullRequest":true,"CreatedAt":"2021-11-24T17:02:53","Actor":"jessicajaniuk","Number":"44255","RawContent":null,"Title":"ci: add jessicajaniuk to pullapprove groups","State":"closed","Body":"This adds jessicajaniuk to fw-animations and fw-testing.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: pull approve group changes\r\n\r\n\r\n## What is the current behavior?\r\nJessica is not in either of these groups.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\nJessica *is* in both of these groups.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/44255","RelatedDescription":"Closed or merged PR \"ci: add jessicajaniuk to pullapprove groups\" (#44255)"},{"Id":"1062453375","IsPullRequest":false,"CreatedAt":"2021-11-24T14:27:05","Actor":"burnaDLX","Number":"44259","RawContent":null,"Title":"required attribute on checkbox handled by a reactive form messes up error state","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n\r\nIf the required attribute is set for a checkbox handled by a reactive form, the entire form automatically receives `errors: {required: true}` after the view was initiated / when `ngAfterViewInit` was called. Even if the control itself has no error / is valid.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-q5mm3n\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 12.2.9\r\nNode: 14.17.1\r\nPackage Manager: npm 8.1.2\r\nOS: darwin x64\r\n\r\nAngular: 12.2.9\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                                    Version\r\n--------------------------------------------------------------------\r\n@angular-devkit/architect                  0.1202.9\r\n@angular-devkit/build-angular              12.2.9\r\n@angular-devkit/core                       12.2.9\r\n@angular-devkit/schematics                 12.2.9\r\n@angular/flex-layout                       12.0.0-beta.35\r\n@angular/platform-server                   12.2.10\r\n@nguniversal/builders                      12.1.1\r\n@nguniversal/express-engine                12.1.1\r\n@nguniversal/module-map-ngfactory-loader   8.2.6\r\n@schematics/angular                        12.2.9\r\nng-packagr                                 12.2.3\r\nrxjs                                       6.6.7\r\ntypescript                                 4.3.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44259","RelatedDescription":"Closed issue \"required attribute on checkbox handled by a reactive form messes up error state\" (#44259)"},{"Id":"1062290758","IsPullRequest":true,"CreatedAt":"2021-11-24T11:07:24","Actor":"crisbeto","Number":"44257","RawContent":null,"Title":"refactor(docs-infra): clean up entryComponents usages","State":"open","Body":"Cleans up some usages of `entryComponents` from AIO.","Url":"https://github.com/angular/angular/pull/44257","RelatedDescription":"Open PR \"refactor(docs-infra): clean up entryComponents usages\" (#44257)"},{"Id":"1062122326","IsPullRequest":false,"CreatedAt":"2021-11-24T08:12:36","Actor":"dsimon-onventis","Number":"44256","RawContent":null,"Title":"Provider class deps type safety","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncore\n\n### Description\n\nI have an interceptor which needs to inject a service. I followed [this SO thread](https://stackoverflow.com/questions/49238907/injected-service-in-httpinterceptor-not-initialized) and added the required service to the `deps`, so I can inject it.\r\n\r\nHowever, I just realized that the types of the injected services in the interceptor and the types of the provided `deps` are not checked against. So it can happen that in the `deps`, the wrong service is used. But this does neither lead to a build nor to a runtime error. That means, it can easily happen that an interceptor breaks without being noticed.\r\n\r\nI've set up a repo for demonstration: https://stackblitz.com/edit/angular-ivy-xgjm7m?file=src%2Fapp%2Fapp.module.ts\r\nWhen adding the correct service to the provider deps, an additional header will be added to the HTTP request. However, when injecting a wrong service, e.g. HttpClient, the header will not be added, but no error is thrown.\n\n### Proposed solution\n\nWhen using class providers with depency injection, the injected elements in the class constructor and the `deps` of the providers should be compared by the framework. In case of a mismatch, an error should be thrown.\n\n### Alternatives considered\n\nThe type of the injected services can be manually checked:\r\n\r\n```typescript\r\n@Injectable()\r\nexport class MyInterceptor implements HttpInterceptor {\r\n  constructor(private myService: MyService) {\r\n    if (!(this.myService instanceof MyService)) {\r\n      throw new Error('expected type MyService');\r\n    }\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // ... interceptor logic\r\n    return next.handle(request);\r\n  }\r\n}\r\n```","Url":"https://github.com/angular/angular/issues/44256","RelatedDescription":"Open issue \"Provider class deps type safety\" (#44256)"},{"Id":"1061712960","IsPullRequest":false,"CreatedAt":"2021-11-23T21:13:09","Actor":"dario-piotrowicz","Number":"44253","RawContent":null,"Title":"The animations docs need to be improved regarding elements entering and leaving (`:enter`, `:leave`)","State":"open","Body":"## Issue Description\r\n\r\nCurrently the animations documentation doesn't specify clearly what elements are animatable via `:enter` and `:leave`\r\n\r\nAs far as I can tell the only text saying something of that sort is this: https://angular.io/guide/transition-and-triggers#use-of-ngif-and-ngfor-with-enter-and-leave which I believe it's vague at best :sweat: \r\n\r\nNot even the [query api docs](https://angular.io/api/animations/query), nor the [transition api docs](https://angular.io/api/animations/transition) say anything about the restrictions/rules around entering/leaving elements\r\n\r\n## Contex\r\n\r\nThis has lead to misunderstanding and issues being opened (such as #30477)\r\n\r\nRelated to this, not even the [animations live example](https://stackblitz.com/run?file=src/app/app.component.ts) works smoothly as it doesn't seem to take this aspect into account (for example try to navigate from `Filter/Stagger` to `Open/Close`, you will see that the yellow box's animation doesn't get triggered as you'd expect it to)\r\n\r\n## Solution\r\n\r\nThe documentations should be improved and should make very clear what `:enter` and `:leave` applies to\r\n\r\n## Relevant points\r\n\r\n - the only elements considering by `:enter` and `:leave` are host elements and elements with structural directives\r\n - `query` is clearly being effected (as you can see in the discussion in #30477), I think that `transition` could be the same, other animation's api functions could also be affected by this so this should be investigated I believe\r\n - both the api docs and the animation guides should make clear what elements are considered as entering/leaving\r\n - the animations live example should be improved so that it works more smoothly/correctly and it also exemplifies the entering/leaving nuances (suggestion: with the live example's improvement, a docregion can be added with a section in the animations guide showcasing how to properly query entering elements, especially during routing)\r\n","Url":"https://github.com/angular/angular/issues/44253","RelatedDescription":"Open issue \"The animations docs need to be improved regarding elements entering and leaving (`:enter`, `:leave`)\" (#44253)"},{"Id":"1061683723","IsPullRequest":false,"CreatedAt":"2021-11-23T20:31:30","Actor":"todoroff","Number":"44252","RawContent":null,"Title":"Two-way binding gets out of sync if the change handler doesn't set a new state value","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI've got the following component\r\n\r\nTS:\r\n```typescript\r\nexport class AppComponent {\r\n  state = \"\";\r\n  onChange(value: string) {\r\n    this.state = \"Never change\";\r\n  }\r\n}\r\n```\r\n\r\nHTML:\r\n\r\n```\r\n<input type=\"text\" [ngModel]=\"state\" (ngModelChange)=\"onChange($event)\" />\r\n<hr />\r\n<input type=\"text\" [ngModel]=\"state\" (ngModelChange)=\"onChange($event)\" />\r\n<p>{{ state }}</p>\r\n```\r\nI would expect that once I start typing in any of the two input fields, their value will first turn into \"Never change\" and then stay that way as I keep typing. However, that only works properly the first time.\r\n\r\nWhat happens is that the first time I type a character in one of the fields, the DOM value of both turns into \"Never change\". However, if I keep typing, the DOM value of the input I'm typing into, gets out of sync with the actual state variable.\r\n\r\nI've also noticed that if in the onChange handler I set state to a random value, it works as expected. It's only a problem when I set it to the same value every time.\r\n\r\nI've also tried using [value] and (input) instead of [ngModel] and (ngModelChange), but I'm getting the same issue.\r\n\r\nThe problem doesn't appear to be limited to just input fields either. I've tried on select elements where I want to run some validation in an onSelect handler and not update the DOM value with the selected option if the check fails.\r\n\r\nIf this is not a bug, is there a proper way to achieve this? I'd like the DOM value to be bound to the state value at all times, so I can be sure that what's in the DOM is a function of what's in state.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://codesandbox.io/s/practical-shadow-ui72r?file=/src/app/app.component.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44252","RelatedDescription":"Open issue \"Two-way binding gets out of sync if the change handler doesn't set a new state value\" (#44252)"},{"Id":"1059355501","IsPullRequest":true,"CreatedAt":"2021-11-23T20:14:43","Actor":"dario-piotrowicz","Number":"44243","RawContent":null,"Title":"fix(animations): allow enter animation of every inserted element","State":"closed","Body":"currently in the animations package not all newly inserted elements\r\nare treated as entering ones, thus querying them via ':enter' does not\r\nalways work as expeted, change such behavior so that all newly inserted\r\nelements are considered entering ones\r\n\r\nsolves: #30477\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix __(sort of)__\r\n- [x] Feature __(sort of)__\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/angular/angular/issues/30477\r\n\r\nIn the angular package querying \"entering\" elements not always work, this has caused confusion amongst developers as some of their animations were not being applied as they expected to\r\n\r\n(for more details see the issue thread and PR https://github.com/angular/angular/pull/44216)\r\n\r\n## What is the new behavior?\r\n\r\nAll elements added to the DOM are not treated as \"moving\" ones as such they can be queried with \":enter\" as one would expect to\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n- [x] Likely\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n- I think that the changes here are debatable, the behaviour of not treating all new elements as \"entering\"/\"move\" ones seems to have been put in place purposely, I believe that the logic being was to only allow \":enter\" queries to work on elements that enter by their own accord and not those that enter because of their parents, if an element enters because of its parent then the parent's transition can be \":enter\" and the query will be specific for the child itself.\r\nThus I am not 100% sure if these changes are actually providing a real benefit, or if we should just change the documentation to make clear when child elements can be queried or not based on the existing implementation (meaning, is it really important to be able to do `transition(\":enter\", [ query(\":enter\", ...`? does that provide a clear better developer experience? are there instances this implementation doesn't provide the functionality needed?)\r\n\r\n- [some aio docs animations](https://angular.io/guide/route-animations) don't work properly because of this issue (or the lack of clarity around it)","Url":"https://github.com/angular/angular/pull/44243","RelatedDescription":"Closed or merged PR \"fix(animations): allow enter animation of every inserted element\" (#44243)"},{"Id":"1060974392","IsPullRequest":true,"CreatedAt":"2021-11-23T17:09:26","Actor":"gkalpak","Number":"44251","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 1390fc8c9","State":"closed","Body":"Updating [angular#13.0.x](https://github.com/angular/angular/tree/13.0.x) from [cli-builds#13.0.x](https://github.com/angular/cli-builds/tree/13.0.x).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/afd86f0cd...1390fc8c9):\n\n**Modified**\n- help/new.json","Url":"https://github.com/angular/angular/pull/44251","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to 1390fc8c9\" (#44251)"},{"Id":"1060893293","IsPullRequest":false,"CreatedAt":"2021-11-23T07:56:29","Actor":"DD-hd","Number":"44249","RawContent":null,"Title":"if my project import zone, Antd select will  execute in Infinite loop.  Help me，Please!","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThis is simple demo，if you select the option ，you web will in lock，and no import zone，it will be normal\r\n\r\ndemo project： https://stackblitz.com/edit/react-xq6x7r?file=index.js [project link](https://stackblitz.com/edit/react-xq6x7r?file=index.js)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/react-xq6x7r?file=index.js\n\n### Please provide the exception or error you saw\n\n```true\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Select } from 'antd';\r\nimport 'zone.js';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction handleChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={handleChange}>\r\n      <Option value=\"jack\">Jack</Option>\r\n      <Option value=\"lucy\">Lucy</Option>\r\n      <Option value=\"disabled\" disabled>\r\n        Disabled\r\n      </Option>\r\n      <Option value=\"Yiminghe\">yiminghe</Option>\r\n    </Select>\r\n    <Select defaultValue=\"lucy\" style={{ width: 120 }} disabled>\r\n      <Option value=\"lucy\">Lucy</Option>\r\n    </Select>\r\n    <Select defaultValue=\"lucy\" style={{ width: 120 }} loading>\r\n      <Option value=\"lucy\">Lucy</Option>\r\n    </Select>\r\n    <Select defaultValue=\"lucy\" style={{ width: 120 }} allowClear>\r\n      <Option value=\"lucy\">Lucy</Option>\r\n    </Select>\r\n  </>,\r\n  document.getElementById('container')\r\n);\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\nplease help me","Url":"https://github.com/angular/angular/issues/44249","RelatedDescription":"Closed issue \"if my project import zone, Antd select will  execute in Infinite loop.  Help me，Please!\" (#44249)"},{"Id":"1060525682","IsPullRequest":false,"CreatedAt":"2021-11-22T19:39:50","Actor":"mrahhal","Number":"44248","RawContent":null,"Title":"Add more useful info to navigation events, in particular whether only params where changed for example","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nI'm migrating from ui-router to the angular router, and while I'm missing a few minor niceties here and there, there's a particular blocking issue we're facing. The navigation events are extremally barebones when it comes to the info they provide. Here's the current `NavigationStart` event, only having a string url and the trigger as info:\r\nhttps://github.com/angular/angular/blob/d015ac214f4e372607403e6e93c48f8a2b5014f9/packages/router/src/events.ts#L47-L108\r\n\r\nWe have a particularly common workflow, we update query params in response to user input (for example a search page) so that state is preserved on refreshes. But we also subscribe to navigation events to centrally handle showing spinners for loading among other things. This causes the input to lose focus when this happens (so every time the user actually is writing text), so this is a huge blocking issue in almost all our pages.\r\n\r\nIn ui-router, we were easily able to tell transitions that are dynamic apart (i.e transitions that only changed query params) and so we could ignore these kinds of navigations in our handlers.\r\n\r\n### Proposed solution\r\n\r\nI'm proposing adding more useful info to the navigation events, in particular info relating to _what actually changed_ in this transition.\r\n\r\nI'm proposing the following additional properties on all navigation events:\r\n- `dynamic`: Whether the navigation only changes params or query params. (maybe can have a better name?)\r\n\r\nAdditional props that I think would be helpful in certain situations:\r\n- `snapshot`: The current route snapshot. Why not expose this in the event instead of making the user retrieve it through DI and the router service.\r\n- `extras`: The `NavigationExtras` object that was supplied when navigation was called, if the trigger is imperative.\r\n\r\nLooking at the code, this looks straightforward. I'm ready to work on a PR for this as I'm completely blocked by it right now.\r\n\r\n### Alternatives considered\r\n\r\nIn the event object, there's simply no way to know what the transition actually changed from the event itself without doing some tracking myself. For the same goal, you can use the `pairwise` rxjs operator to get the previous event, and then compare to see what changed. This has one big problem, it fails when a navigation is canceled/errors as it's taking a cancelled previous url that is stale. This is completely unfeasible.\r\n\r\nSecond, I tried working around this by actually tracking the active element and restoring that after the navigation to restore lost focus. This is very hacky and unstable, I'm not comfortable at all with this kind of solution.","Url":"https://github.com/angular/angular/issues/44248","RelatedDescription":"Open issue \"Add more useful info to navigation events, in particular whether only params where changed for example\" (#44248)"},{"Id":"1060180952","IsPullRequest":false,"CreatedAt":"2021-11-22T13:50:44","Actor":"Abuntxa","Number":"44247","RawContent":null,"Title":"Runtime Metadata lookup for module types for lazy loaded modules (Module federation)","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nAngular modules are a good match for module federation (Microfrontend implementation). They are able to group in a single package components and their dependencies and expose them as a group. \r\n\r\nIn order to create dynamically on the remote part a component it is required a ComponentFactory and a ViewContainerRef.\r\nIn order to create the ComponentFactory (of the remote component), it is required a ComponentFactoryResolver and a Type. The ComponentFactoryResolver can be obtained from the remote imported module. But in order to get the type dynamically there is not any straight way:\r\n\r\n1. You could create a convention in the root modules to be exposed remotely, exposing a static property exposing the types of the exposed modules.  This viable solution is covered [in this great article ](https://medium.com/@lneninger_43705/loading-components-dynamically-in-angular-eecbad8685b9) where he uses the \"entry\" property convention [1](https://github.com/lneninger/articles-examples/blob/ed85369f5a6f23109937b20285ef2648157495d1/examples-lazycomponent/src/app/features/dashboard/%2Blazy-components/statistics/statistics.module.ts#L23) [2](https://github.com/lneninger/articles-examples/blob/ed85369f5a6f23109937b20285ef2648157495d1/examples-lazycomponent/src/app/shared/utils/lazy-loader/lazy-loader-service.ts#L68).\r\n2. You could define a root register service where modules register their types when loading.\r\n\r\nBoth solutions would work but they require quite some work and a convention, when the information is already there inside Angular structures.\r\n\r\n\r\n### Proposed solution\r\n\r\nProvide a unified and standard way of accessing the types exposed by a Module (.net Reflection kind of).\r\n\r\nCurrently, when you obtain a NgModuleFactory the moduleType already contains all the required information but in angular's internal structures (\"ɵmod\" property). \r\n\r\n\r\nI would suggest extending the NgModuleFactory and exposing a new Getter method that will provide with all the effectively exposed component types. When I mean effectively, I mean analyzing recursivelly all the imported modules in order to add their components too.\r\n\r\n### Alternatives considered\r\n\r\nAs I exposed there is the convention solution used in this article ([modules with \"entry\" static property)](https://github.com/lneninger/articles-examples/blob/ed85369f5a6f23109937b20285ef2648157495d1/examples-lazycomponent/src/app/features/dashboard/%2Blazy-components/statistics/statistics.module.ts#L23) and global type register auto-registering modules.\r\n","Url":"https://github.com/angular/angular/issues/44247","RelatedDescription":"Open issue \"Runtime Metadata lookup for module types for lazy loaded modules (Module federation)\" (#44247)"},{"Id":"1060146533","IsPullRequest":false,"CreatedAt":"2021-11-22T13:17:41","Actor":"fstorz","Number":"44246","RawContent":null,"Title":"Service Worker performance strategy ignores images","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen adding service worker to angular app and configure `dataGroups` cache `strategy` to `performance`, matching images are not cached. When using the same project with `strategy` set to `freshness`, images are cached for offline use.\r\n\r\n```json\r\n  \"dataGroups\": [\r\n    {\r\n      \"name\": \"images\",\r\n      \"cacheConfig\": {\r\n        \"maxAge\": \"10d\",\r\n        \"maxSize\": 10,\r\n        \"strategy\": \"performance\",\r\n        \"timeout\": \"10s\"\r\n      },\r\n      \"urls\": [\r\n        \"https://**/*.jpg\"\r\n      ]\r\n    }\r\n  ]\r\n```\r\n\r\nTo Reproduce:\r\n* clone linked repo (Angular CLI project enhanced with `ng add @angular/pwa`)\r\n* build project: `ng build` (no `--prod` needed as production build is the default)\r\n* serve build files by e.g. http-server (`http-server dist/Image-Cache-Service-Worker`)\r\n* open browser on http://localhost:8080\r\n* Check in DevTools that image is not cached\r\n\r\n![image](https://user-images.githubusercontent.com/27813536/142867704-06697203-e286-499f-a972-b9e08d1b39d7.png)\r\n\r\nWhen following above steps but changing the cache strategy to freshness, the image is cached (at least after one reload of the page).\r\n\r\n![image](https://user-images.githubusercontent.com/27813536/142868218-c7e8f6b0-7b6b-4886-a7f3-df5563579604.png)\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/fstorz/angular-service-worker-image-cache-bug-demo\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 12.2.13\r\nNode: 17.0.1 (Unsupported)\r\nPackage Manager: npm 8.1.0\r\nOS: darwin x64\r\n\r\nAngular: 12.2.13\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.13\r\n@angular-devkit/build-angular   12.2.13\r\n@angular-devkit/core            12.2.13\r\n@angular-devkit/schematics      12.2.13\r\n@schematics/angular             12.2.13\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44246","RelatedDescription":"Open issue \"Service Worker performance strategy ignores images\" (#44246)"},{"Id":"1059480695","IsPullRequest":true,"CreatedAt":"2021-11-21T20:35:46","Actor":"gkalpak","Number":"44245","RawContent":null,"Title":"fix(ngcc): several ngcc fixes and test improvements","State":"open","Body":"See individual commits for details.\r\n\r\n##\r\nFixes #44019.","Url":"https://github.com/angular/angular/pull/44245","RelatedDescription":"Open PR \"fix(ngcc): several ngcc fixes and test improvements\" (#44245)"},{"Id":"1059392738","IsPullRequest":true,"CreatedAt":"2021-11-21T14:22:18","Actor":"dario-piotrowicz","Number":"44244","RawContent":null,"Title":"docs: fix instructions for debugging a karma test","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\nNot sure if the instructions provided are totally correct, when I run the locally I get the following error:\r\n\r\n![Screenshot at 2021-11-21 14-15-08](https://user-images.githubusercontent.com/61631103/142765598-d2a77442-70ca-4108-aae9-4854d80dec43.png)\r\n\r\n## What is the new behavior?\r\n\r\nThe instructions have been updated\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n@gkalpak :slightly_smiling_face::+1:","Url":"https://github.com/angular/angular/pull/44244","RelatedDescription":"Open PR \"docs: fix instructions for debugging a karma test\" (#44244)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1062275078","IsPullRequest":true,"CreatedAt":"2021-11-24T19:01:53","Actor":"alan-agius4","Number":"22225","RawContent":null,"Title":"v10 `ng update` fixes ","State":"closed","Body":"Back-porting of https://github.com/angular/angular-cli/pull/22033, https://github.com/angular/angular-cli/pull/21986/ and https://github.com/angular/angular-cli/pull/22200","Url":"https://github.com/angular/angular-cli/pull/22225","RelatedDescription":"Closed or merged PR \"v10 `ng update` fixes \" (#22225)"},{"Id":"1062115970","IsPullRequest":true,"CreatedAt":"2021-11-24T16:12:34","Actor":"renovate[bot]","Number":"22221","RawContent":null,"Title":"build: update angular to 21044c7","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `361f0e6` -> `21044c7` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `1e57d2b` -> `16a215f` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `e432a6b` -> `31338a0` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `5b954fc` -> `79c4e6c` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `2e5ca4f` -> `c74f1c4` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `654e9bb` -> `287514f` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `2ca7839` -> `4b9464f` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `0fba0a5` -> `bb28d9a` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6b77d59` -> `b795bc0` |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | `b74419b` -> `743cd09` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `2f24da7` -> `542966d` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `08ffb33` -> `cdb00b4` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e142f75` -> `e513863` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `0cc8407` -> `c609d7e` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `a5f82d2` -> `7e502a8` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `6d2730a` -> `1101358` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22221","RelatedDescription":"Closed or merged PR \"build: update angular to 21044c7\" (#22221)"},{"Id":"1062532337","IsPullRequest":true,"CreatedAt":"2021-11-24T16:12:11","Actor":"alan-agius4","Number":"22227","RawContent":null,"Title":"fix(@angular/cli): exit with a non-zero error code when migration fails during `ng update`","State":"closed","Body":"\r\n\r\nIn some cases, when a migration fails an error is not thrown, instead the `executeMigration` return a `false` value when resolved.\r\n\r\nWith this change, we fix an issue were failed migrations resulted in the process of not terminating with a non-zero error code.","Url":"https://github.com/angular/angular-cli/pull/22227","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): exit with a non-zero error code when migration fails during `ng update`\" (#22227)"},{"Id":"1062230703","IsPullRequest":true,"CreatedAt":"2021-11-24T16:11:57","Actor":"alan-agius4","Number":"22223","RawContent":null,"Title":" v12 `ng update` fixes","State":"closed","Body":"Back-porting of https://github.com/angular/angular-cli/pull/22033, https://github.com/angular/angular-cli/pull/21986/ and https://github.com/angular/angular-cli/pull/22200","Url":"https://github.com/angular/angular-cli/pull/22223","RelatedDescription":"Closed or merged PR \" v12 `ng update` fixes\" (#22223)"},{"Id":"1062251048","IsPullRequest":true,"CreatedAt":"2021-11-24T16:11:40","Actor":"alan-agius4","Number":"22224","RawContent":null,"Title":"v11 `ng update` fixes","State":"closed","Body":"Back-porting of https://github.com/angular/angular-cli/pull/22033, https://github.com/angular/angular-cli/pull/21986/ and https://github.com/angular/angular-cli/pull/22200","Url":"https://github.com/angular/angular-cli/pull/22224","RelatedDescription":"Closed or merged PR \"v11 `ng update` fixes\" (#22224)"},{"Id":"1062402719","IsPullRequest":false,"CreatedAt":"2021-11-24T13:01:31","Actor":"montella1507","Number":"22226","RawContent":null,"Title":"Rebuild on NG12 superslow + errors only on rebuild","State":"open","Body":"Hi, \r\n\r\nwe have updated our project to angular 12 - package and package-lock is in zip archive package.zip:\r\n[package.zip](https://github.com/angular/angular-cli/files/7595690/package.zip)\r\n\r\n- clean install (removed package-lock -> rimraf node_moduels -> npm i)\r\n\r\nWe have encountered strange behavior:\r\n- 1st build takes the same time as previous version\r\n- rebuild is EXTREMELY slower than previosu version (like 1sec ->  95sec)\r\n- there are errors in compilation but application is successfully compiled and emited (it works in browser)\r\n- all errors are types of \"type checking\"\r\n- however, in ALL tsconfig.*.json files is set to \"strict\": false\r\n- rebulid is slow ONLY for typescript files, not .html templates \r\n- it is crashing sometimes. (exit code 1)\r\n\r\n\r\nIt seems to be related to some kind of compile-time linting / type checking.. \r\nHowever:\r\n- strict: is set to false \r\n- it occurs ONLY on rebuild, not first build. (no ERRORS on first build, rebuild = tons of errors - type checks..)\r\n- it doesnt occur when i change HTML, only typescript\r\n\r\n\r\nCPUprofile attached in archive:\r\n[vscode-profile-2021-11-24-13-58-05.zip](https://github.com/angular/angular-cli/files/7595784/vscode-profile-2021-11-24-13-58-05.zip)\r\n\r\n\r\nNote:\r\n- i can do just small change in app.component.ts which is referenced almost nowhere and it takes 90sec to rebuild. HTML change takes  800ms to rebuild","Url":"https://github.com/angular/angular-cli/issues/22226","RelatedDescription":"Open issue \"Rebuild on NG12 superslow + errors only on rebuild\" (#22226)"},{"Id":"1062116353","IsPullRequest":true,"CreatedAt":"2021-11-24T11:36:55","Actor":"renovate[bot]","Number":"22222","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@bazel/jasmine](https://togithub.com/bazelbuild/rules_nodejs) | [`4.4.5` -> `4.4.6`](https://renovatebot.com/diffs/npm/@bazel%2fjasmine/4.4.5/4.4.6) | [![age](https://badges.renovateapi.com/packages/npm/@bazel%2fjasmine/4.4.6/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@bazel%2fjasmine/4.4.6/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@bazel%2fjasmine/4.4.6/compatibility-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@bazel%2fjasmine/4.4.6/confidence-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) |\n| [@bazel/typescript](https://togithub.com/bazelbuild/rules_nodejs) | [`4.4.5` -> `4.4.6`](https://renovatebot.com/diffs/npm/@bazel%2ftypescript/4.4.5/4.4.6) | [![age](https://badges.renovateapi.com/packages/npm/@bazel%2ftypescript/4.4.6/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@bazel%2ftypescript/4.4.6/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@bazel%2ftypescript/4.4.6/compatibility-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@bazel%2ftypescript/4.4.6/confidence-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) |\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | [`4.4.5` -> `4.4.6`](https://renovatebot.com/diffs/npm/build_bazel_rules_nodejs/4.4.5/4.4.6) | [![age](https://badges.renovateapi.com/packages/github-releases/build_bazel_rules_nodejs/4.4.6/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-releases/build_bazel_rules_nodejs/4.4.6/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-releases/build_bazel_rules_nodejs/4.4.6/compatibility-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-releases/build_bazel_rules_nodejs/4.4.6/confidence-slim/4.4.5)](https://docs.renovatebot.com/merge-confidence/) |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | [`13.0.6` -> `13.0.7`](https://renovatebot.com/diffs/npm/ng-packagr/13.0.6/13.0.7) | [![age](https://badges.renovateapi.com/packages/npm/ng-packagr/13.0.7/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/ng-packagr/13.0.7/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/ng-packagr/13.0.7/compatibility-slim/13.0.6)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/ng-packagr/13.0.7/confidence-slim/13.0.6)](https://docs.renovatebot.com/merge-confidence/) |\n| [webpack](https://togithub.com/webpack/webpack) | [`5.64.2` -> `5.64.3`](https://renovatebot.com/diffs/npm/webpack/5.64.2/5.64.3) | [![age](https://badges.renovateapi.com/packages/npm/webpack/5.64.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/webpack/5.64.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/webpack/5.64.3/compatibility-slim/5.64.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/webpack/5.64.3/confidence-slim/5.64.2)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v4.4.6`](https://togithub.com/bazelbuild/rules_nodejs/blob/master/CHANGELOG.md#&#8203;446-httpsgithubcombazelbuildrulesnodejscompare445446-2021-11-23)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/4.4.5...4.4.6)\n\n##### Bug Fixes\n\n-   add arm64 as a platform to //packages/concatjs:docs_scrub_platform ([#&#8203;3089](https://togithub.com/bazelbuild/rules_nodejs/issues/3089)) ([bc2803a](https://togithub.com/bazelbuild/rules_nodejs/commit/bc2803a))\n-   normalize module path passed to runfiles helper for robustness ([#&#8203;3094](https://togithub.com/bazelbuild/rules_nodejs/issues/3094)) ([3c44f51](https://togithub.com/bazelbuild/rules_nodejs/commit/3c44f51))\n-   remove trailing forward slash when resolving workspace root link in runfiles MANIFEST ([#&#8203;3093](https://togithub.com/bazelbuild/rules_nodejs/issues/3093)) ([6af7317](https://togithub.com/bazelbuild/rules_nodejs/commit/6af7317))\n-   update tsconfigs to include darwin_arm64-fastbuild in rootDirs ([#&#8203;3087](https://togithub.com/bazelbuild/rules_nodejs/issues/3087)) ([104420b](https://togithub.com/bazelbuild/rules_nodejs/commit/104420b))\n-   **builtin:** don't use local:1 spawn ([#&#8203;3084](https://togithub.com/bazelbuild/rules_nodejs/issues/3084)) ([f886b82](https://togithub.com/bazelbuild/rules_nodejs/commit/f886b82))\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr</summary>\n\n### [`v13.0.7`](https://togithub.com/ng-packagr/ng-packagr/blob/master/CHANGELOG.md#&#8203;1307-httpsgithubcomng-packagrng-packagrcomparev1306v1307-2021-11-23)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/v13.0.6...v13.0.7)\n\n</details>\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v5.64.3`](https://togithub.com/webpack/webpack/releases/v5.64.3)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v5.64.2...v5.64.3)\n\n### Performance\n\n-   allow to use pre-compiled schema when `Infinity` is used in configuration\n-   allow to use pre-compiled schema for configuration arrays\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22222","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#22222)"},{"Id":"1061443946","IsPullRequest":true,"CreatedAt":"2021-11-23T18:11:06","Actor":"divdavem","Number":"22220","RawContent":null,"Title":"fix(@angular-devkit/build-angular): transform remapped sourcemap into a plain object","State":"closed","Body":"Hello,\r\n\r\nI am opening this PR to fix one of the problems we noticed when upgrading to Angular 13 in [ng-bootstrap](https://ng-bootstrap.github.io/) (cf https://github.com/ng-bootstrap/ng-bootstrap/issues/4178)\r\n\r\nWe are using a custom webpack configuration with `@angular-builders/custom-webpack:browser` to add `coverage-istanbul-loader` but it fails with the `don't know how to turn this value into a node` error.\r\n\r\nThis similar to #21967 which was previously fixed in commit da1733cc69eeac1417e47df23389da1658850ada but the fix was lost as part of commit 0c44ab305836abab26dc81d7c962f330898213fd.\r\nCf also https://github.com/istanbuljs/istanbuljs/issues/646\r\n\r\n`remapping` returns a SourceMap object and not a plain object. This causes Babel to fail with `don't know how to turn this value into a node` when invoked from `istanbul-lib-instrument` as Babel checks if the value is a plain object.\r\n\r\nSee: https://github.com/babel/babel/blob/780aa48d2a34dc55f556843074b6aed45e7eabeb/packages/babel-types/src/converters/valueToNode.ts#L115-L130\r\n","Url":"https://github.com/angular/angular-cli/pull/22220","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): transform remapped sourcemap into a plain object\" (#22220)"},{"Id":"1060755104","IsPullRequest":false,"CreatedAt":"2021-11-23T15:16:06","Actor":"dgp1130","Number":"22217","RawContent":null,"Title":"New v10 project with NPM 7+ fails peer dep resolution","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [X] new\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\n`npx @angular/cli@10 new` with NPM 7+ fails with a peer dep resolution error.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<details>\r\n  <summary>`npx @angular/cli@10 new`</summary>\r\n\r\n```\r\n$ npx @angular/cli@10 new --directory ng-v10\r\nNeed to install the following packages:\r\n  @angular/cli@10\r\nOk to proceed? (y) y\r\nnpm WARN deprecated har-validator@5.1.5: this library is no longer supported\r\nnpm WARN deprecated debug@4.1.1: Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)\r\nnpm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.\r\nnpm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.\r\nnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\r\n? What name would you like to use for the new workspace and initial project? ng-v10\r\n? Would you like to add Angular routing? No\r\n? Which stylesheet format would you like to use? CSS\r\nCREATE ng-v10/README.md (1014 bytes)\r\nCREATE ng-v10/.editorconfig (274 bytes)\r\nCREATE ng-v10/.gitignore (631 bytes)\r\nCREATE ng-v10/angular.json (3566 bytes)\r\nCREATE ng-v10/package.json (1249 bytes)\r\nCREATE ng-v10/tsconfig.json (458 bytes)\r\nCREATE ng-v10/tslint.json (3185 bytes)\r\nCREATE ng-v10/.browserslistrc (853 bytes)\r\nCREATE ng-v10/karma.conf.js (1018 bytes)\r\nCREATE ng-v10/tsconfig.app.json (287 bytes)\r\nCREATE ng-v10/tsconfig.spec.json (333 bytes)\r\nCREATE ng-v10/src/favicon.ico (948 bytes)\r\nCREATE ng-v10/src/index.html (291 bytes)\r\nCREATE ng-v10/src/main.ts (372 bytes)\r\nCREATE ng-v10/src/polyfills.ts (2830 bytes)\r\nCREATE ng-v10/src/styles.css (80 bytes)\r\nCREATE ng-v10/src/test.ts (753 bytes)\r\nCREATE ng-v10/src/assets/.gitkeep (0 bytes)\r\nCREATE ng-v10/src/environments/environment.prod.ts (51 bytes)\r\nCREATE ng-v10/src/environments/environment.ts (662 bytes)\r\nCREATE ng-v10/src/app/app.module.ts (314 bytes)\r\nCREATE ng-v10/src/app/app.component.css (0 bytes)\r\nCREATE ng-v10/src/app/app.component.html (25725 bytes)\r\nCREATE ng-v10/src/app/app.component.spec.ts (940 bytes)\r\nCREATE ng-v10/src/app/app.component.ts (210 bytes)\r\nCREATE ng-v10/e2e/protractor.conf.js (869 bytes)\r\nCREATE ng-v10/e2e/tsconfig.json (294 bytes)\r\nCREATE ng-v10/e2e/src/app.e2e-spec.ts (639 bytes)\r\nCREATE ng-v10/e2e/src/app.po.ts (301 bytes)\r\n⠏ Installing packages...npm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR!\r\nnpm ERR! While resolving: ng-v10@0.0.0\r\nnpm ERR! Found: jasmine-core@3.6.0\r\nnpm ERR! node_modules/jasmine-core\r\nnpm ERR!   dev jasmine-core@\"~3.6.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer jasmine-core@\">=3.8\" from karma-jasmine-html-reporter@1.7.0\r\nnpm ERR! node_modules/karma-jasmine-html-reporter\r\nnpm ERR!   dev karma-jasmine-html-reporter@\"^1.5.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR!\r\nnpm ERR! See /home/douglasparker/.npm/eresolve-report.txt for a full report.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /home/douglasparker/.npm/_logs/2021-11-23T01_05_37_847Z-debug.log\r\n✖ Package install failed, see above.\r\nThe Schematic workflow failed. See above.\r\n```\r\n\r\n</details>\r\n\r\n## 🌍 Your Environment\r\n\r\nRunning NPM `8.1.4`, but I assume this is present in any NPM 7+ version.\r\n\r\n**Anything else relevant?**\r\n\r\nGenerating the application succeeded, it's only the subsequent `npm install` that failed. Running `npm install --legacy-peer-deps` worked as expected.\r\n\r\nI know v10 is falling out of LTS soon, but I'm wondering if we should consider making it install with legacy peer deps automatically. Otherwise we can try to actually debug the conflict and come up with a non-legacy peer deps-compatible solution, but that might not be worth the effort right now.\r\n","Url":"https://github.com/angular/angular-cli/issues/22217","RelatedDescription":"Closed issue \"New v10 project with NPM 7+ fails peer dep resolution\" (#22217)"},{"Id":"1061256579","IsPullRequest":true,"CreatedAt":"2021-11-23T15:15:53","Actor":"alan-agius4","Number":"22219","RawContent":null,"Title":"fix(@schematics/angular): change `karma-jasmine-html-reporter` dependency to use tilde","State":"closed","Body":"\r\n\r\nOlder versions of `karma-jasmine-html-reporter` require `jasmine-core@>=3.8` which causes unmet peer dependencies errors when using NPM 7+\r\n\r\nCloses #22217","Url":"https://github.com/angular/angular-cli/pull/22219","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): change `karma-jasmine-html-reporter` dependency to use tilde\" (#22219)"},{"Id":"1061202897","IsPullRequest":false,"CreatedAt":"2021-11-23T12:18:54","Actor":"nolafs","Number":"22218","RawContent":null,"Title":"Build fails Angular 13 warning: Expected identifier but found \"*\"","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nSince 13 upgrade\r\n\r\n### Description\r\n\r\nProduction build is failing. Development build is fine.\r\n\r\nWarning:  > styles.2a3c9e1343ba4227.css:11601:2: warning: Expected identifier but found \"*\"\r\n    11601 │   *display: inline;\r\n          ╵   ^\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nRunning ng build --prod\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nWarning:  > styles.2a3c9e1343ba4227.css:11601:2: warning: Expected identifier but found \"*\"\r\n    11601 │   *display: inline;\r\n          ╵   ^\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.0.2\r\nNode: 14.15.5\r\nPackage Manager: npm 7.16.0\r\nOS: darwin x64\r\n\r\nAngular: 13.0.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.2\r\n@angular-devkit/build-angular   13.0.2\r\n@angular-devkit/core            13.0.2\r\n@angular-devkit/schematics      13.0.2\r\n@angular/cli                    13.0.2\r\n@angular/fire                   7.2.0\r\n@nguniversal/builders           13.0.1\r\n@nguniversal/express-engine     13.0.1\r\n@schematics/angular             13.0.2\r\nng-packagr                      13.0.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n    \r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22218","RelatedDescription":"Closed issue \"Build fails Angular 13 warning: Expected identifier but found \"*\"\" (#22218)"},{"Id":"1058334776","IsPullRequest":false,"CreatedAt":"2021-11-23T10:22:43","Actor":"ViktorMedvedchuk","Number":"22198","RawContent":null,"Title":"How to build web components now, when the extractCss is deprecated?","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nOption \"extractCss\" is deprecated: Deprecated since version 11.0. \r\n\r\nHow to build angular custom components now, in case we need styles.js, not styles.css\r\n\r\nWe can add --extractCss=false to the build script but anyway see the error in the console -\r\n**Option \"extractCss\" is deprecated: Deprecated since version 11.0. No longer required to disable CSS extraction for HMR.**\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nOption \"extractCss\" is deprecated: Deprecated since version 11.0. No longer required to disable CSS extraction for HMR.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 12.0.2\r\nNode: 14.17.5\r\nPackage Manager: npm 7.21.1\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1200.2 (cli-only)\r\n@angular-devkit/core         12.0.2 (cli-only)\r\n@angular-devkit/schematics   12.0.2 (cli-only)\r\n@schematics/angular          12.0.2 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/22198","RelatedDescription":"Closed issue \"How to build web components now, when the extractCss is deprecated?\" (#22198)"},{"Id":"1059810674","IsPullRequest":true,"CreatedAt":"2021-11-23T07:31:26","Actor":"alan-agius4","Number":"22210","RawContent":null,"Title":"feat(@angular-devkit/build-angular): set `dir` attribute when using localization","State":"closed","Body":"\r\nWe add the `dir` (direction) HTML attribute when using localization.\r\n\r\nCloses #16047","Url":"https://github.com/angular/angular-cli/pull/22210","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): set `dir` attribute when using localization\" (#22210)"},{"Id":"1059814954","IsPullRequest":true,"CreatedAt":"2021-11-23T06:45:13","Actor":"renovate[bot]","Number":"22211","RawContent":null,"Title":"build: update angular to 361f0e6","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `75f43ef` -> `361f0e6` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `f50fd73` -> `1e57d2b` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `f9cda89` -> `e432a6b` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `35eeca6` -> `5b954fc` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `7b6f976` -> `2e5ca4f` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `224dcbc` -> `654e9bb` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `eb6b4de` -> `2ca7839` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `ce15b7d` -> `0fba0a5` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `c3c2479` -> `6b77d59` |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | `0855c00` -> `b74419b` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `47857bc` -> `2f24da7` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `b6a4d4d` -> `08ffb33` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `1ef2581` -> `e142f75` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `2700d36` -> `0cc8407` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `3ec5b43` -> `a5f82d2` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `cb6a133` -> `6d2730a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22211","RelatedDescription":"Closed or merged PR \"build: update angular to 361f0e6\" (#22211)"},{"Id":"1058536773","IsPullRequest":true,"CreatedAt":"2021-11-23T06:44:54","Actor":"alan-agius4","Number":"22200","RawContent":null,"Title":"fix(@angular/cli): logic which determines which temp version of the CLI is to be download during `ng update`","State":"closed","Body":"\r\nPreviously, when using an older version of the Angular CLI, during `ng update`, we download the temporary `latest` version to run the update. The ensured that when running that the runner used to run the update contains the latest bug fixes and improvements.\r\n\r\nThis however, can be problematic in some cases. Such as when there are API breaking changes, when running a relatively old schematic with the latest CLI can cause runtime issues, especially since those schematics were never meant to be executed on a CLI X major versions in the future.\r\n\r\nWith this change, we improve the logic to determine which version of the Angular CLI should be used to run the update.\r\n\r\nBelow is a summarization of this.\r\n\r\n- When using the `--next` command line argument, the `@next` version of the CLI will be used to run the update.\r\n- When updating an `@angular/` or `@nguniversal/` package, the target version will be used to run the update. Example: `ng update @angular/core@12`,  the update will run on most recent patch version of `@angular/cli` of that major version `@12.2.6`.\r\n- When updating an `@angular/` or `@nguniversal/` and no target version is specified. Example: `ng update @angular/core` the update will run on most latest version of the `@angular/cli`.\r\n- When updating a third-party package, the most recent patch version of the installed `@angular/cli` will be used to run the update. Example if `13.0.0` is installed and `13.1.1` is available on NPM, the latter will be used.","Url":"https://github.com/angular/angular-cli/pull/22200","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): logic which determines which temp version of the CLI is to be download during `ng update`\" (#22200)"},{"Id":"1060649118","IsPullRequest":false,"CreatedAt":"2021-11-22T22:22:56","Actor":"danielehrhardt","Number":"22216","RawContent":null,"Title":"Angular 13 CLI not stopping after ctrl + c","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: v 12\r\n\r\n### Description\r\nWith Angular 13 i have on Windows and Mac the Problem that the ng:serve command does not stop after i press ctrl + c. \r\nAfter i press ctrl+c in the Terminal the Angular CLI still produce cli output. \r\n\r\n## 🔬 Minimal Reproduction\r\nnpm start\r\npress ctrl+c or command+c\r\nwait a bit and see the console output in the Terminal. \r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.0.2\r\nNode: 16.13.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin arm64\r\n\r\nAngular: 13.0.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.2\r\n@angular-devkit/build-angular   13.0.2\r\n@angular-devkit/core            13.0.2\r\n@angular-devkit/schematics      8.3.29\r\n@angular/cli                    13.0.2\r\n@nguniversal/builders           13.0.1\r\n@nguniversal/express-engine     13.0.1\r\n@schematics/angular             13.0.2\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22216","RelatedDescription":"Open issue \"Angular 13 CLI not stopping after ctrl + c\" (#22216)"},{"Id":"1060025756","IsPullRequest":true,"CreatedAt":"2021-11-22T21:18:16","Actor":"alan-agius4","Number":"22214","RawContent":null,"Title":"feat(@angular-devkit/build-angular): colorize file raw sizes based on failing budgets","State":"closed","Body":"\r\n![Screenshot 2021-11-22 at 12 13 12](https://user-images.githubusercontent.com/17563226/142852208-87b18ff0-4a4a-4d50-98e7-43d7400b30a4.png)\r\n![Screenshot 2021-11-22 at 12 12 28](https://user-images.githubusercontent.com/17563226/142852210-e5471ff4-c475-410e-8c2f-01bd3d69fab8.png)\r\n","Url":"https://github.com/angular/angular-cli/pull/22214","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): colorize file raw sizes based on failing budgets\" (#22214)"},{"Id":"1060515602","IsPullRequest":false,"CreatedAt":"2021-11-22T19:31:54","Actor":"jackwootton","Number":"22215","RawContent":null,"Title":"Cannot upgrade to typescript 4.5.2 because `@angular-devkit/build-angular` requires typescript 4.3","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nNo.\r\n\r\n### Description\r\n\r\nCannot update typescript to version 4.5.2 because @angular-devkit/build-angular depends on typescript 4.3.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nEnsure `package.json` contains the following `devDependencies`\r\n\r\n- `\"@angular-devkit/build-angular\": \"^13.0.3\"`\r\n- `\"typescript\": \"^4.4.4\"`\r\n\r\nRun `ng update typescript`.\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 56 dependencies.\r\nFetching dependency metadata from registry...\r\n                  Package \"@angular-devkit/build-angular\" has an incompatible peer dependency to \"typescript\" (requires \"~4.4.3\", would install \"4.5.2\").\r\n✖ Migration failed: Incompatible peer dependencies found.\r\nPeer dependency warnings when installing dependencies means that those dependencies might not work correctly together.\r\nYou can use the '--force' option to ignore incompatible peer dependencies and instead address these warnings later.\r\n  See \"/tmp/ng-3bfFIb/angular-errors.log\" for further details.\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.0.3\r\nNode: 14.18.1\r\nPackage Manager: npm 8.1.3\r\nOS: linux x64\r\n\r\nAngular: 13.0.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            12.2.11\r\n@angular-devkit/schematics      12.2.11\r\n@angular/cli                    13.0.3\r\n@angular/fire                   7.2.0\r\n@angular/flex-layout            12.0.0-beta.35\r\n@schematics/angular             12.2.11\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22215","RelatedDescription":"Closed issue \"Cannot upgrade to typescript 4.5.2 because `@angular-devkit/build-angular` requires typescript 4.3\" (#22215)"},{"Id":"1060009388","IsPullRequest":true,"CreatedAt":"2021-11-22T13:39:29","Actor":"renovate[bot]","Number":"22213","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22213","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#22213)"},{"Id":"1059964083","IsPullRequest":true,"CreatedAt":"2021-11-22T12:15:58","Actor":"billyjov","Number":"22212","RawContent":null,"Title":"docs: remove e2e folder reference from new command spec","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22212","RelatedDescription":"Closed or merged PR \"docs: remove e2e folder reference from new command spec\" (#22212)"},{"Id":"1058671581","IsPullRequest":false,"CreatedAt":"2021-11-22T08:06:17","Actor":"plamenNachevICB","Number":"22202","RawContent":null,"Title":"Angular CLI fails after updating to v13","State":"closed","Body":"# 🐞 Bug report\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nAfter updating to Angular 13 and updating most packages the angular CLI fails when trying to create a component\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nng generate component test-component\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n[error] Error: NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID\r\n    at Object.code (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\vocabularies\\core\\id.js:6:15)\r\n    at keywordCode (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\validate\\index.js:454:13)\r\n    at D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\validate\\index.js:222:17\r\n    at CodeGen.code (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:439:13)\r\n    at CodeGen.block (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:568:18)\r\n    at iterateKeywords (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\validate\\index.js:219:9)\r\n    at groupKeywords (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\validate\\index.js:208:13)\r\n    at D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\validate\\index.js:192:13\r\n    at CodeGen.code (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:439:13)\r\n    at CodeGen.block (D:\\View\\MyProject\\node_modules\\@angular\\cli\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:568:18)\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.0.3\r\nNode: 14.17.4\r\nPackage Manager: npm 6.14.14\r\nOS: win32 x64\r\n\r\nAngular: 13.0.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            8.3.29\r\n@angular-devkit/schematics      8.3.29\r\n@angular/cli                    13.0.3\r\n@nguniversal/builders           13.0.1\r\n@nguniversal/express-engine     13.0.1\r\n@schematics/angular             8.3.29\r\nrxjs                            6.6.7\r\ntypescript                      4.4.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n\"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^13.0.3\",\r\n    \"@angular-eslint/builder\": \"^13.0.1\",\r\n    \"@angular-eslint/eslint-plugin\": \"^13.0.1\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"^13.0.1\",\r\n    \"@angular-eslint/schematics\": \"^13.0.1\",\r\n    \"@angular-eslint/template-parser\": \"^13.0.1\",\r\n    \"@angular/cli\": \"^13.0.3\",\r\n    \"@angular/compiler-cli\": \"^13.0.2\",\r\n    \"@bahmutov/cy-api\": \"^1.6.1\",\r\n    \"@briebug/cypress-schematic\": \"^4.4.0\",\r\n    \"@cypress/code-coverage\": \"^3.9.11\",\r\n    \"@cypress/webpack-preprocessor\": \"5.7.0\",\r\n    \"@datorama/akita-ng-router-store\": \"^6.0.2\",\r\n    \"@datorama/akita-ngdevtools\": \"^6.0.1\",\r\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.1\",\r\n    \"@nguniversal/builders\": \"^13.0.1\",\r\n    \"@types/express\": \"^4.17.0\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/leaflet\": \"^1.7.6\",\r\n    \"@types/node\": \"^12.20.37\",\r\n    \"@typescript-eslint/eslint-plugin\": \"5.3.0\",\r\n    \"@typescript-eslint/parser\": \"5.3.0\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"cypress\": \"^7.1.0\",\r\n    \"cypress-multi-reporters\": \"^1.2.4\",\r\n    \"eslint\": \"^8.2.0\",\r\n    \"istanbul-instrumenter-loader\": \"^3.0.1\",\r\n    \"istanbul-lib-coverage\": \"^3.2.0\",\r\n    \"jasmine-core\": \"~3.6.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"^6.3.9\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"local-web-server\": \"^4.2.1\",\r\n    \"mocha\": \"~8.2.1\",\r\n    \"mocha-junit-reporter\": \"^1.23.3\",\r\n    \"ngx-build-plus\": \"^13.0.1\",\r\n    \"nyc\": \"^15.1.0\",\r\n    \"prettier\": \"2.1.2\",\r\n    \"sonar-scanner\": \"^3.1.0\",\r\n    \"source-map-support\": \"^0.5.21\",\r\n    \"start-server-and-test\": \"^1.14.0\",\r\n    \"ts-node\": \"^8.10.2\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.4.4\"\r\n  }\r\n\r\nThere was a similar issue caused by old version of @angular-eslint, but the issue persists after updating to the latest version so I'm not sure if it's still a problem of @angular-eslint.","Url":"https://github.com/angular/angular-cli/issues/22202","RelatedDescription":"Closed issue \"Angular CLI fails after updating to v13\" (#22202)"},{"Id":"1059160726","IsPullRequest":true,"CreatedAt":"2021-11-22T07:55:46","Actor":"renovate[bot]","Number":"22207","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [ajv](https://ajv.js.org) ([source](https://togithub.com/ajv-validator/ajv)) | [`8.8.1` -> `8.8.2`](https://renovatebot.com/diffs/npm/ajv/8.8.1/8.8.2) | [![age](https://badges.renovateapi.com/packages/npm/ajv/8.8.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/ajv/8.8.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/ajv/8.8.2/compatibility-slim/8.8.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/ajv/8.8.2/confidence-slim/8.8.1)](https://docs.renovatebot.com/merge-confidence/) |\n| [esbuild](https://togithub.com/evanw/esbuild) | [`0.13.14` -> `0.13.15`](https://renovatebot.com/diffs/npm/esbuild/0.13.14/0.13.15) | [![age](https://badges.renovateapi.com/packages/npm/esbuild/0.13.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild/0.13.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild/0.13.15/compatibility-slim/0.13.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild/0.13.15/confidence-slim/0.13.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | [`0.13.14` -> `0.13.15`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.13.14/0.13.15) | [![age](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.13.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.13.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.13.15/compatibility-slim/0.13.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.13.15/confidence-slim/0.13.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | [`8.2.0` -> `8.3.0`](https://renovatebot.com/diffs/npm/eslint/8.2.0/8.3.0) | [![age](https://badges.renovateapi.com/packages/npm/eslint/8.3.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/eslint/8.3.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/eslint/8.3.0/compatibility-slim/8.2.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/eslint/8.3.0/confidence-slim/8.2.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [webpack](https://togithub.com/webpack/webpack) | [`5.64.1` -> `5.64.2`](https://renovatebot.com/diffs/npm/webpack/5.64.1/5.64.2) | [![age](https://badges.renovateapi.com/packages/npm/webpack/5.64.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/webpack/5.64.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/webpack/5.64.2/compatibility-slim/5.64.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/webpack/5.64.2/confidence-slim/5.64.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ajv-validator/ajv</summary>\n\n### [`v8.8.2`](https://togithub.com/ajv-validator/ajv/releases/v8.8.2)\n\n[Compare Source](https://togithub.com/ajv-validator/ajv/compare/v8.8.1...v8.8.2)\n\nUse full RegExp string (with flags) as cache key, related to [https://github.com/ajv-validator/ajv-keywords/issues/220](https://togithub.com/ajv-validator/ajv-keywords/issues/220)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.13.15`](https://togithub.com/evanw/esbuild/blob/master/CHANGELOG.md#&#8203;01315)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.13.14...v0.13.15)\n\n-   Fix `super` in lowered `async` arrow functions ([#&#8203;1777](https://togithub.com/evanw/esbuild/issues/1777))\n\n    This release fixes an edge case that was missed when lowering `async` arrow functions containing `super` property accesses for compile targets that don't support `async` such as with `--target=es6`. The problem was that lowering transforms `async` arrow functions into generator function expressions that are then passed to an esbuild helper function called `__async` that implements the `async` state machine behavior. Since function expressions do not capture `this` and `super` like arrow functions do, this led to a mismatch in behavior which meant that the transform was incorrect. The fix is to introduce a helper function to forward `super` access into the generator function expression body. Here's an example:\n\n    ```js\n    // Original code\n    class Foo extends Bar {\n      foo() { return async () => super.bar() }\n    }\n\n    // Old output (with --target=es6)\n    class Foo extends Bar {\n      foo() {\n        return () => __async(this, null, function* () {\n          return super.bar();\n        });\n      }\n    }\n\n    // New output (with --target=es6)\n    class Foo extends Bar {\n      foo() {\n        return () => {\n          var __superGet = (key) => super[key];\n          return __async(this, null, function* () {\n            return __superGet(\"bar\").call(this);\n          });\n        };\n      }\n    }\n    ```\n\n-   Avoid merging certain CSS rules with different units ([#&#8203;1732](https://togithub.com/evanw/esbuild/issues/1732))\n\n    This release no longer collapses `border-radius`, `margin`, `padding`, and `inset` rules when they have units with different levels of browser support. Collapsing multiple of these rules into a single rule is not equivalent if the browser supports one unit but not the other unit, since one rule would still have applied before the collapse but no longer applies after the collapse due to the whole rule being ignored. For example, Chrome 10 supports the `rem` unit but not the `vw` unit, so the CSS code below should render with rounded corners in Chrome 10. However, esbuild previously merged everything into a single rule which would cause Chrome 10 to ignore the rule and not round the corners. This issue is now fixed:\n\n    ```css\n    /* Original CSS */\n    div {\n      border-radius: 1rem;\n      border-top-left-radius: 1vw;\n      margin: 0;\n      margin-top: 1Q;\n      left: 10Q;\n      top: 20Q;\n      right: 10Q;\n      bottom: 20Q;\n    }\n\n    /* Old output (with --minify) */\n    div{border-radius:1vw 1rem 1rem;margin:1Q 0 0;inset:20Q 10Q}\n\n    /* New output (with --minify) */\n    div{border-radius:1rem;border-top-left-radius:1vw;margin:0;margin-top:1Q;inset:20Q 10Q}\n    ```\n\n    Notice how esbuild can still collapse rules together when they all share the same unit, even if the unit is one that doesn't have universal browser support such as the unit `Q`. One subtlety is that esbuild now distinguishes between \"safe\" and \"unsafe\" units where safe units are old enough that they are guaranteed to work in any browser a user might reasonably use, such as `px`. Safe units are allowed to be collapsed together even if there are multiple different units while multiple different unsafe units are not allowed to be collapsed together. Another detail is that esbuild no longer minifies zero lengths by removing the unit if the unit is unsafe (e.g. `0rem` into `0`) since that could cause a rendering difference if a previously-ignored rule is now no longer ignored due to the unit change. If you are curious, you can learn more about browser support levels for different CSS units in [Mozilla's documentation about CSS length units](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n\n-   Avoid warning about ignored side-effect free imports for empty files ([#&#8203;1785](https://togithub.com/evanw/esbuild/issues/1785))\n\n    When bundling, esbuild warns about bare imports such as `import \"lodash-es\"` when the package has been marked as `\"sideEffects\": false` in its `package.json` file. This is because the only reason to use a bare import is because you are relying on the side effects of the import, but imports for packages marked as side-effect free are supposed to be removed. If the package indicates that it has no side effects, then this bare import is likely a bug.\n\n    However, some people have packages just for TypeScript type definitions. These package can actually have a side effect as they can augment the type of the global object in TypeScript, even if they are marked with `\"sideEffects\": false`. To avoid warning in this case, esbuild will now only issue this warning if the imported file is non-empty. If the file is empty, then it's irrelevant whether you import it or not so any import of that file does not indicate a bug. This fixes this case because `.d.ts` files typically end up being empty after esbuild parses them since they typically only contain type declarations.\n\n-   Attempt to fix packages broken due to the `node:` prefix ([#&#8203;1760](https://togithub.com/evanw/esbuild/issues/1760))\n\n    Some people have started using the node-specific `node:` path prefix in their packages. This prefix forces the following path to be interpreted as a node built-in module instead of a package on the file system. So `require(\"node:path\")` will always import [node's `path` module](https://nodejs.org/api/path.html) and never import [npm's `path` package](https://www.npmjs.com/package/path).\n\n    Adding the `node:` prefix breaks that code with older node versions that don't understand the `node:` prefix. This is a problem with the package, not with esbuild. The package should be adding a fallback if the `node:` prefix isn't available. However, people still want to be able to use these packages with older node versions even though the code is broken. Now esbuild will automatically strip this prefix if it detects that the code will break in the configured target environment (as specified by `--target=`). Note that this only happens during bundling, since import paths are only examined during bundling.\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.3.0`](https://togithub.com/eslint/eslint/releases/v8.3.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.2.0...v8.3.0)\n\n#### Features\n\n-   [`60b0a29`](https://togithub.com/eslint/eslint/commit/60b0a292efd1b9cdc318b1e88a0cb7bbf14860b1) feat: add `allowProperties` option to require-atomic-updates ([#&#8203;15238](https://togithub.com/eslint/eslint/issues/15238)) (Milos Djermanovic)\n-   [`79278a1`](https://togithub.com/eslint/eslint/commit/79278a14f1c8747bff8f5cb2100d8776f9d517f2) feat: update no-use-before-define for class static blocks ([#&#8203;15312](https://togithub.com/eslint/eslint/issues/15312)) (Milos Djermanovic)\n-   [`ddd01dc`](https://togithub.com/eslint/eslint/commit/ddd01dcd5f14c6ddea5decca46db2f379ec35aeb) feat: update no-redeclare for class static blocks ([#&#8203;15313](https://togithub.com/eslint/eslint/issues/15313)) (Milos Djermanovic)\n-   [`de69cec`](https://togithub.com/eslint/eslint/commit/de69cec834411aeb276a525c11dc10f628df2f51) feat: update no-inner-declarations for class static blocks ([#&#8203;15290](https://togithub.com/eslint/eslint/issues/15290)) (Milos Djermanovic)\n-   [`e2fe7ef`](https://togithub.com/eslint/eslint/commit/e2fe7ef7ea0458de56bed4e4c3d5f71aaebd3f28) feat: support for private-in syntax (fixes [#&#8203;14811](https://togithub.com/eslint/eslint/issues/14811)) ([#&#8203;15060](https://togithub.com/eslint/eslint/issues/15060)) (Yosuke Ota)\n-   [`34bc8d7`](https://togithub.com/eslint/eslint/commit/34bc8d7cb42d696ec56e0a3c780aa5b042285d6b) feat: Update espree and eslint-scope ([#&#8203;15338](https://togithub.com/eslint/eslint/issues/15338)) (Brandon Mills)\n-   [`b171cd7`](https://togithub.com/eslint/eslint/commit/b171cd7ec839a0481a74a613b0d48a193f16bb6b) feat: update max-depth for class static blocks ([#&#8203;15316](https://togithub.com/eslint/eslint/issues/15316)) (Milos Djermanovic)\n-   [`6487df3`](https://togithub.com/eslint/eslint/commit/6487df371496dd15272e2097e4d2c932532c8727) feat: update padded-blocks for class static blocks ([#&#8203;15333](https://togithub.com/eslint/eslint/issues/15333)) (Milos Djermanovic)\n-   [`194f36d`](https://togithub.com/eslint/eslint/commit/194f36d9c009a72ec72fa9592ea9e31f9f168a52) feat: update the complexity rule for class static blocks ([#&#8203;15328](https://togithub.com/eslint/eslint/issues/15328)) (Milos Djermanovic)\n-   [`3530337`](https://togithub.com/eslint/eslint/commit/3530337e71327d8325d0de01e8e73952010b1a08) feat: update the indent rule for class static blocks ([#&#8203;15324](https://togithub.com/eslint/eslint/issues/15324)) (Milos Djermanovic)\n-   [`f03cd14`](https://togithub.com/eslint/eslint/commit/f03cd146a97ed312d635ac7b53ba0f8d01aa8b47) feat: update lines-around-comment for class static blocks ([#&#8203;15323](https://togithub.com/eslint/eslint/issues/15323)) (Milos Djermanovic)\n-   [`5c64747`](https://togithub.com/eslint/eslint/commit/5c64747a8d7a4f896f0cbce67c7f5e7690837a9b) feat: update brace-style for class static blocks ([#&#8203;15322](https://togithub.com/eslint/eslint/issues/15322)) (Milos Djermanovic)\n-   [`df2f1cc`](https://togithub.com/eslint/eslint/commit/df2f1cc81a559bbc9eee78a3a97315e2927af764) feat: update max-statements for class static blocks ([#&#8203;15315](https://togithub.com/eslint/eslint/issues/15315)) (Milos Djermanovic)\n-   [`fd5a0b8`](https://togithub.com/eslint/eslint/commit/fd5a0b8506e4b6acd740ab966cc2c0e4ff6a4d15) feat: update prefer-const for class static blocks ([#&#8203;15325](https://togithub.com/eslint/eslint/issues/15325)) (Milos Djermanovic)\n-   [`b3669fd`](https://togithub.com/eslint/eslint/commit/b3669fde2316f136af3a16b58b0c44e8ec196cee) feat: code path analysis for class static blocks ([#&#8203;15282](https://togithub.com/eslint/eslint/issues/15282)) (Milos Djermanovic)\n-   [`15c1397`](https://togithub.com/eslint/eslint/commit/15c1397f0063931f50f31af8d110a23c6d660000) feat: update eslint-scope for class static blocks ([#&#8203;15321](https://togithub.com/eslint/eslint/issues/15321)) (Milos Djermanovic)\n-   [`1a1bb4b`](https://togithub.com/eslint/eslint/commit/1a1bb4b1ee87c1b33f2d86ef70b3d81e83377547) feat: update one-var for class static blocks ([#&#8203;15317](https://togithub.com/eslint/eslint/issues/15317)) (Milos Djermanovic)\n-   [`9b666e0`](https://togithub.com/eslint/eslint/commit/9b666e0682bacf44d2a5afa0023874b8b131b5f5) feat: update padding-line-between-statements for class static blocks ([#&#8203;15318](https://togithub.com/eslint/eslint/issues/15318)) (Milos Djermanovic)\n-   [`d3a267f`](https://togithub.com/eslint/eslint/commit/d3a267f5f39167e3ee8248ae6b9cae5034d0486f) feat: update class-methods-use-this for class static blocks ([#&#8203;15298](https://togithub.com/eslint/eslint/issues/15298)) (Milos Djermanovic)\n-   [`cdaa541`](https://togithub.com/eslint/eslint/commit/cdaa54130aca7a9c8dfd76c613d0718b048401b2) feat: update no-lone-blocks for class static blocks ([#&#8203;15295](https://togithub.com/eslint/eslint/issues/15295)) (Milos Djermanovic)\n-   [`8611538`](https://togithub.com/eslint/eslint/commit/8611538b47e325c6d6b115bf3d901a26e9ac29f8) feat: update block-spacing for class static blocks ([#&#8203;15297](https://togithub.com/eslint/eslint/issues/15297)) (Milos Djermanovic)\n-   [`7b56844`](https://togithub.com/eslint/eslint/commit/7b56844ece544e501f0173f6427038c9c5e0534f) feat: update keyword-spacing for class static blocks ([#&#8203;15289](https://togithub.com/eslint/eslint/issues/15289)) (Milos Djermanovic)\n-   [`ea18711`](https://togithub.com/eslint/eslint/commit/ea1871146402a77234393613fe56a416382c7f0f) feat: update no-extra-semi for class static blocks ([#&#8203;15287](https://togithub.com/eslint/eslint/issues/15287)) (Milos Djermanovic)\n-   [`0f0971f`](https://togithub.com/eslint/eslint/commit/0f0971ffc2ca6f4513eeffdf5cfa36826c8f4543) feat: update semi rule for class static blocks ([#&#8203;15286](https://togithub.com/eslint/eslint/issues/15286)) (Milos Djermanovic)\n-   [`abe740c`](https://togithub.com/eslint/eslint/commit/abe740ce68dcc9e5413df93b3d80a2e3260f1c18) feat: add examples for block-scoped-var with class static blocks ([#&#8203;15302](https://togithub.com/eslint/eslint/issues/15302)) (Milos Djermanovic)\n-   [`0338fd2`](https://togithub.com/eslint/eslint/commit/0338fd201614247eeb21e68a26e4b4c8a74f71b0) feat: Normalize ecmaVersion to eslint-scope when using custom parser ([#&#8203;15268](https://togithub.com/eslint/eslint/issues/15268)) (Yosuke Ota)\n\n#### Bug Fixes\n\n-   [`8aa7645`](https://togithub.com/eslint/eslint/commit/8aa764524cf74f0b70d184c7957dbbb5f36a5ac7) fix: update vars-on-top for class static blocks ([#&#8203;15306](https://togithub.com/eslint/eslint/issues/15306)) (Milos Djermanovic)\n-   [`479a4cb`](https://togithub.com/eslint/eslint/commit/479a4cbc70f4032d4accd48e4471629e8635d677) fix: update semi-style for class static blocks ([#&#8203;15309](https://togithub.com/eslint/eslint/issues/15309)) (Milos Djermanovic)\n-   [`6d1c666`](https://togithub.com/eslint/eslint/commit/6d1c666d318cc9e1860e1e2c72fbfa4bdd4a2c4b) fix: update no-invalid-this and no-eval for class static blocks ([#&#8203;15300](https://togithub.com/eslint/eslint/issues/15300)) (Milos Djermanovic)\n\n#### Documentation\n\n-   [`6b85426`](https://togithub.com/eslint/eslint/commit/6b85426c33ba7ac0206cccef39ccc875b773aeae) docs: Expand  `--debug` option description in the CLI documentation ([#&#8203;15308](https://togithub.com/eslint/eslint/issues/15308)) (darkred)\n-   [`3ae5258`](https://togithub.com/eslint/eslint/commit/3ae52584296887e5fc5b0267346294bb920a00e6) docs: the strict rule does not apply to class static blocks ([#&#8203;15314](https://togithub.com/eslint/eslint/issues/15314)) (Milos Djermanovic)\n-   [`9309841`](https://togithub.com/eslint/eslint/commit/9309841a6cfa85005e0bf79e20415bb9220ba46e) docs: Remove inconsistent colon in pull request docs ([#&#8203;15303](https://togithub.com/eslint/eslint/issues/15303)) (Jordan Eldredge)\n-   [`da238cc`](https://togithub.com/eslint/eslint/commit/da238cc731a9b5ecd48280e0ea4ebd8a48ebeedc) docs: remove deprecation note from lines-around-comment ([#&#8203;15293](https://togithub.com/eslint/eslint/issues/15293)) (Milos Djermanovic)\n-   [`1055f16`](https://togithub.com/eslint/eslint/commit/1055f16fc6f78cc553f0b1462e8af44244c1f84b) docs: no-unused-expressions - class static blocks don't have directives ([#&#8203;15283](https://togithub.com/eslint/eslint/issues/15283)) (Milos Djermanovic)\n-   [`4c55216`](https://togithub.com/eslint/eslint/commit/4c55216ba958fcc8c3dd29fcaa80298216a48303) docs: Add variables option to no-use-before-define ([#&#8203;15276](https://togithub.com/eslint/eslint/issues/15276)) (Mathias Rasmussen)\n\n#### Chores\n\n-   [`edd8d24`](https://togithub.com/eslint/eslint/commit/edd8d240db8878763dbb147fb6124412c0783a42) chore: upgrade eslint-visitor-keys for class static blocks ([#&#8203;15277](https://togithub.com/eslint/eslint/issues/15277)) (Milos Djermanovic)\n\n</details>\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v5.64.2`](https://togithub.com/webpack/webpack/releases/v5.64.2)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v5.64.1...v5.64.2)\n\n### Bugfixes\n\n-   avoid double initial compilation due to invalid dependencies with managedPaths\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22207","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#22207)"},{"Id":"1058691050","IsPullRequest":true,"CreatedAt":"2021-11-22T07:55:35","Actor":"clydin","Number":"22203","RawContent":null,"Title":"feat(@angular/cli): ask to install angular-eslint when running ng lint in new projects","State":"closed","Body":"To improve the developer experience for the `ng lint` command in new projects, the lint command will now ask the developer if they wish to install `@angular-eslint/schematics` when no lint target has been configured for the specified project. `@angular-eslint/schematics` is currently the only option listed in the warning shown prior to the introduction of the prompt in this change. If additional example packages are added to the warning text in the future, the confirmation prompt should be changed to a list prompt which would allow the user to pick one of the potential future listed example packages.\r\n\r\nCloses: #21387","Url":"https://github.com/angular/angular-cli/pull/22203","RelatedDescription":"Closed or merged PR \"feat(@angular/cli): ask to install angular-eslint when running ng lint in new projects\" (#22203)"},{"Id":"1059393019","IsPullRequest":true,"CreatedAt":"2021-11-21T14:23:34","Actor":"minijus","Number":"22209","RawContent":null,"Title":"feat(@angular-devkit/build-angular): expose i18nDuplicateTranslation …","State":"open","Body":"…option of browser and server builders\r\n\r\nPart of #22201","Url":"https://github.com/angular/angular-cli/pull/22209","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): expose i18nDuplicateTranslation …\" (#22209)"},{"Id":"1059375421","IsPullRequest":false,"CreatedAt":"2021-11-21T13:05:41","Actor":"school-coder","Number":"22208","RawContent":null,"Title":"With modified deploy-url, inlining critical css not working for downloaded roboto font","State":"open","Body":"\r\n# 🐞 With modified deploy-url, inlining critical css not working for downloaded roboto font\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [X] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\nNo.\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nIn v12 also, was not working.\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nWith modified deploy-url, inlining critical css not working for downloaded roboto font\r\n\r\n**package.json**\r\n```\r\n\"scripts\": {\r\n    ...\r\n    \"build\": \"node --max_old_space_size=5048 ./node_modules/@angular/cli/bin/ng build --base-href=/portal/ --deploy-url=/portal/public/ --configuration production\"\r\n    ...\r\n}\r\n```\r\n\r\n**font.css**\r\n```\r\n@font-face {\r\n  font-family: 'Roboto';\r\n  src: url('Roboto-Light.woff2') format('woff2'),\r\n  url('Roboto-Light.woff') format('woff');\r\n  font-weight: 300;\r\n  font-style: normal;\r\n  font-display: swap;\r\n}\r\n```\r\n\r\n**angular.json**\r\n**projects.<project-name>.architect.build:**\r\n```\r\n...\r\n\"styles\": [\r\n             ...\r\n              \"src/assets/fonts/font.css\",\r\n             ...\r\n],\r\n...\r\n\"configurations\": {\r\n    \"production\": {\r\n        ....\r\n        \"optimization\": {\r\n                        \"scripts\": true,\r\n                        \"styles\": {\r\n                          \"minify\": true,\r\n                          \"inlineCritical\": true\r\n                        }\r\n                      }\r\n        ....\r\n    }\r\n...\r\n}\r\n```\r\n## 🔥 Exception or Error\r\n\r\n![image](https://user-images.githubusercontent.com/644749/142762929-fd620008-db94-4cb4-9f3c-3e17c3fde726.png)\r\n\r\nthe path is **http://localhost:8080/portal/Roboto-Light.86fc2559ff73eac5.woff2** instead of **http://localhost:8080/portal/public/Roboto-Light.86fc2559ff73eac5.woff2**\r\n\r\n## 🌍 Your Environment\r\n\r\n13.0.0\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22208","RelatedDescription":"Open issue \"With modified deploy-url, inlining critical css not working for downloaded roboto font\" (#22208)"},{"Id":"1058882400","IsPullRequest":false,"CreatedAt":"2021-11-19T20:20:32","Actor":"AlexeyGrigorievBoost","Number":"22206","RawContent":null,"Title":"Vulnerability in @angular-devkit/build-angular@0.901.15","State":"closed","Body":"🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n\r\nPlease read https://angular.io/guide/security#report-issues on how to disclose security related issues.\r\n\r\n🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n\r\n@angular-devkit/build-angular@0.901.15 has a vulnerable dependency of glob-parent prior 5.1.2\r\n```\r\n└─┬ @angular-devkit/build-angular@0.901.15\r\n  ├─┬ copy-webpack-plugin@6.0.3\r\n  │ ├─┬ fast-glob@3.2.7\r\n  │ │ └── glob-parent@5.1.2  deduped\r\n  │ └── glob-parent@5.1.2 \r\n  ├─┬ sass@1.26.3\r\n  │ └─┬ chokidar@3.5.2\r\n  │   └── glob-parent@5.1.2  deduped\r\n  ├─┬ webpack@4.42.0\r\n  │ └─┬ watchpack@1.7.5\r\n  │   └─┬ watchpack-chokidar2@2.0.1\r\n  │     └─┬ chokidar@2.1.8\r\n  │       └── glob-parent@3.1.0 \r\n  └─┬ webpack-dev-server@3.11.0\r\n    └─┬ chokidar@2.1.8\r\n      └── glob-parent@3.1.0\r\n ```\r\nWe have security scan failed because of [this problem ](https://github.com/advisories/GHSA-ww39-953v-wcq6) and we cannot update our app to the latest version of Angular\r\nbecause of backward compatibility issues of a component framework that we're using.\r\n\r\nCan all versions of glob-parent be updated to >=5.1.2 and released in the next version (@angular-devkit/build-angular@0.901.16)? ","Url":"https://github.com/angular/angular-cli/issues/22206","RelatedDescription":"Closed issue \"Vulnerability in @angular-devkit/build-angular@0.901.15\" (#22206)"},{"Id":"1058835018","IsPullRequest":false,"CreatedAt":"2021-11-19T19:22:36","Actor":"jaredtfornida","Number":"22205","RawContent":null,"Title":"angular_devkit schematics must be boolean input validation error","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\ni dont know\r\n\r\n### Description\r\n\r\nI am trying to use the schematics cli to generate templates, since the templates are not for angular projects they are for broader use cases.\r\n\r\nI am running into an issue when trying to use boolean values in the schematics cli. Whenever I try to pass a value for a boolean property it seems to interpret it as a string instead. \"x-prompt\" seems to handle it however I was wondering if there is a solution or work around that does not involve using any prompts.\r\n\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\nHere is an example cli command that is failing for me.\r\nschematics .:test-generate-file --name foo --transform=true\r\n\r\nError:\r\nError: Schematic input does not validate against the Schema: {\"transform\":\"true\",\"name\":\"foo\"}\r\nErrors:\r\n\r\n  Data path \"/transform\" must be boolean.\r\n    at MapSubscriber.project (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/schematics/tools/schema-option-transform.js:30:27)\r\n    at MapSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/map.js:49:35)\r\n    at MapSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at ThrowIfEmptySubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/throwIfEmpty.js:44:26)\r\n    at ThrowIfEmptySubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at TakeSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/take.js:54:30)\r\n    at TakeSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at MergeMapSubscriber.notifyNext (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/mergeMap.js:93:26)\r\n    at SimpleInnerSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/innerSubscribe.js:27:21)\r\n    at SimpleInnerSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. Create a schematic\r\nschematics blank --name foo\r\n\r\n2. Inside src/foo create a schema.json something like this:\r\n{\r\n  \"$schema\": \"http://json-schema.org/schema\",\r\n  \"$id\": \"foo\",\r\n  \"title\": \"schema\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"name\": {\r\n      \"description\": \"universal name\",\r\n      \"type\": \"string\",\r\n      \"$default\": {\r\n        \"$source\": \"argv\",\r\n        \"index\": 0\r\n      },\r\n    },\r\n    \"transform\": {\r\n      \"type\": \"boolean\",\r\n      \"default\": false\r\n    }\r\n  },\r\n  \"required\": [\r\n    \"name\"\r\n  ],\r\n  \"additionalProperties\": false\r\n}\r\n\r\n3. Then in the collection.json set a schema property inside foo\r\n{\r\n  \"$schema\": \"../node_modules/@angular-devkit/schematics/collection-schema.json\",\r\n  \"schematics\": {\r\n    \"foo\": {\r\n      \"description\": \"A blank schematic.\",\r\n      \"factory\": \"./foo/index#foo\",\r\n      \"schema\": \"foo/schema.json\"\r\n    }\r\n  }\r\n}\r\n\r\n4. After that npm run build\r\n5. Then finally run the schematic command to try to run it\r\nschematics .:foo --name foo --transform=true\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nError: Schematic input does not validate against the Schema: {\"transform\":\"true\",\"name\":\"foo\"}\r\nErrors:\r\n\r\n  Data path \"/transform\" must be boolean.\r\n    at MapSubscriber.project (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/schematics/tools/schema-option-transform.js:30:27)\r\n    at MapSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/map.js:49:35)\r\n    at MapSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at ThrowIfEmptySubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/throwIfEmpty.js:44:26)\r\n    at ThrowIfEmptySubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at TakeSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/take.js:54:30)\r\n    at TakeSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n    at MergeMapSubscriber.notifyNext (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/operators/mergeMap.js:93:26)\r\n    at SimpleInnerSubscriber._next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/innerSubscribe.js:27:21)\r\n    at SimpleInnerSubscriber.Subscriber.next (/home/tokuj/.nvm/versions/node/v14.15.5/lib/node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/internal/Subscriber.js:66:18)\r\n\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22205","RelatedDescription":"Closed issue \"angular_devkit schematics must be boolean input validation error\" (#22205)"},{"Id":"1058700136","IsPullRequest":false,"CreatedAt":"2021-11-19T16:19:03","Actor":"SamVerschueren","Number":"22204","RawContent":null,"Title":"Add support for SharedWorkers","State":"closed","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\n_No response_\n\n### Description\n\nCurrently, it's already super easy to add WebWorkers to an Angular project. There's even [documentation](https://angular.io/guide/web-worker) on how to do it and is as simple as running `ng generate web-worker app` 🎉 .\r\n\r\nI wanted to use a [SharedWorker](https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker) to synchronize data between multiple open tabs. But apparently, `SharedWorker` does not work out of the box.\r\n\r\nThis is not a duplicate of https://github.com/angular/angular/issues/14871 because it's not about rendering applications with a web worker. It's about adding support to add support for `SharedWorker` in an Angular application.\n\n### Proposed solution\n\nAccording to [this StackOverflow post](https://stackoverflow.com/a/64495078) it should be possible if it was turned on in the Angular CLI webpack config by setting [`sharedWorker`](https://github.com/GoogleChromeLabs/worker-plugin#sharedworker-boolean) to `true`.\r\n\r\nAs a nice addition, there could be a `--shared` flag added to the `ng generate web-worker` command so it generates a chunk of code that makes sense for SharedWorkers. Something like this.\r\n\r\n```ts\r\nif (typeof SharedWorker !== 'undefined') {\r\n  // Create a new\r\n  const worker = new SharedWorker(new URL('./app.worker', import.meta.url).toString());\r\n  worker.port.onmessage = ({ data }) => {\r\n    console.log(`page got message: ${data}`);\r\n  };\r\n  worker.port.postMessage('hello');\r\n} else {\r\n  // Shared web workers are not supported in this environment.\r\n  // You should add a fallback so that your program still executes correctly.\r\n}\r\n```\n\n### Alternatives considered\n\nAn alternative right now is to use a [custom webpack loader](https://github.com/GoogleChromeLabs/worker-plugin#loader), which is not really super DX friendly.","Url":"https://github.com/angular/angular-cli/issues/22204","RelatedDescription":"Closed issue \"Add support for SharedWorkers\" (#22204)"},{"Id":"1058599114","IsPullRequest":false,"CreatedAt":"2021-11-19T14:31:47","Actor":"minijus","Number":"22201","RawContent":null,"Title":"Expose '--i18n-duplicate-translation`option for build target","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler-cli, compiler, localize\n\n### Description\n\nFor applications that use duplicate translations build output become verbose with warnings.\r\nIt would be great to expose new `--i18n-duplicate-translation`option on `ng build` in a similar manner that it is already done with `--i18n-missing-translation`.\r\n\r\n`translate`already supports this with `duplicateTranslation ` [option](https://github.com/angular/angular/blob/master/packages/localize/tools/src/translate/index.ts#L77), but this option is not exposed up to `ng build`.\n\n### Proposed solution\n\nExpose new `--i18n-duplicate-translation`option on `ng build`.\n\n### Alternatives considered\n\nNone. Exposing what is already supported seem like a proper way.","Url":"https://github.com/angular/angular-cli/issues/22201","RelatedDescription":"Open issue \"Expose '--i18n-duplicate-translation`option for build target\" (#22201)"},{"Id":"1058447141","IsPullRequest":true,"CreatedAt":"2021-11-19T13:35:57","Actor":"renovate[bot]","Number":"22199","RawContent":null,"Title":"build: update dependency source-map-support to v0.5.21","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [source-map-support](https://togithub.com/evanw/node-source-map-support) | [`0.5.20` -> `0.5.21`](https://renovatebot.com/diffs/npm/source-map-support/0.5.20/0.5.21) | [![age](https://badges.renovateapi.com/packages/npm/source-map-support/0.5.21/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/source-map-support/0.5.21/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/source-map-support/0.5.21/compatibility-slim/0.5.20)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/source-map-support/0.5.21/confidence-slim/0.5.20)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/node-source-map-support</summary>\n\n### [`v0.5.21`](https://togithub.com/evanw/node-source-map-support/compare/v0.5.20...v0.5.21)\n\n[Compare Source](https://togithub.com/evanw/node-source-map-support/compare/v0.5.20...v0.5.21)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22199","RelatedDescription":"Closed or merged PR \"build: update dependency source-map-support to v0.5.21\" (#22199)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1060807907","IsPullRequest":true,"CreatedAt":"2021-11-25T05:12:02","Actor":"ramthir","Number":"24003","RawContent":null,"Title":"refactor(material/form-field): unsubscribe rxjs subscriptions","State":"closed","Body":"There are unsubscribed subscriptions in the form-field. With this, we're unsubscribing them from take until with the distroy-subject.","Url":"https://github.com/angular/components/pull/24003","RelatedDescription":"Closed or merged PR \"refactor(material/form-field): unsubscribe rxjs subscriptions\" (#24003)"},{"Id":"1063078157","IsPullRequest":false,"CreatedAt":"2021-11-25T01:59:14","Actor":"Akxe","Number":"24011","RawContent":null,"Title":"bug(select): Centering not working if select contains other elements that mat-option","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a select with filter input on top is created, it will not be able to center correctly.\n\n### Reproduction\n\nhttps://stackblitz.com/edit/components-issue-duemp4?file=src%2Fapp%2Fexample-component.html\r\n\r\nSteps to reproduce:\r\n1. Create `mat-select`\r\n2. Add `mat-options`\r\n3. Above all options, add any element with height (ex. `input`)\r\n\n\n### Expected Behavior\n\nThe element will be correctly found and scrolled at the right position.\n\n### Actual Behavior\n\nIt is shifted down exactly by the height of the inserted element(s) above selected `mat-option`s\n\n### Environment\n\nAngular CLI: 13.0.3\r\nNode: 14.15.4\r\nPackage Manager: npm 7.20.6\r\nOS: win32 x64","Url":"https://github.com/angular/components/issues/24011","RelatedDescription":"Open issue \"bug(select): Centering not working if select contains other elements that mat-option\" (#24011)"},{"Id":"1062299663","IsPullRequest":false,"CreatedAt":"2021-11-24T21:08:39","Actor":"uragun91","Number":"24009","RawContent":null,"Title":"bug(google-maps): Update google maps typings","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPlease update google-maps typings from `@types/googlemaps` to `@types/google.maps` since [@types/googlemaps](https://www.npmjs.com/package/@types/googlemaps) is now deprecated. Currently creates an issue when you need to rely on `@types/google.maps` package:\r\n![](https://i.imgur.com/RprvYe4.png)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Make use of some package which needs @types/google.maps (e.g. \"@googlemaps/js-api-loader\": \"~1.12.10\")\r\n2. Try to build the project\r\n\n\n### Expected Behavior\n\nSuccessful build\n\n### Actual Behavior\n\nBuild fails with Duplicate identifier error\n\n### Environment\n\n- Angular: 11.2.13\r\n- CDK/Material: 11.2.13\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/24009","RelatedDescription":"Closed issue \"bug(google-maps): Update google maps typings\" (#24009)"},{"Id":"1062477452","IsPullRequest":true,"CreatedAt":"2021-11-24T14:22:49","Actor":"halfpastfate","Number":"24010","RawContent":null,"Title":"Update _datepicker-theme.scss","State":"closed","Body":"align with input.mat-input-element","Url":"https://github.com/angular/components/pull/24010","RelatedDescription":"Closed or merged PR \"Update _datepicker-theme.scss\" (#24010)"},{"Id":"1062157756","IsPullRequest":false,"CreatedAt":"2021-11-24T08:53:41","Actor":"Klapik","Number":"24008","RawContent":null,"Title":"feat(cdk/scrolling): Add support for nested for loop","State":"open","Body":"### Feature Description\r\n\r\nThe Angular Material cdk-virtual-scroll-viewport property is not working correctly for nested *ngFor. The viewport is split into two and the scroll does not work as expected. Please assist in listing in viewport with parent and child.\r\n\r\n### Use Case\r\n<cdk-virtual-scroll-viewport itemSize=\"50\">\r\n\r\n```\r\n <div *cdkVirtualFor=\"let parent of parents\">\r\n    <h4>{{ parent.name }}</h4>\r\n    <div>\r\n      <div *ngFor=\"let child of children\">\r\n        <p>{{ child.name }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</cdk-virtual-scroll-viewport>\r\n```\r\n","Url":"https://github.com/angular/components/issues/24008","RelatedDescription":"Open issue \"feat(cdk/scrolling): Add support for nested for loop\" (#24008)"},{"Id":"1059105293","IsPullRequest":true,"CreatedAt":"2021-11-23T18:28:11","Actor":"crisbeto","Number":"23994","RawContent":null,"Title":"fix(multiple): some experimental components not cleaned up completely","State":"closed","Body":"Fixes a few cases where we weren't destroying the MDC foundation in our own components. There's also a case where we were overriding the `ngOnDestroy` from a parent component, but we weren't calling it from the override.","Url":"https://github.com/angular/components/pull/23994","RelatedDescription":"Closed or merged PR \"fix(multiple): some experimental components not cleaned up completely\" (#23994)"},{"Id":"1061543060","IsPullRequest":true,"CreatedAt":"2021-11-23T17:28:56","Actor":"biggs0125","Number":"24007","RawContent":null,"Title":"fix(cdk-experimental/column-resize): Ensure resizable entity is not d…","State":"open","Body":"…estroyed before applying min/max update\r\n\r\nThe styleSchedule.scheduleEnd() function will sometimes call the provided callback after the nativeElement has been destroyed. The width of this nativeElement is used in the _apply(Min/Max)WidthPx functions to calculate a width diff. If the nativeElement has already been destroyed, the \"current\" width of the element is 0 so the column effectively doubles in width even though it technically didn't change. This width change is propagated up to the table which increases its size to account for the increased column width.\r\n\r\nIf the element has been destroyed, we can just ignore any resize logic pertaining to that old column since it should no longer affect the table's width. A newer version of that entity should make the change if necessary.\r\n\r\nSee internal ticket b/207484257 for before/after screenshots of this change.","Url":"https://github.com/angular/components/pull/24007","RelatedDescription":"Open PR \"fix(cdk-experimental/column-resize): Ensure resizable entity is not d…\" (#24007)"},{"Id":"1061529208","IsPullRequest":false,"CreatedAt":"2021-11-23T17:13:55","Actor":"adelinor","Number":"24006","RawContent":null,"Title":"mat-raised-button: @HostBinding('disabled') not working with Angular material 12","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n6.3.0\n\n### Description\n\nA material button in version 12 does not show as disabled when the attribute is set with a property annotated with `@HostBinding('disabled')` .\n\n### Reproduction\n\nSteps to reproduce:\r\n1. The custom directive `myDirective` disables a button when the directive parameter contains an 'a', see https://stackblitz.com/edit/angular-ivy-17ajyo\r\n2. The standard button renders correctly as disabled but not the Angular material button\r\n\n\n### Expected Behavior\n\nThe button should appear as disabled.\n\n### Actual Behavior\n\nAngular material button shows as enabled.\n\n### Environment\n\n- Angular: 12.2.13\r\n- CDK/Material: 12.2.13\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24006","RelatedDescription":"Open issue \"mat-raised-button: @HostBinding('disabled') not working with Angular material 12\" (#24006)"},{"Id":"1060753009","IsPullRequest":false,"CreatedAt":"2021-11-23T15:34:50","Actor":"bryantlikes","Number":"24002","RawContent":null,"Title":"bug(Accessibility): @use '@angular/cdk' no longer works","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n12.2.12\r\n\r\n### Description\r\n\r\nThe documentation for **Hiding elements in an accessible way** shows to `@use '@angular/cdk'` which no longer works. \r\n\r\nhttps://material.angular.io/cdk/a11y/overview#hiding-elements-in-an-accessible-way\r\n\r\nFollowing the overlay setup works as expected. \r\n\r\nhttps://material.angular.io/cdk/overlay/overview#initial-setup\r\n\r\nNote: Fixed this locally by changing my import to be:\r\n\r\n@import '@angular/cdk/a11y-prebuilt.css'; \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Add  `@use '@angular/cdk';` to the root scss file of an angular project\r\n2. Build the project and it will error with no scss document found\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould import the stylesheet\r\n\r\n### Actual Behavior\r\n\r\nStylesheet doesn't get imported\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 13.0.2\r\n- CDK/Material: 13.0.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24002","RelatedDescription":"Closed issue \"bug(Accessibility): @use '@angular/cdk' no longer works\" (#24002)"},{"Id":"1061131744","IsPullRequest":false,"CreatedAt":"2021-11-23T11:18:00","Actor":"aline-almeida","Number":"24005","RawContent":null,"Title":"feat(google-maps): DataLayer","State":"open","Body":"### Feature Description\n\nHi! There should be a data layer wrapper so we could bind it easily with a GeoJson file, handle feature events and styling, just like other existing types of layers.\r\n\r\nCould be something like\r\n```\r\n<google-map ......>\r\n  <map-data-layer [data]=\"jsonData\" (layerClick)=\"clicked($event)\"  [style]=\"styleFunc\">  </map-data-layer>\r\n</google-map>\r\n```\r\n\r\nI think this has been referred to in #23611, but I can't seem to find the wrapper (not the code implementation)\r\n\n\n### Use Case\n\nLoading GeoJson data into a map is a very common action and also useful. Having a wrapper would enable to take advantage of the binding features, instead of having to do everything by code","Url":"https://github.com/angular/components/issues/24005","RelatedDescription":"Open issue \"feat(google-maps): DataLayer\" (#24005)"},{"Id":"1061026394","IsPullRequest":true,"CreatedAt":"2021-11-23T09:44:30","Actor":"crisbeto","Number":"24004","RawContent":null,"Title":"fix(material-experimental/mdc-checkbox): reduce amount of emitted theme css","State":"open","Body":"We were adding the ripple variables to the MDC checkbox theme, even though we weren't actually using it. These changes remove the variables which shaves off ~30kb from the theme.","Url":"https://github.com/angular/components/pull/24004","RelatedDescription":"Open PR \"fix(material-experimental/mdc-checkbox): reduce amount of emitted theme css\" (#24004)"},{"Id":"1058845281","IsPullRequest":true,"CreatedAt":"2021-11-22T19:55:55","Actor":"devversion","Number":"23990","RawContent":null,"Title":"build: update bazel setup to latest dev-infra and rules_nodejs version [patch port]","State":"closed","Body":"Patch port of https://github.com/angular/components/pull/23973","Url":"https://github.com/angular/components/pull/23990","RelatedDescription":"Closed or merged PR \"build: update bazel setup to latest dev-infra and rules_nodejs version [patch port]\" (#23990)"},{"Id":"1059295180","IsPullRequest":true,"CreatedAt":"2021-11-22T19:53:21","Actor":"lekhmanrus","Number":"23997","RawContent":null,"Title":"docs: update commit message guidelines","State":"closed","Body":"Looks like commit message types and scopes are outdated. ","Url":"https://github.com/angular/components/pull/23997","RelatedDescription":"Closed or merged PR \"docs: update commit message guidelines\" (#23997)"},{"Id":"1059340371","IsPullRequest":true,"CreatedAt":"2021-11-22T19:52:49","Actor":"crisbeto","Number":"23999","RawContent":null,"Title":"refactor(material-experimental/mdc-slider): clean up leftover deprecated function usage","State":"closed","Body":"Fixes a couple of places where we were using the deprecated `map-get` function from Sass.","Url":"https://github.com/angular/components/pull/23999","RelatedDescription":"Closed or merged PR \"refactor(material-experimental/mdc-slider): clean up leftover deprecated function usage\" (#23999)"},{"Id":"1060435812","IsPullRequest":false,"CreatedAt":"2021-11-22T17:49:02","Actor":"RonanCodes","Number":"24001","RawContent":null,"Title":"feat(Horizontal Expansion Panel): Add Horizontal option to the Expansion Panel","State":"open","Body":"### Feature Description\n\nCurrently the Angular Material Expansion Panel expands vertically, but not horizonally:\r\nhttps://material.angular.io/components/expansion/overview\n\n### Use Case\n\nI have a use case where a card needs to be able to be expanded horizontally.\r\n\r\nThis person has the same use case:\r\nhttps://stackoverflow.com/questions/46360604/opening-angular-material-expansion-panel-vertically","Url":"https://github.com/angular/components/issues/24001","RelatedDescription":"Open issue \"feat(Horizontal Expansion Panel): Add Horizontal option to the Expansion Panel\" (#24001)"},{"Id":"1058377187","IsPullRequest":false,"CreatedAt":"2021-11-22T09:54:25","Actor":"troncomputers","Number":"23988","RawContent":null,"Title":"feat(MatDateRangePicker): Implement TouchUI","State":"closed","Body":"### Feature Description\n\n``` html\r\n<mat-date-range-picker touchUi #picker></mat-date-range-picker>\r\n```\r\nNow it's \"normal\" sized calendar but in center of the screen.\n\n### Use Case\n\nBigger calendar for mobile devices with touch support.\r\n","Url":"https://github.com/angular/components/issues/23988","RelatedDescription":"Closed issue \"feat(MatDateRangePicker): Implement TouchUI\" (#23988)"},{"Id":"1059749875","IsPullRequest":true,"CreatedAt":"2021-11-22T06:33:53","Actor":"crisbeto","Number":"24000","RawContent":null,"Title":"fix(material/tabs): avoid timeouts in background tabs","State":"open","Body":"The tabs have a couple of `requestAnimationFrame` calls when checking for the size/position of elements which can cause tests to hang when they're in a background tab. The problem is that browsers block `requestAnimationFrame` when the browser is out of focus and test harnesses will wait for the call to resolve.\r\n\r\nThese changes switch to `NgZone.onStable` in an attempt to resolve the issue.\r\n\r\nFixes #23964.","Url":"https://github.com/angular/components/pull/24000","RelatedDescription":"Open PR \"fix(material/tabs): avoid timeouts in background tabs\" (#24000)"},{"Id":"1059315987","IsPullRequest":false,"CreatedAt":"2021-11-21T07:57:09","Actor":"kzhui125","Number":"23998","RawContent":null,"Title":"help(MatTableModule): table refresh: only refresh changed row(object)","State":"open","Body":"### What are you trying to do?\n\n```typescript\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n];\r\n\r\nconst ELEMENT_DATA2: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n];\r\n\r\n/**\r\n * @title Binding event handlers and properties to the table rows.\r\n */\r\n@Component({\r\n  selector: 'table-row-binding-example',\r\n  styleUrls: ['table-row-binding-example.css'],\r\n  templateUrl: 'table-row-binding-example.html',\r\n})\r\nexport class TableRowBindingExample {\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n\r\n  test(): void {\r\n    this.dataSource = ELEMENT_DATA2;\r\n  }\r\n}\r\n```\r\n\r\nWhen test() is called, I find that all table rows dom are recreated.\r\nIs there a way to let MatTableModule auto compare old array and new array (primary key id), only rerender changed rows.\r\n\r\nThanks,\r\n\n\n### What troubleshooting steps have you tried?\n\nrun the code\n\n### Reproduction\n\nrun the code\n\n### Environment\n\ncode from https://material.angular.io/components/table/examples","Url":"https://github.com/angular/components/issues/23998","RelatedDescription":"Open issue \"help(MatTableModule): table refresh: only refresh changed row(object)\" (#23998)"},{"Id":"1059257966","IsPullRequest":false,"CreatedAt":"2021-11-21T00:18:04","Actor":"Akxe","Number":"23996","RawContent":null,"Title":"bug(cdk-experimetal/scrolling): Every item of input array is rendered initially","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nInitially, before any scrolling occurs; every item of `items` passed to `cdkVirtualFor` is rendered. After scrolling down for a bit (till `translateY` of `.cdk-virtual-scroll-content-wrapper` changes) and scrolling up (even just a bit) the list of rendered elements sharing to only visible elements.\r\n\r\n### Reproduction\r\n\r\nCould not create stackblitz with `cdk-experimental` nor `angular` v13. Here is an example of what it does in my fairly rudimentary case: https://youtu.be/ILHPaMk2hZU\r\n\r\nrelated code: \r\n```html\r\n<cdk-virtual-scroll-viewport autosize class=\"scroller\">\r\n\t<rita-company\r\n\t\tclass=\"mat-elevation-z3\"\r\n\t\t*cdkVirtualFor=\"let company of companies$\"\r\n\t\t[company]=\"company\"\r\n\t\t[readonly]=\"isReadonly(company) | async\"\r\n\t\t(editing)=\"editingCompanyChanged($event, company)\">\r\n\t</rita-company>\r\n</cdk-virtual-scroll-viewport>\r\n```\r\n-----\r\n\r\nSteps to reproduce:\r\n1. Create a container and any item template. Fixed height for simplicity is perfect\r\n```\r\n<cdk-virtual-scroll-viewport autosize>\r\n  <div *cdkVirtualFor=\"let item of items\" style=\"height: 500px\">{{item | json}}</div>\r\n</cdk-virtual-scroll-viewport>\r\n```\r\n2. Populate `items` array with 1000 elements\r\n3. View in elements panel, that there is the same number of `div`s as there is of `items`. \r\n\r\n\r\n### Expected Behavior\r\n\r\nI expected only needed elements to be rendered.\r\n\r\n### Actual Behavior\r\n\r\nEvery element of my array is rendered making `cdk-virtual-scroll-viewport` do nothing!\r\n\r\n### Environment\r\n\r\nAngular CLI: 13.0.3\r\nNode: 14.15.4\r\nPackage Manager: npm 7.20.6\r\nOS: win32 x64\r\n\r\nAngular: 13.0.2\r\n... animations, cdk, cdk-experimental, common, compiler\r\n... compiler-cli, core, forms, language-service, material\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.3\r\n@angular-devkit/build-angular   13.0.3\r\n@angular-devkit/core            13.0.3\r\n@angular-devkit/schematics      13.0.3\r\n@angular/cli                    13.0.3\r\n@angular/google-maps            12.1.3\r\n@schematics/angular             13.0.3\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4","Url":"https://github.com/angular/components/issues/23996","RelatedDescription":"Open issue \"bug(cdk-experimetal/scrolling): Every item of input array is rendered initially\" (#23996)"},{"Id":"1059156447","IsPullRequest":false,"CreatedAt":"2021-11-20T14:27:56","Actor":"cfficaurzua","Number":"23995","RawContent":null,"Title":"feat(map-marker): add setters","State":"open","Body":"### Feature Description\n\nThe javascript library has setters:\r\n- setAnimation\r\n- setClickable\r\n- setCursor\r\n- setDraggable\r\n- setIcon\r\n- setLabel\r\n- setMap\r\n- setOpacity\r\n- setOptions\r\n- setPosition\r\n- setShape\r\n- setTitle\r\n- setVisible\r\n- setZIndex\r\n\r\nBut the MapMarker class has only getters.\r\nCan we add them? or theres is a reason not to?\n\n### Use Case\n\nwell basically I want to add a bounce animation when I click the marker\r\n```\r\n<map-marker #marker=\"mapMarker\" *ngFor=\"let element of data\"\r\n\t\t[position]=\"element.drop\"\r\n\t\t(mapClick)=\"openInfoWindow(marker, infoWindow)\"\r\n\t\t[options]=\"markerOptions(element)\">\r\n</map-marker>\r\n```\r\n```\r\n  openInfoWindow(marker: MapMarker, infoWindow:MapInfoWindow) {\r\n    marker.setAnimation(google.maps.Animation.BOUNCE)\r\n    this.previousInfoWindow ? this.previousInfoWindow.close() : null \r\n    infoWindow.open(marker);\r\n    this.previousInfoWindow = infoWindow\r\n  }\r\n```\r\n","Url":"https://github.com/angular/components/issues/23995","RelatedDescription":"Open issue \"feat(map-marker): add setters\" (#23995)"},{"Id":"1059055396","IsPullRequest":true,"CreatedAt":"2021-11-20T04:13:19","Actor":"arturovt","Number":"23993","RawContent":null,"Title":"perf(cdk/a11y): do not emit origin if there are no listeners","State":"open","Body":"","Url":"https://github.com/angular/components/pull/23993","RelatedDescription":"Open PR \"perf(cdk/a11y): do not emit origin if there are no listeners\" (#23993)"},{"Id":"1059038702","IsPullRequest":true,"CreatedAt":"2021-11-20T02:26:22","Actor":"arturovt","Number":"23992","RawContent":null,"Title":"perf(material/button): do not run change detection when the anchor is clicked","State":"open","Body":"","Url":"https://github.com/angular/components/pull/23992","RelatedDescription":"Open PR \"perf(material/button): do not run change detection when the anchor is clicked\" (#23992)"},{"Id":"1059015928","IsPullRequest":true,"CreatedAt":"2021-11-20T00:39:50","Actor":"lekhmanrus","Number":"23991","RawContent":null,"Title":"refactor(cdk/overlay): formatting","State":"open","Body":"Just noticed unformatted files after running `yarn ng-dev format all`.","Url":"https://github.com/angular/components/pull/23991","RelatedDescription":"Open PR \"refactor(cdk/overlay): formatting\" (#23991)"},{"Id":"1058682557","IsPullRequest":true,"CreatedAt":"2021-11-19T16:00:31","Actor":"arturovt","Number":"23989","RawContent":null,"Title":"perf(material/sort): do not run change detection on any `keydown` event for the `mat-sort-header`","State":"open","Body":"","Url":"https://github.com/angular/components/pull/23989","RelatedDescription":"Open PR \"perf(material/sort): do not run change detection on any `keydown` event for the `mat-sort-header`\" (#23989)"},{"Id":"1058071694","IsPullRequest":true,"CreatedAt":"2021-11-19T02:53:15","Actor":"arturovt","Number":"23987","RawContent":null,"Title":"perf(cdk/scrolling): do not run change detection if there are no `viewChange` listeners","State":"open","Body":"","Url":"https://github.com/angular/components/pull/23987","RelatedDescription":"Open PR \"perf(cdk/scrolling): do not run change detection if there are no `viewChange` listeners\" (#23987)"},{"Id":"1058063211","IsPullRequest":true,"CreatedAt":"2021-11-19T02:33:40","Actor":"arturovt","Number":"23986","RawContent":null,"Title":"perf(cdk/overlay): do not run change detection if there are no `backdropClick` listeners","State":"open","Body":"","Url":"https://github.com/angular/components/pull/23986","RelatedDescription":"Open PR \"perf(cdk/overlay): do not run change detection if there are no `backdropClick` listeners\" (#23986)"},{"Id":"1057112876","IsPullRequest":false,"CreatedAt":"2021-11-18T22:45:42","Actor":"llaz00","Number":"23981","RawContent":null,"Title":"bug(datepicker): Months in Estonian language are too long","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf language is set to Estonian ('et') the month names in datepicker are too long (in other languages like English they're cut of at 3 characters)\r\n<img width=\"369\" alt=\"image\" src=\"https://user-images.githubusercontent.com/49528536/142384277-d0ec45bf-ace5-4e87-a45d-3efba3630e38.png\">\r\n\n\n### Reproduction\n\nStackblitz: https://stackblitz.com/edit/components-issue-mrozgp?file=src/app/example-component.ts\r\n\r\nSteps to reproduce:\r\n1. Set DateAdapter locale to Estonian ('et')\r\n2. Open datepicker\r\n3. Click in the month/year title\r\n4. Select year\r\n5. Months view should be displayed with too long names\r\n\n\n### Expected Behavior\n\nMonths should be cut off at 3 characters as in other languages\n\n### Actual Behavior\n\nMonth names are displayed enterely\n\n### Environment\n\n- Angular: 12.2.9\r\n- CDK/Material: 12.2.9\r\n- Browser(s): Chrome 95.0.4638.69 (Official Build) (x86_64)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS Monterey (12.0.1)\r\n","Url":"https://github.com/angular/components/issues/23981","RelatedDescription":"Closed issue \"bug(datepicker): Months in Estonian language are too long\" (#23981)"},{"Id":"1057814346","IsPullRequest":false,"CreatedAt":"2021-11-18T21:25:17","Actor":"Airblader","Number":"23985","RawContent":null,"Title":"feat(dialog): Dialogs can define the type for their dialog data","State":"open","Body":"### Feature Description\r\n\r\n#4398 introduced a generic type argument for `MatDialogConfig`. This type argument is forwarded in `open`. However, the type is never tied in anyway to the actual component, making the type argument an essentially useless type assertion.\r\n\r\nWhile due to the nature of Angular's dependency injection full type-safety cannot be achieved, it would be nice if at least the dialog component could declare the type it receives itself in such a way that a call to `open` will infer the correct type automatically. In order to achieve this, the dialog component needs to somehow expose this information. Here are a few possible solutions in no particular order, though others might exist:\r\n\r\n#### Interface with type inference\r\n\r\nWe could define an interface and a helper type as follows:\r\n\r\n```\r\ninterface MatDialogHasData<T> {\r\n  data: T;\r\n}\r\n\r\ntype ExtractDialogDataType<T> = T extends MatDialogHasData<infer D> ? D : any;\r\n```\r\n\r\nWe can then adjust the type signature of `open` to infer the type accordingly:\r\n\r\n```\r\nopen<T, R = any>(\r\n  component: ComponentType<T>, \r\n  data?: MatDialogConfig<ExtractDialogDataType<T>>\r\n): MatDialogReg<T, R>\r\n```\r\n\r\nFinally, a dialog component would be required to have a public field named `data` of the according type, which would typically be achieved through the injection itself:\r\n\r\n```\r\nconstructor(@Inject(MAT_DIALOG_DATA) public data: MyDialogDataType) {}\r\n```\r\n\r\n*Note*: This change _is_ breaking because the generic signature of `open` changes and because dialog components could have an unrelated `data` field which would lead to an unintended type inference. Unfortunately we cannot prevent this here due to TypeScript's structural typing nature. In particular users would no longer be able to manually define the generic type argument. However see further below for a solution to this problem.\r\n\r\n#### Interface with explicit method\r\n\r\nInstead, we could also introduce an interface with an explicit method to be implemented:\r\n\r\n```\r\ninterface MatDialogHasData<T> {\r\n  getDialogData(): T\r\n}\r\n```\r\n\r\nOtherwise the approach is largely similar. This change is only breaking in the generic type signature (I'm not sure whether you count this as a breaking change), however we could actually avoid that by changing our helper type to\r\n\r\n```\r\ntype ExtractDialogDataType<T, FALLBACK> = T extends MatDialogHasData<infer D> ? D : FALLBACK;\r\n```\r\n\r\nand then using the type argument as a fallback:\r\n\r\n```\r\nopen<T, D = any, R = any>(\r\n  component: ComponentType<T>, \r\n  data?: MatDialogConfig<ExtractDialogDataType<T, D>>\r\n): MatDialogReg<T, R>\r\n```\r\n\r\n*Note*: The same could be done in the solution above. I believe we could make this a completely backwards-compatible change, excluding of course the exotic situation that a component happens to already have a `getDialogData` method for unrelated reasons. The only disadvantage here is forcing the component to provide a public method. In practice I don't consider this a concern as Angular already forces us to make many things public that shouldn't be public from a component API perspective.\r\n\r\n---\r\n\r\nOn a very similar note, it would be nice to have the same for the inferred result type `R`, i.e. the component being able to define the type of data it can return, and have this information flow through the `open` method to the caller. The approaches mentioned above could, in theory, cover this as well.\r\n\r\n### Use Case\r\n\r\nGiven some `MyDialogComponent` which expects dialog data of type `MyDialogData`, I would like\r\n\r\n```\r\nopen(MyDialogComponent, {\r\n  data: {\r\n    // …\r\n  }\r\n});\r\n```\r\n\r\nto type-check `data` against `MyDialogData` without having to manually specify `open`'s type arguments, but rather have this information flow from `MyDialogComponent`.","Url":"https://github.com/angular/components/issues/23985","RelatedDescription":"Open issue \"feat(dialog): Dialogs can define the type for their dialog data\" (#23985)"},{"Id":"1057695341","IsPullRequest":false,"CreatedAt":"2021-11-18T18:58:36","Actor":"Splaktar","Number":"23983","RawContent":null,"Title":"dev-infra: can't build project or run dev-app on MacBooks with m1 CPUs","State":"open","Body":"### What are you trying to do?\r\n\r\nI've switched to an m1Max MacBook Pro as my main device now.\r\n\r\nI've got Bazel 4.2.1 installed locally, but the build seems to be trying to install Bazel 4.0.0 and failing.\r\n\r\n![Screen Shot 2021-11-18 at 13 57 43](https://user-images.githubusercontent.com/3506071/142479285-bfda7541-602b-41d8-94f5-02ce392bb6b2.png)\r\n\r\n1. Build the project\r\n2. Run the dev-app\r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\nSetting my `BAZEL` environment variable as discussed in https://github.com/angular/angular/issues/40498#issuecomment-973159023. This fixed Bazel builds for Framework, but not Components.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. yarn\r\n2. yarn build\r\n\r\n```\r\nsplaktar-m1max:components splaktar$ yarn build\r\nyarn run v1.22.17\r\n$ ts-node --project scripts/tsconfig.json ./scripts/build-packages-dist.ts\r\n######################################\r\n  Building release packages...\r\n######################################\r\n2021/11/18 13:54:15 Downloading https://releases.bazel.build/4.0.0/release/bazel-4.0.0-darwin-arm64...\r\n2021/11/18 13:54:15 could not download Bazel: HTTP GET https://releases.bazel.build/4.0.0/release/bazel-4.0.0-darwin-arm64 failed with error 404\r\nError: Command failed: bazel query --output=label \"attr('tags', '\\[.*release-package.*\\]', //src/...) intersect kind('.*_package', //src/...)\"\r\n    at checkExecSyncError (node:child_process:826:11)\r\n    at execSync (node:child_process:900:15)\r\n    at exec (/Users/splaktar/Git/angular/components/scripts/build-packages-dist.ts:137:26)\r\n    at buildReleasePackages (/Users/splaktar/Git/angular/components/scripts/build-packages-dist.ts:69:19)\r\n    at performDefaultSnapshotBuild (/Users/splaktar/Git/angular/components/scripts/build-packages-dist.ts:56:10)\r\n    at Object.<anonymous> (/Users/splaktar/Git/angular/components/scripts/build-packages-dist.ts:43:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Module.m._compile (/Users/splaktar/Git/angular/components/node_modules/ts-node/src/index.ts:1310:23)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Object.require.extensions.<computed> [as .ts] (/Users/splaktar/Git/angular/components/node_modules/ts-node/src/index.ts:1313:12) {\r\n  status: 1,\r\n  signal: null,\r\n  output: [ null, Buffer(0) [Uint8Array] [], null ],\r\n  pid: 63907,\r\n  stdout: Buffer(0) [Uint8Array] [],\r\n  stderr: null\r\n}\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n```\r\n\r\n3. yarn dev-app\r\n```\r\nsplaktar-m1max:components splaktar$ yarn dev-app\r\nyarn run v1.22.17\r\n$ ibazel run //src/dev-app:devserver\r\nFATAL: Your platform/architecture combination darwin - arm64 is not yet supported.\r\n    Follow install instructions at https://github.com/bazelbuild/bazel-watcher/blob/master/README.md to compile for your system.\r\nnode:internal/validators:119\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\r\n    ^\r\n\r\nTypeError [ERR_INVALID_ARG_TYPE]: The \"file\" argument must be of type string. Received an instance of Promise\r\n    at new NodeError (node:internal/errors:371:5)\r\n    at validateString (node:internal/validators:119:11)\r\n    at normalizeSpawnArguments (node:child_process:503:3)\r\n    at spawn (node:child_process:691:13)\r\n    at main (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:82:18)\r\n    at Object.<anonymous> (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:96:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12) {\r\n  code: 'ERR_INVALID_ARG_TYPE'\r\n}\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n```\r\n4. yarn test material/button\r\n```\r\nsplaktar-m1max:components splaktar$ yarn test material/button\r\nyarn run v1.22.17\r\n$ node ./scripts/run-component-tests.js material/button\r\nFATAL: Your platform/architecture combination darwin - arm64 is not yet supported.\r\n    Follow install instructions at https://github.com/bazelbuild/bazel-watcher/blob/master/README.md to compile for your system.\r\nnode:internal/validators:119\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\r\n    ^\r\n\r\nTypeError [ERR_INVALID_ARG_TYPE]: The \"file\" argument must be of type string. Received an instance of Promise\r\n    at new NodeError (node:internal/errors:371:5)\r\n    at validateString (node:internal/validators:119:11)\r\n    at normalizeSpawnArguments (node:child_process:503:3)\r\n    at spawn (node:child_process:691:13)\r\n    at main (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:82:18)\r\n    at Object.<anonymous> (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:96:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12) {\r\n  code: 'ERR_INVALID_ARG_TYPE'\r\n}\r\n/Users/splaktar/Git/angular/components/node_modules/shelljs/src/common.js:401\r\n      if (config.fatal) throw e;\r\n                        ^\r\n\r\nError: exec: FATAL: Your platform/architecture combination darwin - arm64 is not yet supported.\r\n    Follow install instructions at https://github.com/bazelbuild/bazel-watcher/blob/master/README.md to compile for your system.\r\nnode:internal/validators:119\r\n    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\r\n    ^\r\n\r\nTypeError [ERR_INVALID_ARG_TYPE]: The \"file\" argument must be of type string. Received an instance of Promise\r\n    at new NodeError (node:internal/errors:371:5)\r\n    at validateString (node:internal/validators:119:11)\r\n    at normalizeSpawnArguments (node:child_process:503:3)\r\n    at spawn (node:child_process:691:13)\r\n    at main (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:82:18)\r\n    at Object.<anonymous> (/Users/splaktar/Git/angular/components/node_modules/@bazel/ibazel/index.js:96:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12) {\r\n  code: 'ERR_INVALID_ARG_TYPE'\r\n}\r\n\r\n    at Object.error (/Users/splaktar/Git/angular/components/node_modules/shelljs/src/common.js:110:27)\r\n    at execSync (/Users/splaktar/Git/angular/components/node_modules/shelljs/src/exec.js:102:12)\r\n    at Object._exec (/Users/splaktar/Git/angular/components/node_modules/shelljs/src/exec.js:205:12)\r\n    at Object.exec (/Users/splaktar/Git/angular/components/node_modules/shelljs/src/common.js:335:23)\r\n    at Object.<anonymous> (/Users/splaktar/Git/angular/components/scripts/run-component-tests.js:102:9)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:79:12)\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 13.0.1\r\n- CDK/Material: master\r\n- Browser(s): Chrome 95.0.4638.69 (Official Build) (arm64)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Monterey 12.0.1 (21A559)\r\n- Bazel: 4.2.1- (@non-git) `/opt/local/bin/bazel`","Url":"https://github.com/angular/components/issues/23983","RelatedDescription":"Open issue \"dev-infra: can't build project or run dev-app on MacBooks with m1 CPUs\" (#23983)"},{"Id":"1057613505","IsPullRequest":true,"CreatedAt":"2021-11-18T17:27:00","Actor":"kyubisation","Number":"23982","RawContent":null,"Title":"build: prevent * expansion for static css content in ng_web_test_suite","State":"open","Body":"Currently when using a `*` inside css code (e.g. `calc(... * ...)` in the typography) it will be expanded to files in the current directory (e.g. `calc ... bazel-out external ...`), which will break the tests. This PR fixes this by wrapping the variable usage with quotes.","Url":"https://github.com/angular/components/pull/23982","RelatedDescription":"Open PR \"build: prevent * expansion for static css content in ng_web_test_suite\" (#23982)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-11-25T05:30:05.8588781Z","RunDurationInMilliseconds":3701}