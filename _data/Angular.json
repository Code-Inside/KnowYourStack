{"Data":{"Angular-Issues":{"Issues":[{"Id":"1116941482","IsPullRequest":false,"CreatedAt":"2022-01-28T02:41:49","Actor":"dgp1130","Number":"44872","RawContent":null,"Title":"Warn on `==` / `!=` in templates","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler-cli\n\n### Description\n\nIn Angular templates, `==`, `!=`, `===`, and `!==` all map to their JavaScript equivalents. However the JS community has generally standardized on `===` and `!==` as the go to comparison operators, with many tools banning `==` and `!=` outright from codebases. This is because `==` and `!=` have unintuitive type conversion semantics which can be hard to reason about and lead to bugs. We should consider emitting a warning/error for these operators in Angular templates to catch these mistakes immediately and save the developer an hour of debugging.\n\n### Proposed solution\n\nAn extended diagnostic could easily identify this case and emit a warning. Users would also be free to configure the diagnostic as a hard error if they desired and truly pure `==` and `!=` from their codebase.\n\n### Alternatives considered\n\nYou could expect me to remember not to do this, but that ain't happenin'.","Url":"https://github.com/angular/angular/issues/44872","RelatedDescription":"Open issue \"Warn on `==` / `!=` in templates\" (#44872)"},{"Id":"1116939465","IsPullRequest":false,"CreatedAt":"2022-01-28T02:37:18","Actor":"dgp1130","Number":"44871","RawContent":null,"Title":"Better error message for nullish coalescing a pipe argument","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\ncompiler-cli\r\n\r\n### Description\r\n\r\nOperator precedence between nullish coalescing an a pipe argument can be confusing. Often they are used together in this way:\r\n\r\n```html\r\n<span>{{ birthday | date: 'YYYY-MM-dd' ?? 'Unknown' }}</span>\r\n```\r\n\r\nIn this case the developer probably intended for the birthday to be formatted like \"YYYY-MM-dd\", and if that format returned `null` or `undefined` for some reason (such as `birthday` being `null` or `undefined`), then it should fall back to \"Unknown\". However in practice, the `??` has higher precedence than the `|`, so it actually does `'YYYY-MM-dd' ?? 'Unknown'`, which is useless.\r\n\r\n```html\r\n<!-- How the developer wanted it to work. -->\r\n<span>{{ (birthday | date: 'YYYY-MM-dd') ?? 'Unknown' }}</span>\r\n\r\n<!-- How it actually works. -->\r\n<span>{{ birthday | date: ('YYYY-MM-dd' ?? 'Unknown') }}</span>\r\n```\r\n\r\nThis mistake should be highlighted to users to bring awareness about the issue and how to properly parenthesize the expression to do what they want.\r\n\r\n### Proposed solution\r\n\r\nWe already have [an extended diagnostic for a useless nullish coalescing operator](https://angular.io/extended-diagnostics/NG8102), which is triggered by `'YYYY-MM-dd' ?? 'Unknown'` and [correctly identifies this mistake](https://github.com/angular/angular/pull/43419). Unfortunately the error message is a bit unclear. We should either adjust the diagnostic or add a new one to specifically call out this pipe use case and suggest adding parentheses in the right manner.\r\n\r\n### Alternatives considered\r\n\r\nAlternatively we could just leave the existing diagnostic as is and accept a less-accurate error message. It does correctly identify the mistake, just with a less-than-ideal error message.","Url":"https://github.com/angular/angular/issues/44871","RelatedDescription":"Open issue \"Better error message for nullish coalescing a pipe argument\" (#44871)"},{"Id":"1116935779","IsPullRequest":false,"CreatedAt":"2022-01-28T02:29:53","Actor":"dgp1130","Number":"44870","RawContent":null,"Title":"Warn on non-nullable optional chain","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler-cli\n\n### Description\n\nOptional chaining is a great way to safely access properties that might be `null` or `undefined`, for example:\r\n\r\n```typescript\r\nimport {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <span>Hello, {{ user?.name ?? 'guest' }}!</span>\r\n  `,\r\n})\r\nexport class Greeter {\r\n  @Input() user?: User;\r\n}\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n```\r\n\r\nBut things can easily change and make the optional chain useless, such as:\r\n\r\n```diff\r\n  export class Greeter {\r\n-   @Input() user?: User;\r\n+   @Input() user: User;\r\n  }\r\n```\r\n\r\nThis change means that the optional chain `user?.name` is no longer useful because `user` will never be `null` or `undefined`. This leads to confusion and tricks readers of the code into thinking that there is a case where \"Hello, guest!\" is displayed, when that actually isn't the case. If the default \"guest\" string comes from somewhere else, it could lead to dead code and possibly result in excess bundle size.\n\n### Proposed solution\n\nWe should consider an extended diagnostic to identify and warn developers in this situation. We already have [a diagnostic to warn about useless nullish coalescing operators `??`](https://angular.io/extended-diagnostics/NG8102), so it makes sense to have a similar check for optional chaining.\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/44870","RelatedDescription":"Open issue \"Warn on non-nullable optional chain\" (#44870)"},{"Id":"1116930633","IsPullRequest":false,"CreatedAt":"2022-01-28T02:19:40","Actor":"dgp1130","Number":"44869","RawContent":null,"Title":"Validate a11y attributes","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler-cli\n\n### Description\n\nWe should have the Angular compiler validate the types for a11y features of the DOM, such as `role` or `aria-*` attributes to make sure they are always set to valid values. This could allow the compiler to error or warn on bad a11y values and help users identify mistakes in their code which can lead to a more accessible experience.\n\n### Proposed solution\n\nThis could potentially be done as an extended diagnostic, or possibly through a `*.d.ts` typecheck or other direct compiler integration. I'm not sure which would be more appropriate here.\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/44869","RelatedDescription":"Open issue \"Validate a11y attributes\" (#44869)"},{"Id":"1116927665","IsPullRequest":false,"CreatedAt":"2022-01-28T02:13:47","Actor":"dgp1130","Number":"44868","RawContent":null,"Title":"Verify all text nodes have an i18n attribute","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\n`@angular/compiler-cli`\r\n\r\n### Description\r\n\r\nIn internationalized applications, each piece of text in an Angular template requires the `i18n` attribute. This can contain a description, and there are other `i18n-` attributes which provide localized versions of user-visible text (such as `i18n-title`). The attributes are easy to forget, especially edge cases like `i18n-title`. There should be some kind of conformance check which verifies that all text in an application is marked for internationalization.\r\n\r\n### Proposed solution\r\n\r\nWe could have an extended diagnostic which requires that every message in the compilation is marked for `i18n` and warns / errors for messages missing the relevant attribute. It could also warn on attributes like `title` and suggest `i18n-title` as an alternative.\r\n\r\nSince not every app is internationalized, this check probably needs to be off by default, but having a one line config change like:\r\n\r\n```diff\r\n  {\r\n    \"angularCompilerOptions\": {\r\n      \"extendedDiagnostics\": {\r\n        \"checks\": {\r\n+         \"i18nMessages\": \"error\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nWould be a really easy way to make sure no messages fall through the cracks.\r\n\r\nWe may want some kind of `i18n-ignore` attribute to allow some messages to be skipped. I've seen this happen for debug UI which doesn't typically need to be translated.\r\n\r\n### Alternatives considered\r\n\r\nThere might be a community based solution which is able to do this, but I don't recall any offhand.","Url":"https://github.com/angular/angular/issues/44868","RelatedDescription":"Open issue \"Verify all text nodes have an i18n attribute\" (#44868)"},{"Id":"1116922827","IsPullRequest":false,"CreatedAt":"2022-01-28T02:03:55","Actor":"dgp1130","Number":"44867","RawContent":null,"Title":"Warn on negated async pipes","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\n`@angular/compiler-cli`\r\n\r\n### Description\r\n\r\nNegating an async pipe in an `*ngIf` thrashes the layout because the pipe emits `null` immediately before checking the condition. This can lead cause unnecessary rendering work and trigger component events which cause XHR's or other work to be done that shouldn't be needed.\r\n\r\n```html\r\n<div *ngIf=\"!(myConditional | async)\">\r\n  <!-- ... -->\r\n</div>\r\n```\r\n\r\nhttp://codelyzer.com/rules/template-no-negated-async/\r\n\r\n### Proposed solution\r\n\r\nWe should consider an [extended diagnostic](https://angular.io/extended-diagnostics) to detect and warn the user of this anti-pattern to head-off their confusing and suggest a better alternative.\r\n\r\nI'm not entirely sure what that alternative should be, but I imagine there's an easily transformable way of doing this?\r\n\r\n### Alternatives considered\r\n\r\nN/A","Url":"https://github.com/angular/angular/issues/44867","RelatedDescription":"Open issue \"Warn on negated async pipes\" (#44867)"},{"Id":"1116845008","IsPullRequest":true,"CreatedAt":"2022-01-27T23:34:15","Actor":"josephperrott","Number":"44866","RawContent":null,"Title":"Pullapprove updates","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular/pull/44866","RelatedDescription":"Open PR \"Pullapprove updates\" (#44866)"},{"Id":"1116757858","IsPullRequest":true,"CreatedAt":"2022-01-27T21:52:39","Actor":"AndrewKushnir","Number":"44865","RawContent":null,"Title":"docs: update survey id","State":"closed","Body":"The survey id is used as a key in the local storage to keep the state (don't show the message again). Reusing this survey id will make the message invisible to some users who already have that key in local storage.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44865","RelatedDescription":"Closed or merged PR \"docs: update survey id\" (#44865)"},{"Id":"1116157262","IsPullRequest":true,"CreatedAt":"2022-01-27T21:04:44","Actor":"shrey31893","Number":"44854","RawContent":null,"Title":"docs: describe your change...","State":"closed","Body":"changed text from FormControl to component as we are creating  component.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44854","RelatedDescription":"Closed or merged PR \"docs: describe your change...\" (#44854)"},{"Id":"1116723840","IsPullRequest":true,"CreatedAt":"2022-01-27T20:49:40","Actor":"JimMorrison723","Number":"44864","RawContent":null,"Title":"fix(devtools): show date type property value in preview","State":"open","Body":"Values of Date properties were not shown in the preview. It was formatted to a simple string thus not giving valuable info to the developer.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/rangle/angular-devtools/issues/880\r\n\r\n![image](https://user-images.githubusercontent.com/506946/151440542-186d1b80-1f59-4379-8682-a55491f6b3bd.png)\r\n\r\n\r\n## What is the new behavior?\r\n\r\nWe show the Date value inside `Date()`.\r\n\r\nInstead of showing the property's value, Date values are just formatted to a simple text.\r\n\r\n![image](https://user-images.githubusercontent.com/506946/151441098-a6e1a04d-c0e3-43ff-b2cc-0bc93bf6f055.png)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\nThis is a follow-up PR from the old one: https://github.com/rangle/angular-devtools/pull/976\r\n\r\nAs i mention in the PR this would be a quick win, we could improve this in the long run.\r\n\r\nI believe we could further improve the UX and DX later on, by:\r\n\r\n- Updating the demo app, so there would be a page, with all kinds of inputs, to test it out while developing the devtools\r\n- Instead of just showing the property in an editable, it would be nice if a little icon would show up telling us it is indeed a Date type property. Just looking at the current solution, one might think it's a simple string ([like in the vue devtools](https://github.com/vuejs/devtools/raw/main/media/screenshot-shadow.png))\r\n- I feel like devtool panel components should be refactord to be OnPush components. It's clear, that it has Inputs/Outputs, so tweaking it a little so changes are always immutable we could improve perf\r\n","Url":"https://github.com/angular/angular/pull/44864","RelatedDescription":"Open PR \"fix(devtools): show date type property value in preview\" (#44864)"},{"Id":"1116630667","IsPullRequest":true,"CreatedAt":"2022-01-27T19:44:06","Actor":"mgechev","Number":"44861","RawContent":null,"Title":"docs: enable the survey banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44861","RelatedDescription":"Closed or merged PR \"docs: enable the survey banner\" (#44861)"},{"Id":"1116638351","IsPullRequest":true,"CreatedAt":"2022-01-27T19:05:06","Actor":"JimMorrison723","Number":"44863","RawContent":null,"Title":"devtools: Fix highlighter content","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: Devtools is now part of the angular monorepo, guidelines are now reflect these changes\r\n\r\n\r\n## What is the current behavior?\r\n\r\nHighlight overlay content is not cleard correctly, and the more element we hover over the bigger the overlay content will be (see the original PR screenshots)\r\n\r\n## What is the new behavior?\r\n\r\nWe correctly empty the overlay content (see the original PR screenshots).\r\n\r\nAlso updated the repo documentations to reflect it is possible now to contribute to the devtools.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n\r\nThis is a follow-up PR that i opened in the old repo: https://github.com/rangle/angular-devtools/pull/977","Url":"https://github.com/angular/angular/pull/44863","RelatedDescription":"Open PR \"devtools: Fix highlighter content\" (#44863)"},{"Id":"1116635694","IsPullRequest":true,"CreatedAt":"2022-01-27T19:01:48","Actor":"JoostK","Number":"44862","RawContent":null,"Title":"fix(compiler-cli): nullish coalescing check fixes","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/44862","RelatedDescription":"Open PR \"fix(compiler-cli): nullish coalescing check fixes\" (#44862)"},{"Id":"1116384813","IsPullRequest":false,"CreatedAt":"2022-01-27T17:04:42","Actor":"ChazUK","Number":"44860","RawContent":null,"Title":"RouterLink to support External Links","State":"closed","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\nrouter\n\n### Description\n\nThe web is made up of a collection of links. These links maybe be from page to page within a single website or they may direct the user to an external website or resource. Links are the reason the web is called the web, interconnected websites referring to each other.\r\n\r\nCurrently the Angular Router only handles navigation between internal links within it's own configured route object. But as is the nature of the web, sometimes it is required to navigate away from the current domain to another. The proposed solution for this is to create a community component to handle internal and external links, but this then takes away some fundamental accessibility features of anchor links, or makes it overly cumbersome to retroactively support all those features.\r\n\r\nWhen developing an angular site and compiling templates with hard coded links this is not a problem as you can pick and choose where to use standard anchors and other enhanced with the `routerLink` directive. But when you start digging into the realm of templated being populated with dynamic data either from API's or provided by Content Management Systems it is not possible to tell if the link injected into the component is internal or external.\r\n\r\n@atscott provided a [rudimentary example](https://stackblitz.com/edit/angular-ivy-anylink?file=src/app/any-link.ts), but as mentioned above there is no passing of the (currently) 8 dedicated anchor attributes (bar the href), nor the multitude of global attributes that can also be assigned to an anchor element. This method of creating a new component adds extra DOM bloat (why reinvent HTML elements that already exist), removes key features including accessibility features, and creates a disconnect between the host element `<any-link>` and the true anchor element within.\r\n\r\nOther current solutions include using an `<ng-template>` if statement in components that require internal and external links, which can become very unmanageable over time and does not reflect DRY coding standards.\r\nAnother is to recreate the [`RouterLinkWithHref`](https://github.com/angular/angular/blob/master/packages/router/src/directives/router_link.ts#L269-L437) directive as it cannot be successfully extended and replaced, which could then become outdated with new versions of Angular and also changes the directive selector to something custom which could confuse future developers on the project (granted this should be documented in the project).\r\n\r\nIn React it would be easy to create a custom component that can switch between rendering a React Router `<Link>` or an `<a>` element, using Fragments to not add extra DOM elements, and easily pass all props to it's children. There is no equivalent paradigm in Angular so another solution would have to be proposed.\r\n\r\nThis is a common feature which has been requested multiple times during Angular's life, that I have not seen an elegant solution for. I think there is a strong case for it to be handled natively within Angular, if the directive can not be extended and overriden.\n\n### Proposed solution\n\nAlthough this is [very badly written and rushed](https://gist.github.com/ChazUK/84014217b8e33b1af50f3706197fe65e#file-my-router-link-directive-ts-L102-L150), it is possible to combine the `commands` and use `new URL()` to see if the string is able to be converted into a URL and then checking the origin to the current locations origin to detect if it is an external link.\r\n\r\nThe `createUrlTree` method can then be bypassed and the href updated with a standard string, and the click event stopped before it hits the `locationStrategy` service to route via the Angular Router.\n\n### Alternatives considered\n\nI haven't dug too far into on my initial discovery phase, but this could be part of the `createUrlTree` method, looking for protocols and hostnames in the supplied commands and then matching origins to then determine if the link is external or not. This would then allow queryParams and fragments to be handled in an \"Angular\" way using the appropriate directive inputs.","Url":"https://github.com/angular/angular/issues/44860","RelatedDescription":"Closed issue \"RouterLink to support External Links\" (#44860)"},{"Id":"1116304216","IsPullRequest":false,"CreatedAt":"2022-01-27T14:44:07","Actor":"wupaz","Number":"44859","RawContent":null,"Title":"Wrong warning : ng8102","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWrong warning in this case \r\n\r\nExemple : \r\nwarning NG8102: The left side of this nullish coalescing operation does not include 'null' or 'undefined' in its type, therefore the '??' operator can be safely removed.\r\n\r\n<td mat-cell *matCellDef=\"let element\"> {{element.CurrentLock?.Clinician?.Label ?? '--'}} </td>\r\n\r\nIn this case CurrentLock and Clinician could be null \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.2.0\r\nNode: 14.18.3\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\nAngular: 13.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, localize, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.0\r\n@angular-devkit/build-angular   13.2.0\r\n@angular-devkit/core            13.2.0\r\n@angular-devkit/schematics      13.2.0\r\n@schematics/angular             13.2.0\r\nrxjs                            6.6.7\r\ntypescript                      4.5.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44859","RelatedDescription":"Open issue \"Wrong warning : ng8102\" (#44859)"},{"Id":"1116267629","IsPullRequest":true,"CreatedAt":"2022-01-27T14:15:57","Actor":"manuelkroiss","Number":"44858","RawContent":null,"Title":"Update log-update.service.ts","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nDeprecated methods `SwUpdate.available` and `SwUpdate.activated` are used in the docs.\r\n\r\nIssue Number: #43665\r\n\r\n\r\n## What is the new behavior?\r\n The new way to subscribe to version updates is included in the docs instead of the deprecated one.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44858","RelatedDescription":"Open PR \"Update log-update.service.ts\" (#44858)"},{"Id":"1115524028","IsPullRequest":false,"CreatedAt":"2022-01-27T14:12:05","Actor":"fabiohaertel","Number":"44844","RawContent":null,"Title":"router typescript error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAfter upgrading Angular app from 12.2.9 to 13.2.0\r\n\r\nTrying to build/serve the app gives a typescript validation error.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError: node_modules/@angular/router/router.d.ts:652:6 - error TS1023: An index signature parameter type must be either 'string' or 'number'.\r\n\r\n652     [key: string | symbol]: any;\r\n         ~~~\r\n\r\n\r\nError: node_modules/@angular/router/router.d.ts:1626:6 - error TS1023: An index signature parameter type must be either 'string' or 'number'.\r\n\r\n1626     [key: string | symbol]: any;\r\n          ~~~\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.1.4\r\nNode: 16.12.0\r\nPackage Manager: npm 8.1.0\r\nOS: win32 x64\r\n\r\nAngular: 13.2.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1202.15\r\n@angular-devkit/build-angular     13.1.4\r\n@angular-devkit/build-optimizer   0.1202.15\r\n@angular-devkit/core              12.2.9\r\n@angular-devkit/schematics        12.2.9\r\n@angular/cli                      13.1.4\r\n@schematics/angular               12.2.9\r\nrxjs                              6.6.7\r\ntypescript                        4.5.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44844","RelatedDescription":"Closed issue \"router typescript error\" (#44844)"},{"Id":"1116185828","IsPullRequest":true,"CreatedAt":"2022-01-27T13:17:41","Actor":"devversion","Number":"44856","RawContent":null,"Title":"build: drop dev dependencies in nested zone.js `package.json`","State":"closed","Body":"This commit removes the `devDependencies` field in the `package.json` for `zone.js`.\r\nThis `package.json` file is purely used as NPM entry for the `zone.js` package when\r\nbuilt as release artifact.\r\n\r\nThe dev dependencies are a leftover from when `zone.js` was in its own repositories.\r\n\r\nThe removal of the `devDependencies` will help reducing the reviewers\r\ninvolved when renovate bumps versions (sometimes also dev dependencies\r\nof the `zone.js` package json file).\r\n","Url":"https://github.com/angular/angular/pull/44856","RelatedDescription":"Closed or merged PR \"build: drop dev dependencies in nested zone.js `package.json`\" (#44856)"},{"Id":"1116198161","IsPullRequest":true,"CreatedAt":"2022-01-27T13:12:57","Actor":"alan-agius4","Number":"44857","RawContent":null,"Title":"refactor(migrations): remove old migrations","State":"open","Body":"When using `ng update` users cannot update multiple major versions at the same time. Therefore migrations that are not targeting version 14 cannot be run and therefore we are removing them.\r\n","Url":"https://github.com/angular/angular/pull/44857","RelatedDescription":"Open PR \"refactor(migrations): remove old migrations\" (#44857)"},{"Id":"1116163669","IsPullRequest":true,"CreatedAt":"2022-01-27T12:39:38","Actor":"renovate[bot]","Number":"44855","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.10.0` -> `5.10.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.10.0/5.10.1) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.10.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.10.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.10.1/compatibility-slim/5.10.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.10.1/confidence-slim/5.10.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.10.0` -> `5.10.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.10.0/5.10.1) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.10.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.10.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.10.1/compatibility-slim/5.10.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.10.1/confidence-slim/5.10.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [browser-sync](https://browsersync.io/) ([source](https://togithub.com/BrowserSync/browser-sync)) | [`2.26.13` -> `2.27.7`](https://renovatebot.com/diffs/npm/browser-sync/2.26.13/2.27.7) | [![age](https://badges.renovateapi.com/packages/npm/browser-sync/2.27.7/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/browser-sync/2.27.7/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/browser-sync/2.27.7/compatibility-slim/2.26.13)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/browser-sync/2.27.7/confidence-slim/2.26.13)](https://docs.renovatebot.com/merge-confidence/) |\n| [io_bazel_rules_sass](https://togithub.com/bazelbuild/rules_sass) | [`1.41.0` -> `1.49.0`](https://renovatebot.com/diffs/npm/io_bazel_rules_sass/1.41.0/1.49.0) | [![age](https://badges.renovateapi.com/packages/github-tags/io_bazel_rules_sass/1.49.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/io_bazel_rules_sass/1.49.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/io_bazel_rules_sass/1.49.0/compatibility-slim/1.41.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/io_bazel_rules_sass/1.49.0/confidence-slim/1.41.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | [`~2.65.0` -> `~2.66.0`](https://renovatebot.com/diffs/npm/rollup/2.65.0/2.66.1) | [![age](https://badges.renovateapi.com/packages/npm/rollup/2.66.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/rollup/2.66.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/rollup/2.66.1/compatibility-slim/2.65.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/rollup/2.66.1/confidence-slim/2.65.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.10.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5101-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5100v5101-2022-01-24)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.10.0...v5.10.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.10.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5101-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5100v5101-2022-01-24)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.10.0...v5.10.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>BrowserSync/browser-sync</summary>\n\n### [`v2.27.7`](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.6...v2.27.7)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.6...v2.27.7)\n\n### [`v2.27.6`](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.5...v2.27.6)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.5...v2.27.6)\n\n### [`v2.27.5`](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.4...v2.27.5)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.4...v2.27.5)\n\n### [`v2.27.4`](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.3...v2.27.4)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.3...v2.27.4)\n\n### [`v2.27.3`](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.1...v2.27.3)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.27.1...v2.27.3)\n\n### [`v2.27.1`](https://togithub.com/BrowserSync/browser-sync/releases/v2.27.1)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.26.14...v2.27.1)\n\nThis release adds a feature to address https://github.com/BrowserSync/browser-sync/issues/1882\n\nSometimes you don't want Browsersync to auto-inject it's connection snippet into your HTML - now you can disable it globally via either a CLI param or the new `snippet` option :)\n\n```shell\nbrowser-sync . --no-snippet\n```\n\nor in any Browsersync configuration\n\n```js\nconst config = {\n  snippet: false,\n};\n```\n\nthe original request was related to Eleventy usage, so here's how that would look\n\n```js\neleventyConfig.setBrowserSyncConfig({\n  snippet: false,\n});\n```\n\n### [`v2.26.14`](https://togithub.com/BrowserSync/browser-sync/releases/v2.26.14)\n\n[Compare Source](https://togithub.com/BrowserSync/browser-sync/compare/v2.26.13...v2.26.14)\n\nThis is a maintenance release to address 2 security related issues (socket.io & axios)\n\nHappy Browsersync'in :)\n\n</details>\n\n<details>\n<summary>bazelbuild/rules_sass</summary>\n\n### [`v1.49.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.48.0...1.49.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.48.0...1.49.0)\n\n### [`v1.48.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.47.0...1.48.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.47.0...1.48.0)\n\n### [`v1.47.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.46.0...1.47.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.46.0...1.47.0)\n\n### [`v1.46.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.45.2...1.46.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.45.2...1.46.0)\n\n### [`v1.45.2`](https://togithub.com/bazelbuild/rules_sass/compare/1.45.1...1.45.2)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.45.1...1.45.2)\n\n### [`v1.45.1`](https://togithub.com/bazelbuild/rules_sass/compare/1.45.0...1.45.1)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.45.0...1.45.1)\n\n### [`v1.45.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.44.0...1.45.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.44.0...1.45.0)\n\n### [`v1.44.0`](https://togithub.com/bazelbuild/rules_sass/compare/1.43.5...1.44.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.43.5...1.44.0)\n\n### [`v1.43.5`](https://togithub.com/bazelbuild/rules_sass/compare/1.41.1...1.43.5)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.41.1...1.43.5)\n\n### [`v1.41.1`](https://togithub.com/bazelbuild/rules_sass/compare/1.41.0...1.41.1)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_sass/compare/1.41.0...1.41.1)\n\n</details>\n\n<details>\n<summary>rollup/rollup</summary>\n\n### [`v2.66.1`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#&#8203;2661)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v2.66.0...v2.66.1)\n\n*2022-01-25*\n\n##### Bug Fixes\n\n-   Only warn for conflicting names in namespace reexports if it actually causes problems ([#&#8203;4363](https://togithub.com/rollup/rollup/issues/4363))\n-   Only allow explicit exports or reexports as synthetic namespaces and hide them from namespace reexports ([#&#8203;4364](https://togithub.com/rollup/rollup/issues/4364))\n\n##### Pull Requests\n\n-   [#&#8203;4362](https://togithub.com/rollup/rollup/pull/4362): refactor: convert exportsByName object to map ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;4363](https://togithub.com/rollup/rollup/pull/4363): Do not warn unnecessarily for namespace conflicts ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;4364](https://togithub.com/rollup/rollup/pull/4364): Do not expose synthetic namespace export in entries and namespaces ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n### [`v2.66.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#&#8203;2660)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v2.65.0...v2.66.0)\n\n*2022-01-22*\n\n##### Features\n\n-   Note if a module has a default export in ModuleInfo to allow writing better proxy modules ([#&#8203;4356](https://togithub.com/rollup/rollup/issues/4356))\n-   Add option to wait until all imported ids have been resolved when awaiting `this.load` ([#&#8203;4358](https://togithub.com/rollup/rollup/issues/4358))\n\n##### Pull Requests\n\n-   [#&#8203;4356](https://togithub.com/rollup/rollup/pull/4356): Add hasDefaultExport to ModuleInfo ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;4358](https://togithub.com/rollup/rollup/pull/4358): Add \"resolveDependencies\" option to \"this.load\" ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 1am on Thursday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/44855","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#44855)"},{"Id":"1116148154","IsPullRequest":true,"CreatedAt":"2022-01-27T12:23:55","Actor":"maartentibau","Number":"44853","RawContent":null,"Title":"fix(docs-infra): typo in update guide","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44853","RelatedDescription":"Open PR \"fix(docs-infra): typo in update guide\" (#44853)"},{"Id":"1116138408","IsPullRequest":false,"CreatedAt":"2022-01-27T12:13:53","Actor":"SadiinsoSnowfall","Number":"44852","RawContent":null,"Title":"Allow bigint literals in templates","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler\n\n### Description\n\nCurrently, templates does not seems to support bigint literals.\r\nBecause of that, the following code does not compiles:\r\n```html\r\n<!-- Argument of type 'number' is not assignable to parameter of type 'bigint'. -->\r\n<button (click)=\"onClick(55n)\"></button>\r\n```\r\n```ts\r\nonClick(v: bigint) {\r\n    console.log(\"clicked %o\", v);\r\n}\r\n```\r\nThe only way to get this to work it to either\r\n* re-export the `BigInt` function from the component code\r\n* use a variable defined in the component code\r\n```html\r\n<button (click)=\"onClick(BigInt(55))\"></button>\r\n<button (click)=\"onClick(aBigInt)\"></button>\r\n```\r\n```ts\r\nBigInt = BigInt;\r\naBigInt = 55n:\r\n\r\nonClick(v: bigint) {\r\n    console.log(\"clicked %o\", v);\r\n}\r\n```\n\n### Proposed solution\n\nAllow bigint literals (ending with `n`) in the templates and treat them as `bigint` not `number`.\n\n### Alternatives considered\n\nChange nothing.","Url":"https://github.com/angular/angular/issues/44852","RelatedDescription":"Open issue \"Allow bigint literals in templates\" (#44852)"},{"Id":"1115932022","IsPullRequest":true,"CreatedAt":"2022-01-27T08:47:06","Actor":"fru2","Number":"44851","RawContent":null,"Title":"fix(docs-infra): content overflow in mobile","State":"open","Body":"When reading the docs page on mobile, some page tend to scroll in horizontal direction quite a lot which is unpleasant.\r\n\r\nFixes #44850\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nhttps://github.com/angular/angular/issues/44850\r\n\r\nIssue Number: #44850 \r\n\r\n\r\n## What is the new behavior?\r\nPage contents in mobile browser will not overflow in horizontal direction and table(s) can be scrolled in horizontal direction. \r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44851","RelatedDescription":"Open PR \"fix(docs-infra): content overflow in mobile\" (#44851)"},{"Id":"1115613323","IsPullRequest":false,"CreatedAt":"2022-01-27T08:32:54","Actor":"bonnybros","Number":"44846","RawContent":null,"Title":"Can't import the named export 'BehaviorSubject' ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhile trying to use the package angular-in-memory-web-api i am getting the following error. \r\n\r\n./node_modules/angular-in-memory-web-api/fesm2015/angular-in-memory-web-api.mjs 631:38-53\r\nCan't import the named export 'BehaviorSubject' from non EcmaScript module (only default export is available)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNamespace '\"/Users/~/angular-tour-of-heroes/node_modules/@angular/core/core\"' has no exported member 'ɵɵFactoryDeclaration'.\r\n\r\nModule '\"@angular/common\"' has no exported member 'XhrFactory'.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 8.0.6\r\nNode: 14.15.4\r\nOS: darwin x64\r\nAngular: 8.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.800.6\r\n@angular-devkit/build-angular     0.800.6\r\n@angular-devkit/build-optimizer   0.800.6\r\n@angular-devkit/build-webpack     0.800.6\r\n@angular-devkit/core              8.0.6\r\n@angular-devkit/schematics        8.0.6\r\n@angular/cli                      8.0.6\r\n@ngtools/webpack                  8.0.6\r\n@schematics/angular               8.0.6\r\n@schematics/update                0.800.6\r\nrxjs                              6.4.0\r\ntypescript                        2.9.2\r\nwebpack                           4.30.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44846","RelatedDescription":"Closed issue \"Can't import the named export 'BehaviorSubject' \" (#44846)"},{"Id":"1115912119","IsPullRequest":false,"CreatedAt":"2022-01-27T08:24:13","Actor":"fru2","Number":"44850","RawContent":null,"Title":"Horizontal Content overflow in mobile browsers","State":"open","Body":"### Description\n\nSome pages in mobile device can be scrolled horizontally if they contain a wide table in it. \n\n### What is the affected URL?\n\nhttps://angular.io/guide/workspace-config, https://angular.io/guide/releases\n\n### Please provide the steps to reproduce the issue\n\nPage like https://angular.io/guide/workspace-config (and many more) when opened in mobile browser.\n\n### Please provide the expected behavior vs the actual behavior you encountered\n\nOnly the table(s) need to be scrolled horizontally in order to fit all columns rather than allowing the whole page to be scrolled in horizontal direction.\n\n### Please provide a screenshot if possible\n\n<img width=\"435\" alt=\"image\" src=\"https://user-images.githubusercontent.com/27368177/151318944-77411686-0c3f-4eef-9d64-dced2036f26c.png\">\r\n\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version.\n\n_No response_","Url":"https://github.com/angular/angular/issues/44850","RelatedDescription":"Open issue \"Horizontal Content overflow in mobile browsers\" (#44850)"},{"Id":"1115751485","IsPullRequest":false,"CreatedAt":"2022-01-27T05:36:35","Actor":"evangunawan","Number":"44849","RawContent":null,"Title":"Compiling component on runtime, child component did not rendered.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello, so I have a component that renders a component from a template string on runtime.\r\n\r\nIn short, I have a compiler directive like this\r\n```ts\r\n  private createDynamicComponent(template: string) {\r\n    return Component({\r\n      selector: 'app-dyn-input',\r\n      template,\r\n    })(class {});\r\n  }\r\n\r\n  private createDynamicModule(component: Type<any>) {\r\n    return NgModule({\r\n      imports: [\r\n        // ...some imports\r\n      ],\r\n      declarations: [component],\r\n      exports: [component],\r\n    })(class {});\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // ...\r\n    const component = this.createDynamicComponent(this.compile);\r\n    const module = this.createDynamicModule(component);\r\n    this.compiler\r\n      .compileModuleAndAllComponentsAsync(module)\r\n      .then((moduleWithFactories: ModuleWithComponentFactories<any>) => {\r\n        const compFactory = moduleWithFactories.componentFactories.find(\r\n          (x) => x.componentType === component\r\n        );\r\n\r\n        this.compRef = this.vcRef.createComponent(compFactory);\r\n        this.updateProperties();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n```\r\n\r\nAnd I have a template string somehow like this \r\n```ts\r\npublic parsedFormBody = `<p>Hello world <app-my-component [attr]=\"1\" formControlName=\"x\"></app-my-component> </p>`\r\n```\r\n\r\nwhere I compile the template string like\r\n```\r\n  <ng-template *compile=\"parsedFormBody\"> </ng-template>\r\n```\r\n\r\nOn dev serving, all is normal and all component is present, with running functionalities.\r\nThe problem is on production (with optimization: true),\r\nthe <app-my-component> component is not rendered and does not have content (I checked on chrome devtools)\r\nit shown like this on the devtools\r\n```\r\n<app-my-component formcontrolname=\"p_name\"></app-my-component>\r\n```\r\nit shown without _ngcontent attribute like other normal component.\r\n\r\nAny help will be appreciated.\r\nThank you very much!\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 11.0.7\r\nNode: 14.17.6\r\nOS: win32 x64\r\n\r\nAngular: 11.0.9\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1100.7 (cli-only)\r\n@angular-devkit/build-angular      0.1100.7\r\n@angular-devkit/core               11.0.7\r\n@angular-devkit/schematics         11.0.7\r\n@angular/cdk                       11.2.13\r\n@angular/cli                       11.0.7\r\n@angular/fire                      6.1.5\r\n@angular/material                  11.2.13\r\n@angular/material-moment-adapter   11.2.13\r\n@angular/youtube-player            12.2.5\r\n@schematics/angular                11.0.7\r\n@schematics/update                 0.1100.7\r\nrxjs                               6.6.7\r\ntypescript                         4.0.7\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44849","RelatedDescription":"Closed issue \"Compiling component on runtime, child component did not rendered.\" (#44849)"},{"Id":"1115696379","IsPullRequest":true,"CreatedAt":"2022-01-27T02:24:11","Actor":"dylhunn","Number":"44848","RawContent":null,"Title":"feat(forms): support negative indices in FormArray methods.","State":"open","Body":"This new feature allows negative indices to wrap around from the back, just like ES2021 `Array.at`. In particular, the following methods accept negative indices, and behave like corresponding Array methods:\r\n* `FormArray.at(index)`: behaves the same as `Array.at(index)`\r\n* `FormArray.insert(index, control)`: behaves the same as `Array.splice(index, 0, control)`\r\n* `FormArray.setControl(index, control)`: behaves the same as `Array.splice(index, 1, control)`\r\n* `FormArray.removeAt(index, control)`: behaves the same as `Array.splice(index, 1)`\r\n\r\nPrevious work in #44746 and #44631 (by @amitbeck).\r\n\r\nIssue #44642.\r\n\r\nCo-authored-by: Amit Beckenstein <amitbeck@gmail.com>\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\n`FormArray` has various unpredictable behaviors with negative indices:\r\n\r\n- `at` returns undefined\r\n- `insert` works correctly\r\n- `removeAt` works in trivial cases, but fails to call `_registerOnCollectionChange`\r\n- `setControl` performs a nonsense transformation\r\n\r\n\r\n## What is the new behavior?\r\n\r\n`FormArray` accepts negative indices, and treats them according to comparable basic `Array` methods. \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nYes, this is technically a breaking change. However, the current behavior of `FormArray` with negative indices is not reliable (e.g. `setControl` produces garbage results), so I'd be surprised if many people are relying on it. I will run a TGP in google3 to determine the extent of breakage.\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44848","RelatedDescription":"Open PR \"feat(forms): support negative indices in FormArray methods.\" (#44848)"},{"Id":"1115625327","IsPullRequest":true,"CreatedAt":"2022-01-27T00:10:14","Actor":"AndrewKushnir","Number":"44847","RawContent":null,"Title":"Bump version to \"v12.2.16\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44847","RelatedDescription":"Closed or merged PR \"Bump version to \"v12.2.16\" with changelog.\" (#44847)"},{"Id":"1115563825","IsPullRequest":true,"CreatedAt":"2022-01-26T22:33:53","Actor":"AleksanderBodurri","Number":"44845","RawContent":null,"Title":"ci: reenable CI checks for commit message validation and rebasing","State":"closed","Body":"These checks were temporarily disabled in order to support the angular devtools migration to the angular/angular repo. Now that devtools was merged, we can safely enable these checks again.","Url":"https://github.com/angular/angular/pull/44845","RelatedDescription":"Closed or merged PR \"ci: reenable CI checks for commit message validation and rebasing\" (#44845)"},{"Id":"1115470941","IsPullRequest":true,"CreatedAt":"2022-01-26T20:57:51","Actor":"AndrewKushnir","Number":"44843","RawContent":null,"Title":"[12.2.x] ci: bump the cache key version for components unit tests CI job","State":"closed","Body":"Yarn 1.x sometimes does not clean up unneeded nested node modules, and this breaks some strict assumption in the Bazel NodeJS yarn install. This commit bumps the version in the cache key to make sure there is no stale cache that is used in CI jobs (that is causing issues with that CI job).\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n- [x] CI related changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44843","RelatedDescription":"Closed or merged PR \"[12.2.x] ci: bump the cache key version for components unit tests CI job\" (#44843)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1116954669","IsPullRequest":false,"CreatedAt":"2022-01-28T03:11:08","Actor":"joeedh","Number":"22592","RawContent":null,"Title":"The Registration Pattern","State":"open","Body":"There's a common pattern I do a lot in my code:\r\n\r\n`\r\nexport const Classes = [];\r\n\r\nclass BaseClass {\r\n  static register(childClass) {\r\n    Classes.push(childClass);\r\n  }\r\n}\r\n\r\nclass Child extends BaseClass {\r\n}\r\nBaseClass.register(Child);\r\n`\r\n\r\nAngular's webpack setup (at least Angular 10) prunes child classes that use this pattern.\r\nI don't understand why; shouldn't `BaseClass.register(Child)` be enough to keep them around?\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22592","RelatedDescription":"Open issue \"The Registration Pattern\" (#22592)"},{"Id":"1116847142","IsPullRequest":false,"CreatedAt":"2022-01-27T23:38:15","Actor":"BenjaminHofstetter","Number":"22591","RawContent":null,"Title":"Polyfill file for webworker","State":"open","Body":"\r\n\r\n# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ x] build\r\n- [ x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\nThe polyfille file is not included in the webworker build. At the moment i get an error in my webworker. \r\n`Uncaught (in promise) ReferenceError: global is not defined``\r\n\r\n### Describe the solution you'd like\r\n\r\nI would like to have a polyfill.ts for my webworker and add the following content. \r\n\r\n```typescript\r\n\r\n(globalThis as any).process = require('process/browser');\r\n\r\n(globalThis as any).global.Buffer =\r\n  (globalThis as any).global.Buffer || require('buffer').Buffer;\r\n\r\n(globalThis as any).global.util =\r\n  (globalThis as any).global.util || require('util').util;\r\n\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nAt the moment i don't have a workaround. I checked out several webpack options ","Url":"https://github.com/angular/angular-cli/issues/22591","RelatedDescription":"Open issue \"Polyfill file for webworker\" (#22591)"},{"Id":"1116831304","IsPullRequest":false,"CreatedAt":"2022-01-27T23:11:21","Actor":"allstar-app[bot]","Number":"22590","RawContent":null,"Title":"Security Policy violation Outside Collaborators","State":"open","Body":"Allstar has detected that this repository’s Outside Collaborators security policy is out of compliance. Status:\nFound 1 outside collaborators with push access.\nThis policy requires all users with this access to be members of the organisation. That way you can easily audit who has access to your repo, and if an account is compromised it can quickly be denied access to organization resources. To fix this you should either remove the user from repository-based access, or add them to the organization. \n\n* Remove the user from the repository-based access. From the main page of the repository, go to Settings -> Manage Access. \n(For more information, see https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-user-account/managing-access-to-your-personal-repositories/removing-a-collaborator-from-a-personal-repository)\n\nOR\n\n* Invite the user to join your organisation. Click your profile photo and choose “Your Organization” → choose the org name → “People” → “Invite Member.” (For more information, see https://docs.github.com/en/organizations/managing-membership-in-your-organization/inviting-users-to-join-your-organization)\n\nIf you don't see the Settings tab you probably don't have administrative access. Reach out to the administrators of the organisation to fix this issue.\n\n\nThis issue will auto resolve when the policy is in compliance.\n\nIssue created by Allstar. See https://github.com/ossf/allstar/ for more information. For questions specific to the repository, please contact the owner or maintainer.","Url":"https://github.com/angular/angular-cli/issues/22590","RelatedDescription":"Open issue \"Security Policy violation Outside Collaborators\" (#22590)"},{"Id":"1116041114","IsPullRequest":true,"CreatedAt":"2022-01-27T19:08:41","Actor":"alan-agius4","Number":"22586","RawContent":null,"Title":"build: remove extra period in build script","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22586","RelatedDescription":"Closed or merged PR \"build: remove extra period in build script\" (#22586)"},{"Id":"1113970983","IsPullRequest":true,"CreatedAt":"2022-01-27T19:07:14","Actor":"alan-agius4","Number":"22571","RawContent":null,"Title":"     feat(@schematics/angular): update Angular dependencies to use `^` as version prefix","State":"closed","Body":"\r\n    \r\nWith this change we update Angular dependencies to use `^` instead of `~` as version prefix.\r\n    \r\nCloses #21925\r\n","Url":"https://github.com/angular/angular-cli/pull/22571","RelatedDescription":"Closed or merged PR \"     feat(@schematics/angular): update Angular dependencies to use `^` as version prefix\" (#22571)"},{"Id":"1114053281","IsPullRequest":true,"CreatedAt":"2022-01-27T19:06:51","Actor":"alan-agius4","Number":"22572","RawContent":null,"Title":"refactor(@angular/cli): remove deprecated `--all` option from `ng update`","State":"closed","Body":"BREAKING CHANGE:\r\n\r\n`--all` option from `ng update` has been removed without replacement. To update packages which don’t provide `ng  update` capabilities in your workspace `package.json` use `npm update`, `yarn upgrade-interactive` or `yarn upgrade` instead.","Url":"https://github.com/angular/angular-cli/pull/22572","RelatedDescription":"Closed or merged PR \"refactor(@angular/cli): remove deprecated `--all` option from `ng update`\" (#22572)"},{"Id":"1114083807","IsPullRequest":true,"CreatedAt":"2022-01-27T19:06:27","Actor":"alan-agius4","Number":"22573","RawContent":null,"Title":"refactor(@ngtools/webpack) remove deprecated ivy namespace","State":"closed","Body":"BREAKING CHANGE:\r\n\r\n`ivy` namespace has been removed from the public API.\r\n\r\n- `ivy.AngularWebpackPlugin` -> `AngularWebpackPlugin`\r\n- `ivy.AngularPluginOptions` -> `AngularPluginOptions`","Url":"https://github.com/angular/angular-cli/pull/22573","RelatedDescription":"Closed or merged PR \"refactor(@ngtools/webpack) remove deprecated ivy namespace\" (#22573)"},{"Id":"1114094377","IsPullRequest":true,"CreatedAt":"2022-01-27T19:06:01","Actor":"alan-agius4","Number":"22574","RawContent":null,"Title":"refactor: remove build-optimizer from repo","State":"closed","Body":"This package is deprecated and should not be used. It has always been experimental. All the relevant functionality has been moved into `@angular-devkit/build-angular`.","Url":"https://github.com/angular/angular-cli/pull/22574","RelatedDescription":"Closed or merged PR \"refactor: remove build-optimizer from repo\" (#22574)"},{"Id":"1115156581","IsPullRequest":true,"CreatedAt":"2022-01-27T19:05:36","Actor":"alan-agius4","Number":"22577","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): clean find tests logic","State":"closed","Body":"With this change we clean up and reduce the complexity of the `findTests` logic that handles the `include` option in the karma builder.","Url":"https://github.com/angular/angular-cli/pull/22577","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): clean find tests logic\" (#22577)"},{"Id":"1115407429","IsPullRequest":true,"CreatedAt":"2022-01-27T19:05:01","Actor":"josephperrott","Number":"22579","RawContent":null,"Title":"release: update version to 14.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22579","RelatedDescription":"Closed or merged PR \"release: update version to 14.0.0-next.0\" (#22579)"},{"Id":"1116306536","IsPullRequest":false,"CreatedAt":"2022-01-27T16:01:14","Actor":"nitoloz","Number":"22588","RawContent":null,"Title":"angularv13 breaks build after bundling dependency","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nDescribed functionality worked fine in angular v12\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n## 🔬 Minimal Reproduction\r\n- Create angular application with `angular-cli`\r\n- Add `cal-heatmap` package to it (install it with yarn or npm)\r\n- Go to `app.component.ts` and add `import * as CalHeatMapImpl from \"cal-heatmap\";` to import `cal-heatmap` in application\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nError: Uncaught (in promise): TypeError: Cannot read properties of undefined (reading 'document')\r\nTypeError: Cannot read properties of undefined (reading 'document')\r\n    at d3.js:8:1\r\n    at Object.97718 (d3.js:9554:2)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at Object.72510 (cal-heatmap.min.js:8:429)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at Module.82265 (analytics-toolbar.component.ts:9:39)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at Module.36395 (base-calendar-heatmap.component.ts:30:42)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at Module.19697 (analytics-filters-filter.pipe.ts:6:40)\r\n    at resolvePromise (zone.js:1213:1)\r\n    at resolvePromise (zone.js:1167:1)\r\n    at zone.js:1279:1\r\n    at ZoneDelegate.invokeTask (zone.js:406:1)\r\n    at Object.onInvokeTask (core.mjs:25444:33)\r\n    at ZoneDelegate.invokeTask (zone.js:405:1)\r\n    at Zone.runTask (zone.js:178:1)\r\n    at drainMicroTaskQueue (zone.js:582:1)\r\n</code></pre>\r\n![image](https://user-images.githubusercontent.com/7154361/151380148-8690c6fb-fc51-48ae-9a1b-b211d253ed74.png)\r\n\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.1.4\r\nNode: 16.13.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin arm64\r\n\r\nAngular: 13.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.4\r\n@angular-devkit/build-angular   13.1.4\r\n@angular-devkit/core            13.1.4\r\n@angular-devkit/schematics      13.1.4\r\n@angular/cli                    13.1.4\r\n@schematics/angular             13.1.4\r\nrxjs                            7.5.2\r\ntypescript                      4.5.5\r\n</code></pre>\r\n\r\ntsConfig\r\n<pre><code>\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"sourceMap\": true,\r\n    \"declaration\": false,\r\n    \"skipLibCheck\": true,\r\n    \"moduleResolution\": \"node\",\r\n    \"experimentalDecorators\": true,\r\n    \"target\": \"es2015\",\r\n    \"module\": \"es2020\",\r\n    \"typeRoots\": [\r\n      \"node_modules/@types\"\r\n    ],\r\n    \"lib\": [\r\n      \"es2017\",\r\n      \"dom\",\r\n      \"es2018.promise\"\r\n    ],\r\n }\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nWorth noting that `cal-heatmap` is using quite old version of `d3.js v3`, but I still hope there is a way to make it work with angular v13.\r\n\r\nThe same bundle works fine with angular v12 or with v13 if I import `cal-heatmap` via CDN in `index.html`, so that it doesn't get bundled, so I suspect it's because of the bundling process.\r\nThis issue is also reported in [cal-heatmap github](https://github.com/wa0x6e/cal-heatmap/issues/274) with links to similar issues ([plotly1](https://github.com/plotly/angular-plotly.js/issues/75), [plotly2](https://github.com/plotly/angular-plotly.js/issues/89), and [SO](https://stackoverflow.com/questions/62696159/angular10-uncaught-typeerror-cannot-read-property-document-of-undefined-at)), but none of the answers there seem to be relevant.","Url":"https://github.com/angular/angular-cli/issues/22588","RelatedDescription":"Closed issue \"angularv13 breaks build after bundling dependency\" (#22588)"},{"Id":"1116327788","IsPullRequest":false,"CreatedAt":"2022-01-27T15:07:09","Actor":"MohammedAejazAhmed","Number":"22589","RawContent":null,"Title":"Error: NormalModuleFactory.beforeResolve is no longer a waterfall hook, but a bailing hook instead. Do not return the passed object, but modify it instead. Returning false will ignore the request and results in no module created. at: node_modules\\webpack\\lib\\NormalModuleFactory.js:644:11 ","State":"closed","Body":"### Context\r\nI updated my webpack to 5.0.0.\r\nI get this error in my terminal, when I try to run the build using  command \"webpack-dev-server --config (FilePath) --inline --progress --profile\".\r\n\r\n***Error: NormalModuleFactory.beforeResolve is no longer a waterfall hook, but a bailing hook instead. Do not return the passed object, but modify it instead. Returning false will ignore the request and results in no module***\r\n\r\n### Expected behaviour\r\n\r\nI want my build to run after upgrading the webpack.\r\n\r\n### software tools versions\r\n\r\nAngular CLI: 8.3.9\r\nNode: 14.17.0\r\nOS: win32 x64\r\nAngular: 5.2.11\r\n\r\n### my dep and devdep\r\n\r\n```\r\n\"dependencies\": {\r\n\t\t\"@angular/animations\": \"^5.2.0\",\r\n\t\t\"@angular/cdk\": \"^5.2.0\",\r\n\t\t\"@angular/common\": \"^5.2.0\",\r\n\t\t\"@angular/compiler\": \"^5.2.0\",\r\n\t\t\"@angular/core\": \"^5.2.0\",\r\n\t\t\"@angular/forms\": \"^5.2.0\",\r\n\t\t\"@angular/http\": \"^5.2.0\",\r\n\t\t\"@angular/material\": \"^5.2.0\",\r\n\t\t\"@angular/material-moment-adapter\": \"^5.2.0\",\r\n\t\t\"@angular/platform-browser\": \"^5.2.0\",\r\n\t\t\"@angular/platform-browser-dynamic\": \"^5.2.0\",\r\n\t\t\"@angular/router\": \"^5.2.0\",\r\n\t\t\"@microsoft/signalr\": \"^3.1.4\",\r\n\t\t\"@ngx-translate/core\": \"^9.1.1\",\r\n\t\t\"@ngx-translate/http-loader\": \"^2.0.1\",\r\n\t\t\"angular-file\": \"^0.5.4\",\r\n\t\t\"angular-mentions\": \"1.1.3\",\r\n\t\t\"color-hash\": \"^1.0.3\",\r\n\t\t\"hammerjs\": \"^2.0.8\",\r\n\t\t\"ng2-pdf-viewer\": \"5.2.3\",\r\n\t\t\"ngx-web-worker\": \"^7.0.0\",\r\n\t\t\"pusher-js\": \"^5.0.0\",\r\n\t\t\"rxjs\": \"^5.5.10\",\r\n\t\t\"zone.js\": \"0.8.19\"\r\n\t},\r\n\t\"devDependencies\": {\r\n\t\t\"@angular/cli\": \"~1.7.4\",\r\n\t\t\"@angular/compiler-cli\": \"^5.2.0\",\r\n\t\t\"@angular/language-service\": \"^5.2.0\",\r\n\t\t\"@ngtools/webpack\": \"^7.3.2\",\r\n\t\t\"@types/core-js\": \"^0.9.46\",\r\n\t\t\"@types/highcharts\": \"^5.0.34\",\r\n\t\t\"@types/jasmine\": \"2.6.0\",\r\n\t\t\"@types/jasminewd2\": \"~2.0.2\",\r\n\t\t\"@types/lodash\": \"4.14.108\",\r\n\t\t\"@types/node\": \"9.6.57\",\r\n\t\t\"@types/rx\": \"^4.1.1\",\r\n\t\t\"@types/tapable\": \"^0.2.5\",\r\n\t\t\"@types/webpack\": \"^3.8.7\",\r\n\t\t\"angular2-template-loader\": \"^0.6.2\",\r\n\t\t\"autoprefixer\": \"^9.4.9\",\r\n\t\t\"awesome-typescript-loader\": \"^5.0.0\",\r\n\t\t\"codelyzer\": \"^4.0.1\",\r\n\t\t\"compression-webpack-plugin\": \"^0.4.0\",\r\n\t\t\"concurrently\": \"^3.5.1\",\r\n\t\t\"copy-webpack-plugin\": \"^4.5.1\",\r\n\t\t\"core-js\": \"^2.4.1\",\r\n\t\t\"css-loader\": \"^0.28.11\",\r\n\t\t\"csvtojson\": \"^2.0.3\",\r\n\t\t\"enhanced-resolve\": \"^3.3.0\",\r\n\t\t\"file-loader\": \"^1.1.11\",\r\n\t\t\"highcharts\": \"^6.2.0\",\r\n\t\t\"html-loader\": \"^0.5.5\",\r\n\t\t\"html-webpack-exclude-assets-plugin\": \"0.0.7\",\r\n\t\t\"html-webpack-plugin\": \"^3.2.0\",\r\n\t\t\"jasmine\": \"^3.2.0\",\r\n\t\t\"jasmine-core\": \"~2.8.0\",\r\n\t\t\"jasmine-spec-reporter\": \"~4.2.1\",\r\n\t\t\"jquery\": \"^3.3.1\",\r\n\t\t\"json-loader\": \"^0.5.7\",\r\n\t\t\"karma\": \"^2.0.5\",\r\n\t\t\"karma-chrome-launcher\": \"~2.2.0\",\r\n\t\t\"karma-cli\": \"^1.0.1\",\r\n\t\t\"karma-coverage-istanbul-reporter\": \"^1.2.1\",\r\n\t\t\"karma-jasmine\": \"^1.1.2\",\r\n\t\t\"karma-jasmine-html-reporter\": \"^0.2.2\",\r\n\t\t\"karma-junit-reporter\": \"^1.2.0\",\r\n\t\t\"karma-scss-preprocessor\": \"^3.0.0\",\r\n\t\t\"karma-sonarqube-reporter\": \"^1.2.3\",\r\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\r\n\t\t\"karma-webpack\": \"^3.0.5\",\r\n\t\t\"lodash\": \"4.17.10\",\r\n\t\t\"mini-css-extract-plugin\": \"^0.5.0\",\r\n\t\t\"ngx-carousel\": \"^1.3.5\",\r\n\t\t\"node-sass\": \"^4.11.0\",\r\n\t\t\"optimize-css-assets-webpack-plugin\": \"^4.0.2\",\r\n\t\t\"path\": \"^0.12.7\",\r\n\t\t\"postcss-loader\": \"^2.1.5\",\r\n\t\t\"prettier\": \"^1.16.4\",\r\n\t\t\"protractor\": \"~5.1.2\",\r\n\t\t\"puppeteer-core\": \"^1.10.0\",\r\n\t\t\"raw-loader\": \"^0.5.1\",\r\n\t\t\"rimraf\": \"^2.6.2\",\r\n\t\t\"sass-loader\": \"^7.1.0\",\r\n\t\t\"source-map-loader\": \"^0.2.3\",\r\n\t\t\"style-loader\": \"^0.21.0\",\r\n\t\t\"terser-webpack-plugin\": \"^1.2.3\",\r\n\t\t\"to-string-loader\": \"^1.1.5\",\r\n\t\t\"ts-loader\": \"^4.0.0-beta.0\",\r\n\t\t\"ts-node\": \"~4.1.0\",\r\n\t\t\"tslint\": \"~5.9.1\",\r\n\t\t\"typescript\": \"~2.5.3\",\r\n\t\t\"url-loader\": \"^1.0.1\",\r\n\t\t\"webpack\": \"^4.29.5\",\r\n\t\t\"webpack-bundle-analyzer\": \"^3.3.2\",\r\n\t\t\"webpack-cli\": \"^3.2.3\",\r\n\t\t\"webpack-dev-server\": \"^3.1.14\",\r\n\t\t\"webpack-merge\": \"^4.2.1\",\r\n\t\t\"write-file-webpack-plugin\": \"^4.3.2\",\r\n\t\t\"postcss-rtl\": \"1.7.3\"\r\n\t}\r\n}\r\n\r\n```\r\nI understand that, that I am getting the error from webpack/lib/NormalModuleFactory.js after resolving the beforeResolve hook in the line where typeof result === object\r\n```\r\nthis.hooks.beforeResolve.callAsync(resolveData, (err, result) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn callback(err, {\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (result === false) {\r\n\t\t\t\treturn callback(null, {\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (typeof result === \"object\") //throws an error\r\n\t\t\t\tthrow new Error(deprecationChangedHookMessage(\"beforeResolve\"));\r\n\r\n\t\t\t//some lines of codes\r\n\r\n\t\t\t});\r\n\t\t});\r\n```\r\nI believe that I am getting an error from angular-cli, please provide me a fix","Url":"https://github.com/angular/angular-cli/issues/22589","RelatedDescription":"Closed issue \"Error: NormalModuleFactory.beforeResolve is no longer a waterfall hook, but a bailing hook instead. Do not return the passed object, but modify it instead. Returning false will ignore the request and results in no module created. at: node_modules\\webpack\\lib\\NormalModuleFactory.js:644:11 \" (#22589)"},{"Id":"1116058944","IsPullRequest":true,"CreatedAt":"2022-01-27T10:50:45","Actor":"alan-agius4","Number":"22587","RawContent":null,"Title":"docs: move developer guide into a seperate file","State":"open","Body":"Currently, the `readme.md` also contains information on how to build and test the CLI which isn't useful to most users. With this change we move this information into a seperate document.","Url":"https://github.com/angular/angular-cli/pull/22587","RelatedDescription":"Open PR \"docs: move developer guide into a seperate file\" (#22587)"},{"Id":"1115962315","IsPullRequest":true,"CreatedAt":"2022-01-27T09:18:50","Actor":"alan-agius4","Number":"22585","RawContent":null,"Title":"feat(@schematics/angular): update new and existing projects compilation target to `ES2020`","State":"open","Body":"\r\n\r\nWith this change we update the TypeScript compilation target to `ES2020` for both new and existing projects. This is because all browsers that Angular supports (https://angular.io/guide/browser-support) support `ES2020` features without the need for polyfills.","Url":"https://github.com/angular/angular-cli/pull/22585","RelatedDescription":"Open PR \"feat(@schematics/angular): update new and existing projects compilation target to `ES2020`\" (#22585)"},{"Id":"1115926828","IsPullRequest":true,"CreatedAt":"2022-01-27T08:41:07","Actor":"alan-agius4","Number":"22584","RawContent":null,"Title":"refactor(@angular/cli): remove deprecated `--prod` flag","State":"open","Body":"BREAKING CHANGE:\r\n\r\nDeprecated option `--prod` has been removed from all builders. `--configuration production` should be used instead if the default configuration of the builder is not configured to `production`.","Url":"https://github.com/angular/angular-cli/pull/22584","RelatedDescription":"Open PR \"refactor(@angular/cli): remove deprecated `--prod` flag\" (#22584)"},{"Id":"1115908192","IsPullRequest":true,"CreatedAt":"2022-01-27T08:19:48","Actor":"alan-agius4","Number":"22583","RawContent":null,"Title":"refactor(@angular-devkit/schematics): remove deprecated `analytics` property","State":"open","Body":"\r\n\r\nBREAKING CHANGE:\r\n\r\nDeprecated `analytics` property has been removed from `TypedSchematicContext` interface","Url":"https://github.com/angular/angular-cli/pull/22583","RelatedDescription":"Open PR \"refactor(@angular-devkit/schematics): remove deprecated `analytics` property\" (#22583)"},{"Id":"1115903963","IsPullRequest":true,"CreatedAt":"2022-01-27T08:14:55","Actor":"alan-agius4","Number":"22582","RawContent":null,"Title":"refactor(@angular-devkit/core): remove deprecated fs, object and array APIs","State":"open","Body":"BREAKING CHANGE:\r\n\r\nThe below APIs have been removed without replacement\r\n- `fs` namespace\r\n- `clean`\r\n- `mapObject`","Url":"https://github.com/angular/angular-cli/pull/22582","RelatedDescription":"Open PR \"refactor(@angular-devkit/core): remove deprecated fs, object and array APIs\" (#22582)"},{"Id":"1115530804","IsPullRequest":true,"CreatedAt":"2022-01-26T21:44:48","Actor":"dgp1130","Number":"22581","RawContent":null,"Title":"docs: release notes for the v13.2.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.2.x\" branch to the next branch (master).","Url":"https://github.com/angular/angular-cli/pull/22581","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.2.0 release\" (#22581)"},{"Id":"1115420968","IsPullRequest":true,"CreatedAt":"2022-01-26T21:41:04","Actor":"dgp1130","Number":"22580","RawContent":null,"Title":"Bump version to \"v13.2.0\" with changelog.","State":"closed","Body":"NOTE: This is a non-standard release since it is a minor. This PR includes manual edits to `latest-versions.ts` and peer deps on the framework to drop prerelease tags and bump the versions to `13.2.0` where appropriate.","Url":"https://github.com/angular/angular-cli/pull/22580","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.2.0\" with changelog.\" (#22580)"},{"Id":"1115185827","IsPullRequest":false,"CreatedAt":"2022-01-26T16:35:13","Actor":"satyacxloyalty","Number":"22578","RawContent":null,"Title":"build keeps running when I use \"ng serve\"","State":"closed","Body":"Hello,\r\n\r\nWhen I run \"ng serve\" it keeps running with wired characters. Any help would be appreciated.\r\n\r\n![image](https://user-images.githubusercontent.com/94636013/151199061-740dcf3c-cc07-4414-9d7c-932827bc7a10.png)\r\n","Url":"https://github.com/angular/angular-cli/issues/22578","RelatedDescription":"Closed issue \"build keeps running when I use \"ng serve\"\" (#22578)"},{"Id":"1113589753","IsPullRequest":true,"CreatedAt":"2022-01-26T11:45:56","Actor":"renovate[bot]","Number":"22569","RawContent":null,"Title":"build: update angular","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `3f5430a` -> `0a71023` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `2ff7fc8` -> `f6be344` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `de86937` -> `d476c5b` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `8634d00` -> `a7366a7` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `07127af` -> `dd90fb7` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `80e2347` -> `9eea900` |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `3a9e4af` -> `2024033` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `0e88be9` -> `ba12515` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `ba8fae4` -> `dbc2805` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `caf5a8c` -> `5ac5d14` |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | `c384727` -> `cede930` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c3f14dc` -> `43c32d9` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `0ea780a` -> `415998e` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `56a83e8` -> `2065be6` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `87e6194` -> `0dd4cbf` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `51000e0` -> `cf438ce` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `3704348` -> `4f17012` |\n| angular/dev-infra | action | digest | `87bb3f4` -> `3548719` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22569","RelatedDescription":"Closed or merged PR \"build: update angular\" (#22569)"},{"Id":"1114782876","IsPullRequest":true,"CreatedAt":"2022-01-26T09:44:31","Actor":"renovate[bot]","Number":"22576","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [esbuild](https://togithub.com/evanw/esbuild) | [`0.14.13` -> `0.14.14`](https://renovatebot.com/diffs/npm/esbuild/0.14.13/0.14.14) | [![age](https://badges.renovateapi.com/packages/npm/esbuild/0.14.14/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild/0.14.14/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild/0.14.14/compatibility-slim/0.14.13)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild/0.14.14/confidence-slim/0.14.13)](https://docs.renovatebot.com/merge-confidence/) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | [`0.14.13` -> `0.14.14`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.14.13/0.14.14) | [![age](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.14/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.14/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.14/compatibility-slim/0.14.13)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/esbuild-wasm/0.14.14/confidence-slim/0.14.13)](https://docs.renovatebot.com/merge-confidence/) |\n| [pacote](https://togithub.com/npm/pacote) | [`12.0.2` -> `12.0.3`](https://renovatebot.com/diffs/npm/pacote/12.0.2/12.0.3) | [![age](https://badges.renovateapi.com/packages/npm/pacote/12.0.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/pacote/12.0.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/pacote/12.0.3/compatibility-slim/12.0.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/pacote/12.0.3/confidence-slim/12.0.2)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.14.14`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01414)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.14.13...v0.14.14)\n\n-   Fix bug with filename hashes and the `file` loader ([#&#8203;1957](https://togithub.com/evanw/esbuild/issues/1957))\n\n    This release fixes a bug where if a file name template has the `[hash]` placeholder (either `--entry-names=` or `--chunk-names=`), the hash that esbuild generates didn't include the content of the string generated by the `file` loader. Importing a file with the `file` loader causes the imported file to be copied to the output directory and causes the imported value to be the relative path from the output JS file to that copied file. This bug meant that if the `--asset-names=` setting also contained `[hash]` and the file loaded with the `file` loader was changed, the hash in the copied file name would change but the hash of the JS file would not change, which could potentially result in a stale JS file being loaded. Now the hash of the JS file will be changed too which fixes the reload issue.\n\n-   Prefer the `import` condition for entry points ([#&#8203;1956](https://togithub.com/evanw/esbuild/issues/1956))\n\n    The `exports` field in `package.json` maps package subpaths to file paths. The mapping can be conditional, which lets it vary in different situations. For example, you can have an `import` condition that applies when the subpath originated from a JS import statement, and a `require` condition that applies when the subpath originated from a JS require call. These are supposed to be mutually exclusive according to the specification: https://nodejs.org/api/packages.html#conditional-exports.\n\n    However, there's a situation with esbuild where it's not immediately obvious which one should be applied: when a package name is specified as an entry point. For example, this can happen if you do `esbuild --bundle some-pkg` on the command line. In this situation `some-pkg` does not originate from either a JS import statement or a JS require call. Previously esbuild just didn't apply the `import` or `require` conditions. But that could result in path resolution failure if the package doesn't provide a back-up `default` condition, as is the case with the `is-plain-object` package.\n\n    Starting with this release, esbuild will now use the `import` condition in this case. This appears to be how Webpack and Rollup handle this situation so this change makes esbuild consistent with other tools in the ecosystem. Parcel (the other major bundler) just doesn't handle this case at all so esbuild's behavior is not at odds with Parcel's behavior here.\n\n-   Make parsing of invalid `@keyframes` rules more robust ([#&#8203;1959](https://togithub.com/evanw/esbuild/issues/1959))\n\n    This improves esbuild's parsing of certain malformed `@keyframes` rules to avoid them affecting the following rule. This fix only affects invalid CSS files, and does not change any behavior for files containing valid CSS. Here's an example of the fix:\n\n    ```css\n    /* Original code */\n    @&#8203;keyframes x { . }\n    @&#8203;keyframes y { 1% { a: b; } }\n\n    /* Old output (with --minify) */\n    @&#8203;keyframes x{y{1% {a: b;}}}\n\n    /* New output (with --minify) */\n    @&#8203;keyframes x{.}@&#8203;keyframes y{1%{a:b}}\n    ```\n\n</details>\n\n<details>\n<summary>npm/pacote</summary>\n\n### [`v12.0.3`](https://togithub.com/npm/pacote/compare/v12.0.2...v12.0.3)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v12.0.2...v12.0.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22576","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#22576)"},{"Id":"1114692103","IsPullRequest":true,"CreatedAt":"2022-01-26T07:01:07","Actor":"ramfattah","Number":"22575","RawContent":null,"Title":"docs(@angular/cli): update node versions","State":"open","Body":"Update readme documentation in regards to install the appropriate node versions as given per requirements in Angular CLI.","Url":"https://github.com/angular/angular-cli/pull/22575","RelatedDescription":"Open PR \"docs(@angular/cli): update node versions\" (#22575)"},{"Id":"1113333486","IsPullRequest":true,"CreatedAt":"2022-01-25T18:42:25","Actor":"grant-wilson","Number":"22564","RawContent":null,"Title":"docs: fix character code in expression example","State":"closed","Body":"Add '\\' prefix so character code is rendered literally,\nnot as the character it represents.","Url":"https://github.com/angular/angular-cli/pull/22564","RelatedDescription":"Closed or merged PR \"docs: fix character code in expression example\" (#22564)"},{"Id":"1113367825","IsPullRequest":false,"CreatedAt":"2022-01-25T12:53:28","Actor":"jayhamilton","Number":"22565","RawContent":null,"Title":"Unable to update from 13.1.0 to the latest point release","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nno\r\n\r\n### Description\r\n\r\nrunning ng update or ng update @angular/cli@^13 @angular/core@^13  results in a failure\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nsee above\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nThe installed Angular CLI version is outdated.\r\nInstalling a temporary Angular CLI versioned 13.1.4 to perform the update.\r\n✔ Package successfully installed.\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 25 dependencies.\r\nFetching dependency metadata from registry...\r\n    Updating package.json with dependency @angular-devkit/build-angular @ \"13.1.4\" (was \"13.1.1\")...\r\n    Updating package.json with dependency @angular/cli @ \"13.1.4\" (was \"13.1.1\")...\r\n    Updating package.json with dependency @angular/compiler-cli @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/animations @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/common @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/compiler @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/core @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/forms @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/platform-browser @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"13.1.3\" (was \"13.1.0\")...\r\n    Updating package.json with dependency @angular/router @ \"13.1.3\" (was \"13.1.0\")...\r\n  UPDATE package.json (1136 bytes)\r\nnpm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE could not resolve\r\nnpm ERR! \r\nnpm ERR! While resolving: plm-ui@0.0.0\r\nnpm ERR! Found: @angular-devkit/build-angular@13.1.1\r\nnpm ERR! node_modules/@angular-devkit/build-angular\r\nnpm ERR!   dev @angular-devkit/build-angular@\"~13.1.4\" from the root project\r\nnpm ERR! \r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! dev @angular-devkit/build-angular@\"~13.1.4\" from the root project\r\nnpm ERR! \r\nnpm ERR! Conflicting peer dependency: @angular/core@13.1.3\r\nnpm ERR! node_modules/@angular/core\r\nnpm ERR!   peer @angular/core@\"13.1.3\" from @angular/service-worker@13.1.3\r\nnpm ERR!   node_modules/@angular/service-worker\r\nnpm ERR!     peerOptional @angular/service-worker@\"^13.0.0 || ^13.1.0-next\" from @angular-devkit/build-angular@13.1.4\r\nnpm ERR!     node_modules/@angular-devkit/build-angular\r\nnpm ERR!       dev @angular-devkit/build-angular@\"~13.1.4\" from the root project\r\nnpm ERR! \r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR! \r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\nnode version 16.13.1\r\nnpm version 8.1.2\r\nmac os 10.15.7\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22565","RelatedDescription":"Closed issue \"Unable to update from 13.1.0 to the latest point release\" (#22565)"},{"Id":"1113779103","IsPullRequest":false,"CreatedAt":"2022-01-25T09:30:57","Actor":"manuelbve","Number":"22570","RawContent":null,"Title":"JIT compiler and dynamic template component issue after angular 13 upgrade","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, compiler, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nDue to business reasons, we need to have the ability of loading and executing angular code dynamically in the application, the dynamic component template comes from an API call.\r\n\r\nAfter upgrading from angular 12 to angular 13 our implemented solution for dynamic components is no longer working. Updating our codebase to avoid using the deprecated ViewEngine didn't help, we get the same errors.\r\n\r\nCan't get my head around specially as to why things like the ngIf directive is not recognized anymore.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNG0304: 'swiper' is not a known element:\r\n1. If 'swiper' is an Angular component, then verify that it is part of this module.\r\n2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\ncore.mjs:10119 NG0303: Can't bind to 'autoplay' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'effect' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'grabCursor' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'loop' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'pagination' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'slidesPerView' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'spaceBetween' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'speed' since it isn't a known property of 'swiper'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'null'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'null'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'p'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'p'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'a'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'a'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'a'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'a'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\r\ncore.mjs:10119 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'div'.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.1.4\r\nNode: 12.22.5\r\nPackage Manager: npm 6.14.14\r\nOS: win32 x64\r\n\r\nAngular: 13.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.4\r\n@angular-devkit/build-angular   13.1.4\r\n@angular-devkit/core            13.1.4\r\n@angular-devkit/schematics      12.0.4\r\n@angular/cli                    13.1.4\r\n@angular/google-maps            12.2.13\r\n@nguniversal/builders           13.0.2\r\n@nguniversal/express-engine     12.1.3\r\n@schematics/angular             12.0.4\r\nrxjs                            6.6.7\r\ntypescript                      4.5.5\n```\n\n\n### Anything else?\n\nThis is esentially how we're doing the whole process after the ViewEngine deprecation:\r\n\r\n      createDynamicComponent() {\r\n          const component = this.createComponent();\r\n          const module = this.createModule(component);\r\n          this.componentRef = this.container.createComponent(component, { ngModuleRef: module });\r\n      }\r\n      \r\n      createComponent(): Type<any> {\r\n          const self = this;\r\n          const metadata = new Component({\r\n              selector: 'dynamic',\r\n              template: this.template,\r\n          });\r\n          const componentClass = class DynamicComponent implements OnInit, OnDestroy {\r\n              constructor() {\r\n                  SwiperCore.use([Autoplay, Pagination]);\r\n              }\r\n              \r\n              ngOnInit() {}\r\n      \r\n              ngOnDestroy() {}\r\n          };\r\n                  \r\n          // Class constructor parameters\r\n          (componentClass as any).ctorParameters = () => [];\r\n          \r\n          return Component(metadata)(componentClass);\r\n      }\r\n      \r\n      createModule(decoratedComponent: Type<any>): NgModuleRef<any> {\r\n          const moduleClass = class RuntimeComponentModule {};\r\n          const decoratedNgModule = NgModule({\r\n              imports: [CommonModule, RouterModule, SharedModule],\r\n              jit: true,\r\n              declarations: [decoratedComponent],\r\n          })(moduleClass);\r\n          \r\n          return createNgModuleRef(decoratedNgModule, this.injector);\r\n      }\r\n\r\nHere the SharedModule exports common things like SwiperModule, Material modules and so on.","Url":"https://github.com/angular/angular-cli/issues/22570","RelatedDescription":"Open issue \"JIT compiler and dynamic template component issue after angular 13 upgrade\" (#22570)"},{"Id":"1113550386","IsPullRequest":false,"CreatedAt":"2022-01-25T08:04:05","Actor":"samidharane","Number":"22568","RawContent":null,"Title":"Angular 13 Project not loading some pages when production build deployed (ng build --configuration production) ","State":"open","Body":"I have migrated our Angular project from 5.2 to 13. The migration went smooth and ng build / ng serve works well like it did before.\r\n\r\nThe real problem, where I don't know how to start working on it, is after I build the app for production (ng build --configuration production). The landing page of the project is completely blank, no JS errors, no console warnings.\r\n\r\nAny relevant experience you might have in the past will help me, thanks a lot!\r\n\r\nPackage.json\r\n\r\n{\r\n\"name\": \"app1\",\r\n\"version\": \"0.0.0\",\r\n\"license\": \"MIT\",\r\n\"scripts\": {\r\n\"ng\": \"ng\",\r\n\"start\": \"ng serve\",\r\n\"build\": \"ng build --configuration production\",\r\n\"test\": \"ng test\",\r\n\"lint\": \"ng lint\",\r\n\"e2e\": \"ng e2e\",\r\n\"build-prod\": \"node --max_old_space_size=8192 ./node_modules/@angular/cli/bin/ng build --configuration production\"\r\n},\r\n\"private\": true,\r\n\"dependencies\": {\r\n\"@angular/animations\": \"^13.0.0\",\r\n\"@angular/cdk\": \"^13.0.2\",\r\n\"@angular/common\": \"^13.0.0\",\r\n\"@angular/compiler\": \"^13.0.0\",\r\n\"@angular/core\": \"^13.0.2\",\r\n\"@angular/forms\": \"^13.0.0\",\r\n\"@angular/material\": \"^13.0.2\",\r\n\"@angular/platform-browser\": \"^13.0.0\",\r\n\"@angular/platform-browser-dynamic\": \"^13.0.0\",\r\n\"@angular/router\": \"^13.0.0\",\r\n\"@ckeditor/ckeditor5-angular\": \"^1.0.1\",\r\n\"@ckeditor/ckeditor5-build-classic\": \"^11.2.0\",\r\n\"@ng-select/ng-select\": \"^8.1.1\",\r\n\"@progress/kendo-angular-buttons\": \"^5.5.2\",\r\n\"@progress/kendo-angular-common\": \"^2.0.2\",\r\n\"@progress/kendo-angular-dateinputs\": \"^4.4.1\",\r\n\"@progress/kendo-angular-dropdowns\": \"^4.4.1\",\r\n\"@progress/kendo-angular-excel-export\": \"^3.1.6\",\r\n\"@progress/kendo-angular-grid\": \"^5.4.3\",\r\n\"@progress/kendo-angular-inputs\": \"^6.7.4\",\r\n\"@progress/kendo-angular-intl\": \"^2.0.4\",\r\n\"@progress/kendo-angular-l10n\": \"^2.0.3\",\r\n\"@progress/kendo-angular-label\": \"^3.1.1\",\r\n\"@progress/kendo-angular-pdf-export\": \"^3.0.2\",\r\n\"@progress/kendo-angular-popup\": \"^4.0.2\",\r\n\"@progress/kendo-angular-treeview\": \"^4.3.2\",\r\n\"@progress/kendo-data-query\": \"^1.2.0\",\r\n\"@progress/kendo-drawing\": \"^1.5.1\",\r\n\"@progress/kendo-licensing\": \"^1.2.1\",\r\n\"applicationinsights-js\": \"^1.0.19\",\r\n\"core-js\": \"^3.19.1\",\r\n\"js2xmlparser\": \"^4.0.0\",\r\n\"ng-drag-drop\": \"^5.0.0\",\r\n\"path-parse\": \"^1.0.7\",\r\n\"rxjs\": \"^7.4.0\",\r\n\"rxjs-compat\": \"^6.6.7\",\r\n\"rxjs-tslint\": \"^0.1.8\",\r\n\"stream\": \"0.0.2\",\r\n\"timers\": \"^0.1.1\",\r\n\"tslib\": \"^2.3.1\",\r\n\"xml2js\": \"^0.4.23\",\r\n\"zone.js\": \"~0.11.4\"\r\n},\r\n\"devDependencies\": {\r\n\"@angular-devkit/build-angular\": \"~13.0.1\",\r\n\"@angular/cli\": \"^13.0.3\",\r\n\"@angular/compiler-cli\": \"^13.0.0\",\r\n\"@angular/language-service\": \"^13.0.0\",\r\n\"@angular/localize\": \"^13.0.0\",\r\n\"@types/applicationinsights-js\": \"^1.0.6\",\r\n\"@types/jasmine\": \"~3.6.0\",\r\n\"@types/jasminewd2\": \"~2.0.2\",\r\n\"@types/node\": \"^16.11.7\",\r\n\"codelyzer\": \"^6.0.0\",\r\n\"jasmine-core\": \"~3.6.0\",\r\n\"jasmine-spec-reporter\": \"~5.0.0\",\r\n\"karma\": \"~6.3.8\",\r\n\"karma-chrome-launcher\": \"~3.1.0\",\r\n\"karma-coverage-istanbul-reporter\": \"^1.2.1\",\r\n\"karma-jasmine\": \"~4.0.0\",\r\n\"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n\"node-sass\": \"^4.12.0\",\r\n\"ts-node\": \"~4.1.0\",\r\n\"tslint\": \"~6.1.0\",\r\n\"typescript\": \"~4.4.4\"\r\n}\r\n}\r\nangular-cli.json\r\n\r\n{\r\n\"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n\"project\": {\r\n\"name\": \"app1\"\r\n},\r\n\"apps\": [\r\n{\r\n\"root\": \"src\",\r\n\"outDir\": \"dist\",\r\n\"assets\": [\r\n\"assets\",\r\n\"favicon.ico\"\r\n],\r\n\"index\": \"index.html\",\r\n\"main\": \"main.ts\",\r\n\"polyfills\": \"polyfills.ts\",\r\n\"test\": \"test.ts\",\r\n\"tsconfig\": \"tsconfig.app.json\",\r\n\"testTsconfig\": \"tsconfig.spec.json\",\r\n\"prefix\": \"app1\",\r\n\"styles\": [\r\n\"styles.css\",\r\n\"sky.theme.css\",\r\n\"modal.less\"\r\n],\r\n\r\n  \"environmentSource\": \"environments/environment.ts\",\r\n  \"environments\": {\r\n    \"dev\": \"environments/environment.ts\",\r\n    \"prod\": \"environments/environment.prod.ts\"\r\n  }\r\n}\r\n],\r\n\"e2e\": {\r\n\"protractor\": {\r\n\"config\": \"./protractor.conf.js\"\r\n}\r\n},\r\n\"lint\": [\r\n{\r\n\"project\": \"src/tsconfig.app.json\",\r\n\"exclude\": \"/node_modules/\"\r\n},\r\n{\r\n\"project\": \"src/tsconfig.spec.json\",\r\n\"exclude\": \"/node_modules/\"\r\n},\r\n{\r\n\"project\": \"e2e/tsconfig.e2e.json\",\r\n\"exclude\": \"/node_modules/\"\r\n}\r\n],\r\n\"test\": {\r\n\"karma\": {\r\n\"config\": \"./karma.conf.js\"\r\n}\r\n},\r\n\"defaults\": {\r\n\"styleExt\": \"css\",\r\n\"component\": {}\r\n}\r\n}\r\ntsconfig.json\r\n\r\n{\r\n\"compileOnSave\": false,\r\n\"compilerOptions\": {\r\n\"downlevelIteration\": true,\r\n\"importHelpers\": true,\r\n\"outDir\": \"./dist/out-tsc\",\r\n\"sourceMap\": true,\r\n\"declaration\": false,\r\n\"moduleResolution\": \"node\",\r\n\"experimentalDecorators\": true,\r\n\"target\": \"es2015\",\r\n\"typeRoots\": [\r\n\"node_modules/@types\"\r\n],\r\n\"lib\": [\r\n\"es2017\",\r\n\"dom\"\r\n],\r\n\"module\": \"esnext\",\r\n\"baseUrl\": \"./\"\r\n}\r\n}\r\n\r\n\r\n**Reproduction Steps:**\r\n1. Have project with packages mentioned above - have mentioned all packaged version used in project\r\n2. Build project with \"ng build\" / run project with ng serve everything works fine\r\n3. When we deploy build created using \"ng build --configuration production\" its not loading some pages","Url":"https://github.com/angular/angular-cli/issues/22568","RelatedDescription":"Open issue \"Angular 13 Project not loading some pages when production build deployed (ng build --configuration production) \" (#22568)"},{"Id":"1113512804","IsPullRequest":false,"CreatedAt":"2022-01-25T07:19:35","Actor":"samidharane","Number":"22567","RawContent":null,"Title":"Angular 13 Project not loading some pages when production build deployed (ng build --configuration production)","State":"closed","Body":"I have migrated our Angular project from 5.2 to 13. The migration went smooth and ng build / ng serve works well like it did before.\r\n\r\nThe real problem, where I don't know how to start working on it, is after I build the app for production (ng build --configuration production). The landing page of the project is completely blank, no JS errors, no console warnings.\r\n\r\nAny relevant experience you might have in the past will help me, thanks a lot!\r\n\r\nPackage.json\r\n\r\n{\r\n  \"name\": \"app1\",\r\n  \"version\": \"0.0.0\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build --configuration production\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\",\r\n    \"build-prod\": \"node --max_old_space_size=8192 ./node_modules/@angular/cli/bin/ng build --configuration production\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^13.0.0\",\r\n    \"@angular/cdk\": \"^13.0.2\",\r\n    \"@angular/common\": \"^13.0.0\",\r\n    \"@angular/compiler\": \"^13.0.0\",\r\n    \"@angular/core\": \"^13.0.2\",\r\n    \"@angular/forms\": \"^13.0.0\",\r\n    \"@angular/material\": \"^13.0.2\",\r\n    \"@angular/platform-browser\": \"^13.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^13.0.0\",\r\n    \"@angular/router\": \"^13.0.0\",\r\n    \"@ckeditor/ckeditor5-angular\": \"^1.0.1\",\r\n    \"@ckeditor/ckeditor5-build-classic\": \"^11.2.0\",\r\n    \"@ng-select/ng-select\": \"^8.1.1\",\r\n    \"@progress/kendo-angular-buttons\": \"^5.5.2\",\r\n    \"@progress/kendo-angular-common\": \"^2.0.2\",\r\n    \"@progress/kendo-angular-dateinputs\": \"^4.4.1\",\r\n    \"@progress/kendo-angular-dropdowns\": \"^4.4.1\",\r\n    \"@progress/kendo-angular-excel-export\": \"^3.1.6\",\r\n    \"@progress/kendo-angular-grid\": \"^5.4.3\",\r\n    \"@progress/kendo-angular-inputs\": \"^6.7.4\",\r\n    \"@progress/kendo-angular-intl\": \"^2.0.4\",\r\n    \"@progress/kendo-angular-l10n\": \"^2.0.3\",\r\n    \"@progress/kendo-angular-label\": \"^3.1.1\",\r\n    \"@progress/kendo-angular-pdf-export\": \"^3.0.2\",\r\n    \"@progress/kendo-angular-popup\": \"^4.0.2\",\r\n    \"@progress/kendo-angular-treeview\": \"^4.3.2\",\r\n    \"@progress/kendo-data-query\": \"^1.2.0\",\r\n    \"@progress/kendo-drawing\": \"^1.5.1\",\r\n    \"@progress/kendo-licensing\": \"^1.2.1\",\r\n    \"applicationinsights-js\": \"^1.0.19\",\r\n    \"core-js\": \"^3.19.1\",\r\n    \"js2xmlparser\": \"^4.0.0\",\r\n    \"ng-drag-drop\": \"^5.0.0\",\r\n    \"path-parse\": \"^1.0.7\",\r\n    \"rxjs\": \"^7.4.0\",\r\n    \"rxjs-compat\": \"^6.6.7\",\r\n    \"rxjs-tslint\": \"^0.1.8\",\r\n    \"stream\": \"0.0.2\",\r\n    \"timers\": \"^0.1.1\",\r\n    \"tslib\": \"^2.3.1\",\r\n    \"xml2js\": \"^0.4.23\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~13.0.1\",\r\n    \"@angular/cli\": \"^13.0.3\",\r\n    \"@angular/compiler-cli\": \"^13.0.0\",\r\n    \"@angular/language-service\": \"^13.0.0\",\r\n    \"@angular/localize\": \"^13.0.0\",\r\n    \"@types/applicationinsights-js\": \"^1.0.6\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.2\",\r\n    \"@types/node\": \"^16.11.7\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"jasmine-core\": \"~3.6.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.3.8\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"^1.2.1\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"node-sass\": \"^4.12.0\",\r\n    \"ts-node\": \"~4.1.0\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.4.4\"\r\n  }\r\n}\r\nangular-cli.json\r\n\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"project\": {\r\n    \"name\": \"app1\"\r\n  },\r\n  \"apps\": [\r\n    {\r\n      \"root\": \"src\",\r\n      \"outDir\": \"dist\",\r\n      \"assets\": [\r\n        \"assets\",\r\n        \"favicon.ico\"\r\n      ],\r\n      \"index\": \"index.html\",\r\n      \"main\": \"main.ts\",\r\n      \"polyfills\": \"polyfills.ts\",\r\n      \"test\": \"test.ts\",\r\n      \"tsconfig\": \"tsconfig.app.json\",\r\n      \"testTsconfig\": \"tsconfig.spec.json\",\r\n      \"prefix\": \"app1\",\r\n      \"styles\": [\r\n        \"styles.css\",\r\n        \"sky.theme.css\",\r\n        \"modal.less\"\r\n      ],\r\n  \r\n      \"environmentSource\": \"environments/environment.ts\",\r\n      \"environments\": {\r\n        \"dev\": \"environments/environment.ts\",\r\n        \"prod\": \"environments/environment.prod.ts\"\r\n      }\r\n    }\r\n  ],\r\n  \"e2e\": {\r\n    \"protractor\": {\r\n      \"config\": \"./protractor.conf.js\"\r\n    }\r\n  },\r\n  \"lint\": [\r\n    {\r\n      \"project\": \"src/tsconfig.app.json\",\r\n      \"exclude\": \"**/node_modules/**\"\r\n    },\r\n    {\r\n      \"project\": \"src/tsconfig.spec.json\",\r\n      \"exclude\": \"**/node_modules/**\"\r\n    },\r\n    {\r\n      \"project\": \"e2e/tsconfig.e2e.json\",\r\n      \"exclude\": \"**/node_modules/**\"\r\n    }\r\n  ],\r\n  \"test\": {\r\n    \"karma\": {\r\n      \"config\": \"./karma.conf.js\"\r\n    }\r\n  },\r\n  \"defaults\": {\r\n    \"styleExt\": \"css\",\r\n    \"component\": {}\r\n  }\r\n}\r\ntsconfig.json\r\n\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"downlevelIteration\": true,\r\n    \"importHelpers\": true,\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"sourceMap\": true,\r\n    \"declaration\": false,\r\n    \"moduleResolution\": \"node\",\r\n    \"experimentalDecorators\": true,\r\n    \"target\": \"es2015\",\r\n    \"typeRoots\": [\r\n      \"node_modules/@types\"\r\n    ],\r\n    \"lib\": [\r\n      \"es2017\",\r\n      \"dom\"\r\n    ],\r\n    \"module\": \"esnext\",\r\n    \"baseUrl\": \"./\"\r\n  }\r\n}\r\n","Url":"https://github.com/angular/angular-cli/issues/22567","RelatedDescription":"Closed issue \"Angular 13 Project not loading some pages when production build deployed (ng build --configuration production)\" (#22567)"},{"Id":"1113485867","IsPullRequest":false,"CreatedAt":"2022-01-25T06:32:47","Actor":"pgsekaran","Number":"22566","RawContent":null,"Title":"Not able to update to angular 12 build failed with bellow error","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\nError: Optimization error [main.js]: Error: Transform failed with 1 error:\r\nmain.js:219752:5: error: Expected identifier but found \"=\"\r\n    at failureErrorWithLog (C:\\Dev 25-1\\gehc-edison-ai-workbench-webui\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:1493:15)\r\n    at C:\\Dev 25-1\\gehc-edison-ai-workbench-webui\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:1282:29\r\n    at C:\\Dev 25-1\\gehc-edison-ai-workbench-webui\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:629:9\r\n    at handleIncomingPacket (C:\\Dev 25-1\\gehc-edison-ai-workbench-webui\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:726:9)\r\n    at Socket.readFromStdout (C:\\Dev 25-1\\gehc-edison-ai-workbench-webui\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:596:7)\r\n    at Socket.emit (events.js:400:28)\r\n    at addChunk (internal/streams/readable.js:293:12)\r\n    at readableAddChunk (internal/streams/readable.js:267:9)\r\n    at Socket.Readable.push (internal/streams/readable.js:206:10)\r\n    at Pipe.onStreamRead (internal/stream_base_commons.js:188:23)\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 12.2.15\r\nNode: 14.18.3\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\nAngular: 12.2.15\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.15\r\n@angular-devkit/build-angular   12.2.15\r\n@angular-devkit/core            12.2.15\r\n@angular-devkit/schematics      12.2.15\r\n@angular/cdk                    9.2.4\r\n@schematics/angular             12.2.15\r\nrxjs                            7.5.2\r\ntypescript                      4.3.5\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n\r\nSimple steps to reproduce this bug.\r\nAfter update from angular 11 to 12 build is getting failed.\r\n","Url":"https://github.com/angular/angular-cli/issues/22566","RelatedDescription":"Open issue \"Not able to update to angular 12 build failed with bellow error\" (#22566)"},{"Id":"1113280344","IsPullRequest":true,"CreatedAt":"2022-01-25T00:18:04","Actor":"dgp1130","Number":"22563","RawContent":null,"Title":"docs: release notes for the v13.2.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.2.x\" branch to the next branch (master).","Url":"https://github.com/angular/angular-cli/pull/22563","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.2.0-rc.1 release\" (#22563)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1116371527","IsPullRequest":true,"CreatedAt":"2022-01-27T20:49:55","Actor":"wagnermaciel","Number":"24296","RawContent":null,"Title":"build: update to latest version of postcss","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24296","RelatedDescription":"Closed or merged PR \"build: update to latest version of postcss\" (#24296)"},{"Id":"1116668116","IsPullRequest":true,"CreatedAt":"2022-01-27T20:49:16","Actor":"crisbeto","Number":"24298","RawContent":null,"Title":"Revert #20393","State":"closed","Body":"Revert \"feat(material/tabs): add the ability to keep content inside the DOM while off-screen (#20393)\"\r\n\r\nThis reverts commit c3188c84ef140f0f9e3366516d9004b46ed8da71.","Url":"https://github.com/angular/components/pull/24298","RelatedDescription":"Closed or merged PR \"Revert #20393\" (#24298)"},{"Id":"1116573639","IsPullRequest":false,"CreatedAt":"2022-01-27T17:50:59","Actor":"abhijitchikane","Number":"24297","RawContent":null,"Title":"Give compareWith object mapping for SelectionModel same that of Select ","State":"open","Body":"### Feature Description\n\nIt's hard to map the object's other properties in the select something in the list using SelectionModel\r\nPlease give a option to map the object's unique key to the selection like we have it for Mat Select using compareWith\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/24297","RelatedDescription":"Open issue \"Give compareWith object mapping for SelectionModel same that of Select \" (#24297)"},{"Id":"1116366705","IsPullRequest":true,"CreatedAt":"2022-01-27T15:18:51","Actor":"wagnermaciel","Number":"24295","RawContent":null,"Title":"feat(material/schematics): add button theme migration","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24295","RelatedDescription":"Open PR \"feat(material/schematics): add button theme migration\" (#24295)"},{"Id":"1116283394","IsPullRequest":false,"CreatedAt":"2022-01-27T14:46:01","Actor":"ElecTreeFrying","Number":"24293","RawContent":null,"Title":"bug(package.json): postinstall apply-patches.js patch.exe doesn't end","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\npostinstall apply-patches.js patch.exe doesn't end\n\n### Reproduction\n\nSteps to reproduce:\r\n1. clone repo\r\n2. yarn install\r\n\n\n### Expected Behavior\n\nsuccessful postinstall\n\n### Actual Behavior\n\npostinstall `node tools/postinstall/apply-patches.js`\r\n\r\napply-patches.js patch.exe doesn't end\n\n### Environment\n\n- Angular CLI: 13.2.0-rc.1\r\n- CDK/Material: 13.3.0-next.0\r\n- Browser(s): Chrome 97\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win10\r\n","Url":"https://github.com/angular/components/issues/24293","RelatedDescription":"Closed issue \"bug(package.json): postinstall apply-patches.js patch.exe doesn't end\" (#24293)"},{"Id":"1116287610","IsPullRequest":true,"CreatedAt":"2022-01-27T14:31:46","Actor":"devversion","Number":"24294","RawContent":null,"Title":"build: cleanup lock file and fix caniuse babel deprecation warning","State":"open","Body":"Cleans up the lock file (aka lock file maintenance). This helps reducing\r\ndependencies for development and ensures we stay up-to-date.\r\n\r\nAdditionally this fixes a deprecation warning from `@babel/core` that\r\nshows up when building `tools/angular/...`.","Url":"https://github.com/angular/components/pull/24294","RelatedDescription":"Open PR \"build: cleanup lock file and fix caniuse babel deprecation warning\" (#24294)"},{"Id":"1116237418","IsPullRequest":true,"CreatedAt":"2022-01-27T13:49:20","Actor":"RobertAKARobin","Number":"24292","RawContent":null,"Title":"feat(material/chips): update chip-list describedby to match input","State":"open","Body":"Updates MatChipList to be consistent with MatInput, and fixes ExpressionChangedAfterItHasBeenCheckedError that occurs when chip-lists are content-projected into a mat-form-field, e.g.\r\n\r\n```ts\r\n<mat-form-field>\r\n    <ng-content select=\"mat-chip-list\"></ng-content>\r\n    <mat-hint>foo</mat-hint>\r\n</mat-form-field>\r\n```\r\n\r\nMy use-case was creating a wrapper around `mat-form-field` to house various Mat-* formcontrol types.\r\n\r\nMatSelect could use the same update.","Url":"https://github.com/angular/components/pull/24292","RelatedDescription":"Open PR \"feat(material/chips): update chip-list describedby to match input\" (#24292)"},{"Id":"1115923316","IsPullRequest":true,"CreatedAt":"2022-01-27T13:04:12","Actor":"crisbeto","Number":"24291","RawContent":null,"Title":"perf(material-experimental/mdc-list): reduce bundle size","State":"closed","Body":"Reduces the amount of CSS generated by the MDC-based list by:\r\n* Uses a similar approach to #24256 to reduce the amount of CSS for the internal checkbox. These changes reduce the styles even more, because we can exclude the hover/focus/pressed styles. This shaved off ~15kb.\r\n* Disabling CSS variable fallbacks. This shaved off another 1-2kb.","Url":"https://github.com/angular/components/pull/24291","RelatedDescription":"Closed or merged PR \"perf(material-experimental/mdc-list): reduce bundle size\" (#24291)"},{"Id":"1115391618","IsPullRequest":false,"CreatedAt":"2022-01-27T10:48:48","Actor":"mostafabita","Number":"24284","RawContent":null,"Title":"Taking mat-label from mat-form-field causes accessibility issue","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI wanted to have control label above mat-form-field rather than a floating label inside mat-form-field.\r\nAccording to https://github.com/angular/components/issues/17913 I wrote this and works fine\r\n```\r\n<mat-label for=\"name\">Name</mat-label>\r\n<mat-form-field [appearance]=\"outline\">\r\n   <input id=\"name\" matInput type=\"text\"/>\r\n</mat-form-field>\r\n```\r\nbut arises when I mat-select inside mat-form-field, I removed mat-label from mat-form-field but component didn't notice and adds an empty element for label and also adds `aria-labelledby` attribute to mat-select, after running lighthouse you can see a warning related to empty element used for mat-select label.\r\n```\r\n<label for=\"subject\">Subject</label>\r\n<mat-form-field [appearance]=\"outline\">\r\n   <mat-select id=\"subject\">\r\n      <mat-option>1</mat-option>\r\n      <mat-option>2</mat-option>\r\n   </mat-select>\r\n</mat-form-field>\r\n```\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Add a sample material select component https://material.angular.io/components/select/overview\r\n2. Remove mat-label from mat-form-field \r\n3. Add an ID to mat-select\r\n4. Add a label outside of mat-form-field and add for=\"ID\" attribute\r\n5. Run lighthouse to generate an Accessibility report\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nWhen mat-label is not exists inside mat-form-field, aria-labelledby should not be added to mat-select.\r\n\r\n### Actual Behavior\r\n\r\nI wanted to have control label above mat-form-field rather than a floating label inside mat-form-field.\r\nAccording to https://github.com/angular/components/issues/17913 I wrote this and works fine\r\n```\r\n<mat-label for=\"name\">Name</mat-label>\r\n<mat-form-field [appearance]=\"outline\">\r\n   <input id=\"name\" matInput type=\"text\"/>\r\n</mat-form-field>\r\n```\r\nbut problem arises when I mat-select inside mat-form-field, I removed mat-label from mat-form-field but component didn't notice and adds an empty element for label and also adds `aria-labelledby` attribute to mat-select, after running lighthouse you can see a warning related to empty element used for mat-select label.\r\n```\r\n<label for=\"subject\">Subject</label>\r\n<mat-form-field [appearance]=\"outline\">\r\n   <mat-select id=\"subject\">\r\n      <mat-option>1</mat-option>\r\n      <mat-option>2</mat-option>\r\n   </mat-select>\r\n</mat-form-field>\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 13.0.0\r\n- CDK/Material: 13.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/24284","RelatedDescription":"Closed issue \"Taking mat-label from mat-form-field causes accessibility issue\" (#24284)"},{"Id":"1115518885","IsPullRequest":false,"CreatedAt":"2022-01-27T08:53:43","Actor":"rhilliges","Number":"24289","RawContent":null,"Title":"feat(MatSelect): Optional header component in the overlay panel","State":"closed","Body":"### Feature Description\n\nAdd the option to add a custom component as a header in the overlay panel (kind of like in the date-picker).\n\n### Use Case\n\nWhen a select field has a lot of items, it would be nice to show the user a search input field on top of the list in order to filter the items.","Url":"https://github.com/angular/components/issues/24289","RelatedDescription":"Closed issue \"feat(MatSelect): Optional header component in the overlay panel\" (#24289)"},{"Id":"1115509798","IsPullRequest":false,"CreatedAt":"2022-01-27T07:37:33","Actor":"rhilliges","Number":"24287","RawContent":null,"Title":"feat(MatFormField): Add new css class when field has been touched","State":"closed","Body":"### Feature Description\n\nI would like to have a css class on the mat-form-field component (e.g. mat-form-field-touched) when the inner ng-control was touched. Adding it as a conditional class in the host section of the MatFormField might do the trick:\r\n\r\n```\r\n@Component({\r\n...\r\n\r\n   host: {\r\n      '[class.mat-form-field-touched]': '_control.ngControl.touched',\r\n   }\r\n...\r\n})\r\n```\n\n### Use Case\n\nMy designer wants to give a form field a different background color, whenever the user has touched it.","Url":"https://github.com/angular/components/issues/24287","RelatedDescription":"Closed issue \"feat(MatFormField): Add new css class when field has been touched\" (#24287)"},{"Id":"1115003862","IsPullRequest":true,"CreatedAt":"2022-01-27T00:09:31","Actor":"devversion","Number":"24276","RawContent":null,"Title":"build: switch to http server rule from dev-infra ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/components/pull/24276","RelatedDescription":"Closed or merged PR \"build: switch to http server rule from dev-infra \" (#24276)"},{"Id":"1115557761","IsPullRequest":false,"CreatedAt":"2022-01-26T22:19:22","Actor":"shinkhouse","Number":"24290","RawContent":null,"Title":"help(mat-table): Why does matColumnDef not need the asterisk notation?","State":"open","Body":"### What are you trying to do?\n\nI was currious was *matCellDef, *matHeaderCellDef, and *matRowDef are all using structural/asterisk notation but the matColumnDef is not? Is it because the former are using some template container and matColumnDef basically just gets/sets the class name? Could you give an explanation with an example?\n\n### What troubleshooting steps have you tried?\n\nN/A\n\n### Reproduction\n\nN/A\r\n\n\n### Environment\n\n- Angular: 12.0.0\r\n- CDK/Material: 12.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24290","RelatedDescription":"Open issue \"help(mat-table): Why does matColumnDef not need the asterisk notation?\" (#24290)"},{"Id":"1115511848","IsPullRequest":true,"CreatedAt":"2022-01-26T21:19:51","Actor":"mmalerba","Number":"24288","RawContent":null,"Title":"Bump version to \"v14.0.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24288","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-next.0\" with changelog.\" (#24288)"},{"Id":"1115406078","IsPullRequest":true,"CreatedAt":"2022-01-26T20:19:00","Actor":"josephperrott","Number":"24286","RawContent":null,"Title":"release: update version to 14.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24286","RelatedDescription":"Closed or merged PR \"release: update version to 14.0.0-next.0\" (#24286)"},{"Id":"1115392748","IsPullRequest":true,"CreatedAt":"2022-01-26T19:17:27","Actor":"mmalerba","Number":"24285","RawContent":null,"Title":"docs: release notes for the v13.2.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.2.x\" branch to the next branch (master).","Url":"https://github.com/angular/components/pull/24285","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.2.0 release\" (#24285)"},{"Id":"1115375743","IsPullRequest":true,"CreatedAt":"2022-01-26T19:00:01","Actor":"mmalerba","Number":"24283","RawContent":null,"Title":"Bump version to \"v13.2.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24283","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.2.0\" with changelog.\" (#24283)"},{"Id":"1115366784","IsPullRequest":true,"CreatedAt":"2022-01-26T18:48:31","Actor":"mmalerba","Number":"24282","RawContent":null,"Title":"Revert \"Bump version to \"v13.2.0\" with changelog.\"","State":"closed","Body":"Reverts angular/components#24281","Url":"https://github.com/angular/components/pull/24282","RelatedDescription":"Closed or merged PR \"Revert \"Bump version to \"v13.2.0\" with changelog.\"\" (#24282)"},{"Id":"1115353295","IsPullRequest":true,"CreatedAt":"2022-01-26T18:43:30","Actor":"mmalerba","Number":"24281","RawContent":null,"Title":"Bump version to \"v13.2.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24281","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.2.0\" with changelog.\" (#24281)"},{"Id":"1115299563","IsPullRequest":false,"CreatedAt":"2022-01-26T17:37:03","Actor":"emclaug2","Number":"24280","RawContent":null,"Title":"feat(Button): `mat-inline` styles to match Material button w/ icon specs","State":"open","Body":"### Feature Description\n\nIt would be nice to add some styles to a `mat-icon` within a `mat-button` so that it more closely matches the design specs found in [Material Design](https://material.io/components/buttons#specs).  This could potentially take the form of a new attribute, `mat-inline`, placed on a `mat-button`.  \r\n\r\nThis is an image of what I'm imagining a regular `mat-button` compared against a `mat-inline mat-button` would look like: \r\n\r\n![image](https://user-images.githubusercontent.com/6538289/151215652-7f6e6acf-99b0-4bdb-b928-da94642f3a36.png)\r\n\r\n\r\n**Sample Usage**\r\n```\r\n<button mat-flat-button mat-inline color=\"accent\">\r\n  <mat-icon>account_circle</mat-icon>\r\n  W/ Inline\r\n</button>\r\n```\r\n\r\n\r\n**Potential Implementation**\r\n```\r\n.mat-button-base[mat-inline] {\r\n    .mat-button-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .mat-icon {\r\n        height: 18px;\r\n        width: 18px;\r\n        font-size: 18px;\r\n        margin: 0 8px 0 -4px;\r\n    }\r\n}\r\n\r\n[dir='rtl'] .mat-button-base[mat-inline] .mat-icon {\r\n    margin: 0 -4px 0 8px;\r\n}\r\n```\n\n### Use Case\n\nWhenever a user is creating an icon button, a user wouldn't have to refer to the material documentation & have to add these styles manually within their projects.  \r\n\r\nIt helps to ensure alignment with Material's specs.  ","Url":"https://github.com/angular/components/issues/24280","RelatedDescription":"Open issue \"feat(Button): `mat-inline` styles to match Material button w/ icon specs\" (#24280)"},{"Id":"1115265140","IsPullRequest":true,"CreatedAt":"2022-01-26T17:13:34","Actor":"zarend","Number":"24279","RawContent":null,"Title":"Listen for focus event on calendar cells","State":"open","Body":"work-in-progress, creating a draft to share the code diff","Url":"https://github.com/angular/components/pull/24279","RelatedDescription":"Open PR \"Listen for focus event on calendar cells\" (#24279)"},{"Id":"1114331696","IsPullRequest":true,"CreatedAt":"2022-01-26T17:09:40","Actor":"coopermeitz","Number":"24274","RawContent":null,"Title":"docs(material): fix 2 spelling errors","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24274","RelatedDescription":"Closed or merged PR \"docs(material): fix 2 spelling errors\" (#24274)"},{"Id":"1114187952","IsPullRequest":true,"CreatedAt":"2022-01-26T17:09:27","Actor":"lekhmanrus","Number":"24272","RawContent":null,"Title":"docs(material/datepicker): luxon link","State":"closed","Body":"Changed link for Luxon Adapter Dependencies from https://momentjs.com/ to https://moment.github.io/luxon/","Url":"https://github.com/angular/components/pull/24272","RelatedDescription":"Closed or merged PR \"docs(material/datepicker): luxon link\" (#24272)"},{"Id":"1115158695","IsPullRequest":false,"CreatedAt":"2022-01-26T15:34:53","Actor":"seb-mtl","Number":"24278","RawContent":null,"Title":"bug(tooltip): Tooltips are sometimes empty","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI am using [MatToolTip](https://material.angular.io/components/tooltip/api) and I encounter them often being empty like this:\r\n\r\n<img width=\"153\" alt=\"Screen Shot 2022-01-26 at 10 29 17 AM\" src=\"https://user-images.githubusercontent.com/12844423/151193253-b4bbee66-17e1-40cb-b94d-3ae7bcf1359d.png\">\r\n\r\nEach hover creates an additional empty bubble with an offset to the right. I can't replicate this on Stackblitz yet.\r\n\r\nMy component looks like this:\r\n\r\n## foo.component.html\r\n```html\r\n<div *ngIf=\"project\">\r\n   <button mat-icon-button type=\"button\" matTooltip=\"XYZ\">\r\n      Hover me\r\n   </button>\r\n</div>\r\n```\r\n\r\n## foo.component.ts\r\n```typescript\r\n...\r\n@Input() project: FooProject | null;\r\n...\r\n```\r\n\r\n## foo.component.scss\r\n```\r\n// Empty\r\n```\r\n\r\nI made two observations:\r\n\r\n1) Pressing a keyboard input like **CTRL** or **ALT** will update the view and show the correct tooltip.\r\n2) Removing `*ngIf` or setting it to `true` will result in a correct tooltip behaviour.\r\n\r\n\r\nThis is how the DOM looks like if the tooltip is empty:\r\n\r\n```html\r\n<div class=\"cdk-overlay-container\">\r\n    <div class=\"cdk-overlay-connected-position-bounding-box\" dir=\"ltr\"\r\n        style=\"top: 0px; left: 0px; height: 100%; width: 100%;\">\r\n        <div id=\"cdk-overlay-8\" class=\"cdk-overlay-pane mat-tooltip-panel\" style=\"top: 303px; left: 510.273px;\">\r\n            <mat-tooltip-component aria-hidden=\"true\" class=\"ng-tns-c42-131\">\r\n                <div class=\"mat-tooltip ng-tns-c42-131 ng-trigger ng-trigger-state\"></div>\r\n            </mat-tooltip-component>\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Hover over the tooltip.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThis is how it should look like.\r\n\r\n<img width=\"120\" alt=\"Screen Shot 2022-01-26 at 10 32 07 AM\" src=\"https://user-images.githubusercontent.com/12844423/151193842-f23fb3a2-9180-49a1-bf9c-700e97af908e.png\">\r\n\r\n\r\n### Actual Behavior\r\n\r\nThe tooltips are empty.\r\n\r\n### Environment\r\n\r\n- Angular: 11.2.13\r\n- CDK/Material: 11.2.13\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS, Windows, Linux\r\n","Url":"https://github.com/angular/components/issues/24278","RelatedDescription":"Open issue \"bug(tooltip): Tooltips are sometimes empty\" (#24278)"},{"Id":"1115103325","IsPullRequest":false,"CreatedAt":"2022-01-26T14:47:26","Actor":"Spinnenzunge","Number":"24277","RawContent":null,"Title":"bug(VirtualScroll): Horizontal scrolling inside cdk-virtual-scroll-viewport","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nContent inside the cdk-virtual-scroll-viewport does use more than 100% width and does not break anymore and instead adds horizontal scrolling.\r\n\r\nThis is especially a problem when using following css rules:\r\n\r\n```\r\nwhite-space: nowrap;\r\noverflow: hidden;\r\n```\r\n\r\nThe problem is the created wrapper container with the `cdk-virtual-scroll-content-wrapper` class that has a `min-width: 100%` set but no `max-width` and can not be changed because of the view encapsulation.\n\n### Reproduction\n\nhttps://github.com/DaniLopes2003/VirtualScroll-DemoApp\n\n### Expected Behavior\n\nNo horizontal scroll bar added or width, max-width and min-width customizable with css variables?\n\n### Actual Behavior\n\nHorizontal bar added because no min-width is set\n\n### Environment\n\n- Angular: 13.0.3\r\n- CDK/Material: 13.1.3\r\n- Browser(s): Chrome, Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24277","RelatedDescription":"Open issue \"bug(VirtualScroll): Horizontal scrolling inside cdk-virtual-scroll-viewport\" (#24277)"},{"Id":"1114366447","IsPullRequest":true,"CreatedAt":"2022-01-25T21:11:18","Actor":"renovate[bot]","Number":"24275","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `2b0196f` -> `b77f980` |\n| angular/dev-infra | action | digest | `8298e12` -> `f57a99a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24275","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#24275)"},{"Id":"1114214309","IsPullRequest":true,"CreatedAt":"2022-01-25T18:13:47","Actor":"jugglervr","Number":"24273","RawContent":null,"Title":"fix(material-experimental/mdc-checkbox): added missing classes","State":"open","Body":"added missing classes for checked and indeterminate","Url":"https://github.com/angular/components/pull/24273","RelatedDescription":"Open PR \"fix(material-experimental/mdc-checkbox): added missing classes\" (#24273)"},{"Id":"1114187054","IsPullRequest":false,"CreatedAt":"2022-01-25T17:45:36","Actor":"VashJuan","Number":"24271","RawContent":null,"Title":"bug(MapMarker): MapMarker wraps positions, NOT Markers","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAccording to https://github.com/angular/components/tree/master/src/google-maps/map-marker:\r\n\r\n_\"The MapMarker component wraps the google.maps.Marker class from the Google Maps JavaScript API. The MapMarker component displays a marker on the map when it is a content child of a GoogleMap component. Like GoogleMap, this component offers an options input\"_\r\n\r\nWhat I am seeing is that MapMarker actually wraps only google.maps.LatLngLiteral. It appears there is ONLY one google.maps.MarkerOptions allowed for the whole set of markers on a map.\r\n\r\nI am new to all this, so may have other options, but I'm looking to display locations over time of 4 Search & Rescue teams: each team with a different icon/title, and to have the colors of the markers fade in color over time. Is there another approach to this? \r\n\r\n(I guess I can mix & match the Angular wrappers and the underlying google.Maps API. Is that a fluid process/documented anywhere?!)\r\n\r\nThis may be related to [https://github.com/angular/components/issues/21225](https://github.com/angular/components/issues/21225)\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. \r\n2. \r\n\r\n\r\n### Expected Behavior\r\n\r\n`\r\nmarkers: google.maps.Marker[] = [];\r\n\r\n  addMarker(event: google.maps.MapMouseEvent) {\r\n    this.markers.push( \r\n       new google.maps.Marker({\r\n           position: event.latLng.toJSON(),\r\n           title: \"Team B\",\r\n           label: \"10:20:29: status is normal\",\r\n           options: {draggable: false, icon: \"teamB.ico\"}\r\n       })\r\n     )\r\n  }\r\n`\r\n\r\nand\r\n\r\n`\r\n<map-marker *ngFor=\"let marker of markers\"\r\n              [position]=\"marker.position\"\r\n              [title]=\"marker.title\"\r\n              [label]=\"marker.label\"\r\n              [options]=\"marker.options\"></map-marker>\r\n`\r\n\r\n### Actual Behavior\r\n\r\nWrong type...\r\n\r\n### Environment\r\n\r\n- Angular: latest\r\n- CDK/Material: x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): win\r\n","Url":"https://github.com/angular/components/issues/24271","RelatedDescription":"Open issue \"bug(MapMarker): MapMarker wraps positions, NOT Markers\" (#24271)"},{"Id":"1114141596","IsPullRequest":true,"CreatedAt":"2022-01-25T17:21:00","Actor":"mmalerba","Number":"24270","RawContent":null,"Title":"Revert \"fix(material/list): fix duplicate focus with chromevox on action-list items\"","State":"closed","Body":"Reverts angular/components#23361 - caused some screenshot breakages in google3","Url":"https://github.com/angular/components/pull/24270","RelatedDescription":"Closed or merged PR \"Revert \"fix(material/list): fix duplicate focus with chromevox on action-list items\"\" (#24270)"},{"Id":"1114102363","IsPullRequest":false,"CreatedAt":"2022-01-25T16:24:51","Actor":"Irina-Intuiface","Number":"24269","RawContent":null,"Title":"Virtual scroll collectionViewer.viewChange does not emit when direction is 'rtl'","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm using a `cdk-virtual-scroll-viewport` with `dir='rtl'`, connected to a _CdkDataSrouce_. When scrolling, the `viewChange` event is not emmited, and though I can't load more items as I go. The same code works if I change the direction to `ltr`.\r\n\r\n### Reproduction\r\n\r\nMy template looks like this:\r\n```\r\n<cdk-virtual-scroll-viewport \r\n        orientation=\"vertical\"\r\n        [dir]=\"(element.scrollDirection.toString() === 'BottomToTop') ? 'rtl' : 'ltr'\"\r\n        [itemSize]=\"element.itemSize\"\r\n        [style.width]=\"element.width + 'px'\"\r\n        [style.height]=\"element.height + 'px'\"\r\n        [minBufferPx]=\"element.height \" \r\n        [maxBufferPx]=\"element.height * 1.5\">\r\n<div *cdkVirtualFor=\"let data of dataConnector; let index = index; trackBy: trackByFn\"\r\n            [style.height]=\"element.itemHeight + 'px'\">\r\n...\r\n</div>\r\n</cdk-virtual-scroll-viewport>\r\n```\r\n\r\n=> where `dataConnector` is my extension of a `CdkDataSrouce`\r\n\r\nI think it might be related to having a negative `scrollOffset` when in `rtl` direction.\r\n\r\n### Expected Behavior\r\n\r\nI am expecting `collectionViewer.viewChange` to fire when I scroll to the left.\r\n\r\n### Actual Behavior\r\n\r\nIt does not fire if the `dir` property is `rtl`\r\n\r\n### Environment\r\n\r\n- Angular: 12.0.4\r\n- CDK/Material: 12.0.4\r\n- Browser(s): Chrome Version 97.0.4692.71 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 64-bit","Url":"https://github.com/angular/components/issues/24269","RelatedDescription":"Open issue \"Virtual scroll collectionViewer.viewChange does not emit when direction is 'rtl'\" (#24269)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-28T03:30:14.2704625Z","RunDurationInMilliseconds":1844}