{"Data":{"Angular-Issues":{"Issues":[{"Id":"2773934825","IsPullRequest":false,"CreatedAt":"2025-01-07T23:31:31","Actor":"hrmcdonald","Number":"59419","RawContent":null,"Title":"`routerLink` challenges with web components","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nToday the `RouterLink` directive will only reference an elements `href` attribute value (and `preventDefault()` on click events) if its [elementRef's `tagName` is explicitly `a` or `area`. ](https://github.com/angular/angular/blob/d9707e1127f5b48ce593906c7b448ed9fef5d0cc/packages/router/src/directives/router_link.ts#L214)\n\nThis presents a unique challenge for us. We have built our design system with web components (Lit). A few of our components expose `<a>` attributes that get forwarded to internal `<a>` elements inside of the web component's shadowDOM. This works fine for a lot of things. \n\nIn Angular projects, however, it means our users can't really use `routerLink` properly since the directive will always assume it is not placed on a link and therefore will neither set it's `href` value nor prevent the default click event behavior like it would with an anchor element.\n\nWe have implemented a workaround on our end to supplement this short coming, but it leads to other challenges and issues.\n\n### Proposed solution\n\nCould [the logic that checks](https://github.com/angular/angular/blob/d9707e1127f5b48ce593906c7b448ed9fef5d0cc/packages/router/src/directives/router_link.ts#L214) for the directive's `isAnchorElement` check include some kind of additional condition to check for a specific attribute on custom web components? Something like `data-is-anchor`, `data-anchor`, or `data-ng-router-link=\"a\"`, but it could be whatever the team thinks is best.\n\nThis could be an interface we're required to implement to comply with Angular's `routerLink` directive. So in our elements we could add logic to our \"link-like\" elements to always set this attribute so that `routerLink` knows to treat it as an `<a>` equivalent.\n\nSo for example in the DOM, we'd make sure our custom element for `<mte-link>` would render to:\n```html\n<mte-link data-is-anchor>...</mte-link>\n```\n\nIn the `routerLink` source then the check could look like this:\n```typescript\nconst tagName = el.nativeElement.tagName?.toLowerCase();\nconst isAnchorLike = el.nativeElement.hasAttribute('data-is-attribute');\nthis.isAnchorElement = tagName === 'a' || tagName === 'area' || isAnchorLike;\n```\n\n### Alternatives considered\n\n### Custom `iref` solution\n\nToday we work around this by providing an `iref` attribute (short for \"Inert reference\") specifically for our Angular users. It sets the `href` internally so the link hover and right click behavior works as intended, but `preventDefault()` is called on click events since the `routerLink` will not handle that correctly today as explained above.\n\nThis mostly works, but requires our users to set both `href` and `routerLink`. It also means they have to pass string only values to `routerLink` to be safe since the `href` will not be set by whatever the router parses the link to be.\n\n### Injection Token\n\nPerhaps the `routerLink` could check an optional injection token that provides a list of valid \"link-like\" `tagNames` router links should also treat like anchor elements? We could provide those tagNames with this token in our wrapper modules or via a newer provider function for our teams to use. This seems more invasive to the directive than the first solution I proposed above though.","Url":"https://github.com/angular/angular/issues/59419","RelatedDescription":"Open issue \"`routerLink` challenges with web components\" (#59419)"},{"Id":"2773895142","IsPullRequest":true,"CreatedAt":"2025-01-07T22:52:07","Actor":"arturovt","Number":"59418","RawContent":null,"Title":"refactor(common): tree-shake fetch backend","State":"open","Body":"This commit updates the code of the HTTP code to make the `FetchBackend` class tree-shakable. The class is only needed when `withFetch()` is called and it should not be included into bundles that do not use that feature.","Url":"https://github.com/angular/angular/pull/59418","RelatedDescription":"Open PR \"refactor(common): tree-shake fetch backend\" (#59418)"},{"Id":"2773809109","IsPullRequest":true,"CreatedAt":"2025-01-07T21:48:54","Actor":"arturovt","Number":"59417","RawContent":null,"Title":"refactor(router): change `NavigationResult` to `const enum`","State":"open","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nNavigationResult = (function (NavigationResult2) {\r\n  return (\r\n    (NavigationResult2[(NavigationResult2.COMPLETE = 0)] = \"COMPLETE\"),\r\n    (NavigationResult2[(NavigationResult2.FAILED = 1)] = \"FAILED\"),\r\n    (NavigationResult2[(NavigationResult2.REDIRECTING = 2)] = \"REDIRECTING\"),\r\n    NavigationResult2\r\n  );\r\n})(NavigationResult || {});\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inline values.\r\n\r\nNote: this enum is not a part of the public API.","Url":"https://github.com/angular/angular/pull/59417","RelatedDescription":"Open PR \"refactor(router): change `NavigationResult` to `const enum`\" (#59417)"},{"Id":"2773793285","IsPullRequest":true,"CreatedAt":"2025-01-07T21:40:28","Actor":"arturovt","Number":"59416","RawContent":null,"Title":"refactor(core): change `LContainerFlags` to `const enum`","State":"open","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nNo = (function (e) {\r\n  return (\r\n    (e[(e.None = 0)] = \"None\"),\r\n    (e[(e.HasTransplantedViews = 2)] = \"HasTransplantedViews\"),\r\n    e\r\n  );\r\n})(No || {});\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inline values.","Url":"https://github.com/angular/angular/pull/59416","RelatedDescription":"Open PR \"refactor(core): change `LContainerFlags` to `const enum`\" (#59416)"},{"Id":"2773705590","IsPullRequest":true,"CreatedAt":"2025-01-07T20:46:26","Actor":"JeanMeche","Number":"59415","RawContent":null,"Title":"fix(core): Ensure that a destroyed `effect` never runs","State":"open","Body":"Prior to this change, a scheduled root effect, even if destroyed instantly, would still run at least once.\r\n\r\nThis commit fixes this.\r\n\r\nfixes #59410\r\n","Url":"https://github.com/angular/angular/pull/59415","RelatedDescription":"Open PR \"fix(core): Ensure that a destroyed `effect` never runs\" (#59415)"},{"Id":"2773532640","IsPullRequest":false,"CreatedAt":"2025-01-07T20:04:02","Actor":"DhimantB","Number":"59414","RawContent":null,"Title":"Angular Forms Touched property of Form Control Private","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAngular 17 Version\n\n![Image](https://github.com/user-attachments/assets/71b3a6c4-0cc1-4089-87e6-16835c209eed)\n\nAngular 19 Version\n![Image](https://github.com/user-attachments/assets/cddcbb07-591d-4342-b265-438b923a9f27)\n\nWhy was this changed to private?\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59414","RelatedDescription":"Closed issue \"Angular Forms Touched property of Form Control Private\" (#59414)"},{"Id":"2773415546","IsPullRequest":true,"CreatedAt":"2025-01-07T17:47:58","Actor":"arturovt","Number":"59413","RawContent":null,"Title":"refactor(core): change `Restriction` to `const enum`","State":"open","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nvar Restriction;\r\n(function (Restriction) {\r\n    Restriction[Restriction[\"I_AM_THE_JSACTION_FRAMEWORK\"] = 0] = \"I_AM_THE_JSACTION_FRAMEWORK\";\r\n})(Restriction || (Restriction = {}));\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inlines the `0` value.","Url":"https://github.com/angular/angular/pull/59413","RelatedDescription":"Open PR \"refactor(core): change `Restriction` to `const enum`\" (#59413)"},{"Id":"2773369509","IsPullRequest":true,"CreatedAt":"2025-01-07T17:21:02","Actor":"arturovt","Number":"59412","RawContent":null,"Title":"refactor(platform-browser): drop `BROWSER_MODULE_PROVIDERS_MARKER` in production","State":"open","Body":"In this commit, we switch from decorators (which also produce redundant metadata, such as in the `declareFactory` instruction) to the `inject` function to drop the `BROWSER_MODULE_PROVIDERS_MARKER` token in production. This token is actually provided only in development mode but is still referenced in the constructor due to the `@Inject(BROWSER_MODULE_PROVIDERS_MARKER)` decorator.","Url":"https://github.com/angular/angular/pull/59412","RelatedDescription":"Open PR \"refactor(platform-browser): drop `BROWSER_MODULE_PROVIDERS_MARKER` in production\" (#59412)"},{"Id":"2772778754","IsPullRequest":false,"CreatedAt":"2025-01-07T17:05:16","Actor":"twittwer","Number":"59397","RawContent":null,"Title":"isStandalone still defaulting to false","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `isStandalone` seems to default to false instead of true, like the TODO comment states the fallback should be inverted with the new default behaviour.\n\nhttps://github.com/angular/angular/blob/b22677d761fd7af38ac27c7162837cdd9b93a750/packages/core/src/render3/def_getters.ts#L43-L55\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n@angular/core 19.0.5\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59397","RelatedDescription":"Closed issue \"isStandalone still defaulting to false\" (#59397)"},{"Id":"2772970857","IsPullRequest":true,"CreatedAt":"2025-01-07T17:05:15","Actor":"JeanMeche","Number":"59401","RawContent":null,"Title":"refactor(core): remove outdated comment.","State":"closed","Body":"Should have been done by #58238, but was probably missed in a rebase.\r\n\r\nfixes #59397\r\n","Url":"https://github.com/angular/angular/pull/59401","RelatedDescription":"Closed or merged PR \"refactor(core): remove outdated comment.\" (#59401)"},{"Id":"2773321900","IsPullRequest":false,"CreatedAt":"2025-01-07T16:56:33","Actor":"RafaelJCamara","Number":"59411","RawContent":null,"Title":"Link in docs in rendering regions does not exist","State":"open","Body":"### Describe the problem that you experienced\n\nWhen you click in the [link](https://github.com/angular/angular/tree/main/aio/tools/transforms/examples-package/services) mentioned here:\nadev/shared-docs/pipeline/api-gen/rendering/regions/README.md\n\nYou get:\n<img width=\"1431\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ab357d14-9985-4445-ada8-c344a49042cf\" />","Url":"https://github.com/angular/angular/issues/59411","RelatedDescription":"Open issue \"Link in docs in rendering regions does not exist\" (#59411)"},{"Id":"2773285457","IsPullRequest":false,"CreatedAt":"2025-01-07T16:38:34","Actor":"rainerhahnekamp","Number":"59410","RawContent":null,"Title":"`EffectRef.destroy` has no impact","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a test that needs to ensure an effect is destroyed before it gets executed. \nHowever, for some reason, calling `destroy` has no effect, and the test still passes.\n\nInterestingly, if I call `TestBed.flushEffects()` before `effectRef.destroy()`, \nthe `effectCounter` remains at `1`, as expected.\n\n@JeanMeche suggested that once a run is scheduled, it cannot be stopped.  \nI get that, but in that case, the subsequent runs shouldn't happen.\n\n```ts\nit('should destroy an effect', () => {\n  let effectCounter = 0;\n  const counter = signal(1);\n  const effectRef = TestBed.runInInjectionContext(() =>\n    effect(\n      () => {\n        counter();\n        effectCounter++;\n      },\n      { injector: TestBed.inject(EnvironmentInjector) }\n    )\n  );\n  expect(effectCounter).toBe(0);\n  effectRef.destroy();\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(1);\n\n  counter.set(2);\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(2);\n\n  counter.set(3);\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(3);\n});\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/github-6riblwis-lvalm53b?file=src%2Fapp%2Feffect.spec.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.5.1\nPackage Manager: pnpm 9.14.4\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59410","RelatedDescription":"Open issue \"`EffectRef.destroy` has no impact\" (#59410)"},{"Id":"2773269608","IsPullRequest":true,"CreatedAt":"2025-01-07T16:31:29","Actor":"arturovt","Number":"59409","RawContent":null,"Title":"refactor(platform-browser): remove `Console` from Hammer gestures","State":"open","Body":"Injecting the `Console` is redundant because it directly calls the global `console` object. There is no reason to reference this class in Hammer gestures, as it is only used in development mode. We can safely call the `console` object directly.","Url":"https://github.com/angular/angular/pull/59409","RelatedDescription":"Open PR \"refactor(platform-browser): remove `Console` from Hammer gestures\" (#59409)"},{"Id":"2773229610","IsPullRequest":true,"CreatedAt":"2025-01-07T16:15:42","Actor":"arturovt","Number":"59408","RawContent":null,"Title":"refactor(animations): drop warning functions in production","State":"open","Body":"Prior to this commit, functions that issued warnings were not wrapped with `ngDevMode` at the point of invocation but had the `ngDevMode` check inside. This meant they acted as no-ops in production. In this commit, we wrap them externally with `ngDevMode`, so they are entirely removed.","Url":"https://github.com/angular/angular/pull/59408","RelatedDescription":"Open PR \"refactor(animations): drop warning functions in production\" (#59408)"},{"Id":"2773208185","IsPullRequest":true,"CreatedAt":"2025-01-07T16:07:58","Actor":"RafaelJCamara","Number":"59407","RawContent":null,"Title":"docs: update license URL from angular.io to angular.dev and year of license to 2025","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\"Old\" links for license\r\n\r\n\r\n## What is the new behavior?\r\nUpdated links\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/59407","RelatedDescription":"Open PR \"docs: update license URL from angular.io to angular.dev and year of license to 2025\" (#59407)"},{"Id":"2772728778","IsPullRequest":true,"CreatedAt":"2025-01-07T16:04:04","Actor":"crisbeto","Number":"59396","RawContent":null,"Title":"fix(core): override inherited function properties","State":"closed","Body":"Since signals are functions, they inherit some properties like `length` and `name`. These can lead to issues in user code where somebody may write `someArraySignal.length` instead of `someArraySignal().length`.\r\n\r\nThese changes aim to mitigate the issue by overriding these properties to be `unknown`.\r\n\r\nFixes #59394.\r\n","Url":"https://github.com/angular/angular/pull/59396","RelatedDescription":"Closed or merged PR \"fix(core): override inherited function properties\" (#59396)"},{"Id":"2773192713","IsPullRequest":true,"CreatedAt":"2025-01-07T16:00:34","Actor":"devversion","Number":"59406","RawContent":null,"Title":"fix(bazel): support setting `type: module` in source `package.json`","State":"open","Body":"This is helpful as it allows us to set `type: module` in the checked-in package files, useful for the hybrid mode of `rules_js` and `rules_nodejs`, where the package.json files can control the execution format.","Url":"https://github.com/angular/angular/pull/59406","RelatedDescription":"Open PR \"fix(bazel): support setting `type: module` in source `package.json`\" (#59406)"},{"Id":"2772496451","IsPullRequest":true,"CreatedAt":"2025-01-07T15:55:45","Actor":"crisbeto","Number":"59393","RawContent":null,"Title":"fix(platform-browser): styles not replaced during HMR when using animations renderer","State":"closed","Body":"When we replace a component during HMR, we clear it from the cache of the renderer factory, however when using animations, there's an animation-specific renderer factory that wraps the base DOM one and was preventing the cache from being cleared.\r\n\r\nThese changes rework the logic that clear the cache to go through a method so we can forward the call to the delegated factory.\r\n","Url":"https://github.com/angular/angular/pull/59393","RelatedDescription":"Closed or merged PR \"fix(platform-browser): styles not replaced during HMR when using animations renderer\" (#59393)"},{"Id":"2773176386","IsPullRequest":false,"CreatedAt":"2025-01-07T15:53:18","Actor":"gobeli","Number":"59405","RawContent":null,"Title":"LOCALE_ID wrong","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter the update to Angular 19, we always get \"en-US\" as the chosen locale (injection token `LOCALE_ID`). \nCan someone explain why this might be? We have 4 locales and all translations are displaying correctly, but the `LOCALE_ID` is always \"en-US\".\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.1\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.1\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            18.2.1\n@angular-devkit/schematics      18.2.1\n@angular/cdk                    19.0.4\n@angular/cli                    18.2.1\n@angular/material               19.0.4\n@angular/ssr                    19.0.6\n@schematics/angular             18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59405","RelatedDescription":"Open issue \"LOCALE_ID wrong\" (#59405)"},{"Id":"2772510645","IsPullRequest":true,"CreatedAt":"2025-01-07T15:51:14","Actor":"pkozlowski-opensource","Number":"59395","RawContent":null,"Title":"refactor(docs-infra): code cleanups","State":"closed","Body":"A handfull of different code cleanups in adev\r\ncomponents.\r\n","Url":"https://github.com/angular/angular/pull/59395","RelatedDescription":"Closed or merged PR \"refactor(docs-infra): code cleanups\" (#59395)"},{"Id":"2773067605","IsPullRequest":true,"CreatedAt":"2025-01-07T15:45:31","Actor":"angular-robot","Number":"59403","RawContent":null,"Title":"build: update dependency @types/diff to v7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/diff](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/diff) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/diff)) | dependencies | major | [`^6.0.0` -> `^7.0.0`](https://renovatebot.com/diffs/npm/@types%2fdiff/6.0.0/7.0.0) |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45MS4yIiwidXBkYXRlZEluVmVyIjoiMzkuOTEuMiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59403","RelatedDescription":"Closed or merged PR \"build: update dependency @types/diff to v7\" (#59403)"},{"Id":"2772823620","IsPullRequest":false,"CreatedAt":"2025-01-07T15:36:39","Actor":"ShoulM","Number":"59399","RawContent":null,"Title":"Angular 19 breaks app that loads standalone component via module federation from remote app running Angular 18","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn my app we use module federation to load a component from a remote app. The remote app is compiled on Angular 18 while my app is on Angular 19.\n\nLooks like this change (https://github.com/angular/angular/pull/58288) causes a backwards compatibility issue when loading a standalone component from remote app using Angular 18 into host app running Angular 19.\n\nIn such a case the componentDefinition parameter supplied to ɵɵdefineComponent has undefined in the features array:\n\n![Image](https://github.com/user-attachments/assets/3a276e78-7d39-46d8-9e75-fdd33f61a893)\n\nThis causes an exception later on when calling initFeatures:\n\n![Image](https://github.com/user-attachments/assets/0abad2f1-49e8-48c8-8567-e73136f1b2ea)\n\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nI can't provide a reproduction since it requires setting up module federation and multiple MFE\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: fn is not a function\n    at core.mjs:20037:42\n    at Array.forEach (<anonymous>)\n    at initFeatures (core.mjs:20037:26)\n    at Object.toString (core.mjs:19895:9)\n    at noSideEffects (core.mjs:122:29)\n    at Module.ɵɵdefineComponent (core.mjs:19860:12)\n    at <static_initializer> (brief-result.component.ts:12:39)\n    at 8465 (src_app_custom1-module_custom1-module_module_ts.js:16:90)\n    at __webpack_require__ (bootstrap:19:1)\n    at 1511 (brief-result.component.html:2:55)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1900.6\n@angular-devkit/build-angular     19.0.6\n@angular-devkit/core              18.2.9\n@angular-devkit/schematics        18.2.9\n@angular/cdk                      19.0.4\n@angular/cli                      19.0.6\n@angular/material                 19.0.4\n@angular/material-luxon-adapter   19.0.4\n@schematics/angular               19.0.6\nrxjs                              7.8.1\ntypescript                        5.5.4\nwebpack                           5.88.2\nzone.js                           0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59399","RelatedDescription":"Closed issue \"Angular 19 breaks app that loads standalone component via module federation from remote app running Angular 18\" (#59399)"},{"Id":"2773140084","IsPullRequest":true,"CreatedAt":"2025-01-07T15:36:31","Actor":"pkozlowski-opensource","Number":"59404","RawContent":null,"Title":"IFrame flicker","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59404","RelatedDescription":"Open PR \"IFrame flicker\" (#59404)"},{"Id":"2772272726","IsPullRequest":true,"CreatedAt":"2025-01-07T15:31:52","Actor":"devversion","Number":"59391","RawContent":null,"Title":"ci: remove `devversion` from unavailable pullapprove list","State":"closed","Body":"Removing myself as I'm available for reviews.","Url":"https://github.com/angular/angular/pull/59391","RelatedDescription":"Closed or merged PR \"ci: remove `devversion` from unavailable pullapprove list\" (#59391)"},{"Id":"2773030557","IsPullRequest":false,"CreatedAt":"2025-01-07T14:49:42","Actor":"eddhib","Number":"59402","RawContent":null,"Title":"Distinguish User-initiated vs. Code-initiated Changes in Angular Forms","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\n The dirty and pristine properties in Angular forms are useful for tracking whether a control has been modified. However, they do not differentiate whether the modification was made by the user or by the code (patchValue or setValue). To address this limitation, the objective is to add a new control or flag that helps to identify whether a change was initiated by the user or programmatically by the code.\n\n### Proposed solution\n\nIntroduce an additional flag or indicator that can distinguish between user-made changes and code-induced changes. This will involve adding a custom logic or tracking mechanism to monitor the source of the changes on form controls.\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/59402","RelatedDescription":"Open issue \"Distinguish User-initiated vs. Code-initiated Changes in Angular Forms\" (#59402)"},{"Id":"2772857807","IsPullRequest":true,"CreatedAt":"2025-01-07T13:30:12","Actor":"arturovt","Number":"59400","RawContent":null,"Title":"refactor(core): drop platform injection token names in production","State":"open","Body":"In this commit, we tree-shake the injection token names in production.","Url":"https://github.com/angular/angular/pull/59400","RelatedDescription":"Open PR \"refactor(core): drop platform injection token names in production\" (#59400)"},{"Id":"2772785035","IsPullRequest":false,"CreatedAt":"2025-01-07T12:56:26","Actor":"kklocker","Number":"59398","RawContent":null,"Title":"Suggested workaround for content-projection in control flow blocks does not work","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen having multiple root elements in a control flow block, the compiler gives a [friendly message](https://github.com/angular/angular/blob/b22677d761fd7af38ac27c7162837cdd9b93a750/packages/compiler-cli/src/ngtsc/typecheck/src/oob.ts#L579) suggesting to\n> Split the content of the @case block across multiple @case blocks such that each one only has a single projectable node at its root.\n\nThis does however not seem to work as suggested (or it works but the message is unclear). In particular, this does not seem to work for `ng-content` with specific selector targets.\n\nSee example of reproducing [here](https://stackblitz.com/edit/stackblitz-starters-avyqjise?file=src%2Fmain.ts)\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-avyqjise?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\nNo exception.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.0.0\nNode: 20.14.0\nPackage Manager: yarn 3.4.1\nOS: win32 x64\n\nAngular: 18.2.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, material, material-moment-adapter\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.1\n@angular-devkit/build-angular   18.2.1\n@angular-devkit/core            18.2.1\n@angular-devkit/schematics      18.2.1\n@angular/cli                    18.0.0\n@schematics/angular             18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nwebpack                         5.91.0\nzone.js                         0.14.6\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59398","RelatedDescription":"Open issue \"Suggested workaround for content-projection in control flow blocks does not work\" (#59398)"},{"Id":"2772502188","IsPullRequest":false,"CreatedAt":"2025-01-07T10:42:04","Actor":"kav-viasat","Number":"59394","RawContent":null,"Title":"No lint warnings for signals used within  control flow.","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\n```\n@for (breadcrumb of breadcrumbs(); track breadcrumb.name; let i = $index) {\n          <div class=\"breadcrumb\">\n            @if (breadcrumb.linkPath) {\n              <a class=\"breadcrumb--link\" [routerLink]=\"[breadcrumb.linkPath]\"> {{ breadcrumb.name }}</a>\n            } @else {\n              <div class=\"breadcrumb--disabled\">\n                {{ breadcrumb.name }}\n              </div>\n            }\n\n            @if **(i < breadcrumbs.length - 1)** {\n              <inm-icon [name]=\"'ChevronRight'\" [size]=\"'x-small'\"></inm-icon>\n            }\n          </div>\n        }\n```\nThere currently are no lint warnings for `i < breadcrumbs.length - 1`, my workaround ended up being:\n\n```\n@if (breadcrumbs()?.length; as breadCrumbsLength) {\n      @if (breadcrumbs(); as breadcrumbs) {\n        <div class=\"breadcrumb-ct\">\n          @for (breadcrumb of breadcrumbs; track breadcrumb.name; let i = $index) {\n            <div class=\"breadcrumb\">\n              @if (breadcrumb.linkPath) {\n                <a class=\"breadcrumb--link\" [routerLink]=\"[breadcrumb.linkPath]\"> {{ breadcrumb.name }}</a>\n              } @else {\n                <div class=\"breadcrumb--disabled\">\n                  {{ breadcrumb.name }}\n                </div>\n              }\n\n              @if (i < breadCrumbsLength - 1) {\n                <inm-icon [name]=\"'ChevronRight'\" [size]=\"'x-small'\"></inm-icon>\n              }\n            </div>\n          }\n        </div>\n      }\n    }\n```\n\nAs directly using `i < breadcrumbs()?.length - 1` receives a linting error of object undefined, even if it's nested within an if statement here:\n\n```\n@if (breadcrumbs() && breadcrumbs()?.length) {\n      <div class=\"breadcrumb-ct\">\n        @for (breadcrumb of breadcrumbs(); track breadcrumb.name; let i = $index) {\n          <div class=\"breadcrumb\">\n            @if (breadcrumb.linkPath) {\n              <a class=\"breadcrumb--link\" [routerLink]=\"[breadcrumb.linkPath]\"> {{ breadcrumb.name }}</a>\n            } @else {\n              <div class=\"breadcrumb--disabled\">\n                {{ breadcrumb.name }}\n              </div>\n            }\n\n            @if (i < breadcrumbs()?.length - 1) {\n              <inm-icon [name]=\"'ChevronRight'\" [size]=\"'x-small'\"></inm-icon>\n            }\n          </div>\n        }\n      </div>\n    }\n```\n\n### Proposed solution\n\nTo still have linting errors if invoking signals within nested @if and @for statenents.\n\n### Alternatives considered\n\nn/a","Url":"https://github.com/angular/angular/issues/59394","RelatedDescription":"Open issue \"No lint warnings for signals used within  control flow.\" (#59394)"},{"Id":"2772422998","IsPullRequest":false,"CreatedAt":"2025-01-07T10:06:29","Actor":"praveshShetty","Number":"59392","RawContent":null,"Title":"Transfer state not working with hydration in production and stage environment","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI believe, with hydration, transfer state is in-built. Meaning we do no need to doit manually, if `withHttpTransferCacheOptions` is used along with `provideClientHydration`. This works properly in the local. But when deployed on the cloud via a CDN, there is some issue. I got to know this as I can see that the API are being called both in the server as well as the client, because of which there is visible flickering.\n\nThis is my hydration setup:\n\n```\nprovideClientHydration(\nwithHttpTransferCacheOptions({\n  includeHeaders: ['X-XSRF-TOKEN'],\n  filter: (req) => {\n    return !(req.headers.get('skip-hydration-caching') === 'true');\n  },\n}),\n),\n```\n\nI have not set skip-hydration-caching in the header for this use case, so the API should be cached and not called in the client, according to my expectation.\n\nI have also compared the page source of both local and stage to see if there are any differences, since I read that CDNs can strip away some required comment nodes for hydration to work properly. But I found no differences as such.\n\nI do not know for sure if its an issue only with transfer state or hydration as well since angular does not log anything in stage/production builds unlike dev build where we can see this msg.\n\nAngular hydrated 25 component(s) and 456 node(s), 0 component(s) were skipped.\n\nI'm not able to give a reproducible build since it happens only in production/stage environments. Any pointers in the right direction will help.\n\nI also checked with there are any optimizations in the CDN (AWS Cloudfront). But there is none. Even turned off compression to check if it was removing any required nodes. But still the issue persists. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo errors seen\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.12\nNode: 18.19.1\nPackage Manager: pnpm 8.15.8\nOS: darwin arm64\n\nAngular: 18.2.12\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, material, platform-browser\n... platform-browser-dynamic, platform-server, router\n... service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12 (cli-only)\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12 (cli-only)\n@angular-devkit/schematics      18.2.12 (cli-only)\n@angular/google-maps            18.2.14\n@angular/localize               18.2.13\n@angular/pwa                    0.1102.8\n@schematics/angular             18.2.12 (cli-only)\nrxjs                            6.6.7\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59392","RelatedDescription":"Open issue \"Transfer state not working with hydration in production and stage environment\" (#59392)"},{"Id":"2772097634","IsPullRequest":false,"CreatedAt":"2025-01-07T07:49:06","Actor":"kkdoyle","Number":"59390","RawContent":null,"Title":"failed to load module script: Expected a Javascript module script but the server responded with a MIME type of \"\".","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/f34caced-0225-435f-8b76-64e063498a7e)\n\nMy production build is hosted on an Azure Static Web App and served through Cloudflare. \n\nSome users faced this issue, and we fixed it by setting the JavaScript content-type in Cloudflare, but I'm not sure why it happens. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.3.11\nNode: 18.13.0\nPackage Manager: npm 8.19.3\nOS: win32 x64\n\nAngular: 17.3.12\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.11\n@angular-devkit/build-angular   17.3.11\n@angular-devkit/core            17.3.11\n@angular-devkit/schematics      17.3.11\n@angular/cli                    17.3.11\n@schematics/angular             17.3.11\nrxjs                            7.8.1\ntypescript                      5.3.3\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59390","RelatedDescription":"Closed issue \"failed to load module script: Expected a Javascript module script but the server responded with a MIME type of \"\".\" (#59390)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2773461143","IsPullRequest":true,"CreatedAt":"2025-01-07T19:21:21","Actor":"josephperrott","Number":"29269","RawContent":null,"Title":"ci: add flag for preventing NpmPackageExtract from executing on RBE","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29269","RelatedDescription":"Closed or merged PR \"ci: add flag for preventing NpmPackageExtract from executing on RBE\" (#29269)"},{"Id":"2773553187","IsPullRequest":true,"CreatedAt":"2025-01-07T19:12:27","Actor":"clydin","Number":"29270","RawContent":null,"Title":"feat(@angular/build): add ng-packagr builder to the package ","State":"open","Body":"To support migration to the `@angular/build` package which contains the\r\n`application` builder that is used by all new projects, the `ng-packagr`\r\nbuilder used to build Angular libraries is also now available within this\r\npackage. This removes the need for projects that are using the application\r\nbuilder but also would like to build a library from having to install the\r\nWebpack related `@angular-devkit/build-angular` package.  This can result\r\nin a significant reduction in overall Node.js packages installed within the\r\nproject.","Url":"https://github.com/angular/angular-cli/pull/29270","RelatedDescription":"Open PR \"feat(@angular/build): add ng-packagr builder to the package \" (#29270)"},{"Id":"2771976647","IsPullRequest":true,"CreatedAt":"2025-01-07T17:02:09","Actor":"angular-robot","Number":"29264","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | patch | [`8.19.0` -> `8.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.19.0/8.19.1) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | patch | [`8.19.0` -> `8.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.19.0/8.19.1) |\n| [ng-packagr](https://redirect.github.com/ng-packagr/ng-packagr) | devDependencies | patch | [`19.1.0-next.2` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/ng-packagr/19.1.0-next.2/19.1.0-next.3) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | patch | [`4.30.0` -> `4.30.1`](https://renovatebot.com/diffs/npm/rollup/4.30.0/4.30.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | patch | [`4.30.0` -> `4.30.1`](https://renovatebot.com/diffs/npm/rollup/4.30.0/4.30.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.19.1`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8191-2025-01-06)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.19.0...v8.19.1)\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[no-unnecessary-type-assertion] handle literal types ([#&#8203;10523](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10523))\n-   **eslint-plugin:** \\[no-deprecated] doesn't report on shorthand property in an object expression ([#&#8203;10550](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10550))\n-   **eslint-plugin:** \\[strict-boolean-expressions] remove remaining (unsafe) autofixes ([#&#8203;10548](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10548))\n-   **eslint-plugin:** \\[no-shadow] report correctly on parameters of functions declared with the `declare` keyword ([#&#8203;10543](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10543))\n-   **eslint-plugin:** \\[no-base-to-string] check array generic type ([#&#8203;10437](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10437))\n\n##### ❤️ Thank You\n\n-   Kirk Waiblinger\n-   mdm317\n-   Ronen Amiel\n-   Yukihiro Hasegawa [@&#8203;y-hsgw](https://redirect.github.com/y-hsgw)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.19.1`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8191-2025-01-06)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.19.0...v8.19.1)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v19.1.0-next.3`](https://redirect.github.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1910-next3-2025-01-07)\n\n[Compare Source](https://redirect.github.com/ng-packagr/ng-packagr/compare/19.1.0-next.2...19.1.0-next.3)\n\n##### Bug Fixes\n\n-   Re-use module resolution cache.\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.30.1`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4301)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.30.0...v4.30.1)\n\n*2025-01-07*\n\n##### Bug Fixes\n\n-   Prevent invalid code when simplifying unary expressions in switch cases ([#&#8203;5786](https://redirect.github.com/rollup/rollup/issues/5786))\n\n##### Pull Requests\n\n-   [#&#8203;5786](https://redirect.github.com/rollup/rollup/pull/5786): fix: consider that literals cannot following switch case. ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45MS4yIiwidXBkYXRlZEluVmVyIjoiMzkuOTEuMiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29264","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29264)"},{"Id":"2771975497","IsPullRequest":true,"CreatedAt":"2025-01-07T15:46:14","Actor":"angular-robot","Number":"29263","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `41e8092` -> `02b9062` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `8cd5736` -> `cfd7a06` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `e025d18` -> `d0c8ad8` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `63f3eb1` -> `cc02bb3` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `e409814` -> `76efb05` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `7e05e4a` -> `ed3a836` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `8e1b6d6` -> `8099a88` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `6e63df3` -> `7876e9e` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `b675eaa` -> `8990907` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `c654684` -> `3dae05c` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `98da5cf` -> `052a2f2` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `962e671` -> `9d6e61a` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `297dd44` -> `3bf0933` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `fa6e771` -> `34c97ca` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `a5e46f6` -> `b48e676` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `0c66459` -> `e1c6e91` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a399f52` -> `737586f` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `a7c8973` -> `bd057fc` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `006b267` -> `140d9c8` |\n| angular/dev-infra | action | digest | `f0a9343` -> `359350b` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45MS4yIiwidXBkYXRlZEluVmVyIjoiMzkuOTEuMiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29263","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29263)"},{"Id":"2772405365","IsPullRequest":true,"CreatedAt":"2025-01-07T14:39:54","Actor":"alan-agius4","Number":"29265","RawContent":null,"Title":"fix(@angular/build): add asset tracking to application builder watch files","State":"closed","Body":"\r\n\r\nThis commit updates the application builder to include assets in the watch process, triggering file re-copying when changes are detected.\r\n\r\nCloses #28415","Url":"https://github.com/angular/angular-cli/pull/29265","RelatedDescription":"Closed or merged PR \"fix(@angular/build): add asset tracking to application builder watch files\" (#29265)"},{"Id":"2772951870","IsPullRequest":true,"CreatedAt":"2025-01-07T14:39:43","Actor":"alan-agius4","Number":"29268","RawContent":null,"Title":"fix(@angular/build): enable serving files with bundle-like names","State":"closed","Body":"Ensure files with names resembling bundles, such as `main.js`, can be served correctly. This resolves issues where specific filenames were mistakenly treated as generated bundles, preventing them from being accessed directly.\r\n\r\nCloses #29232","Url":"https://github.com/angular/angular-cli/pull/29268","RelatedDescription":"Closed or merged PR \"fix(@angular/build): enable serving files with bundle-like names\" (#29268)"},{"Id":"2772509609","IsPullRequest":true,"CreatedAt":"2025-01-07T14:19:15","Actor":"alan-agius4","Number":"29266","RawContent":null,"Title":"refactor(@angular/build): remove no longer correct type","State":"closed","Body":"`buildApplication` no longer yields the `outputFiles` and `assetFiles`.\r\n","Url":"https://github.com/angular/angular-cli/pull/29266","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): remove no longer correct type\" (#29266)"},{"Id":"2772541803","IsPullRequest":true,"CreatedAt":"2025-01-07T12:52:07","Actor":"alan-agius4","Number":"29267","RawContent":null,"Title":"test: lower `debounceTime` in browser builder tests","State":"closed","Body":"The current `debounceTime` values are unnecessarily high, resulting in slow test execution. Reducing these times will improve efficiency.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29267","RelatedDescription":"Closed or merged PR \"test: lower `debounceTime` in browser builder tests\" (#29267)"},{"Id":"2771851864","IsPullRequest":true,"CreatedAt":"2025-01-07T12:17:56","Actor":"clydin","Number":"29262","RawContent":null,"Title":"test(@angular/build): separate application and dev-server integration test targets","State":"closed","Body":"The integration tests for the application and dev-server targets within `@angular/build` have been separated into two bazel targets. This allows more fine-grained control of test options for each builder as well as reducing the overall size of each target.","Url":"https://github.com/angular/angular-cli/pull/29262","RelatedDescription":"Closed or merged PR \"test(@angular/build): separate application and dev-server integration test targets\" (#29262)"},{"Id":"2770674203","IsPullRequest":false,"CreatedAt":"2025-01-06T23:55:16","Actor":"GKersten","Number":"29256","RawContent":null,"Title":"ngCspNonce broken since `domutils` v3.2.1","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nany\n\n### Description\n\nAfter regenerating our `package-lock.json` file we ran into an issue where `ngCspNonce` is no longer working. After debugging we figured out that it is caused with an update of `domutils` package to v3.2.1. Since downgrading that package to v3.1.0 seems to fix the issue. For this we were able to find these probably related Github issues on external repositories for indirect dependencies of `@angular/build`:\nhttps://github.com/fb55/htmlparser2/issues/1987\nhttps://github.com/fb55/domutils/issues/1855\n\nHowever since this actually breaks the `ngCspNonce` functionality we thought it would be good to also report the issue here.\n\nThe issue happens when creating a new Angular app with `ngCspNonce` attribute added, after building the app, the `<style>` tags are not generated. Seems like `ngCspNonce` is ignored?\n\nSee comparison of \"excepted\" (left) and \"actual\" (right) of the `index.html` from the `dist` folder after running `build`\n![Image](https://github.com/user-attachments/assets/c0107736-f0a3-4dfc-b080-35094640690c\n\nDependency tree: `@angular/build` > `beasties` > `htmlparser2` > `domutils`\n\n### Minimal Reproduction\n\nSee Stackblitz:\nhttps://stackblitz.com/edit/ng-csp-nonce?file=src%2Findex.html\n\nOr take full reproduction steps:\n1. Create a new Angular app using `ng new` (latest v19, but also reproducable with v18)\n2. add some styles to global `styles.scss`\n3. add `ngCspNonce=\"randomNonceGoesHere\"` to `<app-root>` as described in https://angular.dev/best-practices/security#content-security-policy\n4. run `npm install` & `npm run build`\n5. Look at `dist` directory and lookup the generated `index.html` find this line `<link rel=\"stylesheet\" href=\"styles-RP5GNS3S.css\" media=\"print\" onload=\"this.media='all'\"><noscript><link rel=\"stylesheet\" href=\"styles-RP5GNS3S.css\"></noscript></head>`. Notice that it contains `onload=\"this.media='all'\"`  which should actually have been prevented by the `ngCspNonce` attribute.\n\nTo work-around:\n1. in `package.json` add\n```  \n\"overrides\": {\n    \"domutils\": \"3.1.0\"\n  }\n```\n2. delete `node_modules` & `package-lock.json` to be sure.\n3. run `npm install` & `npm run build`\n4. Look at dist directory and lookup the generated `index.html` find this line\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.6 (cli-only)\n@angular-devkit/core         19.0.6 (cli-only)\n@angular-devkit/schematics   19.0.6 (cli-only)\n@schematics/angular          19.0.6 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29256","RelatedDescription":"Closed issue \"ngCspNonce broken since `domutils` v3.2.1\" (#29256)"},{"Id":"2771523361","IsPullRequest":true,"CreatedAt":"2025-01-06T23:49:16","Actor":"josephperrott","Number":"29261","RawContent":null,"Title":"ci: run less jobs per executor for RBE","State":"closed","Body":"Use less jobs per bazel run to reduce the rate at which we perform API calls for RBE\r\n","Url":"https://github.com/angular/angular-cli/pull/29261","RelatedDescription":"Closed or merged PR \"ci: run less jobs per executor for RBE\" (#29261)"},{"Id":"2771216865","IsPullRequest":true,"CreatedAt":"2025-01-06T18:33:07","Actor":"clydin","Number":"29260","RawContent":null,"Title":"refactor(@angular/build): support multiple results per application build action","State":"open","Body":"The `application` builder may now return more than one build result per rebuild action. This will typically occur when using the development server with HMR enabled. In this scenario, component template update results may be sent to the development server in addition to incremental updates for global styles. TailwindCSS, for instance, may update the global stylesheet for an application based on the usage of styles within a given template.\r\n\r\nCloses #29096","Url":"https://github.com/angular/angular-cli/pull/29260","RelatedDescription":"Open PR \"refactor(@angular/build): support multiple results per application build action\" (#29260)"},{"Id":"2766206004","IsPullRequest":true,"CreatedAt":"2025-01-06T18:10:15","Actor":"clydin","Number":"29242","RawContent":null,"Title":"build: migrate tests infrastructure to `ts_project`","State":"closed","Body":"The miscellaneous test infrastructure targets within `tests/` have been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29242","RelatedDescription":"Closed or merged PR \"build: migrate tests infrastructure to `ts_project`\" (#29242)"},{"Id":"2771147409","IsPullRequest":true,"CreatedAt":"2025-01-06T18:07:29","Actor":"clydin","Number":"29259","RawContent":null,"Title":"build: fix schematics API golden for 19.0.x","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29259","RelatedDescription":"Closed or merged PR \"build: fix schematics API golden for 19.0.x\" (#29259)"},{"Id":"2767879689","IsPullRequest":true,"CreatedAt":"2025-01-06T17:19:23","Actor":"clydin","Number":"29245","RawContent":null,"Title":"build: migrate `@angular-devkit/schematics` to `ts_project`","State":"closed","Body":"The `@angular-devkit/schematics` package has been migrated to the `rules_js` ts_project rule. The tsconfig path mappings for the `@angular-devkit` scope have also been cleaned up now that all the packages within this scope have been migrated.","Url":"https://github.com/angular/angular-cli/pull/29245","RelatedDescription":"Closed or merged PR \"build: migrate `@angular-devkit/schematics` to `ts_project`\" (#29245)"},{"Id":"2766858466","IsPullRequest":true,"CreatedAt":"2025-01-06T16:00:38","Actor":"clydin","Number":"29243","RawContent":null,"Title":"refactor(@angular/build): support application incremental build result in dev-server","State":"closed","Body":"The dev-server will now leverage the incremental build result data from the application\r\nbuilder. This removes the need to directly analyze all the newly built files within the\r\ndev-server to determine what type of update is needed. Incremental build results also\r\nonly contain the files that are new and/or modified and removes the need to pass a potentially\r\nlarge amount of file content between the application build and the dev-server.","Url":"https://github.com/angular/angular-cli/pull/29243","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): support application incremental build result in dev-server\" (#29243)"},{"Id":"2770673716","IsPullRequest":true,"CreatedAt":"2025-01-06T14:33:51","Actor":"alan-agius4","Number":"29255","RawContent":null,"Title":"refactor(@angular/build): normalize source path for windows compatibility","State":"closed","Body":"\r\nThis update resolves an issue that prevents SSR from functioning correctly on Windows when using the latest Vite.\r\n","Url":"https://github.com/angular/angular-cli/pull/29255","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): normalize source path for windows compatibility\" (#29255)"},{"Id":"2770729662","IsPullRequest":false,"CreatedAt":"2025-01-06T14:33:39","Actor":"HazzMan2409","Number":"29257","RawContent":null,"Title":"Custom loader support","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nIt would nice to support custom loaders so that import statements like:\n\n`import myProperties from \"./my-properties.properties\";`\n\ncould load an export which was some custom javascript object built from the contents of the .properties file.\n\nCurrently I can use @angular-builders/custom-esbuild to load .properties files in my source and from library imports with an ng build. But with an ng serve Vite's pre-bundling causes library imports to .properties files to fail. The only workaround we have is to disable pre-bundling for the library.\n\n### Describe the solution you'd like\n\nAn API to define custom loaders so that the build option:\n\n```\n\"loader\": {\n    \".properties\": \"properties\"\n}\n```\n\nwould use a custom loader that I defined called \"properties\".\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29257","RelatedDescription":"Closed issue \"Custom loader support\" (#29257)"},{"Id":"2770495542","IsPullRequest":true,"CreatedAt":"2025-01-06T14:19:00","Actor":"alan-agius4","Number":"29254","RawContent":null,"Title":"fix(@angular-devkit/architect): provide better error when builder is not defined","State":"closed","Body":"\r\n\r\nWhen a builder is not defined a more actionable error message is now displayed.\r\n\r\nCloses #29226","Url":"https://github.com/angular/angular-cli/pull/29254","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/architect): provide better error when builder is not defined\" (#29254)"},{"Id":"2770184693","IsPullRequest":true,"CreatedAt":"2025-01-06T14:18:33","Actor":"alan-agius4","Number":"29252","RawContent":null,"Title":"fix(@angular/build): handle relative URLs when constructing new URLs during server fetch","State":"closed","Body":"\r\n\r\nEnsures proper handling of relative URLs to prevent errors in server-side fetch operations.\r\n\r\nCloses #29236","Url":"https://github.com/angular/angular-cli/pull/29252","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle relative URLs when constructing new URLs during server fetch\" (#29252)"},{"Id":"2769399610","IsPullRequest":true,"CreatedAt":"2025-01-06T10:54:34","Actor":"jsaguet","Number":"29250","RawContent":null,"Title":"fix(@angular/build): do not mark Babel _defineProperty helper function as pure","State":"closed","Body":"Fixes #29145\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n_defineProperty is marked as pure and then tree shaken when targeting Safari < 15 or Chrome < 84 which breaks the application.\r\n\r\nIssue Number: #29145\r\n\r\n## What is the new behavior?\r\n\r\n_defineProperty is not marked as pure\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29250","RelatedDescription":"Closed or merged PR \"fix(@angular/build): do not mark Babel _defineProperty helper function as pure\" (#29250)"},{"Id":"2769391285","IsPullRequest":true,"CreatedAt":"2025-01-06T10:54:20","Actor":"JeanMeche","Number":"29249","RawContent":null,"Title":"refactor(@angular/ssr): clean up comment.","State":"closed","Body":"The double JSDoc start sequence was visible in the docs (https://angular.dev/api/ssr/provideServerRoutesConfig). This commit fixes it.\r\n","Url":"https://github.com/angular/angular-cli/pull/29249","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): clean up comment.\" (#29249)"},{"Id":"2770213749","IsPullRequest":false,"CreatedAt":"2025-01-06T09:19:04","Actor":"AllenGong0","Number":"29253","RawContent":null,"Title":"angular v9 - v13 support vite or esbuild","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nMy teams are use angular versions in v9 - v13, can support vite in this versions?\nMy teams are very very need it, beacuse use these old version buid or hmr speed is too slow\n\n### Proposed solution\n\nsupport a package to support it\n\n### Alternatives considered\n\nsupport a package to support it","Url":"https://github.com/angular/angular-cli/issues/29253","RelatedDescription":"Closed issue \"angular v9 - v13 support vite or esbuild\" (#29253)"},{"Id":"2770072588","IsPullRequest":false,"CreatedAt":"2025-01-06T09:12:02","Actor":"omergafla","Number":"29251","RawContent":null,"Title":"ng build fails due to changes on fast-uri module","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n└─┬ @angular-devkit/build-angular@12.2.18\n  └─┬ @angular-devkit/core@12.2.18\n    └─┬ ajv-formats@2.1.0\n      └─┬ ajv@8.17.1\n        └── fast-uri@3.0.3\n\n\nsince yesterday (https://github.com/fastify/fast-uri/pull/113) this module (fast-uri) uses optional chaining (\"?.\") which isn't supported for Node v12.14.0\nand ng build fails due to unexpected token (\"?.\")\n\n### Minimal Reproduction\n\nng build uses this node module and now it's incompatible with node V12.14.0\n\n### Exception or Error\n\n```text\nUnexecpted Token \".\"\n```\n\n### Your Environment\n\n```text\nAngular CLI: 12.2.18\nNode: 12.14.0\nPackage Manager: npm 6.14.11\nOS: linux x64\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29251","RelatedDescription":"Closed issue \"ng build fails due to changes on fast-uri module\" (#29251)"},{"Id":"2768283193","IsPullRequest":false,"CreatedAt":"2025-01-06T09:11:03","Actor":"davidbusuttil","Number":"29246","RawContent":null,"Title":"Transition Libraries from @angular-devkit/build-angular to @angular/build","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nupgrade\n\n### Description\n\nLibraries are still using ng-packer and @angular-devkit/build-angular.\n\n### Proposed solution\n\nIntegrate libraries into @angular/build with a separate process - @angular/build:library\n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular-cli/issues/29246","RelatedDescription":"Closed issue \"Transition Libraries from @angular-devkit/build-angular to @angular/build\" (#29246)"},{"Id":"2768533558","IsPullRequest":false,"CreatedAt":"2025-01-06T09:10:54","Actor":"durai145","Number":"29247","RawContent":null,"Title":"Support for Non-ASCII Characters in Angular Project Names","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nI would like to bring attention to the current limitation in Angular CLI that restricts project names to match the regex:\n^(?:@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*/)?[a-zA-Z0-9-~][a-zA-Z0-9-._~]*$.\n\nThis restriction effectively prevents developers from using non-ASCII characters (e.g., names in native languages like Tamil, Hindi, or Chinese) in project names. For example, a name like \"உறுப்புகள்\" is rejected during project creation.\n\nWhy This Matters:\n\nCultural Representation: Developers should have the ability to use their native languages in their projects. This fosters inclusivity and better represents diverse communities.\nGlobalization: As technology continues to expand globally, frameworks and tools need to support multiple languages and character sets. ASCII-only restrictions feel outdated and limit creative freedom.\nModern Standards: Many modern systems (e.g., UTF-8) already support non-ASCII characters. Angular CLI should leverage these standards for broader compatibility.\nProposed Solution:\n\nAllow the use of Unicode characters in project names by relaxing the regex validation.\nFor compatibility (e.g., npm package names), generate an ASCII-compliant identifier internally while preserving the original name for display purposes.\nDocument any limitations or edge cases where non-ASCII characters might cause issues to ensure transparency for developers.\nImpact:\nThis enhancement would enable developers worldwide to better connect with their projects and showcase cultural identity in their work. It would also align Angular CLI with modern inclusivity standards, making it a stronger choice for a global audience.\n\nWorkarounds Are Not Ideal:\nCurrent workarounds, such as using ASCII names and displaying native language names in the UI or modifying Angular CLI locally, are not developer-friendly and add unnecessary complexity.\n\nCall to Action:\nPlease consider prioritizing this feature to make Angular more inclusive and supportive of developers from all linguistic backgrounds. I’d be happy to contribute to this effort or assist in testing if needed.\n\n\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29247","RelatedDescription":"Closed issue \"Support for Non-ASCII Characters in Angular Project Names\" (#29247)"},{"Id":"2769014449","IsPullRequest":false,"CreatedAt":"2025-01-04T21:49:36","Actor":"karptonite","Number":"29248","RawContent":null,"Title":"`application` builder not loading css from localhost correctly with `ng serve` when using remote dev with HMR","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.11\n\n### Description\n\nWhen using the `application` builder to serve on localhost, but with the main website loaded from a remote dev server, stylesheets are not loading properly for us as of Angular CLI 19. \n\nFor our development environment, we are loading our main website (including index.html) from a remote dev server (say, `dev.example.com`), but running `ng serve` from localhost. To do this, we have been serving a copy of `index.html` when appropriate (not all pages of the application use Angular) from the remote dev server, and rewriting all the `src` attributes in index.html to point `//localhost:4200/main.js`, etc so that vite, the js, and the main css load correctly.\n\nIn Angular 18, the result of this is that all the js chunk files are requested from localhost, and all of the other requests go to our dev server--this is the intended behavior. In particular, the js chunks for components had all of the styles inlined in the js file.\n\nIn Angular 19, we are seeing new requests, for css files, requests we never saw in Angular 18, presumably because these stylesheets are no longer inlined in the js. Unfortunately, these requests for css files are going to our remote dev server, but are, of course, being served by `localhost`, so we are getting 404s for all of these. \n\nI'm calling this a regression, because styles worked properly in dev for Angular 18 but not Angular 19, but I recognize that our use case is unusual. I'd like to find some solution that allows us to run a dev environment for Angular 19, probably by getting the CSS files to load from the localhost, but if there is some other solution (perhaps returning to inlining stylesheets in the js files?), I'm open to that as well.\n\n (I initially thought this was related to the `deployUrl` feature (see #26411) which we use in production to serve js and stylesheets from a CDN, and am still a little concerned about whether this will be a problem for us in production.)\n\nEDIT: As noted below in the comments, this is happening because HMR has been turned on by default in Angular 19. I suspect that the sort of configuration I'm using has never worked with HMR.\n\n### Minimal Reproduction\n\nServe `index.html` (with the `src`s rewritten to load from localhost) from a server different from localhost.\nrun `ng serve` on localhost.\nTry to load the site on from the remove server.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 18.20.5\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29248","RelatedDescription":"Open issue \"`application` builder not loading css from localhost correctly with `ng serve` when using remote dev with HMR\" (#29248)"},{"Id":"2767226172","IsPullRequest":false,"CreatedAt":"2025-01-03T10:46:01","Actor":"TobiasNoell","Number":"29244","RawContent":null,"Title":"Certain .browserslistrc contents with buildOptimizer and optimization enabled will cause NullInjectorError","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nIn Angular 19, certain `.browserslistrc` contents can lead to `NullInjectorError: No provider for [mangled name]` runtime exceptions in production builds when the `buildOptimizer` is enabled.\nThis error occurs even if the project does not contain any service that is injected somewhere.\n\nIf either:\n\n- `buildOptimizer` is set to `false`\n- `optimization` is set to `false`\n- `.browserslistrc` file is modified by changing `>0.3%` to` >0.5%`\n\nthe project runs fine (after re-compiling)\n\n### Minimal Reproduction\n\nA [example project](https://github.com/TobiasNoell/angular-tour-of-heroes) was generated to demonstrate the bug:\n\n- `buildOptimizer: true`\n- `optimization: true`\n- `.browserslistrc` file is present in the project\n\nRunning the application using `npm start` and navigating to `http://localhost:4200/` will yield the following runtime error:\n\n`ERROR NullInjectorError: R3InjectorError[t -> Ct -> Ct]:  NullInjectorError: No provider for Ct!`\n\nModifying the contents of `.browserslistrc` changing `>0.3%` to` >0.5%` will resolve the bug\n\n\n\n### Exception or Error\n\n```text\nERROR NullInjectorError: R3InjectorError[t -> Ct -> Ct]:  NullInjectorError: No provider for Ct!\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.9.0\nPackage Manager: npm 10.2.3\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29244","RelatedDescription":"Closed issue \"Certain .browserslistrc contents with buildOptimizer and optimization enabled will cause NullInjectorError\" (#29244)"},{"Id":"2765954221","IsPullRequest":false,"CreatedAt":"2025-01-03T10:45:49","Actor":"BehzodRj","Number":"29241","RawContent":null,"Title":"Issue with JavaScriptOptimizerPlugin Configuration in Angular Build","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello Angular Team,\n\nI have encountered an issue while working with Angular in an Ionic project. The problem arises during the build process when the JavaScriptOptimizerPlugin is included in the Webpack configuration. Specifically, the following error occurs:\n\nError: NullInjectorError: No provider for Mr!\n\nProblem Details\nThe issue appears to be related to the following block in node_modules/@angular-devkit/build-angular/src/tools/webpack/configs/common.js:\n\n`const extraMinimizers = [];\nif (scriptsOptimization) {\n    extraMinimizers.push(new plugins_1.JavaScriptOptimizerPlugin({\n        define: {\n            ...(buildOptions.aot ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT : GLOBAL_DEFS_FOR_TERSER),\n            'ngServerMode': isPlatformServer,\n        },\n        sourcemap: scriptsSourceMap,\n        supportedBrowsers: buildOptions.supportedBrowsers,\n        keepIdentifierNames: !environment_options_1.allowMangle || isPlatformServer,\n        removeLicenses: buildOptions.extractLicenses,\n        advanced: buildOptions.buildOptimizer,\n    }));\n}`\n\nWhen this block of code is active, the error appears. However, if I remove it, the project builds and functions correctly.\n\nConfiguration Details\nHere is an excerpt of the relevant buildOptions object for your reference:\n\n`{\n  outputPath: 'www',\n  index: 'src/index.html',\n  main: 'src/main.ts',\n  tsConfig: 'tsconfig.app.json',\n  aot: true,\n  sourceMap: { vendor: false, scripts: false },\n  optimization: { scripts: true, styles: { minify: true } },\n  extractLicenses: true,\n  buildOptimizer: true,\n  supportedBrowsers: [\n    'and_chr 131', 'chrome 131', 'edge 131', ...\n  ],\n}`\n\nAdditional Information\nI have tested this issue on multiple machines with the same results.\nRemoving the block mentioned above resolves the issue, but I am aware that modifying node_modules is not a recommended practice.\nI have also attempted clearing caches and re-installing dependencies, but the issue persists.\nRequest\nCould you please confirm whether this is a known issue with Angular's JavaScriptOptimizerPlugin or provide guidance on how to address this without manually modifying the node_modules?\n\nIf necessary, I am happy to provide additional details or create a minimal reproducible example for further investigation.\n\nBest regards,\nBehzod\nbehzod.rajabaliev@gmail.com\n\n![Image](https://github.com/user-attachments/assets/0095b048-58cb-498d-820f-eb90b1223828)\n![Image](https://github.com/user-attachments/assets/b7125a2e-81f3-48b2-afed-ec3f35b94259)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNullInjectorError: R3InjectorError(Platform: core)[t -> Mr]: \n  NullInjectorError: No provider for Mr!\n    at Oi.get (main.13dfbe05a7d37cd3.js:1:169709)\n    at Sr.get (main.13dfbe05a7d37cd3.js:1:173110)\n    at ue (main.13dfbe05a7d37cd3.js:1:168245)\n    at Qe (main.13dfbe05a7d37cd3.js:1:168324)\n    at Object.factory (main.13dfbe05a7d37cd3.js:1:281600)\n    at Sr.hydrate (main.13dfbe05a7d37cd3.js:1:174434)\n    at Sr.get (main.13dfbe05a7d37cd3.js:1:173062)\n    at AO (main.13dfbe05a7d37cd3.js:1:282030)\n    at main.13dfbe05a7d37cd3.js:1:282121\n    at Object.<anonymous> (main.13dfbe05a7d37cd3.js:1:281885)\n\nThis error occurs during the build process, and it is resolved when the following block in the @angular-devkit/build-angular package is removed:\n\nconst extraMinimizers = [];\nif (scriptsOptimization) {\n    extraMinimizers.push(new plugins_1.JavaScriptOptimizerPlugin({\n        define: {\n            ...(buildOptions.aot ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT : GLOBAL_DEFS_FOR_TERSER),\n            'ngServerMode': isPlatformServer,\n        },\n        sourcemap: scriptsSourceMap,\n        supportedBrowsers: buildOptions.supportedBrowsers,\n        keepIdentifierNames: !environment_options_1.allowMangle || isPlatformServer,\n        removeLicenses: buildOptions.extractLicenses,\n        advanced: buildOptions.buildOptimizer,\n    }));\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.12.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.5\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.6\n@angular-devkit/core         19.0.6\n@angular-devkit/schematics   19.0.6\n@angular/cli                 19.0.6\n@schematics/angular          19.0.6\n\nSystem:\n\n   NodeJS : v22.12.0 (C:\\Program Files\\nodejs\\node.exe)\n   npm    : 10.9.0\n   OS     : Windows 10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29241","RelatedDescription":"Closed issue \"Issue with JavaScriptOptimizerPlugin Configuration in Angular Build\" (#29241)"},{"Id":"2765108253","IsPullRequest":false,"CreatedAt":"2024-12-31T14:10:21","Actor":"kajal-neema","Number":"29240","RawContent":null,"Title":"Angular 19/18 build is not taking any new file to the build and just generating artifact from the existing files","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI am trying to create a new project through angular version 19/18 , and after npm install , i run he ng serve... so if icreate any new component this change is not detected by angular but if i change the existing file like app.component.ts its detecting the code changes\nFacing thiss issue since yesterday only earlier it was working \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo error but any new  file is not detected and not getting build as well\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... google-maps, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.8\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29240","RelatedDescription":"Open issue \"Angular 19/18 build is not taking any new file to the build and just generating artifact from the existing files\" (#29240)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2773900192","IsPullRequest":true,"CreatedAt":"2025-01-07T22:56:13","Actor":"essjay05","Number":"30284","RawContent":null,"Title":"fix(material/timepicker): adds aria-labelledby to timepicker toggle","State":"open","Body":"Updates Angular Component Timepicker so the timepicker toggle uses the aria-labelledby value for the timepicker toggle button to make it more accessible.\r\n\r\nFixes b/380308482","Url":"https://github.com/angular/components/pull/30284","RelatedDescription":"Open PR \"fix(material/timepicker): adds aria-labelledby to timepicker toggle\" (#30284)"},{"Id":"2773711693","IsPullRequest":false,"CreatedAt":"2025-01-07T20:50:36","Actor":"tp1906","Number":"30283","RawContent":null,"Title":"Radio Button Sizing Options","State":"open","Body":"### Feature Description\n\nIs it possible to provide a way to decrease the size of the radio button.  I've been able to decrease it's size but the ripple placement is off.\n\n### Use Case\n\nIt would allow for a more robust application when dealing with smaller screen sizes.","Url":"https://github.com/angular/components/issues/30283","RelatedDescription":"Open issue \"Radio Button Sizing Options\" (#30283)"},{"Id":"2773422775","IsPullRequest":true,"CreatedAt":"2025-01-07T17:52:17","Actor":"amysorto","Number":"30282","RawContent":null,"Title":"docs: Update references to M2 theming guide color variants section and add link to styling tab for color input descriptions","State":"open","Body":"Fixes #30246","Url":"https://github.com/angular/components/pull/30282","RelatedDescription":"Open PR \"docs: Update references to M2 theming guide color variants section and add link to styling tab for color input descriptions\" (#30282)"},{"Id":"2768827763","IsPullRequest":false,"CreatedAt":"2025-01-07T17:17:21","Actor":"tayambamwanza","Number":"30267","RawContent":null,"Title":"docs-bug(THEMING): simple M3 Button colour variants example","State":"closed","Body":"### Documentation Feedback\n\nIt took me a while but I figured out how to acheive similar behaviour to the color input that m2 had without using `  @include mat.color-variants-backwards-compatibility($theme);`\n\nI chose to use \"tertiary\" as my \"accent\"\n\nFirst I ran \n\n`npm run ng generate @angular/material:theme-color -- --primary-color '#7AA802' --secondary-color '' --tertiary-color '#276667' --neutral-color '' --include-high-contrast --directory=src/app/styles/`\n\nAfter that in the styles.scss I added these 2 classes\n\n```scss\n// Custom Theming for Angular Material\n// For more information: https://material.angular.io/guide/theming\n@use '@angular/material' as mat;\n@use 'app/styles/theme-colors' as theme;\n\n:root {\n  .tertiary {\n    @include mat.theme((\n      color: theme.$tertiary-palette,\n    ));\n  }\n\n  .error {\n    @include mat.theme((\n      color: mat.$red-palette,\n    ));\n  }\n}\n```\n\nI then removed the color input from my buttons and then added the appropriate class e.g. (no need to add a primary class as \"primary\" is the default)\n\n```html\n  <button mat-flat-button> View </button>\n  <button mat-flat-button class=\"tertiary\"> Close </button>\n  <button mat-flat-button class=\"error\"> Delete </button>\n```\n\nThis restored behaviour similar to the old color input\n\n\nI believe an example of similar steps would be helpful to those moving over from m2 to m3 as this was the single biggest issue I faced, the key paragraph was here, so maybe such an example could be provided there:\n\nhttps://material.angular.io/guide/theming#context-specific-themes\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#context-specific-themes","Url":"https://github.com/angular/components/issues/30267","RelatedDescription":"Closed issue \"docs-bug(THEMING): simple M3 Button colour variants example\" (#30267)"},{"Id":"2773340889","IsPullRequest":true,"CreatedAt":"2025-01-07T17:06:01","Actor":"crisbeto","Number":"30281","RawContent":null,"Title":"fix(material/tabs): switch away from animations module","State":"open","Body":"Reworks the tabs so they don't depend on the animations module anymore. This is both simpler and avoids some of the pitfalls of the animations module.","Url":"https://github.com/angular/components/pull/30281","RelatedDescription":"Open PR \"fix(material/tabs): switch away from animations module\" (#30281)"},{"Id":"2773336594","IsPullRequest":true,"CreatedAt":"2025-01-07T17:03:42","Actor":"amysorto","Number":"30280","RawContent":null,"Title":"fix(material/toolbar): Update icon button color to match label text color token","State":"open","Body":"Fixes #30279\r\n\r\nNote: this only affects icon buttons that have the `mat-unthemed` class. \r\n\r\n![image](https://github.com/user-attachments/assets/19e56c19-0423-425e-8c54-b5d24eecee15)\r\n","Url":"https://github.com/angular/components/pull/30280","RelatedDescription":"Open PR \"fix(material/toolbar): Update icon button color to match label text color token\" (#30280)"},{"Id":"2769188315","IsPullRequest":true,"CreatedAt":"2025-01-07T16:51:11","Actor":"crisbeto","Number":"30268","RawContent":null,"Title":"fix(material/sidenav): remove deprecated API usage","State":"closed","Body":"The sidenav was using `AfterRenderPhase` which is deprecated. These changes switch it to the supported API.","Url":"https://github.com/angular/components/pull/30268","RelatedDescription":"Closed or merged PR \"fix(material/sidenav): remove deprecated API usage\" (#30268)"},{"Id":"2772655542","IsPullRequest":false,"CreatedAt":"2025-01-07T11:52:48","Actor":"richardsengers","Number":"30279","RawContent":null,"Title":"bug(Toolbar): toolbar-overrides container-text-color does not set  var(--mat-sys-on-primary) to icons","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nM2 version\n\n### Description\n\nSince we now need to override the toolbar to make use of colors, the mat-icons are always dark, even if we set\n:root {\n  @include mat.toolbar-overrides((\n    container-background-color: var(--mat-sys-primary),\n    container-text-color: var(--mat-sys-on-primary)\n  ));\n}\n\nor maybe an extra override value to set?\nmdc-icon-button-icon-color: var(--mat-sys-on-primary)\n\n\n### Reproduction\n\nStackblits not working at the moment, but It think it is very easy to repsoduce\nhttps://stackblitz.com/edit/bfyxhb6f-qxwgfzjr?file=src%2Fstyles.scss\n\n### Expected Behavior\n\nI would expect all icons to have a var(--mat-sys-on-primary) when set to the toolbar container\n\n### Actual Behavior\n\n<img width=\"181\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/118d6cdc-cb89-4790-974f-1a4fc94076f2\" />\n\nShould be:\n\n<img width=\"187\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/32fc59dc-6030-4b6c-b00d-a6e244c43f6f\" />\n\n\n### Environment\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30279","RelatedDescription":"Open issue \"bug(Toolbar): toolbar-overrides container-text-color does not set  var(--mat-sys-on-primary) to icons\" (#30279)"},{"Id":"2772493645","IsPullRequest":false,"CreatedAt":"2025-01-07T10:38:05","Actor":"MikaStark","Number":"30278","RawContent":null,"Title":"bug(datepicker): Luxon date adapter consider by default Sunday as the first day of week for any locale","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the Luxon date adapter, the first day of the week is always set to Sunday, regardless of the selected locale. However, in certain locales (e.g., French), the first day of the week should be Monday. This behavior can cause inconsistencies in applications relying on localized date formats.\n\nTo address this issue, we can provide custom options for the Luxon date adapter by using a factory function. This factory dynamically calculates the correct firstDayOfWeek based on the current locale, leveraging Luxon’s Info.getStartOfWeek method.\n\nHere's how to configure it:\n\n```ts\nimport { MAT_LUXON_DATE_ADAPTER_OPTIONS } from '@angular/material-luxon-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Info } from 'luxon';\nimport { inject } from '@angular/core';\n\n{\n  provide: MAT_LUXON_DATE_ADAPTER_OPTIONS,\n  useFactory: () => {\n    const locale = inject<string>(MAT_DATE_LOCALE); // Retrieve the current locale\n    const firstDayOfWeek = Info.getStartOfWeek({ locale }); // Get the first day of the week for the locale\n    return { firstDayOfWeek };\n  },\n},\n```\n\nLuxon relies on the Intl.Locale.prototype.getWeekInfo API to determine the first day of the week. Unfortunately, this API is not supported in Firefox (as of now). However, Luxon includes a fallback mechanism that assumes Monday as the first day of the week, which aligns with the ISO standard.\n\nFor more details on getWeekInfo, refer to the [MDN documentation](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gao3m1fm?file=src%2Fexample%2Fdatepicker-overview-example.ts,src%2Fmain.ts\nSteps to reproduce:\n1. Open date picker and see that \"D\" (\"Dimanche\" aka. Sunday) is the first day of the week which is invalid as LOCAL_ID is \"fr\"\n2. Uncomment the last provider in `bootstrapApplication`\n3. Open date picker and see that \"L\" (\"Lundi\" aka. Monday) is the correct first day\n\n\n### Expected Behavior\n\nFirst day of week should depends on selected locale.\n\n### Actual Behavior\n\nThe first day of the week is always set to Sunday, regardless of the selected locale.\n\n### Environment\n\n- Angular: 19.0.5\n- CDK/Material: 19.0.4\n- Browser(s): Chrome 131.0.6778.205 (64 bits)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30278","RelatedDescription":"Open issue \"bug(datepicker): Luxon date adapter consider by default Sunday as the first day of week for any locale\" (#30278)"},{"Id":"2771287064","IsPullRequest":false,"CreatedAt":"2025-01-07T08:04:06","Actor":"martinboue","Number":"30276","RawContent":null,"Title":"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`mat-icon-button` ripple color is incorrect when the button is a child of a selected `mat-radio-button` .\n\n### Reproduction\n\ncomponent.html:\n\n```\n<mat-radio-group>\n\t<mat-radio-button>\n\t\t<span>Option 1</span>\n\t\t<button mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</mat-radio-button>\n</mat-radio-group>\n```\n\n### Expected Behavior\n\nclose icon button ripple color is light grey/transparent:\n![Image](https://github.com/user-attachments/assets/1ed8a6c2-d6f3-46d6-96a8-7dc72de78ba2)\n\n\n### Actual Behavior\n\nclose icon button ripple color is the primary opaque color:\n![Image](https://github.com/user-attachments/assets/4e1a9d9f-2b7f-4aa6-a55a-6076a0ec1258)\n \n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30276","RelatedDescription":"Closed issue \"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button\" (#30276)"},{"Id":"2772069473","IsPullRequest":false,"CreatedAt":"2025-01-07T07:59:38","Actor":"linlexing","Number":"30277","RawContent":null,"Title":"Oh, my God. Only the two latest versions of major browsers","State":"closed","Body":"> Chrome 78 isn't supported. We support the two latest versions of major browsers. Chrome 78 was released more than 4 years ago. \n\n _Originally posted by @crisbeto in [#30270](https://github.com/angular/components/issues/30270#issuecomment-2572517828)_","Url":"https://github.com/angular/components/issues/30277","RelatedDescription":"Closed issue \"Oh, my God. Only the two latest versions of major browsers\" (#30277)"},{"Id":"2765335638","IsPullRequest":true,"CreatedAt":"2025-01-07T02:03:10","Actor":"IgnacioCabanellas","Number":"30261","RawContent":null,"Title":"fix(material/menu): prevent interaction with <a> in disabled menu items (#30203)","State":"closed","Body":"Fix the issue where <a> tags inside disabled mat-menu-items were still interactive, allowing users to navigate even when the menu item was disabled.\r\n\r\n### Problem:\r\n- The anchor links inside disabled `mat-menu-items` were still interactive.\r\n- Users could right click on them and navigate to the associated link with the `Open link in new tab`  for example, despite the items being disabled.\r\n\r\n### Solution:\r\n- Added the CSS rule pointer-events: none; to disable interaction with anchor tags inside disabled mat-menu-item elements.\r\n\r\n### Additional Information:\r\n- A StackBlitz demo is available to showcase both the bug and the fix: https://stackblitz.com/~/github.com/IgnacioCabanellas/met-menu-item-demo\r\n\r\nFixes #30203\r\n","Url":"https://github.com/angular/components/pull/30261","RelatedDescription":"Closed or merged PR \"fix(material/menu): prevent interaction with <a> in disabled menu items (#30203)\" (#30261)"},{"Id":"2766578370","IsPullRequest":true,"CreatedAt":"2025-01-06T21:02:25","Actor":"kseamon","Number":"30265","RawContent":null,"Title":"perf(material/tooltip): Use afterNextRender to invoke aria describer …","State":"closed","Body":"…to align layout updates with other components using afterNextRender.\r\n\r\nIn tandem with #30242 reduces layout thrashing for tables with sticky columns and tooltips.","Url":"https://github.com/angular/components/pull/30265","RelatedDescription":"Closed or merged PR \"perf(material/tooltip): Use afterNextRender to invoke aria describer …\" (#30265)"},{"Id":"2771249791","IsPullRequest":false,"CreatedAt":"2025-01-06T18:54:49","Actor":"martinboue","Number":"30275","RawContent":null,"Title":"bug(form-field): Default options not applied in dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`MAT_FORM_FIELD_DEFAULT_OPTIONS` do not apply to form-field inside material dialog component.\n\n\n### Reproduction\n\nin root app.component.ts:\n```\n@Component({\n\t...\n\tproviders: [\n\t\t{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } }\n\t]\n})\nexport class AppComponent { ... }\n```\nin dialog.component.html:\n\n```\n<h2 mat-dialog-title i18n>My title</h2>\n<mat-dialog-content>\n\t<mat-form-field>\n\t\t<mat-label>Some field</mat-label>\n\t\t<input matInput type=\"text\">\n\t</mat-form-field>\n</mat-dialog-content>\n```\n\ndialog.component is opened using `this.dialog.open(DialogComponent)`\n\n### Expected Behavior\n\nOutline appearance\n![Image](https://github.com/user-attachments/assets/1276bb87-2d2c-4cc8-8335-1fe8c9cf9321)\n\n### Actual Behavior\n\nFill appearance\n![Image](https://github.com/user-attachments/assets/3035ef89-77fd-4b95-8e14-51dfce379042)\n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30275","RelatedDescription":"Open issue \"bug(form-field): Default options not applied in dialog\" (#30275)"},{"Id":"2771196552","IsPullRequest":true,"CreatedAt":"2025-01-06T18:36:14","Actor":"josephperrott","Number":"30274","RawContent":null,"Title":"[Patch version] build: update angular shared dev-infra code to 359350b","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30274","RelatedDescription":"Closed or merged PR \"[Patch version] build: update angular shared dev-infra code to 359350b\" (#30274)"},{"Id":"2771184742","IsPullRequest":true,"CreatedAt":"2025-01-06T18:25:45","Actor":"josephperrott","Number":"30273","RawContent":null,"Title":"build: update angular shared dev-infra code to 359350b","State":"closed","Body":"Closes #30219 as a pr takeover","Url":"https://github.com/angular/components/pull/30273","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code to 359350b\" (#30273)"},{"Id":"2770794396","IsPullRequest":false,"CreatedAt":"2025-01-06T14:35:31","Actor":"tp1906","Number":"30272","RawContent":null,"Title":"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nI'm unable to use mat-divider inside the mat-dialog when setting the vertical property to true.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Create mat-dialog\n2. Add mat-dialog-actions\n3. Add mat-divider with vertical option as true\n\n\n### Expected Behavior\n\nI expect to see a vertical divider between buttons.\n\n### Actual Behavior\n\nNothing is shown.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30272","RelatedDescription":"Open issue \"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog\" (#30272)"},{"Id":"2764436332","IsPullRequest":false,"CreatedAt":"2025-01-06T08:34:51","Actor":"gangadharjannu","Number":"30255","RawContent":null,"Title":"bug(menu): Nested Mat Menu misaligns and appears on click instead of hover for a reusable component with content projection","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm creating a reusable mat menu component with content projection.\n\nFor a single menu, it is working fine without any issue, but for nested menu, it is not showing the default behavior:\n\n1. Not showing right chevron for nested menu trigger \n2. Nested menu opens only on click instead of on hover\n3. Nested menu position is not aligned with parent menu\n\n<img width=\"153\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f9a2a52-093e-49e5-8715-89f8ea47373c\" />\n\nThis issue also is in Angular 8 and 18\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-waqmm6ja?file=src%2Fapp%2Fmenu-panel%2Fmenu-panel.component.html (Angular 18)\nhttps://stackblitz.com/edit/dynamic-material-menu-angular-8-dzzqt2cq?file=src%2Fapp%2Fmenu-panel%2Fmenu-panel.component.html (Angular 8)\n\nSteps to reproduce:\n1. Open StackBlitz, Click on 'Animal index' menu trigger which should open Mat Menu, click on 'Vertebrates' which should opens nested menu\n\n\n\n### Expected Behavior\n\nIt should \n1. Show right chevron for nested menu trigger \n2. Nested menu opens on hover\n3. Nested menu position aligned with parent menu\n\n<img width=\"345\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/268dca45-db69-4a47-99f4-dbb04b65fc2a\" />\n\n\n\n\n### Actual Behavior\n\n1. Not showing right chevron for nested menu trigger \n2. Nested menu opens only on click instead of on hover\n3. Nested menu position is not aligned with parent menu\n\n<img width=\"153\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f9a2a52-093e-49e5-8715-89f8ea47373c\" />\n\n### Environment\n\n- Angular: 8 and 18\n- CDK/Material: 18\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30255","RelatedDescription":"Closed issue \"bug(menu): Nested Mat Menu misaligns and appears on click instead of hover for a reusable component with content projection\" (#30255)"},{"Id":"2769289836","IsPullRequest":false,"CreatedAt":"2025-01-06T08:32:23","Actor":"NkhilKajrekar","Number":"30269","RawContent":null,"Title":"Button style is not getting applied","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nWe migrated from angular Material 14 to angular Material 18 we observed that after migration buttons are not getting rounded corner.  \nif we add below variable then only buttons are getting rounded corner \n  --mdc-button-border-radius: 28px;\n  --mdc-raised-button-border-radius: 28px;\n  --mdc-protected-button-container-shape: 28px;\nIf we create new project with angular Material 18 then this issue is not appearing.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Migrate angular project to Material 18 from 14\n2. check the button appearance \n\n\n### Expected Behavior\n\nButton should have rounded corner\n\n### Actual Behavior\n\nbuttons are not appearing with rounded corner\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30269","RelatedDescription":"Closed issue \"Button style is not getting applied\" (#30269)"},{"Id":"2770094103","IsPullRequest":true,"CreatedAt":"2025-01-06T08:13:15","Actor":"crisbeto","Number":"30271","RawContent":null,"Title":"refactor(multiple): use renderer for manually-bound events with options","State":"open","Body":"This is a second attempt at landing the changes from #30195. I've removed some of the riskier changes.\r\n\r\nSwitches all manually-bound event handlers that were passing options to go through the renderer.","Url":"https://github.com/angular/components/pull/30271","RelatedDescription":"Open PR \"refactor(multiple): use renderer for manually-bound events with options\" (#30271)"},{"Id":"2769887343","IsPullRequest":false,"CreatedAt":"2025-01-06T08:08:14","Actor":"linlexing","Number":"30270","RawContent":null,"Title":"bug( overlay): @layer not work at chrome 78","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nold browser not support cascade layers css command,such as @layer.all overlay div not visible, the z-index not set.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\noverlay can work\n\n### Actual Behavior\n\noverlay not work,css error\n\n### Environment\n\n- Angular:\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n- CDK/Material:\n@angular/cdk                    19.0.4\n@angular/material               19.0.4\n- Browser(s):\nchrome 78.0.3904.70 \n- Operating System (e.g. Windows, macOS, Ubuntu):\nwindows","Url":"https://github.com/angular/components/issues/30270","RelatedDescription":"Closed issue \"bug( overlay): @layer not work at chrome 78\" (#30270)"},{"Id":"2764703890","IsPullRequest":false,"CreatedAt":"2025-01-03T21:16:59","Actor":"GeorgeKnap","Number":"30256","RawContent":null,"Title":"bug(icon): Error retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nAfter migrating from material 18 to 19 I'm getting runtime error on all of my svg icons. \n\n```\nError retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'\n at Object.error (icon.mjs:969:40)\n    at ConsumerObserver2.error (Subscriber.js:100:25)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at tap.js:28:18\n    at OperatorSubscriber2._this._error (OperatorSubscriber.js:21:9)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subject.js:66:29\n    at errorContext (errorContext.js:23:5)\n    at Subject2.error (Subject.js:59:5)\n    at Object.error (share.js:63:18)\n    at ConsumerObserver2.error (Subscriber.js:100:25)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at OperatorSubscriber2._this._next (OperatorSubscriber.js:16:21)\n    at Subscriber2.next (Subscriber.js:32:12)\n    at Observable2._subscribe (innerFrom.js:51:18)\n    at Observable2._trySubscribe (Observable.js:33:19)\n    at Observable.js:27:115\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at mergeInternals (mergeInternals.js:54:10)\n    at mergeMap.js:20:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at filter.js:6:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at map.js:6:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at map.js:6:12\n```\n\nmy icons are registered in MatIconsRegistry like this\n```\nmatIconRegistry.addSvgIconInNamespace(\n        'gk',\n        'bike',\n        domSanitizer.bypassSecurityTrustResourceUrl('assets/img/bike.svg')\n      );\n```\n provided via app initializer:\n```\nprovideAppInitializer(() => registerSvgIcons(inject(MatIconRegistry), inject(DomSanitizer))),\n```\nand used in component\n```\n<mat-icon svgIcon=\"gk:bike\"></mat-icon>\n```\nI run all the automatic migrations and I'm not aware any breaking changes here.\n\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nno error expected just like in material 18\n\n### Actual Behavior\n\nerror above\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30256","RelatedDescription":"Closed issue \"bug(icon): Error retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'\" (#30256)"},{"Id":"2767421842","IsPullRequest":false,"CreatedAt":"2025-01-03T11:32:22","Actor":"benelliott","Number":"30266","RawContent":null,"Title":"docs-bug(theming): Update M2 theme guide with new `theme` mixin","State":"open","Body":"### Documentation Feedback\n\nI am trying to migrate an M2 app to M3 using the documentation on this page [A]: \n\nhttps://material.angular.io/guide/material-2-theming#how-to-migrate-an-app-from-material-2-to-material-3\n\nHowever there are some incongruities when comparing to the guide to theming an M3 app from scratch here [B]:\n\nhttps://material.angular.io/guide/theming#getting-started\n\nNamely, page A implies that you must use the `mat.define-theme` mixin to create a new M3 theme, with no reference of `mat.theme`:\n\n> Create a new M3 theme object using define-theme and pass it everywhere you were previously passing your M2 theme. All Angular Material mixins that take an M2 theme are compatible with M3 themes as well.\n\nWhile page B only mentions `mat.define-theme` in the context of legacy M2 themes:\n\n> If your application depends on a version before v19, or if your application's theme is applied using a theme config created with mat.define-theme, mat.define-light-theme, or mat.define-dark-theme, then you can refer to the theming guides at [v18.material.angular.io/guides](https://v18.material.angular.io/guides).\n\nAnd then onwards only refers to `mat.theme` for defining an M3 theme. \n\nThe docs don't really explain how to use `define-theme` to generate an M3 theme, and it's unclear that the output of `define-theme` is not comparable to the config that can be passed to `mat.theme`. Similarly, it's not clear that a \"valid\" M3 theme config (as can be passed to `mat.theme`) is not sufficient to be passed to a mixin such as `mat.color-variants-backwards-compatibility`.\n\nSome documentation that clarifies the difference between `define-theme` and `theme` would really help here I think. It might also be worth linking to https://v18.material.angular.io/guide/theming from the M2-M3 migration page (https://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles) as there is otherwise no way to see how `define-theme` should be called (despite it being mandatory for the migration).\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles","Url":"https://github.com/angular/components/issues/30266","RelatedDescription":"Open issue \"docs-bug(theming): Update M2 theme guide with new `theme` mixin\" (#30266)"},{"Id":"2764951847","IsPullRequest":true,"CreatedAt":"2025-01-03T07:53:44","Actor":"crisbeto","Number":"30259","RawContent":null,"Title":"fix(cdk/scrolling): avoid SSR error in CdkVirtualScrollableWindow","State":"closed","Body":"The `CdkVirtualScrollableWindow` was referring to the `document` directly which can break in SSR. These changes use the DI token instead.","Url":"https://github.com/angular/components/pull/30259","RelatedDescription":"Closed or merged PR \"fix(cdk/scrolling): avoid SSR error in CdkVirtualScrollableWindow\" (#30259)"},{"Id":"2766387391","IsPullRequest":false,"CreatedAt":"2025-01-02T17:31:45","Actor":"tayambamwanza","Number":"30264","RawContent":null,"Title":"bug(THEMING): When generating custom color pallette $secondary-palette is not generated","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen generating a custom theme $secondary-pallette is missing\n\n### Reproduction\n\nRun \n\n```\nng generate @angular/material:theme-color -- --primary-color '#FFFFFF' --secondary-color '#000000' --tertiary-color '#FF9800' --neutral-color ''\n```\n\n\n### Expected Behavior\n\nIn the _theme-colors.scss it should generates:\n\n```scss\n$primary-palette: map.merge(map.get($_palettes, primary), $_rest);\n$secondary-palette: map.merge(map.get($_palettes, secondary), $_rest);\n$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);\n```\n\n### Actual Behavior\n\nIn the _theme-colors.scss it generates:\n\n```scss\n$primary-palette: map.merge(map.get($_palettes, primary), $_rest);\n$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);\n```\n\n### Environment\n\n- Angular: 19.0.5\n","Url":"https://github.com/angular/components/issues/30264","RelatedDescription":"Closed issue \"bug(THEMING): When generating custom color pallette $secondary-palette is not generated\" (#30264)"},{"Id":"2764730828","IsPullRequest":true,"CreatedAt":"2025-01-02T16:38:25","Actor":"crisbeto","Number":"30257","RawContent":null,"Title":"build: bump year","State":"closed","Body":"Happy New Year! 🎉","Url":"https://github.com/angular/components/pull/30257","RelatedDescription":"Closed or merged PR \"build: bump year\" (#30257)"},{"Id":"2765639060","IsPullRequest":true,"CreatedAt":"2025-01-02T16:37:47","Actor":"crisbeto","Number":"30263","RawContent":null,"Title":"fix(cdk/menu): avoid re-opening the menu on enter","State":"closed","Body":"Fixes that the CDK menu was re-opening immediately on enter presses on elements that aren't buttons or links.\r\n\r\nFixes #30250.","Url":"https://github.com/angular/components/pull/30263","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): avoid re-opening the menu on enter\" (#30263)"},{"Id":"2764996858","IsPullRequest":true,"CreatedAt":"2025-01-02T08:43:51","Actor":"matrix-compute","Number":"30260","RawContent":null,"Title":"Refs/heads/main","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30260","RelatedDescription":"Closed or merged PR \"Refs/heads/main\" (#30260)"},{"Id":"2765574433","IsPullRequest":false,"CreatedAt":"2025-01-02T07:39:08","Actor":"DerBasler","Number":"30262","RawContent":null,"Title":"bug(@angular/material/core): CanUpdateErrorState and mixinErrorState are removed","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nDisclaimer: I am not sure if this is a bug or just needs some documentation. (I could not find anything about this in the recent changelog)\n\n@angular/material/core used to export CanUpdateErrorState and mixinErrorState which it does not anymore.\n\nI can see it getting deprecated here: https://github.com/DerBasler/components/commit/94306f370d7cdb71d6dd0b55d3274bf4bb310ed5#diff-606a332883a0dda9b5ef3fa3473ab14ab59820c71ae2b04f801ec4d1d4e0ccb4R85\n\nand removed here: https://github.com/DerBasler/components/commit/5b8d8c396c7c91d11ba2126ed9387712c4c82614\n\nBut there is no mention in the changelog that I could find and no example how to migrate this.\n\nI will post my findings here once I know more.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nPreferably would be some automatic migration in the cli otherwise a checkpoint in the migration checklist from 18 to 19\n\n### Actual Behavior\n\nBuild fails\n\n### Environment\n\n- Angular: 19.0.6\n- CDK/Material: 19.0.4\n- Browser(s): - (fails to build)\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30262","RelatedDescription":"Open issue \"bug(@angular/material/core): CanUpdateErrorState and mixinErrorState are removed\" (#30262)"},{"Id":"2764950560","IsPullRequest":false,"CreatedAt":"2025-01-01T09:17:57","Actor":"danielsharvey","Number":"30258","RawContent":null,"Title":"bug(mat-tree): How to maintain tree expansion state if TreeControl is deprecated?","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\npre v18.2.0\n\n### Description\n\nPreviously, it was possible to maintain the expansion state independent of the MatTree (rendered) component by using a TreeControl.\n\nWith TreeControl deprecated, this does not appear possible any longer.\n\nI rely on this feature so would appreciate consideration of a path forward.\n\nOf note, the selection model is maintained privately in MatTree:\nhttps://github.com/angular/components/blob/b961966d285c1f4986d214084ff585a713adc3bd/src/cdk/tree/tree.ts#L366-L372\n\n\nNote that this is not a duplicate of #29856, which looks to relate to accessing some of the methods of TreeControl, which have been made available on MatTree itself.\n\n### Reproduction\n\nI can produce a reproduction but I believe the regression has been clearly explained above and a reproduction does not add value.\n\n### Expected Behavior\n\nThere is a mechanism for maintaining expansion state independent of the rendered component.\n\n### Actual Behavior\n\nExpansion state is lost when the component is destroyed.\n\n### Environment\n\n```\nAngular CLI: 18.0.3\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.0.2\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1800.3\n@angular-devkit/build-angular     18.0.3\n@angular-devkit/core              18.0.3\n@angular-devkit/schematics        18.0.3\n@angular/cdk                      18.2.14\n@angular/cli                      18.0.3\n@angular/flex-layout              14.0.0-beta.41\n@angular/material                 18.2.14\n@angular/material-luxon-adapter   18.2.14\n@schematics/angular               18.0.3\nng-packagr                        18.0.0\nrxjs                              7.8.1\ntypescript                        5.4.5\nzone.js                           0.14.4\n```","Url":"https://github.com/angular/components/issues/30258","RelatedDescription":"Open issue \"bug(mat-tree): How to maintain tree expansion state if TreeControl is deprecated?\" (#30258)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-08T03:30:02.640879Z","RunDurationInMilliseconds":1685}