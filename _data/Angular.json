{"Data":{"Angular-Issues":{"Issues":[{"Id":"2805742425","IsPullRequest":false,"CreatedAt":"2025-01-23T02:16:52","Actor":"nickbelling","Number":"59676","RawContent":null,"Title":"Expose `createInputSignal`, or ease restrictions on static analysis for Signal functions to reduce boilerplate","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nThe Angular CDK provides `coercion` functions to make it easy to transform `input` values. For example:\n\n```ts\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\npublic readonly canEdit = input<boolean, BooleanInput>(false, { transform: coerceBooleanProperty });\npublic readonly canDelete = input<boolean, BooleanInput>(false, { transform: coerceBooleanProperty });\n```\n\nThis makes it easy to use the component like below, where simply the presence of an empty `canEdit` or `canDelete` attribute will set the `input` Signal's value to `true`:\n\n```html\n<my-component canEdit canDelete />\n```\n\nWhen using something like Prettier with an 80-char line length, each input defined like this becomes three lines long:\n\n```ts\n    public readonly canEdit = input(false, {\n        transform: coerceBooleanProperty,\n    });\n    public readonly canDelete = input(true, {\n        transform: coerceBooleanProperty,\n    });\n```\n\nThis is a lot of boilerplate. Ideally, I'd be able to do create a utility function like the following:\n\n```ts\nexport function booleanInput(defaultValue: boolean): InputSignalWithTransform<boolean, BooleanInput> {\n    return input(defaultValue, { transform: coerceBooleanProperty });\n}\n```\n\n```ts\npublic readonly canEdit = booleanInput(false);\npublic readonly canDelete = booleanInput(false);\n```\n\nHowever the above code isn't valid, because:\n\n`✘ [ERROR] TS-998110: Unsupported call to the input function. This function can only be called in the initializer of a class member. [plugin angular-compiler]`\n\nThat's fair, so next I figured I'd try and simplify things by doing:\n\n```ts\nconst boolTransform: InputOptionsWithTransform<boolean, BooleanInput> = {\n    transform: coerceBooleanProperty\n};\n```\n\n```ts\npublic readonly canEdit = input(false, boolTransform);\npublic readonly canDelete = input(false, boolTransform);\n```\n\nHowever this **also** isn't valid, because:\n\n`✘ [ERROR] TS-991010: Argument needs to be an object literal that is statically analyzable. [plugin angular-compiler]`\n\nI understand why both of these restrictions exist, but it would be nice to be able to avoid needing to rewrite out the entire options object for every Signal when they are all exactly the same.\n\n### Proposed solution\n\nI'm unsure of any knock-on effects of exposing it, but `core/src/authoring/input` contains the below function:\n\n```ts\nexport function createInputSignal<T, TransformT>(\n  initialValue: T,\n  options?: InputOptions<T, TransformT>,\n): InputSignalWithTransform<T, TransformT>;\n```\n\nIf this were exposed from `@angular/core`, it could be possible to write wrapper utilities for signals such as the `booleanInput()` example I described, or other shortcuts such as a number-based signal that has min/max values and normalizes values to be within range, etc.\n\n### Alternatives considered\n\nAlternatively, relaxing (or expanding) the static analysis of Options objects would mean that it would be easier to repeat the same transforms/options throughout the codebase even when using the base `input`/`model`/etc functions.","Url":"https://github.com/angular/angular/issues/59676","RelatedDescription":"Open issue \"Expose `createInputSignal`, or ease restrictions on static analysis for Signal functions to reduce boilerplate\" (#59676)"},{"Id":"2805319176","IsPullRequest":true,"CreatedAt":"2025-01-22T21:27:09","Actor":"thePunderWoman","Number":"59674","RawContent":null,"Title":"fix(core): fixes test timer-based test flakiness in CI","State":"closed","Body":"This converts two tests that rely on timers to use fakeAsync. This resolves the flakiness.\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59674","RelatedDescription":"Closed or merged PR \"fix(core): fixes test timer-based test flakiness in CI\" (#59674)"},{"Id":"2805320628","IsPullRequest":true,"CreatedAt":"2025-01-22T20:52:33","Actor":"arturovt","Number":"59675","RawContent":null,"Title":"refactor(docs-infra): prevent leak in tutorial component","State":"open","Body":"In this commit, we're using the `from()` in the `adev-tutorial` component, which allows us to invert a dependency and avoid memory leaks. Because `then()` would be executed even if the component is already destroyed.","Url":"https://github.com/angular/angular/pull/59675","RelatedDescription":"Open PR \"refactor(docs-infra): prevent leak in tutorial component\" (#59675)"},{"Id":"2805216056","IsPullRequest":true,"CreatedAt":"2025-01-22T19:49:18","Actor":"AndrewKushnir","Number":"59673","RawContent":null,"Title":"Bump version to \"v19.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59673","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.0\" with changelog.\" (#59673)"},{"Id":"2805206912","IsPullRequest":true,"CreatedAt":"2025-01-22T19:43:44","Actor":"AndrewKushnir","Number":"59672","RawContent":null,"Title":"docs: release notes for the v19.1.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59672","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.3 release\" (#59672)"},{"Id":"2805202682","IsPullRequest":true,"CreatedAt":"2025-01-22T19:41:17","Actor":"AndrewKushnir","Number":"59671","RawContent":null,"Title":"Bump version to \"v19.1.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59671","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.3\" with changelog.\" (#59671)"},{"Id":"2805176620","IsPullRequest":false,"CreatedAt":"2025-01-22T19:25:28","Actor":"mikkel-ol","Number":"59670","RawContent":null,"Title":"`HttpFeature` only accepts type `Provider` as providers","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSince `HttpFeature` providers passed to `provideHttpClient()` are being type cast to `EnvironmentProviders`, is there a reason why they only accept `Provider[]` and not `(Provider | EnvironmentProvider)[]` ?\n\n```ts\nexport interface HttpFeature<KindT extends HttpFeatureKind> {\n  ɵkind: KindT;\n  ɵproviders: Provider[]; // <-- why does this not accept `EnvironmentProvider`?\n}\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59670","RelatedDescription":"Open issue \"`HttpFeature` only accepts type `Provider` as providers\" (#59670)"},{"Id":"2805060658","IsPullRequest":true,"CreatedAt":"2025-01-22T18:22:13","Actor":"angular-robot","Number":"59669","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.1.0-rc.0/19.2.0-next.0) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1298ed3` -> `98e94da` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | dependencies | patch | [`19.2.0-next.0` -> `19.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.2.0-next.0/19.2.0-next.1) |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | peerDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.1.3/19.2.0-next.0) |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.1.0-rc.0/19.2.0-next.0) |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | peerDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.1.3/19.2.0-next.0) |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | peerDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.1.3/19.2.0-next.0) |\n| [@angular/material](https://redirect.github.com/angular/components) | dependencies | patch | [`19.2.0-next.0` -> `19.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.2.0-next.0/19.2.0-next.1) |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `744e5a7` -> `1fa3a08` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | peerDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.1.3/19.2.0-next.0) |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | peerDependencies | minor | [`^19.1.0-next` -> `^19.2.0-next`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.1.3/19.2.0-next.0) |\n| angular/dev-infra | action | digest | `e8d26ef` -> `fa81be5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.2.0-next.0`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1920-next0-2025-01-22)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.3...19.2.0-next.0)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fe8a68329b](https://redirect.github.com/angular/angular/commit/fe8a68329b50363f914a728579392f3fc68670a6) | feat | support untagged template literals in expressions ([#&#8203;59230](https://redirect.github.com/angular/angular/pull/59230)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ed705a856a](https://redirect.github.com/angular/angular/commit/ed705a856a164f91d33e2173b4f371329d07c472) | feat | detect missing structural directive imports ([#&#8203;59443](https://redirect.github.com/angular/angular/pull/59443)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bc2ad7bfd3](https://redirect.github.com/angular/angular/commit/bc2ad7bfd37a61992b550943de5da0eab2eec98b) | feat | support streaming resources ([#&#8203;59573](https://redirect.github.com/angular/angular/pull/59573)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.3`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1913-2025-01-22)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.2...19.1.3)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ecfb74d287](https://redirect.github.com/angular/angular/commit/ecfb74d287bec7bec37d0b476b321b047bef2c43) | fix | handle :host-context with comma-separated child selector ([#&#8203;59276](https://redirect.github.com/angular/angular/pull/59276)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [53160e504d](https://redirect.github.com/angular/angular/commit/53160e504df44b05f59cacd9afeb40a0e627b744) | fix | extract parenthesized dependencies during HMR ([#&#8203;59644](https://redirect.github.com/angular/angular/pull/59644)) |\n| [39690969af](https://redirect.github.com/angular/angular/commit/39690969af14914df0c9b5a009b2df920f5c03e7) | fix | handle conditional expressions when extracting dependencies ([#&#8203;59637](https://redirect.github.com/angular/angular/pull/59637)) |\n| [78af7a5059](https://redirect.github.com/angular/angular/commit/78af7a5059cc3e03704ba63f8512351a40470557) | fix | handle new expressions when extracting dependencies ([#&#8203;59637](https://redirect.github.com/angular/angular/pull/59637)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [408af24ff3](https://redirect.github.com/angular/angular/commit/408af24ff3490926e9992cb4f1f71914d71ad6ad) | fix | capture self-referencing component during HMR ([#&#8203;59644](https://redirect.github.com/angular/angular/pull/59644)) |\n| [d7575c201c](https://redirect.github.com/angular/angular/commit/d7575c201cfd61010952b3a633eec03e32f58220) | fix | replace metadata in place during HMR ([#&#8203;59644](https://redirect.github.com/angular/angular/pull/59644)) |\n| [26f6d4c485](https://redirect.github.com/angular/angular/commit/26f6d4c485b566d7bc127c78cc163c376d0fe6b5) | fix | skip component ID collision warning during SSR ([#&#8203;59625](https://redirect.github.com/angular/angular/pull/59625)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a62c84bc18](https://redirect.github.com/angular/angular/commit/a62c84bc188d41ea24cf0eca14ac18c4b917ccd0) | fix | avoid applying the same replacements twice when cleaning up unused imports ([#&#8203;59656](https://redirect.github.com/angular/angular/pull/59656)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b2b3816cb1](https://redirect.github.com/angular/angular/commit/b2b3816cb1c5c573dc9368f05fd2971671d7159f) | fix | clear renderer cache during HMR when using async animations ([#&#8203;59644](https://redirect.github.com/angular/angular/pull/59644)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.2`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1912-2025-01-20)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.1...19.1.2)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8dcd889987](https://redirect.github.com/angular/angular/commit/8dcd88998700a94115a542462e6ae6beedbfbd9d) | fix | update `@ng/component` URL to be relative ([#&#8203;59620](https://redirect.github.com/angular/angular/pull/59620)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [95a05bb202](https://redirect.github.com/angular/angular/commit/95a05bb2021acab02df3468212adf023d331a688) | fix | disable tree shaking during HMR ([#&#8203;59595](https://redirect.github.com/angular/angular/pull/59595)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a4eb74c79c](https://redirect.github.com/angular/angular/commit/a4eb74c79cca802d8179118cf4d53c73285baadb) | fix | animation sometimes renderer not being destroyed during HMR ([#&#8203;59574](https://redirect.github.com/angular/angular/pull/59574)) |\n| [906413aba3](https://redirect.github.com/angular/angular/commit/906413aba31459e6499420ed14519d1280e182ad) | fix | change `Resource` to use explicit `undefined` in its typings ([#&#8203;59024](https://redirect.github.com/angular/angular/pull/59024)) |\n| [4eb541837c](https://redirect.github.com/angular/angular/commit/4eb541837cf28ce1950d782213291165a2436410) | fix | cleanup `_ejsa` when app is destroyed ([#&#8203;59492](https://redirect.github.com/angular/angular/pull/59492)) |\n| [5497102769](https://redirect.github.com/angular/angular/commit/549710276969ec4cf8c1e3d2f19d1fe9f755976e) | fix | cleanup stash listener when app is destroyed ([#&#8203;59598](https://redirect.github.com/angular/angular/pull/59598)) |\n| [266a8f2f2e](https://redirect.github.com/angular/angular/commit/266a8f2f2ebf9f5e310ba5de695be5072790e1e5) | fix | handle shadow DOM encapsulated component with HMR ([#&#8203;59597](https://redirect.github.com/angular/angular/pull/59597)) |\n| [6f7716268a](https://redirect.github.com/angular/angular/commit/6f7716268afa5146f2b2d0dbbea146defa9acfef) | fix | HMR not matching component that injects ViewContainerRef ([#&#8203;59596](https://redirect.github.com/angular/angular/pull/59596)) |\n| [d12a186d53](https://redirect.github.com/angular/angular/commit/d12a186d531b41e6a16f84446a1d54eaed010fc4) | fix | treat exceptions in `equal` as part of computation ([#&#8203;55818](https://redirect.github.com/angular/angular/pull/55818)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.1`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1911-2025-01-16)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.0...19.1.1)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [357795cb96](https://redirect.github.com/angular/angular/commit/357795cb96a1cd138ec263c468c9de8ca8b2af9c) | fix | run HMR replacement in the zone ([#&#8203;59562](https://redirect.github.com/angular/angular/pull/59562)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [eb0b1851f4](https://redirect.github.com/angular/angular/commit/eb0b1851f494adfe72f583763a44bd2528a5956c) | fix | roll back HMR fix ([#&#8203;59557](https://redirect.github.com/angular/angular/pull/59557)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.1.0`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1910-2025-01-15)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.0-rc.0...19.1.0)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e4c50b3bea](https://redirect.github.com/angular/angular/commit/e4c50b3bea22ca2afba74465893c36730952f4b9) | feat | expose component instance in NgComponentOutlet ([#&#8203;58698](https://redirect.github.com/angular/angular/pull/58698)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ceadd28ea1](https://redirect.github.com/angular/angular/commit/ceadd28ea12140e8e78cdb706aff0487f5a87a3c) | fix | allow $any in two-way bindings ([#&#8203;59362](https://redirect.github.com/angular/angular/pull/59362)) |\n| [aed49ddaaa](https://redirect.github.com/angular/angular/commit/aed49ddaaa40d6e6816198b47ceada4e98cd636c) | fix | use chunk origin in template HMR request URL ([#&#8203;59459](https://redirect.github.com/angular/angular/pull/59459)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c5c20e9d86](https://redirect.github.com/angular/angular/commit/c5c20e9d86d72b33840dcf0adea02876437a589f) | fix | check event side of two-way bindings ([#&#8203;59002](https://redirect.github.com/angular/angular/pull/59002)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d010e11b73](https://redirect.github.com/angular/angular/commit/d010e11b735562ded439989ddb84cc83c6c00e81) | feat | add event listener options to renderer ([#&#8203;59092](https://redirect.github.com/angular/angular/pull/59092)) |\n| [57f3550219](https://redirect.github.com/angular/angular/commit/57f3550219f2a57c7c26c9183e48ee66845e0439) | feat | add utility for resolving defer block information to ng global ([#&#8203;59184](https://redirect.github.com/angular/angular/pull/59184)) |\n| [22f191f763](https://redirect.github.com/angular/angular/commit/22f191f76339a08bb8f0f2dfbc60dde0f2e38e73) | feat | extend the set of profiler events ([#&#8203;59183](https://redirect.github.com/angular/angular/pull/59183)) |\n| [e894a5daea](https://redirect.github.com/angular/angular/commit/e894a5daea401b4e1173b0e66557ae40140eb9a0) | feat | set kind field on template and effect nodes ([#&#8203;58865](https://redirect.github.com/angular/angular/pull/58865)) |\n| [bd1f1294ae](https://redirect.github.com/angular/angular/commit/bd1f1294aeb0d47b24421b7b7a608988689a459f) | feat | support TypeScript 5.7 ([#&#8203;58609](https://redirect.github.com/angular/angular/pull/58609)) |\n| [9870b643bf](https://redirect.github.com/angular/angular/commit/9870b643bff46f089a3f0a30514fb7e062a66d56) | fix | Defer afterRender until after first CD ([#&#8203;58250](https://redirect.github.com/angular/angular/pull/58250)) |\n| [a5fc962094](https://redirect.github.com/angular/angular/commit/a5fc9620948c59da2146d46d27de388839b93254) | fix | Don't run effects in check no changes pass ([#&#8203;58250](https://redirect.github.com/angular/angular/pull/58250)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d298d25426](https://redirect.github.com/angular/angular/commit/d298d254269ff759111fbdef7736bc8b713638bc) | feat | add schematic to clean up unused imports ([#&#8203;59353](https://redirect.github.com/angular/angular/pull/59353)) |\n| [14fb8ce4c0](https://redirect.github.com/angular/angular/commit/14fb8ce4c00fc458cfbe1d7f2c85638c6165b636) | fix | resolve text replacement issue ([#&#8203;59452](https://redirect.github.com/angular/angular/pull/59452)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8c5db3cfb7](https://redirect.github.com/angular/angular/commit/8c5db3cfb75700dd64f4c8c073554c7086835950) | fix | avoid circular DI error in async renderer ([#&#8203;59256](https://redirect.github.com/angular/angular/pull/59256)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [52a6710f54](https://redirect.github.com/angular/angular/commit/52a6710f54bcec81f4cde23a78b9f78d038156c5) | fix | complete router `events` on dispose ([#&#8203;59327](https://redirect.github.com/angular/angular/pull/59327)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.2.0-next.1`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1920-next1-niobium-napkin-2025-01-22)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.2.0-next.0...19.2.0-next.1)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [48117e7a8](https://redirect.github.com/angular/components/commit/48117e7a8d61e631347fa1a90a3e57eb95dc24b2) | fix | **text-field:** clear cached line height on resize ([#&#8203;30355](https://redirect.github.com/angular/components/pull/30355)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [12b767111](https://redirect.github.com/angular/components/commit/12b767111e1fc3c01867cacc02ad73e0aec81fed) | fix | **autocomplete:** fix initial render logic ([#&#8203;30348](https://redirect.github.com/angular/components/pull/30348)) |\n| [013fe0456](https://redirect.github.com/angular/components/commit/013fe04564fc7eb83cec112c9893163ab431cff1) | fix | **autocomplete:** switch away from animations module ([#&#8203;30356](https://redirect.github.com/angular/components/pull/30356)) |\n| [7c9c898fa](https://redirect.github.com/angular/components/commit/7c9c898faac8daac1bbb20a0807168a74360760d) | fix | **chips:** fix chip blur timing ([#&#8203;30347](https://redirect.github.com/angular/components/pull/30347)) |\n| [066c74025](https://redirect.github.com/angular/components/commit/066c740251b95f0b62158e98cfd72c7c294114fc) | fix | **datepicker:** switch away from animations module ([#&#8203;30360](https://redirect.github.com/angular/components/pull/30360)) |\n| [d52c32906](https://redirect.github.com/angular/components/commit/d52c329064b4f305688f9957c46223e3de5ed710) | fix | **expansion:** inherit shape for focus indicator ([#&#8203;30352](https://redirect.github.com/angular/components/pull/30352)) |\n| [4fa46bccc](https://redirect.github.com/angular/components/commit/4fa46bccc99e33096d245334b26818edbd6423c3) | fix | **form-field:** remove dependency on animations module ([#&#8203;30354](https://redirect.github.com/angular/components/pull/30354)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59669","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#59669)"},{"Id":"2804972775","IsPullRequest":true,"CreatedAt":"2025-01-22T17:34:48","Actor":"arturovt","Number":"59668","RawContent":null,"Title":"refactor(core): re-use `isDetachedByI18n`","State":"open","Body":"We already have a function called `isDetachedByI18n` which checks whether a `tNode` is in `isDetached` state; as thus, there's no reason to apply those checks manually.","Url":"https://github.com/angular/angular/pull/59668","RelatedDescription":"Open PR \"refactor(core): re-use `isDetachedByI18n`\" (#59668)"},{"Id":"2804854006","IsPullRequest":false,"CreatedAt":"2025-01-22T16:38:15","Actor":"pkozlowski-opensource","Number":"59665","RawContent":null,"Title":"Signals with custom change methods","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nBy default a signal comes equipped with a generic `.set` / `.update` methods. However, many signals used in practice represent a piece of state that can / should only change in a particular way - as an example a counter can be incremented, decremented and reset. In other words, there are many cases where we want to _enforce constraints_ on the possible state changes.\n\nIdeally we could collocate _state_ and _change methods_ in one cohesive unit. We do recognize the need in this area and see a couple of patterns used in practice. Opening this issue to capture the patterns we are aware of, judge interest, solicit more ideas etc.\n\n### signal creation method with custom mutation methods on a getter\n\nExample from https://github.com/angular/angular/issues/59615:\n\n```typescript\nexport function createCounter(initialValue: number = 0): WritableSignal<number> & {increase: () => void; decrease: () => void; reset: () => void} {\n  const c = signal(initialValue);\n  \n  return Object.assign(c, { \n    increase: () => {\n       c.update(x => x + 1);\n    },\n    decrease: () => {\n       c.update(x => x - 1);\n    },\n    reset: () => {\n       c.set(initialValue);\n    }\n  })\n}\n\n// usage\n\n@Component()\nexport class SomeCmp {\n  c = createCounter();\n\n  onClick() {\n    this.c.increase();\n    this.c.decrease();\n\n    this.c.reset();\n    this.c.set(100);\n    this.c.update(x => x + 2);\n  }\n}\n```\n\nPros:\n* feels natural as have a similar API shape as a regular signal\n\nCons:\n* somewhat awkward to write\n* doesn't account for hiding / removing the default `set` / `update` methods\n\n### signal wrapped in a class with custom mutation methods\n\nExample: \n\n```typescript\nclass CounterState {\n    private _state = signal(0);\n    public state = this._state.asReadonly();\n  \n    increment() {\n        this._state.update(v => v + 1);\n    }\n\n    decrement() {\n        this._state.update(v => v - 1);\n    }\n\n    reset: () => {\n      this._state.set(0);\n    }\n}\n\n// usage\n\n@Component()\nexport class SomeCmp {\n  c = new CounterState();\n\n  onClick() {\n    this.c.increase();\n    this.c.decrease();\n\n    this.c.reset();\n    // default mutation methods removed from the public API\n    // this.c.set(100);\n    // this.c.update(x => x + 2);\n  }\n}\n```\n\nPros:\n* fairly straightforward\n* can control if default set / update mutations are exposed \n\nCons:\n* somewhat verbose to write\n* requires additional property access (`c.state()` instead of `c()`) to get to the value\n* doesn't account for hiding / removing the default `set` / `update` methods","Url":"https://github.com/angular/angular/issues/59665","RelatedDescription":"Open issue \"Signals with custom change methods\" (#59665)"},{"Id":"2802071379","IsPullRequest":true,"CreatedAt":"2025-01-22T16:23:52","Actor":"angelaki","Number":"59649","RawContent":null,"Title":"Default type `T` for InputFunction's `TransformT`","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Description\r\nCurious why this isn't the default behavior so I'm quite sure there **is** a reason? Never the less, find it much more comfortable to not be forced to always write the type twice on using a converter:\r\n\r\n`multiple= input<boolean | 'append', boolean | 'append'>(true, { transform: v => v === 'append' ? 'append' : coerceBooleanProperty(v) });`\r\n\r\n-->\r\n\r\n`multiple = input<boolean | 'append'>(true, { transform: v => v === 'append' ? 'append' : coerceBooleanProperty(v) });`\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/59649","RelatedDescription":"Closed or merged PR \"Default type `T` for InputFunction's `TransformT`\" (#59649)"},{"Id":"2804294532","IsPullRequest":true,"CreatedAt":"2025-01-22T15:58:18","Actor":"thesmiler","Number":"59661","RawContent":null,"Title":"docs: add Bluesky links","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\nLink to Bluesky in README, Footer and Navigation\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [X] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59661","RelatedDescription":"Closed or merged PR \"docs: add Bluesky links\" (#59661)"},{"Id":"2803923498","IsPullRequest":true,"CreatedAt":"2025-01-22T15:57:42","Actor":"crisbeto","Number":"59656","RawContent":null,"Title":"fix(migrations): avoid applying the same replacements twice when cleaning up unused imports","State":"closed","Body":"If a file ends up in multiple programs, the unused imports migration was counting it twice. This was fine since the string replacements were handling it correctly, but it was printing out incorrect data.\r\n\r\nThese changes rework the migration to de-duplicate the replacements and produce the data from the de-duplicated results.\r\n","Url":"https://github.com/angular/angular/pull/59656","RelatedDescription":"Closed or merged PR \"fix(migrations): avoid applying the same replacements twice when cleaning up unused imports\" (#59656)"},{"Id":"2804582237","IsPullRequest":false,"CreatedAt":"2025-01-22T14:45:01","Actor":"ChristopherInova","Number":"59664","RawContent":null,"Title":"Missing localize config documentation","State":"open","Body":"### Describe the problem that you experienced\n\nWe use “de” as sourceLocale, but would like to host all locales under a 5-letter code. Apart from the fact that I don't understand in which cases the locales are 2-letter and why, for example, “de-DE” is not also available as a 5-letter variant, there currently seems to be no documentation on the sourceLocale node of the angular.json.\n\nI have seen in another issue (https://github.com/angular/angular-cli/issues/17144) that sourceLocale also accepts an object with baseHref and code in addition to a string. If you set this, the baseHref in the index.html is adjusted, but the build is still written to the “de” directory.\n\nI know, i can write a postbuild script to change directory naming from de to 'de-DE', but i'm wondering why you support to set a baseHref but not renaming the directory. Maybe there is another undocumented property to allow renaming, but except of the issue i couldn't find any information about this. \n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/i18n\n\n### Describe what you were looking for in the documentation\n\nI'm missing a typed documention of the i18n node of the angular.json. There is no hint, what properties can be set at i18n except of the provided samples. So at least there is missing the information that sourceLocale can also be an object.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59664","RelatedDescription":"Open issue \"Missing localize config documentation\" (#59664)"},{"Id":"2804483960","IsPullRequest":false,"CreatedAt":"2025-01-22T14:04:21","Actor":"ghidoz","Number":"59663","RawContent":null,"Title":"Untracked() should break cycle in computations","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI just updated to the **19.1.2** version and suddenly I get an error at compiling time: `Error: Detected cycle in computations.`\n\nIt made me discover that I have a `rxResource` whose request calls a `linkedSignal` that depends on the resource's value itself.\n\nHere's part of my code: \n- I want `loadedRanges` to update with the new range, but only after the resource has finished loading.\n- On the other hand, the resource needs access to the `loadedRanges` to know if the range has already been loaded or not\n\nBut if I use `untracked` in the resource's request, shouldn't it break the cycle? Especially if it depends on a `linkedSignal` which should always have a value.\n\n```\n  from = signal(new Date());\n  to = signal(new Date());\n\n  loadedRanges = linkedSignal<any, any[]>({\n    source: () => ({\n      value: this.resource.value()\n    }),\n    computation: (source, previous) => {\n      const previousRanges = previous?.value || [];\n      if (source.value) {\n        const newRange = {\n          from: untracked(() => this.from()),\n          to: untracked(() => this.to()),\n        };\n        return this.mergeRanges([...previousRanges, newRange]);\n      } else {\n        return previousRanges;\n      }\n    },\n  });\n\n  resource = rxResource<any[], any>({\n    request: () => {\n      const requiredRange = {\n        from: this.from(),\n        to: this.to(),\n      };\n      const ranges = untracked(() => this.loadedRanges()); // <-- here I use the untracked\n      const isLoaded = this.isRangeFullyCovered(requiredRange, ranges);\n      return isLoaded ? undefined : true;\n    },\n    loader: () => {\n      // call to the API\n      return of([]);\n    }\n  });\n```\n\nMy code was working without problems before updating (with the v19.0.1).\nAm I wrong stating that untracked should break the cycle, and the error shouldn't be triggered?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-8jm3wgx2?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nError: Detected cycle in computations.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 18.19.1\nPackage Manager: npm 10.2.4\nOS: darwin x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1901.3\n@angular-devkit/build-angular        19.1.3\n@angular-devkit/core                 19.1.3 (cli-only)\n@angular-devkit/schematics           19.1.3\n@angular/cdk                         19.1.0\n@angular/cli                         19.1.3\n@angular/fire                        19.0.0\n@angular/material                    19.1.0\n@angular/material-date-fns-adapter   19.1.0\n@schematics/angular                  19.1.3\nng-packagr                           19.0.0\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59663","RelatedDescription":"Open issue \"Untracked() should break cycle in computations\" (#59663)"},{"Id":"2804435693","IsPullRequest":false,"CreatedAt":"2025-01-22T13:44:40","Actor":"exequiel09","Number":"59662","RawContent":null,"Title":"resource / rxResource with unspecified request option now calls the loader automatically","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn @manfredsteyer 's [post for resource and rxResource](https://www.angulararchitects.io/en/blog/asynchronous-resources-with-angulars-new-resource-api/#:~:text=Reload%20and%20Manual%20Loading), it's possible to manually trigger the resource by omitting the `request` property in the resource option and trigger the `reload` method to kick off the request inside the loader function. But after upgrading Angular  from v19.1.1 to v19.1.2, even without `request` property the loader is now being triggered automatically.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-qaxnudmv?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.3\n@angular-devkit/core         19.1.3\n@angular-devkit/schematics   19.1.3\n@angular/build               19.1.3\n@angular/cli                 19.1.3\n@schematics/angular          19.1.3\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59662","RelatedDescription":"Open issue \"resource / rxResource with unspecified request option now calls the loader automatically\" (#59662)"},{"Id":"2804041194","IsPullRequest":true,"CreatedAt":"2025-01-22T11:19:19","Actor":"pkozlowski-opensource","Number":"59659","RawContent":null,"Title":"Revert \"refactor(core): reuse directive instantiate logic (#59633)\"","State":"closed","Body":"This reverts commit c089d21eb086d5d86f97d38139fdb63f76e477b0 as it breaks some of the existing tests in G3, will need more investigation before re-submitting. ","Url":"https://github.com/angular/angular/pull/59659","RelatedDescription":"Closed or merged PR \"Revert \"refactor(core): reuse directive instantiate logic (#59633)\"\" (#59659)"},{"Id":"2804086928","IsPullRequest":false,"CreatedAt":"2025-01-22T11:06:22","Actor":"bananalemonmelon","Number":"59660","RawContent":null,"Title":"https://angular.dev/playground stuck forever on `Installing Packages`","State":"open","Body":"### Describe the problem that you experienced\n\nhttps://angular.dev/playground stuck forever on `Installing Packages`.\n\nWould also appreciate if you could have an automated detection that can alarm whenever playground is broken.\n\nIt's very difficult to quickly experiment from scratch in Angular, as it's difficult to find a quick playground that's always working 24/7.\nIt's easy to find a quick playground for Java, C#, Python, even the full-blown AI library like PyTorch, but not for Angular.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/playground\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\nOpen https://angular.dev/playground\n\n### Describe what you want to experience that would fix the problem\n\nhttps://angular.dev/playground should run the code and display the result.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nMS Edge\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59660","RelatedDescription":"Open issue \"https://angular.dev/playground stuck forever on `Installing Packages`\" (#59660)"},{"Id":"2801867751","IsPullRequest":false,"CreatedAt":"2025-01-22T11:02:13","Actor":"blueiceprj","Number":"59647","RawContent":null,"Title":"viewChild error.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nEverything works fine 19.1.1.  But now 19.1.2 viewChild cannot identify template element. Its a parent-child component. Here the sample of code:\n\n```\n@Component({\n    selector: 'app-menu-item',\n    templateUrl: './menu-item.component.html',\n    styleUrls: ['./menu-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    imports: [MatMenuModule, FontAwesomeModule, RouterLink, TranslatePipe],\n})\nexport class MenuItemComponent {\n    readonly items = input<NavigationItem[]>([]);\n    readonly childMenu = viewChild<MatMenu>('childMenu');\n```\n\n```\n\n<mat-menu #childMenu=\"matMenu\" [overlapTrigger]=\"false\" xPosition=\"after\">\n    @for (child of items(); track child.id) {\n        <!-- Handle branch node menu items -->\n        @if (child?.children.length > 0) {\n            @if (!child.hidden && child.active) {\n                <button mat-menu-item [matMenuTriggerFor]=\"menu.childMenu()\">\n                    @if (child.icon) {\n                        <fa-icon style=\"padding-right: 16px; font-size: 16px\" [icon]=\"['fal', child.icon]\"></fa-icon>\n                    }\n                    <span>{{ child.translate | translate }}</span>\n                </button>\n                <app-menu-item #menu [items]=\"child.children\"></app-menu-item>\n            }\n        }\n        <!-- Handle leaf node menu items -->\n        @if ((!child.children || child.children.length == 0) && child.type == 'item') {\n            @if (!child.hidden && child.active) {\n                <button mat-menu-item (click)=\"menuItemClicked(child)\" [routerLink]=\"child.url\">\n                    @if (child.icon) {\n                        <fa-icon style=\"padding-right: 16px; font-size: 16px\" [icon]=\"['fal', child.icon]\"></fa-icon>\n                    }\n                    <span>{{ child.translate | translate }}</span>\n                </button>\n            }\n        }\n    }\n</mat-menu>\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nmenu_r2.childMenu is not a function\n    at MenuItemComponent_For_3_Conditional_0_Conditional_0_Template (menu-item.component.html:6:39)\n    at executeTemplate (core.mjs:12061:5)\n    at refreshView (core.mjs:14431:7)\n    at detectChangesInView (core.mjs:14640:5)\n    at detectChangesInViewIfAttached (core.mjs:14602:3)\n    at detectChangesInEmbeddedViews (core.mjs:14562:7)\n    at refreshView (core.mjs:14459:5)\n    at detectChangesInView (core.mjs:14640:5)\n    at detectChangesInViewIfAttached (core.mjs:14602:3)\n    at detectChangesInEmbeddedViews (core.mjs:14562:7)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: darwin x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1901.3\n@angular-devkit/build-angular        19.1.3\n@angular-devkit/build-ng-packagr     0.1002.0\n@angular-devkit/core                 19.1.3 (cli-only)\n@angular-devkit/schematics           19.1.3\n@angular/cdk                         19.1.0\n@angular/cli                         19.1.3\n@angular/material                    19.1.0\n@angular/material-date-fns-adapter   19.1.0\n@angular/youtube-player              19.1.0\n@schematics/angular                  19.1.3\nrxjs                                 7.8.1\ntypescript                           5.7.3\nzone.js                              0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59647","RelatedDescription":"Closed issue \"viewChild error.\" (#59647)"},{"Id":"2804030086","IsPullRequest":true,"CreatedAt":"2025-01-22T10:42:24","Actor":"crisbeto","Number":"59658","RawContent":null,"Title":"fix(core): refresh the page if there's an error during HMR","State":"open","Body":"If there an error during HMR, the user has no choice but to refresh the page manually. These changes forward the error to the console and refresh automatically.\r\n","Url":"https://github.com/angular/angular/pull/59658","RelatedDescription":"Open PR \"fix(core): refresh the page if there's an error during HMR\" (#59658)"},{"Id":"2802850355","IsPullRequest":true,"CreatedAt":"2025-01-21T21:29:51","Actor":"alxhub","Number":"59655","RawContent":null,"Title":"feat(core): support default value in `resource()`","State":"open","Body":"feat(core): support default value in `resource()`\r\n\r\nBefore `resource()` resolves, its value is in an unknown state. By default it returns `undefined` in these scenarios, so the type of `.value()` includes `undefined`.\r\n    \r\nThis commit adds a `defaultValue` option to `resource()` and `rxResource()` which overrides this default. When provided, an unresolved resource will return this value instead of `undefined`, which simplifies the typing of `.value()`.","Url":"https://github.com/angular/angular/pull/59655","RelatedDescription":"Open PR \"feat(core): support default value in `resource()`\" (#59655)"},{"Id":"2802761093","IsPullRequest":true,"CreatedAt":"2025-01-21T21:20:27","Actor":"AndrewKushnir","Number":"59653","RawContent":null,"Title":"test(zone.js): reduce flakiness of a timer-related test","State":"closed","Body":"This commit updates a flaky test to increase the amount of work (more `for` loop iterations) to minimize the chance of getting the same timestamp after that work.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59653","RelatedDescription":"Closed or merged PR \"test(zone.js): reduce flakiness of a timer-related test\" (#59653)"},{"Id":"2802788791","IsPullRequest":true,"CreatedAt":"2025-01-21T20:52:57","Actor":"aaditree","Number":"59654","RawContent":null,"Title":"docs: Add link to Language Service page from the Installation page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n[Installation Page](https://angular.dev/installation) did not have a direct link to the Language Service which is very useful for new Angular Developers when setting up their new project.\r\n\r\nIssue Number: [59608](https://github.com/angular/angular/issues/59608)\r\n\r\n\r\n## What is the new behavior?\r\n\r\nAngular Language Service is now in the Prerequisites section for all Angular Developers to access, directly, without having to scroll all the way to the Developer Tools Section.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nChange :\r\n\r\n![image](https://github.com/user-attachments/assets/2986108e-f5a8-4b43-a07c-bbffc414478f)\r\n\r\n","Url":"https://github.com/angular/angular/pull/59654","RelatedDescription":"Open PR \"docs: Add link to Language Service page from the Installation page\" (#59654)"},{"Id":"2800583679","IsPullRequest":false,"CreatedAt":"2025-01-21T17:50:33","Actor":"msmallest","Number":"59640","RawContent":null,"Title":"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nedit: it's just `provideAnimationsAsync()`. Removed it from the module and now the styling worked, and I removed it from the standalone app and it worked.\n\nModule based apps seem to not have style changes applied when a style is changed in a component (inline style or file-based style). Same applies for module based but in a standalone component... and even an app fully converted to standalone from what I can tell?\n\nFully module based\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\nProblem component is a standalone component inside a component used in a module\nhttps://github.com/msmallest/module-based-hmr/tree/issue2-module-root-standalone-component\n\n(edit: see first comment by me, I realized the problem) \nI converted the whole app to standalone and there is still an issue. But I have had working fully standalone apps before with the latest patches, so I must be missing something. But I can't tell what is missing between those fresh ones and this example. I even cleared `.angular/`, restarted the serve server, re-opened IDE, and even tried in a different browser from the other tests\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--fully-standalone\n\n(edit: see first comment by me, I realized the problem) \nedit: here is a repo I used for a different issue a couple days ago - but in a new branch `issue-59640-comparison-never-module`. It was and still is in a working state with the newest patch versions. I made the same component as the above examples in this app that never had modules, and it has no style issues whether it is file-based or inline style https://github.com/msmallest/hmr-issue-multiple-components/tree/issue-59640-comparison-never-module. I will take a closer look at the difference between this and `issue2--fully-standalone` later, but between this and the other issue I'm a bit confused at the moment.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59640","RelatedDescription":"Closed issue \"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone\" (#59640)"},{"Id":"2801306427","IsPullRequest":true,"CreatedAt":"2025-01-21T17:50:30","Actor":"crisbeto","Number":"59644","RawContent":null,"Title":"HMR-related fixes","State":"closed","Body":"Includes the following HMR-related fixes:\r\n\r\n### fix(core): replace metadata in place during HMR \r\n\r\nCurrently during HMR we swap out the entire module definition (e.g. `MyComp.ɵcmp = newDef`). In standalone components and most module-based ones this works fine, however in some cases (e.g. circular dependencies) the compiler can produce a `setComponentScope` call for a module-based component. This call doesn't make it into the HMR replacement function, because it is defined in the module's file, not the component's. As a result, the dependencies of these components are cleared out upon replacement.\r\n\r\nA secondary problem is that the `directiveDefs` and `pipeDefs` fields can save references to definitions that later become stale as a result of HMR.\r\n\r\nThese changes resolve both issues by:\r\n1. Performing the replacement by copying the properties from the new definition onto the old one, while keeping it in place.\r\n2. Preserving the initial `directiveDefs`, `pipeDefs` and `setInput`.\r\n\r\n### fix(core): capture self-referencing component during HMR \r\n\r\nFixes that we were filtering out the component itself from the set of dependencies when HMR is enabled, breaking self-referencing components.\r\n\r\n### fix(platform-browser): clear renderer cache during HMR when using async animations\r\n\r\nFixes that the async animations renderer didn't have the logic to clean up its style cache during HMR. This is identical to #59393.\r\n\r\n### fix(compiler-cli): extract parenthesized dependencies during HMR \r\nFixes that the HMR dependency extraction logic wasn't accounting for parenthesized identifiers correctly.\r\n\r\nFixes #59640.\r\nFixes #59632.\r\nFixes #59639.","Url":"https://github.com/angular/angular/pull/59644","RelatedDescription":"Closed or merged PR \"HMR-related fixes\" (#59644)"},{"Id":"2802261415","IsPullRequest":false,"CreatedAt":"2025-01-21T16:10:44","Actor":"mattlewis92","Number":"59651","RawContent":null,"Title":"Re-land disabling component styles instead of removing them","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nplatform-browser\n\n### Description\n\nWe were wondering if it was possible to re-land [this styles performance patch](https://github.com/angular/angular/commit/1640743b18e0b6a0e501855d5bc21414b2613319) in Angular to disable component styles, instead of removing them from the DOM when all component instances are destroyed\n\nFrom what we can tell, the referenced performance regression was due to an issue with Chrome that has since been fixed (https://issues.chromium.org/issues/40911913)\n\nIf that isn't the case and some context can be provided as to why that perf fix was reverted, we would love to help to re-land it\n\n### Proposed solution\n\nGet https://github.com/angular/angular/commit/1640743b18e0b6a0e501855d5bc21414b2613319 up to date and re-land it into Angular\n\n### Alternatives considered\n\nWe have currently been patching that fix into our own version of Angular as it made a significant impact on our performance metrics, but it's becoming a maintenance burden to keep it up to date when we upgrade between Angular versions","Url":"https://github.com/angular/angular/issues/59651","RelatedDescription":"Open issue \"Re-land disabling component styles instead of removing them\" (#59651)"},{"Id":"2802083635","IsPullRequest":false,"CreatedAt":"2025-01-21T14:57:21","Actor":"basters","Number":"59650","RawContent":null,"Title":"Zone.js crashes in MS Edge on iOS","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi everyone,\n\nAbout week ago we migrated our project to ng19 and started receiving in Sentry new kind of errors related to `zone.js`.\nUser agent is always iOS and Mobile Edge browser.\nWas not able to reproduce in Desktop Edge.\n\nI was able to reproduce this issue on my iPhone when installed Edge from AppStore. \nIt looks like for some reasons zone.js can not patch `timers`, but was not able to debug deeper, because Edge does not support remote debug..\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nundefined is not an object (evaluating 'handleOrId.refresh')\n\npolyfills-2SRK6US5.js in scheduleTask at line 1409:49\npolyfills-2SRK6US5.js in scheduleTask at line 317:26\npolyfills-2SRK6US5.js in scheduleTask at line 174:47\npolyfills-2SRK6US5.js in ? at line 1440:52\nmain-TMGBBAUM.js in waitToScan at line 23197:19\nmain-TMGBBAUM.js in setup at line 23201:21\npolyfills-2SRK6US5.js in run at line 97:41\nmain-TMGBBAUM.js in start at line 23209:22\nmain-TMGBBAUM.js in ? at line 23384:40\nmain-TMGBBAUM.js in onInvoke at line 7852:31\npolyfills-2SRK6US5.js in run at line 97:41\npolyfills-2SRK6US5.js in ? at line 2005:33\nmain-TMGBBAUM.js in onInvokeTask at line 7634:32\nmain-TMGBBAUM.js in onInvokeTask at line 7841:35\npolyfills-2SRK6US5.js in runTask at line 135:47\npolyfills-2SRK6US5.js in drainMicroTaskQueue at line 482:30\npolyfills-2SRK6US5.js in invokeTask at line 401:30\npolyfills-2SRK6US5.js in invokeTask at line 924:18\npolyfills-2SRK6US5.js in globalCallback at line 945:31\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 18.19.0\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59650","RelatedDescription":"Open issue \"Zone.js crashes in MS Edge on iOS\" (#59650)"},{"Id":"2801438899","IsPullRequest":true,"CreatedAt":"2025-01-21T10:54:14","Actor":"alan-agius4","Number":"59646","RawContent":null,"Title":"refactor(compiler-cli): eliminate `new URL` from HMR initializer","State":"closed","Body":"This commit removes the use of `new URL` from the HMR initializer, as it is no longer required now that the URL is relative (`./`).\r\n\r\nAdditionally, this change simplifies the integration within the Angular CLI.\r\n","Url":"https://github.com/angular/angular/pull/59646","RelatedDescription":"Closed or merged PR \"refactor(compiler-cli): eliminate `new URL` from HMR initializer\" (#59646)"},{"Id":"2800933368","IsPullRequest":true,"CreatedAt":"2025-01-21T07:38:05","Actor":"JeanMeche","Number":"59642","RawContent":null,"Title":"docs(docs-infra): bump tutorials to 19.1","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59642","RelatedDescription":"Open PR \"docs(docs-infra): bump tutorials to 19.1\" (#59642)"},{"Id":"2800810179","IsPullRequest":true,"CreatedAt":"2025-01-21T06:21:28","Actor":"angular-robot","Number":"59641","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/chrome](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/chrome) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/chrome)) | dependencies | patch | [`^0.0.294` -> `^0.0.299`](https://renovatebot.com/diffs/npm/@types%2fchrome/0.0.294/0.0.299) |\n| [selenium-webdriver4](https://redirect.github.com/SeleniumHQ/selenium/tree/trunk/javascript/node/selenium-webdriver#readme) ([source](https://redirect.github.com/SeleniumHQ/selenium)) | dependencies | minor | [`4.27.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/selenium-webdriver4/4.27.0/4.28.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SeleniumHQ/selenium (selenium-webdriver4)</summary>\n\n### [`v4.28.1`](https://redirect.github.com/SeleniumHQ/selenium/compare/ac342546e9e34d4ca94eceeb27cce22a4fe3b79f...05c87ca7c15eb719b2f5ca9a460ec88a38740cf6)\n\n[Compare Source](https://redirect.github.com/SeleniumHQ/selenium/compare/ac342546e9e34d4ca94eceeb27cce22a4fe3b79f...05c87ca7c15eb719b2f5ca9a460ec88a38740cf6)\n\n### [`v4.28.0`](https://redirect.github.com/SeleniumHQ/selenium/compare/d6e718d134987d62cd8ffff476821fb3ca1797c2...ac342546e9e34d4ca94eceeb27cce22a4fe3b79f)\n\n[Compare Source](https://redirect.github.com/SeleniumHQ/selenium/compare/d6e718d134987d62cd8ffff476821fb3ca1797c2...ac342546e9e34d4ca94eceeb27cce22a4fe3b79f)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59641","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#59641)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2805767903","IsPullRequest":false,"CreatedAt":"2025-01-23T02:42:23","Actor":"Ruisi-Lu","Number":"29458","RawContent":null,"Title":"TypeError: ɵgetOrCreateAngularServerApp is not a function in 19.1.x after fix angular-compiler error","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThrow error message when hot reload in 19.1.x, this issue still exists in v19.1.4.\n\n![Image](https://github.com/user-attachments/assets/f9d26f96-4d83-43f9-9f5f-4a5b9b9ae144)\n\n![Image](https://github.com/user-attachments/assets/433ec5ab-add0-4bff-a7e5-ab874f945f92)\n\nhttps://github.com/angular/angular-cli/issues/29379#issuecomment-2604998446\n\n\n### Minimal Reproduction\n\n1. Edit the project to throw angular-compiler error.\neg. \n`X [ERROR] NG5002: Unexpected character \"}\" [plugin angular-compiler]`\nor \n`X [ERROR] TS1128: Declaration or statement expected. [plugin angular-compiler]`\n2. Fix the code.\n3. Observe the error in the terminal and the browser.\n\n### Exception or Error\n\n```text\nTypeError: ɵgetOrCreateAngularServerApp is not a function\n    at _AngularAppEngine.getAngularServerAppForRequest (C:\\Project\\rosy-cart\\.angular\\cache\\19.1.4\\rosy-cart\\vite\\deps_ssr\\chunk-VBOT64B7.js:11367:23)\n    at async _AngularAppEngine.handle (C:\\Project\\rosy-cart\\.angular\\cache\\19.1.4\\rosy-cart\\vite\\deps_ssr\\chunk-VBOT64B7.js:11306:23)\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.4\nNode: 20.18.1\nPackage Manager: pnpm 10.0.0\nOS: win32 x64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cli                    19.1.4\n@angular/ssr                    19.1.4\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.5.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29458","RelatedDescription":"Open issue \"TypeError: ɵgetOrCreateAngularServerApp is not a function in 19.1.x after fix angular-compiler error\" (#29458)"},{"Id":"2803470195","IsPullRequest":true,"CreatedAt":"2025-01-23T02:03:41","Actor":"angular-robot","Number":"29438","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `dfb1771` -> `4be99d5` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `ab24c09` -> `73e3de2` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1298ed3` -> `98e94da` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `4ceb7ae` -> `f118b17` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.2.0-next.0` -> `19.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.2.0-next.0/19.2.0-next.1) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `5199e03` -> `4ba66f0` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `9dee701` -> `fce3ea3` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `061009a` -> `84f4c58` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `9b1b4d7` -> `eda0bda` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `221ba9a` -> `be23b1c` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `526e34b` -> `81648eb` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `e166889` -> `1624024` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `418b5a1` -> `d50cc14` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.2.0-next.0` -> `19.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.2.0-next.0/19.2.0-next.1) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `b44d882` -> `22b2293` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `744e5a7` -> `1fa3a08` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `a8f6c4f` -> `5de13cf` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `33ad124` -> `ac7589e` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `fa0a2fb` -> `332beed` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `961c4cb` -> `d963f80` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `63fe132` -> `91ba753` |\n| angular/dev-infra | action | digest | `e8d26ef` -> `fa81be5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.2.0-next.1`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1920-next1-niobium-napkin-2025-01-22)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.2.0-next.0...19.2.0-next.1)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [48117e7a8](https://redirect.github.com/angular/components/commit/48117e7a8d61e631347fa1a90a3e57eb95dc24b2) | fix | **text-field:** clear cached line height on resize ([#&#8203;30355](https://redirect.github.com/angular/components/pull/30355)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [12b767111](https://redirect.github.com/angular/components/commit/12b767111e1fc3c01867cacc02ad73e0aec81fed) | fix | **autocomplete:** fix initial render logic ([#&#8203;30348](https://redirect.github.com/angular/components/pull/30348)) |\n| [013fe0456](https://redirect.github.com/angular/components/commit/013fe04564fc7eb83cec112c9893163ab431cff1) | fix | **autocomplete:** switch away from animations module ([#&#8203;30356](https://redirect.github.com/angular/components/pull/30356)) |\n| [7c9c898fa](https://redirect.github.com/angular/components/commit/7c9c898faac8daac1bbb20a0807168a74360760d) | fix | **chips:** fix chip blur timing ([#&#8203;30347](https://redirect.github.com/angular/components/pull/30347)) |\n| [066c74025](https://redirect.github.com/angular/components/commit/066c740251b95f0b62158e98cfd72c7c294114fc) | fix | **datepicker:** switch away from animations module ([#&#8203;30360](https://redirect.github.com/angular/components/pull/30360)) |\n| [d52c32906](https://redirect.github.com/angular/components/commit/d52c329064b4f305688f9957c46223e3de5ed710) | fix | **expansion:** inherit shape for focus indicator ([#&#8203;30352](https://redirect.github.com/angular/components/pull/30352)) |\n| [4fa46bccc](https://redirect.github.com/angular/components/commit/4fa46bccc99e33096d245334b26818edbd6423c3) | fix | **form-field:** remove dependency on animations module ([#&#8203;30354](https://redirect.github.com/angular/components/pull/30354)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29438","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29438)"},{"Id":"2803679128","IsPullRequest":true,"CreatedAt":"2025-01-22T21:57:48","Actor":"alan-agius4","Number":"29441","RawContent":null,"Title":"refactor(@angular/ssr): remove unused `segment` property from metadata","State":"closed","Body":"\r\n\r\nThe `segment` property within the route-tree metadata is redundant and serves no functional purpose. Therefore, it has been removed.\r\n","Url":"https://github.com/angular/angular-cli/pull/29441","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): remove unused `segment` property from metadata\" (#29441)"},{"Id":"2805346499","IsPullRequest":true,"CreatedAt":"2025-01-22T21:55:47","Actor":"clydin","Number":"29456","RawContent":null,"Title":"build: update Angular versions for 19.2 prereleases","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29456","RelatedDescription":"Closed or merged PR \"build: update Angular versions for 19.2 prereleases\" (#29456)"},{"Id":"2805395394","IsPullRequest":false,"CreatedAt":"2025-01-22T21:37:13","Actor":"clydin","Number":"29457","RawContent":null,"Title":"Tracking: Support i18n component updates (HMR)","State":"open","Body":"Templates that contain i18n and/or manual `$localize` usage should support component updates via the development server HMR.\n\nIf possible, translation file changes should be considered as well. Although this may need to be implemented as a separate feature.","Url":"https://github.com/angular/angular-cli/issues/29457","RelatedDescription":"Open issue \"Tracking: Support i18n component updates (HMR)\" (#29457)"},{"Id":"2805344218","IsPullRequest":false,"CreatedAt":"2025-01-22T21:05:17","Actor":"atsjo","Number":"29455","RawContent":null,"Title":"Angular 19.1.2 and 19.1.3 fails ng:serve with dev server not able to resolve dependencies (on windows)","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular 19.1.1\n\n### Description\n\nLocal development not able to resolve som dependencies, see error message below... Downgrading angular to 19.1.1 fixes the problem (I can run with latest cli)\n\n### Minimal Reproduction\n\nTest running ng:serve with a project using angular-calendar on windows...\n\n### Exception or Error\n\n```text\nWatch mode enabled. Watching for file changes...\nNOTE: Raw file sizes do not reflect development server per-request transformations.\nFailed to resolve dependency: angular-draggable-droppable, present in client 'optimizeDeps.include'\nFailed to resolve dependency: angular-resizable-element, present in client 'optimizeDeps.include'\n  ➜  Local:   http://localhost:4200/\n  ➜  press h + enter to show help\nRequest for HTML file \"/index.html\" was received but no asset found. Asset may be missing from build.\n21:35:20 [vite] Pre-transform error: Failed to resolve import \"angular-draggable-droppable\" from \".angular/vite-root/devtest/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: D:/repos/teve-no/task4s/.angular/vite-root/devtest/main.js:6393:23\n  6391|  import * as i79 from \"@angular/material/icon\";\n  6392|  import * as i87 from \"angular-calendar\";\n  6393|  import * as i96 from \"angular-draggable-droppable\";\n     |                        ^\n  6394|  import * as i104 from \"angular-resizable-element\";\n  6395|  function tvCalendarComponent_Case_25_Template(rf, ctx) {\n21:35:21 [vite] Internal server error: Failed to resolve import \"angular-draggable-droppable\" from \".angular/vite-root/devtest/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: D:/repos/teve-no/task4s/.angular/vite-root/devtest/main.js:6393:23\n  6391|  import * as i79 from \"@angular/material/icon\";\n  6392|  import * as i87 from \"angular-calendar\";\n  6393|  import * as i96 from \"angular-draggable-droppable\";\n     |                        ^\n  6394|  import * as i104 from \"angular-resizable-element\";\n  6395|  function tvCalendarComponent_Case_25_Template(rf, ctx) {\n      at TransformPluginContext._formatError (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47397:41)\n      at TransformPluginContext.error (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47392:16)\n      at normalizeUrl (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45642:23)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45761:39\n      at async Promise.all (index 317)\n      at async TransformPluginContext.transform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45688:7)\n      at async EnvironmentPluginContainer.transform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47223:18)\n      at async loadAndTransform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:41034:27)\n      at async viteTransformMiddleware (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:42478:24)\n```\n\n### Your Environment\n\n```text\nUsing latest angular 19.1.3, with cli 19.1.4 on windows and nx.\nTried both angular and nx executors/builders...\n\nNode           : 22.13.0\nOS             : win32-x64\nNative Target  : x86_64-windows\npnpm           : 9.15.4\n\nnx                     : 20.3.2\n@nx/js                 : 20.3.2\n@nx/eslint             : 20.3.2\n@nx/workspace          : 20.3.2\n@nx/angular            : 20.3.2\n@nx/devkit             : 20.3.2\n@nx/esbuild            : 20.3.2\n@nx/eslint-plugin      : 20.3.2\n@nx/module-federation  : 20.3.2\n@nx/vite               : 20.3.2\n@nx/web                : 20.3.2\n@nx/webpack            : 20.3.2\ntypescript             : 5.7.3\n---------------------------------------\nRegistered Plugins:\n@nx/eslint/plugin\n@nx/vite/plugin\n---------------------------------------\nCommunity plugins:\n@analogjs/vite-plugin-angular : 1.12.1\n@analogjs/vitest-angular      : 1.12.1\nangular-calendar              : 0.31.1\nangular-eslint                : 19.0.2\n```\n\n### Anything else relevant?\n\nRunning windows...","Url":"https://github.com/angular/angular-cli/issues/29455","RelatedDescription":"Open issue \"Angular 19.1.2 and 19.1.3 fails ng:serve with dev server not able to resolve dependencies (on windows)\" (#29455)"},{"Id":"2805319565","IsPullRequest":true,"CreatedAt":"2025-01-22T20:51:52","Actor":"devversion","Number":"29454","RawContent":null,"Title":"Migrate more tests to `rules_js`, specifically `@angular/build`","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29454","RelatedDescription":"Open PR \"Migrate more tests to `rules_js`, specifically `@angular/build`\" (#29454)"},{"Id":"2805282528","IsPullRequest":true,"CreatedAt":"2025-01-22T20:39:23","Actor":"clydin","Number":"29453","RawContent":null,"Title":"docs: release notes for the v19.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29453","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.4 release\" (#29453)"},{"Id":"2805215491","IsPullRequest":true,"CreatedAt":"2025-01-22T20:19:26","Actor":"clydin","Number":"29451","RawContent":null,"Title":"Bump version to \"v19.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29451","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.4\" with changelog.\" (#29451)"},{"Id":"2805236931","IsPullRequest":false,"CreatedAt":"2025-01-22T20:00:52","Actor":"robertsine","Number":"29452","RawContent":null,"Title":"Routes beginning with Dynamic Parameters break Angular Prerendering and SSR","State":"open","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular provides examples on how to use prerendering for parametrized routes like `post/:id`. However, in our project, we have routes with dynamic parameters at the beginning of the route path, such as `:seoAlias/:category/:offerId`.\n\nThis specific route structure causes issues in `Client`, `Server`, and `Prerender` modes, breaking other routes when serving the app in development mode or building the application.\n\n### Minimal Reproduction\n\nWe have created a simple reproduction repository:\n[https://github.com/robertsine/car-shop](https://github.com/robertsine/car-shop)\n\nInside the file `app.routes.server.ts` there are several route variants. By uncommenting them, you can reproduce the issue. Notably, only `offers/:slug` works well. Other server routes are breaking entire app, when serving app in dev mode or serving build.\n\nWe tried to use the `**` path as a _hack_ to prerender our parameterized routes. However, in development mode, it does not work. In build mode, it creates prerendered pages. For note, we must ensure unique parameters across the entire route configuration to avoid hitting several paths with same parameter name. However, it generates fallback content inside the index files.\n\n### Exception or Error\n\n```text\nError: Error(s) occurred while extracting routes:\n- The '' server route does not match any routes defined in the Angular routing configuration (typically provided as a part of the 'provideRouter' call). Please make sure that the mentioned server route is present in the Angular routing configuration.\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.13.1\nPackage Manager: npm 9.5.1\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29452","RelatedDescription":"Open issue \"Routes beginning with Dynamic Parameters break Angular Prerendering and SSR\" (#29452)"},{"Id":"2804950099","IsPullRequest":false,"CreatedAt":"2025-01-22T17:53:28","Actor":"mguay22","Number":"29450","RawContent":null,"Title":"Can't compile libraries with tsconfig paths pointing to source","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI just generated a new Angular application and created two libraries, `lib-a` & `lib-b`\n\nFor a better developer experience, I updated the tsconfig `paths` to point to the source code so updates to the libraries will cause application recompliation:\n\n```\n    \"paths\": {\n      \"lib-a\": [\n        \"./projects/lib-a/src/public-api\"\n      ],\n      \"lib-b\": [\n        \"./projects/lib-b/src/public-api\"\n      ]\n    },\n```\n\nI injected `LibAService` into the application\n\n```\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LibAService } from 'lib-a';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'paths-bug';\n\n  constructor(libAService: LibAService) {}\n}\n```\n\nI then injected `LibBService` into `lib-a`\n\n```\nimport { Injectable } from '@angular/core';\nimport { LibBService } from 'lib-b';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibAService {\n\n  constructor(libBService: LibBService) {\n\n    console.log('LibAService constructor!!!!');\n   }\n}\n```\n\nServing and building the application works fine as expected, but now trying to build `lib-a` I receive the following error:\n\n`Cannot destructure property 'pos' of 'file.referencedFiles[index]' as it is undefined.`\n\nIt appears that changing the tsconfig `paths` to point to the TypeScript source is the cause of this issue - but why? Shouldn't we be able to compile Angular libs with `paths` pointing to source?\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/mguay22/paths-bug\n\n### Please provide the exception or error you saw\n\n```true\nCannot destructure property 'pos' of 'file.referencedFiles[index]' as it is undefined\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/build                  19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nng-packagr                      19.1.0\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nRelated issue: https://github.com/angular/angular/issues/57850","Url":"https://github.com/angular/angular-cli/issues/29450","RelatedDescription":"Closed issue \"Can't compile libraries with tsconfig paths pointing to source\" (#29450)"},{"Id":"2804919539","IsPullRequest":false,"CreatedAt":"2025-01-22T17:08:50","Actor":"LMFinney","Number":"29448","RawContent":null,"Title":"Erroneous \"Could not find package.json\" error on upgrading to Angular 19","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen running `ng update @angular/core@19 @angular/cli@19` as suggested by https://angular.dev/update-guide?v=18.0-19.0&l=2, I get an error \"Could not find package.json\". However, the file is definitely there.\n\nThanks to the `angular-errors.log`, I was able to isolate the problem to `node_modules/@angular/cli/src/utilities/package-tree.js`. With some console logging, I was able to isolate the problem to `readPackageJson()`. For some reason, `fs.promises.readFile(packageJsonPath)` is returning an extra space at the beginning of the text, so, `JSON.parse()` can't read it.\n\nI was able to fix it locally by changing `(await fs.promises.readFile(packageJsonPath)).toString()` to `(await fs.promises.readFile(packageJsonPath)).toString().trim()`, and it seemed to work well.\n\nIs there any possible problem with adding `trim()` to that line? If not, can we add it?\n\n### Minimal Reproduction\n\nI don't know why this is happening for me and not others. Perhaps there's a problem in the `fs.promises.readFile()` implementation I have. However, it's fixed by adding just `trim()`.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    18.2.11\n@angular/cli                    19.1.3\n@angular/flex-layout            15.0.0-beta.42\n@angular/material               18.2.11\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29448","RelatedDescription":"Open issue \"Erroneous \"Could not find package.json\" error on upgrading to Angular 19\" (#29448)"},{"Id":"2804934103","IsPullRequest":false,"CreatedAt":"2025-01-22T16:56:04","Actor":"alfaex","Number":"29449","RawContent":null,"Title":" Dynamic base href (APP_BASE_HREF) for SSR","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI'm using Angular as SSR multi tenant app.\n\nWe differentiate the clients per domain.\n\nexemple:\n  potato.com/portal\n  tomato.com/citizen\n  onion-tickets.com\n\nThe majority from our clients use a specific base href and just a few serve the app on the root.\n\nRight now it's difficult to work with angular with this setup, I had to do some 'stuff' on the SSR server to make it work.\n\nWe use a similar configuration for development too because it's easy to use domains rather than keep changing the client for localhost. This also allows to have many clients configured at the same time.\n\nFor the development we simply add on the OS hosts file `[CLIENT].local` and have nginx running on docker.\nThis has sped up a lot of developing time.\n\nWe are migrating from angular 16 to 19 and already preparing for the `AngularNodeAppEngine` because from what I saw in the docs it will be the default instead of the `ngExpressEngine` and `CommonEngine`.\n \nAt the moment there are (what I believe is regression) some things that worked in v16 that don't work in v19, and it impacts production and development.\n\nI was preparing a repo with an example app to list those problems, but later realized that if the APP_BASE_HREF doesn't work like before, none of the other stuff matters.\n\nThis is part of the code that we use to make it work.\n\n```typescript\n// this will garantee that all the js are served from the right routes.\nif (condition) {\n  res.render(indexHtml, {\n    req,\n    document: docWithoutBaseHref\n  });\n} else {\n  res.render(indexHtml, {\n    req,\n    providers: [{ provide: APP_BASE_HREF, useValue: clientBaseHref }],\n    document: docWithBaseHref\n  })\n}\n```\n\nAs you can see by the name of the variables `docWithoutBaseHref` and `docWithBaseHref` we also manually parse the index file to add and remove the base href according to the domain and base href from the request.\n\nI look it up in the code for v19 and the base href is retrieved from the html generated on the bundling process by the `.handle(req)` method from `AngularNodeAppEngine`, this break our app because we need to put the base href that came from the SSR request, instead of reading from a static file.\n\nIs there a possibility to have this again working with Angular?\n\nWe tested with `commonEngine` and it has the same capabilities from `ngExpressEngine`.\n\nThe problem is that I don't think the angular team will maintain multiple packages, considering that the Server routes it's supported only by `AngularNodeAppEngine` and it will be the future of angular SSR and the other options will be deprecated.\n\nWe would like to know if something like this will be considered to be supported by `AngularNodeAppEngine`?\n\nWe can still keep using the packages/code that allow our customization, but this will only delay the problem and will force us to stay attached to an older version of angular. And prevent the use of new features.\n\nWe rely on this information to make a decision about how to move forward.\n\nThanks.\nCheers.\n\n### Proposed solution\n\nAllow for customization of html files from the SSR server instead of using hard coded values.\nAllow to provide dynamic base href from SSR to the rendering of an angular route.\n\n### Alternatives considered\n\nKeep using an older angular version and never upgrade.\nMove to another framework.","Url":"https://github.com/angular/angular-cli/issues/29449","RelatedDescription":"Open issue \" Dynamic base href (APP_BASE_HREF) for SSR\" (#29449)"},{"Id":"2804191071","IsPullRequest":false,"CreatedAt":"2025-01-22T12:48:00","Actor":"kbrilla","Number":"29446","RawContent":null,"Title":"top level await could be allowed with zoneless change detection","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Description\n\nNow that zoneless change detection is slowly exiting experimental phase, would it be possible to allow by some flag configuration use of top level await? \nCurrently it is being disallowed by browser list overrides\n\n`ERROR] Top-level await is not available in the configured target environment (\"chrome131.0\" + 5 overrides)`\n\n### Describe the solution you'd like\n\nAllow top level await usage\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29446","RelatedDescription":"Closed issue \"top level await could be allowed with zoneless change detection\" (#29446)"},{"Id":"2803471341","IsPullRequest":true,"CreatedAt":"2025-01-22T12:06:35","Actor":"angular-robot","Number":"29439","RawContent":null,"Title":"build: update github/codeql-action action to v3.28.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.28.1` -> `v3.28.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.2`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.2)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.28.1...v3.28.2)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\n#### 3.28.2 - 21 Jan 2025\n\nNo user facing changes.\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.2/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29439","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.28.2\" (#29439)"},{"Id":"2804085793","IsPullRequest":true,"CreatedAt":"2025-01-22T11:05:49","Actor":"angular-robot","Number":"29445","RawContent":null,"Title":"build: update dependency undici to v7.3.0","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [undici](https://undici.nodejs.org) ([source](https://redirect.github.com/nodejs/undici)) | devDependencies | minor | [`7.2.3` -> `7.3.0`](https://renovatebot.com/diffs/npm/undici/7.2.3/7.3.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v7.3.0`](https://redirect.github.com/nodejs/undici/releases/tag/v7.3.0)\n\n[Compare Source](https://redirect.github.com/nodejs/undici/compare/v7.2.3...v7.3.0)\n\n##### What's Changed\n\n-   fix: sqlite null ref by [@&#8203;ronag](https://redirect.github.com/ronag) in [https://github.com/nodejs/undici/pull/4016](https://redirect.github.com/nodejs/undici/pull/4016)\n-   fix: sqlite remove unnecessary parameter by [@&#8203;ronag](https://redirect.github.com/ronag) in [https://github.com/nodejs/undici/pull/4017](https://redirect.github.com/nodejs/undici/pull/4017)\n-   feat: sqlite add set and minor cleanup by [@&#8203;ronag](https://redirect.github.com/ronag) in [https://github.com/nodejs/undici/pull/4018](https://redirect.github.com/nodejs/undici/pull/4018)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v7.2.3...v7.3.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29445","RelatedDescription":"Open PR \"build: update dependency undici to v7.3.0\" (#29445)"},{"Id":"2803962066","IsPullRequest":false,"CreatedAt":"2025-01-22T10:13:38","Actor":"mateuszroszczyk","Number":"29444","RawContent":null,"Title":"Route matcher not supported on '/' route","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThis issue is related to the package `@angular/ssr` and was introduced in its 19.1.0 version. Using a route matcher on a '/' route results in error after running `ng serve` or `ng build`. Locking the package's version to 19.0.7 removes this error. I'm reporting this as a bug since I haven't found this change to be documented anywhere.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/mateuszroszczyk/ssr-bug-repro\n\n### Please provide the exception or error you saw\n\n```true\n[vite] Internal server error: Error(s) occurred while extracting routes:\n- The route '/' uses a route matcher which is not supported.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.12.2\nPackage Manager: pnpm 9.2.0\nOS: win32 x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3 (cli-only)\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3 (cli-only)\n@angular-devkit/schematics      19.1.3 (cli-only)\n@angular/cli                    19.1.3\n@angular/ssr                    19.1.3\n@schematics/angular             19.1.3 (cli-only)\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29444","RelatedDescription":"Closed issue \"Route matcher not supported on '/' route\" (#29444)"},{"Id":"2803872230","IsPullRequest":true,"CreatedAt":"2025-01-22T09:54:13","Actor":"alan-agius4","Number":"29442","RawContent":null,"Title":"refactor(@angular/ssr): update `getPathSegments` to use `stripTrailingSlash` instead of `filter(Boolean)`","State":"closed","Body":"\r\n\r\nThis change modifies the `getPathSegments` function to use `stripTrailingSlash`, providing a more consistent and reliable way to handle trailing slashes in paths. This update also resolves issues causing CI failures.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29442","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): update `getPathSegments` to use `stripTrailingSlash` instead of `filter(Boolean)`\" (#29442)"},{"Id":"2803911036","IsPullRequest":false,"CreatedAt":"2025-01-22T09:51:04","Actor":"us77ipis","Number":"29443","RawContent":null,"Title":"Angular 19.1.3 SSR Vite Crash on every reload HMR disabled","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter updating from 19.0.x to 19.1.3 even with HMR disabled `ng serve` crashes any time I update any file.\n\nLooks similar to #29424, but happens also with HMR disabled.\n\n### Minimal Reproduction\n\nRun `ng serve --no-hmr`\n\n### Exception or Error\n\n```text\n[vite] (ssr) Error when evaluating SSR module /main.server.mjs:\n|- Error: [vite] cannot find entry point module '/main.server.mjs'.\n    at fetchModule (file:///app/frontend/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:51477:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async handleInvoke (file:///app/frontend/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44166:22)\n    at async EventEmitter.listenerForInvokeHandler (file:///app/frontend/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44239:19)\n\nAn unhandled exception occurred: [vite] cannot find entry point module '/main.server.mjs'.\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.3\nNode: 22.12.0\nPackage Manager: npm 10.9.0\nOS: linux x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cdk                    19.1.0\n@angular/cli                    19.1.3\n@angular/material               19.1.0\n@angular/ssr                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29443","RelatedDescription":"Open issue \"Angular 19.1.3 SSR Vite Crash on every reload HMR disabled\" (#29443)"},{"Id":"2802540182","IsPullRequest":false,"CreatedAt":"2025-01-22T08:33:14","Actor":"vincesp","Number":"29436","RawContent":null,"Title":"ng serve does not work with npm workspaces, yields invalid Vite configuration","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nOut of the box, Vite has built-in support for NPM workspaces and detects the proper (parent) folder automatically that contains the node_modules shared by all workspaces. Unfortunately, `ng serve` breaks this behavior by overriding the Vite settings.\n\n**Steps to reproduce:**\n\nClone the provided repository, then run\n\n```\nnpm i\n```\n\nThen, run `ng serve` by executing\n\n```\nnpm start -w angular-app\n```\n\n**Actual behavior:** The font cannot be loaded, as the allow list of Vite is misconfigured, see error message below.\n\n**Expected behavior:** The page is rendered in the curly \"Ole\" font.\n\nReproduce the _expected_ behavior by running\n\n```\nnpm run dev -w vite-app\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/vincesp/angular-workspace-bug\n\n### Please provide the exception or error you saw\n\n```true\nThe request url \"/workspaces/codespaces-blank/my-font-css/ole.woff2\" is outside of Vite serving allow list.\n\n- /workspaces/codespaces-blank/angular-app/.angular/cache/19.1.3/angular-app/vite\n- /workspaces/codespaces-blank/angular-app/node_modules\n- /workspaces/codespaces-blank/angular-app/public/favicon.ico\n- /workspaces/codespaces-blank/node_modules/@angular/build/node_modules/vite/dist/client\n\nRefer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: undefined\n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.3\n@angular-devkit/core         19.1.3\n@angular-devkit/schematics   19.1.3\n@schematics/angular          19.1.3\n```\n\n### Anything else?\n\nAlso, `ng build` does not work:\n\n```\nnpm run build -w angular-app\n```\n\nResult:\n\n```\nApplication bundle generation failed. [5.704 seconds]\n\n✘ [ERROR] No loader is configured for \".woff2\" files: ../my-font-css/ole.woff2\n\n    ../my-font-css/index.css:6:9:\n      6 │     src: url(ole.woff2) format('woff2');\n```\n\nExpected behavior: The woff2 file is copied into the bundle, as it is the case with:\n\n```\nnpm run build -w vite-app\n```","Url":"https://github.com/angular/angular-cli/issues/29436","RelatedDescription":"Closed issue \"ng serve does not work with npm workspaces, yields invalid Vite configuration\" (#29436)"},{"Id":"2803479076","IsPullRequest":false,"CreatedAt":"2025-01-22T06:10:26","Actor":"HymanZHAN","Number":"29440","RawContent":null,"Title":"Angular 19.1.3 Component HMR + TailwindCSS Problem - Not HMR but destructive refresh","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen developing with HMR enabled, changing a TailwindCSS class in the template would trigger a destructive reload, not HMR. Changing styles in component TS files or commenting out / adding template chunks seems to work fine. \n\nhttps://github.com/user-attachments/assets/a6af8966-1553-4c6f-9446-7acc31620369\n\n### Minimal Reproduction\n\nA small (probably not minimal) reproduction: https://github.com/HymanZHAN/todo-mvc-angular\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n> ng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.1.3\nNode: 22.11.0\nPackage Manager: pnpm 9.15.4\nOS: linux x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nThe todo app is zoneless.","Url":"https://github.com/angular/angular-cli/issues/29440","RelatedDescription":"Open issue \"Angular 19.1.3 Component HMR + TailwindCSS Problem - Not HMR but destructive refresh\" (#29440)"},{"Id":"2802987315","IsPullRequest":true,"CreatedAt":"2025-01-21T22:58:22","Actor":"clydin","Number":"29437","RawContent":null,"Title":"refactor(@angular/build): allow browser client to log console message with dev-server","State":"open","Body":"The development server now supports a WebSocket event named `angular:log`. This event allows the browser client to send log messages back to the development server. Currently this is unused by the client and Angular runtime. But is intended to be used in the future for such cases as propagating error messages back to the development server console. This event is considered internal and should not be relied upon by external code.","Url":"https://github.com/angular/angular-cli/pull/29437","RelatedDescription":"Open PR \"refactor(@angular/build): allow browser client to log console message with dev-server\" (#29437)"},{"Id":"2801757903","IsPullRequest":true,"CreatedAt":"2025-01-21T20:08:20","Actor":"alan-agius4","Number":"29428","RawContent":null,"Title":"fix(@angular/build): include extracted routes in the manifest during prerendering","State":"closed","Body":"\r\nThis commit ensures that extracted routes are added to the manifest during prerendering. This guarantees a correct ng-server-context value for parameterized routes and provides a performance benefit by preventing route extraction from being repeated for every rendering worker.\r\n\r\nCloses #29426\r\n","Url":"https://github.com/angular/angular-cli/pull/29428","RelatedDescription":"Closed or merged PR \"fix(@angular/build): include extracted routes in the manifest during prerendering\" (#29428)"},{"Id":"2802067058","IsPullRequest":true,"CreatedAt":"2025-01-21T17:19:11","Actor":"devversion","Number":"29433","RawContent":null,"Title":"Migrate more tests to `rules_js`","State":"closed","Body":"This is likely the second last PR to migrate tests to `rules_js`. One left after this one.","Url":"https://github.com/angular/angular-cli/pull/29433","RelatedDescription":"Closed or merged PR \"Migrate more tests to `rules_js`\" (#29433)"},{"Id":"2802207468","IsPullRequest":false,"CreatedAt":"2025-01-21T15:50:38","Actor":"Lucas-Kobayashi","Number":"29435","RawContent":null,"Title":"[plugin:vite:import-analysis] Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen updating any html file inside my component angular crashes and presents the following error \n\n`[vite] Internal server error: Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: /Users/lucaskobayashi/Documents/Nextmed/SGN/.angular/vite-root/sgn/main.js:182:17\n  191|          path: \"painel/paineis\",\n  192|          data: { title: \"Pain\\xE9is\" },\n  193|          loadComponent: () => import(\"./chunk-NYDFRQ4Q.js\").then((e) => e.PanelListScreenComponent)\n     |                                      ^\n  194|        },\n  195|        {\n      at TransformPluginContext._formatError (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47397:41)\n      at TransformPluginContext.error (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47392:16)\n      at normalizeUrl (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45642:23)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45761:39`\n\nThe project was running fine until yesterday, current core and cli version\n`\"dependencies\": {\n    \"@angular/animations\": \"^19.0.5\",\n    \"@angular/common\": \"^19.0.5\",\n    \"@angular/compiler\": \"^19.0.5\",\n    \"@angular/core\": \"^19.0.5\",\n    \"@angular/forms\": \"^19.0.5\",\n    \"@angular/platform-browser\": \"^19.0.5\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.5\",\n    \"@angular/platform-server\": \"^19.0.5\",\n    \"@angular/router\": \"^19.0.5\",\n    \"@angular/ssr\": \"^19.0.6\",\n    \"@primeng/themes\": \"^19.0.2\",\n    \"angular-svg-icon\": \"^19.1.1\",\n    \"apexcharts\": \"^4.3.0\",\n    \"express\": \"^4.18.2\",\n    \"ng-apexcharts\": \"^1.15.0\",\n    \"primeicons\": \"^7.0.0\",\n    \"primeng\": \"^19.0.2\",\n    \"rxjs\": \"~7.8.0\",\n    \"tailwindcss-primeui\": \"^0.3.4\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.15.0\"\n  },`\n\n I've tried updating angular core and cli, but the error changed, now is presenting the following error\n\n`Error: [vite] cannot find entry point module 'file:///Users/lucaskobayashi/Documents/Nextmed/SGN/.angular/vite-root/sgn/@ng/component?c=src%2Fapp%2Fapp.component.ts%40AppComponent&t=1737473040253'.\n    at fetchModule (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:51477:13)\n    at async handleInvoke (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44166:22)\n    at async EventEmitter.listenerForInvokeHandler (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44239:19) {\n  runnerError: Error: RunnerError\n      at reviveInvokeError (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/module-runner.js:541:18)\n      at Object.invoke (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/module-runner.js:624:15)\n}`\n\n### Minimal Reproduction\n\nAfter running ng serve and changing anything in the HTML file of any component.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nNode.js version v23.5.0 detected.\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 23.5.0 (Unsupported)\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.1.1\n... core, ssr\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1901.1\n@angular-devkit/build-angular       19.1.1\n@angular-devkit/core                19.1.1\n@angular-devkit/schematics          19.1.3\n@angular/animations                 19.1.2\n@angular/cli                        19.1.3\n@angular/common                     19.1.2\n@angular/compiler                   19.1.2\n@angular/compiler-cli               19.1.2\n@angular/forms                      19.1.2\n@angular/platform-browser           19.1.2\n@angular/platform-browser-dynamic   19.1.2\n@angular/platform-server            19.1.2\n@angular/router                     19.1.2\n@schematics/angular                 19.1.3\nrxjs                                7.8.1\ntypescript                          5.5.4\nzone.js                             0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29435","RelatedDescription":"Closed issue \"[plugin:vite:import-analysis] Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?\" (#29435)"},{"Id":"2802185634","IsPullRequest":true,"CreatedAt":"2025-01-21T15:43:03","Actor":"alan-agius4","Number":"29434","RawContent":null,"Title":"ci: replace platform linux with windows 11","State":"closed","Body":"For some reason it seems all Linux tests are failing\r\n```\r\n[15:25:13] I/testLogger - [chrome 132 Linux #01] PID: 17353\r\n[chrome 132 Linux #01] Specs: /tmp/angular-cli-e2e-HZAJ55/e2e-test/test-project/e2e/src/app.e2e-spec.ts\r\n[chrome 132 Linux #01]\r\n[chrome 132 Linux #01] [15:24:49] I/sauce - Using SauceLabs selenium server at https://ondemand.saucelabs.com:443/wd/hub\r\n[chrome 132 Linux #01] Jasmine started\r\n[chrome 132 Linux #01] [15:25:10] E/protractor - Could not find Angular on page http://localhost:2000/ : retries looking for angular exceeded\r\n```\r\nhttps://github.com/angular/angular-cli/actions/runs/12890037755/job/35938861009\r\n","Url":"https://github.com/angular/angular-cli/pull/29434","RelatedDescription":"Closed or merged PR \"ci: replace platform linux with windows 11\" (#29434)"},{"Id":"2801920397","IsPullRequest":true,"CreatedAt":"2025-01-21T15:36:34","Actor":"alan-agius4","Number":"29429","RawContent":null,"Title":"fix(@angular/build): replace deprecation of `i18n.baseHref` with a warning","State":"closed","Body":"In certain scenarios, users build applications with the same `baseHref` when using i18n, primarily for deploying localized applications across multiple domains. To address this, we are removing the deprecation of `i18n.baseHref` and will revisit potential options as part of https://github.com/angular/angular-cli/issues/29111\r\n\r\nInstead of deprecating `i18n.baseHref`, we now issue a warning when it is used with SSR, as this may lead to undefined behavior.\r\n\r\nCloses #29396\r\n","Url":"https://github.com/angular/angular-cli/pull/29429","RelatedDescription":"Closed or merged PR \"fix(@angular/build): replace deprecation of `i18n.baseHref` with a warning\" (#29429)"},{"Id":"2802050448","IsPullRequest":true,"CreatedAt":"2025-01-21T15:36:23","Actor":"alan-agius4","Number":"29431","RawContent":null,"Title":"refactor: reduce dependencies on `@angular-devkit/core`","State":"closed","Body":"By converting schemas from TypeScript `interfaces` to `types`, we can minimize the reliance on `json.JsonObject`. This approach avoids the error \"Type 'Schema' does not satisfy the constraint 'JsonObject'\" caused by the missing index signature for type 'string' in 'Schema'.","Url":"https://github.com/angular/angular-cli/pull/29431","RelatedDescription":"Closed or merged PR \"refactor: reduce dependencies on `@angular-devkit/core`\" (#29431)"},{"Id":"2801972642","IsPullRequest":true,"CreatedAt":"2025-01-21T15:17:40","Actor":"alan-agius4","Number":"29430","RawContent":null,"Title":"test: update saucelabs browsers versions","State":"closed","Body":"Bump versions to latests\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29430","RelatedDescription":"Closed or merged PR \"test: update saucelabs browsers versions\" (#29430)"},{"Id":"2802056952","IsPullRequest":false,"CreatedAt":"2025-01-21T14:49:10","Actor":"ChristianKlimabrz","Number":"29432","RawContent":null,"Title":"Source Maps Missing When AoT is Disabled","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nDescription:\nAfter upgrading Angular, Source Maps are not generated if \"aot\": false is set in the configuration, even though \"sourceMap\": true is specified. With \"aot\": true, the Source Maps appear as expected.\n\nSteps to Reproduce:\n\nSet \"aot\": false in [angular.json]\nRun the build command\nObserve that no Source Maps are generated\nExpected Behavior:\nSource Maps should be generated regardless of the AoT setting.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.1.3\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router, service-worker\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1901.3\n@angular-devkit/build-angular     19.1.3\n@angular-devkit/core              19.1.2\n@angular-devkit/schematics        19.1.2\n@angular/cdk                      19.1.0\n@angular/cli                      19.1.3\n@angular/material                 19.1.0\n@angular/material-luxon-adapter   19.1.0\n@schematics/angular               19.1.2\nng-packagr                        19.1.0\nrxjs                              7.8.1\ntypescript                        5.7.3\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29432","RelatedDescription":"Closed issue \"Source Maps Missing When AoT is Disabled\" (#29432)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2805225551","IsPullRequest":true,"CreatedAt":"2025-01-22T19:53:51","Actor":"andrewseguin","Number":"30374","RawContent":null,"Title":"fix(material/select): remove value from aria-labelledby","State":"open","Body":"Remove the select value's element ID from the combobox's list of `aria-labelledby`\r\n\r\nCloses #24899 ","Url":"https://github.com/angular/components/pull/30374","RelatedDescription":"Open PR \"fix(material/select): remove value from aria-labelledby\" (#30374)"},{"Id":"2804932108","IsPullRequest":true,"CreatedAt":"2025-01-22T17:14:59","Actor":"devversion","Number":"30373","RawContent":null,"Title":"build: allow mutable install when installing snapshot builds in docs deployment","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30373","RelatedDescription":"Open PR \"build: allow mutable install when installing snapshot builds in docs deployment\" (#30373)"},{"Id":"2804869874","IsPullRequest":true,"CreatedAt":"2025-01-22T17:02:18","Actor":"devversion","Number":"30372","RawContent":null,"Title":"build: initial attempt to fix docs site deployment","State":"closed","Body":"This fixes a few issues:\r\n\r\n- uses the monorepo checked-in docs sources for deployment of >=v19\r\n- properly installs dependencies for that repository, avoiding mismatches with the checked-in yarn of the monorepo root.\r\n- avoids sandbox when launching puppeteer for audits","Url":"https://github.com/angular/components/pull/30372","RelatedDescription":"Closed or merged PR \"build: initial attempt to fix docs site deployment\" (#30372)"},{"Id":"2804792490","IsPullRequest":true,"CreatedAt":"2025-01-22T16:12:10","Actor":"crisbeto","Number":"30371","RawContent":null,"Title":"Bump version to \"v19.2.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30371","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.1\" with changelog.\" (#30371)"},{"Id":"2804777616","IsPullRequest":true,"CreatedAt":"2025-01-22T16:08:13","Actor":"crisbeto","Number":"30370","RawContent":null,"Title":"docs: release notes for the v19.1.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30370","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.1 release\" (#30370)"},{"Id":"2804770119","IsPullRequest":true,"CreatedAt":"2025-01-22T16:03:24","Actor":"crisbeto","Number":"30369","RawContent":null,"Title":"Bump version to \"v19.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30369","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.1\" with changelog.\" (#30369)"},{"Id":"2804709428","IsPullRequest":false,"CreatedAt":"2025-01-22T15:35:19","Actor":"richardsengers","Number":"30368","RawContent":null,"Title":"bug(button-toggle): strong focus indicator for vertical button-group has wrong shape for first and last item","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe strong focus borders are not rotated for the first and last item\n\n<img width=\"44\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/36f68968-0e1c-489a-aa68-1a0a20a076cf\" />\n\n<img width=\"42\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/55f5cba3-f4ef-4dfb-b37c-eee407474a83\" />\n\n\n\n### Reproduction\n\nStackBlitz link: Stackblitz is not working at the moment, but I think my screenshots tell enough :-)\n\n\n\n### Expected Behavior\n\nMake the focus indicator rotate for the first and alst item in a button-toggle\n\n### Actual Behavior\n\nWrong rotation\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30368","RelatedDescription":"Open issue \"bug(button-toggle): strong focus indicator for vertical button-group has wrong shape for first and last item\" (#30368)"},{"Id":"2804126233","IsPullRequest":true,"CreatedAt":"2025-01-22T11:24:47","Actor":"AJJPostma","Number":"30367","RawContent":null,"Title":"fix(material/select): fixed text color for selected options in multiple select","State":"open","Body":"Fixes a bug in the Angular Material `select` component where the selected options in a  `select` with the multiple attribute have the wrong text color. This is because the the text color styling for the `select` without the multiple attribute is applied.\r\n\r\nfixes #30366 ","Url":"https://github.com/angular/components/pull/30367","RelatedDescription":"Open PR \"fix(material/select): fixed text color for selected options in multiple select\" (#30367)"},{"Id":"2804107534","IsPullRequest":false,"CreatedAt":"2025-01-22T11:15:56","Actor":"AJJPostma","Number":"30366","RawContent":null,"Title":"bug(select): multiple select uses single select text color for selected options (on-secondary-container)","State":"open","Body":"\n### Description\n\nWhen using a single select, the selected option gets seconary-container backround color with on-secondary-container text color. When using a multiple select the backround color of selected options stays the same (because there already is a checkbox to show selected state), but the text color still changes to on-secondary-container making it potentially hard to read (depending on your theme).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-zxlbij2m\n1.  Select an option in the single select\n2. Select an option in the multiple select\n3. See invisible selected item in multiple select.\n\n\n### Expected Behavior\n\nmat-option text color should only change when selected for single select\n\n### Actual Behavior\n\nmat-option, in mat-select with multiple, text color changes when selected, making it hard/impossible to see on some color schemes.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30366","RelatedDescription":"Open issue \"bug(select): multiple select uses single select text color for selected options (on-secondary-container)\" (#30366)"},{"Id":"2803972837","IsPullRequest":false,"CreatedAt":"2025-01-22T10:17:30","Actor":"FlepTheFlabbergasted","Number":"30365","RawContent":null,"Title":"bug(mat-tab): MatTab content is removed instantly at the start of route transition animation","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe content of a mat-tab instantly gets removed when implementing a route transition animation between two components.\n\nHere is a gif of showing the problem\n![Image](https://github.com/user-attachments/assets/323effb0-6cc9-4870-a2da-c9216e765635)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/~/github.com/FlepTheFlabbergasted/mat-tab-bug-v19.1.0?file=src/app/one/one.component.html\n\nSteps to reproduce:\n1. Create a route transition animation between two components\n2. Have the first components display some content in a mat-tab-group\n3. Trigger the animation between the components\n4. Observe the mat-tab content dissapears immediately when the router animation starts\n\n### Expected Behavior\n\nThe content of the mat-tab fades away slowly together with the component using it.\n\n### Actual Behavior\n\nThe mat-tab content gets removed instantly when the animations start.\n\n### Environment\n\n- Angular:\n  - @angular-devkit/architect          0.1901.3\n    @angular-devkit/build-angular  19.1.3\n    @angular-devkit/core                 19.1.3\n    @angular-devkit/schematics      19.1.3\n    @angular/cli                               19.1.3\n    @schematics/angular                 19.1.3\n- CDK/Material:\n  - @angular/cdk                             19.1.0\n    @angular/material                     19.1.0\n- Browser(s):\n  - Chrome (Version 131.0.6778.265 (Official Build) (64-bit))\n  - Firefox (Version 134.0.1 (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu):\n  - Windows 10\n","Url":"https://github.com/angular/components/issues/30365","RelatedDescription":"Open issue \"bug(mat-tab): MatTab content is removed instantly at the start of route transition animation\" (#30365)"},{"Id":"2803262756","IsPullRequest":true,"CreatedAt":"2025-01-22T03:12:20","Actor":"essjay05","Number":"30364","RawContent":null,"Title":"fix(material/chips): update chip-row disabled chip to be focused","State":"open","Body":"Updates chip-row element of Angular Components Chip Component to be focusable even if the chip is disabled. This allows the chip to be accessed via screenreader and read aloud as a disabled chip.\r\n\r\nFixes b/380373844","Url":"https://github.com/angular/components/pull/30364","RelatedDescription":"Open PR \"fix(material/chips): update chip-row disabled chip to be focused\" (#30364)"},{"Id":"2802906542","IsPullRequest":true,"CreatedAt":"2025-01-21T22:05:02","Actor":"crisbeto","Number":"30363","RawContent":null,"Title":"fix(material/select): switch away from animations module","State":"open","Body":"Reworks the select so it doesn't depend on the animations module.","Url":"https://github.com/angular/components/pull/30363","RelatedDescription":"Open PR \"fix(material/select): switch away from animations module\" (#30363)"},{"Id":"2802474857","IsPullRequest":false,"CreatedAt":"2025-01-21T17:53:52","Actor":"bmayen","Number":"30362","RawContent":null,"Title":"bug(select): Non-native Selects do not announce state properly with screen readers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nReported by our accessibility team:\n\"When the selects are activated the state is not communicated. In JAWS neither state is communicated, in NVDA only the collapsed state is communicated.\"\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nShould announce different states on state changes\n\n### Actual Behavior\n\nIn JAWS neither state is communicated, in NVDA only the collapsed state is communicated\n\n### Environment\n\n- Angular: 18.x\n- CDK/Material: 18.x\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows/OSX\n","Url":"https://github.com/angular/components/issues/30362","RelatedDescription":"Open issue \"bug(select): Non-native Selects do not announce state properly with screen readers\" (#30362)"},{"Id":"2802264350","IsPullRequest":false,"CreatedAt":"2025-01-21T16:12:01","Actor":"Fernando-Zhunio","Number":"30361","RawContent":null,"Title":"ANativeDateAdapter class parse method error","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the parse method he takes two arguments, the second which is the format does not use it.\nWhen the mat-date-range-input component is called and value is entered and the format is set to the non-default (MM/dd/yyyy) it is repositioned.\nIt only happens when editing without the date picker.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. A format of 'dd/MM/yyyy' is set in the module providers and the Locate is set to 'es-ES'.\n2. The mat-date-range-input component is rendered.\n3. A date range is selected using the selector in the ui.\n4. Any date is edited in the input on that date.\n5. The day changes position in the competitor blur event (BUG), as it calls the event parse before the blur the date does not take it with the format it is\n\n### Expected Behavior\n\nIt should respect the format defined in the providers\n\n### Actual Behavior\n\nThe month with the day in the blur event of the mentioned component is repositioned\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows):\n","Url":"https://github.com/angular/components/issues/30361","RelatedDescription":"Open issue \"ANativeDateAdapter class parse method error\" (#30361)"},{"Id":"2801678872","IsPullRequest":true,"CreatedAt":"2025-01-21T14:10:40","Actor":"crisbeto","Number":"30360","RawContent":null,"Title":"fix(material/datepicker): switch away from animations module","State":"closed","Body":"Reworks the datepicker so it no longer depends on the animations module.","Url":"https://github.com/angular/components/pull/30360","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): switch away from animations module\" (#30360)"},{"Id":"2794929495","IsPullRequest":false,"CreatedAt":"2025-01-21T13:16:42","Actor":"richardsengers","Number":"30349","RawContent":null,"Title":"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nM2\n\n### Description\n\nA mat-dialog has a default of 560px as a max-width. \nOffcourse we can override this behaviour but to me it looks like it's a wrong default because all dialogs are max 560px when changing to the new m3\n\n<img width=\"737\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/964023b0-cb10-4cc7-b000-a23a7218f219\" />\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/tjvfafte-mzvlpzlp?file=src%2Fexample%2Fdialog-overview-example.ts\nSteps to reproduce:\n1. Make screen larger then 560px, you will notice the dialog isn't getting larger\n\n\n### Expected Behavior\n\nWhen a width is set to the dialog, the dialog should be as wide as the given width\n\n### Actual Behavior\n\nThe dialog has a max width of 560px\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30349","RelatedDescription":"Closed issue \"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px\" (#30349)"},{"Id":"2797601036","IsPullRequest":false,"CreatedAt":"2025-01-21T13:14:36","Actor":"alanpurple","Number":"30353","RawContent":null,"Title":"docs-bug(ALL): No examples of how to apply theme html-element-wise","State":"closed","Body":"### Documentation Feedback\n\nthere is no way to apply defined primary, secondary, error, etc   color to components\n\nfor one, there is no example how to apply secondary or tertiary color to material button\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30353","RelatedDescription":"Closed issue \"docs-bug(ALL): No examples of how to apply theme html-element-wise\" (#30353)"},{"Id":"2799275893","IsPullRequest":true,"CreatedAt":"2025-01-21T13:10:16","Actor":"crisbeto","Number":"30356","RawContent":null,"Title":"fix(material/autocomplete): switch away from animations module","State":"closed","Body":"Switches the autocomplete away from the animations module. The animations are implemented using CSS instead.","Url":"https://github.com/angular/components/pull/30356","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): switch away from animations module\" (#30356)"},{"Id":"2797786254","IsPullRequest":true,"CreatedAt":"2025-01-21T13:04:52","Actor":"crisbeto","Number":"30354","RawContent":null,"Title":"fix(material/form-field): remove dependency on animations module","State":"closed","Body":"Switches the form field to use CSS for the subscript animations, instead of going through the animations module.","Url":"https://github.com/angular/components/pull/30354","RelatedDescription":"Closed or merged PR \"fix(material/form-field): remove dependency on animations module\" (#30354)"},{"Id":"2799093523","IsPullRequest":true,"CreatedAt":"2025-01-21T12:53:17","Actor":"crisbeto","Number":"30355","RawContent":null,"Title":"fix(cdk/text-field): clear cached line height on resize","State":"closed","Body":"Clears the cached heights in the autosize directive when the window is resized since they may change.","Url":"https://github.com/angular/components/pull/30355","RelatedDescription":"Closed or merged PR \"fix(cdk/text-field): clear cached line height on resize\" (#30355)"},{"Id":"2800057420","IsPullRequest":false,"CreatedAt":"2025-01-21T12:39:40","Actor":"luvcraft1228","Number":"30358","RawContent":null,"Title":"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.14\n\n### Description\n\nIn a space constrained layout, submenus will occasionally overlap with parent menus. When clicking a parent item with the intention of opening a submenu, the submenu will appear over the parent item and seem to receive a mouse event, thereby selecting it. This behavior is unexpected and could lead to accidental user actions.\n\n### Reproduction\n\nReproduction\nSteps to reproduce:\n\nhttps://material.angular.io/components/menu/examples\nPick mat-menu\nIn dev tools set screen to 256px wide\nClick nested menu -> Animal index -> click near arrow on vertebrates\nMammals will be selected accidentally\n\nPlease see reference to [old issue](https://github.com/angular/components/issues/26306) (v14). Seems to be the same problem. Was fixed in v18.\n\n\n\n\n\n### Expected Behavior\n\n\nExpected Behavior\nSubmenu should not have an item selected as a result of a click on its parent.\n\n![Image](https://github.com/user-attachments/assets/f95787e4-76f9-4272-9480-e0956907e63b)\n\n### Actual Behavior\n\nActual Behavior\nSubmenu has an item selected as a result of a click on its parent.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.0.5\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows / Android\n","Url":"https://github.com/angular/components/issues/30358","RelatedDescription":"Closed issue \"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent\" (#30358)"},{"Id":"2799605427","IsPullRequest":false,"CreatedAt":"2025-01-21T12:33:29","Actor":"sherinkd","Number":"30357","RawContent":null,"Title":"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\nEntered Date: 1999-01-01\nExpected Date: 01/01/1999\n\n![Image](https://github.com/user-attachments/assets/8becb99d-3805-4af9-8851-47e4d8b661dc)\n\n### Reproduction\n\nStep 1: Enter Date: 1999-01-01\nStep 2: blur out\n\n\n### Expected Behavior\n\nExpected Date: 01/01/1999\n\n### Actual Behavior\n\nDisplayed Date: 10/9/1999\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material:  19.0.4\n- Browser(s): any browser\n- Operating System (e.g. Windows, macOS, Ubuntu): any OS\n","Url":"https://github.com/angular/components/issues/30357","RelatedDescription":"Closed issue \"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\" (#30357)"},{"Id":"2800452085","IsPullRequest":false,"CreatedAt":"2025-01-21T00:18:45","Actor":"zohar-chiprut","Number":"30359","RawContent":null,"Title":"Package.json contains duplicate key in exports","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDuplicat key might cause unexpected behavior to consumers importing the package.\n```\n{\n  \"name\": \"@angular/material\",\n  \"version\": \"19.1.0\",\n  \"description\": \"Angular Material\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/angular/components.git\"\n  },\n...\n  \"exports\": {\n      \".\": {\n        \"sass\": \"./_index.scss\",\n        \"types\": \"./index.d.ts\",\n        \"default\": \"./fesm2022/material.mjs\"\n      },\n      \"./theming\": {\n        \"sass\": \"./_theming.scss\"\n      },\n      \"./_theming\": {                              //duplicate key\n        \"sass\": \"./_theming.scss\".   \n      },\n  ...\n  }\n...\n}\n```\n\n### Reproduction\n\nKInorder to reproduce the issuew just npm install @angular/material@19.0.1 and view exports files in package.json, it contains duplicate key \"./theming\"\n\n### Expected Behavior\n\nRemove duplicate keys in exports filed in package.json\n\n### Actual Behavior\n\nthe package contains duplicate key in exports prop\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.1.0\n- Browser(s): Nodejs/ pnpm install\n- Operating macOs\n","Url":"https://github.com/angular/components/issues/30359","RelatedDescription":"Open issue \"Package.json contains duplicate key in exports\" (#30359)"},{"Id":"2794987955","IsPullRequest":false,"CreatedAt":"2025-01-20T05:57:59","Actor":"richardsengers","Number":"30350","RawContent":null,"Title":"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working","State":"closed","Body":"\n### Description\n\nExpansion panels have a default container shape. When setting strong focus indicators, the corner of the strong focus-indicator are not rounded\n\n<img width=\"454\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ec041ad7-39e9-4e63-91f0-e4236537c07b\" />\n\nIn this example, it's just a little bit, but since we have a container-shape token, this can get worse when setting the shape to full\nhttps://m3.material.io/styles/shape/shape-scale-tokens\n\nIssue  2 \nWhen setting the container-shape token to one of the values described by m3 https://m3.material.io/styles/shape/shape-scale-tokens nothing happens. It looks more like container-shape is a true or false token instead of one of the options decribed by m3\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/lhvfsmcd?file=src%2Fstyles.scss\nSteps to reproduce:\n1. Click on the first or last panel\n\n\n### Expected Behavior\n\n1. Strong focus indicator should also be rounded \n2. Token container-shape should have one of the 7 options described by m3 \n\n### Actual Behavior\n\nStrong focus indicator do not have a rounded corner\nSetting container-shape to one of the 7 values removes the rounded corners\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30350","RelatedDescription":"Closed issue \"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working\" (#30350)"},{"Id":"2796838648","IsPullRequest":true,"CreatedAt":"2025-01-20T05:57:58","Actor":"crisbeto","Number":"30352","RawContent":null,"Title":"fix(material/expansion): inherit shape for focus indicator","State":"closed","Body":"Fixes that the focus indicator had a different shape from the header.\r\n\r\nFixes #30350.","Url":"https://github.com/angular/components/pull/30352","RelatedDescription":"Closed or merged PR \"fix(material/expansion): inherit shape for focus indicator\" (#30352)"},{"Id":"2794115737","IsPullRequest":true,"CreatedAt":"2025-01-17T21:01:31","Actor":"mmalerba","Number":"30348","RawContent":null,"Title":"fix(material/autocomplete): fix initial render logic","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30348","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): fix initial render logic\" (#30348)"},{"Id":"2793875667","IsPullRequest":true,"CreatedAt":"2025-01-17T20:47:46","Actor":"mmalerba","Number":"30347","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30347","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30347)"},{"Id":"2795786220","IsPullRequest":false,"CreatedAt":"2025-01-17T15:51:23","Actor":"bmayen","Number":"30351","RawContent":null,"Title":"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen","State":"open","Body":"### Feature Description\n\nWhen using keyboard navigation, the \"close calendar\" button is placed at the bottom of the calendar after tabbing through the other interactive elements in the component. If this button would be positioned offscreen, it should be repositioned into view to improve accessibility.\n\n### Use Case\n\nA user may increase the browser size to 200%, or the calendar may just be positioned toward the bottom of the screen, which may cause this close button to render offscreen when displayed. ","Url":"https://github.com/angular/components/issues/30351","RelatedDescription":"Open issue \"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen\" (#30351)"},{"Id":"2793752150","IsPullRequest":true,"CreatedAt":"2025-01-16T21:01:03","Actor":"mmalerba","Number":"30346","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30346","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30346)"},{"Id":"2793022046","IsPullRequest":true,"CreatedAt":"2025-01-16T15:10:00","Actor":"mmalerba","Number":"30345","RawContent":null,"Title":"Bump version to \"v19.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30345","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.0\" with changelog.\" (#30345)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-23T03:30:04.3159203Z","RunDurationInMilliseconds":3493}