{"Data":{"Angular-Issues":{"Issues":[{"Id":"763037555","IsPullRequest":false,"CreatedAt":"2020-12-11T23:18:02","Actor":"dev054","Number":"40096","RawContent":null,"Title":"Use ngDevMode to tree shake error messages in pipes","State":"open","Body":"# 🚀 feature request\r\n\r\n### Description\r\nCurrently all the errors throwed by pipes are not being tree-shaked in production mode.\r\n\r\n### Relevant Package\r\n`@angular/common/(pipes)`\r\n\r\nExample:\r\nhttps://github.com/angular/angular/blob/884f743baa667ee5b62d67c3fb9dabab1b03d2d8/packages/common/src/pipes/case_conversion_pipes.ts#L37-L39\r\n\r\n### Describe the solution you'd like\r\nI have seen that you made a lot of progress with `ngDevMode`, so I think it would be a case of using it for the purpose of making the package smaller.","Url":"https://github.com/angular/angular/issues/40096","RelatedDescription":"Open issue \"Use ngDevMode to tree shake error messages in pipes\" (#40096)"},{"Id":"761550283","IsPullRequest":true,"CreatedAt":"2020-12-11T21:56:41","Actor":"atscott","Number":"40071","RawContent":null,"Title":"refactor(compiler): only ignore TCB nodes with the ignore diagnostics marker when requesting diagnostics","State":"closed","Body":"refactor(compiler-cli): Add flag to TCB for non-diagnostic requests \r\n\r\nThe TCB utility functions used to find nodes in the TCB are currently\r\nconfigured to ignore results when an ignore marker is found. However,\r\nthese ignore markers are only meant to affect diagnostics requests. The\r\nLanguage Service may have a need to find nodes with diagnostic ignore\r\nmarkers. The most common example of this would be finding references for\r\ngeneric directives. The reference appears to the generic directive's\r\nclass appears on the type ctor in the TCB, which is ignored for\r\ndiagnostic purposes.\r\nThese functions should only skip results when the request is in the\r\ncontext of a larger request for _diagnostics_. In all other cases, we\r\nshould get matches, even if a diagnostic ignore marker is encountered.","Url":"https://github.com/angular/angular/pull/40071","RelatedDescription":"Closed or merged PR \"refactor(compiler): only ignore TCB nodes with the ignore diagnostics marker when requesting diagnostics\" (#40071)"},{"Id":"762936194","IsPullRequest":true,"CreatedAt":"2020-12-11T21:35:49","Actor":"josephperrott","Number":"40095","RawContent":null,"Title":"feat(dev-infra): support --mode flag for building environment stamp ","State":"open","Body":"When building the environment stamp, support two modes: release and snapshot\r\n\r\nThe release mode will always stamp using the current version of in the root package.json\r\nand in snapshot mode will use a version stamp expressing a version based on the tag and\r\nthe number of commits from the tag.","Url":"https://github.com/angular/angular/pull/40095","RelatedDescription":"Open PR \"feat(dev-infra): support --mode flag for building environment stamp \" (#40095)"},{"Id":"761560151","IsPullRequest":true,"CreatedAt":"2020-12-11T21:24:44","Actor":"zarend","Number":"40072","RawContent":null,"Title":"test(compiler-cli): fix i18n error tests","State":"closed","Body":"Refactors the i18n error tests to be unit tests in ngtsc_spec.ts. There\r\nis two reasons for doing this.\r\n\r\nFirst is that the tests in compliace_old expected an expection to be be\r\nthrown but did not fail the test if no exception was thrown. That means\r\nthat this test could miss catching a bug. It is also a big hacky to call\r\ncompile directly and expect an exception to be thrown for diagnostics.\r\n\r\nAlso, this can easily be unit tested and an end-to-end test is not\r\nnecessary since we are not making use of the goldfiles for these tests.\r\n\r\nIt is easier to maintain and less hacky to validate that we get helpful\r\nerror messages when nesting i18n sections by calling getDiagnostics\r\ndirectly.","Url":"https://github.com/angular/angular/pull/40072","RelatedDescription":"Closed or merged PR \"test(compiler-cli): fix i18n error tests\" (#40072)"},{"Id":"762869025","IsPullRequest":true,"CreatedAt":"2020-12-11T20:33:06","Actor":"zarend","Number":"40094","RawContent":null,"Title":"fix(dev-infra): add vim .swp files to gitignore","State":"open","Body":"The vim editor produces temporarily files that can end in both .swo and\r\n.swp. This commits add .swp to the .gitignore so we don't accidentally\r\ncommit temporary files.","Url":"https://github.com/angular/angular/pull/40094","RelatedDescription":"Open PR \"fix(dev-infra): add vim .swp files to gitignore\" (#40094)"},{"Id":"762821087","IsPullRequest":true,"CreatedAt":"2020-12-11T19:50:02","Actor":"gkalpak","Number":"40093","RawContent":null,"Title":"PR #38750 - fix(docs-infra): typography, layout and UI polish","State":"open","Body":"- Sidenav background to better distinguish from content\r\n- Header styles updated\r\n- General typography styles updated (removed letter-spacing, increased font size and updated line height)\r\n- Prominent h2 styles with line to segment important sections more easily\r\n- Vertical align headerin glink icons (on hover)\r\n- Prominent link hover underline (more accessible)\r\n- Max width on content paragraph text to improve legibility (best practices)\r\n- Centered layout for better legibility and focus on content\r\n- API pages override to maintain current styles\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40093","RelatedDescription":"Open PR \"PR #38750 - fix(docs-infra): typography, layout and UI polish\" (#40093)"},{"Id":"762779770","IsPullRequest":true,"CreatedAt":"2020-12-11T19:12:52","Actor":"alxhub","Number":"40092","RawContent":null,"Title":"fix(language-service): force compileNonExportedClasses: false in LS","State":"open","Body":"Projects opened in the LS are often larger in scope than the compilation\r\nunits seen by the compiler when actually building. For example, in the LS\r\nit's not uncommon for the project to include both application as well as\r\ntest files. This can create issues when the combination of files results\r\nin errors that are not otherwise present - for example, if test files\r\nhave inline NgModules that re-declare components (a common Angular pattern).\r\nSuch code is valid when compiling the app only (test files are excluded, so\r\nonly one declaration is seen by the compiler) or when compiling tests only\r\n(since tests run in JIT mode and are not seen by the AOT compiler), but when\r\nboth sets of files are mixed into a single compilation unit, the compiler\r\nsees the double declaration as an error.\r\n\r\nThis commit attempts to mitigate the problem by forcing the compiler flag\r\n`compileNonExportedClasses` to `false` in a LS context. When tests contain\r\nduplicate declarations, often such declarations are inline in specs and not\r\nexported from the top level, so this flag can be used to greatly improve the\r\nIDE experience.","Url":"https://github.com/angular/angular/pull/40092","RelatedDescription":"Open PR \"fix(language-service): force compileNonExportedClasses: false in LS\" (#40092)"},{"Id":"762750328","IsPullRequest":true,"CreatedAt":"2020-12-11T18:45:47","Actor":"mhevery","Number":"40091","RawContent":null,"Title":"fix(core): `QueryList` does not fire changes if the underlying list did not change.","State":"open","Body":"\r\nPrevious implementation would fire changes `QueryList.changes.subscribe`\r\neven if underlying list did not change. Such situation can arise if a\r\n`LView` is inserted or removed, causing `QueryList` to recompute, but\r\nthe recompute results in the same exact `QueryList` result. In such\r\na case we don't want to fire a change event (as there is no change.)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40091","RelatedDescription":"Open PR \"fix(core): `QueryList` does not fire changes if the underlying list did not change.\" (#40091)"},{"Id":"761702699","IsPullRequest":true,"CreatedAt":"2020-12-11T18:45:20","Actor":"mhevery","Number":"40075","RawContent":null,"Title":"fix(core): `QueryList` does not fire changes if the underlying list did not change.","State":"closed","Body":"Previous implementation would fire changes `QueryList.changes.subscribe`\r\neven if underlying list did not change. Such situation can arise if a\r\n`LView` is inserted or removed, causing `QueryList` to recompute, but\r\nthe recompute results in the same exact `QueryList` result. In such\r\na case we don't want to fire a change event (as there is no change.)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40075","RelatedDescription":"Closed or merged PR \"fix(core): `QueryList` does not fire changes if the underlying list did not change.\" (#40075)"},{"Id":"762729654","IsPullRequest":false,"CreatedAt":"2020-12-11T18:28:06","Actor":"agale123","Number":"40090","RawContent":null,"Title":"Router shallowEqual util throws error in IE","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/router\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> No\r\n\r\n\r\n### Description\r\n\r\nI can't get this to reproduce locally, but our logs show that users using IE and Edge are getting an error message of \"Object expected\" on line [29 of collection.ts](https://github.com/angular/angular/blob/master/packages/router/src/utils/collection.ts#L29). This indicates that the second object being passed into the shallowEqual is not an object. The call is coming from [updateSegmentGroup](https://source.corp.google.com/piper///depot/google3/third_party/javascript/angular2/rc/packages/router/src/create_url_tree.ts;l=197?q=updateSegmentGroupChildren&ct=os&sq=package:piper%20file:%2F%2Fdepot%2Fgoogle3%20-file:google3%2Fexperimental) which calls prefixedWith which calls shallowEqual. It seems like additional checks in compare to ensure that the two objects being passed to shallowEqual are in fact objects should resolve this issue.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-ivy\r\n-->\r\n<!-- ✍️--> The errors are from logs so I don't have a reliable way to reproduce the issue, but we are seeing many reports of this error.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nObject expected\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\nWe run with the latest version of Angular. The errors from today were probably cut from an Angular version a week or two ago.\r\n\r\n**Anything else relevant?**\r\nThis only occurs in Edge and IE as far as we can tell.","Url":"https://github.com/angular/angular/issues/40090","RelatedDescription":"Open issue \"Router shallowEqual util throws error in IE\" (#40090)"},{"Id":"761976390","IsPullRequest":false,"CreatedAt":"2020-12-11T17:29:12","Actor":"ishaqueahmed-mev","Number":"40079","RawContent":null,"Title":"Using indexedDB for data storage in service worker","State":"closed","Body":"Hello all,\r\n\r\n**I have been using @angular/pwa for making app work in offine mode and made my own required changes in ngsw.json file and its working absolutely fine. One thing I noticed in browser and in ngsw-worker file in dist that it uses cachestorage for storing data. What I need to know is, is there any way I could change my data storage from cache to indexedDb? Is there any way I could make it work with indexedDB. I have checeked various blogs and tutorials, but wasn't able to find anything relatable for implementing the same in angular.**\r\n\r\nAny help would be very much helpful :)\r\n\r\nThanks.\r\n","Url":"https://github.com/angular/angular/issues/40079","RelatedDescription":"Closed issue \"Using indexedDB for data storage in service worker\" (#40079)"},{"Id":"762651735","IsPullRequest":false,"CreatedAt":"2020-12-11T17:20:53","Actor":"elclanrs","Number":"40089","RawContent":null,"Title":"Support children outlet in wildcard route","State":"open","Body":"I'm trying to make the following route config work:\r\n\r\n```javascript\r\n{\r\n  path: '**',\r\n  component: PageComponent,\r\n  children: [\r\n    {\r\n      path: ':slug',\r\n      outlet: 'section',\r\n      component: SectionComponent\r\n    }\r\n  ]\r\n},\r\n```\r\nAnd this in the `PageComponent`:\r\n\r\n```html\r\n<a [routerLink]=\"[{ outlets: { section: 'one' } }]\">Section One</a>\r\n<router-outlet name=\"section\"></router-outlet>\r\n```\r\n\r\nAs of Angular 11, the outlet doesn't work under a wildcard. Using `routerLink` in `PageComponent` generates the proper link, but it doesn't navigate anywhere when clicked, meaning the URL doesn't change, and the router-outlet doesn't get populated.\r\n\r\nThe idea is to have a route with unlimited dynamic nested pages where each page can have a section outlet, like:\r\n\r\n`/:page/[:page]/(section:[:slug])`\r\n\r\nCould this be supported? Is there any workaround I can use?","Url":"https://github.com/angular/angular/issues/40089","RelatedDescription":"Open issue \"Support children outlet in wildcard route\" (#40089)"},{"Id":"762635824","IsPullRequest":true,"CreatedAt":"2020-12-11T17:07:17","Actor":"gkalpak","Number":"40088","RawContent":null,"Title":"ci: reduce flakiness of docs-infra `deploy-to-firebase.js` tests","State":"open","Body":"The `deploy-to-firebase.js` tests rely on git info retrieved from the `angular/angular` repository (via `git ls-remote ...`).\r\n\r\nPreviously, different calls to `git ls-remote` could return different values if a new commit was pushed or a new branch was created during test execution, resulting in errors ([example CI failure][1]).\r\n\r\nThis commit makes the tests more stable by memoizing the result of `git ls-remote` and returning the same result for subsequent calls with the same arguments (even if meanwhile the remote has been updated).\r\n\r\n[1]: https://circleci.com/gh/angular/angular/877626\r\n","Url":"https://github.com/angular/angular/pull/40088","RelatedDescription":"Open PR \"ci: reduce flakiness of docs-infra `deploy-to-firebase.js` tests\" (#40088)"},{"Id":"762542055","IsPullRequest":false,"CreatedAt":"2020-12-11T16:55:12","Actor":"antoinebrault","Number":"40086","RawContent":null,"Title":"Language service loses typing when object type is inferred from overloaded function","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n@angular/language-service 10.x 11.x\r\n\r\n### Is this a regression?\r\nNot sure if this affects previous versions. I've seen it in 10 and 11.\r\n\r\n### Description\r\nLanguage service loses typing when type is inferred from an overloaded function. I added a screenshot from WebStorm.\r\n\r\n## 🔬 Minimal Reproduction\r\n```typescript\r\ninterface State {\r\n  object: { prop: string; };\r\n}\r\n\r\ninterface Service<T> {\r\n  select<A = T>(op: OperatorFunction<T, A>): Observable<A>;\r\n  select<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\r\n\r\n  select<A = T, B = A>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\r\n  select<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): Observable<T[K1][K2]>;\r\n\r\n  selectNotOverloaded<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): Observable<T[K1][K2]>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  service: Service<{ state: State }> = {} as any;\r\n\r\n  object$ = this.service.select('state', 'object');\r\n  object2$ = this.service.selectNotOverloaded('state', 'object');\r\n  objectWithMap$ = this.service.select('state').pipe(map(s => s.object));\r\n}\r\n```\r\n```html\r\n{{ (object$ | async).prop }}\r\n{{ (object2$ | async).prop }}\r\n{{ (objectWithMap$ | async).prop }}\r\n```\r\n![image](https://user-images.githubusercontent.com/852552/101926241-ea801200-3ba0-11eb-85c5-298d1d7763ab.png)\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.4\r\n@angular-devkit/build-angular   0.1100.4\r\n@angular-devkit/core            11.0.4\r\n@angular-devkit/schematics      11.0.4\r\n@schematics/angular             11.0.4\r\n@schematics/update              0.1100.4\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/40086","RelatedDescription":"Closed issue \"Language service loses typing when object type is inferred from overloaded function\" (#40086)"},{"Id":"762501216","IsPullRequest":false,"CreatedAt":"2020-12-11T16:54:56","Actor":"antoinebrault","Number":"40085","RawContent":null,"Title":"Language service optional chaining + generics + null loses typing","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n@angular/language-service 10.x 11.x\r\n\r\n### Is this a regression?\r\nNot sure if this affects previous versions. I've seen it in 10 and 11.\r\n\r\n### Description\r\nLanguage service loses the type when used with generics and null in optional chaining. I added a screenshot from WebStorm.\r\n\r\n## 🔬 Minimal Reproduction\r\n```typescript\r\ninterface ObjectType {\r\n  prop: string;\r\n}\r\ninterface StateGenericWithNull<T> {\r\n  object?: T | null;\r\n}\r\ninterface StateGeneric<T> {\r\n  object?: T;\r\n}\r\ninterface StateWithNull {\r\n  object?: ObjectType | null;\r\n}\r\ninterface State {\r\n  object?: ObjectType;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  stateGenericWithNull: StateGenericWithNull<ObjectType> = {};\r\n  stateGeneric: StateGeneric<ObjectType> = {};\r\n  stateWithNull: StateWithNull = {};\r\n  state: State = {};\r\n}\r\n```\r\n```html\r\n{{ stateGenericWithNull.object?.prop }}\r\n{{ stateGenericWithNull.object.prop }}\r\n\r\n{{ stateGeneric.object?.prop }}\r\n{{ stateGeneric.object.prop }}\r\n\r\n{{ stateWithNull.object?.prop }}\r\n{{ stateWithNull.object.prop }}\r\n\r\n{{ state.object?.prop }}\r\n{{ state.object.prop }}\r\n```\r\n![image](https://user-images.githubusercontent.com/852552/101922983-d1756200-3b9c-11eb-814f-03ce319972c7.png)\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.4\r\n@angular-devkit/build-angular   0.1100.4\r\n@angular-devkit/core            11.0.4\r\n@angular-devkit/schematics      11.0.4\r\n@schematics/angular             11.0.4\r\n@schematics/update              0.1100.4\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/40085","RelatedDescription":"Closed issue \"Language service optional chaining + generics + null loses typing\" (#40085)"},{"Id":"762619311","IsPullRequest":true,"CreatedAt":"2020-12-11T16:53:33","Actor":"petebacondarwin","Number":"40087","RawContent":null,"Title":"refactor(compiler-cli): support external source-mapped templates in partials","State":"open","Body":"This commit adds support (and tests) for partially compiling and then linking\r\ncomponents that have external templates.\r\n","Url":"https://github.com/angular/angular/pull/40087","RelatedDescription":"Open PR \"refactor(compiler-cli): support external source-mapped templates in partials\" (#40087)"},{"Id":"762384861","IsPullRequest":false,"CreatedAt":"2020-12-11T15:11:14","Actor":"JulioCesGO","Number":"40083","RawContent":null,"Title":"HttpIntercept issues after run npm link","State":"closed","Body":"Hi ,\r\nI have a lib that contains an class `HttpInterceptor`. After performing the procedure with the npm link, from this lib to my project, the entire request that passes in `event instanceof HttpResponse` returns false. When I run a `console.log (event)`, it returns an object of type `HttpResponse`.\r\n\r\n```\r\n@Injectable()\r\nexport class LoadingHttpInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        LoadingService.show();\r\n        return next.handle(req).pipe(\r\n            tap( (event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse){\r\n                    LoadingService.hide();      \r\n                }                \r\n            }),\r\n            catchError(error => {\r\n                LoadingService.hide();\r\n                return throwError(event);\r\n            })\r\n        );\r\n    }\r\n}\r\n```","Url":"https://github.com/angular/angular/issues/40083","RelatedDescription":"Closed issue \"HttpIntercept issues after run npm link\" (#40083)"},{"Id":"762437124","IsPullRequest":true,"CreatedAt":"2020-12-11T14:59:16","Actor":"AlexElin","Number":"40084","RawContent":null,"Title":"docs: remove prefixed animation related CSS properties","State":"open","Body":"Angular has stopped to support browser that requires these CSS properties.\r\nAll supported browsers support standard CSS properties:\r\n* `@keyframes` rule\r\n* animation\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40084","RelatedDescription":"Open PR \"docs: remove prefixed animation related CSS properties\" (#40084)"},{"Id":"762373060","IsPullRequest":true,"CreatedAt":"2020-12-11T14:05:59","Actor":"bjarkler","Number":"40082","RawContent":null,"Title":"refactor(core): express trusted constants with tagged template literals","State":"open","Body":"The trustConstantHtml and trustConstantResourceUrl functions are only\r\nmeant to be passed constant strings extracted from Angular application\r\ntemplates, as passing other strings or variables could introduce XSS\r\nvulnerabilities.\r\n\r\nTo better protect these APIs, turn them into template tags. This makes\r\nit possible to assert that the associated template literals do not\r\ncontain any interpolation, and thus must be constant.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/40082","RelatedDescription":"Open PR \"refactor(core): express trusted constants with tagged template literals\" (#40082)"},{"Id":"762259799","IsPullRequest":false,"CreatedAt":"2020-12-11T11:39:48","Actor":"rahul0755","Number":"40081","RawContent":null,"Title":"how to run production file outside a project directory","State":"closed","Body":"🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n\r\nPlease help us process issues more efficiently by filing an\r\nissue using one of the following templates:\r\n\r\nhttps://github.com/angular/angular/issues/new/choose\r\n\r\nThank you!\r\n\r\n🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n","Url":"https://github.com/angular/angular/issues/40081","RelatedDescription":"Closed issue \"how to run production file outside a project directory\" (#40081)"},{"Id":"762178477","IsPullRequest":true,"CreatedAt":"2020-12-11T10:01:18","Actor":"AlexElin","Number":"40080","RawContent":null,"Title":"docs: remove unused CSS rule","State":"open","Body":"Removed rule don't affect their component views.\r\nThe reason - the templates don't contain elements to which that rule is applied.\r\nSee https://angular.io/guide/view-encapsulation for more details\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40080","RelatedDescription":"Open PR \"docs: remove unused CSS rule\" (#40080)"},{"Id":"761969218","IsPullRequest":true,"CreatedAt":"2020-12-11T06:56:13","Actor":"AndrewKushnir","Number":"40078","RawContent":null,"Title":"test(compiler): use `yarn bazel` instead of `bazel` in error message","State":"open","Body":"This commit replaces `bazel` with `yarn bazel` in the error message (that instructs to regenerate golden file)\r\nthrown while executing compliance tests. We use `yarn bazel` in other places (so we use the local version of bazel,\r\nnot the global one).\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Other... Please describe: error message update in tests.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/40078","RelatedDescription":"Open PR \"test(compiler): use `yarn bazel` instead of `bazel` in error message\" (#40078)"},{"Id":"761948536","IsPullRequest":true,"CreatedAt":"2020-12-11T06:22:01","Actor":"AndrewKushnir","Number":"40077","RawContent":null,"Title":"fix(compiler): avoid duplicate i18n blocks for i18n attrs on elements with structural directives","State":"open","Body":"Currently when `ɵɵtemplate` and `ɵɵelement` instructions are generated by compiler, all static attributes are\r\nduplicated for both instructions. As a part of this duplication, i18n translation blocks for static i18n attributes\r\nare generated twice as well, causing duplicate entries in extracted translation files (when Ivy extraction mechanisms\r\nare used). This commit fixes this issue by introducing a cache for i18n translation blocks (for static attributes\r\nonly).\r\n\r\nAlso this commit further aligns `ɵɵtemplate` and `ɵɵelement` instruction attributes, which should help implement\r\nmore effective attributes deduplication logic.\r\n\r\nCloses #39942.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/40077","RelatedDescription":"Open PR \"fix(compiler): avoid duplicate i18n blocks for i18n attrs on elements with structural directives\" (#40077)"},{"Id":"761772167","IsPullRequest":false,"CreatedAt":"2020-12-11T05:22:02","Actor":"anhtuan96a8","Number":"40076","RawContent":null,"Title":"How to update angular 8 to 11","State":"closed","Body":"Can anyone help me? I have updated angular 8 to 9 and it has 1 bug that I cannot fix. Thank you so much.\r\n![image](https://user-images.githubusercontent.com/23031958/101849697-d204fd00-3b8a-11eb-8d88-afbc364ca362.png)\r\n![image](https://user-images.githubusercontent.com/23031958/101849711-d7fade00-3b8a-11eb-8c73-806e017352af.png)\r\n","Url":"https://github.com/angular/angular/issues/40076","RelatedDescription":"Closed issue \"How to update angular 8 to 11\" (#40076)"},{"Id":"761509949","IsPullRequest":true,"CreatedAt":"2020-12-10T22:30:25","Actor":"AlexElin","Number":"40069","RawContent":null,"Title":"docs: remove unused CSS rules","State":"closed","Body":"Removed rules don't affect their component views because the templates don't contain elements to which that rules are applied.\r\nSee https://angular.io/guide/view-encapsulation for more details\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40069","RelatedDescription":"Closed or merged PR \"docs: remove unused CSS rules\" (#40069)"},{"Id":"761596897","IsPullRequest":false,"CreatedAt":"2020-12-10T20:38:56","Actor":"zamzowd","Number":"40074","RawContent":null,"Title":"Reactive Forms rules for name and formControlName matching causes conflicts with radio sets in different FormGroup/FormArray sections","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/forms\r\n\r\n### Is this a regression?\r\nNo\r\n\r\n### Description\r\nWhen using Reactive Forms and radio buttons, an error is logged indicating that the `name` and `formControlName` attributes must match, even for radios inside of `FormGroup` or `FormArray`.\r\n\r\nFollowing this rule causes the HTML form to treat *all* radio buttons with the same property name as part of the same radio set, even those in distinct FormGroups or FormArray elements.\r\n\r\n## 🔬 Minimal Reproduction\r\nThis example demonstrates behavior when following the rule that name and formControlName must match for radio buttons:\r\nhttps://stackblitz.com/edit/angular-ivy-sa7e9m?devtoolsheight=33&file=src/app/app.component.html\r\n\r\n**Expected:** The `type` radio buttons oustide of the `meta` FormGroup should be in a different set than the `type` radio buttons in the `meta` FormGroup, such independent selections can be made in each set. No errors are logged.\r\n**Actual:** The radio buttons are in the same set since they have the same name, such that if the user selects a `type` radio in the `meta` FormGroup than it de-selects all `type` radios outside of the `meta` FormGroup and vice versa. No errors are logged.\r\n\r\n**Expected:** Each book in the `books` FormArray should have an independent set of `status` radio buttons, such that independent selections can be made for each book. No errors are logged.\r\n**Actual:** The radio buttons for all books are in the same set since they have the same name, such that if the user selects a `status` radio in one book then the form de-selects all `status` radios for all other books. No errors are logged.\r\n\r\n---\r\n\r\nThis example demonstrates behavior when *not* following the rule that name and formControlName must match for radio buttons, trying to set unique names for each set of radios:\r\nhttps://stackblitz.com/edit/angular-ivy-mmods7?devtoolsheight=33&file=src/app/app.component.html\r\n\r\n**Expected:** The `type` radio buttons oustide of the `meta` FormGroup should be in a different set than the `type` radio buttons in the `meta` FormGroup, such independent selections can be made in each set. No errors are logged.\r\n**Actual:** The form behavior works as expected, including the value of the submitted form. Errors are logged (see below).\r\n\r\n**Expected:** Each book in the `books` FormArray should have an independent set of `status` radio buttons, such that independent selections can be made for each book. No errors are logged.\r\n**Actual:** Radios in each book are not given the interpolated `name` value. Both radios for each book can be selected simultaneously. Errors are logged (see below).\r\n## 🔥 Exception or Error\r\n```\r\nError:\r\nIf you define both a name and a formControlName attribute on your radio button, their values\r\nmust match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\r\n```\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n10.0.9\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nThis was previously raised in #23319 with an attempted fix in #23727.","Url":"https://github.com/angular/angular/issues/40074","RelatedDescription":"Open issue \"Reactive Forms rules for name and formControlName matching causes conflicts with radio sets in different FormGroup/FormArray sections\" (#40074)"},{"Id":"761588827","IsPullRequest":false,"CreatedAt":"2020-12-10T20:36:59","Actor":"kursatsaka","Number":"40073","RawContent":null,"Title":"Angular 10 Deploy Issue","State":"closed","Body":"I updated my angular project from angular6 to angular10. I can serve, build and prod build my project just fine. There is no error when I serve the project in my local. When i deploy the project there is no error on console but the screen is blank. Thanks for your help.\r\n\r\nScreenshot: \r\n![Capture](https://user-images.githubusercontent.com/47352541/101814929-d8b25680-3b2f-11eb-9ee6-e52b35a765fb.PNG)\r\n\r\n","Url":"https://github.com/angular/angular/issues/40073","RelatedDescription":"Closed issue \"Angular 10 Deploy Issue\" (#40073)"},{"Id":"761545392","IsPullRequest":false,"CreatedAt":"2020-12-10T20:25:54","Actor":"guimaraesSalgado","Number":"40070","RawContent":null,"Title":"Service Worker does not update","State":"closed","Body":"I'm always getting this error and I don't know why, nor where to fix it, when debugging ngsw-worker.json, I noticed that it is always hash error similar to this image, how to fix it?\r\n\r\nDriver state: EXISTING_CLIENTS_ONLY (Degraded due to failed initialization: Hash mismatch (cacheBustedFetchFromNetwork): https://web.com.br/14-es2015.6806b9c668313a11cde0.js: expected 349c6ced18fc268ba4dd20de5ce154ede22fabcb, got bc1a96f58626b312d0e28fca0b1be7a00c9a5350 (after cache busting)\r\nError: Hash mismatch (cacheBustedFetchFromNetwork): https://web.com.br/14-es2015.6806b9c668313a11cde0.js: expected 349c6ced18fc268ba4dd20de5ce154ede22fabcb, got bc1a96f58626b312d0e28fca0b1be7a00c9a5350 (after cache busting)\r\n    at PrefetchAssetGroup.<anonymous> (https://web.com.br/ngsw-worker.js:699:35)\r\n    at Generator.next (<anonymous>)\r\n    at fulfilled (https://web.com.br/ngsw-worker.js:320:62))\r\nLatest manifest hash: a8946d0d38ec74561d50d3d469db70b776215549\r\nLast update check: 35m19s796u\r\n\r\n=== Version a8946d0d38ec74561d50d3d469db70b776215549 ===\r\n\r\nClients: \r\n\r\n**=== Idle Task Queue ===\r\nLast update tick: 9u\r\nLast update run: 35m22s647u\r\nTask queue:**\r\n\r\n\r\nmy ngsw.json\r\n![image](https://user-images.githubusercontent.com/49767698/101820053-d25ab500-3b04-11eb-8881-ffd6c6883937.png)\r\n\r\n\r\nmy config \r\n![image](https://user-images.githubusercontent.com/49767698/101820105-e999a280-3b04-11eb-926f-ad91bf0ae34b.png)\r\n","Url":"https://github.com/angular/angular/issues/40070","RelatedDescription":"Closed issue \"Service Worker does not update\" (#40070)"},{"Id":"761436824","IsPullRequest":false,"CreatedAt":"2020-12-10T17:28:54","Actor":"Bluntc","Number":"40068","RawContent":null,"Title":"NG0200: Circular dependency in DI detected，Why and How to do?","State":"closed","Body":"Dear，ALL：\r\n\r\n**I want inject ParentCompoent to ChildComponent，**\r\n\r\nBut have a error is：\r\n\r\nError: NG0200: Circular dependency in DI detected for ParentComponent\r\n\r\nparent Component：\r\n\r\n```\r\n@Component({\r\n  selector: 'cy-parent',\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss'],\r\n  providers: [\r\n    {provide: ParentComponent, useExisting: forwardRef(() => ParentComponent)}\r\n  ]\r\n})\r\n\r\nexport class ParentComponent {\r\n  constructor() { }\r\n}\r\n```\r\n\r\nchild component：\r\n\r\n```\r\n@Component({\r\n  selector: 'cy-child',\r\n  templateUrl: './child.component.html',\r\n  styleUrls: ['./child.component.scss'],\r\n\r\n})\r\nexport class ChildComponent implements OnInit {\r\n  constructor(\r\n    @SkipSelf() @Optional() public _parentComp?: ParentComponent\r\n  ) {\r\n   \r\n   }\r\n}\r\n```","Url":"https://github.com/angular/angular/issues/40068","RelatedDescription":"Closed issue \"NG0200: Circular dependency in DI detected，Why and How to do?\" (#40068)"},{"Id":"761367038","IsPullRequest":true,"CreatedAt":"2020-12-10T16:03:02","Actor":"atscott","Number":"40067","RawContent":null,"Title":"refactor(router): Produce error message when canActivate is used with…","State":"open","Body":"… redirectTo\r\n\r\nRedirects in the router are processed before activations. This means that a canActivate will\r\nnever execute if a route has a redirect. Rather than silently ignoring\r\nthe invalid config, developers should be notified so they know why it\r\ndoesn't work.\r\n\r\nCloses #18605\r\nThe feature request for a function/class redirect is covered in #13373.\r\n\r\nNote that this _is_ a new error that would prevent routing from working. We may want to discuss the need to land this along with a migration that removes `canActivate` from configs with `redirectTo` if this is found to be a common occurrence. Even without a migration, it may still be necessary to land this in a minor/major version to prevent new failures in patch version updates.\r\n","Url":"https://github.com/angular/angular/pull/40067","RelatedDescription":"Open PR \"refactor(router): Produce error message when canActivate is used with…\" (#40067)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"762983145","IsPullRequest":false,"CreatedAt":"2020-12-11T22:18:36","Actor":"nchangnon","Number":"19598","RawContent":null,"Title":"ng build --prod=true fails with global scripts in agular.json when opt-in to Webpack 5","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nThis works when not opting-in to Webpack 5.\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem... -->\r\nIf scripts are specified in the build options to be included globally, `ng build --prod=true` fails to build.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n1. create a new angular project\r\n2. opt-in to webpack 5 :\r\n`\"resolutions\": { \"webpack\": \"5.4.0\" }`\r\n3. add an external dependency such as jquery to package.json (using yarn)\r\n`yarn add jquery`\r\n\r\n4. update angular.json to include the new global dependency\r\n\r\n<pre>\r\n<code>\r\n  \"projects\": {\r\n    \"wp5\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {},\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"prefix\": \"app\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/wp5\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"aot\": true,\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"src/styles.css\"\r\n            ],\r\n            \"scripts\": [\r\n              \"./node_modules/jquery/dist/jquery.min.js\"\r\n            ]\r\n          }\r\n     ...\r\n   }\r\n</code>\r\n</pre>\r\n\r\n5. run `ng build --prod=true`\r\n\r\n\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nwp5 % ng build --prod=true\r\n✔ Browser application bundle generation complete.\r\nAn unhandled exception occurred: Chunk.modulesIterableThere was no ChunkGraph assigned to the Chunk for backward-compat (Use the new API)\r\nSee \"/private/var/folders/km/qmp0wv016q9chrhmsr34qdp80000gn/T/ng-zRypdH/angular-errors.log\" for further details.\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 11.0.4\r\nNode: 15.3.0\r\nOS: darwin x64\r\n\r\nAngular: 11.0.3\r\n... animations, common, compiler, core, forms, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1101.0-next.2\r\n@angular-devkit/build-angular   0.1101.0-next.2\r\n@angular-devkit/core            11.0.4\r\n@angular-devkit/schematics      11.0.4\r\n@angular/cli                    11.0.4\r\n@angular/compiler-cli           11.0.4\r\n@schematics/angular             11.0.4\r\n@schematics/update              0.1100.4\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19598","RelatedDescription":"Open issue \"ng build --prod=true fails with global scripts in agular.json when opt-in to Webpack 5\" (#19598)"},{"Id":"762450477","IsPullRequest":true,"CreatedAt":"2020-12-11T15:56:29","Actor":"alan-agius4","Number":"19597","RawContent":null,"Title":" fix(@angular/cli): bump ini from 1.3.5 to 1.3.6 ","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19597","RelatedDescription":"Closed or merged PR \" fix(@angular/cli): bump ini from 1.3.5 to 1.3.6 \" (#19597)"},{"Id":"762447296","IsPullRequest":true,"CreatedAt":"2020-12-11T15:56:26","Actor":"alan-agius4","Number":"19596","RawContent":null,"Title":" fix(@schematics/update): bump ini from 1.3.5 to 1.3.6","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19596","RelatedDescription":"Closed or merged PR \" fix(@schematics/update): bump ini from 1.3.5 to 1.3.6\" (#19596)"},{"Id":"761873644","IsPullRequest":true,"CreatedAt":"2020-12-11T13:55:36","Actor":"dependabot[bot]","Number":"19588","RawContent":null,"Title":"build: bump ini from 1.3.5 to 1.3.6","State":"closed","Body":"Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.6.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.6\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/angular/angular-cli/network/alerts).\n\n</details>","Url":"https://github.com/angular/angular-cli/pull/19588","RelatedDescription":"Closed or merged PR \"build: bump ini from 1.3.5 to 1.3.6\" (#19588)"},{"Id":"762319856","IsPullRequest":false,"CreatedAt":"2020-12-11T13:55:35","Actor":"AElmoznino","Number":"19594","RawContent":null,"Title":"ini package causing npm audit to return Low severity vulnerability","State":"closed","Body":"Running `npm audit` gives me:\r\n```\r\n┌───────────────┬──────────────────────────────────────────────────────────────┐\r\n│ Low           │ Prototype Pollution                                          │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Package       │ ini                                                          │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Patched in    │ >1.3.6                                                       │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Dependency of │ @angular/cli [dev]                                           │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Path          │ @angular/cli > @schematics/update > ini                      │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ More info     │ https://npmjs.com/advisories/1589                            │\r\n└───────────────┴──────────────────────────────────────────────────────────────┘\r\n┌───────────────┬──────────────────────────────────────────────────────────────┐\r\n│ Low           │ Prototype Pollution                                          │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Package       │ ini                                                          │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Patched in    │ >1.3.6                                                       │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Dependency of │ @angular/cli [dev]                                           │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Path          │ @angular/cli > ini                                           │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ More info     │ https://npmjs.com/advisories/1589                            │\r\n```\r\n\r\n`npm audit fix` doesn't automatically resolve the vulnerability. We're striving for 0 vulnerabilities 😄  \r\n\r\nI'm using `@angular/cli` `10.2.0`.","Url":"https://github.com/angular/angular-cli/issues/19594","RelatedDescription":"Closed issue \"ini package causing npm audit to return Low severity vulnerability\" (#19594)"},{"Id":"760720237","IsPullRequest":true,"CreatedAt":"2020-12-11T13:53:24","Actor":"josephperrott","Number":"19580","RawContent":null,"Title":"ci: update remaining references to old pr targeting system","State":"closed","Body":"Completes the migration to use the new unified target label system, updating\r\ndependabot, renovate and angular-robot to expect the new labels.","Url":"https://github.com/angular/angular-cli/pull/19580","RelatedDescription":"Closed or merged PR \"ci: update remaining references to old pr targeting system\" (#19580)"},{"Id":"762342605","IsPullRequest":true,"CreatedAt":"2020-12-11T13:30:58","Actor":"renovate[bot]","Number":"19595","RawContent":null,"Title":"build: update ini to version 1.3.6","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [ini](https://togithub.com/isaacs/ini) | [`1.3.5` -> `1.3.6`](https://renovatebot.com/diffs/npm/ini/1.3.5/1.3.6) | [![age](https://badges.renovateapi.com/packages/npm/ini/1.3.6/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/ini/1.3.6/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/ini/1.3.6/compatibility-slim/1.3.5)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/ini/1.3.6/confidence-slim/1.3.5)](https://docs.renovatebot.com/merge-confidence/) |\n\n### GitHub Vulnerability Alerts\n\n#### [GHSA-qqgx-2p2h-9c37](https://togithub.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n\n### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```\n\n---\n\n### Release Notes\n\n<details>\n<summary>isaacs/ini</summary>\n\n### [`v1.3.6`](https://togithub.com/isaacs/ini/compare/v1.3.5...v1.3.6)\n\n[Compare Source](https://togithub.com/isaacs/ini/compare/v1.3.5...v1.3.6)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19595","RelatedDescription":"Closed or merged PR \"build: update ini to version 1.3.6\" (#19595)"},{"Id":"762310090","IsPullRequest":false,"CreatedAt":"2020-12-11T12:43:57","Actor":"blasco","Number":"19593","RawContent":null,"Title":"Control what gets generated - Transpilation/Compilation Time version of *ngIf","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\nI haven't find a way to control how to disable part of the generated code with angular. Here a more in depth description of the feature that I'm looking for:\r\n\r\nhttps://stackoverflow.com/questions/65020209/control-what-gets-generated-transpilation-compilation-time-version-of-ngif\r\n\r\n### Description\r\n\r\nTo sum up, this is what I'm looking for:\r\n\r\n```\r\n#define version admin\r\n\r\nUser stuff\r\n\r\n#if version==admin\r\n\r\n   Admin stuff\r\n   <div (click)=\"adminFunction()\"></div>\r\n\r\n#endif\r\n```\r\n\r\nSo from the same code bases I can generate two different apps. This is also useful for testing and there are more usecases.\r\n\r\nMaybe there is away to already achieve this, but I haven't been able to find it. Is this something interesting to add in the future?\r\n","Url":"https://github.com/angular/angular-cli/issues/19593","RelatedDescription":"Open issue \"Control what gets generated - Transpilation/Compilation Time version of *ngIf\" (#19593)"},{"Id":"762162368","IsPullRequest":true,"CreatedAt":"2020-12-11T09:48:41","Actor":"alan-agius4","Number":"19592","RawContent":null,"Title":"fix(@angular-devkit/build-angular): add console error when using HMR in production mode","State":"open","Body":"\r\nFIx: #19591","Url":"https://github.com/angular/angular-cli/pull/19592","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): add console error when using HMR in production mode\" (#19592)"},{"Id":"762064082","IsPullRequest":false,"CreatedAt":"2020-12-11T08:27:43","Actor":"andreialecu","Number":"19591","RawContent":null,"Title":"`--hmr` with `enableProdMode()` breaks HMR","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n\r\nNot sure.\r\n\r\n### Description\r\n\r\n\r\nUsing the new `ng serve --hmr` functionality in Angular 11 while the app was also enabling production mode results in an error while swapping in the modules, and the page falling back to a normal reload with minimal indication that this was happening.\r\n\r\n**I was only able to see what's going on by enabling \"Preserve Log\" in the Chrome console.**\r\n\r\nA warning in the console if `enableProdMode()` is called while HMR is active might be a better indication about this.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n```\r\nng serve --hmr\r\n```\r\n\r\n```js\r\nenableProdMode()\r\n```\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n[HMR] Cannot apply update. Need to do a full reload!\r\npush.dZZH.module.exports @ polyfills.js:6327\r\n(anonymous) @ polyfills.js:1434\r\ninvoke @ polyfills.js:13461\r\nrun @ polyfills.js:13220\r\n(anonymous) @ polyfills.js:13954\r\ninvokeTask @ polyfills.js:13496\r\nrunTask @ polyfills.js:13264\r\ndrainMicroTaskQueue @ polyfills.js:13666\r\nPromise.then (async)\r\nscheduleMicroTask @ polyfills.js:13649\r\nscheduleTask @ polyfills.js:13485\r\nscheduleTask @ polyfills.js:13307\r\nscheduleMicroTask @ polyfills.js:13327\r\nscheduleResolveOrReject @ polyfills.js:13944\r\nthen @ polyfills.js:14076\r\nhotUpdateDownloaded @ runtime.js:386\r\nhotAddUpdateChunk @ runtime.js:362\r\nwebpackHotUpdateCallback @ runtime.js:58\r\n(anonymous) @ main.4b7dbf18777e0ec0b808.hot-update.js:1\r\n\r\nlog.js:26 [HMR] Error: Cannot enable prod mode after platform setup.\r\n    at enableProdMode (http://localhost:3000/vendor.js:129787:15) [<root>]\r\n</code></pre>\r\n\r\n<img width=\"853\" alt=\"Screenshot 2020-12-11 at 10 24 39\" src=\"https://user-images.githubusercontent.com/697707/101880138-18625800-3b9b-11eb-87ab-e559a28bd7f1.png\">\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n ng version                                                                                                                              \r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 11.1.0-next.2\r\nNode: 15.4.0\r\nOS: darwin arm64\r\n\r\nAngular: 11.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1101.0-next.2\r\n@angular-devkit/build-angular      0.1101.0-next.2\r\n@angular-devkit/core               11.1.0-next.2\r\n@angular-devkit/schematics         11.1.0-next.2\r\n@angular/cdk                       11.0.2\r\n@angular/cli                       11.1.0-next.2\r\n@angular/flex-layout               9.0.0-beta.31\r\n@angular/material                  11.0.2\r\n@angular/material-moment-adapter   11.0.2\r\n@schematics/angular                11.1.0-next.2\r\n@schematics/update                 0.1101.0-next.2\r\nrxjs                               6.6.3\r\ntypescript                         4.0.5\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/19591","RelatedDescription":"Open issue \"`--hmr` with `enableProdMode()` breaks HMR\" (#19591)"},{"Id":"761967532","IsPullRequest":false,"CreatedAt":"2020-12-11T08:08:11","Actor":"WarienX","Number":"19590","RawContent":null,"Title":"Unable To Create New Angular Project","State":"closed","Body":"Hello everyone, I just purchased a new laptop and installed Node JS on it. I was creating my Angular 7 project but am unable to do so using the cli. Need assistance at the earliest. I will share screenshots of the issue below.\r\n![scr1](https://user-images.githubusercontent.com/26925053/101872630-975f8c80-3bab-11eb-80ab-2ce0adc68e8c.PNG)\r\n![scr2](https://user-images.githubusercontent.com/26925053/101872633-99295000-3bab-11eb-8458-389ae6746fb6.PNG)\r\n![scr3](https://user-images.githubusercontent.com/26925053/101872645-9c244080-3bab-11eb-9cea-09ec214b197b.PNG)\r\n\r\nKindly help me resolve this issue.","Url":"https://github.com/angular/angular-cli/issues/19590","RelatedDescription":"Closed issue \"Unable To Create New Angular Project\" (#19590)"},{"Id":"761862850","IsPullRequest":false,"CreatedAt":"2020-12-11T03:49:37","Actor":"pauldraper","Number":"19587","RawContent":null,"Title":"Allow configurable use of untyped transpileModule()","State":"open","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [x]  build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nAngular CLI is slow (particularly to start up). A lot of this has to do with the time to typecheck TypeScript.\r\n\r\n### Describe the solution you'd like\r\n\r\nAn --transpileModules or --untyped option to skip typechecking.\r\n\r\n### Describe alternatives you've considered\r\n\r\nUsing webpack + babel-typescript instead. However, this misses out on the simplicity of using Angular CLI and is inconvenient to configure.","Url":"https://github.com/angular/angular-cli/issues/19587","RelatedDescription":"Open issue \"Allow configurable use of untyped transpileModule()\" (#19587)"},{"Id":"760835736","IsPullRequest":false,"CreatedAt":"2020-12-11T00:38:50","Actor":"WLun001","Number":"19584","RawContent":null,"Title":"Option to disable the table view on ng serve, as it block the terminal with super long list of files","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\noption to disable the table view on ng serve, `--verbose=false` seems like not working.\r\n\r\n\r\n### Describe the solution you'd like\r\n`--verboase=false` to disable it\r\n\r\n\r\n### Describe alternatives you've considered\r\nNo workaround\r\n","Url":"https://github.com/angular/angular-cli/issues/19584","RelatedDescription":"Closed issue \"Option to disable the table view on ng serve, as it block the terminal with super long list of files\" (#19584)"},{"Id":"761283917","IsPullRequest":false,"CreatedAt":"2020-12-10T16:16:42","Actor":"AColombel","Number":"19586","RawContent":null,"Title":"__NG_CLI_RESOURCE__0 is not defined","State":"closed","Body":"# 🐞 Bug report\r\n\r\n## Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes, the previous version in which this bug was not present was: 10.1.0\r\n\r\n### Description\r\n\r\nWhen i use `npm test`, i got an error since i updated my Angular project from 10.1.0 (with ng update) to 11.0.4.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nmy tsconfig.spec.ts :\r\n`{\r\n    \"compilerOptions\": {\r\n        \"outDir\": \"./out-tsc/spec\",\r\n        \"types\": [\r\n            \"jasmine\",\r\n            \"node\"\r\n        ],\r\n        \"experimentalDecorators\": true,\r\n        \"emitDecoratorMetadata\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"lib\": [\r\n            \"es2020\"\r\n        ]\r\n    },\r\n    \"files\": [\r\n        \"src/test.ts\",\r\n        \"src/polyfills.ts\"\r\n    ],\r\n    \"include\": [\r\n        \"src/**/*.spec.ts\",\r\n        \"src/**/*.d.ts\"\r\n    ]\r\n}`\r\n\r\n## 🔥 Exception or Error\r\n\r\n`Chrome Headless 87.0.4280.88 (Windows 10) ERROR\r\n  An error was thrown in afterAll\r\n  Uncaught ReferenceError: __NG_CLI_RESOURCE__0 is not defined\r\n  ReferenceError: __NG_CLI_RESOURCE__0 is not defined\r\n      at http://localhost:9876/_karma_webpack_/main.js:67636:15\r\n      at Object.Sy1n (http://localhost:9876/_karma_webpack_/main.js:67641:2)\r\n      at __webpack_require__ (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:79:1)\r\n      at Object.eQIV (http://localhost:9876/_karma_webpack_/webpack:/src/app/app.component.spec.ts:6:1)\r\n      at __webpack_require__ (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:79:1)\r\n      at webpackContext (http://localhost:9876/_karma_webpack_/webpack:/src sync \\.spec\\.ts$:73:1)\r\n      at Array.map (<anonymous>)\r\n      at Object.CB3P (http://localhost:9876/_karma_webpack_/main.js:30637:16)\r\n      at __webpack_require__ (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:79:1)\r\n      at checkDeferredModules (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:45:1)`\r\n\r\n## 🌍 Your Environment\r\n\r\ntsconfig.spec.ts :\r\n`{\r\n    \"compilerOptions\": {\r\n        \"outDir\": \"./out-tsc/spec\",\r\n        \"types\": [\r\n            \"jasmine\",\r\n            \"node\"\r\n        ],\r\n        \"experimentalDecorators\": true,\r\n        \"emitDecoratorMetadata\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"lib\": [\r\n            \"es2020\"\r\n        ]\r\n    },\r\n    \"files\": [\r\n        \"src/test.ts\",\r\n        \"src/polyfills.ts\"\r\n    ],\r\n    \"include\": [\r\n        \"src/**/*.spec.ts\",\r\n        \"src/**/*.d.ts\"\r\n    ]\r\n}`\r\n\r\n**Anything else relevant?**\r\nI read this issue : https://github.com/angular/angular-cli/issues/18718\r\nbut i'm a student, and i just need some help to understand the issue (and fix it for my end year project)","Url":"https://github.com/angular/angular-cli/issues/19586","RelatedDescription":"Closed issue \"__NG_CLI_RESOURCE__0 is not defined\" (#19586)"},{"Id":"761270825","IsPullRequest":true,"CreatedAt":"2020-12-10T14:06:10","Actor":"oleksiipotiekhin","Number":"19585","RawContent":null,"Title":"fix(@schematics/angular): adjust block comment ","State":"open","Body":"https://github.com/Microsoft/tslint-microsoft-contrib\r\n\r\nERROR: 21:1  **no-single-line-block-comment**  Replace block comment with a single-line comment","Url":"https://github.com/angular/angular-cli/pull/19585","RelatedDescription":"Open PR \"fix(@schematics/angular): adjust block comment \" (#19585)"},{"Id":"760725519","IsPullRequest":false,"CreatedAt":"2020-12-10T07:54:16","Actor":"Nagendracv","Number":"19581","RawContent":null,"Title":"new angular project  compile with tsc","State":"closed","Body":"# 🐞 Bug report\r\n- [x ] new\r\n\r\n### Is this a regression?\r\nNo. Don't know if it worked before...\r\n\r\n### Description\r\nMy current typescript version is 4.0.5 nodejs version returns below information\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.3\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            11.0.3\r\n@angular-devkit/schematics      11.0.3\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\nBelow are the steps I followed on an empty folder\r\nng new angproject\r\ncd angproject\r\nng serve <- works fine\r\ntsc  <- fails with 26 errors like below\r\n\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:1:11 - error TS2300: Duplicate identifier 'IteratorResult'.\r\n1 interface IteratorResult<T> {\r\n            ~~~~~~~~~~~~~~\r\n  ../../../../../../../../../Users/c_v_n/AppData/Roaming/npm/node_modules/typescript/lib/lib.es2015.iterable.d.ts:41:6\r\n    41 type IteratorResult<T, TReturn = any> = IteratorYieldResult<T> | IteratorReturnResult<TReturn>;\r\n            ~~~~~~~~~~~~~~\r\n    'IteratorResult' was also declared here.\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:240:5 - error TS2687: All declarations of 'EPSILON' must have identical modifiers.\r\n240     EPSILON: number;\r\n        ~~~~~~~\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:275:5 - error TS2687: All declarations of 'MAX_SAFE_INTEGER' must have identical modifiers.\r\n275     MAX_SAFE_INTEGER: number;\r\n        ~~~~~~~~~~~~~~~~\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:282:5 - error TS2687: All declarations of 'MIN_SAFE_INTEGER' must have identical modifiers.\r\n282     MIN_SAFE_INTEGER: number;\r\n        ~~~~~~~~~~~~~~~~\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:338:5 - error TS2687: All declarations of 'flags' must have identical modifiers.\r\n338     flags: string;\r\n        ~~~~~\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:490:5 - error TS2687: All declarations of 'prototype' must have identical modifiers.\r\n490     prototype: Promise<any>;\r\n        ~~~~~~~~~\r\n../../node_modules/@types/es6-shim/ts3.1/index.d.ts:553:5 - error TS2687: All declarations of 'size' must have identical modifiers.\r\n","Url":"https://github.com/angular/angular-cli/issues/19581","RelatedDescription":"Closed issue \"new angular project  compile with tsc\" (#19581)"},{"Id":"760579380","IsPullRequest":true,"CreatedAt":"2020-12-09T19:36:09","Actor":"alan-agius4","Number":"19579","RawContent":null,"Title":"Schema docs fixes ","State":"closed","Body":"The latter is more in used in other articules such as:\r\n-  https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map\r\n- https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps","Url":"https://github.com/angular/angular-cli/pull/19579","RelatedDescription":"Closed or merged PR \"Schema docs fixes \" (#19579)"},{"Id":"760209748","IsPullRequest":true,"CreatedAt":"2020-12-09T18:38:18","Actor":"alan-agius4","Number":"19578","RawContent":null,"Title":"docs: change sourcemap to source map","State":"closed","Body":"The latter is more in used in other articules such as:\r\n-  https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map\r\n- https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps","Url":"https://github.com/angular/angular-cli/pull/19578","RelatedDescription":"Closed or merged PR \"docs: change sourcemap to source map\" (#19578)"},{"Id":"759818229","IsPullRequest":true,"CreatedAt":"2020-12-09T14:52:58","Actor":"kyliau","Number":"19574","RawContent":null,"Title":"fix(@angular-devkit/build-angular): identify plugin provided as string","State":"closed","Body":"Karma plugins could be provided either a string or object, but our detection    \r\nlogic for code coverage plugin only covers the string case.                     \r\n                                                                                \r\nFix #19571     ","Url":"https://github.com/angular/angular-cli/pull/19574","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): identify plugin provided as string\" (#19574)"},{"Id":"760147068","IsPullRequest":true,"CreatedAt":"2020-12-09T14:52:36","Actor":"alan-agius4","Number":"19577","RawContent":null,"Title":"fix(@angular/cli): allow trailing commas in JSON files","State":"closed","Body":"\r\n\r\nCurrently, both tsconfigs and workspace configuration files can contain trailing commas\r\n\r\nCloses #19576","Url":"https://github.com/angular/angular-cli/pull/19577","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): allow trailing commas in JSON files\" (#19577)"},{"Id":"760138322","IsPullRequest":false,"CreatedAt":"2020-12-09T14:52:36","Actor":"vbraun","Number":"19576","RawContent":null,"Title":"Migration failed: Failed to parse \"projects/form-lib/tsconfig.lib.json\" as JSON AST Object.","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [X] update\r\n\r\n### Description\r\n\r\nThe json parser for projects/.../tsconfig.lib.json is apparently stricter during \"ng update\" than during a normal angular build in that trailing commas cause it to bail out; E.g.\r\n~~~\r\n{\r\n    \"extends\": \"../../tsconfig.json\",\r\n    ...\r\n    \"include\": [\r\n        \"src/**/*.ts\",          <--- trailing comma\r\n    ]\r\n}\r\n~~~\r\nworks for angular development but errors out when updating 10->11 (see below for error message). \r\n\r\nArguably that is not valid json, but then comments aren't either, strictly speaking. In any case it would be nice to be consistent between build and update. \r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nAdd trailing comma to tsconfig.lib.json and run `ng update`\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n~~~\r\n$ npx ng update --force @angular/cli\r\nThe installed local Angular CLI version is older than the latest stable version.\r\nInstalling a temporary version to perform the update.\r\nInstalling packages for tooling via npm.\r\nInstalled packages for tooling via npm.\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 70 dependencies.\r\nFetching dependency metadata from registry...\r\n                  Package \"tslint-eslint-rules\" has an incompatible peer dependency to \"typescript\" (requires \"^2.2.0 || ^3.0.0\", would install \"4.0.5\").\r\n    Updating package.json with dependency @angular-devkit/build-angular @ \"0.1100.3\" (was \"0.1001.1\")...\r\n    Updating package.json with dependency @angular/cli @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/compiler-cli @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/language-service @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency karma @ \"5.1.1\" (was \"4.4.1\")...\r\n    Updating package.json with dependency ng-packagr @ \"11.0.3\" (was \"10.0.4\")...\r\n    Updating package.json with dependency protractor @ \"7.0.0\" (was \"5.4.3\")...\r\n    Updating package.json with dependency typescript @ \"4.0.5\" (was \"3.9.7\")...\r\n    Updating package.json with dependency @angular/animations @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/common @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/compiler @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/core @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/forms @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/localize @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/platform-browser @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/router @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency @angular/upgrade @ \"11.0.3\" (was \"10.1.1\")...\r\n    Updating package.json with dependency tslib @ \"2.0.3\" (was \"1.13.0\")...\r\n  UPDATE package.json (6396 bytes)\r\n✔ Packages installed successfully.\r\n** Executing migrations of package '@angular/cli' **\r\n\r\n▸ Replace deprecated library builder '@angular-devkit/build-ng-packagr'.\r\n  UPDATE package.json (6344 bytes)\r\n  Migration completed.\r\n\r\n▸ Add 'declarationMap' compiler options for non production library builds.\r\n✖ Migration failed: Failed to parse \"projects/form-lib/tsconfig.lib.json\" as JSON AST Object. ValueExpected at location: 1092.\r\n  See \"/tmp/ng-dHnCUv/angular-errors.log\" for further details.\r\n~~~\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n$ npx ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 11.0.3\r\nNode: 12.18.4\r\nOS: linux x64\r\n\r\nAngular: 11.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, upgrade\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.1\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            10.1.1\r\n@angular-devkit/schematics      11.0.3\r\n@angular/cdk                    10.2.0\r\n@angular/material               10.2.0\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nng-packagr                      11.0.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/19576","RelatedDescription":"Closed issue \"Migration failed: Failed to parse \"projects/form-lib/tsconfig.lib.json\" as JSON AST Object.\" (#19576)"},{"Id":"759710481","IsPullRequest":false,"CreatedAt":"2020-12-09T14:01:10","Actor":"mylifeandcode","Number":"19571","RawContent":null,"Title":"After Upgrading a Workspace Containing Multiple Projects to Angular 11, Karma Refuses to Run","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/....\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> \r\nYes, the previous version in which this bug was not present was: 10.0\r\n\r\n\r\n### Description\r\n\r\nI recently upgraded a multi-project workspace from Angular 10 to 11. I ran into some issues, which were resolved using the solution provided by a member of the Angular CLI team here: https://github.com/angular/angular/issues/39953. However, even though I can now build my app and its projects, when I try to run the tests, I get the following error:\r\n\r\n_ERROR [karma-server]: Server start failed on port 9876: TypeError: Cannot use 'in' operator to search for 'reporter:coverage' in karma-spec-reporter_\r\n\r\nI'm not sure why this is occurring, as it does not appear any of the Karma packages were changed, and my Karma configuration files have not changed either. The tests _will_ run if I disable code coverage reports, but I need those. I've also tried removing my codeCoverageExclusions, to no effect.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-ivy\r\n-->\r\nI apologize that I'm unable to share the code behind this, but the scenario is:\r\n\r\n- Workspace containing 2 library projects and a main app\r\n- Problematic upgrade as described in https://github.com/angular/angular/issues/39953\r\n- Running _ng test_ or _ng test --project=(project)_ fails with the error mentioned above\r\n- Running _ng test_ with _--code-coverage=false_, or _codeCoverage=false_ in _angular.json_ works as expected, no error\r\n- I do not have this problem on a smaller, simpler app which just contains the main app in the workspace\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nERROR [karma-server]: Server start failed on port 9876: TypeError: Cannot use 'in' operator to search for 'reporter:coverage' in karma-spec-reporter\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 11.0.3\r\nNode: 12.14.1\r\nOS: win32 x64\r\n\r\nAngular: 11.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.3\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            11.0.3\r\n@angular-devkit/schematics      11.0.3\r\n@angular/cdk                    8.2.3\r\n@angular/http                   7.2.16\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nng-packagr                      11.0.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nA zip file containing my angular.json, and the karma.conf.js for my main app (but this has not changed), is attached.\r\n[KarmaNoLikey.zip](https://github.com/angular/angular/files/5661311/KarmaNoLikey.zip)\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19571","RelatedDescription":"Closed issue \"After Upgrading a Workspace Containing Multiple Projects to Angular 11, Karma Refuses to Run\" (#19571)"},{"Id":"759880744","IsPullRequest":false,"CreatedAt":"2020-12-09T13:05:58","Actor":"Nagendracv","Number":"19575","RawContent":null,"Title":"Cannot install angular cli","State":"closed","Body":"# 🐞 Bug report\r\n- [x ] new\r\n\r\n### Is this a regression?\r\nNo\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNot sure. I guess it would have worked because it's at the very root of angular\r\n\r\nBelow is what I get when trying to install angular globally. Not sure why it is trying to install from git...\r\nPS C:\\D\\Ts.NetAngular> npm install -g angular/cli\r\ninfo: please complete authentication in your browser...-session 3cdebc65d33fb371\r\nnpm ERR! Error while executing:\r\nnpm ERR! C:\\Program Files\\Git\\cmd\\git.EXE ls-remote -h -t ssh://git@github.com/angular/cli.git\r\nnpm ERR!\r\nnpm ERR! Host key verification failed.\r\nnpm ERR! fatal: Could not read from remote repository.\r\nnpm ERR!\r\nnpm ERR! Please make sure you have the correct access rights\r\nnpm ERR! and the repository exists.\r\nnpm ERR!\r\nnpm ERR! exited with error code: 128\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users...\\AppData\\Roaming\\npm-cache_logs\\2020-12-08T23_50_51_414Z-debug.log\r\n\r\nAnd when I open the gitlog file, I see the below...\r\n\r\n0 info it worked if it ends with ok\r\n1 verbose cli [\r\n1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node.exe',\r\n1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',\r\n1 verbose cli   'install',\r\n1 verbose cli   '-g',\r\n1 verbose cli   'angular/cli'\r\n1 verbose cli ]\r\n2 info using npm@6.14.8\r\n3 info using node@v14.15.1\r\n4 verbose npm-session 0d6fdae54b49f7b5\r\n5 silly install loadCurrentTree\r\n6 silly install readGlobalPackageData\r\n7 silly fetchPackageMetaData error for github:angular/cli Error while executing:\r\n7 silly fetchPackageMetaData C:\\Program Files\\Git\\cmd\\git.EXE ls-remote -h -t ssh://git@github.com/angular/cli.git\r\n7 silly fetchPackageMetaData\r\n7 silly fetchPackageMetaData Host key verification failed.\r\n7 silly fetchPackageMetaData fatal: Could not read from remote repository.\r\n7 silly fetchPackageMetaData\r\n7 silly fetchPackageMetaData Please make sure you have the correct access rights\r\n7 silly fetchPackageMetaData and the repository exists.\r\n7 silly fetchPackageMetaData\r\n7 silly fetchPackageMetaData exited with error code: 128\r\n8 timing stage:rollbackFailedOptional Completed in 0ms\r\n9 timing stage:runTopLevelLifecycles Completed in 4183ms\r\n10 verbose stack Error: exited with error code: 128\r\n10 verbose stack     at ChildProcess. (C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\node_modules\\pacote\\lib\\util\\finished.js:12:19)\r\n10 verbose stack     at ChildProcess.emit (events.js:315:20)\r\n10 verbose stack     at maybeClose (internal/child_process.js:1048:16)\r\n10 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:288:5)\r\n11 verbose cwd C:\\D\\TGit\\TestGit\\POCs\\Web\\TypescriptWeb\\Ts.NetAngular\r\n12 verbose Windows_NT 10.0.15063\r\n13 verbose argv \"C:\\Program Files (x86)\\nodejs\\node.exe\" \"C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"-g\" \"angular/cli\"\r\n14 verbose node v14.15.1\r\n15 verbose npm  v6.14.8\r\n16 error Error while executing:\r\n16 error C:\\Program Files\\Git\\cmd\\git.EXE ls-remote -h -t ssh://git@github.com/angular/cli.git\r\n16 error\r\n16 error Host key verification failed.\r\n16 error fatal: Could not read from remote repository.\r\n16 error\r\n16 error Please make sure you have the correct access rights\r\n16 error and the repository exists.\r\n16 error\r\n16 error exited with error code: 128\r\n17 verbose exit [ 1, true ]\r\n\r\nAny suggestions?","Url":"https://github.com/angular/angular-cli/issues/19575","RelatedDescription":"Closed issue \"Cannot install angular cli\" (#19575)"},{"Id":"759770601","IsPullRequest":true,"CreatedAt":"2020-12-09T00:54:15","Actor":"clydin","Number":"19573","RawContent":null,"Title":"fix(@angular-devkit/build-angular): define `forwardRef` as a pure function","State":"closed","Body":"By configuring the optimizer (`terser`) to be aware that the Angular `forwardRef` helper function is a pure function, the optimizer can completely remove the helper call when the return value is unused.\r\n\r\nCloses #19572","Url":"https://github.com/angular/angular-cli/pull/19573","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): define `forwardRef` as a pure function\" (#19573)"},{"Id":"759733607","IsPullRequest":false,"CreatedAt":"2020-12-09T00:54:15","Actor":"devoto13","Number":"19572","RawContent":null,"Title":"NG_VALUE_ACCESSOR as a separate variable retains dead code in Angular CLI 11","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n\r\nYes. It is not present in the fresh project generated with Angular CLI 10.\r\n\r\n### Description\r\n\r\nWhile debugging a size regression in ng-bootstrap (https://github.com/ng-bootstrap/ng-bootstrap/issues/3904#issuecomment-740845567) when used in Angular 11 application I've spotted that a lot of dead code is retained because `NG_VALUE_ACCESSOR` is declared as a separate variable. Such pattern retains a linked component and consequently a lot of extra code used by this component. E.g. below code in the library will retain `MylibComponent` using Angular CLI 11, but will be removed as dead code using Angular CLI 10:\r\n\r\n```\r\nconst TEST_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MylibComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'lib-mylib',\r\n  template: ` <p>mylib works!</p> `,\r\n  styles: [],\r\n  providers: [TEST_VALUE_ACCESSOR],\r\n})\r\nexport class MylibComponent implements OnInit, ControlValueAccessor { ... }\r\n```\r\n\r\nObservations:\r\n\r\n- This only happens when code is present in the library. Component is eliminated as dead code if it is part of the application.\r\n- Inlining the variable will result in component being eliminated as dead code.\r\n- Library code processed by `ngcc` is identical, so I guess something in the application bundling has changed.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. Clone the reproductions for Angular 10 and 11 (fresh project + fresh lib + minimal code reproducing the problem, each in a separate commit):\r\n\r\n   ```\r\n   git clone -b va10 git@github.com:devoto13/va-regression-repro.git va10\r\n   git clone -b va11 git@github.com:devoto13/va-regression-repro.git va11\r\n   ```\r\n\r\n2. Build each repro:\r\n\r\n   ```\r\n   yarn ng build mylib --prod\r\n   NG_BUILD_MANGLE=false ./node_modules/.bin/ng build --prod\r\n   ```\r\n\r\n3. Check `dist/va10/main.js` and `dist/va11/main.js` respectively. Observe that in v10 project `MylibComponent` symbol is not present in the bundle, but in v11 project this symbol is retained in the bundle together with the value accessor.\r\n<!--\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🌍 Your Environment\r\n<pre><code>Angular CLI: 11.0.3\r\nNode: 14.8.0\r\nOS: darwin x64\r\n\r\nAngular: 11.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.3\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            11.0.3\r\n@angular-devkit/schematics      11.0.3\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nng-packagr                      11.0.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19572","RelatedDescription":"Closed issue \"NG_VALUE_ACCESSOR as a separate variable retains dead code in Angular CLI 11\" (#19572)"},{"Id":"759399901","IsPullRequest":true,"CreatedAt":"2020-12-08T19:39:38","Actor":"alan-agius4","Number":"19568","RawContent":null,"Title":"fix(@angular-devkit/build-angular): add file path in CSS optimization exception","State":"closed","Body":"\r\nCloses #19561","Url":"https://github.com/angular/angular-cli/pull/19568","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): add file path in CSS optimization exception\" (#19568)"},{"Id":"759614381","IsPullRequest":false,"CreatedAt":"2020-12-08T17:39:33","Actor":"vahidvdn","Number":"19570","RawContent":null,"Title":"Use lint-staged for ng lint","State":"closed","Body":"There are some issues with `ng lint`. Linting for source code is a good idea. But in some cases that's not. There should be an option to lint only staged files. Here is two reason:\r\n\r\n1- linting the whole project needs more time. (Although there is an option to select files, but selecting files when there are a lot of changed files is not a good idea)\r\n\r\n 2- Here is the scenario\r\n```json\r\n\"husky\": {\r\n  \"hooks\": {\r\n    \"pre-commit\": \"ng lint --fix=true\"\r\n  }\r\n}\r\n```\r\n\r\nIf there is a lint error, it prevents from being committed. Here is the scenario:\r\n\r\n 1. Developer writes wrong code (e.g. `x==y` which should be `x===y` from lint point of view)\r\n 2. He uses these commands: `git add .` and `git commit -m \"msg here\"` which fails. Because lint fails.\r\n 3. He corrects the source code. But instead of doing `git add .` again, he uses this command: `git commit -m \"msg here\"`. This time lint doesn't fail, because in source code everything is fine, and `ng lint` succeeds. But actually, he is committing the previous version which has been added before.","Url":"https://github.com/angular/angular-cli/issues/19570","RelatedDescription":"Closed issue \"Use lint-staged for ng lint\" (#19570)"},{"Id":"759477687","IsPullRequest":false,"CreatedAt":"2020-12-08T14:11:13","Actor":"muuvmuuv","Number":"19569","RawContent":null,"Title":"Warning: Conflict: Multiple assets emit different content to the same filename 0.worker.js","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] serve\r\n\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\n\r\nI have two independent modules which have both their own workers. Now when I serve my app and edit any file inside one module tree it prints `Multiple assets emit different content to the same filename 0.worker.js`.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n> https://github.com/muuvmuuv/angular-worker-issue\r\n\r\n1. server the app\r\n2. go into `src/app/two/two.page.ts:14`\r\n3. edit the file and save it\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nWarning: Conflict: Multiple assets emit different content to the same filename 0.worker.js\r\nWarning: Conflict: Multiple assets emit different content to the same filename 0.worker.js.map\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 11.0.3\r\nNode: 14.15.1\r\nOS: darwin x64\r\n\r\nAngular: 11.0.3\r\n... cli, common, compiler, compiler-cli, core, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.3\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            11.0.3\r\n@angular-devkit/schematics      11.0.3\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nI am using [`observable-webworker`](https://github.com/cloudnc/observable-webworker) lib to be able to use Observables with workers but also tested without the lib and the error still persist.\r\n","Url":"https://github.com/angular/angular-cli/issues/19569","RelatedDescription":"Open issue \"Warning: Conflict: Multiple assets emit different content to the same filename 0.worker.js\" (#19569)"},{"Id":"759300214","IsPullRequest":false,"CreatedAt":"2020-12-08T09:55:53","Actor":"janeriklysander","Number":"19567","RawContent":null,"Title":"Add --silent option to ng build, test and lint","State":"open","Body":"# 🚀 Feature request\r\nAdd a `--silent` option to **build**, **test** and **lint** so that it only outputs errors.\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [x] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\nSo the usecase for us is that we have a pre-push GIT hook that runs **lint**, **test** and **build** before allowing the push to go through. Our issue is that we have a rather large application and the output for test and build are quite massive. An ideal situation would be if neither of the commands output anything if they pass and only show the errors if they don't. \r\nAnother usecase where this could be useful is for PR-builds to deliver a small but relevant report.\r\n\r\n### Describe the solution you'd like\r\nAdd a `--silent` option that only output any potential error the command might come across.\r\n\r\n### Describe alternatives you've considered\r\n_Optionally:_ Add a `--loglevel` option so you could filter away depending on the level of your choice.","Url":"https://github.com/angular/angular-cli/issues/19567","RelatedDescription":"Open issue \"Add --silent option to ng build, test and lint\" (#19567)"},{"Id":"759053415","IsPullRequest":false,"CreatedAt":"2020-12-08T08:39:08","Actor":"JounQin","Number":"19566","RawContent":null,"Title":"`regeneratorRuntime` callment generated for `monaco-editor` workers incorrectly","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 10.*\r\n\r\n### Description\r\n\r\n<!-- A clear and concise description of the problem... ✍️--> \r\n\r\n![image](https://user-images.githubusercontent.com/8336744/101439972-b7dfda80-3950-11eb-81c5-7774eb6cfa6a.png)\r\n\r\nIn a clean webpack project without angular/angular-cli, there is no `regeneratorRuntime` generated at all in the output `.worker.js` files.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nhttps://github.com/JounQin/test/tree/monaco_editor\r\n\r\nBranch monaco_editor\r\n\r\n## 🔥 Exception or Error\r\n\r\n```js\r\nUncaught ReferenceError: regeneratorRuntime is not defined\r\n```\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 11.0.3\r\nNode: 12.20.0\r\nOS: darwin x64\r\n\r\nAngular: 11.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic\r\nIvy Workspace: Yes\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1100.3\r\n@angular-devkit/core         11.0.3\r\n@angular-devkit/schematics   11.0.3\r\n@schematics/angular          11.0.3\r\n@schematics/update           0.1100.3\r\nrxjs                         6.6.3\r\ntypescript                   4.1.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nI don't know whether it's related to https://github.com/angular/angular-cli/pull/19049\r\n","Url":"https://github.com/angular/angular-cli/issues/19566","RelatedDescription":"Closed issue \"`regeneratorRuntime` callment generated for `monaco-editor` workers incorrectly\" (#19566)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"763119960","IsPullRequest":true,"CreatedAt":"2020-12-12T00:50:44","Actor":"mmalerba","Number":"21333","RawContent":null,"Title":"fix(material/tree): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21333","RelatedDescription":"Open PR \"fix(material/tree): Allow typography mixin to consume 2018 style configs\" (#21333)"},{"Id":"763119854","IsPullRequest":true,"CreatedAt":"2020-12-12T00:50:38","Actor":"mmalerba","Number":"21332","RawContent":null,"Title":"fix(material/tooltip): Allow typography mixin to consume 2018 style c…","State":"open","Body":"…onfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21332","RelatedDescription":"Open PR \"fix(material/tooltip): Allow typography mixin to consume 2018 style c…\" (#21332)"},{"Id":"763119768","IsPullRequest":true,"CreatedAt":"2020-12-12T00:50:31","Actor":"mmalerba","Number":"21331","RawContent":null,"Title":"fix(material/toolbar): Allow typography mixin to consume 2018 style c…","State":"open","Body":"…onfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21331","RelatedDescription":"Open PR \"fix(material/toolbar): Allow typography mixin to consume 2018 style c…\" (#21331)"},{"Id":"763119671","IsPullRequest":true,"CreatedAt":"2020-12-12T00:50:25","Actor":"mmalerba","Number":"21330","RawContent":null,"Title":"fix(material/tabs): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21330","RelatedDescription":"Open PR \"fix(material/tabs): Allow typography mixin to consume 2018 style configs\" (#21330)"},{"Id":"763119152","IsPullRequest":true,"CreatedAt":"2020-12-12T00:49:48","Actor":"mmalerba","Number":"21329","RawContent":null,"Title":"fix(material/table): Allow typography mixin to consume 2018 style con…","State":"open","Body":"…figs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21329","RelatedDescription":"Open PR \"fix(material/table): Allow typography mixin to consume 2018 style con…\" (#21329)"},{"Id":"763119070","IsPullRequest":true,"CreatedAt":"2020-12-12T00:49:42","Actor":"mmalerba","Number":"21328","RawContent":null,"Title":"fix(material/stepper): Allow typography mixin to consume 2018 style c…","State":"open","Body":"…onfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21328","RelatedDescription":"Open PR \"fix(material/stepper): Allow typography mixin to consume 2018 style c…\" (#21328)"},{"Id":"763118978","IsPullRequest":true,"CreatedAt":"2020-12-12T00:49:35","Actor":"mmalerba","Number":"21327","RawContent":null,"Title":"fix(material/snack-bar): Allow typography mixin to consume 2018 style…","State":"open","Body":"… configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21327","RelatedDescription":"Open PR \"fix(material/snack-bar): Allow typography mixin to consume 2018 style…\" (#21327)"},{"Id":"763118520","IsPullRequest":true,"CreatedAt":"2020-12-12T00:49:03","Actor":"mmalerba","Number":"21326","RawContent":null,"Title":"fix(material/slider): Allow typography mixin to consume 2018 style co…","State":"open","Body":"…nfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21326","RelatedDescription":"Open PR \"fix(material/slider): Allow typography mixin to consume 2018 style co…\" (#21326)"},{"Id":"763118418","IsPullRequest":true,"CreatedAt":"2020-12-12T00:48:55","Actor":"mmalerba","Number":"21325","RawContent":null,"Title":"fix(material/slide-toggle): Allow typography mixin to consume 2018 st…","State":"open","Body":"…yle configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21325","RelatedDescription":"Open PR \"fix(material/slide-toggle): Allow typography mixin to consume 2018 st…\" (#21325)"},{"Id":"763118332","IsPullRequest":true,"CreatedAt":"2020-12-12T00:48:49","Actor":"mmalerba","Number":"21324","RawContent":null,"Title":"fix(material/select): Allow typography mixin to consume 2018 style co…","State":"open","Body":"…nfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21324","RelatedDescription":"Open PR \"fix(material/select): Allow typography mixin to consume 2018 style co…\" (#21324)"},{"Id":"763117950","IsPullRequest":true,"CreatedAt":"2020-12-12T00:48:21","Actor":"mmalerba","Number":"21323","RawContent":null,"Title":"fix(material/radio): Allow typography mixin to consume 2018 style con…","State":"open","Body":"…figs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21323","RelatedDescription":"Open PR \"fix(material/radio): Allow typography mixin to consume 2018 style con…\" (#21323)"},{"Id":"763117856","IsPullRequest":true,"CreatedAt":"2020-12-12T00:48:15","Actor":"mmalerba","Number":"21322","RawContent":null,"Title":"fix(material/paginator): Allow typography mixin to consume 2018 style…","State":"open","Body":"… configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21322","RelatedDescription":"Open PR \"fix(material/paginator): Allow typography mixin to consume 2018 style…\" (#21322)"},{"Id":"763117762","IsPullRequest":true,"CreatedAt":"2020-12-12T00:48:09","Actor":"mmalerba","Number":"21321","RawContent":null,"Title":"fix(material/menu): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21321","RelatedDescription":"Open PR \"fix(material/menu): Allow typography mixin to consume 2018 style configs\" (#21321)"},{"Id":"763117401","IsPullRequest":true,"CreatedAt":"2020-12-12T00:47:42","Actor":"mmalerba","Number":"21320","RawContent":null,"Title":"fix(material/list): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21320","RelatedDescription":"Open PR \"fix(material/list): Allow typography mixin to consume 2018 style configs\" (#21320)"},{"Id":"763117311","IsPullRequest":true,"CreatedAt":"2020-12-12T00:47:36","Actor":"mmalerba","Number":"21319","RawContent":null,"Title":"fix(material/input): Allow typography mixin to consume 2018 style con…","State":"open","Body":"…figs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21319","RelatedDescription":"Open PR \"fix(material/input): Allow typography mixin to consume 2018 style con…\" (#21319)"},{"Id":"763117177","IsPullRequest":true,"CreatedAt":"2020-12-12T00:47:25","Actor":"mmalerba","Number":"21318","RawContent":null,"Title":"fix(material/grid-list): Allow typography mixin to consume 2018 style…","State":"open","Body":"… configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21318","RelatedDescription":"Open PR \"fix(material/grid-list): Allow typography mixin to consume 2018 style…\" (#21318)"},{"Id":"763116764","IsPullRequest":true,"CreatedAt":"2020-12-12T00:46:55","Actor":"mmalerba","Number":"21317","RawContent":null,"Title":"fix(material/form-field): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21317","RelatedDescription":"Open PR \"fix(material/form-field): Allow typography mixin to consume 2018 style configs\" (#21317)"},{"Id":"763116301","IsPullRequest":true,"CreatedAt":"2020-12-12T00:46:23","Actor":"mmalerba","Number":"21316","RawContent":null,"Title":"fix(material/expansion): Allow typography mixin to consume 2018 style…","State":"open","Body":"… configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21316","RelatedDescription":"Open PR \"fix(material/expansion): Allow typography mixin to consume 2018 style…\" (#21316)"},{"Id":"763116201","IsPullRequest":true,"CreatedAt":"2020-12-12T00:46:16","Actor":"mmalerba","Number":"21315","RawContent":null,"Title":"fix(material/dialog): Allow typography mixin to consume 2018 style co…","State":"open","Body":"…nfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21315","RelatedDescription":"Open PR \"fix(material/dialog): Allow typography mixin to consume 2018 style co…\" (#21315)"},{"Id":"763116085","IsPullRequest":true,"CreatedAt":"2020-12-12T00:46:08","Actor":"mmalerba","Number":"21314","RawContent":null,"Title":"fix(material/datepicker): Allow typography mixin to consume 2018 styl…","State":"open","Body":"…e configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21314","RelatedDescription":"Open PR \"fix(material/datepicker): Allow typography mixin to consume 2018 styl…\" (#21314)"},{"Id":"763115505","IsPullRequest":true,"CreatedAt":"2020-12-12T00:45:27","Actor":"mmalerba","Number":"21313","RawContent":null,"Title":"fix(material/core): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21313","RelatedDescription":"Open PR \"fix(material/core): Allow typography mixin to consume 2018 style configs\" (#21313)"},{"Id":"763115272","IsPullRequest":true,"CreatedAt":"2020-12-12T00:45:10","Actor":"mmalerba","Number":"21312","RawContent":null,"Title":"fix(material/chips): Allow typography mixin to consume 2018 style con…","State":"open","Body":"…figs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21312","RelatedDescription":"Open PR \"fix(material/chips): Allow typography mixin to consume 2018 style con…\" (#21312)"},{"Id":"763115141","IsPullRequest":true,"CreatedAt":"2020-12-12T00:45:00","Actor":"mmalerba","Number":"21311","RawContent":null,"Title":"fix(material/checkbox): Allow typography mixin to consume 2018 style …","State":"open","Body":"…configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21311","RelatedDescription":"Open PR \"fix(material/checkbox): Allow typography mixin to consume 2018 style …\" (#21311)"},{"Id":"763114739","IsPullRequest":true,"CreatedAt":"2020-12-12T00:44:31","Actor":"mmalerba","Number":"21310","RawContent":null,"Title":"fix(material/card): Allow typography mixin to consume 2018 style configs","State":"open","Body":"See https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21310","RelatedDescription":"Open PR \"fix(material/card): Allow typography mixin to consume 2018 style configs\" (#21310)"},{"Id":"763114602","IsPullRequest":true,"CreatedAt":"2020-12-12T00:44:20","Actor":"mmalerba","Number":"21309","RawContent":null,"Title":"fix(material/button): Allow typography mixin to consume 2018 style co…","State":"open","Body":"…nfigs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21309","RelatedDescription":"Open PR \"fix(material/button): Allow typography mixin to consume 2018 style co…\" (#21309)"},{"Id":"763114145","IsPullRequest":true,"CreatedAt":"2020-12-12T00:43:47","Actor":"mmalerba","Number":"21308","RawContent":null,"Title":"fix(material/bottom-sheet): Allow typography mixin to consume 2018 st…","State":"open","Body":"…yle configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21308","RelatedDescription":"Open PR \"fix(material/bottom-sheet): Allow typography mixin to consume 2018 st…\" (#21308)"},{"Id":"763114039","IsPullRequest":true,"CreatedAt":"2020-12-12T00:43:39","Actor":"mmalerba","Number":"21307","RawContent":null,"Title":"fix(material/button-toggle): Allow typography mixin to consume 2018 s…","State":"open","Body":"…tyle configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21307","RelatedDescription":"Open PR \"fix(material/button-toggle): Allow typography mixin to consume 2018 s…\" (#21307)"},{"Id":"763113308","IsPullRequest":true,"CreatedAt":"2020-12-12T00:42:47","Actor":"mmalerba","Number":"21306","RawContent":null,"Title":"fix(material/badge): Allow typography mixin to consume 2018 style con…","State":"open","Body":"…figs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21306","RelatedDescription":"Open PR \"fix(material/badge): Allow typography mixin to consume 2018 style con…\" (#21306)"},{"Id":"763113194","IsPullRequest":true,"CreatedAt":"2020-12-12T00:42:38","Actor":"mmalerba","Number":"21305","RawContent":null,"Title":"fix(material-experimental/popover-edit): Allow typography mixin to co…","State":"open","Body":"…nsume 2018 style configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21305","RelatedDescription":"Open PR \"fix(material-experimental/popover-edit): Allow typography mixin to co…\" (#21305)"},{"Id":"763113069","IsPullRequest":true,"CreatedAt":"2020-12-12T00:42:29","Actor":"mmalerba","Number":"21304","RawContent":null,"Title":"fix(material-experimental/mdc-tabs): Allow typography mixin to consum…","State":"open","Body":"…e 2018 style configs\r\n\r\nSee https://github.com/angular/components/pull/21059 for context.","Url":"https://github.com/angular/components/pull/21304","RelatedDescription":"Open PR \"fix(material-experimental/mdc-tabs): Allow typography mixin to consum…\" (#21304)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-12T05:30:04.9338416Z","RunDurationInMilliseconds":2448}