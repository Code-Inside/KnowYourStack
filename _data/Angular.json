{"Data":{"Angular-Issues":{"Issues":[{"Id":"2904189763","IsPullRequest":true,"CreatedAt":"2025-03-08T00:02:54","Actor":"dgp1130","Number":"60286","RawContent":null,"Title":"refactor(devtools): refactors property view drag-and-drop behavior","State":"open","Body":"The main goal of this change is to remove `categoryOrder` which effectively hard-codes the supported length of `panels`. Adding another item to `panels` is not rendered unless that is added to `categoryOrder`.\r\n\r\nMy solution to this is to make the set of categories a signal, with each category able to produce the data inside it. This allow `CdkDragDrop` to rearrange categories but then still produce the correct data in the template without needing a separate array to track order.\r\n\r\nAlso removed `hidden` and inlined it in the template, since the logic was the same for every panel.\r\n\r\n`moveItemInArray` is unfortunately an in-place move, so I needed to manually clone the array to ensure `panels` observes an immutable update which works better with signals and change detection.","Url":"https://github.com/angular/angular/pull/60286","RelatedDescription":"Open PR \"refactor(devtools): refactors property view drag-and-drop behavior\" (#60286)"},{"Id":"2904164329","IsPullRequest":false,"CreatedAt":"2025-03-07T23:39:26","Actor":"DmitryEfimenko","Number":"60285","RawContent":null,"Title":"Support view transition types","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nAdd support for \"forwards\" and \"backwards\" view transition types for the view transition created for router navigation event.\n\nDocs for [view transition types](https://developer.chrome.com/docs/web-platform/view-transitions/same-document#view-transition-types)\n\nRelevant code: https://github.com/angular/angular/blob/main/packages/router/src/utils/view_transition.ts#L121-L128\n\nThere would need to be a way to identify whether this is a \"forwards\" or \"backwards\" navigation. Not sure if this information is already available today.\n\n### Proposed solution\n\n```ts\nconst direction = 'forwards'; // TODO: get this variable figured out dynamically\n\nconst transition = document.startViewTransition({\n  update: () => {\n    resolveViewTransitionStarted();\n    // We don't actually update dom within the transition callback. The resolving of the above\n    // promise unblocks the Router navigation, which synchronously activates and deactivates\n    // routes (the DOM update). This view transition waits for the next change detection to\n    // complete (below), which includes the update phase of the routed components.\n    return createRenderPromise(injector);\n  },\n  types: [direction]\n});\n```\n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular/issues/60285","RelatedDescription":"Open issue \"Support view transition types\" (#60285)"},{"Id":"2904159626","IsPullRequest":true,"CreatedAt":"2025-03-07T23:34:19","Actor":"dgp1130","Number":"60284","RawContent":null,"Title":"refactor(devtools): remove input/output/property links","State":"open","Body":"These links aren't that helpful in the context of Angular DevTools for a few reasons:\r\n1. Users of the extension should already have a general understanding of core Angular concepts, inputs and outputs included.\r\n2. The input and output links go to API documentation which isn't useful for someone who doesn't actually understand the core concepts anyways.\r\n3. These links point to signals documentation even though DevTools shows non-signal inputs and outputs.\r\n4. Properties linked to template binding docs, which doesn't *really* have anything to do with the plain JS properties being shown in DevTools anyways.","Url":"https://github.com/angular/angular/pull/60284","RelatedDescription":"Open PR \"refactor(devtools): remove input/output/property links\" (#60284)"},{"Id":"2904003883","IsPullRequest":true,"CreatedAt":"2025-03-07T22:17:23","Actor":"goulaheau","Number":"60283","RawContent":null,"Title":"feat(router): add disableScrollToTop to NavigationBehaviorOptions (#2…","State":"closed","Body":"…6744)\r\n\r\nAdd a new option to NavigationBehaviorOptions that allows to disable the scroll to the top for this navigation. This option allows to override the default behaviour of InMemoryScrollingOptions.scrollPositionRestoration 'top' or 'enabled'.\r\n\r\nPR Close #26744\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #26744\r\n\r\n## What is the new behavior?\r\n\r\nAdd a new option to NavigationBehaviorOptions that allows to disable the scroll to the top for this navigation.\r\nThis option allows to override the default behavior of InMemoryScrollingOptions.scrollPositionRestoration 'top' or 'enabled'.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\n\r\nI couldn't verify that the tests are successful locally, it wasn't working on WSL... So I'm hoping for them to work on GitHub.\r\nIt's maybe missing some integration tests but I didn't see where to do them.\r\nI could do them if this change is approved by the maintainers.\r\n","Url":"https://github.com/angular/angular/pull/60283","RelatedDescription":"Closed or merged PR \"feat(router): add disableScrollToTop to NavigationBehaviorOptions (#2…\" (#60283)"},{"Id":"2903988770","IsPullRequest":false,"CreatedAt":"2025-03-07T21:36:51","Actor":"luengoa17","Number":"60282","RawContent":null,"Title":"Model signal subscription not working when readinf through content or view queries","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen you access a model signal through content or view query, the subscription does not work,\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-usmfdyon?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.9\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.8\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.9\n@angular-devkit/build-angular   19.1.9\n@angular-devkit/core            19.1.9\n@angular-devkit/schematics      19.1.9\n@angular/cli                    19.1.9\n@schematics/angular             19.1.9\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60282","RelatedDescription":"Open issue \"Model signal subscription not working when readinf through content or view queries\" (#60282)"},{"Id":"2903755712","IsPullRequest":false,"CreatedAt":"2025-03-07T19:46:51","Actor":"nhhockeyplayer","Number":"60281","RawContent":null,"Title":"ENVIRONMENT_INITIALIZER unnecessary reflects javascript anti-patterns","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nENVIRONMENT_INITIALIZER unnecessary reflects javascript anti-patterns\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nENVIRONMENT_INITIALIZER\n\n### Please provide the exception or error you saw\n\n\nalready implemented constructing token injected services/instances\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n\n\n### Anything else?\n\n","Url":"https://github.com/angular/angular/issues/60281","RelatedDescription":"Closed issue \"ENVIRONMENT_INITIALIZER unnecessary reflects javascript anti-patterns\" (#60281)"},{"Id":"2902760157","IsPullRequest":true,"CreatedAt":"2025-03-07T19:00:51","Actor":"devversion","Number":"60268","RawContent":null,"Title":"build: properly compile tests in `core` with Angular compiler","State":"closed","Body":"Previously we never could use relative imports to import e.g. `Component` in e.g. the `core/tests/bundling` folder. This was necessary because otherwise the Angular compiler wouldn't process those files as it wouldn't recognize the Angular decorator as the one from `@angular/core`.\r\n\r\nNotably this still isn't a large issue because relative imports still work for most core tests, that are JIT compiled!\r\n\r\nFor bundling tests though, or some smaller targets, our new upcoming guidelines for using relative imports inside the full package; fall apart. This commit unblocks this effort and allows us to use relative imports in all tests of `packages/core`. This is achieved by leveraging the existing `isCore` functionality of the compiler, and fixing a few instances that were missing before.","Url":"https://github.com/angular/angular/pull/60268","RelatedDescription":"Closed or merged PR \"build: properly compile tests in `core` with Angular compiler\" (#60268)"},{"Id":"2902484007","IsPullRequest":true,"CreatedAt":"2025-03-07T19:00:05","Actor":"alan-agius4","Number":"60266","RawContent":null,"Title":"test: narrow down signal-input typescript tests","State":"closed","Body":"Remove TS versions that are no longer supported.\r\n","Url":"https://github.com/angular/angular/pull/60266","RelatedDescription":"Closed or merged PR \"test: narrow down signal-input typescript tests\" (#60266)"},{"Id":"2902389905","IsPullRequest":true,"CreatedAt":"2025-03-07T18:57:25","Actor":"alan-agius4","Number":"60264","RawContent":null,"Title":"refactor: replace `fast-glob` usage with `tinyglobby`","State":"closed","Body":"Usage of the `fast-glob` package has been replaced with the `tinyglobby` package. The change reduces the number of transitive dependencies related to these packages from 17 to 2 while also maintaining equivalent functionality. This was also changed in the Angular CLI packages.\r\n","Url":"https://github.com/angular/angular/pull/60264","RelatedDescription":"Closed or merged PR \"refactor: replace `fast-glob` usage with `tinyglobby`\" (#60264)"},{"Id":"2901596588","IsPullRequest":false,"CreatedAt":"2025-03-07T18:55:42","Actor":"rewento","Number":"60258","RawContent":null,"Title":"Typographical errors in description of `styleUrl` field of `Component` directive interface","State":"closed","Body":"### Describe the problem that you experienced\n\nDescription reads: \"One relative **paths** or an absolute URL for **files** containing CSS stylesheet to use in this component.\"\n\nIt should read: \"One relative **path** or an absolute URL for **a file** containing **a** CSS stylesheet to use in this component.\"\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/api/core/Component#styleUrl\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\nUnfortunately, I'm encountering a 403 HTTP error response when attempting to upload a screen capture image. But the problem is readily apparent upon visiting [https://angular.dev/api/core/Component#styleUrl](https://angular.dev/api/core/Component#styleUrl).\n\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nThe typographical errors are also present in this JSDoc comment in the source code: https://github.com/angular/angular/blob/aa1ab41e6ce7196ef5f08f928a3dcedd94c1f945/packages/core/src/metadata/directives.ts#L585\n```","Url":"https://github.com/angular/angular/issues/60258","RelatedDescription":"Closed issue \"Typographical errors in description of `styleUrl` field of `Component` directive interface\" (#60258)"},{"Id":"2901746164","IsPullRequest":true,"CreatedAt":"2025-03-07T18:55:41","Actor":"vladboisa","Number":"60261","RawContent":null,"Title":"docs: fix typo in desription","State":"closed","Body":"Fix typos in description of `styleUrl`\r\n\r\nFixes #60258\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60261","RelatedDescription":"Closed or merged PR \"docs: fix typo in desription\" (#60261)"},{"Id":"2903570519","IsPullRequest":true,"CreatedAt":"2025-03-07T17:34:27","Actor":"JeanMeche","Number":"60280","RawContent":null,"Title":"docs: fix event listener key modifier example","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/60280","RelatedDescription":"Open PR \"docs: fix event listener key modifier example\" (#60280)"},{"Id":"2903570438","IsPullRequest":true,"CreatedAt":"2025-03-07T17:34:24","Actor":"mmalerba","Number":"60279","RawContent":null,"Title":"feat(compiler-cli): add extended diagnostic for invalid nullish coalescing","State":"open","Body":"The semantics for nullish coalescing (`??`) in Javascript/Typescript\r\ndiffer slightly from the semantics in Angular templates. Mixing nullish\r\ncoalescing with logical and/or without parentheses is an error in\r\nJavascript. This PR adds an extended diagnostic that can be enabled to\r\ntreat it as an error in Angular templates as well.","Url":"https://github.com/angular/angular/pull/60279","RelatedDescription":"Open PR \"feat(compiler-cli): add extended diagnostic for invalid nullish coalescing\" (#60279)"},{"Id":"2903551378","IsPullRequest":true,"CreatedAt":"2025-03-07T17:24:26","Actor":"JeanMeche","Number":"60278","RawContent":null,"Title":"refactor(http): replace overriden method with a ts `declare`","State":"open","Body":"This allows us to drop the useless `super.hasValue()`.\r\n","Url":"https://github.com/angular/angular/pull/60278","RelatedDescription":"Open PR \"refactor(http): replace overriden method with a ts `declare`\" (#60278)"},{"Id":"2903426599","IsPullRequest":true,"CreatedAt":"2025-03-07T16:23:00","Actor":"fbucchini","Number":"60277","RawContent":null,"Title":"docs: fix typo and link in v16 update guide","State":"open","Body":"This PR fixes a typo and link in the v15->v16 update guide.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60277","RelatedDescription":"Open PR \"docs: fix typo and link in v16 update guide\" (#60277)"},{"Id":"2903309437","IsPullRequest":true,"CreatedAt":"2025-03-07T15:31:00","Actor":"devversion","Number":"60276","RawContent":null,"Title":"refactor(bazel): remove types bundling from `ng_package`","State":"open","Body":"Types bundling was helpful in speeding up parsing/reading of `ng_package` consumers, but in reality:\r\n\r\n- ng-packagr hasn't done type bundling for years, and still doesn't do it, also because of complexity and brittle-ness. This indicates, especially with many Angular libraries in the ecosystem, that the risk of an issue is rather low when we stop bundling.\r\n\r\n- type bundling is very brittle with Microsoft's API extractor. It has proven to be a challenge to get support for some patterns and those require tricks/workarounds.\r\n\r\n- type bundling is complicated to maintain/setup. We regularly have issues integrating Microsoft's API extractor package.\r\n\r\n- type bundling does not work well with shared chunks, or more precisely, relative imports. There is no way for the API extractor to \"automatically\", or intuitively know whether something is shared from another e.g. entry-point.\r\n\r\nWe will need to do some measuring on Windows, but with `skipLibCheck: true` being the default in CLI, and type bundling being quite complicated, it's likely the next step we'll need to take.","Url":"https://github.com/angular/angular/pull/60276","RelatedDescription":"Open PR \"refactor(bazel): remove types bundling from `ng_package`\" (#60276)"},{"Id":"2903282784","IsPullRequest":false,"CreatedAt":"2025-03-07T15:19:25","Actor":"michaelkrog","Number":"60275","RawContent":null,"Title":"lynxjs renderer","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\n[Lynxjs](https://github.com/lynx-family/lynx) is a pretty new framework agnostic renderer developed by TikTok, but has currently only a React integration.\n\nAn Angular integration/renderer for this could be really awesome for reusing applications across web and native.\n\n### Proposed solution\n\nUnsure of the implementation path.\n\n### Alternatives considered\n\n**Nativescript**\nDoes not have support for web\n\n**React Native**\nBound to React","Url":"https://github.com/angular/angular/issues/60275","RelatedDescription":"Open issue \"lynxjs renderer\" (#60275)"},{"Id":"2903245196","IsPullRequest":false,"CreatedAt":"2025-03-07T15:06:23","Actor":"javierFerFer","Number":"60274","RawContent":null,"Title":"Expose an API to reset the submitted state of a form","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHi guys! I want to propose something:\nThe last days I was working with reactive forms in our app and I saw that exist 2 ways to reset a form object (reactive one), one is using the method called .reset() inside of formGroup variable, in this method you can pass a value as input + if you want to emit changes + onlyself.\n\nThe other way is to use formGroupDirective + with the method called resetForm(), I was checking the code inside of the repo and I saw that this method, apart from doing another stuffs, just use .reset() internally.\n\nThe problem with that is .resetForm() is the only way to reset submitted status of the form, but this is gonna trigger any observable that is listening about form changes.\n\nThe only work around that I saw to solve this is using a filtering inside of my observable to not trigger it when the state of the form is submitted, but I think that could exist a better way to do it.\n\n### Proposed solution\n\nMy proposal have 2 possibles ways:\n1. add the possiblity to set a second optional parameter to resetForm method as the same way as .reset() method inside of form variable.\n2. expose a new api to just reset the submitted state of the form as well as you can reset the value of the form and states too.\n\n### Alternatives considered\n\nIf exist a way to do what Im explaining here, please let me know it because I didn't see any info related to do that inside of angular documentation (angular.dev)","Url":"https://github.com/angular/angular/issues/60274","RelatedDescription":"Open issue \"Expose an API to reset the submitted state of a form\" (#60274)"},{"Id":"2903164400","IsPullRequest":true,"CreatedAt":"2025-03-07T14:33:47","Actor":"Humberd","Number":"60273","RawContent":null,"Title":"refactor(core): move reload method from Resource to WritableResource","State":"open","Body":"Now only mutable resources can be reloaded\r\n","Url":"https://github.com/angular/angular/pull/60273","RelatedDescription":"Open PR \"refactor(core): move reload method from Resource to WritableResource\" (#60273)"},{"Id":"2903120901","IsPullRequest":true,"CreatedAt":"2025-03-07T14:16:18","Actor":"Humberd","Number":"60272","RawContent":null,"Title":"refactor(core): narrow error type for resources API","State":"open","Body":"It used to return `unknown`.\r\nNow it's `Error | unknown`.\r\n\r\nFor non-`Error` types they are encapsulated in new `UnknownError` class.\r\n","Url":"https://github.com/angular/angular/pull/60272","RelatedDescription":"Open PR \"refactor(core): narrow error type for resources API\" (#60272)"},{"Id":"2903001026","IsPullRequest":false,"CreatedAt":"2025-03-07T13:30:51","Actor":"NoelLH","Number":"60270","RawContent":null,"Title":"Using SSR and `withFetch()` on HTTP client leads to brower CORS errors","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nFollowing the Angular CLI's advice, I added `withFetch()` to my `provideHttpClient()` call when I upgraded to Angular 19.\n\nThis seemed stable in many contexts until we noticed some HTTP client data loading failing intermittently. Eventually I found that when caching wasn't masking the problem and a \"cold\" SSR load was involved, CORS in the browser was always failing.\n\nCORS is supported by the APIs involved here but the response headers allowing the origin are set dynamically based on a permitted `Origin` header being sent on the request. It seems like when a resolver such as `CampaignListResolver` has been run on the server with no `Origin`, the result is shared with the browser without consideration of the CORS implications and then the browser is unable to use the data even though the browser can see it, because of the CORS error.\n\nI'm not sure if there is a workaround I could or should be using or if the framework should handle this. I'm also not aware of a previous version of Angular where this works out the box `withFetch()`, so I've marked it as not a regression. However, not using this mode – so the default XmlHttpRequest method is used – allows SSR and CORS to work with the same API.\n\nSorry the repro link is a whole app and not smaller. There are quite a lot of moving parts including the server, so I can't quickly put together anything more focused.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/thebiggive/donate-frontend/blob/18c75853eba24215cc14bf928767d9922bd91bc7/src/app/app.module.ts#L78\n\n### Please provide the exception or error you saw\n\n```true\nBrowsers report something like \"Cross-Origin Request Blocked ... (Reason: CORS header 'Access-Control-Allow-Origin' missing). Status code: 200.\"\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.8\nNode: 20.16.0\nPackage Manager: npm 10.8.1\nOS: darwin arm64\n\nAngular: 19.1.7\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.8\n@angular-devkit/build-angular   19.1.8\n@angular-devkit/core            19.1.8\n@angular-devkit/schematics      19.1.8\n@angular/cdk                    19.1.5\n@angular/cli                    19.1.8\n@angular/material               19.1.5\n@angular/ssr                    19.1.8\n@schematics/angular             19.1.8\nrxjs                            7.8.1\ntypescript                      5.7.3\nwebpack                         5.98.0\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60270","RelatedDescription":"Closed issue \"Using SSR and `withFetch()` on HTTP client leads to brower CORS errors\" (#60270)"},{"Id":"2903019307","IsPullRequest":true,"CreatedAt":"2025-03-07T13:30:23","Actor":"Humberd","Number":"60271","RawContent":null,"Title":"refactor(core): getting resource value throws an error instead of returning undefined","State":"open","Body":"When there is an underlying error state it would not be possible to swallow the error with: \r\n\r\n```typescript\r\ncomputed(() => res.value()?.inner);\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/pull/60271","RelatedDescription":"Open PR \"refactor(core): getting resource value throws an error instead of returning undefined\" (#60271)"},{"Id":"2902925251","IsPullRequest":false,"CreatedAt":"2025-03-07T12:46:14","Actor":"pburgmer","Number":"60269","RawContent":null,"Title":"Relax Required Types on Router Commands","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nAt the moment router requires a mutable array of commands (`any[]`, e.g. on routerLink). But the router does not need writable access to the array.\nOften I only have a readonly array, which I got via an input. I can not pass it to the router and therefore have to create a new mutable array out of it which requires additional code and creates runtime overhead.\n\n### Proposed solution\n\nOnly require a readonly array if you don't need write access. \nTo avoid breaking changes the change can be applied only to inputs and parameters of functions/methods; no outputs or return types.\n\n### Alternatives considered\n\nnone","Url":"https://github.com/angular/angular/issues/60269","RelatedDescription":"Open issue \"Relax Required Types on Router Commands\" (#60269)"},{"Id":"2902563381","IsPullRequest":true,"CreatedAt":"2025-03-07T10:08:13","Actor":"crisbeto","Number":"60267","RawContent":null,"Title":"Type checking support for host bindings","State":"open","Body":"Historically Angular's type checking only extended to templates, however host bindings can contain expressions as well which can have type checking issues of their own ([example](https://github.com/angular/components/pull/30570)). These changes add the ability to type check the `host` object literal, `@HostBinding` and `@HostListener` decorators of `@Directive` and `@Component` classes. The new functionality is hidden behind the `typeCheckHostBindings` compiler flag, but we plan to enable it by default in a future version.\r\n\r\nThis also allows us to enable language service features in host bindings like renaming and hover information. Here's demo showing how it's integrated:\r\n\r\n![host-bindings-demo](https://github.com/user-attachments/assets/0492c2dc-b6bd-4f7a-a98a-cc7e54303ef1)\r\n\r\n\r\n**Note:** the language service integration for this is done, but I'll send it out in a separate PR to make this one easier to review.","Url":"https://github.com/angular/angular/pull/60267","RelatedDescription":"Open PR \"Type checking support for host bindings\" (#60267)"},{"Id":"2902443748","IsPullRequest":false,"CreatedAt":"2025-03-07T09:15:34","Actor":"pseudopilot","Number":"60265","RawContent":null,"Title":"Memory Leak: Elements with Angular/CSS Animations Remain in Memory After Removal (@if, *ngIf, el.remove())","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen an element with Angular or CSS animations is removed from the DOM - either directly or through a parent element being removed (`@if`, `*ngIf`, `el.remove()`), the animated elements remains in memory as a detached node.\n\nAdditionally:\n- All other sibling elements in the DOM tree (up to the removed parent) also remain in memory as detached nodes.\n- A detached CSSStyleDeclaration object is retained, leading to a potential memory leak.\n\n**Steps to Reproduce:**\n1. Create a component and add any CSS styles to it.\n2. Inside the component’s template:\n- Add an HTML element and apply an Angular animation (`@angular/animations`) or a CSS animation to it.\n- Add a sibling HTML element without animations.\n3. Use this component in the App Component template.\n4. Remove the component by:\n- Using `*ngIf` or `@if` on the component itself or its parent wrapper.\n- Calling `.remove()` on a parent wrapper element.\n5. Observe in Chrome DevTools → Memory tab:\n- The animated element remains as a detached node.\n- All sibling elements and the removed parent remain in memory as detached nodes.\n- A detached CSSStyleDeclaration object is also present.\n\n**Expected Behavior:**\n- No detached nodes should remain in the Chrome DevTools → Memory tab.\n- The CSSStyleDeclaration object should also be released if no other elements reference it.\n\n**Actual Behavior:**\n- The animated element remains as a detached node.\n- All sibling elements and the removed parent remain in memory as detached nodes.\n- A detached CSSStyleDeclaration object is also present.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/animation-memory-leaks\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.2.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1902.0\n@angular-devkit/core         19.2.0\n@angular-devkit/schematics   19.2.0\n@schematics/angular          19.2.0\nrxjs                         7.8.1\ntypescript                   5.8.2\nzone.js                      0.15.0\n```\n\n### Anything else?\n\nIn my implementation, there are two examples:\n- The first one demonstrates the behavior without a wrapping element (`@if` is applied directly to the list of child components).\n- The second one applies `@if` to a wrapping `<div class=\"wrapper\">` element that contains the list of child components.\n\nIn the **first example**, you can observe that the nodes without animations (`<app-no-animations>`) - along with all their children and their CSSStyleDeclaration - are properly removed from memory:\n\n<img width=\"1918\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cfff2ce7-5798-40e4-a46d-684ce1a17041\" />\n\nIn the **second example**, however, even `<app-no-animations>`, all its children, and their CSSStyleDeclaration remain in memory as detached nodes. This likely occurs because they share a common parent node (`<div class=\"wrapper\">`) with the animated components, and when this wrapper is removed from the DOM, all its children persist as detached. Notably, `<div class=\"wrapper\">` itself also remains in memory as a detached node after removal.\n\n<img width=\"1920\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e4c3a504-38ea-4db3-8400-9ee0ba890384\" />\n\nThe same behavior is observed when removing the wrapper not with `@if`, but directly using `el.remove()` (via the second button):\n\n<img width=\"1920\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/158025d4-b25b-4d34-b930-b8d7f1049720\" />\n\nAdditionally, I want to highlight that if animations are never activated, elements are removed from memory properly. To demonstrate this, I created a component where the animation only triggers on a hover event. As long as the element is never hovered, it is properly removed from memory. However, if it is hovered even once, it remains detached after removal:\n\n<img width=\"1920\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b34ed3d9-78d5-48aa-8257-c780e4e48c09\" />\n\nYou can also experiment with the provided checkboxes, which allow you to manually remove the animated elements from the child components inside `ngOnDestroy()`. This successfully removes some nodes from memory, but some of them still remain:\n\n<img width=\"1918\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cb6d0353-52b2-4abc-b35d-23c791c9cac0\" />\n\nThe issue is also re-producible on Angular v.18.2. I haven't checked with earlier versions.","Url":"https://github.com/angular/angular/issues/60265","RelatedDescription":"Open issue \"Memory Leak: Elements with Angular/CSS Animations Remain in Memory After Removal (@if, *ngIf, el.remove())\" (#60265)"},{"Id":"2901996447","IsPullRequest":true,"CreatedAt":"2025-03-07T04:45:53","Actor":"mmalerba","Number":"60263","RawContent":null,"Title":"compiler-cli: remove unnecessary paren logic for ternaries","State":"open","Body":"Following up on #60127 which added the concept of a parenthesized\r\nexpression to the output AST, this does the same for the expression AST.## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60263","RelatedDescription":"Open PR \"compiler-cli: remove unnecessary paren logic for ternaries\" (#60263)"},{"Id":"2901780125","IsPullRequest":false,"CreatedAt":"2025-03-07T01:32:35","Actor":"JannikLassahn","Number":"60262","RawContent":null,"Title":"Add support for semantic tokens in the language service","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nlanguage-service\n\n### Description\n\nSemantic tokens are part of the [LSP protocol](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_semanticTokens) to improve existing syntax highlighting with relevant contextual coloring.\n\nSupport for semantic tokens would improve the overall editing experience for Angular templates and close the gap to other frameworks and even commercial IDEs in this regard. \nFor example: Jetbrains IntelliJ is able to correctly highlight Angular components in template markup and differentiate between members and local variables in `@for` loops. \nTypeScript already provides tokens as well, so users would benefit from similiar and familiar syntax highlighting.\n\nPotential related requests/issues:\n* [angular #59343](https://github.com/angular/angular/issues/59343)\n*  [vscode-ng-language-service #2086](https://github.com/angular/vscode-ng-language-service/issues/2086)\n\n### Proposed solution\n\nTo keep complexity manageable (and server performance acceptable), one should start small with the most common types (class, member, variable) and determine further work according to community feedback.\n\nI have created PR #60260, sort of as a \"proof of concept\" and reference implementation for future work on this topic.\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/60262","RelatedDescription":"Open issue \"Add support for semantic tokens in the language service\" (#60262)"},{"Id":"2901730185","IsPullRequest":true,"CreatedAt":"2025-03-07T00:43:40","Actor":"JannikLassahn","Number":"60260","RawContent":null,"Title":"feat(language-service): add semantic tokens for templates","State":"open","Body":"Adds support for `getEncodedSemanticClassifications` to the language service. The service now classifies components in a template as the `class` type.\r\n\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe language service does not provide semantic tokens.\r\n\r\nIssue Number: #60262 \r\n\r\n\r\n## What is the new behavior?\r\nThe Angular language service now implements the `getEncodedSemanticClassifications` call, which in turn is needed on the language server/client side to provide the desired contextual syntax highlighting in the editor. \r\n\r\nFor now, the service only tries to highlight component tags by classifying them as classes (similiar to  TSX highlighting done by TypeScript).  To this extent the token types are the same as in the TypeScript language service to ensure this service keeps working as a strict superset.   \r\n\r\nFor details about semantic tokens see the [LSP protocol](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_semanticTokens).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60260","RelatedDescription":"Open PR \"feat(language-service): add semantic tokens for templates\" (#60260)"},{"Id":"2901648492","IsPullRequest":true,"CreatedAt":"2025-03-06T23:32:06","Actor":"atscott","Number":"60259","RawContent":null,"Title":"fix(core): Directly report errors from `toSignal` with `rejectErrors`","State":"open","Body":"The current approach for `rejectErrors` relies on ZoneJS to catch errors thrown inside the zone to forward them to the application `ErrorHandler`. This change now does it directly.","Url":"https://github.com/angular/angular/pull/60259","RelatedDescription":"Open PR \"fix(core): Directly report errors from `toSignal` with `rejectErrors`\" (#60259)"},{"Id":"2901591896","IsPullRequest":true,"CreatedAt":"2025-03-06T22:47:32","Actor":"JeanMeche","Number":"60257","RawContent":null,"Title":"refactor(platform-browser): Deprecate the HammerJS integration","State":"open","Body":"DEPRECATION: HammerJS support is deprecated and will be removed in a future major version.\r\n","Url":"https://github.com/angular/angular/pull/60257","RelatedDescription":"Open PR \"refactor(platform-browser): Deprecate the HammerJS integration\" (#60257)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2903336567","IsPullRequest":true,"CreatedAt":"2025-03-07T15:43:52","Actor":"devversion","Number":"29779","RawContent":null,"Title":"Further clean-up `rules_nodejs` `npm` workspace and remove `yarn.lock` ","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29779","RelatedDescription":"Open PR \"Further clean-up `rules_nodejs` `npm` workspace and remove `yarn.lock` \" (#29779)"},{"Id":"2902888741","IsPullRequest":true,"CreatedAt":"2025-03-07T14:33:19","Actor":"alan-agius4","Number":"29778","RawContent":null,"Title":"fix(@angular/build): remove duplicate prebundling warning","State":"closed","Body":"This warning is already displayed during the normalization of options. See: https://github.com/angular/angular-cli/blob/b5a86709b7c035c129f5a9d8f1f684169432195e/packages/angular/build/src/builders/dev-server/options.ts#L56\r\n","Url":"https://github.com/angular/angular-cli/pull/29778","RelatedDescription":"Closed or merged PR \"fix(@angular/build): remove duplicate prebundling warning\" (#29778)"},{"Id":"2901157933","IsPullRequest":true,"CreatedAt":"2025-03-07T14:32:52","Actor":"alan-agius4","Number":"29770","RawContent":null,"Title":"refactor(@schematics/angular): remove v19 migrations","State":"closed","Body":"These migrations are no longer executed.\r\n","Url":"https://github.com/angular/angular-cli/pull/29770","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): remove v19 migrations\" (#29770)"},{"Id":"2902278413","IsPullRequest":false,"CreatedAt":"2025-03-07T10:56:11","Actor":"starsbit","Number":"29775","RawContent":null,"Title":"@angular/localize use specified index.html in angular.json for localizations during build","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n\"@angular/common\": \"^19.1.0\",\n\"@angular/compiler\": \"^19.1.0\",\n\"@angular/core\": \"^19.1.0\",\n\"@angular/localize\": \"^19.1.4\"\n\n### Description\n\nAngular provides a way to specify a custom index.html using `angular.json`.  You can specify in a configuration settings inside the `configurations` array the index file. \n\n```\n...\n\"ja\": {\n  \"localize\": [\"ja\"],\n  \"index\": {\n    \"input\": \"src/locale/index/index.ja.html\",\n    \"output\": \"index.html\"\n  },\n  \"fileReplacements\": [\n    {\n      \"replace\": \"src/environments/environment.ts\",\n      \"with\": \"src/environments/environment.ja.ts\"\n    }\n  ]\n},\n...\n```\n\nThis enables you to create translations of your `<title>` and `<meta>` tags to improve SEO. \n\nIf you run `ng build --configuration=ja` the `index.ja.html` is applied for the localization of the app. If you only run `ng build` the configuration is ignored because the default configuration is applied (`index.html` is used).\n\nThis is annoying for applications that serve multiple localizations and want to leverage the SEO of translated meta tags.\n\n### Proposed solution\n\nA compiler setting to allow the usage of custom a `index.html` per localization.\n\n### Alternatives considered\n\nA workaround is to create a script that compiles the with each configuration and merge them in the end in a custom `dist` folder. This increases the compile time by the _number of available localizations_ and increases automated runner costs.\n\nThere is currently no other way to achieve the desired outcome than this workaround.","Url":"https://github.com/angular/angular-cli/issues/29775","RelatedDescription":"Closed issue \"@angular/localize use specified index.html in angular.json for localizations during build\" (#29775)"},{"Id":"2902105669","IsPullRequest":true,"CreatedAt":"2025-03-07T10:23:08","Actor":"angular-robot","Number":"29773","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [eslint-config-prettier](https://redirect.github.com/prettier/eslint-config-prettier) | devDependencies | minor | [`10.0.2` -> `10.1.1`](https://renovatebot.com/diffs/npm/eslint-config-prettier/10.0.2/10.1.1) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/vite/6.2.0/6.2.1) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/vite/6.2.0/6.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>prettier/eslint-config-prettier (eslint-config-prettier)</summary>\n\n### [`v10.1.1`](https://redirect.github.com/prettier/eslint-config-prettier/blob/HEAD/CHANGELOG.md#1011)\n\n[Compare Source](https://redirect.github.com/prettier/eslint-config-prettier/compare/v10.1.0...v10.1.1)\n\n##### Patch Changes\n\n-   [#&#8203;309](https://redirect.github.com/prettier/eslint-config-prettier/pull/309) [`eb56a5e`](https://redirect.github.com/prettier/eslint-config-prettier/commit/eb56a5e09964e49045bccde3c616275eb0a0902d) Thanks [@&#8203;JounQin](https://redirect.github.com/JounQin)! - fix: separate the `/flat` entry for compatibility\n\n    For flat config users, the previous `\"eslint-config-prettier\"` entry still works, but `\"eslint-config-prettier/flat\"` adds a new `name` property for [config-inspector](https://eslint.org/blog/2024/04/eslint-config-inspector/), we just can't add it for the default entry for compatibility.\n\n    See also [#&#8203;308](https://redirect.github.com/prettier/eslint-config-prettier/issues/308)\n\n    ```ts\n    // before\n    import eslintConfigPrettier from \"eslint-config-prettier\";\n\n    // after\n    import eslintConfigPrettier from \"eslint-config-prettier/flat\";\n    ```\n\n### [`v10.1.0`](https://redirect.github.com/prettier/eslint-config-prettier/blob/HEAD/CHANGELOG.md#1010)\n\n[Compare Source](https://redirect.github.com/prettier/eslint-config-prettier/compare/v10.0.3...v10.1.0)\n\n##### Minor Changes\n\n-   [#&#8203;306](https://redirect.github.com/prettier/eslint-config-prettier/pull/306) [`56e2e34`](https://redirect.github.com/prettier/eslint-config-prettier/commit/56e2e3466391d0fdfc200e42130309c687aaab53) Thanks [@&#8203;JounQin](https://redirect.github.com/JounQin)! - feat: migrate to exports field\n\n### [`v10.0.3`](https://redirect.github.com/prettier/eslint-config-prettier/blob/HEAD/CHANGELOG.md#1003)\n\n[Compare Source](https://redirect.github.com/prettier/eslint-config-prettier/compare/v10.0.2...v10.0.3)\n\n##### Patch Changes\n\n-   [#&#8203;294](https://redirect.github.com/prettier/eslint-config-prettier/pull/294) [`8dbbd6d`](https://redirect.github.com/prettier/eslint-config-prettier/commit/8dbbd6d70b8a56cdfa4ea4e185d3699d5729b38e) Thanks [@&#8203;FloEdelmann](https://redirect.github.com/FloEdelmann)! - feat: add name to config\n\n-   [#&#8203;280](https://redirect.github.com/prettier/eslint-config-prettier/pull/280) [`cba5737`](https://redirect.github.com/prettier/eslint-config-prettier/commit/cba57377e4c86d20d17042d6999eabc754fddc03) Thanks [@&#8203;zanminkian](https://redirect.github.com/zanminkian)! - feat: add declaration file\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.2.1`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small621-2025-03-07-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.2.0...v6.2.1)\n\n-   refactor: remove `isBuild` check from preAliasPlugin ([#&#8203;19587](https://redirect.github.com/vitejs/vite/issues/19587)) ([c9e086d](https://redirect.github.com/vitejs/vite/commit/c9e086d35ac35ee1c6d85d48369e8a67a2ba6bfe)), closes [#&#8203;19587](https://redirect.github.com/vitejs/vite/issues/19587)\n-   refactor: restore endsWith usage ([#&#8203;19554](https://redirect.github.com/vitejs/vite/issues/19554)) ([6113a96](https://redirect.github.com/vitejs/vite/commit/6113a9670cc9b7d29fe0bffe033f7823e36ded00)), closes [#&#8203;19554](https://redirect.github.com/vitejs/vite/issues/19554)\n-   refactor: use `applyToEnvironment` in internal plugins ([#&#8203;19588](https://redirect.github.com/vitejs/vite/issues/19588)) ([f678442](https://redirect.github.com/vitejs/vite/commit/f678442d5701a00648a745956f9d884247e4e710)), closes [#&#8203;19588](https://redirect.github.com/vitejs/vite/issues/19588)\n-   fix(css): stabilize css module hashes with lightningcss in dev mode ([#&#8203;19481](https://redirect.github.com/vitejs/vite/issues/19481)) ([92125b4](https://redirect.github.com/vitejs/vite/commit/92125b41e4caa3e862bf5fd9b1941546f25d9bf2)), closes [#&#8203;19481](https://redirect.github.com/vitejs/vite/issues/19481)\n-   fix(deps): update all non-major dependencies ([#&#8203;19555](https://redirect.github.com/vitejs/vite/issues/19555)) ([f612e0f](https://redirect.github.com/vitejs/vite/commit/f612e0fdf6810317b61fcca1ded125755f261d78)), closes [#&#8203;19555](https://redirect.github.com/vitejs/vite/issues/19555)\n-   fix(reporter): fix incorrect bundle size calculation with non-ASCII characters ([#&#8203;19561](https://redirect.github.com/vitejs/vite/issues/19561)) ([437c0ed](https://redirect.github.com/vitejs/vite/commit/437c0ed8baa6739bbe944779b9e7515f9035046a)), closes [#&#8203;19561](https://redirect.github.com/vitejs/vite/issues/19561)\n-   fix(sourcemap): combine sourcemaps with multiple sources without matched source ([#&#8203;18971](https://redirect.github.com/vitejs/vite/issues/18971)) ([e3f6ae1](https://redirect.github.com/vitejs/vite/commit/e3f6ae14f7a93118d7341de7379967f815725c4b)), closes [#&#8203;18971](https://redirect.github.com/vitejs/vite/issues/18971)\n-   fix(ssr): named export should overwrite export all ([#&#8203;19534](https://redirect.github.com/vitejs/vite/issues/19534)) ([2fd2fc1](https://redirect.github.com/vitejs/vite/commit/2fd2fc110738622651d361488767734cc23c34dd)), closes [#&#8203;19534](https://redirect.github.com/vitejs/vite/issues/19534)\n-   feat: add `*?url&no-inline` type and warning for `.json?inline` / `.json?no-inline` ([#&#8203;19566](https://redirect.github.com/vitejs/vite/issues/19566)) ([c0d3667](https://redirect.github.com/vitejs/vite/commit/c0d36677cd305e8fa89153ed6305f0e0df43d289)), closes [#&#8203;19566](https://redirect.github.com/vitejs/vite/issues/19566)\n-   test: add glob import test case ([#&#8203;19516](https://redirect.github.com/vitejs/vite/issues/19516)) ([aa1d807](https://redirect.github.com/vitejs/vite/commit/aa1d8075cc7ce7fbba62fea9e37ccb9b304fc039)), closes [#&#8203;19516](https://redirect.github.com/vitejs/vite/issues/19516)\n-   test: convert config playground to unit tests ([#&#8203;19568](https://redirect.github.com/vitejs/vite/issues/19568)) ([c0e68da](https://redirect.github.com/vitejs/vite/commit/c0e68da4774f3487e9ba0c4d4d2c5e76bdc890ea)), closes [#&#8203;19568](https://redirect.github.com/vitejs/vite/issues/19568)\n-   test: convert resolve-config playground to unit tests ([#&#8203;19567](https://redirect.github.com/vitejs/vite/issues/19567)) ([db5fb48](https://redirect.github.com/vitejs/vite/commit/db5fb48f5d4c1ee411e59c1e9b70d62fdb9d53d2)), closes [#&#8203;19567](https://redirect.github.com/vitejs/vite/issues/19567)\n-   perf: flush compile cache after 10s ([#&#8203;19537](https://redirect.github.com/vitejs/vite/issues/19537)) ([6c8a5a2](https://redirect.github.com/vitejs/vite/commit/6c8a5a27e645a182f5b03a4ed6aa726eab85993f)), closes [#&#8203;19537](https://redirect.github.com/vitejs/vite/issues/19537)\n-   chore(css): move environment destructuring after condition check ([#&#8203;19492](https://redirect.github.com/vitejs/vite/issues/19492)) ([c9eda23](https://redirect.github.com/vitejs/vite/commit/c9eda2348c244d591d23f131c6ddf262b256cbf0)), closes [#&#8203;19492](https://redirect.github.com/vitejs/vite/issues/19492)\n-   chore(html): remove unnecessary value check ([#&#8203;19491](https://redirect.github.com/vitejs/vite/issues/19491)) ([797959f](https://redirect.github.com/vitejs/vite/commit/797959f01da583b85a0be1dc89f762fd01d138db)), closes [#&#8203;19491](https://redirect.github.com/vitejs/vite/issues/19491)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODguNCIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29773","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29773)"},{"Id":"2902300017","IsPullRequest":true,"CreatedAt":"2025-03-07T09:05:38","Actor":"angular-robot","Number":"29776","RawContent":null,"Title":"build: update angular - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `36cd551` -> `c901f7a` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `40b05a0` -> `3422dcb` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `383bfab` -> `b4b9f80` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `464b4d1` -> `6560654` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `613f052` -> `ac93721` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `a7a02f3` -> `ab69a3e` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `b585243` -> `b255db7` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `17f11eb` -> `d0324e5` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `10ca6e3` -> `2ab1ee2` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `a286b54` -> `859375b` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `559f22b` -> `94931a1` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `3c70abc` -> `99e68f7` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `8ff3838` -> `90f6e0c` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e7af1cf` -> `e3ebccf` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `cd275f9` -> `04f1520` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `3894b6f` -> `4bbcd1a` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `f1dd84d` -> `32b41d2` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODguNCIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29776","RelatedDescription":"Closed or merged PR \"build: update angular - autoclosed\" (#29776)"},{"Id":"2902336185","IsPullRequest":true,"CreatedAt":"2025-03-07T08:51:13","Actor":"alan-agius4","Number":"29777","RawContent":null,"Title":"build: update angular","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29777","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29777)"},{"Id":"2901428144","IsPullRequest":true,"CreatedAt":"2025-03-07T07:53:33","Actor":"angular-robot","Number":"29771","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `36cd551` -> `c901f7a` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `40b05a0` -> `3422dcb` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `383bfab` -> `b4b9f80` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `464b4d1` -> `6560654` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `613f052` -> `ac93721` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `a7a02f3` -> `ab69a3e` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `b585243` -> `b255db7` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `17f11eb` -> `d0324e5` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `10ca6e3` -> `2ab1ee2` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `a286b54` -> `859375b` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `559f22b` -> `94931a1` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `3c70abc` -> `99e68f7` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `8ff3838` -> `90f6e0c` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e7af1cf` -> `e3ebccf` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `cd275f9` -> `04f1520` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `3894b6f` -> `4bbcd1a` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `f1dd84d` -> `32b41d2` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODguNCIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29771","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29771)"},{"Id":"2902104266","IsPullRequest":true,"CreatedAt":"2025-03-07T07:53:05","Actor":"angular-robot","Number":"29772","RawContent":null,"Title":"build: update devinfra digest to 60ad70b","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `bf0dd63` -> `60ad70b` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODguNCIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29772","RelatedDescription":"Closed or merged PR \"build: update devinfra digest to 60ad70b\" (#29772)"},{"Id":"2902198521","IsPullRequest":true,"CreatedAt":"2025-03-07T07:16:50","Actor":"angular-robot","Number":"29774","RawContent":null,"Title":"build: update dependency ora to v8","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ora](https://redirect.github.com/sindresorhus/ora) | dependencies | major | [`5.4.1` -> `8.2.0`](https://renovatebot.com/diffs/npm/ora/5.4.1/8.2.0) |\n| [ora](https://redirect.github.com/sindresorhus/ora) | devDependencies | major | [`5.4.1` -> `8.2.0`](https://renovatebot.com/diffs/npm/ora/5.4.1/8.2.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sindresorhus/ora (ora)</summary>\n\n### [`v8.2.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v8.2.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v8.1.1...v8.2.0)\n\n-   Add support for `boolean` value for `color` option ([#&#8203;244](https://redirect.github.com/sindresorhus/ora/issues/244))  [`fe951e5`](https://redirect.github.com/sindresorhus/ora/commit/fe951e5)\n\n***\n\n### [`v8.1.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v8.1.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v8.1.0...v8.1.1)\n\n-   Fix animation speed when update methods are called very often  [`818ca34`](https://redirect.github.com/sindresorhus/ora/commit/818ca34)\n-   Fix handling of symbol being empty string in `stopAndPersist()` ([#&#8203;243](https://redirect.github.com/sindresorhus/ora/issues/243))  [`5117dfb`](https://redirect.github.com/sindresorhus/ora/commit/5117dfb)\n\n### [`v8.1.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v8.1.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v8.0.1...v8.1.0)\n\n-   Update dependencies  [`fb0fced`](https://redirect.github.com/sindresorhus/ora/commit/fb0fced)\n\n### [`v8.0.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v8.0.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v8.0.0...v8.0.1)\n\n-   Fix the process not exiting  [`89a1f31`](https://redirect.github.com/sindresorhus/ora/commit/89a1f31)\n\n### [`v8.0.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v8.0.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v7.0.1...v8.0.0)\n\n##### Breaking\n\n-   Require Node.js 18  [`675590f`](https://redirect.github.com/sindresorhus/ora/commit/675590f)\n\n##### Improvements\n\n-   Update dependencies [`675590f`](https://redirect.github.com/sindresorhus/ora/commit/675590f)\n\n### [`v7.0.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v7.0.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v7.0.0...v7.0.1)\n\n-   Fix missing dependency ([#&#8203;228](https://redirect.github.com/sindresorhus/ora/issues/228))  [`1dc1ece`](https://redirect.github.com/sindresorhus/ora/commit/1dc1ece)\n\n### [`v7.0.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v7.0.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.3.1...v7.0.0)\n\n##### Breaking\n\n-   Require Node.js 16  [`0e96acd`](https://redirect.github.com/sindresorhus/ora/commit/0e96acd)\n\n### [`v6.3.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.3.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.3.0...v6.3.1)\n\n-   Fix Node.js 12 compatibility  [`4b1c2be`](https://redirect.github.com/sindresorhus/ora/commit/4b1c2be)\n\n### [`v6.3.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.3.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.2.0...v6.3.0)\n\n-   Add [`suffixText`](https://redirect.github.com/sindresorhus/ora#suffixtext) option ([#&#8203;223](https://redirect.github.com/sindresorhus/ora/issues/223))  [`2378eaf`](https://redirect.github.com/sindresorhus/ora/commit/2378eaf)\n\n### [`v6.2.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.2.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.1.2...v6.2.0)\n\n-   Add `spinners` export to be able to access all available spinners ([#&#8203;222](https://redirect.github.com/sindresorhus/ora/issues/222))  [`f2ac111`](https://redirect.github.com/sindresorhus/ora/commit/f2ac111)\n\n### [`v6.1.2`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.1.2)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.1.1...v6.1.2)\n\n-   Revert \"Fix preserving stdin's pause state ([#&#8203;210](https://redirect.github.com/sindresorhus/ora/issues/210))\"  [`f4e03ea`](https://redirect.github.com/sindresorhus/ora/commit/f4e03ea)\n    -   Reason: [https://github.com/sindresorhus/ora/issues/211](https://redirect.github.com/sindresorhus/ora/issues/211)\n\n### [`v6.1.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.1.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.1.0...v6.1.1)\n\n-   Fix preserving stdin's pause state ([#&#8203;210](https://redirect.github.com/sindresorhus/ora/issues/210))  [`77ccc1e`](https://redirect.github.com/sindresorhus/ora/commit/77ccc1e)\n\n### [`v6.1.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.1.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.0.1...v6.1.0)\n\n-   Expose the spinner `interval` as a getter  [`447812b`](https://redirect.github.com/sindresorhus/ora/commit/447812b)\n-   Internal refactoring. If you use any undocumented properties, this may break for you.\n\n### [`v6.0.1`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.0.1)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v6.0.0...v6.0.1)\n\n-   Upgrade dependencies  [`26ba606`](https://redirect.github.com/sindresorhus/ora/commit/26ba606)\n\n### [`v6.0.0`](https://redirect.github.com/sindresorhus/ora/releases/tag/v6.0.0)\n\n[Compare Source](https://redirect.github.com/sindresorhus/ora/compare/v5.4.1...v6.0.0)\n\n##### Breaking\n\n-   Require Node.js 12.20  [`ede1a54`](https://redirect.github.com/sindresorhus/ora/commit/ede1a54)\n-   This package is now pure ESM. Please [read this](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\n-   `ora.promise` is now a named import called `oraPromise` ([#&#8203;181](https://redirect.github.com/sindresorhus/ora/issues/181))  [`9c01990`](https://redirect.github.com/sindresorhus/ora/commit/9c01990)\n    -   `import {oraPromise} from 'ora';`\n-   `oraPromise` now returns the given promise instead of `this` ([#&#8203;181](https://redirect.github.com/sindresorhus/ora/issues/181))  [`9c01990`](https://redirect.github.com/sindresorhus/ora/commit/9c01990)\n    -   This lets you await it directly, which is more useful than chaining.\n\n##### Improvements\n\n-   Improve performance of the `.clear()` method ([#&#8203;182](https://redirect.github.com/sindresorhus/ora/issues/182))  [`d51c971`](https://redirect.github.com/sindresorhus/ora/commit/d51c971)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODguNCIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29774","RelatedDescription":"Closed or merged PR \"build: update dependency ora to v8\" (#29774)"},{"Id":"2894244961","IsPullRequest":true,"CreatedAt":"2025-03-06T18:12:05","Actor":"alan-agius4","Number":"29753","RawContent":null,"Title":"fix(@angular/build): exclude all entrypoints of a library from prebundling","State":"closed","Body":"\r\nThe configuration now ensures that when a package is listed for exclusion, all paths within that package including sub-paths like `@foo/bar/baz`  are marked as external and not prebundled by the development server.\r\n\r\nFor example, specifying `@foo/bar` in the exclude list will prevent the development server from bundling any files from the `@foo/bar` package, including its sub-paths such as `@foo/bar/baz`.\r\n\r\nThis aligns with esbuild external option behaviour https://esbuild.github.io/api/#external\r\n\r\nCloses #29170\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29753","RelatedDescription":"Closed or merged PR \"fix(@angular/build): exclude all entrypoints of a library from prebundling\" (#29753)"},{"Id":"2896320497","IsPullRequest":true,"CreatedAt":"2025-03-06T16:20:41","Actor":"angular-robot","Number":"29756","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `c4bba40` -> `36cd551` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `cb6cc91` -> `40b05a0` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `caaec34` -> `383bfab` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | major | [`19.2.1` -> `20.0.0-next.0`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.2.1/20.0.0-next.0) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `975a6d3` -> `464b4d1` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | peerDependencies | major | [`^19.0.0` -> `^20.0.0-next`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.2.1/20.0.0-next.1) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `2cd4556` -> `613f052` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `cc9e103` -> `a7a02f3` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `35c6798` -> `b585243` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | peerDependencies | major | [`^19.0.0` -> `^20.0.0-next`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.2.1/20.0.0-next.1) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `5c06485` -> `17f11eb` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `33767cd` -> `10ca6e3` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `f73ab93` -> `a286b54` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `f586e8b` -> `559f22b` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | major | [`19.2.1` -> `20.0.0-next.0`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.2.1/20.0.0-next.0) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `4f5b570` -> `3c70abc` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `4b26728` -> `dbcf3af` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `8883f6e` -> `8ff3838` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `fa13964` -> `e7af1cf` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `16b052a` -> `cd275f9` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `0a6fd5d` -> `3894b6f` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `82aa74a` -> `f1dd84d` |\n| angular/dev-infra | action | digest | `bf0dd63` -> `60ad70b` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v20.0.0-next.0`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#2000-next0-metal-cat-2025-03-05)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.2.2...20.0.0-next.0)\n\n#### Breaking Changes\n\n##### material\n\n-   `tabindex` values set as `[attr.tabindex]` set on a Material button might not work as expected. Use `tabindex` for static values, or `[tabindex]`/`[tabIndex]` for dynamic ones.\n\n##### multiple\n\n-   -   `DialogConfig.componentFactoryResolver` has been removed.\n    -   The constructor of `DomPortalOutlet` has changed.\n    -   `ComponentPortal.componentFactoryResolver` has been removed.\n    -   The constructor signature of `ComponentPortal` has changed.\n    -   `MatDialogConfig.componentFactoryResolver` has been removed.\n\n##### cdk-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fc46997442](https://redirect.github.com/angular/components/commit/fc46997442b72bc1ba395fcd5f008b0358e5c91f) | feat | **ui-patterns:** listbox ui pattern ([#&#8203;30495](https://redirect.github.com/angular/components/pull/30495)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [6a5943d8b0](https://redirect.github.com/angular/components/commit/6a5943d8b0fe6042c885e608d7d2a071e27dd802) | fix | **button:** combine MatButton and MatAnchor ([#&#8203;30492](https://redirect.github.com/angular/components/pull/30492)) |\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [69eedd75f7](https://redirect.github.com/angular/components/commit/69eedd75f79ceec549ecaf0a8dfc38c36e33f02a) | fix | **drag-drop:** incorrect type DragConstrainPosition ([#&#8203;30510](https://redirect.github.com/angular/components/pull/30510)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cda5c8e686](https://redirect.github.com/angular/components/commit/cda5c8e686b0c4394b382db08c2d0b4b793ac7d6) | fix | remove remaining references to ComponentFactoryResolver ([#&#8203;30569](https://redirect.github.com/angular/components/pull/30569)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v19.2.2`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1922-metal-llama-2025-03-05)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.2.1...19.2.2)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c31c7fe22a](https://redirect.github.com/angular/components/commit/c31c7fe22aca7765d5cc1fe367859681a5a9004c) | fix | **stepper:** emitting interacted event when item has not changed ([#&#8203;30579](https://redirect.github.com/angular/components/pull/30579)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f89ed8115c](https://redirect.github.com/angular/components/commit/f89ed8115c229f41eb532f92b28d85322d27a7aa) | fix | **bottom-sheet:** focus first tabbable element by default ([#&#8203;30549](https://redirect.github.com/angular/components/pull/30549)) |\n| [8754784ec5](https://redirect.github.com/angular/components/commit/8754784ec5120b997d0dd8f1beb58be1844fb7d3) | fix | **schematics:** remove NoopAnimationsModule from generated tests ([#&#8203;30562](https://redirect.github.com/angular/components/pull/30562)) |\n| [bfdbc23b8c](https://redirect.github.com/angular/components/commit/bfdbc23b8cdfe465f68c52e81aa58ca5e6b4c613) | fix | **timepicker:** unable to reopen if closed by scroll strategy ([#&#8203;30561](https://redirect.github.com/angular/components/pull/30561)) |\n\n##### material-angular-io\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cd40ee0f37](https://redirect.github.com/angular/components/commit/cd40ee0f37d3952bc78d173361f484b3bd9c5846) | fix | sidenav links not updating ([#&#8203;30564](https://redirect.github.com/angular/components/pull/30564)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [3c68b6d6b7](https://redirect.github.com/angular/components/commit/3c68b6d6b7078c7da5e4f56311d11bf41f502e5a) | fix | resolve host binding issues ([#&#8203;30570](https://redirect.github.com/angular/components/pull/30570)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/angular (@&#8203;angular/common)</summary>\n\n### [`v20.0.0-next.1`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#2000-next1-2025-03-05)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/20.0.0-next.0...20.0.0-next.1)\n\n#### Breaking Changes\n\n##### common\n\n-   `AsyncPipe` now directly catches unhandled errors in\n    subscriptions and promises and reports them to the application's\n    `ErrorHandler`. For Zone-based applications, these errors would have\n    been caught by ZoneJS and reported to `ErrorHandler` so the result is\n    generally the same. The change to the exact mechanism for reporting can\n    result in differences in test environments that will require test\n    updates.\n\n##### core\n\n-   -   TypeScript versions less than 5.8 are no longer supported.\n-   `PendingTasks.run` no longer returns the result of the\n    async function. If this behavior is desired, it can be re-implemented\n    manually with the `PendingTasks.add`. Be aware, however, that promise rejections\n    will need to be handled or they can cause the node process to shut down\n    when using SSR.\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [36b60a9705](https://redirect.github.com/angular/angular/commit/36b60a97059d583453888786bf2c4b456d8f2e83) | fix | clean up `onUrlChange` listener when root scope is destroyed ([#&#8203;60004](https://redirect.github.com/angular/angular/pull/60004)) |\n| [739cadae62](https://redirect.github.com/angular/angular/commit/739cadae62fd7302ef5fffa7897c8c4f2701a556) | fix | Handle errors in async pipe subscriptions ([#&#8203;60057](https://redirect.github.com/angular/angular/pull/60057)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [51b8ff23ce](https://redirect.github.com/angular/angular/commit/51b8ff23cefb5112937dec9727a5b5d6e913aae6) | feat | support tagged template literals in expressions ([#&#8203;59947](https://redirect.github.com/angular/angular/pull/59947)) |\n| [4fe489f1b4](https://redirect.github.com/angular/angular/commit/4fe489f1b4f8d1c0840af1224ee09d44cbb9c583) | fix | exponentiation should be right-to-left associative ([#&#8203;60101](https://redirect.github.com/angular/angular/pull/60101)) |\n| [b70ad3c4e6](https://redirect.github.com/angular/angular/commit/b70ad3c4e63158a72b8aea173b1268ec8ab08e2b) | fix | proper handling of typeof, void in RecursiveAstVisitor ([#&#8203;60101](https://redirect.github.com/angular/angular/pull/60101)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f9043e24ac](https://redirect.github.com/angular/angular/commit/f9043e24aca276fb72ee0245d33ab8d4ea37d4b0) | fix | ensure template IDs are not reused if a source file changes ([#&#8203;60152](https://redirect.github.com/angular/angular/pull/60152)) |\n| [ffb19e64f1](https://redirect.github.com/angular/angular/commit/ffb19e64f1ced7b5eb55e1c1b96b6f7c54835a1d) | fix | preserve required parens for nullish coalescing ([#&#8203;60060](https://redirect.github.com/angular/angular/pull/60060)) |\n| [7c9b4892e9](https://redirect.github.com/angular/angular/commit/7c9b4892e9f6df164e4e289195bff27f2cc9a0ea) | fix | preserve required parens in exponentiation expressions ([#&#8203;60101](https://redirect.github.com/angular/angular/pull/60101)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fe57332fc5](https://redirect.github.com/angular/angular/commit/fe57332fc5c4e6b44f01b9b4343385e90b3edf77) | feat | add input binding support to dynamically-created components ([#&#8203;60137](https://redirect.github.com/angular/angular/pull/60137)) |\n| [82aa2c1a52](https://redirect.github.com/angular/angular/commit/82aa2c1a527be85e09f0f660ece56b594bff5a76) | feat | add the ability to apply directives to dynamically-created components ([#&#8203;60137](https://redirect.github.com/angular/angular/pull/60137)) |\n| [326d48afb4](https://redirect.github.com/angular/angular/commit/326d48afb4266ef9b028860e2f845de005653d75) | feat | drop support for TypeScript older than 5.8 ([#&#8203;60197](https://redirect.github.com/angular/angular/pull/60197)) |\n| [d260ca3091](https://redirect.github.com/angular/angular/commit/d260ca3091a6de215ba31f2516134d1aa11fe04c) | feat | emit template function for template related profiler hooks ([#&#8203;60174](https://redirect.github.com/angular/angular/pull/60174)) |\n| [4812215a7b](https://redirect.github.com/angular/angular/commit/4812215a7b3bcb54bce3f017d89246aa39af2cc5) | feat | Expose `Injector.destroy` on `Injector` created with `Injector.create` ([#&#8203;60054](https://redirect.github.com/angular/angular/pull/60054)) |\n| [809b5b4596](https://redirect.github.com/angular/angular/commit/809b5b4596cafcdabdb1c5fa92fcab539c6f637f) | feat | introduce new DI profiling event ([#&#8203;60158](https://redirect.github.com/angular/angular/pull/60158)) |\n| [be44cc8f40](https://redirect.github.com/angular/angular/commit/be44cc8f40fb2364dbaf20ba24496e4355f84e78) | feat | support listening to outputs on dynamically-created components ([#&#8203;60137](https://redirect.github.com/angular/angular/pull/60137)) |\n| [7eb59d3887](https://redirect.github.com/angular/angular/commit/7eb59d38872667c73e09a42e4260e8a58f102448) | fix | added [@&#8203;angular/compiler](https://redirect.github.com/angular/compiler) as a peer dependency ([#&#8203;55610](https://redirect.github.com/angular/angular/pull/55610)) |\n| [af02914852](https://redirect.github.com/angular/angular/commit/af02914852cb26106090e07aee155890df1798ff) | fix | cache ComponentRef inputs and outputs ([#&#8203;60156](https://redirect.github.com/angular/angular/pull/60156)) |\n| [7232ce5b17](https://redirect.github.com/angular/angular/commit/7232ce5b17c9cce87bebe41c81f55043f21e639b) | fix | Catch and report rejections in async function of `PendingTasks.run` ([#&#8203;60044](https://redirect.github.com/angular/angular/pull/60044)) |\n| [fd12220a35](https://redirect.github.com/angular/angular/commit/fd12220a35665d2378b74905c998fcff6130eb91) | fix | defer block render failures should report to application error handler ([#&#8203;60149](https://redirect.github.com/angular/angular/pull/60149)) |\n| [3459faadbf](https://redirect.github.com/angular/angular/commit/3459faadbfce9be7b1ca69f4d4db82a65b31de50) | fix | do not allow setInput to be used with inputBinding ([#&#8203;60137](https://redirect.github.com/angular/angular/pull/60137)) |\n| [ea5eb28865](https://redirect.github.com/angular/angular/commit/ea5eb288651a87923edd86b2445d6ed32e52ed85) | fix | input targeting not checking if input exists on host ([#&#8203;60137](https://redirect.github.com/angular/angular/pull/60137)) |\n| [0dbf693a4d](https://redirect.github.com/angular/angular/commit/0dbf693a4d6ea0dad6072ebad20158b9e896e4f6) | fix | prevent invoking replay listeners on disconnected nodes ([#&#8203;60103](https://redirect.github.com/angular/angular/pull/60103)) |\n| [7ab0a8d1e7](https://redirect.github.com/angular/angular/commit/7ab0a8d1e719c9aee862bff0495fcd0138c00a10) | fix | prevents event replay from being called on comment nodes ([#&#8203;60130](https://redirect.github.com/angular/angular/pull/60130)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d5e91e04ff](https://redirect.github.com/angular/angular/commit/d5e91e04ff32997d87bdf7386ed3822090ac6b29) | fix | Forward the tags for quick info from the type definition ([#&#8203;59524](https://redirect.github.com/angular/angular/pull/59524)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v20.0.0-next.0`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#2000-next0-2025-02-26)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.2.1...20.0.0-next.0)\n\n#### Breaking Changes\n\n##### common\n\n-   Using the `Y` formatter (week-numbering year) without also including `w` (week number) is now detected as suspicious date pattern, as `y` is typically intended.\n\n##### compiler\n\n-   `void` in an expression now refers to the operator\n\n    Previously an expression in the template like `{{void}}` referred to a\n    property on the component class. After this change it now refers to the\n    `void` operator, which would make the above example invalid. If you have\n    existing expressions that need to refer to a property named `void`,\n    change the expression to use `this.void` instead: `{{this.void}}`.\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [74cceba587](https://redirect.github.com/angular/angular/commit/74cceba5871e83e77a23536d8b64ff8888862dd3) | feat | throw error for suspicious date patterns ([#&#8203;59798](https://redirect.github.com/angular/angular/pull/59798)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f2d5cf7edd](https://redirect.github.com/angular/angular/commit/f2d5cf7eddb1ca2d946076d7622778fb12273d31) | feat | support exponentiation operator in templates ([#&#8203;59894](https://redirect.github.com/angular/angular/pull/59894)) |\n| [0361c2d81f](https://redirect.github.com/angular/angular/commit/0361c2d81f5d2c56597002f465c00e9b1c4003e4) | feat | support void operator in templates ([#&#8203;59894](https://redirect.github.com/angular/angular/pull/59894)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [962b59b14e](https://redirect.github.com/angular/angular/commit/962b59b14e9dad166973be72d74d1e04d25db5a4) | fix | Ensure ComponentFixture does not duplicate error reporting from FakeAsync ([#&#8203;60104](https://redirect.github.com/angular/angular/pull/60104)) |\n| [491b0a4ead](https://redirect.github.com/angular/angular/commit/491b0a4ead98822c767543e1f1c8046ed9d1be20) | fix | Remove duplicate reporting of errors in `CDR.detectChanges` ([#&#8203;60056](https://redirect.github.com/angular/angular/pull/60056)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [7c12cb1df9](https://redirect.github.com/angular/angular/commit/7c12cb1df980734c64a4d127c2b9a7094e0fe9fb) | feat | Allow resolvers to read resolved data from ancestors ([#&#8203;59860](https://redirect.github.com/angular/angular/pull/59860)) |\n| [db2f2d99c8](https://redirect.github.com/angular/angular/commit/db2f2d99c82aae52d8a0ae46616c6411d070b35e) | fix | Scroller should scroll as soon as change detection completes ([#&#8203;60086](https://redirect.github.com/angular/angular/pull/60086)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xODIuMyIsInVwZGF0ZWRJblZlciI6IjM5LjE4OC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29756","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29756)"},{"Id":"2900844054","IsPullRequest":true,"CreatedAt":"2025-03-06T16:13:50","Actor":"clydin","Number":"29769","RawContent":null,"Title":"fix(@schematics/angular): generate component templates with a `.ng.html` file extension","State":"open","Body":"To align with the updated style guide, Angular v20 will generate component templates with a `.ng.html` file extension instead of the previous `.html` by default. Projects will automatically use this new template extension. Projects can however opt-out of component generation using `.ng.html` by setting the `ngHtml` option to false for the component schematic. This can be done as a default in the `angular.json` or directly on the commandline via `--no-ng-html` when executing `ng generate`.","Url":"https://github.com/angular/angular-cli/pull/29769","RelatedDescription":"Open PR \"fix(@schematics/angular): generate component templates with a `.ng.html` file extension\" (#29769)"},{"Id":"2900729716","IsPullRequest":true,"CreatedAt":"2025-03-06T15:59:36","Actor":"alan-agius4","Number":"29767","RawContent":null,"Title":"ci: renovate update Angular group to follow next tag","State":"closed","Body":"More info https://docs.renovatebot.com/configuration-options/#followtag\r\n","Url":"https://github.com/angular/angular-cli/pull/29767","RelatedDescription":"Closed or merged PR \"ci: renovate update Angular group to follow next tag\" (#29767)"},{"Id":"2900754671","IsPullRequest":false,"CreatedAt":"2025-03-06T15:40:46","Actor":"AbdelrhmanAhmedA3","Number":"29768","RawContent":null,"Title":"X [ERROR] Two output files share the same path but have different contents: media\\sh-hl.svg","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nmy first error \nX [ERROR] Undefined mixin.\n    ╷\n494 │ @include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\"); \n@import 'bootstrap/scss/functions';\n@import 'bootstrap/scss/variables';\n@import 'bootstrap/scss/variables-dark';\n@import 'bootstrap/scss/mixins';\n@import 'bootstrap/scss/maps';\n\n// Import custom abstracts (if any)\n@import '../abstracts';\n\n// Define custom colors BEFORE map-merge\n\n$theme-colors: map-merge($theme-colors, $custom-colors);\n@import 'bootstrap/scss/root';\n@import 'bootstrap/scss/reboot';\n@import 'bootstrap/scss/utilities';\n@import 'bootstrap/scss/grid';\n@import 'bootstrap/scss/containers';\n@import 'bootstrap/scss/helpers';\n@import 'bootstrap/scss/images';\n@import 'bootstrap/scss/utilities/api';\n@import 'bootstrap/scss/type';\n@import 'bootstrap/scss/card';\nAfter an arrangement like this change error to X [ERROR] Two output files share the same path but have different contents: media\\sh-hl.svg\n\n### Minimal Reproduction\n\nmy first error \nX [ERROR] Undefined mixin.\n    ╷\n494 │ @include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\"); \n@import 'bootstrap/scss/functions';\n@import 'bootstrap/scss/variables';\n@import 'bootstrap/scss/variables-dark';\n@import 'bootstrap/scss/mixins';\n@import 'bootstrap/scss/maps';\n\n// Import custom abstracts (if any)\n@import '../abstracts';\n\n// Define custom colors BEFORE map-merge\n\n$theme-colors: map-merge($theme-colors, $custom-colors);\n@import 'bootstrap/scss/root';\n@import 'bootstrap/scss/reboot';\n@import 'bootstrap/scss/utilities';\n@import 'bootstrap/scss/grid';\n@import 'bootstrap/scss/containers';\n@import 'bootstrap/scss/helpers';\n@import 'bootstrap/scss/images';\n@import 'bootstrap/scss/utilities/api';\n@import 'bootstrap/scss/type';\n@import 'bootstrap/scss/card';\nAfter an arrangement like this change error to X [ERROR] Two output files share the same path but have different contents: media\\sh-hl.svg\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nmy first error \nX [ERROR] Undefined mixin.\n    ╷\n494 │ @include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\"); \n@import 'bootstrap/scss/functions';\n@import 'bootstrap/scss/variables';\n@import 'bootstrap/scss/variables-dark';\n@import 'bootstrap/scss/mixins';\n@import 'bootstrap/scss/maps';\n\n// Import custom abstracts (if any)\n@import '../abstracts';\n\n// Define custom colors BEFORE map-merge\n\n$theme-colors: map-merge($theme-colors, $custom-colors);\n@import 'bootstrap/scss/root';\n@import 'bootstrap/scss/reboot';\n@import 'bootstrap/scss/utilities';\n@import 'bootstrap/scss/grid';\n@import 'bootstrap/scss/containers';\n@import 'bootstrap/scss/helpers';\n@import 'bootstrap/scss/images';\n@import 'bootstrap/scss/utilities/api';\n@import 'bootstrap/scss/type';\n@import 'bootstrap/scss/card';\nAfter an arrangement like this change error to X [ERROR] Two output files share the same path but have different contents: media\\sh-hl.svg\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29768","RelatedDescription":"Closed issue \"X [ERROR] Two output files share the same path but have different contents: media\\sh-hl.svg\" (#29768)"},{"Id":"2900580448","IsPullRequest":false,"CreatedAt":"2025-03-06T14:31:43","Actor":"cexbrayat","Number":"29766","RawContent":null,"Title":"Karma esbuild builder stack trace sourcemap reference `dist/test-out`","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the `@angular/build:karma` builder, a test in error will show the following sourcemap:\n\n```\nat dist/test-out/29ed73c2-b781-409d-a89d-bfa4055a0227/src/app/app.component.spec.ts:20:23\n```\n\ninstead of referencing `src/app.component.spec.ts:17:34` which allows to click it and open it directly in the IDE.\n\n### Minimal Reproduction\n\nRun:\n```\nnpx @angular/cli@20.0.0-next.0 new karma-sourcemap --defaults --no-routing\n```\n\nEdit `app.component.spec.ts` to make a test fail and run `ng test`:\n\n```\nChrome 133.0.0.0 (Mac OS 10.15.7) AppComponent should have the 'karma-sourcemap' title FAILED\n        Expected 'karma-sourcemap' to equal 'other'.\n            at <Jasmine>\n            at UserContext.<anonymous> (dist/test-out/29ed73c2-b781-409d-a89d-bfa4055a0227/src/app/app.component.spec.ts:20:23)\n```\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.0.0-next.0\nNode: 20.18.3\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 20.0.0-next.1\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.0-next.0\n@angular-devkit/core         20.0.0-next.0\n@angular-devkit/schematics   20.0.0-next.0\n@angular/build               20.0.0-next.0\n@angular/cli                 20.0.0-next.0\n@schematics/angular          20.0.0-next.0\nrxjs                         7.8.2\ntypescript                   5.8.2\nzone.js                      0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29766","RelatedDescription":"Open issue \"Karma esbuild builder stack trace sourcemap reference `dist/test-out`\" (#29766)"},{"Id":"2899713743","IsPullRequest":true,"CreatedAt":"2025-03-06T09:03:49","Actor":"alan-agius4","Number":"29765","RawContent":null,"Title":"feat(@angular/build): drop support for TypeScript older than 5.8","State":"closed","Body":"Narrow down the versions of TypeScript to support.\r\n\r\nBREAKING CHANGE: TypeScript versions less than 5.8 are no longer supported.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29765","RelatedDescription":"Closed or merged PR \"feat(@angular/build): drop support for TypeScript older than 5.8\" (#29765)"},{"Id":"2899158667","IsPullRequest":false,"CreatedAt":"2025-03-06T02:32:53","Actor":"acohenOT","Number":"29764","RawContent":null,"Title":"Unable to debug library in VS Code since 19.2.0","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1.9\n\n### Description\n\nWith angular-cli 19.2.0, you can no longer debug libraries using Visual Studio Code.\n\n### Minimal Reproduction\n\n```\ngit clone https://github.com/acohenOT/angular191.git\ncd angular191\nnpm install\nng build viewer --configuration development   # this builds the library `viewer`\ncode .    # open project in VS Code\n```\n\nAdd breakpoint in library component constructor\n\n<img width=\"316\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/30e11714-cede-4b67-abd5-61ba35870007\" />\n\nSelect Run > Start Debugging\n\n<img width=\"557\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/17cd7484-2557-4b17-8571-073aeae19c7b\" />\n\nOpen `http://localhost:4200/viewer` which loads the library component\n\n<img width=\"515\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9eb288ff-841e-4b8f-9380-56daa92c2e49\" />\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.2.0\nNode: 22.14.0\nPackage Manager: npm 11.2.0\nOS: win32 x64\n\nAngular: 19.2.1\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.0\n@angular-devkit/build-angular   19.2.0\n@angular-devkit/core            19.2.0\n@angular-devkit/schematics      19.2.0\n@angular/cli                    19.2.0\n@schematics/angular             19.2.0\nng-packagr                      19.2.0\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nIn package.json change cli dependencies to 19.1.9 and run `npm install`, then the steps above work and the breakpoint is hit.\n\n```\n    \"@angular-devkit/build-angular\": \"19.1.9\",\n    \"@angular/cli\": \"19.1.9\",\n```","Url":"https://github.com/angular/angular-cli/issues/29764","RelatedDescription":"Open issue \"Unable to debug library in VS Code since 19.2.0\" (#29764)"},{"Id":"2896765270","IsPullRequest":true,"CreatedAt":"2025-03-05T16:14:18","Actor":"alan-agius4","Number":"29757","RawContent":null,"Title":"feat(@angular/build): integrate Chrome automatic  workspace folders","State":"closed","Body":"This commit integrates automatic Chrome DevTools workspace folder connection into the vite dev-server process, leveraging the experimental feature available in Chrome Canary, as described in the Chrome DevTools documentation https://chromium.googlesource.com/devtools/devtools-frontend/+/main/docs/ecosystem/automatic_workspace_folders.md\r\n","Url":"https://github.com/angular/angular-cli/pull/29757","RelatedDescription":"Closed or merged PR \"feat(@angular/build): integrate Chrome automatic  workspace folders\" (#29757)"},{"Id":"2897717054","IsPullRequest":true,"CreatedAt":"2025-03-05T15:54:33","Actor":"alan-agius4","Number":"29763","RawContent":null,"Title":"Bump version to \"v20.0.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29763","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.0\" with changelog.\" (#29763)"},{"Id":"2897699138","IsPullRequest":true,"CreatedAt":"2025-03-05T15:46:39","Actor":"alan-agius4","Number":"29762","RawContent":null,"Title":"docs: release notes for the v19.2.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29762","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.1 release\" (#29762)"},{"Id":"2897692121","IsPullRequest":true,"CreatedAt":"2025-03-05T15:42:42","Actor":"alan-agius4","Number":"29761","RawContent":null,"Title":"Bump version to \"v19.2.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29761","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.1\" with changelog.\" (#29761)"},{"Id":"2897630467","IsPullRequest":true,"CreatedAt":"2025-03-05T15:37:10","Actor":"alan-agius4","Number":"29760","RawContent":null,"Title":"test: update `ng-add` version specifier test to bypass npm peer dependency issues","State":"closed","Body":"\r\n\r\nNPM's peer dependency resolution has known inconsistencies, which can cause issues when testing `ng-add`.\r\n","Url":"https://github.com/angular/angular-cli/pull/29760","RelatedDescription":"Closed or merged PR \"test: update `ng-add` version specifier test to bypass npm peer dependency issues\" (#29760)"},{"Id":"2897302708","IsPullRequest":true,"CreatedAt":"2025-03-05T15:21:55","Actor":"alan-agius4","Number":"29758","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29758","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29758)"},{"Id":"2897401766","IsPullRequest":false,"CreatedAt":"2025-03-05T13:54:05","Actor":"cawoodm","Number":"29759","RawContent":null,"Title":"proxyConfig is ignored","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`ng serve --proxy-config proxy.conf.json` is having no effect. There is no error message but no proxying is done.\n\nThe file `proxy.conf.json` exists and is in the same directory as the `angular.json`. Setting `serve.options.proxyConfig` in `angular.json` similarly has no effect. Calls to `/api` are not proxied, they are redirected back to `/` as if no proxying was active. There is also no message in the console that ng serve is now proxying.\n\n## proxy.conf.json\n```json\n{\n  \"/api\": {\n    \"target\": \"http://localhost:7071/api\",\n    \"secure\": false\n  }\n}\n```\n\n### Minimal Reproduction\n\nRun `ng serve --port 7073 --proxy-conf` or `ng serve --proxy-conf proxy.conf.json` (the docs are ambiguous).\nCall http://localhost:7073/api - expect it to be proxied to localhost:7071 but it just redirects back to /\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.8\nNode: 22.7.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.1.7\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29759","RelatedDescription":"Open issue \"proxyConfig is ignored\" (#29759)"},{"Id":"2894641112","IsPullRequest":false,"CreatedAt":"2025-03-04T17:21:04","Actor":"mwaibel-go","Number":"29754","RawContent":null,"Title":"Migrations fail when tsconfig is not in the default location","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the `tsconfig.*` files are not in the default location, the migration scripts fail to locate them and abort with an error.\n\n### Minimal Reproduction\n\n```shell\nng new ang17 # create new project, accept the default options\ncd ang17\nmv tsconfig* src # move tsconfig to a different location\nsed -i 's/tsconfig/src\\/tsconfig/g' angular.json # update references to tsconfig\nng update @angular/core@18 @angular/cli@18 # update, enable the use-application-builder migration\n\n# This then outputs Error 1\n\nng update @angular/core@19 @angular/cli@19 # update, enable the use-application-builder migration\n\n# This outputs Error 2\n```\n\n### Exception or Error\n\n```text\n# Error 1\n\nThe installed Angular CLI version is outdated.\nInstalling a temporary Angular CLI versioned 18.2.14 to perform the update.\n✔ Packages successfully installed.\nUsing package manager: npm\nCollecting installed dependencies...\nFound 22 dependencies.\nFetching dependency metadata from registry...\n    Updating package.json with dependency @angular-devkit/build-angular @ \"18.2.14\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/cli @ \"18.2.14\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/compiler-cli @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/animations @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/common @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/compiler @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/core @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/forms @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/platform-browser @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"18.2.13\" (was \"17.3.12\")...\n    Updating package.json with dependency @angular/router @ \"18.2.13\" (was \"17.3.12\")...\nUPDATE package.json (1047 bytes)\n✔ Cleaning node modules directory\n✔ Installing packages\n** Optional migrations of package '@angular/cli' **\n\nThis package has 1 optional migration that can be executed.\nOptional migrations may be skipped and executed after the update process, if preferred.\n\n Select the migrations that you'd like to run [use-application-builder] Migrate application projects to \nthe new build system. (https://angular.dev/tools/cli/build-system-migration)\n\n❯ Migrate application projects to the new build system.\n  Application projects that are using the '@angular-devkit/build-angular' package's 'browser' and/or 'browser-esbuild' builders will be migrated to use the new 'application' builder.\n  You can read more about this, including known issues and limitations, here: https://angular.dev/tools/cli/build-system-migration\n✖ Migration failed: Path \"tsconfig.json\" does not exist.\n  See \"/tmp/ng-4Cuhlf/angular-errors.log\" for further details.\n\n# Error 2\n\nThe installed Angular CLI version is outdated.\nInstalling a temporary Angular CLI versioned 19.2.0 to perform the update.\nUsing package manager: npm\nCollecting installed dependencies...\nFound 22 dependencies.\nFetching dependency metadata from registry...\n    Updating package.json with dependency @angular-devkit/build-angular @ \"19.2.0\" (was \"18.2.14\")...\n    Updating package.json with dependency @angular/cli @ \"19.2.0\" (was \"18.2.14\")...\n    Updating package.json with dependency @angular/compiler-cli @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency typescript @ \"5.8.2\" (was \"5.4.5\")...\n    Updating package.json with dependency @angular/animations @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/common @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/compiler @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/core @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/forms @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/platform-browser @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency @angular/router @ \"19.2.0\" (was \"18.2.13\")...\n    Updating package.json with dependency zone.js @ \"0.15.0\" (was \"0.14.10\")...\nUPDATE package.json (1036 bytes)\n✔ Cleaning node modules directory\n✔ Installing packages\n** Executing migrations of package '@angular/cli' **\n\n❯ Update '@angular/ssr' import paths to use the new '/node' entry point when 'CommonEngine' is detected.\n  Migration completed (No changes made).\n\n❯ Update the workspace configuration by replacing deprecated options in 'angular.json' for compatibility with the latest Angular CLI changes.\n  Migration completed (No changes made).\n\n** Optional migrations of package '@angular/cli' **\n\nThis package has 1 optional migration that can be executed.\nOptional migrations may be skipped and executed after the update process, if preferred.\n\n Select the migrations that you'd like to run [use-application-builder] Migrate application projects to the new build system. \n(https://angular.dev/tools/cli/build-system-migration)\n\n❯ Migrate application projects to the new build system.\n  Application projects that are using the '@angular-devkit/build-angular' package's 'browser' and/or 'browser-esbuild' builders will be migrated to use the new 'application' builder.\n  You can read more about this, including known issues and limitations, here: https://angular.dev/tools/cli/build-system-migration\n✖ Migration failed: Path \"tsconfig.json\" does not exist.\n  See \"/tmp/ng-VNiicY/angular-errors.log\" for further details\n```\n\n### Your Environment\n\n```text\n# Upgrading from 17 to 18\n$ ng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 17.3.10\nNode: 18.20.4\nPackage Manager: npm 10.9.1\nOS: linux x64\n\nAngular: \n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1703.10 (cli-only)\n@angular-devkit/core         17.3.10 (cli-only)\n@angular-devkit/schematics   17.3.10 (cli-only)\n@schematics/angular          17.3.10 (cli-only)\n\n# Upgrading from 18 to 19\n$ ng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 18.2.14\nNode: 18.20.4\nPackage Manager: npm 10.9.1\nOS: linux x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.14\n@angular-devkit/build-angular   18.2.14\n@angular-devkit/core            18.2.14\n@angular-devkit/schematics      18.2.14\n@angular/cli                    18.2.14\n@schematics/angular             18.2.14\nrxjs                            7.8.2\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29754","RelatedDescription":"Closed issue \"Migrations fail when tsconfig is not in the default location\" (#29754)"},{"Id":"2894677194","IsPullRequest":true,"CreatedAt":"2025-03-04T17:21:03","Actor":"alan-agius4","Number":"29755","RawContent":null,"Title":"fix(@schematics/angular): prevent error when tsconfig file is missing in application builder migration","State":"closed","Body":"\r\nIf the root tsconfig.json is missing we should not error.\r\n\r\nCloses #29754\r\n","Url":"https://github.com/angular/angular-cli/pull/29755","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): prevent error when tsconfig file is missing in application builder migration\" (#29755)"},{"Id":"2894092233","IsPullRequest":true,"CreatedAt":"2025-03-04T17:20:52","Actor":"alan-agius4","Number":"29752","RawContent":null,"Title":"fix(@angular/build): exclude component styles from 'any' and 'all' budget calculations","State":"closed","Body":"\r\nPreviously, component styles were included in the 'any' and 'all' budgets, which could lead to incorrect budget violations. This update ensures that component styles are excluded from these budget calculations.\r\n\r\nCloses #29609\r\n","Url":"https://github.com/angular/angular-cli/pull/29752","RelatedDescription":"Closed or merged PR \"fix(@angular/build): exclude component styles from 'any' and 'all' budget calculations\" (#29752)"},{"Id":"2893925736","IsPullRequest":true,"CreatedAt":"2025-03-04T15:56:23","Actor":"devversion","Number":"29750","RawContent":null,"Title":"[19.2.x] build: update dev-infra and rework windows native testing","State":"closed","Body":"As part of go/ng:windows-dev-future, we are changing how our infrastructure supports Windows build & testing. Clearly:\r\n\r\n- we will still support contributors on Windows, and we believe we will be improving and streamlining the experience here\r\n- we will continue testing the Angular CLI for our Windows users. We are aware of the many Windows users using the `ng` CLI.\r\n\r\nWhat is changing? We are no longer actively working towards a Bazel infrastructure that supports native Windows building and testing. There are currently two ways to contribute to Angular on Windows. That is via WSL, or via e.g. native Windows cmd.exe, with Git Bash on top. We acknowledge that the latter worked sometimes, but we also realize it very often breaks as nobody on our team uses, verifies it, and it introduces extra complexity because Bazel on Windows is quite disconnected from Linux/Mac (e.g. no sandboxing). Going forward, to improve our team's effectiveness, and improve our stability guarantees for Windows (and Windows contributors), we are actively discouraging the use of Git Bash for contributing to Angular; but instead ask for WSL to be used. I can speak as one of the few long-term team members that have worked on Windows (without WSL) most of my time, that WSL is great and the contributing experience is much smoother and also easier to \"guide\". It's a positive change because we won't be suggesting \"two ways to contribute on Windows\", where in reality one is very brittle and can break at any time!","Url":"https://github.com/angular/angular-cli/pull/29750","RelatedDescription":"Closed or merged PR \"[19.2.x] build: update dev-infra and rework windows native testing\" (#29750)"},{"Id":"2894078316","IsPullRequest":true,"CreatedAt":"2025-03-04T15:15:35","Actor":"alan-agius4","Number":"29751","RawContent":null,"Title":"perf(@angular/ssr): optimize response times by introducing header flushing","State":"closed","Body":"\r\n\r\nImproves SSR performance by streaming the response before inlining critical CSS. This allows for earlier header flushing, reducing time to first byte (TTFB) and improving perceived load times.\r\n","Url":"https://github.com/angular/angular-cli/pull/29751","RelatedDescription":"Closed or merged PR \"perf(@angular/ssr): optimize response times by introducing header flushing\" (#29751)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2903898607","IsPullRequest":false,"CreatedAt":"2025-03-07T21:39:38","Actor":"danielschmitz","Number":"30605","RawContent":null,"Title":"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the Angular Material Datepicker with the locale set to 'pt-BR', manually entering a date in the DD/MM/YYYY format and then losing focus causes the format to be incorrectly swapped to MM/DD/YYYY.\n\nExpected behavior:\nThe Datepicker should respect the 'pt-BR' locale and maintain the DD/MM/YYYY format after the input loses focus.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/wvap6bl6?file=src%2Fexample%2Fdatepicker-custom-icon-example.html\nSteps to reproduce:\n1. Write a date like \"07/03/2025\"\n2. press tab or lose focus\n3. The date swaps to: \"03/07/2025\"\n\n\n### Expected Behavior\n\nWrite a date like \"07/03/2025\"\nand date don't swaps to \"03/07/2025\"\n\n### Actual Behavior\n\n Date swaps from DD/MM/YYYY to MM/DD/YYYY\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30605","RelatedDescription":"Closed issue \"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale\" (#30605)"},{"Id":"2902742448","IsPullRequest":false,"CreatedAt":"2025-03-07T18:15:36","Actor":"ManelBH","Number":"30600","RawContent":null,"Title":"docs-bug(CdkTree): Most examples are broken","State":"closed","Body":"### Documentation Feedback\n\nThe following examples in the cdk tree page are broken or incomplete and won't compile in Stackblitz:\n\ncdk-tree-nested-level-accessor-example\ncdk-tree-nested-children-accessor-example\ncdk-tree-flat-level-accessor-example\ncdk-tree-flat-children-accessor-example\ncdk-tree-complex-example\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/examples","Url":"https://github.com/angular/components/issues/30600","RelatedDescription":"Closed issue \"docs-bug(CdkTree): Most examples are broken\" (#30600)"},{"Id":"2902836013","IsPullRequest":true,"CreatedAt":"2025-03-07T18:15:35","Actor":"crisbeto","Number":"30601","RawContent":null,"Title":"docs(cdk/tree): examples not working when forked to Stackblitz","State":"closed","Body":"The tree examples were breaking down when forked to Stackblitz, because of a couple of reasons:\r\n1. They had their sample data in a separate file which the build process wasn't picking up.\r\n2. They had compilation errors only with rxjs 7+ which we didn't notice, because our local setup is on rxjs 6.\r\n\r\nI also went through all the examples and moved the sample data further down so it doesn't distract from the actual code.\r\n\r\nFixes #30600.","Url":"https://github.com/angular/components/pull/30601","RelatedDescription":"Closed or merged PR \"docs(cdk/tree): examples not working when forked to Stackblitz\" (#30601)"},{"Id":"2902946202","IsPullRequest":true,"CreatedAt":"2025-03-07T18:14:52","Actor":"crisbeto","Number":"30602","RawContent":null,"Title":"fix(material/schematics): some options missing from schema","State":"closed","Body":"Fixes that the `neutralVariantColor` and `errorColor` were missing from the schema which meant that users can't pass them in.\r\n\r\nFixes #30571.","Url":"https://github.com/angular/components/pull/30602","RelatedDescription":"Closed or merged PR \"fix(material/schematics): some options missing from schema\" (#30602)"},{"Id":"2903494943","IsPullRequest":false,"CreatedAt":"2025-03-07T16:56:54","Actor":"bastiW","Number":"30604","RawContent":null,"Title":"bug(autocomplete): Autocomplete in combination with input validation triggers validation during mousedown","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nLet's combine a Autocomplete and a `Validator.required`. \nDuring the mousedown the validation is triggered and the Form Field is invalid and the form field is marked red. On mouse up  it is then valid again. \n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/mat-autocomplete-validated?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\nSteps to reproduce:\n\n1. Open the Autocomplete\n\n![Image](https://github.com/user-attachments/assets/08d6332e-c9a3-48d6-a61e-261f9efdf319)\n\n2. Mousedown an item -> You see it is validated, as the input blurs\n\n![Image](https://github.com/user-attachments/assets/89b0da76-c346-4976-833c-6c63ffc260ed)\n\n3. It is valid again\n\n![Image](https://github.com/user-attachments/assets/7490662f-11a9-4775-b607-923db097a9e1)\n \n\n\n\n\n### Expected Behavior\n\nValidation should be only triggerd after value change, either: \n- select an option\n- leave the autoselect without selection\n- after changing the value on input\n\n### Actual Behavior\n\nValidation is triggered during mouse down\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.2\n- Browser(s): Chrome\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30604","RelatedDescription":"Open issue \"bug(autocomplete): Autocomplete in combination with input validation triggers validation during mousedown\" (#30604)"},{"Id":"2903408413","IsPullRequest":false,"CreatedAt":"2025-03-07T16:14:02","Actor":"clark-stevenson","Number":"30603","RawContent":null,"Title":"bug(Theme):  The M3 Theme Generator schematic selects an incorrect value for high-contrast onTertiary","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nWhen using `ng generate @angular/material:theme-color` schematic to generate a CSS theme and comparing this to my own color tools, I noticed that for high contrast onTertiary, there seems to be a mismatch. \n\n\nShortened for simplicity in the generated CSS.  Notice these colors match which means they would blend together.\n\n```\n@media (prefers-contrast: more) {\n    --mat-sys-tertiary: light-dark(#56004f, #ffeaf6);\n    --mat-sys-on-tertiary: light-dark(#56004f, #ffeaf6);\n}\n````\n\nI tracked this down to [this section of the schematic](https://github.com/angular/components/blob/1b721a03faca95636d202660167ff35c2399bdfb/src/material/schematics/ng-generate/theme-color/index.ts#L533): \n\n\n```\n  css += createLightDarkVar(\n    leftSpacing,\n    'on-tertiary',\n    isHighContrast ? lightScheme.tertiary : lightScheme.tertiaryPalette.tone(100),\n    isHighContrast ? darkScheme.tertiary : darkScheme.tertiaryPalette.tone(20),\n  );\n```\n\n\nI believe that `lightScheme.onTertiary` and `darkScheme.onTertiary` should be used here?  However I am honestly out of my depth. \n\n\n### Reproduction\n\nSteps to reproduce:\n1. run `ng generate @angular/material:theme-color`\n2. Use primary `#6002EE` with the rest at defaults, choose high-contrast and no to scss.\n3. Consult high contrast section for tertiary\n\n\n### Expected Behavior\n\nThe content and surface should be highly contrasting.\n\n### Actual Behavior\n\nThe content and surface are the same color.\n\n### Environment\n\nAngular CLI: 19.2.1\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.1\n@angular-devkit/build-angular   19.2.1\n@angular-devkit/core            19.2.1\n@angular-devkit/schematics      19.2.1\n@angular/cdk                    19.2.2\n@angular/material               19.2.2\n@schematics/angular             19.2.1\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n","Url":"https://github.com/angular/components/issues/30603","RelatedDescription":"Open issue \"bug(Theme):  The M3 Theme Generator schematic selects an incorrect value for high-contrast onTertiary\" (#30603)"},{"Id":"2894147660","IsPullRequest":false,"CreatedAt":"2025-03-07T12:44:14","Actor":"mxschmitt","Number":"30580","RawContent":null,"Title":"bug(drag-drop): does not work with single `mousemove` event","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular CDK drag-drop component does not work with Playwright's [dragTo method](https://playwright.dev/docs/api/class-locator#locator-drag-to). This is because it expects [two `mousemove` events internally](https://github.com/angular/components/blob/7abd0ebbe48755ff5403a78820c7f6211ab4f56a/src/cdk/drag-drop/drag-ref.ts#L677) in order to correctly identity the target element. For the first time we end up in the handler, it should go into [this condition](https://github.com/angular/components/blob/7abd0ebbe48755ff5403a78820c7f6211ab4f56a/src/cdk/drag-drop/drag-ref.ts#L680) and identify the target element. The second time it should (does not) go into [this condition](https://github.com/angular/components/blob/7abd0ebbe48755ff5403a78820c7f6211ab4f56a/src/cdk/drag-drop/drag-ref.ts#L728).\n\nWhile technically in common use-cases it doesn't happen much that there is only a single `mousemove` event under special conditions, e.g. using a Pen/Stylus its probably possible so I recommend removing this early-return which would make it work for Playwright:\n\nhttps://github.com/angular/components/blob/7abd0ebbe48755ff5403a78820c7f6211ab4f56a/src/cdk/drag-drop/drag-ref.ts#L712\n\nPlaywright bug: https://github.com/microsoft/playwright/issues/34688\n\n### Reproduction\n\nRun the following Playwright test:\n\n```ts\nimport { expect, test } from '@playwright/test';\n\ntest('should drag-drop', async ({ page }) => {\n  await page.goto('https://material.angular.io/cdk/drag-drop/examples');\n  await page.locator('button', { hasText: /got it/ }).click();\n  await expect (page.locator('.popup')).toBeHidden();\n  const example = page.locator('example-viewer', { hasText: 'Drag&Drop connected sorting group'})\n  await example.scrollIntoViewIfNeeded();\n  const leftColumn = example.locator('.example-container').nth(0);\n  const rightColumn = example.locator('.example-container').nth(1);\n  await leftColumn.getByText('Get to work').dragTo(rightColumn.getByText('Take a shower'));\n  await expect(rightColumn.getByText('Get to work')).toBeVisible();\n});\n```\n\n### Expected Behavior\n\nWorks.\n\n### Actual Behavior\n\nDoes not work.\n\n### Environment\n\n- Angular: 19.2\n- CDK/Material: ef62d5c8e37bb7cc0b7ca9f8c5662593516f295f\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30580","RelatedDescription":"Closed issue \"bug(drag-drop): does not work with single `mousemove` event\" (#30580)"},{"Id":"2900485393","IsPullRequest":false,"CreatedAt":"2025-03-07T11:47:48","Actor":"angelaki","Number":"30596","RawContent":null,"Title":"bug(mat-select): Panel `null` on `openedChange`","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1\n\n### Description\n\nWith the old version this code used to work / the panel never was `null`:\n\n```\n@ViewChild(MatSelect) matSelect: MatSelect;\n\nngAfterViewInit(): void {\n    this.matSelect.openedChange.subscribe(opened => {\n        if (opened) {\n            console.log(this.matSelect.panel);\n            setTimeout(() => console.log(this.matSelect.panel), 0);\n        }\n    });\n}\n```\n\nSince 19.2 the panel is `null` until the timeout occurs. I've noticed this behavior using *ng-mat-select-infinite-scroll* (https://github.com/HaidarZ/ng-mat-select-infinite-scroll/issues/57).\n\n### Reproduction\n\nCode provided above.\n\n### Expected Behavior\n\n`panel` should never be empty if `openedChange` is called.\n\n### Actual Behavior\n\n`panel` is `null`.\n\n### Environment\n\nAngular CLI: 19.2.1\nNode: 22.11.0\nPackage Manager: pnpm 10.5.2\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1902.1 (cli-only)\n@angular-devkit/build-angular     19.2.1\n@angular-devkit/core              19.2.1 (cli-only)\n@angular-devkit/schematics        19.2.1 (cli-only)\n@angular/cdk                      19.2.2\n@angular/material                 19.2.2\n@angular/material-luxon-adapter   19.2.2\n@schematics/angular               19.2.1 (cli-only)\nrxjs                              7.8.2\ntypescript                        5.8.2\nzone.js                           0.15.0","Url":"https://github.com/angular/components/issues/30596","RelatedDescription":"Closed issue \"bug(mat-select): Panel `null` on `openedChange`\" (#30596)"},{"Id":"2902395904","IsPullRequest":false,"CreatedAt":"2025-03-07T08:53:06","Actor":"phrei","Number":"30599","RawContent":null,"Title":"bug(google-maps): Warning in Console about adding Event-Listener for click instead of gmp-click","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm getting the following warning in console when I use `@angular/google-maps@19.2.2`:\n\n`<gmp-advanced-marker>: Please use addEventListener('gmp-click', ...) instead of addEventListener('click', ...).`\n\nWould this mean the following code should be changed to `gmp-click` as suggested in the warning?\n\nhttps://github.com/angular/components/blob/1b721a03faca95636d202660167ff35c2399bdfb/src/google-maps/map-advanced-marker/map-advanced-marker.ts#L136\n\n### Reproduction\n\nCreate a project that uses the `(mapClick)`-Output on a `<map-advanced-marker>`\n\n### Expected Behavior\n\nNo warning in console.\n\n### Actual Behavior\n\nWarning in console.\n\n### Environment\n\n- Angular: 19.2.1\n- CDK/Material: 19.2.2\n- Google-Maps: 19.2.2\n- Browser(s): Chrome\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30599","RelatedDescription":"Open issue \"bug(google-maps): Warning in Console about adding Event-Listener for click instead of gmp-click\" (#30599)"},{"Id":"2901221626","IsPullRequest":true,"CreatedAt":"2025-03-06T23:11:31","Actor":"devversion","Number":"30598","RawContent":null,"Title":"build: update `@angular/bazel` for relative imports in `ng_package`","State":"closed","Body":"See: https://github.com/angular/angular/commit/1f1039475c573d7b87b0f9a2e01619736b17bbf5","Url":"https://github.com/angular/components/pull/30598","RelatedDescription":"Closed or merged PR \"build: update `@angular/bazel` for relative imports in `ng_package`\" (#30598)"},{"Id":"2899815287","IsPullRequest":true,"CreatedAt":"2025-03-06T17:52:05","Actor":"crisbeto","Number":"30594","RawContent":null,"Title":"Breaking changes for v20","State":"closed","Body":"Includes some breaking changes for v20.\r\n\r\nBREAKING CHANGE:\r\n* `SelectionModel.clear` now returns a boolean.\r\n* `SelectionModel.deselect` now returns a boolean.\r\n* `SelectionModel.select` now returns a boolean.\r\n* `SelectionModel.setSelection` now returns a boolean.\r\n* `SelectionModel.toggle` now returns a boolean.\r\n* `DIALOG_SCROLL_STRATEGY_PROVIDER` has been removed.\r\n* `DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY` has been removed.\r\n* `MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR` has been removed.\r\n* `MAT_SLIDE_TOGGLE_VALUE_ACCESSOR` has been removed.\r\n* `MatSlideToggleRequiredValidator` has been removed.\r\n* `_MatSlideToggleRequiredValidatorModule` has been removed.\r\n* `MAT_CHECKBOX_REQUIRED_VALIDATOR` has been removed.\r\n* `MAT_CHECKBOX_VALUE_ACCESSOR` has been removed.\r\n* `MatCheckboxRequiredValidator` has been removed.\r\n* `_MatCheckboxRequiredValidatorModule` has been removed.\r\n* `MAT_DIALOG_SCROLL_STRATEGY_PROVIDER` has been removed.\r\n* `MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY` has been removed.\r\n* `matSelectAnimations.transformPanelWrap` has been removed.","Url":"https://github.com/angular/components/pull/30594","RelatedDescription":"Closed or merged PR \"Breaking changes for v20\" (#30594)"},{"Id":"2894848940","IsPullRequest":true,"CreatedAt":"2025-03-06T17:38:13","Actor":"crisbeto","Number":"30581","RawContent":null,"Title":"build(material-angular-io): fix docs site deployment","State":"closed","Body":"Fixes that the docs site deployment which broke after #30570.","Url":"https://github.com/angular/components/pull/30581","RelatedDescription":"Closed or merged PR \"build(material-angular-io): fix docs site deployment\" (#30581)"},{"Id":"2900770053","IsPullRequest":true,"CreatedAt":"2025-03-06T17:27:06","Actor":"wagnermaciel","Number":"30597","RawContent":null,"Title":"refactor(cdk-experimental/ui-patterns): loosen the API to accept different types of signals","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30597","RelatedDescription":"Closed or merged PR \"refactor(cdk-experimental/ui-patterns): loosen the API to accept different types of signals\" (#30597)"},{"Id":"2899898354","IsPullRequest":true,"CreatedAt":"2025-03-06T17:24:45","Actor":"crisbeto","Number":"30595","RawContent":null,"Title":"build: update to Angular v20 and Node v20","State":"closed","Body":"Updates the repo to Angular 20 and the CI to Node 20 since the CLI dropped support for Node 18 which we were using.\r\n","Url":"https://github.com/angular/components/pull/30595","RelatedDescription":"Closed or merged PR \"build: update to Angular v20 and Node v20\" (#30595)"},{"Id":"2899697374","IsPullRequest":true,"CreatedAt":"2025-03-06T17:23:48","Actor":"crisbeto","Number":"30593","RawContent":null,"Title":"fix(material/timepicker): wrong default scroll strategy","State":"closed","Body":"#30561 accidentally switched the default scroll strategy for the timepicker to be `close` instead of `reposition`. It was unintentional so these changes switch it back to `reposition`.","Url":"https://github.com/angular/components/pull/30593","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): wrong default scroll strategy\" (#30593)"},{"Id":"2897738532","IsPullRequest":false,"CreatedAt":"2025-03-06T09:53:24","Actor":"jeremyvol","Number":"30587","RawContent":null,"Title":"bug(sidenav): unable to found svgIcon","State":"closed","Body":"### Description\n\nI'm using a sidenav in which I'm displaying icons. Specifically, this project uses svg icons.\n\n```\n<mat-sidenav-container (backdropClick)=\"close()\">\n  <mat-sidenav #sidenav mode=\"over\" position=\"end\" (keydown.escape)=\"close()\" disableClose>\n    <app-sidenav-component />\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n...\n  <mat-icon svgIcon=\"notification\" (click)=\"sidenav.toggle()\" />\n...\n  </mat-sidenav-content>\n```\n\nIn the **sidenav-component**, I may also display several svg icons.\n```<mat-icon svgIcon=\"notification\" />```\n\n\nWhen I do so, the icon does not display and console tells me that the icon couldn't be found.\n\n**ERROR Error: Error retrieving icon :notification! Unable to find icon with the name \":notification\"**\neven though the mat-icon markup in indeed written as so :\n```<mat-icon svgIcon=\"notification\" />```\n\n\n\n### Reproduction\n\nThis behaviour has been consistent with all svgIcon that i've been using so far.\n\n\n### Expected Behavior\n\nIcon should display properly ; its name shouldn't be prepend with a : character as it's appearing in the console\n\n### Actual Behavior\n\nFor some reason, the svgIcon name is prepend with a : character. \n\nits name being - for instance - ```home``` will be transformed into ```:home```\n\n### Environment\n\n- Angular: 18.2.13\n- CDK/Material: 18.2.14\n- Browser(s): Chrome, Edge\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30587","RelatedDescription":"Closed issue \"bug(sidenav): unable to found svgIcon\" (#30587)"},{"Id":"2897083479","IsPullRequest":true,"CreatedAt":"2025-03-06T07:29:35","Actor":"crisbeto","Number":"30584","RawContent":null,"Title":"fix(cdk/portal): remove deprecated symbols","State":"closed","Body":"Removes some symbols that have been deprecated for a while.\r\n\r\nBREAKING CHANGE:\r\n* `DomPortalHost` has been removed. Use `DomPortalOutlet` instead.\r\n* `PortalInjector` has been removed. Use `Injector.create` instead.\r\n* `PortalHost` has been removed. Use `PortalOutlet` instead.\r\n* `BasePortalHost` has been removed. Use `BasePortalOutlet` instead.","Url":"https://github.com/angular/components/pull/30584","RelatedDescription":"Closed or merged PR \"fix(cdk/portal): remove deprecated symbols\" (#30584)"},{"Id":"2898669634","IsPullRequest":true,"CreatedAt":"2025-03-05T23:05:55","Actor":"andrewseguin","Number":"30592","RawContent":null,"Title":"Bump version to \"v20.0.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30592","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.0\" with changelog.\" (#30592)"},{"Id":"2898616785","IsPullRequest":true,"CreatedAt":"2025-03-05T22:16:38","Actor":"crisbeto","Number":"30591","RawContent":null,"Title":"build: set up schematics for v20","State":"closed","Body":"Sets up the schematics for v20.","Url":"https://github.com/angular/components/pull/30591","RelatedDescription":"Closed or merged PR \"build: set up schematics for v20\" (#30591)"},{"Id":"2898441050","IsPullRequest":true,"CreatedAt":"2025-03-05T20:44:28","Actor":"andrewseguin","Number":"30590","RawContent":null,"Title":"docs: release notes for the v19.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30590","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.2 release\" (#30590)"},{"Id":"2898436054","IsPullRequest":true,"CreatedAt":"2025-03-05T20:40:39","Actor":"andrewseguin","Number":"30589","RawContent":null,"Title":"Bump version to \"v19.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30589","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.2\" with changelog.\" (#30589)"},{"Id":"2898360712","IsPullRequest":true,"CreatedAt":"2025-03-05T20:07:09","Actor":"andrewseguin","Number":"30588","RawContent":null,"Title":"refactor: use relative imports within npm packages","State":"open","Body":"Switch to using relative imports within directories under the broad npm packages like `@angular/material` and `@angular/cdk`. ","Url":"https://github.com/angular/components/pull/30588","RelatedDescription":"Open PR \"refactor: use relative imports within npm packages\" (#30588)"},{"Id":"2897688412","IsPullRequest":false,"CreatedAt":"2025-03-05T17:39:35","Actor":"stephanruttloff","Number":"30586","RawContent":null,"Title":"bug(mat-timepicker): Timepicker not affected by scroll if parent has overflow auto","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe timepicker does not scroll as expected if the parent element has `overflow: auto` but stays in place. Scroll strategies are not working either.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/timepicker-scroll-issue-demontration\nSteps to reproduce:\n1. open the timepicker\n2. scroll the parent element\n\n### Expected Behavior\n\nThe timepicker should either close itself, scroll with the containing element or block the scroll (like the datepicker).\n\n### Actual Behavior\n\nThe timepicker floats over the containing element and stays in place while the containing element scrolls beneath it.\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.1\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30586","RelatedDescription":"Closed issue \"bug(mat-timepicker): Timepicker not affected by scroll if parent has overflow auto\" (#30586)"},{"Id":"2897295811","IsPullRequest":false,"CreatedAt":"2025-03-05T13:11:44","Actor":"lasselindqvist","Number":"30585","RawContent":null,"Title":"bug(COMPONENT): Angular 19: cdk-visually-hidden does not work automatically anymore","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nhttps://material.angular.io/cdk/a11y/overview#hiding-elements-in-an-accessible-way\n\ndescribes: If you're using Angular Material, this class is included automatically by Angular Material's theming system. Otherwise, you can include this mixin in a global stylesheet.\n\nIn an Angular project we have\n\n```\n  <h2 id=\"id\" class=\"cdk-visually-hidden\">\n    text\n  </h2>\n```\n\nand this used to be hidden in Angular 18. After automatic upgrade it became visible.\n\nAdding\n\n```\n@use '@angular/cdk';\n\n@include cdk.a11y-visually-hidden();\n```\n\nmakes it work again, but the guide says it should work automatically as we use Angular Material.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-fmwfcfx3?file=src%2Fmain.ts\nSteps to reproduce:\n1. Just open the main page\n2. The text is visible and it should not be. With Angular 18 it was hidden\n\n\n### Expected Behavior\n\nThe text should be hidden\n\n### Actual Behavior\n\nThe text is visible\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.0\n- Browser(s): Firefox / Edge / Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30585","RelatedDescription":"Open issue \"bug(COMPONENT): Angular 19: cdk-visually-hidden does not work automatically anymore\" (#30585)"},{"Id":"2896795912","IsPullRequest":true,"CreatedAt":"2025-03-05T11:00:06","Actor":"k-manikandan","Number":"30583","RawContent":null,"Title":"Update table.ts","State":"closed","Body":"I'm using Angular version 18.2 with material version 15.2.x. In this combination, I'm trying to render table using mat-table.\r\n\r\n\"tbody\" or \"thead\" is not created in the DOM and throwing error in the edited line. Hence I'm checking whether the \"tbody\" is available or not before adding a class to it.","Url":"https://github.com/angular/components/pull/30583","RelatedDescription":"Closed or merged PR \"Update table.ts\" (#30583)"},{"Id":"2896099105","IsPullRequest":true,"CreatedAt":"2025-03-05T07:20:59","Actor":"Akma786","Number":"30582","RawContent":null,"Title":"docs: add missing closing bracket in system token example","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30582","RelatedDescription":"Closed or merged PR \"docs: add missing closing bracket in system token example\" (#30582)"},{"Id":"2893407527","IsPullRequest":true,"CreatedAt":"2025-03-04T13:44:11","Actor":"crisbeto","Number":"30579","RawContent":null,"Title":"fix(cdk/stepper): emitting interacted event when item has not changed","State":"closed","Body":"Fixes that the stepper was marking an item as interacted and emitting an event whenever the `selectedIndex` is assigned, even if it's the same.\r\n\r\nFixes #30540.","Url":"https://github.com/angular/components/pull/30579","RelatedDescription":"Closed or merged PR \"fix(cdk/stepper): emitting interacted event when item has not changed\" (#30579)"},{"Id":"2890686737","IsPullRequest":false,"CreatedAt":"2025-03-04T08:10:46","Actor":"rbalet","Number":"30576","RawContent":null,"Title":"bug(DragDrop): dragHandle not working in an table context","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nusing `cdkDragHandle` inside a `mat-table` context does not work\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-wgm2bvcc?file=src%2Fmain.ts\nSteps to reproduce:\n1. `cdkDragHandle` is on the mat-icon, but works on the entire line\n\n\n\n### Expected Behavior\n\nOnly the `cdkDragHandle` should be draggable\n\n### Actual Behavior\n\nThe entire row is draggable\n\n### Environment\n\n- Angular: 19.1.7\n- CDK/Material: 19.1.5\n- Browser(s): Chrominium 133.0.6943.127\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30576","RelatedDescription":"Closed issue \"bug(DragDrop): dragHandle not working in an table context\" (#30576)"},{"Id":"2893100737","IsPullRequest":false,"CreatedAt":"2025-03-04T06:25:24","Actor":"doublehelix","Number":"30578","RawContent":null,"Title":"feat(mat-form-field / mat-label): we need the option to NOT truncate, a long/multi-line mat-label within a mat-form-field","State":"open","Body":"### Feature Description\n\nWe have a situation where we need a very short input (4 digits) but it has a very long label.\nMUCH wider than the required input, and sometimes, much wider than the parent container/page.\n\nUnfortunately, specifying a size on the mat-form-field not only resizes the input, it also resizes and truncates the label to the point of uselessness.\n\nExamples:\n\nIn the first field below, we've set the `mat-form-field` style to `width: 16.666667%`\n\nSmall input with truncated label:\n![Image](https://github.com/user-attachments/assets/f4f0700a-be3a-4983-90d6-7668ecc2fce7)\n\nUpdated styles with label width 600% to match the parent container (6 x 16.666667%)\nThis _does_ make the label the full width, however, it's still not big enough to display the full text:\n```css\n.mat-mdc-form-field .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-form-field-infix .mat-mdc-floating-label {\n    width: 600% !important;\n}\n```\n![Image](https://github.com/user-attachments/assets/8c340ece-dbc6-48b8-91a0-d8b865bbae04)\n\nSo, we added wrapping, to ensure the full label (and the trailing tooltip icon component within the label) is displayed:\n```css\n.mat-mdc-form-field .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-form-field-infix .mat-mdc-floating-label {\n    width: 600% !important;\n    text-wrap: auto;\n}\n```\nUnfortunately, this then overlaps the input, as the position of the label is hard-coded in the material styles...\n\n![Image](https://github.com/user-attachments/assets/4f86cbd5-f059-443d-849f-6c3f3132da89)\n\nGiven the DOM of the component after rendering, I can't see any simple way to untangle this problem.\n\nObviously, on mobile devices this problem is exacerbated substantially:\n\n![Image](https://github.com/user-attachments/assets/71e24f13-2293-4010-9910-9fb56974cc80)\n\nAny suggestions would be great.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30578","RelatedDescription":"Open issue \"feat(mat-form-field / mat-label): we need the option to NOT truncate, a long/multi-line mat-label within a mat-form-field\" (#30578)"},{"Id":"2891998943","IsPullRequest":true,"CreatedAt":"2025-03-03T18:34:10","Actor":"essjay05","Number":"30577","RawContent":null,"Title":"fix(material/stepper): updates vertical-stepper aria roles","State":"open","Body":"Updates Angular Component's vertical stepper to use more generic aria roles since having the default tablist/tab/tabpanel applied to the vertical stepper violates WCAG rules of having tabpanel as a nested child within tablist. The new roles of group and region satisfy aria requirements while maintaining the current html structure of the vertical stepper.\r\n\r\nFixes b/361783174","Url":"https://github.com/angular/components/pull/30577","RelatedDescription":"Open PR \"fix(material/stepper): updates vertical-stepper aria roles\" (#30577)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-08T03:30:02.6291001Z","RunDurationInMilliseconds":1679}