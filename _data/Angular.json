{"Data":{"Angular-Issues":{"Issues":[{"Id":"2800000630","IsPullRequest":true,"CreatedAt":"2025-01-21T21:33:12","Actor":"pkozlowski-opensource","Number":"59633","RawContent":null,"Title":"Runtime refactor component ref directives","State":"closed","Body":"Note: only second commit to be reviewed (the first one is part of the #59601)","Url":"https://github.com/angular/angular/pull/59633","RelatedDescription":"Closed or merged PR \"Runtime refactor component ref directives\" (#59633)"},{"Id":"2802850355","IsPullRequest":true,"CreatedAt":"2025-01-21T21:29:51","Actor":"alxhub","Number":"59655","RawContent":null,"Title":"feat(core): support default value in `resource()`","State":"open","Body":"feat(core): support default value in `resource()`\r\n\r\nBefore `resource()` resolves, its value is in an unknown state. By default it returns `undefined` in these scenarios, so the type of `.value()` includes `undefined`.\r\n    \r\nThis commit adds a `defaultValue` option to `resource()` and `rxResource()` which overrides this default. When provided, an unresolved resource will return this value instead of `undefined`, which simplifies the typing of `.value()`.","Url":"https://github.com/angular/angular/pull/59655","RelatedDescription":"Open PR \"feat(core): support default value in `resource()`\" (#59655)"},{"Id":"2802761093","IsPullRequest":true,"CreatedAt":"2025-01-21T21:20:27","Actor":"AndrewKushnir","Number":"59653","RawContent":null,"Title":"test(zone.js): reduce flakiness of a timer-related test","State":"closed","Body":"This commit updates a flaky test to increase the amount of work (more `for` loop iterations) to minimize the chance of getting the same timestamp after that work.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59653","RelatedDescription":"Closed or merged PR \"test(zone.js): reduce flakiness of a timer-related test\" (#59653)"},{"Id":"2802788791","IsPullRequest":true,"CreatedAt":"2025-01-21T20:52:57","Actor":"aaditree","Number":"59654","RawContent":null,"Title":"docs: Add link to Language Service page from the Installation page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n[Installation Page](https://angular.dev/installation) did not have a direct link to the Language Service which is very useful for new Angular Developers when setting up their new project.\r\n\r\nIssue Number: [59608](https://github.com/angular/angular/issues/59608)\r\n\r\n\r\n## What is the new behavior?\r\n\r\nAngular Language Service is now in the Prerequisites section for all Angular Developers to access, directly, without having to scroll all the way to the Developer Tools Section.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nChange :\r\n\r\n![image](https://github.com/user-attachments/assets/2986108e-f5a8-4b43-a07c-bbffc414478f)\r\n\r\n","Url":"https://github.com/angular/angular/pull/59654","RelatedDescription":"Open PR \"docs: Add link to Language Service page from the Installation page\" (#59654)"},{"Id":"2800064414","IsPullRequest":false,"CreatedAt":"2025-01-21T19:10:45","Actor":"mattlewis92","Number":"59634","RawContent":null,"Title":"HMR broken with dynamic component providers","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen trying out the new component HMR we ran into a couple issues when using dynamic component providers\n\nFor example:\n\n```\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [isDevelopmentMode ? DirectiveTimingService : []],\n  standalone: false,\n})\nexport class AppComponent {}\n```\n\nThrows `app.component.ts:108 ReferenceError: DirectiveTimingService is not defined` at runtime:\n\n![Image](https://github.com/user-attachments/assets/524f07e5-2c71-42eb-a588-88ff0c3cf54b)\n\nNot sure if this is the same or a different issue, but declaring a provider with `useFactory` and `deps` also throws an error\n\n\n```\n@Component({\n  selector: 'cu-prompt-template-empty-description',\n  templateUrl: './prompt-template-empty-description.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: DropdownListKeyboardController,\n      useFactory: (\n        parentInjector: Injector,\n        dropdownListKeyboardController?: DropdownListKeyboardController,\n      ) => {\n        if (!dropdownListKeyboardController) {\n          const injector = Injector.create({\n            providers: [{ provide: DropdownListKeyboardController }],\n            parent: parentInjector,\n          });\n          dropdownListKeyboardController = injector.get(\n            DropdownListKeyboardController,\n          );\n        }\n\n        return dropdownListKeyboardController;\n      },\n      deps: [\n        Injector,\n        [new Optional(), new SkipSelf(), DropdownListKeyboardController],\n      ],\n    },\n  ],\n  standalone: false,\n})\nexport class PromptTemplateEmptyDescriptionComponent {}\n```\n\n\nWill throw `ReferenceError: Optional is not defined`:\n\n![Image](https://github.com/user-attachments/assets/d9a2856b-8dab-4da8-aa9a-a3324d408f33)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nPlease let me know if the information above isn't sufficient to create a test case!\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, elements\n... forms, language-service, localize, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/build                  19.1.3\n@angular/cdk                    18.2.2\n@angular/google-maps            15.2.9\n@schematics/angular             19.1.3\nng-packagr                      19.0.1\nrxjs                            7.8.0\ntypescript                      5.6.3\nwebpack                         5.96.1\nzone.js                         0.14.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59634","RelatedDescription":"Closed issue \"HMR broken with dynamic component providers\" (#59634)"},{"Id":"2800149275","IsPullRequest":true,"CreatedAt":"2025-01-21T18:47:47","Actor":"clydin","Number":"59637","RawContent":null,"Title":"fix(compiler-cli): handle conditional expressions when extracting dependencies","State":"closed","Body":"Updates the HMR dependencies extraction logic to handle conditional expressions. For example, `providers: [condition ? providersA : providersB]`.\r\n\r\nCloses #59634","Url":"https://github.com/angular/angular/pull/59637","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): handle conditional expressions when extracting dependencies\" (#59637)"},{"Id":"2799017121","IsPullRequest":true,"CreatedAt":"2025-01-21T17:56:55","Actor":"crisbeto","Number":"59625","RawContent":null,"Title":"fix(core): skip component ID collision warning during SSR","State":"closed","Body":"The component ID collision check tries to account for components being replaced by checking for the `type`, however that might not work during SSR.\r\n\r\nThese changes disable the warning since it's primarily useful on the browser anyways.\r\n\r\nCloses https://github.com/angular/angular-cli/issues/29408\r\n","Url":"https://github.com/angular/angular/pull/59625","RelatedDescription":"Closed or merged PR \"fix(core): skip component ID collision warning during SSR\" (#59625)"},{"Id":"2800583679","IsPullRequest":false,"CreatedAt":"2025-01-21T17:50:33","Actor":"msmallest","Number":"59640","RawContent":null,"Title":"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nedit: it's just `provideAnimationsAsync()`. Removed it from the module and now the styling worked, and I removed it from the standalone app and it worked.\n\nModule based apps seem to not have style changes applied when a style is changed in a component (inline style or file-based style). Same applies for module based but in a standalone component... and even an app fully converted to standalone from what I can tell?\n\nFully module based\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\nProblem component is a standalone component inside a component used in a module\nhttps://github.com/msmallest/module-based-hmr/tree/issue2-module-root-standalone-component\n\n(edit: see first comment by me, I realized the problem) \nI converted the whole app to standalone and there is still an issue. But I have had working fully standalone apps before with the latest patches, so I must be missing something. But I can't tell what is missing between those fresh ones and this example. I even cleared `.angular/`, restarted the serve server, re-opened IDE, and even tried in a different browser from the other tests\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--fully-standalone\n\n(edit: see first comment by me, I realized the problem) \nedit: here is a repo I used for a different issue a couple days ago - but in a new branch `issue-59640-comparison-never-module`. It was and still is in a working state with the newest patch versions. I made the same component as the above examples in this app that never had modules, and it has no style issues whether it is file-based or inline style https://github.com/msmallest/hmr-issue-multiple-components/tree/issue-59640-comparison-never-module. I will take a closer look at the difference between this and `issue2--fully-standalone` later, but between this and the other issue I'm a bit confused at the moment.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59640","RelatedDescription":"Closed issue \"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone\" (#59640)"},{"Id":"2799705345","IsPullRequest":false,"CreatedAt":"2025-01-21T17:50:32","Actor":"Sergiobop","Number":"59632","RawContent":null,"Title":"HMR Breaks self-referencing components","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nRelated to https://github.com/angular/angular/issues/59602\n\nHaving a nested component make \"children\" components not render with HMR enabled. When i tried `ng serve \\--no-hmr` everything works as expected.\n\n```ts\nimport { Component, Input } from '@angular/core';\n\ninterface Comment {\n  id: number;\n  author: string;\n  text: string;\n  children?: Comment[];\n}\n\n@Component({\n  selector: 'app-comment',\n  template: `\n    <div class=\"comment\">\n      <div class=\"comment-content\">\n        <strong>{{ comment.author }}</strong>: {{ comment.text }}\n      </div>\n\n      <div class=\"comment-children\">\n          <!-- THIS IS NOT RENDERED -->\n         @for (children of comment.children; track children.id) {\n          <app-comment [comment]=\"child\" />\n         }\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .comment {\n        margin: 10px 0;\n        padding-left: 20px;\n        border-left: 2px solid #ccc;\n      }\n      .comment-content {\n        margin-bottom: 5px;\n      }\n      .comment-children {\n        margin-top: 10px;\n      }\n    `,\n  ],\n})\nexport class CommentComponent {\n  @Input() comment!: Comment;\n}\n```\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.18.0\nPackage Manager: npm 11.0.0\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1901.3\n@angular-devkit/build-angular      19.1.3\n@angular-devkit/core               18.2.8\n@angular-devkit/schematics         18.2.8\n@angular/cdk                       19.1.0\n@angular/cli                       19.1.3\n@angular/material                  19.1.0\n@angular/material-moment-adapter   19.1.0\n@angular/youtube-player            19.1.0\n@schematics/angular                19.1.3\nrxjs                               7.8.1\ntypescript                         5.7.3\nzone.js                            0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59632","RelatedDescription":"Closed issue \"HMR Breaks self-referencing components\" (#59632)"},{"Id":"2800548801","IsPullRequest":false,"CreatedAt":"2025-01-21T17:50:31","Actor":"msmallest","Number":"59639","RawContent":null,"Title":"bug(HMR): `NgFor/AsyncPipe` break in module components when template/style reload occurs from that component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser, common\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn a module based application, HMR reloads that occur after saving the template or style in a component declared in a module cause errors related to `NgFor/AsyncPipe`.\n\n While my reproduction gets these from `BrowserModule`, I originally observed the errors in a real application with both `BrowserModule` in the `AppModule` as well as the trouble component being declared in a different module that included `CommonModule`.\n\n- This seems to be module specific, or down to perhaps `BrowserModule`. When I ran the standalone schematic with \"Convert all components, directive and pipes to standalone\" + \"./\" path, this error no longer occurred.\n- This is definitely HMR related though. In both branches, I ran it with HMR on by default, and then with `--hmr false`. Of the four permutations, only the module declared component version with HMR on gave any issues.\n- When I changed the template or style of `app-root` which contains the module component (`app-authorized-users`), there is no issue. Only when editing `app-authorized-users`'s template is there an issue.\n- edit: I did not try other variants such as one external file and one inline file in either scenario, but I assume the same\n\n--- \n\nAbout the repo in general, and the two relevant branches: \n\n- This issue's repro repo was generated using Angular CLI version 19.1.1, using the command `ng new module-based-hmr --standalone false`\n- ...and then bumped to latest patch versions. \n- Each branch has a relevant `README.md` with details, including reproducing with or without HMR. \n- The trouble component (`app-authorized-users`) is embedded in the `app-root`.\n\nhttps://github.com/msmallest/module-based-hmr (has errors listed for both the `NgFor` and `AsyncPipe`)\n\nhttps://github.com/msmallest/module-based-hmr/tree/module-root-standalone-component-no-errors (has the output of the migration)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/msmallest/module-based-hmr\n\n### Please provide the exception or error you saw\n\n```true\nauthorized-users.component.ts:34 NG0303: Can't bind to 'ngForOf' since it isn't a known property of 'ng-container' (used in the '_AuthorizedUsersComponent' component template).\n1. If 'ng-container' is an Angular component and it has the 'ngForOf' input, then verify that it is a part of an @NgModule where this component is declared.\n2. If 'ng-container' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\nAuthorizedUsersComponent_Template\t@\tauthorized-users.component.ts:34\n(anonymous)\t@\tauthorized-users.component.ts:12\nPromise.then\t\t\nAuthorizedUsersComponent_HmrLoad\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tclient:129\nnotifyListeners\t@\tclient:129\nnotifyListeners\t@\tclient:959\nhandleMessage\t@\tclient:904\nonMessage\t@\tclient:298\n(anonymous)\t@\tclient:428\n\n\n\nauthorized-users.component.ts:12 ERROR TypeError: Cannot read properties of null (reading 'pure')\n    at AuthorizedUsersComponent_Template (authorized-users.component.ts:36:43)\n(anonymous)\t@\tauthorized-users.component.ts:12\nPromise.then\t\t\nAuthorizedUsersComponent_HmrLoad\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tclient:129\nnotifyListeners\t@\tclient:129\nnotifyListeners\t@\tclient:959\nhandleMessage\t@\tclient:904\nonMessage\t@\tclient:298\n(anonymous)\t@\tclient:428\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nThere is another issue seemingly related to HMR and modules that I am writing up now. edit: https://github.com/angular/angular/issues/59640","Url":"https://github.com/angular/angular/issues/59639","RelatedDescription":"Closed issue \"bug(HMR): `NgFor/AsyncPipe` break in module components when template/style reload occurs from that component\" (#59639)"},{"Id":"2801306427","IsPullRequest":true,"CreatedAt":"2025-01-21T17:50:30","Actor":"crisbeto","Number":"59644","RawContent":null,"Title":"HMR-related fixes","State":"closed","Body":"Includes the following HMR-related fixes:\r\n\r\n### fix(core): replace metadata in place during HMR \r\n\r\nCurrently during HMR we swap out the entire module definition (e.g. `MyComp.ɵcmp = newDef`). In standalone components and most module-based ones this works fine, however in some cases (e.g. circular dependencies) the compiler can produce a `setComponentScope` call for a module-based component. This call doesn't make it into the HMR replacement function, because it is defined in the module's file, not the component's. As a result, the dependencies of these components are cleared out upon replacement.\r\n\r\nA secondary problem is that the `directiveDefs` and `pipeDefs` fields can save references to definitions that later become stale as a result of HMR.\r\n\r\nThese changes resolve both issues by:\r\n1. Performing the replacement by copying the properties from the new definition onto the old one, while keeping it in place.\r\n2. Preserving the initial `directiveDefs`, `pipeDefs` and `setInput`.\r\n\r\n### fix(core): capture self-referencing component during HMR \r\n\r\nFixes that we were filtering out the component itself from the set of dependencies when HMR is enabled, breaking self-referencing components.\r\n\r\n### fix(platform-browser): clear renderer cache during HMR when using async animations\r\n\r\nFixes that the async animations renderer didn't have the logic to clean up its style cache during HMR. This is identical to #59393.\r\n\r\n### fix(compiler-cli): extract parenthesized dependencies during HMR \r\nFixes that the HMR dependency extraction logic wasn't accounting for parenthesized identifiers correctly.\r\n\r\nFixes #59640.\r\nFixes #59632.\r\nFixes #59639.","Url":"https://github.com/angular/angular/pull/59644","RelatedDescription":"Closed or merged PR \"HMR-related fixes\" (#59644)"},{"Id":"2798659578","IsPullRequest":true,"CreatedAt":"2025-01-21T17:12:05","Actor":"angular-robot","Number":"59623","RawContent":null,"Title":"build: update dependency shiki to v2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [shiki](https://redirect.github.com/shikijs/shiki) ([source](https://redirect.github.com/shikijs/shiki/tree/HEAD/packages/shiki)) | devDependencies | major | [`^1.11.1` -> `^2.0.0`](https://renovatebot.com/diffs/npm/shiki/1.27.0/2.0.3) |\n| [shiki](https://redirect.github.com/shikijs/shiki) ([source](https://redirect.github.com/shikijs/shiki/tree/HEAD/packages/shiki)) | dependencies | major | [`^1.10.3` -> `^2.0.0`](https://renovatebot.com/diffs/npm/shiki/1.29.1/2.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>shikijs/shiki (shiki)</summary>\n\n### [`v2.0.3`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.3)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.2...v2.0.3)\n\n#####    🐞 Bug Fixes\n\n-   **core**: Soft require `engine` options  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(10a6f)</samp>](https://redirect.github.com/shikijs/shiki/commit/10a6f781)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.2...v2.0.3)\n\n### [`v2.0.2`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.2)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.1...v2.0.2)\n\n#####    🐞 Bug Fixes\n\n-   Mark `engine` required in `createHighlighterCore`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(1212f)</samp>](https://redirect.github.com/shikijs/shiki/commit/1212f473)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.1...v2.0.2)\n\n### [`v2.0.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.0...v2.0.1)\n\n#####    🚀 Features\n\n-   Improve warning messages  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(0f27a)</samp>](https://redirect.github.com/shikijs/shiki/commit/0f27a20d)\n\n#####    🐞 Bug Fixes\n\n-   Warn about missing deprecation  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(708e3)</samp>](https://redirect.github.com/shikijs/shiki/commit/708e3f24)\n-   **colorized-brackets**: Use object style `htmlStyle`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(eab5b)</samp>](https://redirect.github.com/shikijs/shiki/commit/eab5bd18)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.0...v2.0.1)\n\n### [`v2.0.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.29.1...v2.0.0)\n\n##### Read the announcement: [Shiki v2](https://shiki.style/blog/v2)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.29.1...v2.0.0)\n\n### [`v1.29.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.29.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.29.0...v1.29.1)\n\n#####    🚀 Features\n\n-   Improve warning messages  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(ad525)</samp>](https://redirect.github.com/shikijs/shiki/commit/ad525a9c)\n-   Expose `shiki/types`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(0b027)</samp>](https://redirect.github.com/shikijs/shiki/commit/0b027f3d)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.29.0...v1.29.1)\n\n### [`v1.29.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.29.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.28.0...v1.29.0)\n\n#####    🚀 Features\n\n-   **transformers**: Introduce `matchAlgorithm` option for new matching algorithm  -  by [@&#8203;fuma-nama](https://redirect.github.com/fuma-nama) and [@&#8203;antfu](https://redirect.github.com/antfu) in [https://github.com/shikijs/shiki/issues/835](https://redirect.github.com/shikijs/shiki/issues/835) [<samp>(ceca9)</samp>](https://redirect.github.com/shikijs/shiki/commit/ceca984e)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.28.0...v1.29.0)\n\n### [`v1.28.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.28.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.2...v1.28.0)\n\n#####    🚀 Features\n\n-   **engine-js**: Improve performance for some languages  -  by [@&#8203;slevithan](https://redirect.github.com/slevithan) in [https://github.com/shikijs/shiki/issues/897](https://redirect.github.com/shikijs/shiki/issues/897) [<samp>(e86ca)</samp>](https://redirect.github.com/shikijs/shiki/commit/e86ca5fa)\n\n#####    🐞 Bug Fixes\n\n-   **rehype**: Improve `lazy` performance  -  by [@&#8203;fuma-nama](https://redirect.github.com/fuma-nama) in [https://github.com/shikijs/shiki/issues/896](https://redirect.github.com/shikijs/shiki/issues/896) [<samp>(5c10f)</samp>](https://redirect.github.com/shikijs/shiki/commit/5c10f25b)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.2...v1.28.0)\n\n### [`v1.27.2`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.27.2)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.1...v1.27.2)\n\n*No significant changes*\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.1...v1.27.2)\n\n### [`v1.27.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.27.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.0...v1.27.1)\n\n#####    🚀 Features\n\n-   **engine-js**: Update deps, support more languages  -  by [@&#8203;slevithan](https://redirect.github.com/slevithan) and [@&#8203;antfu](https://redirect.github.com/antfu) in [https://github.com/shikijs/shiki/issues/890](https://redirect.github.com/shikijs/shiki/issues/890) [<samp>(d82af)</samp>](https://redirect.github.com/shikijs/shiki/commit/d82af156)\n-   **langs-precompiled**: Mark `EmulatedRegExp` as pure  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(11ef0)</samp>](https://redirect.github.com/shikijs/shiki/commit/11ef0cd9)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.0...v1.27.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59623","RelatedDescription":"Closed or merged PR \"build: update dependency shiki to v2\" (#59623)"},{"Id":"2802261415","IsPullRequest":false,"CreatedAt":"2025-01-21T16:10:44","Actor":"mattlewis92","Number":"59651","RawContent":null,"Title":"Re-land disabling component styles instead of removing them","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nplatform-browser\n\n### Description\n\nWe were wondering if it was possible to re-land [this styles performance patch](https://github.com/angular/angular/commit/1640743b18e0b6a0e501855d5bc21414b2613319) in Angular to disable component styles, instead of removing them from the DOM when all component instances are destroyed\n\nFrom what we can tell, the referenced performance regression was due to an issue with Chrome that has since been fixed (https://issues.chromium.org/issues/40911913)\n\nIf that isn't the case and some context can be provided as to why that perf fix was reverted, we would love to help to re-land it\n\n### Proposed solution\n\nGet https://github.com/angular/angular/commit/1640743b18e0b6a0e501855d5bc21414b2613319 up to date and re-land it into Angular\n\n### Alternatives considered\n\nWe have currently been patching that fix into our own version of Angular as it made a significant impact on our performance metrics, but it's becoming a maintenance burden to keep it up to date when we upgrade between Angular versions","Url":"https://github.com/angular/angular/issues/59651","RelatedDescription":"Open issue \"Re-land disabling component styles instead of removing them\" (#59651)"},{"Id":"2802083635","IsPullRequest":false,"CreatedAt":"2025-01-21T14:57:21","Actor":"basters","Number":"59650","RawContent":null,"Title":"Zone.js crashes in MS Edge on iOS","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi everyone,\n\nAbout week ago we migrated our project to ng19 and started receiving in Sentry new kind of errors related to `zone.js`.\nUser agent is always iOS and Mobile Edge browser.\nWas not able to reproduce in Desktop Edge.\n\nI was able to reproduce this issue on my iPhone when installed Edge from AppStore. \nIt looks like for some reasons zone.js can not patch `timers`, but was not able to debug deeper, because Edge does not support remote debug..\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nundefined is not an object (evaluating 'handleOrId.refresh')\n\npolyfills-2SRK6US5.js in scheduleTask at line 1409:49\npolyfills-2SRK6US5.js in scheduleTask at line 317:26\npolyfills-2SRK6US5.js in scheduleTask at line 174:47\npolyfills-2SRK6US5.js in ? at line 1440:52\nmain-TMGBBAUM.js in waitToScan at line 23197:19\nmain-TMGBBAUM.js in setup at line 23201:21\npolyfills-2SRK6US5.js in run at line 97:41\nmain-TMGBBAUM.js in start at line 23209:22\nmain-TMGBBAUM.js in ? at line 23384:40\nmain-TMGBBAUM.js in onInvoke at line 7852:31\npolyfills-2SRK6US5.js in run at line 97:41\npolyfills-2SRK6US5.js in ? at line 2005:33\nmain-TMGBBAUM.js in onInvokeTask at line 7634:32\nmain-TMGBBAUM.js in onInvokeTask at line 7841:35\npolyfills-2SRK6US5.js in runTask at line 135:47\npolyfills-2SRK6US5.js in drainMicroTaskQueue at line 482:30\npolyfills-2SRK6US5.js in invokeTask at line 401:30\npolyfills-2SRK6US5.js in invokeTask at line 924:18\npolyfills-2SRK6US5.js in globalCallback at line 945:31\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 18.19.0\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59650","RelatedDescription":"Open issue \"Zone.js crashes in MS Edge on iOS\" (#59650)"},{"Id":"2802071379","IsPullRequest":true,"CreatedAt":"2025-01-21T14:52:26","Actor":"angelaki","Number":"59649","RawContent":null,"Title":"Default type `T` for InputFunction's `TransformT`","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Description\r\nCurious why this isn't the default behavior so I'm quite sure there **is** a reason? Never the less, find it much more comfortable to not be forced to always write the type twice on using a converter:\r\n\r\n`multiple= input<boolean | 'append', boolean | 'append'>(true, { transform: v => v === 'append' ? 'append' : coerceBooleanProperty(v) });`\r\n\r\n-->\r\n\r\n`multiple = input<boolean | 'append'>(true, { transform: v => v === 'append' ? 'append' : coerceBooleanProperty(v) });`\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/59649","RelatedDescription":"Open PR \"Default type `T` for InputFunction's `TransformT`\" (#59649)"},{"Id":"2801867751","IsPullRequest":false,"CreatedAt":"2025-01-21T13:31:33","Actor":"blueiceprj","Number":"59647","RawContent":null,"Title":"viewChild error.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nEverything works fine 19.1.1.  But now 19.1.2 viewChild cannot identify template element. Its a parent-child component. Here the sample of code:\n\n```\n@Component({\n    selector: 'app-menu-item',\n    templateUrl: './menu-item.component.html',\n    styleUrls: ['./menu-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    imports: [MatMenuModule, FontAwesomeModule, RouterLink, TranslatePipe],\n})\nexport class MenuItemComponent {\n    readonly items = input<NavigationItem[]>([]);\n    readonly childMenu = viewChild<MatMenu>('childMenu');\n```\n\n```\n\n<mat-menu #childMenu=\"matMenu\" [overlapTrigger]=\"false\" xPosition=\"after\">\n    @for (child of items(); track child.id) {\n        <!-- Handle branch node menu items -->\n        @if (child?.children.length > 0) {\n            @if (!child.hidden && child.active) {\n                <button mat-menu-item [matMenuTriggerFor]=\"menu.childMenu()\">\n                    @if (child.icon) {\n                        <fa-icon style=\"padding-right: 16px; font-size: 16px\" [icon]=\"['fal', child.icon]\"></fa-icon>\n                    }\n                    <span>{{ child.translate | translate }}</span>\n                </button>\n                <app-menu-item #menu [items]=\"child.children\"></app-menu-item>\n            }\n        }\n        <!-- Handle leaf node menu items -->\n        @if ((!child.children || child.children.length == 0) && child.type == 'item') {\n            @if (!child.hidden && child.active) {\n                <button mat-menu-item (click)=\"menuItemClicked(child)\" [routerLink]=\"child.url\">\n                    @if (child.icon) {\n                        <fa-icon style=\"padding-right: 16px; font-size: 16px\" [icon]=\"['fal', child.icon]\"></fa-icon>\n                    }\n                    <span>{{ child.translate | translate }}</span>\n                </button>\n            }\n        }\n    }\n</mat-menu>\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nmenu_r2.childMenu is not a function\n    at MenuItemComponent_For_3_Conditional_0_Conditional_0_Template (menu-item.component.html:6:39)\n    at executeTemplate (core.mjs:12061:5)\n    at refreshView (core.mjs:14431:7)\n    at detectChangesInView (core.mjs:14640:5)\n    at detectChangesInViewIfAttached (core.mjs:14602:3)\n    at detectChangesInEmbeddedViews (core.mjs:14562:7)\n    at refreshView (core.mjs:14459:5)\n    at detectChangesInView (core.mjs:14640:5)\n    at detectChangesInViewIfAttached (core.mjs:14602:3)\n    at detectChangesInEmbeddedViews (core.mjs:14562:7)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: darwin x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1901.3\n@angular-devkit/build-angular        19.1.3\n@angular-devkit/build-ng-packagr     0.1002.0\n@angular-devkit/core                 19.1.3 (cli-only)\n@angular-devkit/schematics           19.1.3\n@angular/cdk                         19.1.0\n@angular/cli                         19.1.3\n@angular/material                    19.1.0\n@angular/material-date-fns-adapter   19.1.0\n@angular/youtube-player              19.1.0\n@schematics/angular                  19.1.3\nrxjs                                 7.8.1\ntypescript                           5.7.3\nzone.js                              0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59647","RelatedDescription":"Open issue \"viewChild error.\" (#59647)"},{"Id":"2801438899","IsPullRequest":true,"CreatedAt":"2025-01-21T10:54:14","Actor":"alan-agius4","Number":"59646","RawContent":null,"Title":"refactor(compiler-cli): eliminate `new URL` from HMR initializer","State":"closed","Body":"This commit removes the use of `new URL` from the HMR initializer, as it is no longer required now that the URL is relative (`./`).\r\n\r\nAdditionally, this change simplifies the integration within the Angular CLI.\r\n","Url":"https://github.com/angular/angular/pull/59646","RelatedDescription":"Closed or merged PR \"refactor(compiler-cli): eliminate `new URL` from HMR initializer\" (#59646)"},{"Id":"2799541453","IsPullRequest":true,"CreatedAt":"2025-01-21T09:53:40","Actor":"pkozlowski-opensource","Number":"59631","RawContent":null,"Title":"Runtime refactor component ref component view","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59631","RelatedDescription":"Closed or merged PR \"Runtime refactor component ref component view\" (#59631)"},{"Id":"2800933368","IsPullRequest":true,"CreatedAt":"2025-01-21T07:38:05","Actor":"JeanMeche","Number":"59642","RawContent":null,"Title":"docs(docs-infra): bump tutorials to 19.1","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59642","RelatedDescription":"Open PR \"docs(docs-infra): bump tutorials to 19.1\" (#59642)"},{"Id":"2800810179","IsPullRequest":true,"CreatedAt":"2025-01-21T06:21:28","Actor":"angular-robot","Number":"59641","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/chrome](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/chrome) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/chrome)) | dependencies | patch | [`^0.0.294` -> `^0.0.299`](https://renovatebot.com/diffs/npm/@types%2fchrome/0.0.294/0.0.299) |\n| [selenium-webdriver4](https://redirect.github.com/SeleniumHQ/selenium/tree/trunk/javascript/node/selenium-webdriver#readme) ([source](https://redirect.github.com/SeleniumHQ/selenium)) | dependencies | minor | [`4.27.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/selenium-webdriver4/4.27.0/4.28.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SeleniumHQ/selenium (selenium-webdriver4)</summary>\n\n### [`v4.28.1`](https://redirect.github.com/SeleniumHQ/selenium/compare/ac342546e9e34d4ca94eceeb27cce22a4fe3b79f...05c87ca7c15eb719b2f5ca9a460ec88a38740cf6)\n\n[Compare Source](https://redirect.github.com/SeleniumHQ/selenium/compare/ac342546e9e34d4ca94eceeb27cce22a4fe3b79f...05c87ca7c15eb719b2f5ca9a460ec88a38740cf6)\n\n### [`v4.28.0`](https://redirect.github.com/SeleniumHQ/selenium/compare/d6e718d134987d62cd8ffff476821fb3ca1797c2...ac342546e9e34d4ca94eceeb27cce22a4fe3b79f)\n\n[Compare Source](https://redirect.github.com/SeleniumHQ/selenium/compare/d6e718d134987d62cd8ffff476821fb3ca1797c2...ac342546e9e34d4ca94eceeb27cce22a4fe3b79f)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59641","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#59641)"},{"Id":"2800122618","IsPullRequest":true,"CreatedAt":"2025-01-20T19:08:13","Actor":"contesa737","Number":"59636","RawContent":null,"Title":"Update README.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [x] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59636","RelatedDescription":"Closed or merged PR \"Update README.md\" (#59636)"},{"Id":"2800121299","IsPullRequest":true,"CreatedAt":"2025-01-20T19:06:00","Actor":"arturovt","Number":"59635","RawContent":null,"Title":"fix(core): prevent stash listener conflicts","State":"open","Body":"The stash event listener is a global function that might be unsafely overridden if multiple microfrontend applications exist on the page.\r\n\r\nIn this commit, we create a map of `APP_ID` to stash event listener functions. This map prevents conflicts because multiple applications might be bootstrapped simultaneously on the client (one rendered on the server and one rendering only on the client).\r\n\r\nI.e., the code that might be used is:\r\n\r\n```ts\r\n// Given that `app-root` is rendered on the server\r\nbootstrapApplication(AppComponent, appConfig);\r\n\r\nbootstrapApplication(BlogRootComponent, appBlogConfig);\r\n```\r\n\r\nTwo bootstrapped applications would conflict and override each other's code.","Url":"https://github.com/angular/angular/pull/59635","RelatedDescription":"Open PR \"fix(core): prevent stash listener conflicts\" (#59635)"},{"Id":"2799377812","IsPullRequest":true,"CreatedAt":"2025-01-20T14:14:49","Actor":"pkozlowski-opensource","Number":"59630","RawContent":null,"Title":"docs: release notes for the v19.1.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59630","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.2 release\" (#59630)"},{"Id":"2799371674","IsPullRequest":true,"CreatedAt":"2025-01-20T14:10:32","Actor":"pkozlowski-opensource","Number":"59629","RawContent":null,"Title":"Bump version to \"v19.1.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59629","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.2\" with changelog.\" (#59629)"},{"Id":"2799303668","IsPullRequest":true,"CreatedAt":"2025-01-20T13:40:54","Actor":"hawkgs","Number":"59628","RawContent":null,"Title":"fix(devtools): increase font size and fix search border color in dark mode","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\n- Increase the font size slightly\r\n- Fix search input border color in dark mode\r\n- Get rid of horizontal separator between the icon and the field (as per the doc)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59628","RelatedDescription":"Open PR \"fix(devtools): increase font size and fix search border color in dark mode\" (#59628)"},{"Id":"2799155065","IsPullRequest":false,"CreatedAt":"2025-01-20T12:35:45","Actor":"pahlers","Number":"59627","RawContent":null,"Title":"Store config in the environment (ENV)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\n## Current solutions\n\nWe have several options to add configuration into a Angular application\n1. use `environment.ts` and add the configuration during the build fase,\n1. use `/assets/config.json` and fetch the configuration during the initialization of the application (which can go wrong, etc).\n1. Maybe there is another solutions I'm not aware of.\n\nAll these solutions have a con and that is *it can't change the configuration during deployment of the application*. \n\nWhich is bad because its violates the guideline `III. Config` of `The Twelve-Factor App`.\n\n## The Twelve-Factor App (https://12factor.net/)\n\n> The twelve-factor app is a methodology for building software-as-a-service apps that:\n> - Use declarative formats for setup automation, to minimize time and cost for new developers joining the project;\n> - Have a clean contract with the underlying operating system, offering maximum portability between execution environments;\n> - Are suitable for deployment on modern cloud platforms, obviating the need for servers and systems administration;\n> - Minimize divergence between development and production, enabling continuous deployment for maximum agility;\n> - And can scale up without significant changes to tooling, architecture, or development practices.\n> The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc).\n\n*As a developer we want to follow these guidelines so the app can be deployed in several ways on several systems.*\n\n## III. Config - Store config in the environment\n\n> An app’s config is everything that is likely to vary between deploys (staging, production, developer environments, etc). This includes:\n> \n> - Resource handles to the database, Memcached, and other backing services\n> - Credentials to external services such as Amazon S3 or Twitter\n> - Per-deploy values such as the canonical hostname for the deploy\n> \n> Apps sometimes store config as constants in the code. This is a violation of twelve-factor, which requires strict separation of config from code. Config varies substantially across deploys, code does not.\n\nAs you can read the `environment.ts` solution violates this rule `store config as constants in the code` (but I like that the config is build into the application).\n\nSo why don't want I use the `/assets/config.json` solution? Because;\n- **Performance**. Every time the application starts it needs to fetch the configuration file.\n- **Failure**. Fetching the configuration file could be going wrong. So you need to implement a fail-over and an error-page to inform the user, etc.\n\n## Solution \n*I would like to see a solution which provides a way to add the configuration during the deployment of the server in the environment as the ` III. Config - Store config in the environment` rule suggests.*\n\n### Proposed solution\n\nInspired by the working of the Angular [TransferState](https://angular.dev/api/core/TransferState)\n\n1. The web server transfers the environments to the `environment`-element in the index.html during startup, and\n2. During startup of the application the content of the `environment`-element is parsed an can be used as configuration.\n\nDuring development a default configuration is used.\n\n\n\n### Alternatives considered\n\nAlways compile the `environment.ts` in a separated file, in a predictable format, so we can change the values during startup of the web server.","Url":"https://github.com/angular/angular/issues/59627","RelatedDescription":"Open issue \"Store config in the environment (ENV)\" (#59627)"},{"Id":"2799070354","IsPullRequest":true,"CreatedAt":"2025-01-20T11:58:25","Actor":"hawkgs","Number":"59626","RawContent":null,"Title":"feat(devtools): select the root element by default","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nNothing is selected by default.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSelect the application root element when you start Angular DevTools.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59626","RelatedDescription":"Open PR \"feat(devtools): select the root element by default\" (#59626)"},{"Id":"2798797834","IsPullRequest":false,"CreatedAt":"2025-01-20T10:06:39","Actor":"alan-agius4","Number":"59624","RawContent":null,"Title":"Show warning when `withEnabledBlockingInitialNavigation` Is used with `provideClientHydration`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter, platform-browser\n\n### Description\n\nThe `withEnabledBlockingInitialNavigation` option was designed specifically for use cases involving deferred hydration to prevent UI flickers during initial navigation. However, when used with `provideClientHydration`, which supports standard hydration, the issue of flickering does not arise. To avoid confusion and misuse, a warning should be displayed in the console when these two configurations are used together, as they are not intended to work in tandem.\n\n### Proposed solution\n\nIssue warning when these 2 methods are used togather.\n","Url":"https://github.com/angular/angular/issues/59624","RelatedDescription":"Open issue \"Show warning when `withEnabledBlockingInitialNavigation` Is used with `provideClientHydration`\" (#59624)"},{"Id":"2798524699","IsPullRequest":true,"CreatedAt":"2025-01-20T08:13:53","Actor":"angular-robot","Number":"59621","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59621","RelatedDescription":"Open PR \"build: lock file maintenance\" (#59621)"},{"Id":"2798436642","IsPullRequest":true,"CreatedAt":"2025-01-20T08:10:16","Actor":"alan-agius4","Number":"59620","RawContent":null,"Title":"fix(compiler): update `@ng/component` URL to be relative","State":"closed","Body":"This change is required to resolve https://github.com/angular/angular-cli/pull/29248 and works in conjunction with https://github.com/angular/angular-cli/pull/29386. It ensures that HMR (Hot Module Replacement) functions correctly with `base href`, proxies, and other advanced development setups.\r\n","Url":"https://github.com/angular/angular/pull/59620","RelatedDescription":"Closed or merged PR \"fix(compiler): update `@ng/component` URL to be relative\" (#59620)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2802987315","IsPullRequest":true,"CreatedAt":"2025-01-21T22:58:22","Actor":"clydin","Number":"29437","RawContent":null,"Title":"refactor(@angular/build): allow browser client to log console message with dev-server","State":"open","Body":"The development server now supports a WebSocket event named `angular:log`. This event allows the browser client to send log messages back to the development server. Currently this is unused by the client and Angular runtime. But is intended to be used in the future for such cases as propagating error messages back to the development server console. This event is considered internal and should not be relied upon by external code.","Url":"https://github.com/angular/angular-cli/pull/29437","RelatedDescription":"Open PR \"refactor(@angular/build): allow browser client to log console message with dev-server\" (#29437)"},{"Id":"2801485685","IsPullRequest":false,"CreatedAt":"2025-01-21T20:08:21","Actor":"vzarskus","Number":"29426","RawContent":null,"Title":"ng-server-context=\"ssr\" on prerendered (SSG) parameterized routes","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello!\n\nI have noticed that when prerendering with Angular19 parameterized routes feature (https://angular.dev/guide/hybrid-rendering#parameterized-routes), these prerendered `index.html`s contain `ng-server-context=\"ssr\"`, which is odd, because I would expect them to have `ng-server-context=\"ssg\"` - same as not parameterized routes.\n\nI will give you some examples in pictures.\n\nHere we see `browser/translations/index.html` have  `ng-server-context=\"ssg\"`:\n![Image](https://github.com/user-attachments/assets/c5315407-a26e-45f6-99fa-1a8754b13e2c)\n\nHere we see two parameterized routes on `browser/translations/irasu-valdymo-teorija/index.html` and `browser/translations/programines-irangos-inzinieriu-humoras/index.html` having `ng-server-context=\"ssr\"`:\n\n![Image](https://github.com/user-attachments/assets/88813154-358f-4532-b18d-0992412856a9)\n\n![Image](https://github.com/user-attachments/assets/b044ab59-1282-4e39-93ee-a53f13134406)\n\nIs this intended?\n\nHere is the relevant excerpt from `app.routes.server.ts`:\n```\n{\n    path: 'translations/:slug',\n    renderMode: RenderMode.Prerender,\n    getPrerenderParams(): Promise<Record<string, string>[]> {\n      return Promise.resolve(\n        ['irasu-valdymo-teorija', 'programines-irangos-inzinieriu-humoras'].map(\n          i => ({ slug: i }),\n        ),\n      );\n    },\n  },\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.1\nNode: 20.18.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.1.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser      \n... platform-browser-dynamic, platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.1\n@angular-devkit/build-angular   19.1.1\n@angular-devkit/core            19.1.1\n@angular-devkit/schematics      19.1.1\n@angular/cdk                    19.1.0\n@schematics/angular             19.0.6\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29426","RelatedDescription":"Closed issue \"ng-server-context=\"ssr\" on prerendered (SSG) parameterized routes\" (#29426)"},{"Id":"2801757903","IsPullRequest":true,"CreatedAt":"2025-01-21T20:08:20","Actor":"alan-agius4","Number":"29428","RawContent":null,"Title":"fix(@angular/build): include extracted routes in the manifest during prerendering","State":"closed","Body":"\r\nThis commit ensures that extracted routes are added to the manifest during prerendering. This guarantees a correct ng-server-context value for parameterized routes and provides a performance benefit by preventing route extraction from being repeated for every rendering worker.\r\n\r\nCloses #29426\r\n","Url":"https://github.com/angular/angular-cli/pull/29428","RelatedDescription":"Closed or merged PR \"fix(@angular/build): include extracted routes in the manifest during prerendering\" (#29428)"},{"Id":"2799497430","IsPullRequest":true,"CreatedAt":"2025-01-21T20:08:07","Actor":"alan-agius4","Number":"29422","RawContent":null,"Title":"fix(@angular/build): only issue invalid i18n config error for duplicate `subPaths` with inlined locales","State":"closed","Body":"\r\n\r\nThe i18n configuration validation was incorrectly flagging errors for identical `subPaths` when both locales were not inlined within the same build. This was due to the validation not properly accounting for the inlining of locales.\r\n\r\nThis commit fixes this issue by ensuring that the validation only checks for duplicate `subPaths` when the locales are inlined.\r\n\r\nCloses #29398","Url":"https://github.com/angular/angular-cli/pull/29422","RelatedDescription":"Closed or merged PR \"fix(@angular/build): only issue invalid i18n config error for duplicate `subPaths` with inlined locales\" (#29422)"},{"Id":"2802540182","IsPullRequest":false,"CreatedAt":"2025-01-21T18:29:29","Actor":"vincesp","Number":"29436","RawContent":null,"Title":"ng serve does not work with npm workspaces, yields invalid Vite configuration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nOut of the box, Vite has built-in support for NPM workspaces and detects the proper (parent) folder automatically that contains the node_modules shared by all workspaces. Unfortunately, `ng serve` breaks this behavior by overriding the Vite settings.\n\n**Steps to reproduce:**\n\nClone the provided repository, then run\n\n```\nnpm i\n```\n\nThen, run `ng serve` by executing\n\n```\nnpm start -w angular-app\n```\n\n**Actual behavior:** The font cannot be loaded, as the allow list of Vite is misconfigured, see error message below.\n\n**Expected behavior:** The page is rendered in the curly \"Ole\" font.\n\nReproduce the _expected_ behavior by running\n\n```\nnpm run dev -w vite-app\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/vincesp/angular-workspace-bug\n\n### Please provide the exception or error you saw\n\n```true\nThe request url \"/workspaces/codespaces-blank/my-font-css/ole.woff2\" is outside of Vite serving allow list.\n\n- /workspaces/codespaces-blank/angular-app/.angular/cache/19.1.3/angular-app/vite\n- /workspaces/codespaces-blank/angular-app/node_modules\n- /workspaces/codespaces-blank/angular-app/public/favicon.ico\n- /workspaces/codespaces-blank/node_modules/@angular/build/node_modules/vite/dist/client\n\nRefer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: undefined\n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.3\n@angular-devkit/core         19.1.3\n@angular-devkit/schematics   19.1.3\n@schematics/angular          19.1.3\n```\n\n### Anything else?\n\nAlso, `ng build` does not work:\n\n```\nnpm run build -w angular-app\n```\n\nResult:\n\n```\nApplication bundle generation failed. [5.704 seconds]\n\n✘ [ERROR] No loader is configured for \".woff2\" files: ../my-font-css/ole.woff2\n\n    ../my-font-css/index.css:6:9:\n      6 │     src: url(ole.woff2) format('woff2');\n```\n\nExpected behavior: The woff2 file is copied into the bundle, as it is the case with:\n\n```\nnpm run build -w vite-app\n```","Url":"https://github.com/angular/angular-cli/issues/29436","RelatedDescription":"Open issue \"ng serve does not work with npm workspaces, yields invalid Vite configuration\" (#29436)"},{"Id":"2802067058","IsPullRequest":true,"CreatedAt":"2025-01-21T17:19:11","Actor":"devversion","Number":"29433","RawContent":null,"Title":"Migrate more tests to `rules_js`","State":"closed","Body":"This is likely the second last PR to migrate tests to `rules_js`. One left after this one.","Url":"https://github.com/angular/angular-cli/pull/29433","RelatedDescription":"Closed or merged PR \"Migrate more tests to `rules_js`\" (#29433)"},{"Id":"2802207468","IsPullRequest":false,"CreatedAt":"2025-01-21T15:50:38","Actor":"Lucas-Kobayashi","Number":"29435","RawContent":null,"Title":"[plugin:vite:import-analysis] Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen updating any html file inside my component angular crashes and presents the following error \n\n`[vite] Internal server error: Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: /Users/lucaskobayashi/Documents/Nextmed/SGN/.angular/vite-root/sgn/main.js:182:17\n  191|          path: \"painel/paineis\",\n  192|          data: { title: \"Pain\\xE9is\" },\n  193|          loadComponent: () => import(\"./chunk-NYDFRQ4Q.js\").then((e) => e.PanelListScreenComponent)\n     |                                      ^\n  194|        },\n  195|        {\n      at TransformPluginContext._formatError (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47397:41)\n      at TransformPluginContext.error (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47392:16)\n      at normalizeUrl (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45642:23)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45761:39`\n\nThe project was running fine until yesterday, current core and cli version\n`\"dependencies\": {\n    \"@angular/animations\": \"^19.0.5\",\n    \"@angular/common\": \"^19.0.5\",\n    \"@angular/compiler\": \"^19.0.5\",\n    \"@angular/core\": \"^19.0.5\",\n    \"@angular/forms\": \"^19.0.5\",\n    \"@angular/platform-browser\": \"^19.0.5\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.5\",\n    \"@angular/platform-server\": \"^19.0.5\",\n    \"@angular/router\": \"^19.0.5\",\n    \"@angular/ssr\": \"^19.0.6\",\n    \"@primeng/themes\": \"^19.0.2\",\n    \"angular-svg-icon\": \"^19.1.1\",\n    \"apexcharts\": \"^4.3.0\",\n    \"express\": \"^4.18.2\",\n    \"ng-apexcharts\": \"^1.15.0\",\n    \"primeicons\": \"^7.0.0\",\n    \"primeng\": \"^19.0.2\",\n    \"rxjs\": \"~7.8.0\",\n    \"tailwindcss-primeui\": \"^0.3.4\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.15.0\"\n  },`\n\n I've tried updating angular core and cli, but the error changed, now is presenting the following error\n\n`Error: [vite] cannot find entry point module 'file:///Users/lucaskobayashi/Documents/Nextmed/SGN/.angular/vite-root/sgn/@ng/component?c=src%2Fapp%2Fapp.component.ts%40AppComponent&t=1737473040253'.\n    at fetchModule (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:51477:13)\n    at async handleInvoke (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44166:22)\n    at async EventEmitter.listenerForInvokeHandler (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44239:19) {\n  runnerError: Error: RunnerError\n      at reviveInvokeError (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/module-runner.js:541:18)\n      at Object.invoke (file:///Users/lucaskobayashi/Documents/Nextmed/SGN/node_modules/vite/dist/node/module-runner.js:624:15)\n}`\n\n### Minimal Reproduction\n\nAfter running ng serve and changing anything in the HTML file of any component.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nNode.js version v23.5.0 detected.\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 23.5.0 (Unsupported)\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.1.1\n... core, ssr\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1901.1\n@angular-devkit/build-angular       19.1.1\n@angular-devkit/core                19.1.1\n@angular-devkit/schematics          19.1.3\n@angular/animations                 19.1.2\n@angular/cli                        19.1.3\n@angular/common                     19.1.2\n@angular/compiler                   19.1.2\n@angular/compiler-cli               19.1.2\n@angular/forms                      19.1.2\n@angular/platform-browser           19.1.2\n@angular/platform-browser-dynamic   19.1.2\n@angular/platform-server            19.1.2\n@angular/router                     19.1.2\n@schematics/angular                 19.1.3\nrxjs                                7.8.1\ntypescript                          5.5.4\nzone.js                             0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29435","RelatedDescription":"Closed issue \"[plugin:vite:import-analysis] Failed to resolve import \"./chunk-NYDFRQ4Q.js\" from \".angular/vite-root/sgn/main.js\". Does the file exist?\" (#29435)"},{"Id":"2802185634","IsPullRequest":true,"CreatedAt":"2025-01-21T15:43:03","Actor":"alan-agius4","Number":"29434","RawContent":null,"Title":"ci: replace platform linux with windows 11","State":"closed","Body":"For some reason it seems all Linux tests are failing\r\n```\r\n[15:25:13] I/testLogger - [chrome 132 Linux #01] PID: 17353\r\n[chrome 132 Linux #01] Specs: /tmp/angular-cli-e2e-HZAJ55/e2e-test/test-project/e2e/src/app.e2e-spec.ts\r\n[chrome 132 Linux #01]\r\n[chrome 132 Linux #01] [15:24:49] I/sauce - Using SauceLabs selenium server at https://ondemand.saucelabs.com:443/wd/hub\r\n[chrome 132 Linux #01] Jasmine started\r\n[chrome 132 Linux #01] [15:25:10] E/protractor - Could not find Angular on page http://localhost:2000/ : retries looking for angular exceeded\r\n```\r\nhttps://github.com/angular/angular-cli/actions/runs/12890037755/job/35938861009\r\n","Url":"https://github.com/angular/angular-cli/pull/29434","RelatedDescription":"Closed or merged PR \"ci: replace platform linux with windows 11\" (#29434)"},{"Id":"2801920397","IsPullRequest":true,"CreatedAt":"2025-01-21T15:36:34","Actor":"alan-agius4","Number":"29429","RawContent":null,"Title":"fix(@angular/build): replace deprecation of `i18n.baseHref` with a warning","State":"closed","Body":"In certain scenarios, users build applications with the same `baseHref` when using i18n, primarily for deploying localized applications across multiple domains. To address this, we are removing the deprecation of `i18n.baseHref` and will revisit potential options as part of https://github.com/angular/angular-cli/issues/29111\r\n\r\nInstead of deprecating `i18n.baseHref`, we now issue a warning when it is used with SSR, as this may lead to undefined behavior.\r\n\r\nCloses #29396\r\n","Url":"https://github.com/angular/angular-cli/pull/29429","RelatedDescription":"Closed or merged PR \"fix(@angular/build): replace deprecation of `i18n.baseHref` with a warning\" (#29429)"},{"Id":"2802050448","IsPullRequest":true,"CreatedAt":"2025-01-21T15:36:23","Actor":"alan-agius4","Number":"29431","RawContent":null,"Title":"refactor: reduce dependencies on `@angular-devkit/core`","State":"closed","Body":"By converting schemas from TypeScript `interfaces` to `types`, we can minimize the reliance on `json.JsonObject`. This approach avoids the error \"Type 'Schema' does not satisfy the constraint 'JsonObject'\" caused by the missing index signature for type 'string' in 'Schema'.","Url":"https://github.com/angular/angular-cli/pull/29431","RelatedDescription":"Closed or merged PR \"refactor: reduce dependencies on `@angular-devkit/core`\" (#29431)"},{"Id":"2801972642","IsPullRequest":true,"CreatedAt":"2025-01-21T15:17:40","Actor":"alan-agius4","Number":"29430","RawContent":null,"Title":"test: update saucelabs browsers versions","State":"closed","Body":"Bump versions to latests\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29430","RelatedDescription":"Closed or merged PR \"test: update saucelabs browsers versions\" (#29430)"},{"Id":"2802056952","IsPullRequest":false,"CreatedAt":"2025-01-21T14:49:10","Actor":"ChristianKlimabrz","Number":"29432","RawContent":null,"Title":"Source Maps Missing When AoT is Disabled","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nDescription:\nAfter upgrading Angular, Source Maps are not generated if \"aot\": false is set in the configuration, even though \"sourceMap\": true is specified. With \"aot\": true, the Source Maps appear as expected.\n\nSteps to Reproduce:\n\nSet \"aot\": false in [angular.json]\nRun the build command\nObserve that no Source Maps are generated\nExpected Behavior:\nSource Maps should be generated regardless of the AoT setting.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.1.3\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router, service-worker\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1901.3\n@angular-devkit/build-angular     19.1.3\n@angular-devkit/core              19.1.2\n@angular-devkit/schematics        19.1.2\n@angular/cdk                      19.1.0\n@angular/cli                      19.1.3\n@angular/material                 19.1.0\n@angular/material-luxon-adapter   19.1.0\n@schematics/angular               19.1.2\nng-packagr                        19.1.0\nrxjs                              7.8.1\ntypescript                        5.7.3\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29432","RelatedDescription":"Closed issue \"Source Maps Missing When AoT is Disabled\" (#29432)"},{"Id":"2801526935","IsPullRequest":true,"CreatedAt":"2025-01-21T13:29:01","Actor":"devversion","Number":"29427","RawContent":null,"Title":"[19.1.x]: Migrate more jasmine tests","State":"closed","Body":"Patch port of #29423","Url":"https://github.com/angular/angular-cli/pull/29427","RelatedDescription":"Closed or merged PR \"[19.1.x]: Migrate more jasmine tests\" (#29427)"},{"Id":"2800275016","IsPullRequest":false,"CreatedAt":"2025-01-21T13:09:39","Actor":"alan-agius4","Number":"29424","RawContent":null,"Title":"`Error: [vite] cannot find entry point module 'file://...'` on Windows with SSR","State":"closed","Body":"> I updated all my projects to use \"@angular/core\": \"19.1.2\" & \"@angular/cli\": \"19.1.3\". But now when I start the dev server using \"ng serve\" and visit the localhost:4200, the nodejs server crashes with the following error:\n> \n> `\n> NOTE: Raw file sizes do not reflect development server per-request transformations.\n>   ➜  Local:   http://localhost:4200/\n>   ➜  press h + enter to show help\n> node:internal/process/promises:394\n>     triggerUncaughtException(err, true /* fromPromise */);\n>     ^\n> \n> Error: [vite] cannot find entry point module 'file:///D:/<PROJECT_FOLDER>/.angular/vite-root/spa-near-me/@ng/component?c=src%2Fapp%2Fcomponents%2Fheader%2Fheader.component.ts%40HeaderComponent&t=1737401566323'.\n>     at fetchModule (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:51477:13)\n>     at async handleInvoke (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44166:22)\n>     at async EventEmitter.listenerForInvokeHandler (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44239:19) {`\n> \n> All my projects are using tailwind CSS and I've also enabled `provideExperimentalZonelessChangeDetection()` .\n> \n> This problem goes away if I use `ng serve --no-hmr`.\n> \n> Here are my dependencies \n> `\n> \"dependencies\": {\n>     \"@angular/animations\": \"^19.1.2\",\n>     \"@angular/common\": \"^19.1.2\",\n>     \"@angular/compiler\": \"^19.1.2\",\n>     \"@angular/core\": \"^19.1.2\",\n>     \"@angular/forms\": \"^19.1.2\",\n>     \"@angular/platform-browser\": \"^19.1.2\",\n>     \"@angular/platform-browser-dynamic\": \"^19.1.2\",\n>     \"@angular/platform-server\": \"^19.1.2\",\n>     \"@angular/router\": \"^19.1.2\",\n>     \"@angular/ssr\": \"^19.1.3\",\n>     \"express\": \"^4.18.2\",\n>     \"rxjs\": \"~7.8.0\",\n>     \"tslib\": \"^2.3.0\",\n>     \"zone.js\": \"~0.15.0\"\n>   },\n>   \"devDependencies\": {\n>     \"@angular-devkit/build-angular\": \"^19.1.3\",\n>     \"@angular/cli\": \"^19.1.3\",\n>     \"@angular/compiler-cli\": \"^19.1.2\",\n>     \"@types/express\": \"^4.17.17\",\n>     \"@types/jasmine\": \"~5.1.0\",\n>     \"@types/node\": \"^18.18.0\",\n>     \"autoprefixer\": \"^10.4.20\",\n>     \"daisyui\": \"^4.12.23\",\n>     \"jasmine-core\": \"~5.5.0\",\n>     \"karma\": \"~6.4.0\",\n>     \"karma-chrome-launcher\": \"~3.2.0\",\n>     \"karma-coverage\": \"~2.2.0\",\n>     \"karma-jasmine\": \"~5.1.0\",\n>     \"karma-jasmine-html-reporter\": \"~2.1.0\",\n>     \"lucide-angular\": \"^0.473.0\",\n>     \"postcss\": \"^8.5.1\",\n>     \"prettier\": \"^3.4.2\",\n>     \"tailwindcss\": \"^3.4.17\",\n>     \"typescript\": \"~5.7.2\",\n>     \"xmlbuilder\": \"^15.1.1\"\n>   }`\n> \n>  \n\n _Originally posted by @rabikr in [#59602](https://github.com/angular/angular/issues/59602#issuecomment-2603131259)_","Url":"https://github.com/angular/angular-cli/issues/29424","RelatedDescription":"Closed issue \"`Error: [vite] cannot find entry point module 'file://...'` on Windows with SSR\" (#29424)"},{"Id":"2799408257","IsPullRequest":true,"CreatedAt":"2025-01-21T13:09:38","Actor":"alan-agius4","Number":"29419","RawContent":null,"Title":" fix(@angular/build): correct path for `/@ng/components` on Windows","State":"closed","Body":"\r\n    \r\nThe `virtualProjectRoot` is normalized, but `sourcePath` is not, leading to mismatched path slashes and related issues.\r\n\r\nCloses #29424","Url":"https://github.com/angular/angular-cli/pull/29419","RelatedDescription":"Closed or merged PR \" fix(@angular/build): correct path for `/@ng/components` on Windows\" (#29419)"},{"Id":"2801465215","IsPullRequest":false,"CreatedAt":"2025-01-21T10:12:07","Actor":"vzarskus","Number":"29425","RawContent":null,"Title":"Route-specific app-shell: prerendering dynamic parameterized pages","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nplatform-server\n\n### Description\n\nWe have a use case, where we would like to always show the same prerendered page skeleton/carcass on a route that has dynamic parameters.\nLooking at the new Angular server documentation, I do not see such option https://angular.dev/guide/hybrid-rendering#parameterized-routes.\n\nBasically we would like `posts/:id` to return a single prerendered page for any `:id` parameter.\n\nThis page would show a loading skeleton and would let the browser handle the exact `:id` and the logic related to it.\n\n\n### Proposed solution\n\nAdd a wildcard `**` route option that would indicate to Angular that this prerendered page handles any dynamic route parameters.\n\nThese wildcards could be used as the dynamic parameter in the build time when prerendering happens. It would be the component's responsibility to correctly handle the `**` parameter and show some parameter-agnostic content (loaders/skeletons) that would then be prerendered by Angular and served by the server accordingly.\n\nHow it could look in `app.routes.server.ts`:\n```\n{\n    path: 'posts/**',\n    renderMode: RenderMode.Prerender\n},\n```\n\nExcerpt from the imaginary `post.component.ts`:\n```\nprivate subscribeRouter() { // called in ngOnInit\n    this.activatedRoute.params\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(params => {\n        const id: string = params.id;\n\n        if (id === '**') {\n          this.isCarcass = true; // post.component.html will render some skeleton/loader if isCarcass === true\n        } else {\n          this.getPost(id);\n        }\n      });\n  }\n```\n\n### Alternatives considered\n\nI am currently considering:\n1. Adding a \"fake\" route parameter that I would configure Angular to prerender. \n2. This route would render the skeleton/carcass of the page as per my use case.\n3. Serving the route myself in `server.ts` with a middleware that runs before any middleware generated by Angular CLI.\n\n`app.routes.server.ts`:\n```\n{\n    path: 'posts/:id',\n    renderMode: RenderMode.Prerender,\n    getPrerenderParams(): Promise<Record<string, string>[]> {\n      return Promise.resolve(['carcass'].map(i => ({ id: i })));\n    }, // prerenders in browser/posts/carcass\n },\n```\n\n`server.ts`:\n```\n// My new middleware\napp.use(\n  '/posts/:id',\n  express.static(join(browserDistFolder, 'posts', 'carcass', 'index.html'), {\n    maxAge: '1y',\n    redirect: false,\n  }),\n);\n\n// Default generated by Angular\napp.use(\n  express.static(browserDistFolder, {\n    maxAge: '1y',\n    index: false,\n    redirect: false,\n  }),\n);\n\n// Default generated by Angular\napp.get('/**', (req, res, next) => {\n  angularApp\n    .handle(req)\n    .then(response =>\n      response ? writeResponseToNodeResponse(response, res) : next(),\n    )\n    .catch(next);\n});\n```\n\nI have tested this approach and it works fine, however, it feels pretty hacky.","Url":"https://github.com/angular/angular-cli/issues/29425","RelatedDescription":"Open issue \"Route-specific app-shell: prerendering dynamic parameterized pages\" (#29425)"},{"Id":"2799722202","IsPullRequest":true,"CreatedAt":"2025-01-21T08:25:54","Actor":"devversion","Number":"29423","RawContent":null,"Title":"Migrate more tests to `rules_js`","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29423","RelatedDescription":"Closed or merged PR \"Migrate more tests to `rules_js`\" (#29423)"},{"Id":"2798800042","IsPullRequest":true,"CreatedAt":"2025-01-20T17:51:23","Actor":"alan-agius4","Number":"29411","RawContent":null,"Title":"fix(@angular/ssr): unblock route extraction with `withEnabledBlockingInitialNavigation`","State":"closed","Body":"\r\nThis fix ensures that route extraction is not blocked when `withEnabledBlockingInitialNavigation` is used.\r\n\r\nCloses #29400\r\n","Url":"https://github.com/angular/angular-cli/pull/29411","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): unblock route extraction with `withEnabledBlockingInitialNavigation`\" (#29411)"},{"Id":"2799442474","IsPullRequest":false,"CreatedAt":"2025-01-20T15:17:31","Actor":"denisyilmaz","Number":"29420","RawContent":null,"Title":"Since 19.1: `CommonEngine` SSR App crashing in 19.1 when `UrlMatcher` is used","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0\n\n### Description\n\nCommit 6edb908837 introduced a error message to indicate that `UrlMatcher` is not supported with SSR.\nAfter further discussion in  angular/angular-cli#29384 @alan-agius4 described that moving back to the `CommonEngine` might solve the issue, as only the `AngularNodeAppEngine` does not support the `UrlMatcher` in SSR Mode.\n\n\n\n### Minimal Reproduction\n\nUnfortunately this is not resolving the issue. I created the following reproduction which shows that both applications (either with `CommonEngine` or `AngularNodeAppEngine`) are crashing as soon as a matcher function is used in the Router Config.\n\nhttps://github.com/ynmstudio/bug-angular-19.1-commonengine-matcher-crash\n\n*CommonEngine*\n1. `cd repro-app-commonengine`\n2. `npm install`\n3. `npm start`\n\n*AngularNodeAppEngine*\n1. `cd repro-app-appengine`\n2. `npm install`\n3. `npm start`\n\n\n\n### Exception or Error\nboth applications fail with:\n\n```text\nError(s) occurred while extracting routes:\n- The route '/' uses a route matcher which is not supported.\n- The route '/' uses a route matcher which is not supported.\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@angular/ssr                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29420","RelatedDescription":"Closed issue \"Since 19.1: `CommonEngine` SSR App crashing in 19.1 when `UrlMatcher` is used\" (#29420)"},{"Id":"2799485801","IsPullRequest":true,"CreatedAt":"2025-01-20T15:17:29","Actor":"alan-agius4","Number":"29421","RawContent":null,"Title":"fix(@angular/ssr): prevent route matcher error when SSR routing is not used","State":"closed","Body":"\r\n\r\nAlthough route matchers are not supported with the SSR Routing API, they still function with the legacy `CommonEngine`. Therefore, no error should be issued in this case.\r\n\r\nCloses #29420","Url":"https://github.com/angular/angular-cli/pull/29421","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): prevent route matcher error when SSR routing is not used\" (#29421)"},{"Id":"2799393626","IsPullRequest":true,"CreatedAt":"2025-01-20T14:30:16","Actor":"devversion","Number":"29416","RawContent":null,"Title":"[19.1.x] build: delete npm archive accidentally committed","State":"closed","Body":"This archive was accidentally committed and should be deleted.","Url":"https://github.com/angular/angular-cli/pull/29416","RelatedDescription":"Closed or merged PR \"[19.1.x] build: delete npm archive accidentally committed\" (#29416)"},{"Id":"2799402020","IsPullRequest":true,"CreatedAt":"2025-01-20T14:23:11","Actor":"alan-agius4","Number":"29418","RawContent":null,"Title":"docs: release notes for the v19.1.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29418","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.3 release\" (#29418)"},{"Id":"2799393973","IsPullRequest":true,"CreatedAt":"2025-01-20T14:21:08","Actor":"alan-agius4","Number":"29417","RawContent":null,"Title":"Bump version to \"v19.1.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29417","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.3\" with changelog.\" (#29417)"},{"Id":"2798505489","IsPullRequest":true,"CreatedAt":"2025-01-20T13:29:58","Actor":"angular-robot","Number":"29407","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29407","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29407)"},{"Id":"2799102190","IsPullRequest":true,"CreatedAt":"2025-01-20T13:29:08","Actor":"devversion","Number":"29413","RawContent":null,"Title":"build: delete npm archive accidentally committed","State":"closed","Body":"This archive was accidentally commited and should be deleted.","Url":"https://github.com/angular/angular-cli/pull/29413","RelatedDescription":"Closed or merged PR \"build: delete npm archive accidentally committed\" (#29413)"},{"Id":"2799259322","IsPullRequest":true,"CreatedAt":"2025-01-20T13:21:34","Actor":"alan-agius4","Number":"29415","RawContent":null,"Title":"refactor(@angular/build): Invoke `destroyAngularServerApp` after module invalidation","State":"open","Body":"The previous approach of calling it beforehand is no longer required.\r\n","Url":"https://github.com/angular/angular-cli/pull/29415","RelatedDescription":"Open PR \"refactor(@angular/build): Invoke `destroyAngularServerApp` after module invalidation\" (#29415)"},{"Id":"2799172724","IsPullRequest":true,"CreatedAt":"2025-01-20T12:43:38","Actor":"alan-agius4","Number":"29414","RawContent":null,"Title":"fix(@angular/ssr): properly manage catch-all routes with base href","State":"open","Body":"This fix ensures that catch-all routes (e.g., wildcard routes like `**`) are handled correctly when a base href is configured in an Angular SSR application.\r\n\r\nCloses #29397","Url":"https://github.com/angular/angular-cli/pull/29414","RelatedDescription":"Open PR \"fix(@angular/ssr): properly manage catch-all routes with base href\" (#29414)"},{"Id":"2798755122","IsPullRequest":true,"CreatedAt":"2025-01-20T11:47:28","Actor":"alan-agius4","Number":"29409","RawContent":null,"Title":"fix(@angular/build): resolve incorrect component ID collision warning","State":"closed","Body":"This warning was mistakenly triggered when making component changes, even outside of Hot Module Replacement (HMR).\r\n\r\nCloses #29408\r\n","Url":"https://github.com/angular/angular-cli/pull/29409","RelatedDescription":"Closed or merged PR \"fix(@angular/build): resolve incorrect component ID collision warning\" (#29409)"},{"Id":"2799005340","IsPullRequest":false,"CreatedAt":"2025-01-20T11:28:23","Actor":"AmadejBukorovic","Number":"29412","RawContent":null,"Title":"Relative media path resolution for url(), when using a SCSS mixin, requires a path relative to mixin file","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nI apologize if this might not be considered a bug, but rather a future improvement. I opted for a bug because the behavior has changed since v17, and I couldn't find any mentions of intentional change, which is not to say there might have been. \n\nThe issue is specific to the new `@angular-devkit/build-angular:application` builder, and a change that seems to have occurred with Angular v18, and is still present in v19.  \n\nThe issue being that the resolution behavior for relatively referenced media files (resource), used with url(), when calling SCSS mixins, seems to have changed. I'm talking about the rebasing, fingerprinting and copying of image files to the output folder, when building an application.\n\nPreviously, using v17 and the new `@angular-devkit/build-angular:application` builder, as well as the webpack based builder in prior versions, the relative path to the media file had to be relative to the SCSS in which it was \"declared\", even when passing the path to SCSS mixin in another location, should that mixin end up being the one that contains the CSS url() declaration.\n\nE.g., having a simple mixin such as the one below\n```\n@mixin icon-size-24($icon-path) {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  background-image: url($icon-path);\n}\n```\n\nWould require that it's called with a relative path based on the calling file, regardless of the mixin location. \n\nUsing such a mixin inside application and/or component stylesheet would require the relative path to written based on that file's location, and not the location of the mixin. E.g.:\n```\n@use '../../../../shared-styles';\n\n.icon-container-1 {\n  // The background url needs to be relative to the entry caller:\n  background-image: url('../../../../shared-styles/resources/add_a_photo.svg');\n}\n.icon-container-2 {\n  @include shared-styles.icon-size-24('../../../../shared-styles/resources/add_a_photo.svg');\n}\n```\n\nSuch resolution behavior is still present when using the old, webpack based `@angular-devkit/build-angular:browser`, as well as when creating libraries using the `@angular-devkit/build-angular:ng-packagr` builder. It worked using the new `@angular-devkit/build-angular:application` builder` in version 17.\n\nBut since v18, in case of the `@angular-devkit/build-angular:application` builder, the required path that is passed to the mixins needs to be relative to the mixin location, presumably because that's where the style using the url() is located. Meaning the above code needs to change to e.g.: \n\n```\n@use '../../../../shared-styles';\n\n.icon-container-1 {\n  // The background url needs to be relative to the entry caller:\n  background-image: url('../../../shared-styles/resources/add_a_photo.svg');\n}\n\n.icon-container-2 {\n  // Same file being referenced as above, but because we are calling a mixin that contains the style declaration using url(), \n  // the path needs to be written based on the called mixin location.\n  @include shared-styles.icon-size-24('../resources/add_a_photo.svg');\n}\n```\n\nI think the new behavior, compared to the previous one, has negative side effects:\n- requires awareness of the location of the file containing the mixin, which can be intentionally obscured by using SCSS barrel files and forwarding as a mean to decrease coupling (the mixin could in fact be part of a library, being consumed by the workspace, and any change to the inner structure of the SCSS files can force the consumers to have to rewrite their file paths)\n- is different from the behavior of ng-packgr, preventing the use of path mapping to the source of libraries when building applications\n- potentially more confusing as it's inconsistent across the builders (e.g. ng-packgr), and because you might end up with multiple references of the same source of icon files, with a very different base, inside the same SCSS file\n\nI realize the above points might not really matter in terms of officially supported / intended behavior. Personally, I think the new inconsistency between `@angular-devkit/build-angular:ng-packagr` and  `@angular-devkit/build-angular:application` is the most problematic, since you effectively can't consume libraries in your workspace via their source, instead of build output, in applications that you also have in the same workspace. Well, you can, provided you either avoid such mixins completely, or turn off css inlining for libraries.\n\n### Minimal Reproduction\n\nYou can checkout https://github.com/AmadejBukorovic/ng-18-mixin-resource-resolve. The repository contains an application and library, which the application depends upon, showcasing the differences mentioned above.\n\nRun `npm run build` to build the library and consuming application successfully. The changes in Angular v18+ have no direct effect on this behavior, when consuming libraries from the workspace via build outputs, other than the obvious differences in how to correctly write relative paths for `url()`.\n\nRun `ng serve`, which will fail as it attempts to utilize the `tsconfig.app-dev.json` to bypass the requirement to build the dependant library for development purposes (if you will). This fails due to differences in the behavior of SCSS resource resolution between different builders. Something that is not an issue in v17 and prior.\n\n\n\n### Exception or Error\n\n```text\nX [ERROR] Could not resolve \"../../../shared-styles/resources/add_a_photo.svg\" [plugin angular-css-resource]\n\n    projects/sample-app/src/styles.scss:9:24:\n      9 │ ...image: url(\"../../../shared-styles/icon||file:../../../shared-st...\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  Preprocessor stylesheets may not show the exact file location of the error.\n```\n\n### Your Environment\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29412","RelatedDescription":"Open issue \"Relative media path resolution for url(), when using a SCSS mixin, requires a path relative to mixin file\" (#29412)"},{"Id":"2798797343","IsPullRequest":true,"CreatedAt":"2025-01-20T10:06:28","Actor":"angular-robot","Number":"29410","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.20.0` -> `8.21.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.20.0/8.21.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.20.0` -> `8.21.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.20.0/8.21.0) |\n| [quicktype-core](https://redirect.github.com/quicktype/quicktype) | devDependencies | patch | [`23.0.170` -> `23.0.171`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.170/23.0.171) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.8` -> `6.0.11`](https://renovatebot.com/diffs/npm/vite/6.0.8/6.0.11) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.8` -> `6.0.11`](https://renovatebot.com/diffs/npm/vite/6.0.8/6.0.11) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.21.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8210-2025-01-20)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.20.0...v8.21.0)\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[no-duplicate-enum-values] handle template literal ([#&#8203;10675](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10675))\n-   **eslint-plugin:** \\[no-base-to-string] don't crash for recursive array or tuple types ([#&#8203;10633](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10633))\n-   **eslint-plugin:** \\[no-for-in-array] report on any type which may be an array or array-like ([#&#8203;10535](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10535))\n-   **eslint-plugin:** check JSX spread elements for misused spread usage ([#&#8203;10653](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10653))\n-   **eslint-plugin:** \\[no-unnecessary-type-arguments] handle type args on jsx ([#&#8203;10630](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10630))\n\n##### ❤️ Thank You\n\n-   Ronen Amiel\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.21.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8210-2025-01-20)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.20.0...v8.21.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.171`](https://redirect.github.com/quicktype/quicktype/compare/29bb8160660a7daa2a837ac0cb1e92f99729ad8e...37320e76f718b2778f90db2a89cfd69a078fb980)\n\n[Compare Source](https://redirect.github.com/quicktype/quicktype/compare/29bb8160660a7daa2a837ac0cb1e92f99729ad8e...37320e76f718b2778f90db2a89cfd69a078fb980)\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.11`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small6011-2025-01-21-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.10...v6.0.11)\n\n-   fix: `preview.allowedHosts` with specific values was not respected ([#&#8203;19246](https://redirect.github.com/vitejs/vite/issues/19246)) ([aeb3ec8](https://redirect.github.com/vitejs/vite/commit/aeb3ec84a288d6be227a1284607f13428a4f14a1)), closes [#&#8203;19246](https://redirect.github.com/vitejs/vite/issues/19246)\n-   fix: allow CORS from loopback addresses by default ([#&#8203;19249](https://redirect.github.com/vitejs/vite/issues/19249)) ([3d03899](https://redirect.github.com/vitejs/vite/commit/3d038997377a30022b6a6b7916e0b4b5d8b9a363)), closes [#&#8203;19249](https://redirect.github.com/vitejs/vite/issues/19249)\n\n### [`v6.0.10`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small6010-2025-01-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.9...v6.0.10)\n\n-   fix: try parse `server.origin` URL ([#&#8203;19241](https://redirect.github.com/vitejs/vite/issues/19241)) ([2495022](https://redirect.github.com/vitejs/vite/commit/2495022420fda05ee389c2dcf26921b21e2aed3b)), closes [#&#8203;19241](https://redirect.github.com/vitejs/vite/issues/19241)\n\n### [`v6.0.9`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small609-2025-01-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.8...v6.0.9)\n\n-   fix!: check host header to prevent DNS rebinding attacks and introduce `server.allowedHosts` ([bd896fb](https://redirect.github.com/vitejs/vite/commit/bd896fb5f312fc0ff1730166d1d142fc0d34ba6d))\n-   fix!: default `server.cors: false` to disallow fetching from untrusted origins ([b09572a](https://redirect.github.com/vitejs/vite/commit/b09572acc939351f4e4c50ddf793017a92c678b1))\n-   fix: verify token for HMR WebSocket connection ([029dcd6](https://redirect.github.com/vitejs/vite/commit/029dcd6d77d3e3ef10bc38e9a0829784d9760fdb))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29410","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29410)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2803262756","IsPullRequest":true,"CreatedAt":"2025-01-22T03:12:20","Actor":"essjay05","Number":"30364","RawContent":null,"Title":"fix(material/chips): update chip-row disabled chip to be focused","State":"open","Body":"Updates chip-row element of Angular Components Chip Component to be focusable even if the chip is disabled. This allows the chip to be accessed via screenreader and read aloud as a disabled chip.\r\n\r\nFixes b/380373844","Url":"https://github.com/angular/components/pull/30364","RelatedDescription":"Open PR \"fix(material/chips): update chip-row disabled chip to be focused\" (#30364)"},{"Id":"2802906542","IsPullRequest":true,"CreatedAt":"2025-01-21T22:05:02","Actor":"crisbeto","Number":"30363","RawContent":null,"Title":"fix(material/select): switch away from animations module","State":"open","Body":"Reworks the select so it doesn't depend on the animations module.","Url":"https://github.com/angular/components/pull/30363","RelatedDescription":"Open PR \"fix(material/select): switch away from animations module\" (#30363)"},{"Id":"2802474857","IsPullRequest":false,"CreatedAt":"2025-01-21T17:53:52","Actor":"bmayen","Number":"30362","RawContent":null,"Title":"bug(select): Non-native Selects do not announce state properly with screen readers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nReported by our accessibility team:\n\"When the selects are activated the state is not communicated. In JAWS neither state is communicated, in NVDA only the collapsed state is communicated.\"\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nShould announce different states on state changes\n\n### Actual Behavior\n\nIn JAWS neither state is communicated, in NVDA only the collapsed state is communicated\n\n### Environment\n\n- Angular: 18.x\n- CDK/Material: 18.x\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows/OSX\n","Url":"https://github.com/angular/components/issues/30362","RelatedDescription":"Open issue \"bug(select): Non-native Selects do not announce state properly with screen readers\" (#30362)"},{"Id":"2802264350","IsPullRequest":false,"CreatedAt":"2025-01-21T16:12:01","Actor":"Fernando-Zhunio","Number":"30361","RawContent":null,"Title":"ANativeDateAdapter class parse method error","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the parse method he takes two arguments, the second which is the format does not use it.\nWhen the mat-date-range-input component is called and value is entered and the format is set to the non-default (MM/dd/yyyy) it is repositioned.\nIt only happens when editing without the date picker.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. A format of 'dd/MM/yyyy' is set in the module providers and the Locate is set to 'es-ES'.\n2. The mat-date-range-input component is rendered.\n3. A date range is selected using the selector in the ui.\n4. Any date is edited in the input on that date.\n5. The day changes position in the competitor blur event (BUG), as it calls the event parse before the blur the date does not take it with the format it is\n\n### Expected Behavior\n\nIt should respect the format defined in the providers\n\n### Actual Behavior\n\nThe month with the day in the blur event of the mentioned component is repositioned\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows):\n","Url":"https://github.com/angular/components/issues/30361","RelatedDescription":"Open issue \"ANativeDateAdapter class parse method error\" (#30361)"},{"Id":"2801678872","IsPullRequest":true,"CreatedAt":"2025-01-21T14:10:40","Actor":"crisbeto","Number":"30360","RawContent":null,"Title":"fix(material/datepicker): switch away from animations module","State":"closed","Body":"Reworks the datepicker so it no longer depends on the animations module.","Url":"https://github.com/angular/components/pull/30360","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): switch away from animations module\" (#30360)"},{"Id":"2791906861","IsPullRequest":false,"CreatedAt":"2025-01-21T13:26:33","Actor":"jolenius","Number":"30340","RawContent":null,"Title":"bug(COMPONENT): chip with autocomplete adds two chips when selecting filtered option using keyboard","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen combining chips with the autocomplete component you get two entries of chips when filtering the list of options by typing a few characters and then selecting an option by using your keyboard (arrow down and enter).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/2qghuqyq?file=src%2Fexample%2Fchips-autocomplete-example.ts\n(stackblitz fetched from the Chips Autocomplete example at https://material.angular.io/components/chips/examples)\nSteps to reproduce:\n1. Enter a few characters to start filtering the autocomplete list\n2. Use the keyboard to select a option (up/down arrow followed by enter)\n\n\n### Expected Behavior\n\nOnly the selected option from the autocomplete list is added the the chips\n\n### Actual Behavior\n\nThe selected option from the autocomplete list and the current value of the input field are added as two sepparate entries to the chips\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Linux (RHEL 8)\n","Url":"https://github.com/angular/components/issues/30340","RelatedDescription":"Closed issue \"bug(COMPONENT): chip with autocomplete adds two chips when selecting filtered option using keyboard\" (#30340)"},{"Id":"2794929495","IsPullRequest":false,"CreatedAt":"2025-01-21T13:16:42","Actor":"richardsengers","Number":"30349","RawContent":null,"Title":"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nM2\n\n### Description\n\nA mat-dialog has a default of 560px as a max-width. \nOffcourse we can override this behaviour but to me it looks like it's a wrong default because all dialogs are max 560px when changing to the new m3\n\n<img width=\"737\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/964023b0-cb10-4cc7-b000-a23a7218f219\" />\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/tjvfafte-mzvlpzlp?file=src%2Fexample%2Fdialog-overview-example.ts\nSteps to reproduce:\n1. Make screen larger then 560px, you will notice the dialog isn't getting larger\n\n\n### Expected Behavior\n\nWhen a width is set to the dialog, the dialog should be as wide as the given width\n\n### Actual Behavior\n\nThe dialog has a max width of 560px\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30349","RelatedDescription":"Closed issue \"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px\" (#30349)"},{"Id":"2797601036","IsPullRequest":false,"CreatedAt":"2025-01-21T13:14:36","Actor":"alanpurple","Number":"30353","RawContent":null,"Title":"docs-bug(ALL): No examples of how to apply theme html-element-wise","State":"closed","Body":"### Documentation Feedback\n\nthere is no way to apply defined primary, secondary, error, etc   color to components\n\nfor one, there is no example how to apply secondary or tertiary color to material button\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30353","RelatedDescription":"Closed issue \"docs-bug(ALL): No examples of how to apply theme html-element-wise\" (#30353)"},{"Id":"2799275893","IsPullRequest":true,"CreatedAt":"2025-01-21T13:10:16","Actor":"crisbeto","Number":"30356","RawContent":null,"Title":"fix(material/autocomplete): switch away from animations module","State":"closed","Body":"Switches the autocomplete away from the animations module. The animations are implemented using CSS instead.","Url":"https://github.com/angular/components/pull/30356","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): switch away from animations module\" (#30356)"},{"Id":"2797786254","IsPullRequest":true,"CreatedAt":"2025-01-21T13:04:52","Actor":"crisbeto","Number":"30354","RawContent":null,"Title":"fix(material/form-field): remove dependency on animations module","State":"closed","Body":"Switches the form field to use CSS for the subscript animations, instead of going through the animations module.","Url":"https://github.com/angular/components/pull/30354","RelatedDescription":"Closed or merged PR \"fix(material/form-field): remove dependency on animations module\" (#30354)"},{"Id":"2799093523","IsPullRequest":true,"CreatedAt":"2025-01-21T12:53:17","Actor":"crisbeto","Number":"30355","RawContent":null,"Title":"fix(cdk/text-field): clear cached line height on resize","State":"closed","Body":"Clears the cached heights in the autosize directive when the window is resized since they may change.","Url":"https://github.com/angular/components/pull/30355","RelatedDescription":"Closed or merged PR \"fix(cdk/text-field): clear cached line height on resize\" (#30355)"},{"Id":"2800057420","IsPullRequest":false,"CreatedAt":"2025-01-21T12:39:40","Actor":"luvcraft1228","Number":"30358","RawContent":null,"Title":"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.14\n\n### Description\n\nIn a space constrained layout, submenus will occasionally overlap with parent menus. When clicking a parent item with the intention of opening a submenu, the submenu will appear over the parent item and seem to receive a mouse event, thereby selecting it. This behavior is unexpected and could lead to accidental user actions.\n\n### Reproduction\n\nReproduction\nSteps to reproduce:\n\nhttps://material.angular.io/components/menu/examples\nPick mat-menu\nIn dev tools set screen to 256px wide\nClick nested menu -> Animal index -> click near arrow on vertebrates\nMammals will be selected accidentally\n\nPlease see reference to [old issue](https://github.com/angular/components/issues/26306) (v14). Seems to be the same problem. Was fixed in v18.\n\n\n\n\n\n### Expected Behavior\n\n\nExpected Behavior\nSubmenu should not have an item selected as a result of a click on its parent.\n\n![Image](https://github.com/user-attachments/assets/f95787e4-76f9-4272-9480-e0956907e63b)\n\n### Actual Behavior\n\nActual Behavior\nSubmenu has an item selected as a result of a click on its parent.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.0.5\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows / Android\n","Url":"https://github.com/angular/components/issues/30358","RelatedDescription":"Closed issue \"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent\" (#30358)"},{"Id":"2799605427","IsPullRequest":false,"CreatedAt":"2025-01-21T12:33:29","Actor":"sherinkd","Number":"30357","RawContent":null,"Title":"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\nEntered Date: 1999-01-01\nExpected Date: 01/01/1999\n\n![Image](https://github.com/user-attachments/assets/8becb99d-3805-4af9-8851-47e4d8b661dc)\n\n### Reproduction\n\nStep 1: Enter Date: 1999-01-01\nStep 2: blur out\n\n\n### Expected Behavior\n\nExpected Date: 01/01/1999\n\n### Actual Behavior\n\nDisplayed Date: 10/9/1999\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material:  19.0.4\n- Browser(s): any browser\n- Operating System (e.g. Windows, macOS, Ubuntu): any OS\n","Url":"https://github.com/angular/components/issues/30357","RelatedDescription":"Closed issue \"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\" (#30357)"},{"Id":"2800452085","IsPullRequest":false,"CreatedAt":"2025-01-21T00:18:45","Actor":"zohar-chiprut","Number":"30359","RawContent":null,"Title":"Package.json contains duplicate key in exports","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDuplicat key might cause unexpected behavior to consumers importing the package.\n```\n{\n  \"name\": \"@angular/material\",\n  \"version\": \"19.1.0\",\n  \"description\": \"Angular Material\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/angular/components.git\"\n  },\n...\n  \"exports\": {\n      \".\": {\n        \"sass\": \"./_index.scss\",\n        \"types\": \"./index.d.ts\",\n        \"default\": \"./fesm2022/material.mjs\"\n      },\n      \"./theming\": {\n        \"sass\": \"./_theming.scss\"\n      },\n      \"./_theming\": {                              //duplicate key\n        \"sass\": \"./_theming.scss\".   \n      },\n  ...\n  }\n...\n}\n```\n\n### Reproduction\n\nKInorder to reproduce the issuew just npm install @angular/material@19.0.1 and view exports files in package.json, it contains duplicate key \"./theming\"\n\n### Expected Behavior\n\nRemove duplicate keys in exports filed in package.json\n\n### Actual Behavior\n\nthe package contains duplicate key in exports prop\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.1.0\n- Browser(s): Nodejs/ pnpm install\n- Operating macOs\n","Url":"https://github.com/angular/components/issues/30359","RelatedDescription":"Open issue \"Package.json contains duplicate key in exports\" (#30359)"},{"Id":"2791729100","IsPullRequest":false,"CreatedAt":"2025-01-20T13:37:05","Actor":"codestrelaoffice","Number":"30338","RawContent":null,"Title":"bug(COMPONENT): Date Picker Icon Comes on a new Line","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the datepicker calendar icon comes in new line on.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nCalendar icon should come in the same line \n\n### Actual Behavior\n\nIt should come in same line as the date .\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30338","RelatedDescription":"Closed issue \"bug(COMPONENT): Date Picker Icon Comes on a new Line\" (#30338)"},{"Id":"2792116549","IsPullRequest":false,"CreatedAt":"2025-01-20T10:10:40","Actor":"naaajii","Number":"30341","RawContent":null,"Title":"setting up repository locally always create issues on Windows.","State":"closed","Body":"### Documentation Feedback\n\nI don't have my own system so I use my work laptop to contribute and I'm always juggling between different laptops so I have to setup again and again. Setting up repository on Ubuntu seems fairly easy & works out of the box but Windows bothers alot. I have been using a Windows 11 for past few months & whenever I find free time to contribute I struggle to run on Windows 10 & 11 all the time.\n\nI have been provided a new laptop & I'm facing issues such as:\n\n1. error Couldn't find match for <package hash> in \"refs/heads/main\" for \"https://github.com/angular/dev-infra-private-ng-dev-builds.git\".\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command. \n\nSometimes gets fixed on yarn cache clear, mostly happens whenever I update the work and run yarn after a long time.\n\n2. iBazel [1:54PM]: Error writing failure to stdin: write |1: file already closed\n\nhappens all the time, gets fixed sometimes when I delete bazel folders and end all processes from task manager.\n\n3. iBazel [1:08PM]: Error starting process: fork/exec C:\\Users\\CENTRI~1\\AppData\\Local\\Temp\\bazel_script_path4055922069.bat: %1 is not a valid Win32 application.\niBazel [1:08PM]: Run start failed fork/exec C:\\Users\\CENTRI~1\\AppData\\Local\\Temp\\bazel_script_path4055922069.bat: %1 is not a valid Win32 application.\n\nI checked the bat file and its 0kb so I'm not sure whats causing it to generate an empty file. I also have added BAZEL_SH to the environment variables. I also came across other issues where peopled claimed its caused by WSL on Windows but I have had it disabled it on both work laptops. I also have used bash and Windows command to run the project but errors are always the same.\n\n### Affected documentation page\n\nhttps://github.com/angular/components/blob/1e5663636eb38d5556f500840dd7e00dd9950b70/DEV_ENVIRONMENT.md?plain=1","Url":"https://github.com/angular/components/issues/30341","RelatedDescription":"Closed issue \"setting up repository locally always create issues on Windows.\" (#30341)"},{"Id":"2794987955","IsPullRequest":false,"CreatedAt":"2025-01-20T05:57:59","Actor":"richardsengers","Number":"30350","RawContent":null,"Title":"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working","State":"closed","Body":"\n### Description\n\nExpansion panels have a default container shape. When setting strong focus indicators, the corner of the strong focus-indicator are not rounded\n\n<img width=\"454\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ec041ad7-39e9-4e63-91f0-e4236537c07b\" />\n\nIn this example, it's just a little bit, but since we have a container-shape token, this can get worse when setting the shape to full\nhttps://m3.material.io/styles/shape/shape-scale-tokens\n\nIssue  2 \nWhen setting the container-shape token to one of the values described by m3 https://m3.material.io/styles/shape/shape-scale-tokens nothing happens. It looks more like container-shape is a true or false token instead of one of the options decribed by m3\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/lhvfsmcd?file=src%2Fstyles.scss\nSteps to reproduce:\n1. Click on the first or last panel\n\n\n### Expected Behavior\n\n1. Strong focus indicator should also be rounded \n2. Token container-shape should have one of the 7 options described by m3 \n\n### Actual Behavior\n\nStrong focus indicator do not have a rounded corner\nSetting container-shape to one of the 7 values removes the rounded corners\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30350","RelatedDescription":"Closed issue \"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working\" (#30350)"},{"Id":"2796838648","IsPullRequest":true,"CreatedAt":"2025-01-20T05:57:58","Actor":"crisbeto","Number":"30352","RawContent":null,"Title":"fix(material/expansion): inherit shape for focus indicator","State":"closed","Body":"Fixes that the focus indicator had a different shape from the header.\r\n\r\nFixes #30350.","Url":"https://github.com/angular/components/pull/30352","RelatedDescription":"Closed or merged PR \"fix(material/expansion): inherit shape for focus indicator\" (#30352)"},{"Id":"2794115737","IsPullRequest":true,"CreatedAt":"2025-01-17T21:01:31","Actor":"mmalerba","Number":"30348","RawContent":null,"Title":"fix(material/autocomplete): fix initial render logic","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30348","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): fix initial render logic\" (#30348)"},{"Id":"2793875667","IsPullRequest":true,"CreatedAt":"2025-01-17T20:47:46","Actor":"mmalerba","Number":"30347","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30347","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30347)"},{"Id":"2795786220","IsPullRequest":false,"CreatedAt":"2025-01-17T15:51:23","Actor":"bmayen","Number":"30351","RawContent":null,"Title":"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen","State":"open","Body":"### Feature Description\n\nWhen using keyboard navigation, the \"close calendar\" button is placed at the bottom of the calendar after tabbing through the other interactive elements in the component. If this button would be positioned offscreen, it should be repositioned into view to improve accessibility.\n\n### Use Case\n\nA user may increase the browser size to 200%, or the calendar may just be positioned toward the bottom of the screen, which may cause this close button to render offscreen when displayed. ","Url":"https://github.com/angular/components/issues/30351","RelatedDescription":"Open issue \"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen\" (#30351)"},{"Id":"2793752150","IsPullRequest":true,"CreatedAt":"2025-01-16T21:01:03","Actor":"mmalerba","Number":"30346","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30346","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30346)"},{"Id":"2793022046","IsPullRequest":true,"CreatedAt":"2025-01-16T15:10:00","Actor":"mmalerba","Number":"30345","RawContent":null,"Title":"Bump version to \"v19.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30345","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.0\" with changelog.\" (#30345)"},{"Id":"2792999349","IsPullRequest":true,"CreatedAt":"2025-01-16T14:58:39","Actor":"mmalerba","Number":"30344","RawContent":null,"Title":"docs: release notes for the v19.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30344","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.0 release\" (#30344)"},{"Id":"2792996624","IsPullRequest":true,"CreatedAt":"2025-01-16T14:52:31","Actor":"mmalerba","Number":"30343","RawContent":null,"Title":"Bump version to \"v19.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30343","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0\" with changelog.\" (#30343)"},{"Id":"2792945331","IsPullRequest":true,"CreatedAt":"2025-01-16T14:43:51","Actor":"mmalerba","Number":"30342","RawContent":null,"Title":"Revert \"test(material/timepicker): updates timepicker.spec.ts (#30335)\"","State":"closed","Body":"This reverts commit 0df6e0347206c2496922441812330ca0b0a15f04.","Url":"https://github.com/angular/components/pull/30342","RelatedDescription":"Closed or merged PR \"Revert \"test(material/timepicker): updates timepicker.spec.ts (#30335)\"\" (#30342)"},{"Id":"2791891364","IsPullRequest":false,"CreatedAt":"2025-01-16T07:19:10","Actor":"jolenius","Number":"30339","RawContent":null,"Title":"bug(COMPONENT): chip with autocomplete does not clear the input field after adding new chip","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen combining chips with the autocomplete component the input field isn't cleared between each entry. Despite setting the input fields value to a empty string at the end of my function that is invoked by the optionSelected event.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/2qghuqyq?file=src%2Fexample%2Fchips-autocomplete-example.ts\n(stackblitz fetched from the Chips Autocomplete example at https://material.angular.io/components/chips/examples)\nSteps to reproduce:\n1. Enter a few characters to start filtering the autocomplete list\n2. Select an item on the list by using your mouse\n\n\n### Expected Behavior\n\nAfter clicking an item from the autocomplete list the input field should be cleared\n\n### Actual Behavior\n\nThe value in the input field is unchanged \n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Linux (RHEL 8)\n","Url":"https://github.com/angular/components/issues/30339","RelatedDescription":"Open issue \"bug(COMPONENT): chip with autocomplete does not clear the input field after adding new chip\" (#30339)"},{"Id":"2790607442","IsPullRequest":true,"CreatedAt":"2025-01-15T22:04:20","Actor":"essjay05","Number":"30335","RawContent":null,"Title":"test(material/timepicker): update timepicker tests to match timepicker toggle changes","State":"closed","Body":"Updates Timepicker.spec.ts to match recent changes to Timepicker toggle having\r\na default aria-label.","Url":"https://github.com/angular/components/pull/30335","RelatedDescription":"Closed or merged PR \"test(material/timepicker): update timepicker tests to match timepicker toggle changes\" (#30335)"},{"Id":"2791020821","IsPullRequest":false,"CreatedAt":"2025-01-15T21:56:58","Actor":"mudcovered","Number":"30337","RawContent":null,"Title":"docs-bug(material): Documentation on how to use M3 styles is completely inadequate","State":"open","Body":"### Documentation Feedback\n\nThere are no examples showing how to use the overrides to generate appropriate colour schemes. As an example I was trying to mimic the -mat-toolbar azure/blue colour scheme in the angular material 19 toolbar but was unable to figure it out.\n\nThe documentation tells me what styles exist but provides no examples on how to achieve useful results.\n\nIn comparison the M2 themes which had default color decisions made this far easier for beginners.\n\nIts not clear whether this is a problem that impacts other component documentation so this could be the tip of a much larger iceberg.\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/toolbar/styling","Url":"https://github.com/angular/components/issues/30337","RelatedDescription":"Open issue \"docs-bug(material): Documentation on how to use M3 styles is completely inadequate\" (#30337)"},{"Id":"2790834149","IsPullRequest":false,"CreatedAt":"2025-01-15T20:55:39","Actor":"uttamvs-rp","Number":"30336","RawContent":null,"Title":"feat(mat-table): The column ordering in the Mat Table isn't working when the columns and rows are based on different arrays","State":"closed","Body":"### Feature Description\n\nI've got a situation where I need to use two different column arrays for the material table. The column rendering array has two properties: fieldName (which is the actual field from the backend API response) and displayName (the name that shows up in the UI). Here's a quick example:\n\n`<th mat-header-cell cdkDrag *matHeaderCellDef>{{column.displayName}}</th><td mat-cell *matCellDef=\"let element\">{{element[column.fieldName]}}</td>`\n\nSo, when I'm setting up the row, I've got this simple string array that just has the field names from the array above. This way, the actual data can connect with the table columns. Here's a quick example:\n\n`<tr mat-header-row *matHeaderRowDef=\"displayedColumnsFields\"></tr><tr mat-row *matRowDef=\"let element; columns:displayedColumnsField;\"></tr>`\n\nSo after this code change, the material column reordering isn't working anymore. Does anyone know what might be going on or how to fix it? Or is this just a bug with the Angular Material table?\n\nI've put together a working StackBlitz example here so you can get a better idea of what's going on: [StackBlitz ](https://stackblitz.com/edit/x39nz1ba?file=src%2Fexample%2Ftable-reorderable-example.ts)\n\n\n\n \n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30336","RelatedDescription":"Closed issue \"feat(mat-table): The column ordering in the Mat Table isn't working when the columns and rows are based on different arrays\" (#30336)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-22T03:30:02.576936Z","RunDurationInMilliseconds":1640}