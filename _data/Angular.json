{"Data":{"Angular-Issues":{"Issues":[{"Id":"2150166515","IsPullRequest":false,"CreatedAt":"2024-02-23T00:24:36","Actor":"linelson","Number":"54582","RawContent":null,"Title":"Container CSS Queries don't work with ::ng-deep","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nContainer CSS queries (https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_queries) don't seem to work with ::ng-deep. I know ::ng-deep is technically deprecated, but there isn't a great alternative and it's been in a weird zombie state for years per https://github.com/angular/angular/issues/25160.\r\n\r\nI would expect that ::ng-deep would either work with @container queries or documentation would state that ::ng-deep is not expected to work with container CSS queries.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/e7uwsy?file=src%2Fapp%2Fencapsulation.css\n\n### Please provide the exception or error you saw\n\n```true\nExpected: Using ::ng-deep with an @container query works **or** documentation for ::ng-deep states that it is not expected to work with container queries\r\n\r\nActual: ::ng-deep combined with @container query doesn't work.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nI'm running into this with a google-internal Angular app.\r\nAlso see linked stackblitz with Angular 17.1.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54582","RelatedDescription":"Open issue \"Container CSS Queries don't work with ::ng-deep\" (#54582)"},{"Id":"2149958745","IsPullRequest":false,"CreatedAt":"2024-02-22T21:20:25","Actor":"maxpatiiuk","Number":"54581","RawContent":null,"Title":"bug(Zone.js): removing capture:true event listener breaks .on* event listeners","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThe fix for https://github.com/angular/angular/issues/31643 introduced a bug\r\n\r\nThe following code \r\nhttps://github.com/angular/angular/blob/8e65bdc84821b23ba5e15f056321f840d38ce789/packages/zone.js/lib/common/events.ts#L580-L583 removes on* property listener when it's not supposed to.\r\nThis happens because the code, when checking whether there are no more \"capture click\" tasks remaining (`existingTasks.length === 0`), forgets to check whether there are any \"non-capture click\" tasks present\r\nThough, since on* listeners are non-capturing, maybe this code shouldn't run at all when capture:true events are removed?\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/github-6rdbwr?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```ts\r\n// Make a button\r\nconst button = document.createElement('button');\r\ndocument.body.append(button);\r\n\r\n// Set onclick property\r\nbutton.onclick = () => console.log('onclick!');\r\nconsole.log(\r\n  'See that onclick prop is set correctly: ',\r\n  (button as any).__zone_symbol__ON_PROPERTYclick\r\n);\r\n\r\n// Some unrelated code sets and removes the event listener, WITH CAPTURE:TRUE\r\nbutton.addEventListener('click', console.log, { capture: true });\r\nbutton.removeEventListener('click', console.log, { capture: true });\r\n\r\nconsole.log(\r\n  'See that onclick handler was removed (BUG!): ',\r\n  (button as any).__zone_symbol__ON_PROPERTYclick\r\n);\r\nconsole.log(\r\n  'See that the task still exists:',\r\n  (button as any).__zone_symbol__clickfalse\r\n);\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\nedit: affects Angular 17 too\r\n\r\n```yaml\r\n(running on Stackblitz, reproducible locally too, even without hot reloading)\r\n\r\n@angular/common\r\n16.2.12\r\n\r\n@angular/compiler\r\n16.2.12\r\n\r\n@angular/core\r\n16.2.12\r\n\r\n@angular/platform-browser\r\n16.2.12\r\n\r\n@types/jasmine\r\n4.3.6\r\n\r\nrxjs\r\n7.8.1\r\n\r\ntslib\r\n2.6.2\r\n\r\nzone.js\r\n0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI know that using on* is bad-practice, but it's coming from a library I rely on (for now). The capture:true events being set and removed is also from a library I rely on, so I can't easily remove these preconditions for the bug. As a workaround, I will use element ref to manually add/removeEventListener, but I am sure that there would be other places in my application affected by this bug\r\n\r\ncc @JiaLiPassion","Url":"https://github.com/angular/angular/issues/54581","RelatedDescription":"Open issue \"bug(Zone.js): removing capture:true event listener breaks .on* event listeners\" (#54581)"},{"Id":"2149888744","IsPullRequest":true,"CreatedAt":"2024-02-22T20:32:34","Actor":"atscott","Number":"54580","RawContent":null,"Title":"feat(router): Add reusable types for router guards","State":"open","Body":"This refactor makes it easier to update the return types of guards. Rather than having to track what types guards can return, which may change with new features over time, `MaybeAsync<GuardResult>` can be used instead.\r\n\r\nReviewer note: This is a separate `feat` commit from https://github.com/angular/angular/pull/45023. Doing this in a commit ahead of time makes it possible to adjust internal code ahead of the breaking change that adds a type to the `GuardResult`. This means code can be made forward-compatible first and #45023 can be merged without needing to include updates to internal code at the same time the sync happens.","Url":"https://github.com/angular/angular/pull/54580","RelatedDescription":"Open PR \"feat(router): Add reusable types for router guards\" (#54580)"},{"Id":"2149878953","IsPullRequest":true,"CreatedAt":"2024-02-22T20:25:20","Actor":"JeanMeche","Number":"54579","RawContent":null,"Title":"refactor(forms): Unified Control State Change Events","State":"open","Body":"This commit adds a global observable to subscribe to track changes around any `AbstractControl` (and its children).","Url":"https://github.com/angular/angular/pull/54579","RelatedDescription":"Open PR \"refactor(forms): Unified Control State Change Events\" (#54579)"},{"Id":"2149852445","IsPullRequest":true,"CreatedAt":"2024-02-22T20:07:40","Actor":"atscott","Number":"54578","RawContent":null,"Title":"fix(core): ensure change detection runs in a reasonable timeframe wit…","State":"open","Body":"…h zone coalescing\r\n\r\nZone event and run coalescing now races `requestAnimationFrame` and `setTimeout`. There are tradeoffs to both functions and racing the two gives us the benefits of both. This is explained in more detail in the jsdoc comment. This change also aligns the timing of zone coalescing with what will be used for zoneless.\r\n\r\nBREAKING CHANGE: The exact timing of change detection execution when using event or run coalescing with `NgZone` is now the first of either `setTimeout` or `requestAnimationFrame`. Code which relies on this timing (usually by accident) will need to be adjusted. If a callback needs to execute after change detection, we recommend `afterNextRender` instead of something like `setTimeout`.\r\n\r\nfixes #54544\r\nfixes #44314\r\nfixes #39854 (unverified but seems likely)\r\n","Url":"https://github.com/angular/angular/pull/54578","RelatedDescription":"Open PR \"fix(core): ensure change detection runs in a reasonable timeframe wit…\" (#54578)"},{"Id":"2149790114","IsPullRequest":true,"CreatedAt":"2024-02-22T19:27:00","Actor":"hansireit","Number":"54577","RawContent":null,"Title":"docs: add missing usage-notes","State":"open","Body":"Fixes #54228\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\n\r\nFixes the missing \"Usage Notes\" tab for the host-listener.\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #54228\r\n\r\n\r\n## What is the new behavior?\r\n\r\nUsage notes tab is now present.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/54577","RelatedDescription":"Open PR \"docs: add missing usage-notes\" (#54577)"},{"Id":"2149776394","IsPullRequest":false,"CreatedAt":"2024-02-22T19:23:11","Actor":"AnushkaSingh1","Number":"54576","RawContent":null,"Title":"how to import referece of html in ts file?","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [X] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n<div class=\"search-container\">\r\n    <div class=\"search-icon\" (click)=\"parent?.openSearchDialog()\">\r\n        <i class=\"fa fa-search\"></i>\r\n    </div>\r\n    <ng-template #searchDialogTpl>\r\n        <div class=\"search-dialog\" #searchDialog [style.height]=\"parent?.searchDialogHeight\">\r\n            <div class=\"close-icon\" (click)=\"parent?.closeSearchDialog()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </div>\r\n            <div class=\"search-input-wrapper\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"model\" [ngbTypeahead]=\"parent.search\" [resultTemplate]=\"rt\"\r\n                [inputFormatter]=\"parent.formatter\" (selectItem)=\"parent?.navigateToItem($event)\" />\r\n                <span (click)=\"parent.clearInput()\" class=\"clear-icon\" *ngIf=\"parent?.model?.length > 0\">\r\n                  \r\n                </span>\r\n              </div>\r\n                <div class=\"search-results\">\r\n                  <div class=\"dropdown-container\">\r\n                  <ng-template #rt let-r=\"result\" let-t=\"term\">\r\n                    <div class=\"list-of-objects-container\" *ngIf=\"r !== []\">\r\n                      <div class=\"list-of-objects\">[object Object]</div>\r\n                  </div>\r\n                  </ng-template>\r\n                </div>\r\n              </div>\r\n                <div class=\"grid-container\" #gridContainer *ngIf=\"parent?.searchResults && parent?.searchResults.length > 0\" appCustomScrollbar>\r\n                    <div class=\"grid-item\" *ngFor=\"let result of searchResults\">\r\n                        <div class=\"item-content\" (click)=\"parent?.navigateToItem(result)\">\r\n                          <div class=\"image-container\">\r\n                            <img [src]=\"result.attributes?.item_image[0]?.location\" alt=\"{{ result.attributes?.item_name[4]?.values }}\">\r\n                          </div>\r\n                            <div class=\"item-name\">{{ result.attributes?.item_name[4]?.value }}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"no-results\" *ngIf=\"parent?.searchResults && parent?.searchResults.length === 0 && parent?.model && parent?.model.trim() !== ''\">No results found</div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n\r\nWhat is the correct way to import this reference in my parent ts file so that all function can work properly without any warnings or errors - #searchDialogTpl\r\nthis html is a child html file.\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/54576","RelatedDescription":"Closed issue \"how to import referece of html in ts file?\" (#54576)"},{"Id":"2149674911","IsPullRequest":true,"CreatedAt":"2024-02-22T18:22:19","Actor":"JeanMeche","Number":"54575","RawContent":null,"Title":"ci: Adding myself as approver for ADEV","State":"open","Body":"This is to help the team approve changes on the new doc site.\r\n","Url":"https://github.com/angular/angular/pull/54575","RelatedDescription":"Open PR \"ci: Adding myself as approver for ADEV\" (#54575)"},{"Id":"2149630516","IsPullRequest":true,"CreatedAt":"2024-02-22T18:03:32","Actor":"bencodezen","Number":"54574","RawContent":null,"Title":"fix: add default cookie consent denied state for gtag","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nNo Google Analytics consent code existed.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nGoogle Analytics code for cookie consent is now added per the [docs](https://developers.google.com/tag-platform/security/guides/consent?consentmode=basic#gtag.js_4).\r\n\r\nThe other half of this PR that grants cookie consent can be found at https://github.com/angular/dev-infra/pull/1805\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54574","RelatedDescription":"Open PR \"fix: add default cookie consent denied state for gtag\" (#54574)"},{"Id":"2149608516","IsPullRequest":true,"CreatedAt":"2024-02-22T17:54:38","Actor":"JeanMeche","Number":"54573","RawContent":null,"Title":"docs(docs-infra): revert font-inlining","State":"open","Body":"To fix the CI/Build for ADEV.\r\n","Url":"https://github.com/angular/angular/pull/54573","RelatedDescription":"Open PR \"docs(docs-infra): revert font-inlining\" (#54573)"},{"Id":"2149568588","IsPullRequest":true,"CreatedAt":"2024-02-22T17:31:36","Actor":"atscott","Number":"54572","RawContent":null,"Title":"refactor(core): Allow dirty views to be refreshed in a loop internally","State":"open","Body":"ApplicationRef.tick has a loop that will refresh views again that have an updated signal. This change ensures views marked with the `Dirty` flag are also considered in this loop, but only inside g3 for now because this may be considered a breaking change and we need to wait for v18 to land externally.\r\n","Url":"https://github.com/angular/angular/pull/54572","RelatedDescription":"Open PR \"refactor(core): Allow dirty views to be refreshed in a loop internally\" (#54572)"},{"Id":"2149564061","IsPullRequest":true,"CreatedAt":"2024-02-22T17:29:00","Actor":"dylhunn","Number":"54571","RawContent":null,"Title":"feat(compiler): Enable template pipeline by default.","State":"open","Body":"Template pipeline is now the default template compiler.\r\n\r\nA pair of source map tests is failing, related to DI in JIT mode; I will fix and re-enable these during the preview period.","Url":"https://github.com/angular/angular/pull/54571","RelatedDescription":"Open PR \"feat(compiler): Enable template pipeline by default.\" (#54571)"},{"Id":"2149525705","IsPullRequest":true,"CreatedAt":"2024-02-22T17:05:44","Actor":"loka1","Number":"54570","RawContent":null,"Title":"docs: Update wildcard route component to PageNotFoundComponent","State":"open","Body":"This PR enhances the Angular documentation by replacing the placeholder `<component-name>` with the actual `PageNotFoundComponent` in the wildcard route configuration. This update ensures that the documentation accurately reflects the recommended practice for handling page-not-found scenarios. Additionally, it addresses the issue where HTML entities like `&lt;` were being displayed instead of the desired `<` symbol, resulting in clearer and more readable documentation for users.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n- The wildcard route component in the Angular documentation uses a placeholder `<component-name>`.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n- The wildcard route component in the Angular documentation is updated to use the `PageNotFoundComponent` instead of the placeholder.\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n- This PR ensures that the Angular documentation accurately reflects the recommended practice for handling page-not-found scenarios. It also resolves the issue where HTML entities like `&lt;` were displayed instead of the desired `<` symbol, resulting in improved readability and clarity.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/54570","RelatedDescription":"Open PR \"docs: Update wildcard route component to PageNotFoundComponent\" (#54570)"},{"Id":"2149492520","IsPullRequest":true,"CreatedAt":"2024-02-22T16:47:12","Actor":"lukasmatta","Number":"54569","RawContent":null,"Title":"docs: remove mutate function mention from asReadonly","State":"open","Body":"Remove `mutate` mention from `asReadonly` function docs","Url":"https://github.com/angular/angular/pull/54569","RelatedDescription":"Open PR \"docs: remove mutate function mention from asReadonly\" (#54569)"},{"Id":"2149430854","IsPullRequest":false,"CreatedAt":"2024-02-22T16:14:57","Actor":"hansireit","Number":"54568","RawContent":null,"Title":"Tutorial editor fails with \"SyntaxError: Unexpected token '<'...\"","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nVisit the [documentation page](https://angular.dev/tutorials/learn-angular/components-in-angular).\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/tutorials/learn-angular/components-in-angular\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nThe preview was stuck at \"Starting\" forever because the of an error in the console.\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nJust visit the mentioned tutorial.\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nA working example of the code.\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n<img width=\"3360\" alt=\"Screenshot 2024-02-22 at 17 09 17\" src=\"https://github.com/angular/angular/assets/19170734/27ca98c2-f9a8-4aa7-b416-9a6bb4dac22d\">\r\n\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n```true\r\nmain-FMRUV77V.js:35 SyntaxError: Unexpected token '<', \"<!DOCTYPE \"... is not valid JSON\r\n```\r\n\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n```true\r\nMacOS 14.2.1 (23C71)\r\nGoogle Chrome Version 122.0.6261.57\r\n```\r\n\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54568","RelatedDescription":"Open issue \"Tutorial editor fails with \"SyntaxError: Unexpected token '<'...\"\" (#54568)"},{"Id":"2149169408","IsPullRequest":true,"CreatedAt":"2024-02-22T14:12:47","Actor":"felixgeissler","Number":"54567","RawContent":null,"Title":"docs: syntax error in signal input transform example","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently there is a syntax error on [https://angular.io/guide/signal-inputs#value-transforms](https://angular.io/guide/signal-inputs#value-transforms), where `v` is not declared but `value`.\r\n\r\n## What is the new behavior?\r\nThe arrow function correctly references its argument `value`.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54567","RelatedDescription":"Open PR \"docs: syntax error in signal input transform example\" (#54567)"},{"Id":"2149029458","IsPullRequest":true,"CreatedAt":"2024-02-22T13:02:02","Actor":"JeanMeche","Number":"54566","RawContent":null,"Title":"refactor(core): transform Predicate from interface to type","State":"open","Body":"This interface should have been a type as there are no other properties\r\n\r\nAlso ADEV doesn't show the call signature on an interface : https://angular.dev/api/core/Predicate ","Url":"https://github.com/angular/angular/pull/54566","RelatedDescription":"Open PR \"refactor(core): transform Predicate from interface to type\" (#54566)"},{"Id":"2148877936","IsPullRequest":false,"CreatedAt":"2024-02-22T11:40:51","Actor":"sbaeumlisberger","Number":"54565","RawContent":null,"Title":"Add an option to keep double-quotes as \" instead escaping them as &quot; ","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Description\r\n\r\nAccording to the xml standard the escaping for double-quotes is only intended for attributes. See [https://www.w3.org/TR/xml ](https://www.w3.org/TR/xml) section 2.4. Therefore the value of the source and target tags need no escaping. The unnecessary escaping causes problem with translation tools. \r\n\r\nExample:\r\n```\r\n<source>The file path must end with &quot;.p12&quot; or &quot;.pfx&quot;</source>  \r\n```\r\nshould be\r\n```\r\n<source>The file path must end with \".p12\" or \".pfx\"</source>  \r\n```\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\n_No response_\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54565","RelatedDescription":"Open issue \"Add an option to keep double-quotes as \" instead escaping them as &quot; \" (#54565)"},{"Id":"2148678999","IsPullRequest":false,"CreatedAt":"2024-02-22T10:12:20","Actor":"rehdie","Number":"54564","RawContent":null,"Title":"Fixed peerDependency in @angular/compiler 17.2.1 to @angular/core@17.2.1 causes peer depency conflicts in new projects","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThere is a new version of @angular/core (Version 17.2.2).\r\n\r\nBut there is no new version of the @angular/compiler (latest available version is still 17.2.1).\r\n\r\nThe @angular/compiler has the following peer-depency:\r\n\r\n```\r\n  \"peerDependencies\": {\r\n    \"@angular/core\": \"17.2.1\"\r\n  },\r\n```\r\n\r\nIf you create a new project using the CLI this fixed Version of 17.2.1 causes peer dependency conflicts.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54564","RelatedDescription":"Closed issue \"Fixed peerDependency in @angular/compiler 17.2.1 to @angular/core@17.2.1 causes peer depency conflicts in new projects\" (#54564)"},{"Id":"2148626819","IsPullRequest":false,"CreatedAt":"2024-02-22T09:43:21","Actor":"HCenggel","Number":"54562","RawContent":null,"Title":"Some pages of angular.dev are missing content","State":"closed","Body":"Some pages of angular.dev are missing content, such as this page https://angular.dev/cli/build","Url":"https://github.com/angular/angular/issues/54562","RelatedDescription":"Closed issue \"Some pages of angular.dev are missing content\" (#54562)"},{"Id":"2148632002","IsPullRequest":true,"CreatedAt":"2024-02-22T09:39:07","Actor":"not-my-profile","Number":"54563","RawContent":null,"Title":"fix(forms): correct return type of AbstractControl.getRawValue","State":"open","Body":"The return type of AbstractControl.getRawValue previously was `any`, contrary to the JsDoc comment of the class, which resulted in a lack of type safety for example:\r\n\r\n    let ac: AbstractControl<{x?: boolean}, {x: boolean}>;\r\n    ac = new FormGroup({});\r\n\r\nThe above assignment previously didn't result in a type error despite the form group lacking a control for the x property.\r\n\r\nBREAKING CHANGE: AbstractControl.getRawValue has been made abstract and its return type has been changed to the TRawValue type parameter. The provided method implementation previously only returned `this.value`, this default implementation has been removed in order to fix the return type.\r\n\r\nCloses #49387.\r\n\r\n## Impact of breaking change\r\n\r\nShould be minimal since I expect that most applications don't directly extend `AbstractControl`.","Url":"https://github.com/angular/angular/pull/54563","RelatedDescription":"Open PR \"fix(forms): correct return type of AbstractControl.getRawValue\" (#54563)"},{"Id":"2148030427","IsPullRequest":true,"CreatedAt":"2024-02-22T02:02:51","Actor":"alxhub","Number":"54561","RawContent":null,"Title":"Bump version to \"v17.3.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54561","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-next.0\" with changelog.\" (#54561)"},{"Id":"2148026897","IsPullRequest":true,"CreatedAt":"2024-02-22T01:57:34","Actor":"alxhub","Number":"54560","RawContent":null,"Title":"docs: release notes for the v17.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/54560","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.2 release\" (#54560)"},{"Id":"2148023088","IsPullRequest":true,"CreatedAt":"2024-02-22T01:54:31","Actor":"alxhub","Number":"54559","RawContent":null,"Title":"Bump version to \"v17.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54559","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.2\" with changelog.\" (#54559)"},{"Id":"2148000695","IsPullRequest":true,"CreatedAt":"2024-02-22T01:35:03","Actor":"JeanMeche","Number":"54558","RawContent":null,"Title":"docs(docs-infra): Use monospace font for API reference","State":"open","Body":"fixes #52612\r\n","Url":"https://github.com/angular/angular/pull/54558","RelatedDescription":"Open PR \"docs(docs-infra): Use monospace font for API reference\" (#54558)"},{"Id":"2147996885","IsPullRequest":true,"CreatedAt":"2024-02-22T01:30:41","Actor":"JeanMeche","Number":"54557","RawContent":null,"Title":"docs(docs-infra): move Features APIs above the filter section & renam…","State":"open","Body":"…e to \"Most Common\r\n\r\nFixes #52705\r\n","Url":"https://github.com/angular/angular/pull/54557","RelatedDescription":"Open PR \"docs(docs-infra): move Features APIs above the filter section & renam…\" (#54557)"},{"Id":"2147979307","IsPullRequest":true,"CreatedAt":"2024-02-22T01:09:58","Actor":"atscott","Number":"54556","RawContent":null,"Title":"Resolvers can return redirect command","State":"open","Body":"First 2 commits are in https://github.com/angular/angular/pull/45023/commits\r\n\r\n## Commit 3\r\nReturning a `RedirectCommand` from a resolver can be interpreted as\r\ndistinctly different from regular resolved data. When a resolver returns\r\n`RedirectCommand` we can interperet this as an intention to redirect in\r\nthe same way as other guards.\r\n\r\nresolves https://github.com/angular/angular/issues/29089\r\n\r\nSeparated this into a different PR because there are another set of build failures as a result of this addition.","Url":"https://github.com/angular/angular/pull/54556","RelatedDescription":"Open PR \"Resolvers can return redirect command\" (#54556)"},{"Id":"2147947829","IsPullRequest":true,"CreatedAt":"2024-02-22T00:34:36","Actor":"JeanMeche","Number":"54555","RawContent":null,"Title":"docs(docs-infra): update angular/build-tooling","State":"open","Body":"Fixes #54476, #52603, #52734\r\n","Url":"https://github.com/angular/angular/pull/54555","RelatedDescription":"Open PR \"docs(docs-infra): update angular/build-tooling\" (#54555)"},{"Id":"2147943484","IsPullRequest":true,"CreatedAt":"2024-02-22T00:29:42","Actor":"atscott","Number":"54554","RawContent":null,"Title":"perf(common): `AsyncPipe` should not call `markForCheck` on subscription","State":"open","Body":"This commit prevents `AsyncPipe` from calling `markForCheck` when values are synchronously emit during subscription to an observable. This prevents subscriptions to `Replay` observables from needlessly walking up to the root of the view tree during template execution for each new replay observable in the template.\r\n","Url":"https://github.com/angular/angular/pull/54554","RelatedDescription":"Open PR \"perf(common): `AsyncPipe` should not call `markForCheck` on subscription\" (#54554)"},{"Id":"2147850912","IsPullRequest":true,"CreatedAt":"2024-02-21T22:53:56","Actor":"JeanMeche","Number":"54553","RawContent":null,"Title":"refactor(core): deprecate `INJECTOR` token.","State":"open","Body":"This token has purpose anymore on the API surface.\r\n\r\nDEPRECATE: `INJECTOR`\r\n","Url":"https://github.com/angular/angular/pull/54553","RelatedDescription":"Open PR \"refactor(core): deprecate `INJECTOR` token.\" (#54553)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2150086468","IsPullRequest":true,"CreatedAt":"2024-02-22T23:00:54","Actor":"clydin","Number":"27155","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure all related stylesheets are rebuilt when an import changes","State":"open","Body":"This fixes a logic error wherein some stylesheets could potentially not be rebuilt if a shared import was edited and triggered an application rebuild.\r\n\r\nCloses #27148","Url":"https://github.com/angular/angular-cli/pull/27155","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): ensure all related stylesheets are rebuilt when an import changes\" (#27155)"},{"Id":"2149981998","IsPullRequest":true,"CreatedAt":"2024-02-22T21:41:20","Actor":"dgp1130","Number":"27154","RawContent":null,"Title":"docs: release notes for the v17.2.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/27154","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.1 release\" (#27154)"},{"Id":"2149840437","IsPullRequest":true,"CreatedAt":"2024-02-22T21:33:50","Actor":"dgp1130","Number":"27153","RawContent":null,"Title":"Bump version to \"v17.2.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27153","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.1\" with changelog.\" (#27153)"},{"Id":"2149782390","IsPullRequest":true,"CreatedAt":"2024-02-22T19:54:34","Actor":"dgp1130","Number":"27150","RawContent":null,"Title":"test: generalize webpack direct E2E chunk size testing","State":"closed","Body":"This is a cherry pick of #27135 and #27138 targeting the patch (`17.2.x`) branch.\r\n\r\nThis fixes CI issues and unblocks the patch release.","Url":"https://github.com/angular/angular-cli/pull/27150","RelatedDescription":"Closed or merged PR \"test: generalize webpack direct E2E chunk size testing\" (#27150)"},{"Id":"2149788988","IsPullRequest":false,"CreatedAt":"2024-02-22T19:26:12","Actor":"karptonite","Number":"27152","RawContent":null,"Title":"Live reload with browsers-esbuild fails when serving index.html from an unexpected location","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n(Webpack builder, current version)\n\n### Description\n\nI'm using `ng serve` with the `deployUrl` option (set to `//localhost:4200/`) and the `browser-esbuild` builder. However, in our development environment, we are serving `index.html` from a remote server for reasons*.\r\n\r\n`ng serve` adds the `deployUrl` prefix to the urls to load the angular scripts, but not to the `/@vite/client` module, meaning that the browser looks in the wrong place (our remote server instead of localhost) for vite.\r\n\r\nI have fixed this for our environment by prefixing the vite client url with localhost on our remote server, but it seems odd to generate the `index.html` in this way. While I can imagine a good use case for serving `index.html` from somewhere other than localhost (we do so) I can't imagine a good reason for serving the vite module from somewhere other than the same location the angular scripts are served from.\n\n### Minimal Reproduction\n\nSet `deployUrl` to  `//localhost:4200/`\r\nSet `builder` to `browser-esbuild`\r\nrun `ng serve`\r\nlook at the contents of `index.html` as being served. While the Angular files (main.js) will have the `deployUrl` prefixed, the src for `@vite/client` will be a relative url.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.1\r\nNode: 18.18.2\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.1\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.1\r\n@angular-devkit/build-angular   17.1.1\r\n@angular-devkit/core            17.1.1\r\n@angular-devkit/schematics      17.1.1\r\n@angular/cdk                    17.1.0\r\n@schematics/angular             17.1.1\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27152","RelatedDescription":"Open issue \"Live reload with browsers-esbuild fails when serving index.html from an unexpected location\" (#27152)"},{"Id":"2149788554","IsPullRequest":false,"CreatedAt":"2024-02-22T19:25:51","Actor":"Roguyt","Number":"27151","RawContent":null,"Title":"Service Worker has a memory leak and crashes the tab","State":"open","Body":"### Command\r\n\r\npwa\r\n\r\n### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nIt used to work but I couldn't pin point any specific changes related to the Service Worker\r\n\r\n### Description\r\n\r\nHi,\r\n\r\nFor a while now I have been having a pretty random and weird issue with my service worker / angular app.\r\nSometimes, users will be stuck on a blank page while their RAM is getting eaten until crash from the Angular tab.\r\nFrom what I can see it is related to the service worker, which I only uses for the SwUpdate feature.\r\n\r\nI've been trying multiple version, configurations and I can't really seem to find a permanent solution given there is no log, no memory dump, nothing and it is randomly appearing on clients.\r\n\r\nThe only info I have is that it clears itself if you empty the storage of the app which uninstalls the service worker + removes its cache. Also if you manage to open the task manager, you can see the tab with Service Worker under it, not the regular thread.\r\nAlso I can not access the ngsw/state when this occurs.\r\n\r\nAny idea to solve this nightmare which has been haunting me for months at this point... I'm open to any suggestion at this point.\r\n\r\n### Minimal Reproduction\r\n\r\n- Setup an Angular Repository\r\n- Setup the Service Worker\r\n- Wait for the bug to randomly happens\r\n- Watch your CPU and RAM burn\r\n\r\nPackage.json\r\n```\r\n{\r\n        \"@angular/animations\": \"^15.2.10\",\r\n        \"@angular/cdk\": \"^15.2.9\",\r\n        \"@angular/common\": \"^15.2.10\",\r\n        \"@angular/compiler\": \"^15.2.10\",\r\n        \"@angular/core\": \"^15.2.10\",\r\n        \"@angular/forms\": \"^15.2.10\",\r\n        \"@angular/platform-browser\": \"^15.2.10\",\r\n        \"@angular/platform-browser-dynamic\": \"^15.2.10\",\r\n        \"@angular/router\": \"^15.2.10\",\r\n        \"@angular/service-worker\": \"^15.2.10\",\r\n        \"@fortawesome/angular-fontawesome\": \"0.12.1\",\r\n        \"@fortawesome/fontawesome-svg-core\": \"^1.2.28\",\r\n        \"@fortawesome/free-regular-svg-icons\": \"^5.13.0\",\r\n        \"@fortawesome/free-solid-svg-icons\": \"^5.13.0\",\r\n        \"@ngneat/effects\": \"^1.1.1\",\r\n        \"@ngneat/effects-ng\": \"^2.0.0\",\r\n        \"@ngneat/elf\": \"^2.3.1\",\r\n        \"@ngneat/elf-cli-ng\": \"^1.0.0\",\r\n        \"@ngneat/elf-devtools\": \"^1.2.1\",\r\n        \"@ngneat/elf-entities\": \"^4.4.3\",\r\n        \"@ngneat/elf-pagination\": \"^1.1.0\",\r\n        \"@ngneat/elf-persist-state\": \"^1.1.6\",\r\n        \"@ngneat/elf-requests\": \"^1.6.0\",\r\n        \"@ngneat/elf-state-history\": \"^1.3.0\",\r\n        \"@ngneat/until-destroy\": \"^9.2.3\",\r\n        \"@sweetalert2/ngx-sweetalert2\": \"^12.1.0\",\r\n        \"angular-calendar\": \"^0.31.0\",\r\n        \"angular-svg-round-progressbar\": \"^10.0.0\",\r\n        \"angularx-qrcode\": \"^15.0.0\",\r\n        \"date-fns\": \"^2.15.0\",\r\n        \"exceljs\": \"^4.1.1\",\r\n        \"jwt-decode\": \"^3.1.2\",\r\n        \"lodash.orderby\": \"^4.6.0\",\r\n        \"ngx-infinite-scroll\": \"^15.0.0\",\r\n        \"ngx-logger\": \"^5.0.11\",\r\n        \"ngx-toastr\": \"~16.0.2\",\r\n        \"rxjs\": \"~7.8.0\",\r\n        \"spinkit\": \"^2.0.1\",\r\n        \"sweetalert2\": \"^11.3.0\",\r\n        \"tslib\": \"^2.0.0\",\r\n        \"validator\": \"^13.9.0\",\r\n        \"zone.js\": \"~0.11.4\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@angular-devkit/build-angular\": \"^15.2.10\",\r\n        \"@angular-eslint/builder\": \"^15.2.1\",\r\n        \"@angular-eslint/eslint-plugin\": \"^15.2.1\",\r\n        \"@angular-eslint/eslint-plugin-template\": \"^15.2.1\",\r\n        \"@angular-eslint/schematics\": \"^15.2.1\",\r\n        \"@angular-eslint/template-parser\": \"^15.2.1\",\r\n        \"@angular/cli\": \"^15.2.10\",\r\n        \"@angular/compiler-cli\": \"^15.2.10\",\r\n        \"@openapitools/openapi-generator-cli\": \"^2.5.2\",\r\n        \"@types/jasmine\": \"~4.3.1\",\r\n        \"@types/lodash.orderby\": \"^4.6.7\",\r\n        \"@types/node\": \"^18.13.0\",\r\n        \"@types/validator\": \"^13.7.17\",\r\n        \"@typescript-eslint/eslint-plugin\": \"^5.43.0\",\r\n        \"@typescript-eslint/parser\": \"^5.43.0\",\r\n        \"autoprefixer\": \"^10.4.13\",\r\n        \"eslint\": \"^8.28.0\",\r\n        \"eslint-config-prettier\": \"^8.6.0\",\r\n        \"eslint-formatter-gitlab\": \"^4.0.0\",\r\n        \"eslint-plugin-prettier\": \"^4.2.1\",\r\n        \"eslint-plugin-rxjs\": \"^5.0.2\",\r\n        \"eslint-plugin-rxjs-angular\": \"^2.0.0\",\r\n        \"husky\": \"^8.0.0\",\r\n        \"jasmine-core\": \"~4.5.0\",\r\n        \"karma\": \"~6.4.1\",\r\n        \"karma-chrome-launcher\": \"~3.1.1\",\r\n        \"karma-coverage\": \"^2.2.0\",\r\n        \"karma-jasmine\": \"~5.1.0\",\r\n        \"karma-jasmine-html-reporter\": \"^2.0.0\",\r\n        \"postcss\": \"^8.4.21\",\r\n        \"prettier\": \"^2.8.4\",\r\n        \"prettier-plugin-tailwindcss\": \"^0.2.2\",\r\n        \"pretty-quick\": \"^3.1.3\",\r\n        \"tailwindcss\": \"^3.2.4\",\r\n        \"typescript\": \"~4.9.5\"\r\n    }\r\n\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.10\r\nNode: 18.17.1\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 15.2.10\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.10\r\n@angular-devkit/build-angular   15.2.10\r\n@angular-devkit/core            15.2.10\r\n@angular-devkit/schematics      15.2.10\r\n@angular/cdk                    15.2.9\r\n@schematics/angular             15.2.10\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27151","RelatedDescription":"Open issue \"Service Worker has a memory leak and crashes the tab\" (#27151)"},{"Id":"2149714376","IsPullRequest":true,"CreatedAt":"2024-02-22T19:13:35","Actor":"dgp1130","Number":"27149","RawContent":null,"Title":"Bump version to \"v17.2.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27149","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.1\" with changelog.\" (#27149)"},{"Id":"2141772638","IsPullRequest":true,"CreatedAt":"2024-02-22T18:04:52","Actor":"angular-robot","Number":"27127","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4yMDMuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27127","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#27127)"},{"Id":"2141747392","IsPullRequest":false,"CreatedAt":"2024-02-22T18:04:31","Actor":"Gourav102","Number":"27126","RawContent":null,"Title":"`ng add @angular/material@16` fails with Angular 17","State":"closed","Body":"### Command\r\n\r\nadd\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAs mentioned in [Angular 17 release blog](https://blog.angular.io/introducing-angular-v17-4d7033312e4b), Angular 17 supports Angular 16 Material. But when we run command `ng add @angular/material@16`, The package.json gets updated but end up getting an error on terminal **\"Can't find module \"node_modules/@schematics/angular/private/component.js\"**.\r\n\r\nSame command works without error if Angular Material v17 is used.\r\n\r\n### Minimal Reproduction\r\n\r\nSteps: \r\n - Create an Angular app with latest Angular version (**Angular 17.2.1**)\r\n - Use command `ng add @angular/material@16`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n\"Can't find module \"node_modules/@schematics/angular/private/component.js\"\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nOS: MacOS Sonoma v14.3.1\r\nEditor: VS Code\r\nAngular: v17.2.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27126","RelatedDescription":"Closed issue \"`ng add @angular/material@16` fails with Angular 17\" (#27126)"},{"Id":"2148220600","IsPullRequest":true,"CreatedAt":"2024-02-22T18:04:30","Actor":"clydin","Number":"27141","RawContent":null,"Title":"Revert \"refactor(@schematics/angular): remove private `/components` API\"","State":"closed","Body":"The removed APIs are needed to support `ng add @angular/material@16` with Angular CLI v17. These APIs should be able to be safely removed with v18.\r\n\r\nThis reverts commit 6a4d733ddaf67c0b93f48ff39cd2a987dcd2b024.\r\n\r\nCloses #27126","Url":"https://github.com/angular/angular-cli/pull/27141","RelatedDescription":"Closed or merged PR \"Revert \"refactor(@schematics/angular): remove private `/components` API\"\" (#27141)"},{"Id":"2145869590","IsPullRequest":false,"CreatedAt":"2024-02-22T18:03:44","Actor":"johnnygerard","Number":"27136","RawContent":null,"Title":"Vite 404 error in VS Code debug console: `Could not read source map...`","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen running `ng serve` as well as on page reload, the VS Code debug console displays a 404 error message.\r\n\r\nI was able to get rid of the error message by setting the `resolveSourceMapLocations` config option in `.vscode/launch.json`, but this fix prevents breakpoints from being hit.\r\n\r\nConfig tested:\r\n\r\n```json\r\n{\r\n  \"name\": \"ng serve\",\r\n  \"type\": \"chrome\",\r\n  \"request\": \"launch\",\r\n  \"preLaunchTask\": \"npm: start\",\r\n  \"url\": \"http://localhost:4200/\",\r\n  \"resolveSourceMapLocations\": [\r\n    \"${workspaceFolder}/**\",\r\n    \"!**/node_modules/**\"\r\n  ],\r\n}\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create default Angular project: `ng new app --defaults`\r\n2. Open in VS Code: `code app`\r\n3. Press `F5` key to use default launch configuration and check the VS Code debug console.\r\n\r\n### Exception or Error\r\n\r\n```text\r\nCould not read source map for http://localhost:4200/@vite/client: Unexpected 404 response from http://localhost:4200/@vite/client.mjs.map: <!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Cannot GET /@vite/client.mjs.map</pre>\r\n</body>\r\n</html>\r\n\r\n[vite] connecting...\r\nclient:426\r\n[vite] connected.\r\nclient:521\r\nAngular is running in development mode.\r\ncore.mjs:30679\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.2.0\r\nNode: 18.19.1\r\nPackage Manager: npm 10.4.0\r\nOS: linux x64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.0\r\n@angular-devkit/build-angular   17.2.0\r\n@angular-devkit/core            17.2.0\r\n@angular-devkit/schematics      17.2.0\r\n@angular/cli                    17.2.0\r\n@schematics/angular             17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27136","RelatedDescription":"Closed issue \"Vite 404 error in VS Code debug console: `Could not read source map...`\" (#27136)"},{"Id":"2148210960","IsPullRequest":true,"CreatedAt":"2024-02-22T18:03:43","Actor":"clydin","Number":"27140","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide Vite client code source map when loading","State":"closed","Body":"The sourcemap for the Vite client code was previously not being loaded along with the actual code. This could lead to browser 404 console messages when debugging applications.\r\n\r\ncloses #27136","Url":"https://github.com/angular/angular-cli/pull/27140","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide Vite client code source map when loading\" (#27140)"},{"Id":"2148817798","IsPullRequest":true,"CreatedAt":"2024-02-22T17:43:49","Actor":"angular-robot","Number":"27143","RawContent":null,"Title":"build: update github/codeql-action action to v3.24.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v3.24.3` -> `v3.24.4` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.24.4`](https://togithub.com/github/codeql-action/compare/v3.24.3...v3.24.4)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v3.24.3...v3.24.4)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMDMuMyIsInVwZGF0ZWRJblZlciI6IjM3LjIwMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27143","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.24.4\" (#27143)"},{"Id":"2149526575","IsPullRequest":false,"CreatedAt":"2024-02-22T17:06:14","Actor":"Carlosamouco","Number":"27148","RawContent":null,"Title":"Changing a *.less file common to multiple style bundles does not trigger rebuild for all of them in the `application` builder","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen running the `application` development server, if I have configured two style bundles in the `angular.json` that import a file common to both and if I change that common file, only on of the bundles is rebuilt and the other remains with the old content until the cache is cleared.\r\n\r\n\n\n### Minimal Reproduction\n\n1. Clone https://github.com/Carlosamouco/repro-styles-rebuild\r\n2. npm install\r\n3. ng serve\r\n4. Change the /src/themes/_common.less\r\n\r\nOnly one bundle is rebuild:\r\n![image](https://github.com/angular/angular-cli/assets/9380964/0b3ef997-a471-4da4-9ac2-20567c644817)\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.2.0\r\nNode: 20.11.1\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.0\r\n@angular-devkit/build-angular   17.2.0\r\n@angular-devkit/core            17.2.0\r\n@angular-devkit/schematics      17.2.0\r\n@angular/cli                    17.2.0\r\n@schematics/angular             17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27148","RelatedDescription":"Open issue \"Changing a *.less file common to multiple style bundles does not trigger rebuild for all of them in the `application` builder\" (#27148)"},{"Id":"2149469481","IsPullRequest":false,"CreatedAt":"2024-02-22T16:35:25","Actor":"bgotink","Number":"27147","RawContent":null,"Title":"ESBuild builders inconsistent in importing CSS vs SCSS if both files exist","State":"open","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen resolving import paths, sass doesn't require the extension to be present. The esbuild builders (`application` and `browser-esbuild`) handle these extensions inconsistently, sometimes favouring CSS over Scss if both files exist, and sometimes the other way around.\n\n### Minimal Reproduction\n\n1. Clone https://github.com/bgotink/angular-repro-esbuild-scss-resolution\r\n2. `npm ci`\r\n3. `npm exec ng build`\r\n4. `cat dist/test/browser/styles-*.css`\r\n\r\nNote the content of the CSS file is\r\n\r\n```css\r\n:root{--file: resolve-test/test.css}:root{--file: local-test.scss}\r\n```\r\n\r\nindicating that for local files, `.scss` is favoured over `.css`, while for files imported from packages `.css` is favoured over `.scss`.\r\n\r\nThe webpack builder favours `.scss` over `.css` in both scenarios.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.2.0\r\nNode: 18.14.0\r\nPackage Manager: npm 9.3.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.0\r\n@angular-devkit/build-angular   17.2.0\r\n@angular-devkit/core            17.2.0\r\n@angular-devkit/schematics      17.2.0\r\n@angular/cli                    17.2.0\r\n@schematics/angular             17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27147","RelatedDescription":"Open issue \"ESBuild builders inconsistent in importing CSS vs SCSS if both files exist\" (#27147)"},{"Id":"2149354539","IsPullRequest":true,"CreatedAt":"2024-02-22T15:39:13","Actor":"clydin","Number":"27146","RawContent":null,"Title":"fix(@angular-devkit/build-angular): improve rebuild performance with loaders and prebundling","State":"open","Body":"Processing overhead has been reduce during resolution when the fallback path is enabled for prebundling due to either prebundling exclusions or custom loader options being present. The resolution logic now follows the same behavior as the underlying bundler's external package option and avoids the need for an additional bundler resolution roundtrip. While the overhead of the plugin itself is still present, the execution cost is now greatly reduced. Further optimizations to conditionally include the plugin based on code analysis heuristics may be considered in the future.","Url":"https://github.com/angular/angular-cli/pull/27146","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): improve rebuild performance with loaders and prebundling\" (#27146)"},{"Id":"2147491872","IsPullRequest":true,"CreatedAt":"2024-02-22T13:29:08","Actor":"clydin","Number":"27139","RawContent":null,"Title":"build: update `dart-sass` to v1.71.1","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27139","RelatedDescription":"Closed or merged PR \"build: update `dart-sass` to v1.71.1\" (#27139)"},{"Id":"2148838759","IsPullRequest":false,"CreatedAt":"2024-02-22T11:21:45","Actor":"asgerjensen","Number":"27144","RawContent":null,"Title":"Support either proxy-conf or use ssr entrypoint for @angular-devkit/build-angular:dev-server","State":"open","Body":"### Command\n\nserve\n\n### Description\n\nI have a project using @angular-devkit/build-angular:application as executor. \r\nThis project has SSR enabled, via `ssr: { entry: 'path/to/file' }` and `server: path-to-main.server.ts`\r\n\r\nWhen i run `nx serve` it detects that i have SSR enabled, and helpfully starts the server side rendering, by bootstrapping the thing from `server` path (not the thing from `ssr.entry`)\r\n\r\nI have an external api, that is usually mapped via proxyConf, but this seems not to take effect. Ie the client side requests for /api/ does not get proxied, but rather the requests get sent to the SSR part which then just renders index.html\r\n\r\nAnd since its not using the ssr-entry point to run this server, i cant add, say, an express-proxy to the configuration.\n\n### Describe the solution you'd like\n\nI'd like to be able to proxy calls to third party, for browser side calls, on projects that use  build-angular:application and build-angular:dev-server\r\n\r\n\n\n### Describe alternatives you've considered\n\nI can inject the true host names for third party service, from server side variables into client side, but this adds CORS overhead and management issues during normal development.","Url":"https://github.com/angular/angular-cli/issues/27144","RelatedDescription":"Open issue \"Support either proxy-conf or use ssr entrypoint for @angular-devkit/build-angular:dev-server\" (#27144)"},{"Id":"2138778716","IsPullRequest":false,"CreatedAt":"2024-02-22T10:44:46","Actor":"Emil-Blomquist","Number":"27121","RawContent":null,"Title":"crossOriginIsolated is false in SharedWorker despite correct COEP and COOP headers","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Current behavior**\r\n\r\nWhen creating a `SharedWorker` in an Angular application, the `crossOriginIsolated` property is `false` in the worker, even though it's `true` in the main thread and the server is sending the correct `Cross-Origin-Embedder-Policy` and `Cross-Origin-Opener-Policy` headers.\r\n\r\n**Expected behavior**\r\n\r\nThe `crossOriginIsolated` property should be `true` in the shared worker if the server is sending the correct headers and the application is being served over HTTPS or from `localhost`.\n\n### Minimal Reproduction\n\n1. **Create a new Angular project**: Use Angular CLI to create a new project. In your terminal, run:\r\n\r\n```bash\r\nng new cross-origin-isolation-repro\r\n```\r\n\r\n2. **Create a Shared Worker**: In the `src/app` directory of your new project, create a new file `my-worker.worker.ts` with the following content:\r\n\r\n```typescript\r\nconsole.log('Shared worker crossOriginIsolated:', self.crossOriginIsolated);\r\n```\r\n\r\n3. **Use the Shared Worker in AppComponent**: In `app.component.ts`, instantiate and use the worker:\r\n\r\n```typescript\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'cross-origin-isolation-repro';\r\n\r\n  ngOnInit() {\r\n    const sharedWorker = new SharedWorker(new URL('./my-worker.worker.ts', import.meta.url), { type: 'module' });\r\n    console.log('Main thread crossOriginIsolated:', window.crossOriginIsolated);\r\n  }\r\n}\r\n```\r\n\r\n4. **Update angular.json**: In `angular.json`, under `projects > cross-origin-isolation-repro > architect > serve > options`, add the following headers:\r\n\r\n```json\r\n\"headers\": {\r\n  \"Cross-Origin-Embedder-Policy\": \"require-corp\",\r\n  \"Cross-Origin-Opener-Policy\": \"same-origin\"\r\n}\r\n```\r\n\r\n5. **Serve the Application**: Run `ng serve` in your terminal to start the Angular dev server.\r\n\r\n6. **Check the Console**: Open the application in the browser and check the console. The `crossOriginIsolated` value is `false` in the shared worker but `true` in the main thread.\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: linux x64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.0\r\n@angular-devkit/build-angular   17.2.0\r\n@angular-devkit/core            17.2.0\r\n@angular-devkit/schematics      17.2.0\r\n@angular/cli                    17.2.0\r\n@schematics/angular             17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27121","RelatedDescription":"Closed issue \"crossOriginIsolated is false in SharedWorker despite correct COEP and COOP headers\" (#27121)"},{"Id":"2142175606","IsPullRequest":false,"CreatedAt":"2024-02-22T09:19:25","Actor":"thekhegay","Number":"27129","RawContent":null,"Title":"@angular/cli 17.2.0 incorrect display via ng version","State":"closed","Body":"### Command\n\nversion\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular CLI 17.2.0 is not displayed correctly.\r\n\r\n`ng v` command output:\r\n\r\n```\r\nAngular CLI: 17.1.3\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1701.3 (cli-only)\r\n@angular-devkit/core         17.1.3 (cli-only)\r\n@angular-devkit/schematics   17.1.3 (cli-only)\r\n@schematics/angular          17.1.3 (cli-only)\r\n```\r\n\r\n`npm list -g` command output:\r\n```\r\n/Users/khegay/.nvm/versions/node/v20.10.0/lib\r\n├── @angular/cli@17.2.0\r\n├── corepack@0.22.0\r\n└── npm@10.2.3\r\n```\r\n\n\n### Minimal Reproduction\n\n```shell\r\nnpm i -g @angular/cli@latest\r\n```\r\n\r\nor \r\n\r\n```shell\r\nnpm uninstall -g @angular/cli\r\nnpm cache verify\r\nnpm i -g @angular/cli@latest\r\n```\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.1.3\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1701.3 (cli-only)\r\n@angular-devkit/core         17.1.3 (cli-only)\r\n@angular-devkit/schematics   17.1.3 (cli-only)\r\n@schematics/angular          17.1.3 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27129","RelatedDescription":"Closed issue \"@angular/cli 17.2.0 incorrect display via ng version\" (#27129)"},{"Id":"2148290928","IsPullRequest":true,"CreatedAt":"2024-02-22T06:11:29","Actor":"angular-robot","Number":"27142","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `1971024` -> `e0f9b4e` |\n| [@angular/animations](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.2.1/17.2.2) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `b51a0a6` -> `b6a228c` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `eae1b15` -> `1eb7a29` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `987e5e9` -> `c4f0d46` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.2.0` -> `17.2.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.2.0/17.2.1) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `3d56638` -> `3ca4e52` |\n| [@angular/common](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.2.1/17.2.2) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `5451b6b` -> `aaaac5f` |\n| [@angular/compiler](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.2.1/17.2.2) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `45817d5` -> `8c201b1` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.2.1/17.2.2) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `af586e0` -> `1ab59f3` |\n| [@angular/core](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.2.1/17.2.2) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `16ea38f` -> `50b0cb9` |\n| [@angular/forms](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.2.1/17.2.2) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `20a1aa6` -> `0fbcbca` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `633a7b1` -> `219714e` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.2.1/17.2.2) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `c3dc491` -> `e983a45` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.2.0` -> `17.2.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.2.0/17.2.1) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `ca144db` -> `671b5f1` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `2382925` -> `2ed2cbd` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `dc53373` -> `c0d0b34` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.2.1/17.2.2) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `9bfd5e2` -> `cd4a47c` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.2.1/17.2.2) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `277d10d` -> `1389d2d` |\n| [@angular/platform-server](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.2.1/17.2.2) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `4d4e6bb` -> `e7e8157` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.2.1/17.2.2) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `ddaccd9` -> `ae41d80` |\n| [@angular/service-worker](https://togithub.com/angular/angular) ([source](https://togithub.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`17.2.1` -> `17.2.2`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.2.1/17.2.2) |\n| angular/dev-infra | action | digest | `b6876b1` -> `0298ee0` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.2.2`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1722-2024-02-21)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.2.1...17.2.2)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d34e3298db](https://togithub.com/angular/angular/commit/d34e3298db2da9d3aa8f8e2c49e1d1aed849e7d2) | fix | image placeholder not removed in OnPush component ([#&#8203;54515](https://togithub.com/angular/angular/pull/54515)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [6447c0eecc](https://togithub.com/angular/angular/commit/6447c0eecc15800417bb5bde2d273865c559b7d4) | fix | adding the inert property to the \"SCHEMA\" array ([#&#8203;53148](https://togithub.com/angular/angular/pull/53148)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0a3edfb543](https://togithub.com/angular/angular/commit/0a3edfb5433e1b67f37d7b3f69a5c77b48eedce6) | fix | correctly detect deferred dependencies across scoped nodes ([#&#8203;54499](https://togithub.com/angular/angular/pull/54499)) |\n| [790f4f7c26](https://togithub.com/angular/angular/commit/790f4f7c26474af2b1d81a4f3c761047bf920edf) | fix | use correct symbol name for default imported symbols in defer blocks ([#&#8203;54495](https://togithub.com/angular/angular/pull/54495)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [3bd5860c74](https://togithub.com/angular/angular/commit/3bd5860c749517c4d35850703c53a768138b7bde) | fix | properly execute content queries for root components ([#&#8203;54457](https://togithub.com/angular/angular/pull/54457)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bb57d34110](https://togithub.com/angular/angular/commit/bb57d34110ea8796f5c5f522b98dadf078e8ad8a) | fix | Fix cf migration regular expression to include underscores ([#&#8203;54533](https://togithub.com/angular/angular/pull/54533)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [3e31f1a34e](https://togithub.com/angular/angular/commit/3e31f1a34ee97a802a4032cd9e7816d683a51d5e) | fix | Clear internal transition when navigation finalizes ([#&#8203;54261](https://togithub.com/angular/angular/pull/54261)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.2.1`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1721-allactite-acorn-2024-02-22)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.2.0...17.2.1)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c617cd7c8](https://togithub.com/angular/components/commit/c617cd7c815cfcebebc608aa4e1c75ea8e6b0629) | fix | **listbox:** make typeahead label nullable ([#&#8203;28602](https://togithub.com/angular/components/pull/28602)) |\n| [67956e065](https://togithub.com/angular/components/commit/67956e065178f33ba052ae6e1a148612b3d56f41) | fix | **overlay:** only emit positionChanges when position is different |\n| [d5d856348](https://togithub.com/angular/components/commit/d5d8563489f521490e3a4b04519767b308c33739) | fix | **overlay:** run positionChange event inside the zone |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0c5781bfc](https://togithub.com/angular/components/commit/0c5781bfce0e96789d5c415586a0382d64ac3daa) | fix | **expansion:** center indicator icon in M3 ([#&#8203;28603](https://togithub.com/angular/components/pull/28603)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMDMuMyIsInVwZGF0ZWRJblZlciI6IjM3LjIwMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27142","RelatedDescription":"Open PR \"build: update angular\" (#27142)"},{"Id":"2140135330","IsPullRequest":false,"CreatedAt":"2024-02-21T22:20:44","Actor":"demurgos","Number":"27124","RawContent":null,"Title":"Schema validation fails when replacing `.mts` file with another one","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an Angular 17 project using `.mts` files. It's working perfectly, both with `ng build` and `ng serve`. It uses the `@angular-devkit/build-angular:application` builder. To support a new feature, I needed to swap a file when running the live-reload mode with `ng serve`. Following the documentation for `fileReplacements`, I added:\r\n\r\n```json\r\n            \"serve\": {\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.mts\",\r\n                  \"with\": \"src/environments/environment.serve.mts\"\r\n                }\r\n              ],\r\n              \"ssr\": false\r\n            },\r\n```\r\n\r\nI now get the following error when running `ng serve`:\r\n\r\n```\r\nError: Schema validation failed with the following errors:\r\n  Data path \"/fileReplacements/0/replace\" must match pattern \"\\.(([cm]?j|t)sx?|json)$\".\r\n```\r\n\r\nThe regex pattern does not match what builds without replacement are actually using. Regular builds support `\"\\.(([cm]?[jt])sx?|json)$\"`. However, the pattern itself is questionable: why even limit the file extensions here? I don't need it right now, but what if I wanted to swap a `.wasm` file or any other kind of file? If a regular build works, adding a file replacement rule should never restrict it more.\n\n### Minimal Reproduction\n\nAdd a file replacement rule targeting an `mts` file. Example:\r\n```\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.mts\",\r\n                  \"with\": \"src/environments/environment.serve.mts\"\r\n                }\r\n              ],\r\n```\r\n\r\nRun the corresponding command (`ng build`, `ng serve`)\n\n### Exception or Error\n\n```text\nError: Schema validation failed with the following errors:\r\n  Data path \"/fileReplacements/0/replace\" must match pattern \"\\.(([cm]?j|t)sx?|json)$\".\r\n```\n```\n\n\n### Your Environment\n\n```text\n$ ng version\r\nNode.js version v21.6.1 detected.\r\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.1.3\r\nNode: 21.6.1 (Unsupported)\r\nPackage Manager: yarn 4.1.0\r\nOS: linux x64\r\n\r\nAngular: 17.1.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.3\r\n@angular-devkit/build-angular   17.1.3\r\n@angular-devkit/core            17.1.3\r\n@angular-devkit/schematics      17.1.3\r\n@schematics/angular             17.1.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n    \r\nWarning: The current version of Node (21.6.1) is not supported by Angular.\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27124","RelatedDescription":"Closed issue \"Schema validation fails when replacing `.mts` file with another one\" (#27124)"},{"Id":"2140641133","IsPullRequest":true,"CreatedAt":"2024-02-21T22:20:43","Actor":"demurgos","Number":"27125","RawContent":null,"Title":"fix(@angular-devkit/build-angular): allow `mts` and `cts` file replac…","State":"closed","Body":"…ement\r\n\r\nUpdates the `fileReplacement` pattern to allow `.mts` and `.cts` files. This enables support for TypeScript files with explicit ESM support.\r\n\r\nCloses #27124\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nReplacing `cts`, `ctsx`, `mts`, `mtsx` files is rejected by schema validation while these files are supported by the build script.\r\n\r\nIssue Number: #27124\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n`.cts` and `.mts` files are allowed to be replaced.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/27125","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): allow `mts` and `cts` file replac…\" (#27125)"},{"Id":"2147433678","IsPullRequest":true,"CreatedAt":"2024-02-21T18:46:27","Actor":"clydin","Number":"27138","RawContent":null,"Title":"test: generalize webpack direct E2E chunk size testing","State":"closed","Body":"Avoid using `fs.Dirent.path` in the `packages/webpack/test-app` E2E test to ensure the test executes properly on Node.js v18.13. The property was not added until v18.17.\r\n","Url":"https://github.com/angular/angular-cli/pull/27138","RelatedDescription":"Closed or merged PR \"test: generalize webpack direct E2E chunk size testing\" (#27138)"},{"Id":"2146348108","IsPullRequest":false,"CreatedAt":"2024-02-21T10:13:30","Actor":"ThomasDevGif","Number":"27137","RawContent":null,"Title":"[ERROR] Could not resolve \"../../assets/fonts/my-font.woff\"","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nHello,\r\n\r\nPreviously I opened an issue because I could't build my angular design system library after upgrading it fom v16 to v17.1.0 .\r\nI had an error when importing my font when using absolute path : [ERROR] Could not resolve \"/assets/fonts/my-font.woff\".\r\n\r\nI changed the ng-packagr version from v17.1.0 to 17.2.0 and my scss import using absolute path is now working.\r\nBut if I want to use relative path \"../../assets/\" it still does not compile.\r\n\r\nIs there a reason to not allow relative path in scss import ?\r\n\r\nI use my lib in several angular applications with different base href so the absolute path does not working.\r\n\r\nThanks in advance,\n\n### Minimal Reproduction\n\n- Create an angular 17 workspace\r\n- Generate a design-system library\r\n- Add some fonts in assets folder\r\n- Create a styles folder :\r\n\r\nprojects / design-system /\r\n-assets / fonts /...\r\n-src / ...\r\n-styles / fonts.scss\r\n\r\n- Add the following code in the fonts.scss file\r\n```scss\r\n@font-face {\r\n  font-family: \"MyFont\";\r\n  src: url(\"../assets/fonts/my-font.woff2\") format(\"woff2\"),\r\n  url(\"../assets/fonts/my-font.woff\") format(\"woff\");\r\n}\r\n```\r\n\r\n- Try to run the `ng build` command\r\n\n\n### Exception or Error\n\n```text\n[ERROR] Could not resolve \"../assets/fonts/my-font.woff\" [plugin angular-css-resource]\n```\n\n\n### Your Environment\n\n```text\n17.2.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27137","RelatedDescription":"Open issue \"[ERROR] Could not resolve \"../../assets/fonts/my-font.woff\"\" (#27137)"},{"Id":"2145124424","IsPullRequest":true,"CreatedAt":"2024-02-21T08:52:14","Actor":"clydin","Number":"27135","RawContent":null,"Title":"test: generalize webpack direct E2E chunk size testing","State":"closed","Body":"Updates to `webpack` or any of the used Webpack plugins can cause output chunk identifiers to change. The `packages/webpack/test-app` E2E test previously hard coded these file name identifiers into the test which can cause unexpected test failures when packages are updated. To remedy this situation, the output file contents are now checked to discover any files.","Url":"https://github.com/angular/angular-cli/pull/27135","RelatedDescription":"Closed or merged PR \"test: generalize webpack direct E2E chunk size testing\" (#27135)"},{"Id":"2141858545","IsPullRequest":false,"CreatedAt":"2024-02-20T15:19:23","Actor":"laijuthomas","Number":"27128","RawContent":null,"Title":"Path defined in tsconfig not working properly","State":"closed","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.2.11\r\n\r\n### Description\r\n\r\nI have package named \"fernet\": \"^0.4.0\" which depends on crypto library, I have installed crypto-browserify package and added the alias in tsconfig file as \"crypto\": [\"./node_modules/crypto-browserify\"]. This was working fine until I upgraded my app to angular 17.\r\n\r\nNow when I build the app I get an error Could not resolve \"crypto\" in node_modules/fernet/fernet.js\r\n\r\n### Minimal Reproduction\r\n\r\nadd \"fernet\": \"^0.4.0\" and use any fernet function and try ng build\r\n\r\n### Exception or Error\r\n\r\n```text\r\nCould not resolve \"crypto\"\r\n\r\n    node_modules/fernet/fernet.js:9:21:\r\n      9 │ var crypto = require('crypto');\r\n  The package \"crypto\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.2.0\r\nNode: 20.11.1\r\nPackage Manager: npm 10.2.4\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.0\r\n@angular-devkit/build-angular   17.2.0\r\n@angular-devkit/core            17.2.0\r\n@angular-devkit/schematics      17.2.0\r\n@angular/cdk                    17.2.0\r\n@angular/cli                    17.2.0\r\n@angular/ssr                    17.2.0\r\n@schematics/angular             17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27128","RelatedDescription":"Closed issue \"Path defined in tsconfig not working properly\" (#27128)"},{"Id":"2143761079","IsPullRequest":false,"CreatedAt":"2024-02-20T14:47:56","Actor":"hoangkm13","Number":"27132","RawContent":null,"Title":"[Angular 17] Dockerizing Angular project giving several errors like NG8001, NG8002, NG8003","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am trying to deploy Angular project using Docker In Docker (DinD) but it won't be able to build. The same as run start (npm run start). Locally it run perfectly fine.\n\n### Minimal Reproduction\n\nThis is my Dockerfile and package.json\r\n\r\n**Dockerfile:**\r\n\r\n`FROM node:18-alpine as BUILDER\r\nRUN npm -v\r\n\r\nWORKDIR /app\r\n\r\nRUN npm ng -v\r\n\r\nCOPY package*.json ./\r\n\r\nRUN npm ci\r\n\r\nCOPY . ./\r\n\r\nRUN npm run build\r\n\r\nCMD [\"npm\", \"run\", \"start\"]`\r\n\r\n**package.json:**\r\n\r\n`{\r\n  \"name\": \"ga-csm\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\",\r\n    \"api-docs\": \"java -jar ./libs/openapi-generator-cli-5.3.1.jar generate -g typescript-angular -i ./api-docs.yaml -o ./src/app/api-svc/\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/cdk\": \"^17.0.4\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/material\": \"^17.0.4\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"ngx-cookie-service\": \"^17.0.1\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^17.0.7\",\r\n    \"@angular/cli\": \"^17.0.7\",\r\n    \"@angular/compiler-cli\": \"^17.0.0\",\r\n    \"@openapitools/openapi-generator-cli\": \"^2.7.0\",\r\n    \"@types/jasmine\": \"~5.1.0\",\r\n    \"jasmine-core\": \"~5.1.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n    \"typescript\": \"~5.2.2\"\r\n  }\r\n}\r\n`\n\n### Exception or Error\n\n```text\n#13 [9/9] RUN npm run build\r\n #13 0.596 \r\n #13 0.596 > ga-csm@0.0.0 build\r\n #13 0.596 > ng build\r\n #13 0.596 \r\n #13 1.612 - Building...\r\n #13 1.612 \r\n #13 12.67 ✘ [ERROR] NG8001: 'router-outlet' is not a known element:\r\n #13 12.67 1. If 'router-outlet' is an Angular component, then verify that it is part of this module.\r\n #13 12.67 2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.component.html:0:0:\r\n #13 12.67       0 │ \r\n #13 12.67         ╵ ^\r\n #13 12.67 \r\n #13 12.67   Error occurs in the template of component AppComponent.\r\n #13 12.67 \r\n #13 12.67     src/app/app.component.ts:5:15:\r\n #13 12.67       5 │   templateUrl: './app.component.html',\r\n #13 12.67         ╵                ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] Could not resolve \"@sedeh/differentiate\"\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:25:39:\r\n #13 12.67       25 │ import { DifferentiateComponent } from \"@sedeh/differentiate\";\r\n #13 12.67          ╵                                        ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67   You can mark the path \"@sedeh/differentiate\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] TS2307: Cannot find module '@sedeh/differentiate' or its corresponding type declarations. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:29:37:\r\n #13 12.67       29 │ import {DifferentiateComponent} from \"@sedeh/differentiate\";\r\n #13 12.67          ╵                                      ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] TS-991010: Value at position 16 in the NgModule.imports of AppModule is not a reference\r\n #13 12.67   Value could not be determined statically. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:46:11:\r\n #13 12.67       46 │   imports: [\r\n #13 12.67          ╵            ^\r\n\r\n.............\n```\n\n\n### Your Environment\n\n```text\n$ ng version\r\n      _                      _                 ____ _     ___\r\n     / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n    / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n   / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n  /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                 |___/\r\n     \r\n Angular CLI: 17.0.7\r\n Node: 18.19.1\r\n Package Manager: npm 10.2.5\r\n OS: linux x64\r\n Angular: 17.0.7\r\n ... animations, cli, common, compiler, compiler-cli, core, forms\r\n ... platform-browser, platform-browser-dynamic, router\r\n Package                         Version\r\n ---------------------------------------------------------\r\n @angular-devkit/architect       0.1700.7\r\n @angular-devkit/build-angular   17.0.7\r\n @angular-devkit/core            17.0.7\r\n @angular-devkit/schematics      17.0.7 (cli-only)\r\n @angular/cdk                    17.0.4\r\n @angular/material               17.0.4\r\n @schematics/angular             17.0.7 (cli-only)\r\n rxjs                            7.8.1\r\n typescript                      5.2.2\r\n zone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27132","RelatedDescription":"Closed issue \"[Angular 17] Dockerizing Angular project giving several errors like NG8001, NG8002, NG8003\" (#27132)"},{"Id":"2143761266","IsPullRequest":false,"CreatedAt":"2024-02-20T08:08:57","Actor":"hoangkm13","Number":"27133","RawContent":null,"Title":"[Angular 17] Dockerizing Angular project giving several errors like NG8001, NG8002, NG8003","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am trying to deploy Angular project using Docker In Docker (DinD) but it won't be able to build. The same as run start (npm run start). Locally it run perfectly fine.\n\n### Minimal Reproduction\n\nThis is my Dockerfile and package.json\r\n\r\n**Dockerfile:**\r\n\r\n`FROM node:18-alpine as BUILDER\r\nRUN npm -v\r\n\r\nWORKDIR /app\r\n\r\nRUN npm ng -v\r\n\r\nCOPY package*.json ./\r\n\r\nRUN npm ci\r\n\r\nCOPY . ./\r\n\r\nRUN npm run build\r\n\r\nCMD [\"npm\", \"run\", \"start\"]`\r\n\r\n**package.json:**\r\n\r\n`{\r\n  \"name\": \"ga-csm\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\",\r\n    \"api-docs\": \"java -jar ./libs/openapi-generator-cli-5.3.1.jar generate -g typescript-angular -i ./api-docs.yaml -o ./src/app/api-svc/\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/cdk\": \"^17.0.4\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/material\": \"^17.0.4\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"ngx-cookie-service\": \"^17.0.1\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^17.0.7\",\r\n    \"@angular/cli\": \"^17.0.7\",\r\n    \"@angular/compiler-cli\": \"^17.0.0\",\r\n    \"@openapitools/openapi-generator-cli\": \"^2.7.0\",\r\n    \"@types/jasmine\": \"~5.1.0\",\r\n    \"jasmine-core\": \"~5.1.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n    \"typescript\": \"~5.2.2\"\r\n  }\r\n}\r\n`\n\n### Exception or Error\n\n```text\n#13 [9/9] RUN npm run build\r\n #13 0.596 \r\n #13 0.596 > ga-csm@0.0.0 build\r\n #13 0.596 > ng build\r\n #13 0.596 \r\n #13 1.612 - Building...\r\n #13 1.612 \r\n #13 12.67 ✘ [ERROR] NG8001: 'router-outlet' is not a known element:\r\n #13 12.67 1. If 'router-outlet' is an Angular component, then verify that it is part of this module.\r\n #13 12.67 2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.component.html:0:0:\r\n #13 12.67       0 │ \r\n #13 12.67         ╵ ^\r\n #13 12.67 \r\n #13 12.67   Error occurs in the template of component AppComponent.\r\n #13 12.67 \r\n #13 12.67     src/app/app.component.ts:5:15:\r\n #13 12.67       5 │   templateUrl: './app.component.html',\r\n #13 12.67         ╵                ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] Could not resolve \"@sedeh/differentiate\"\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:25:39:\r\n #13 12.67       25 │ import { DifferentiateComponent } from \"@sedeh/differentiate\";\r\n #13 12.67          ╵                                        ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67   You can mark the path \"@sedeh/differentiate\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] TS2307: Cannot find module '@sedeh/differentiate' or its corresponding type declarations. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:29:37:\r\n #13 12.67       29 │ import {DifferentiateComponent} from \"@sedeh/differentiate\";\r\n #13 12.67          ╵                                      ~~~~~~~~~~~~~~~~~~~~~~\r\n #13 12.67 \r\n #13 12.67 \r\n #13 12.67 ✘ [ERROR] TS-991010: Value at position 16 in the NgModule.imports of AppModule is not a reference\r\n #13 12.67   Value could not be determined statically. [plugin angular-compiler]\r\n #13 12.67 \r\n #13 12.67     src/app/app.module.ts:46:11:\r\n #13 12.67       46 │   imports: [\r\n #13 12.67          ╵            ^\r\n\r\n.............\n```\n\n\n### Your Environment\n\n```text\n$ ng version\r\n      _                      _                 ____ _     ___\r\n     / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n    / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n   / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n  /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                 |___/\r\n     \r\n Angular CLI: 17.0.7\r\n Node: 18.19.1\r\n Package Manager: npm 10.2.5\r\n OS: linux x64\r\n Angular: 17.0.7\r\n ... animations, cli, common, compiler, compiler-cli, core, forms\r\n ... platform-browser, platform-browser-dynamic, router\r\n Package                         Version\r\n ---------------------------------------------------------\r\n @angular-devkit/architect       0.1700.7\r\n @angular-devkit/build-angular   17.0.7\r\n @angular-devkit/core            17.0.7\r\n @angular-devkit/schematics      17.0.7 (cli-only)\r\n @angular/cdk                    17.0.4\r\n @angular/material               17.0.4\r\n @schematics/angular             17.0.7 (cli-only)\r\n rxjs                            7.8.1\r\n typescript                      5.2.2\r\n zone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27133","RelatedDescription":"Closed issue \"[Angular 17] Dockerizing Angular project giving several errors like NG8001, NG8002, NG8003\" (#27133)"},{"Id":"2142281391","IsPullRequest":false,"CreatedAt":"2024-02-19T12:51:43","Actor":"enzo-tobio","Number":"27130","RawContent":null,"Title":"Incorrect peer dependencies versions on 17.2.0","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.1.x\n\n### Description\n\nPeer depenencies of angular client packages are wrong on 17.2.0\r\n\r\nThe @angular/cli packages peer dependencies are pointing to version 17.0.0 isntead of 17.2.0 (See https://github.com/angular/angular-cli/blob/644010d2f41e1c2f2935866a0a8b2b80b5ee39d1/packages/angular_devkit/build_angular/package.json#L77)\r\n\r\nLooks like the peer dependencies were not correctly udpated on https://github.com/angular/angular-cli/pull/27099\n\n### Minimal Reproduction\n\nrun npm install using @angular/compiler:17.2.1 and @angular-devkit/build-angular@17.2.0\n\n### Exception or Error\n\n```text\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! dev @angular-devkit/build-angular@\"17.2.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Conflicting peer dependency: @angular/compiler@17.2.1\r\nnpm ERR! node_modules/@angular/compiler\r\nnpm ERR!   peer @angular/compiler@\"17.2.1\" from @angular/compiler-cli@17.2.1\r\nnpm ERR!   node_modules/@angular/compiler-cli\r\nnpm ERR!     dev @angular/compiler-cli@\"17.2.1\" from the root project\r\nnpm ERR!     peer @angular/compiler-cli@\"^17.0.0\" from @angular-devkit/build-angular@17.2.0\r\nnpm ERR!     node_modules/@angular-devkit/build-angular\r\nnpm ERR!       dev @angular-devkit/build-angular@\"17.2.0\" from the root project\r\nnpm ERR!     2 more (@angular/localize, ng-packagr)\r\nnpm ERR! \r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\n```\n\n\n### Your Environment\n\n```text\nGlobal setting: disabled\r\nLocal setting: No local workspace configuration file.\r\nEffective status: disabled\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.2.0\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1702.0\r\n@angular-devkit/build-angular      17.2.0\r\n@angular-devkit/core               17.2.0\r\n@angular-devkit/schematics         17.2.0\r\n@angular/cdk                       17.2.0\r\n@angular/cli                       17.2.0\r\n@angular/material                  17.2.0\r\n@angular/material-moment-adapter   17.2.0\r\n@schematics/angular                17.1.4\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nzone.js                            0.14.4\n```\n\n\n### Anything else relevant?\n\nAs a workaround I can install it using `--legacy-peer-deps`","Url":"https://github.com/angular/angular-cli/issues/27130","RelatedDescription":"Closed issue \"Incorrect peer dependencies versions on 17.2.0\" (#27130)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2149098708","IsPullRequest":true,"CreatedAt":"2024-02-22T18:16:11","Actor":"crisbeto","Number":"28628","RawContent":null,"Title":"fix(material/autocomplete): requireSelection sometimes not clearing value when editing after selection","State":"closed","Body":"Fixes that if the user has `requireSelection` enabled, selects a value and then deletes a character while the input still has a value, the selection wasn't being cleared as expected.\r\n\r\nFixes #28432.","Url":"https://github.com/angular/components/pull/28628","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): requireSelection sometimes not clearing value when editing after selection\" (#28628)"},{"Id":"2146251980","IsPullRequest":true,"CreatedAt":"2024-02-22T16:21:38","Actor":"crisbeto","Number":"28622","RawContent":null,"Title":"refactor(cdk/table): remove mixin function usages","State":"closed","Body":"Removes the final usages of TypeScript mixins in the CDK table by adding the sticky functionality to the individual usages. Ideally we'd have a base class for this, but that won't be usable in `CdkHeaderRowDef` and `CdkFooterRowDef` because they already inherit from `BaseRowDef` and we can't put the sticky functionality there, because `CdkRowDef` shouldn't support `sticky`. The logic is pretty basic so I think it's fine to duplicate it.","Url":"https://github.com/angular/components/pull/28622","RelatedDescription":"Closed or merged PR \"refactor(cdk/table): remove mixin function usages\" (#28622)"},{"Id":"2149418063","IsPullRequest":true,"CreatedAt":"2024-02-22T16:12:54","Actor":"wagnermaciel","Number":"28631","RawContent":null,"Title":"Bump version to \"v17.3.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28631","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-next.0\" with changelog.\" (#28631)"},{"Id":"2149376268","IsPullRequest":true,"CreatedAt":"2024-02-22T15:58:37","Actor":"wagnermaciel","Number":"28630","RawContent":null,"Title":"docs: release notes for the v17.2.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28630","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.1 release\" (#28630)"},{"Id":"2149343041","IsPullRequest":true,"CreatedAt":"2024-02-22T15:48:49","Actor":"wagnermaciel","Number":"28629","RawContent":null,"Title":"Bump version to \"v17.2.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28629","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.1\" with changelog.\" (#28629)"},{"Id":"2148790409","IsPullRequest":false,"CreatedAt":"2024-02-22T13:34:35","Actor":"kklocker","Number":"28626","RawContent":null,"Title":"bug(CDK_TABLE): \"NullInjectorError: No provider for InjectionToken CDK_TABLE!\" after upgrade of cdk to 17.1.0","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n@angular/cdk: 17.0.4\r\n\r\n### Description\r\n\r\nHi, we have a pretty large codebase with a custom table class `TableComponent` that extends CdkTable<T>.\r\nI am now trying to bump our angular stack but this fails at runtime.\r\nThese are some of the package changes.\r\n![image](https://github.com/angular/components/assets/25065744/9e49e296-b0de-43d9-98b1-e24fe4adad95)\r\n\r\n\r\n\r\nI have a sneaking suspicion that this \"bug\" was introduced with #28356\r\nLooking for help as to how to resolve this\r\n\r\n### Reproduction\r\n\r\nI don't really know if this is a bug or if our implementation has been wrong, but this worked in the last version\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-hj5acn?file=package.json\r\nSteps to reproduce:\r\n1. Change the @angular/cdk package (and dependencies) to point to 17.1.0\r\n2. See the `NullInjectorError: No provider for InjectionToken CDK_TABLE!` error message in the console\r\n**NB**: this is not an optimal repro, since on 17.0.4, there is another error which I have not encountered in our app\r\n\r\n### Expected Behavior\r\n\r\nThe tables are showing as they did in the latest version\r\n\r\n### Actual Behavior\r\n\r\nWhen starting the application, I get the error \r\n`NullInjectorError: No provider for InjectionToken CDK_TABLE!`\r\n\r\nI have tried adding the `{provider:CDK_TABLE, useClass: CdkTable}` to our `TableComponent`, and then it fails with\r\n\r\n```\r\nERROR TypeError: Cannot read properties of undefined (reading 'filter')\r\n    at CdkTable._getOwnDefs (table.mjs:2004:22)\r\n    at CdkTable._cacheRowDefs (table.mjs:1733:53)\r\n    at CdkTable._render (table.mjs:1630:14)\r\n    at CdkTable._outletAssigned (table.mjs:1624:18)\r\n    at new FooterRowOutlet (table.mjs:1090:15)\r\n    at NodeInjectorFactory._class21_Factory [as factory] (table.mjs:1092:23)\r\n    at getNodeInjectable (core.mjs:4455:44)\r\n    at instantiateAllDirectives (core.mjs:12950:27)\r\n    at createDirectivesInstances (core.mjs:12349:5)\r\n    at ɵɵelementContainerStart (core.mjs:22667:9)\r\n    at ɵɵelementContainer (core.mjs:22713:5)\r\n    at TableComponent_Template (template.html:17:1)\r\n    at executeTemplate (core.mjs:12314:9)\r\n    at renderView (core.mjs:15332:13)\r\n    at renderComponent (core.mjs:15279:5)\r\n```\r\n\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n\r\n\r\nAngular CLI: 17.0.8\r\nNode: 18.13.0\r\nPackage Manager: yarn 3.4.1\r\nOS: win32 x64\r\n\r\nAngular: 17.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1701.4\r\n@angular-devkit/build-angular      17.1.4\r\n@angular-devkit/core               17.1.4\r\n@angular-devkit/schematics         17.1.4\r\n@angular/cdk                       17.1.2\r\n@angular/cli                       17.0.8\r\n@angular/material                  17.1.2\r\n@angular/material-moment-adapter   17.1.2\r\n@schematics/angular                17.1.4\r\nrxjs                               7.8.1\r\ntypescript                         5.3.3\r\nwebpack                            5.88.2\r\nzone.js                            0.14.4\r\n","Url":"https://github.com/angular/components/issues/28626","RelatedDescription":"Closed issue \"bug(CDK_TABLE): \"NullInjectorError: No provider for InjectionToken CDK_TABLE!\" after upgrade of cdk to 17.1.0\" (#28626)"},{"Id":"2148850446","IsPullRequest":false,"CreatedAt":"2024-02-22T11:27:44","Actor":"angelaki","Number":"28627","RawContent":null,"Title":"bug(mat-select): Option duplication / staying in component","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn a very rare edge-case I noticed that some options were duplicated / staying without function in the `mat-select`. It took me pretty much effort to reduce it to a minimal repro. Some code here might seam very unusual, but this all is needed for a custom control with filtering, paging and so on.\n\n### Reproduction\n\nStackBlitz link: https://components-issue-92ymn4.stackblitz.io\r\nSteps to reproduce:\r\n1. Check 7, 8, 9 & Close\r\n2. Uncheck 7, 8 & Close\r\n3. Hit \"clear\"\r\n4. Now open the select again. You'll notice item 7 & 8 are still present\r\n\r\nIn the code there are three parts that could (most likely? Not sure since it is pretty hard to reproduce) fix the issue. One weirder than another:\r\n\r\n1. Removing the sort\r\n2. Removing the div\r\n3. Removing empty animation (!)\r\n\n\n### Expected Behavior\n\nNo item duplication in select\n\n### Actual Behavior\n\nItems can be duplicated in pretty rare scenarios.\n\n### Environment\n\n- Angular: 16 & 17\r\n- CDK/Material: 16 & 17","Url":"https://github.com/angular/components/issues/28627","RelatedDescription":"Open issue \"bug(mat-select): Option duplication / staying in component\" (#28627)"},{"Id":"2147085464","IsPullRequest":true,"CreatedAt":"2024-02-21T15:45:27","Actor":"wagnermaciel","Number":"28625","RawContent":null,"Title":"fix(material/slide-toggle): m3 selected track outline","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28625","RelatedDescription":"Open PR \"fix(material/slide-toggle): m3 selected track outline\" (#28625)"},{"Id":"2146346145","IsPullRequest":false,"CreatedAt":"2024-02-21T13:19:15","Actor":"muneebkq","Number":"28623","RawContent":null,"Title":"bug(matAutocomplete): Unable to set width with respect to parent component","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatAutoComplete when attached to `matNativeControl` take the width as per form Filedi. However for the custom form field control matautoComplete doesn't take the width as per the form Field.\r\n![Screenshot from 2024-02-21 14-10-45](https://github.com/angular/components/assets/25411002/6527dcee-6f82-46bc-9769-8811dcee8505)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-hyl4wl?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1.  Click `matnativecontrol` autocomplete will take the width as per mat-form-field\r\n2. Click on custom control autoComplete width will be less than the mat-form-field\r\n\n\n### Expected Behavior\n\nIn both cases autocomplete width should be equal to the width of the parent\n\n### Actual Behavior\n\nwidth is not as per parentthe \n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28623","RelatedDescription":"Closed issue \"bug(matAutocomplete): Unable to set width with respect to parent component\" (#28623)"},{"Id":"2146494566","IsPullRequest":true,"CreatedAt":"2024-02-21T13:18:19","Actor":"crisbeto","Number":"28624","RawContent":null,"Title":"fix(material/autocomplate): unable to inject form field across components","State":"closed","Body":"Removes an unnecessary `Host` injection decorator on the autocomplete trigger which prevents it from injecting form fields from parent components. This can be problematic for custom form controls.\r\n\r\nFixes #28623.","Url":"https://github.com/angular/components/pull/28624","RelatedDescription":"Closed or merged PR \"fix(material/autocomplate): unable to inject form field across components\" (#28624)"},{"Id":"2143796870","IsPullRequest":true,"CreatedAt":"2024-02-21T12:05:02","Actor":"crisbeto","Number":"28616","RawContent":null,"Title":"Avoid emitting position change event unnecessarily and emit inside the zone","State":"closed","Body":"Includes the following fixes:\r\n\r\n### fix(cdk/overlay): only emit positionChanges when position is different\r\nCurrently we emit the `positionChanges` event whenever a position is recalculcated which can be on each scroll event. These changes switch to doing so only if either the actual position or the scrolled state has changed.\r\n\r\n### fix(cdk/overlay): run positionChange event inside the zone\r\n\r\nFixes that the `positionChange` event of the `CdkConnectedOverlay` directive was running outside the zone.\r\n\r\nFixes #28568.","Url":"https://github.com/angular/components/pull/28616","RelatedDescription":"Closed or merged PR \"Avoid emitting position change event unnecessarily and emit inside the zone\" (#28616)"},{"Id":"2140818015","IsPullRequest":true,"CreatedAt":"2024-02-21T11:54:21","Actor":"crisbeto","Number":"28606","RawContent":null,"Title":"refactor(material/tabs): remove mixin function","State":"closed","Body":"Replaces a usage of a mixin function in the tabs with a base class.","Url":"https://github.com/angular/components/pull/28606","RelatedDescription":"Closed or merged PR \"refactor(material/tabs): remove mixin function\" (#28606)"},{"Id":"2144428432","IsPullRequest":false,"CreatedAt":"2024-02-21T10:16:22","Actor":"BojanKogoj","Number":"28619","RawContent":null,"Title":"bug(youtube-player): Ready event is never emitted","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.1.1\n\n### Description\n\n[`ready`](https://github.com/angular/components/blob/main/src/youtube-player/youtube-player.ts#L209) event no longer emits, however some other events work as expected.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-saqwwz?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. Run file (might need to open preview in new tab)\r\n2. Click play on Youtube\r\n\n\n### Expected Behavior\n\n`ready` event to be emitted (and set isReady to true)\n\n### Actual Behavior\n\n`ready` never emits\n\n### Environment\n\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.3\r\n@angular-devkit/build-angular   17.1.3\r\n@angular-devkit/core            17.1.3\r\n@angular-devkit/schematics      17.1.3\r\n@angular/cdk                    17.1.2\r\n@angular/youtube-player         17.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n\r\n- Browser(s): Edge/Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/28619","RelatedDescription":"Closed issue \"bug(youtube-player): Ready event is never emitted\" (#28619)"},{"Id":"2139938476","IsPullRequest":true,"CreatedAt":"2024-02-21T09:58:23","Actor":"crisbeto","Number":"28603","RawContent":null,"Title":"fix(material/expansion): center indicator icon in M3","State":"closed","Body":"Currently the expansion panel arrow is drawn with borders which makes it difficult to center. It's also problematic in high contrast mode where it renders as a rectangle. We've wanted to fix this for a while, but it breaks a lot of internal screenshot tests (see #10503).\r\n\r\nThese changes resolve the issue for apps using M3 by having two indicators that we toggle using tokens.\r\n\r\nFixes #28037.","Url":"https://github.com/angular/components/pull/28603","RelatedDescription":"Closed or merged PR \"fix(material/expansion): center indicator icon in M3\" (#28603)"},{"Id":"2141516552","IsPullRequest":false,"CreatedAt":"2024-02-21T09:55:44","Actor":"apixandru","Number":"28609","RawContent":null,"Title":"bug(google-maps/advanced-marker-elements): advanced markers get stuck even when removed","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe advanced markers stay on the map even if they are removed. This can be seen in the dev-app google-maps example\r\n\r\n### Reproduction\r\n\r\nAdvanced marker elements require your own private mapId, I cannot create a StackBlitz to expose my key/map ids but the demo already app illustrates the issue.\r\n\r\nStackBlitz link: https://github.com/angular/components/commit/5a490cc8a2df4124cce7f7ef4a72726e39af65b6\r\nSteps to reproduce:\r\n1. add advanced markers to the map\r\n2. attempt to remove them\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe advanced markers should not show up on the map if they are removed, just like the regular marker objects\r\n\r\n### Actual Behavior\r\n\r\nThe regular marker objects are removed but the advanced marker objects remain on the map.\r\n\r\n### Environment\r\n\r\n- Angular: current main facd027f5f05828d108bccefdd0df68cd4583904\r\n- CDK/Material:\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): ubuntu\r\n","Url":"https://github.com/angular/components/issues/28609","RelatedDescription":"Closed issue \"bug(google-maps/advanced-marker-elements): advanced markers get stuck even when removed\" (#28609)"},{"Id":"2141512847","IsPullRequest":false,"CreatedAt":"2024-02-21T09:55:43","Actor":"apixandru","Number":"28608","RawContent":null,"Title":"bug(google-maps/advanced-marker-elements): setting mapId doesn't work","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using advanced marker elements, a mapid is required on the google-map element.\r\nThe google map element does have the mapId property but setting it doesn't appear to propagate it to the map.\r\nI can get around this by using `[options]=\"mapIdOptions\"` instead where mapIdOptions is `google.maps.MapOptions = { mapId: \"myId\" }`\r\n\r\n### Reproduction\r\n\r\nAdvanced marker elements require your own private mapId, I cannot create a StackBlitz to expose my key/map ids but the demo already app illustrates the issue.\r\n\r\nStackBlitz link: use the `dev-app` google map demo, it doesn't work currently\r\nSteps to reproduce:\r\n1. set the mapId inside the current `dev-app`\r\n2. run the application and notice it not load, the console says `The map is initialized without a valid Map ID, which will prevent use of Advanced Markers.`\r\n\r\n\r\n### Expected Behavior\r\n\r\nI'm expecting the map to load without issues\r\n\r\n### Actual Behavior\r\n\r\nThe map fails to load with the message `The map is initialized without a valid Map ID, which will prevent use of Advanced Markers.\r\nl`\r\n\r\n### Environment\r\n\r\n- Angular: current main facd027 \r\n- CDK/Material:\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/28608","RelatedDescription":"Closed issue \"bug(google-maps/advanced-marker-elements): setting mapId doesn't work\" (#28608)"},{"Id":"2141652788","IsPullRequest":true,"CreatedAt":"2024-02-21T09:55:42","Actor":"crisbeto","Number":"28610","RawContent":null,"Title":"Fixes for the advanced Google Maps marker","State":"closed","Body":"### fix(google-maps): mapId not being set\r\nFixes that the `mapId` input wasn't being passed along to the map.\r\n\r\n### fix(google-maps): advanced marker not destroyed\r\nFixes that the advanced marker wasn't being removed from the map on destroy.\r\n\r\nFixes https://github.com/angular/components/issues/28608.\r\nFixes https://github.com/angular/components/issues/28609.","Url":"https://github.com/angular/components/pull/28610","RelatedDescription":"Closed or merged PR \"Fixes for the advanced Google Maps marker\" (#28610)"},{"Id":"2139889863","IsPullRequest":true,"CreatedAt":"2024-02-21T09:53:20","Actor":"crisbeto","Number":"28602","RawContent":null,"Title":"fix(cdk/listbox): make typeahead label nullable","State":"closed","Body":"Allows the `cdkOptionTypeaheadLabel` to be set to a nullable value.\r\n\r\nFixes #28464.","Url":"https://github.com/angular/components/pull/28602","RelatedDescription":"Closed or merged PR \"fix(cdk/listbox): make typeahead label nullable\" (#28602)"},{"Id":"2144503355","IsPullRequest":false,"CreatedAt":"2024-02-21T08:38:11","Actor":"noguespi","Number":"28620","RawContent":null,"Title":"bug(CdkStepper): form less linear CdkStepper.next() doesn't switch to next step","State":"closed","Body":"### Description\r\n\r\nOnce a step has been marked completed using `CdkStep.completed` input, using the `CdkStepper.next()` doesn't move to the next step, I have to click two times on the button.\r\n\r\nIf I mark the step using `@ViewChild` and the CdkStep completed setter, it works as expected.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-fakctk?file=src%2Fapp%2Fstepper-test.component.ts\r\nSteps to reproduce:\r\n1. click next via binding, nothing happens.\r\n2. click a second time on next via binding, the stepper switch to next step.\r\n\r\n\r\n### Expected Behavior\r\n\r\nWhen I complete the step and call CdkStepper.next, it should display the next step\r\n\r\n### Actual Behavior\r\n\r\nWhen I complete the step and call CdkStepper.next nothing happens the first time.\r\n\r\n### Environment\r\n\r\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Chrome\r\n","Url":"https://github.com/angular/components/issues/28620","RelatedDescription":"Closed issue \"bug(CdkStepper): form less linear CdkStepper.next() doesn't switch to next step\" (#28620)"},{"Id":"2142348095","IsPullRequest":false,"CreatedAt":"2024-02-21T07:11:14","Actor":"ThomasPrioul","Number":"28613","RawContent":null,"Title":"bug(DateAdapter): Date comparison is only checking partial info","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm developing an app with Material DatePicker and Luxon Date Adapter.\r\nI gave my users the possibility to input seconds, milliseconds or full ISO date strings into my app's date inputs.\r\nThis works well except when pasting certain dates without deleting the input's value first (replacing value with CTRL+V).\r\n\r\nI found out why, I was pasting dates which were **_on the same day_** (but different time values) as the previous date.\r\n\r\nVideo of the problem:\r\n![datepicker-bug](https://github.com/angular/components/assets/15314924/f19fc5e0-f019-474c-b854-85a177b86703)\r\n\r\nhttps://github.com/angular/components/assets/15314924/f19fc5e0-f019-474c-b854-85a177b86703\r\n\r\nChecking the source code reveals that in the date-adapter.ts file, dates are only compared using year/month/day instead of relying on the native's type when applicable.\r\nhttps://github.com/angular/components/blob/facd027f5f05828d108bccefdd0df68cd4583904/src/material/core/datetime/date-adapter.ts#L243-L249\r\n\r\nAnd the method sameDate() is called by MatDatePickerInputBase, and its result is based on the previous method's result:\r\nhttps://github.com/angular/components/blob/facd027f5f05828d108bccefdd0df68cd4583904/src/material/core/datetime/date-adapter.ts#L258-L268\r\n\r\nNeither method is overriden in luxon-date-adapter to use something more robust.\r\nUsing my own date adapter worked as expected with this snippet:\r\n```typescript\r\n@Injectable()\r\nexport class DemoDateAdapter extends LuxonDateAdapter {\r\n  public override compareDate(first: DateTime<boolean>, second: DateTime<boolean>): number {\r\n    return +first - +second;\r\n  }\r\n}\r\n```\r\n\r\nThis fixed the problem for Luxon but for any other adapter not overloading this method (including native dates) the problem arises.\r\n\r\nThe DateAdapter interface and class does not account for milliseconds (there is no dateAdapter.getMillis), perhaps it should ?\r\n\r\n### Reproduction\r\n\r\nI have a demo app of a lib I'm managing having the problem :\r\nhttps://thomasprioul.github.io/mdl-angular-libs/#/home/forms\r\nSteps to reproduce:\r\n1. Use a material app with datepicker inputs and Luxon Date Adapter\r\n2. Use the following provider (in app or component) to support long date formats\r\n```ts\r\nexport const DEFAULT_DATEFORMAT_PROVIDER: Provider = {\r\n  provide: MAT_DATE_FORMATS,\r\n  useValue: <MatDateFormats>{\r\n    ...MAT_LUXON_DATE_FORMATS,\r\n    display: {\r\n      ...MAT_LUXON_DATE_FORMATS.display,\r\n      monthLabel: 'LLL yyyy',\r\n      dateInput: ['D', 'D T', 'D TT', 'D TT.SSS', 'D TT.SSSZ'],\r\n    },\r\n    parse: {\r\n      ...MAT_LUXON_DATE_FORMATS.parse,\r\n      dateInput: ['D TT.SSSZ', 'D TT.SSS', 'D TT', 'D T', 'D'],\r\n    },\r\n  },\r\n};\r\n```\r\n3. Input a date with a timestamp\r\n4. CTRL+V another date with same day but different timestamp\r\n5. Form value does not change and date is reset to previous value when losing focus on the input\r\n\r\n### Expected Behavior\r\n\r\nCorrect detection of \"different date\" on CTRL+V\r\n\r\n### Actual Behavior\r\n\r\nNew input is considered as \"equal date\" when it is not\r\n\r\n### Environment\r\n\r\n- Angular: 17.1.1\r\n- CDK/Material: 17.1.1\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/28613","RelatedDescription":"Closed issue \"bug(DateAdapter): Date comparison is only checking partial info\" (#28613)"},{"Id":"2144566238","IsPullRequest":false,"CreatedAt":"2024-02-21T07:09:58","Actor":"feichin-noreja","Number":"28621","RawContent":null,"Title":"bug(theme): promlem with css var calculation","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf i define a css var with the value of a css var like in the code snippet below some material css variables are not defined correctly.\r\nE.g. --mdc-linear-progress-track-color is set to `var(--primary-500)` but should be converted to a rgba color with 0,25 opacity.\r\n\r\nThat causes the theme to have some bad behaviour.\r\n\r\n`:root{\r\n  --primary-500: #FF0000\r\n}\r\n\r\n$primary:(\r\n  500: var(--primary-500)\r\n)\r\n`\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-d9ccxk\r\n\n\n### Expected Behavior\n\nThe css var should be handled like a hex value\n\n### Actual Behavior\n\nThe css var is copied\n\n### Environment\n\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28621","RelatedDescription":"Closed issue \"bug(theme): promlem with css var calculation\" (#28621)"},{"Id":"2143881682","IsPullRequest":false,"CreatedAt":"2024-02-20T09:05:02","Actor":"MikaStark","Number":"28618","RawContent":null,"Title":"bug(experimental): missing box-shadow css rule on elevated containers with material 3 theme","State":"open","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi ✋\r\nIn the current implementation of the experimental Material 3 themes, the `mat-elevation-z*` CSS classes lack the `box-shadow` rule. It appears to be a deliberate design choice, as Material 3 themes exclusively generate CSS custom variables.\r\n\r\nTo address this issue, we have two potential solutions:\r\n\r\n1. **SCSS Mixin Approach:**\r\n   Add an SCSS mixin that generates all `mat-elevation-z*` classes from 0 to 24, applying the necessary `box-shadow` rules. Here's an example of the mixin:\r\n   ```scss\r\n   @mixin elevations() {\r\n     @for $elevation from 0 to 24 {\r\n       .mat-elevation-z#{$elevation} {\r\n         @include mat.elevation($elevation);\r\n       }\r\n     }\r\n   }\r\n   ```\r\n\r\n2. **Directive Update Approach:**\r\n   Remove the usage of `mat-elevation-z*` classes in all directives (e.g., `mat-menu`), replacing them with the `box-shadow` CSS rule. Utilize a CSS custom property for flexibility, such as:\r\n   ```css\r\n   var(--mat-elevation-shadow-z8) or var(--mat-menu-shadow)\r\n   ```\r\n\r\nAdditional Suggestion:\r\nIntroduce a theme API, `mat.get-shadow`, which returns the `box-shadow` for a given elevation value. This API would function similarly to the existing `mat.elevation(x)` mixin but solely returns the value without applying it.\r\n\r\nThese enhancements aim to provide flexibility and address the missing `box-shadow` rule in a manner consistent with the Material 3 design choices.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-n9d5rj\r\nSteps to reproduce:\r\n1. Click on menu button\r\n2. See shadow is missing on opened menu panel\r\n\r\n\r\n### Expected Behavior\r\n\r\nElevated containers such like opened menu panels should have a shadow\r\n\r\n### Actual Behavior\r\n\r\nNo shadow\r\n\r\n### Environment\r\n\r\n- Angular: 17.2.0\r\n- CDK/Material: 17.2.0\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28618","RelatedDescription":"Open issue \"bug(experimental): missing box-shadow css rule on elevated containers with material 3 theme\" (#28618)"},{"Id":"2143855320","IsPullRequest":false,"CreatedAt":"2024-02-20T08:54:49","Actor":"mazhar-fis","Number":"28617","RawContent":null,"Title":"bug(Datepicker): Accessibility issue with Microsoft Narrator","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen you turn on Windows Narrator and use MS Edge, the date picker trigger button (calendar icon button) is not selectable. As  a result, I am unable to open date selection popup.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Open this link in MS Edge browser: https://stackblitz.com/edit/esgzuf?file=src%2Fexample%2Fdatepicker-overview-example.html\r\n2. Turn on Windows Narrator.\r\n3. Navigate to datepicker trigger button (calendar icon button)\r\n4. Click Space/Enter key\r\n<img width=\"223\" alt=\"image\" src=\"https://github.com/angular/components/assets/114717711/00721b69-ddda-4bc9-8e52-793563beea64\">\r\n\n\n### Expected Behavior\n\nDate selection popup should open.\r\n<img width=\"280\" alt=\"image\" src=\"https://github.com/angular/components/assets/114717711/7d9e4d7f-c6fc-4031-82af-41635f06e731\">\r\n\n\n### Actual Behavior\n\nDate selection popup does not open.\r\n<img width=\"223\" alt=\"image\" src=\"https://github.com/angular/components/assets/114717711/7f20012f-75cf-49bb-a905-8fea5e7df8e1\">\r\n\n\n### Environment\n\n- Angular: 17\r\n- CDK/Material: 17.2.0\r\n- Browser(s): MS Edge only\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28617","RelatedDescription":"Open issue \"bug(Datepicker): Accessibility issue with Microsoft Narrator\" (#28617)"},{"Id":"2143616989","IsPullRequest":false,"CreatedAt":"2024-02-20T06:47:45","Actor":"omshakti-maurya","Number":"28615","RawContent":null,"Title":"bug(COMPONENT): When using mat-icon inside the button, it always come before the text","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am trying to put the icon after the text but mat-icon always coming before the button text.\r\n\r\n```\r\n         <button\r\n            mat-button\r\n            color=\"primary\"\r\n            class=\"px-0\"\r\n            [matMenuTriggerFor]=\"menu\"\r\n          >\r\n            <span> Sort </span>\r\n            <mat-icon>sort</mat-icon>\r\n          </button>\r\n```\r\n\r\n![image](https://github.com/angular/components/assets/143780099/da0107f6-df36-454a-a985-f2d3fd4c1089)\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. create a button \r\n2. try to place the icon after the text in right side\r\n\n\n### Expected Behavior\n\nIcon should come after the button text if we are placing the icon next to text.\n\n### Actual Behavior\n\nI am trying to put the icon after the text but mat-icon always coming before the button text.\n\n### Environment\n\n- Angular: 16.2.12\r\n- CDK/Material:16.2.10\r\n- Browser(s):chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):macOs\r\n","Url":"https://github.com/angular/components/issues/28615","RelatedDescription":"Closed issue \"bug(COMPONENT): When using mat-icon inside the button, it always come before the text\" (#28615)"},{"Id":"2142367911","IsPullRequest":false,"CreatedAt":"2024-02-19T13:23:45","Actor":"evheniyrz","Number":"28614","RawContent":null,"Title":"bug(CdkDrag, CdkDragHandle): CdkDragHandle doesn't work when CdkDrag is set to host element","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nnot available\n\n### Description\n\nCdkDragHandle doesn't work when CdkDrag is set to host element via `@Component` decorator - `hostDirectives` array.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/~/github.com/evheniyrz/angular-cdk-drag-handle\r\nGitHubRepo: https://github.com/evheniyrz/angular-cdk-drag-handle.git\r\nSteps to reproduce:\r\n1. Create a component that is a draggable popup with css resize; both property.\r\n2. Attach the CdkDrag directive to the host. (/src/app/components/host-attached-directive/host-attached-directive.component.ts)\r\n3. Add a cdkDragHandle directive (in this case the HTMLHeaderElement) to the first child element in the view (template)\r\n4. Drag the window with the cursor positioned in a space other than the window header\r\n5. Resize the element with right bottom corner\n\n### Expected Behavior\n\n1. the window does not move if the cursor is in a space other than the window header\r\n2. the element can be resized without moving behind the cursor\r\n3. the element is moved only if the cursor is in the window title area\n\n### Actual Behavior\n\nthe window element moves whenever the cursor is positioned on the content\n\n### Environment\n\n- Angular: \"^17.2.0\",\r\n- CDK/Material: \"^17.2.0\",/\"^17.2.0\",\r\n- Browser(s): Chrome 121.0.6167.185 (64-bit), any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/28614","RelatedDescription":"Open issue \"bug(CdkDrag, CdkDragHandle): CdkDragHandle doesn't work when CdkDrag is set to host element\" (#28614)"},{"Id":"2142155551","IsPullRequest":false,"CreatedAt":"2024-02-19T11:30:54","Actor":"MikaStark","Number":"28612","RawContent":null,"Title":"docs-bug(theming): Change components theming guide to encourage css custom properties","State":"open","Body":"### Documentation Feedback\r\n\r\nHi 🖖\r\n\r\nI propose aligning the \"@angular/material Theming your components\" guide with the Material 3 philosophy by emphasizing the use of CSS custom properties over selectors and conventional CSS rules. As you are aware, Material 3 for the web heavily relies on CSS custom properties, and this adjustment would be more in line with the framework's theming approach.\r\n\r\nThe suggested change aligns with Material 3's philosophy of emitting only CSS custom property declarations, avoiding standard CSS properties (refer to https://material.angular.io/guide/material-3#applying-your-theme). Importantly, this approach remains fully compatible with the current Material 2 themes implementation.\r\n\r\nFurthermore, incorporating CSS custom properties will streamline the organization of CSS rules by allowing them to be centralized directly in the component's stylesheet. This centralization mitigates the challenges associated with splitting rules across multiple files, resulting in a more manageable and less error-prone maintenance process. It is worth noting that this approach enhances component autonomy, making theming optional, as custom properties can be set outside of a theme. This flexibility ensures a smoother development and maintenance experience.\r\n\r\nImplementing this proposal would greatly assist developers in their future migration from Material 2 to 3, requiring only changes to flat custom properties isolated in mixins. Additionally, it opens the door to granular customizations with CSS custom properties (see https://material.angular.io/guide/material-3#granular-customizations-with-css-custom-properties) even before material 3 integration becomes stable. Embracing CSS custom properties aligns with modern best practices and ensures future-proofing.\r\n\r\nThank you for considering this proposal.\r\n\r\nExample : \r\n\r\n```scss\r\n// carousel.scss\r\n\r\n.my-carousel {\r\n  display: flex;\r\n  color: var(--app-carousel-color);\r\n  font-family: var(--app-carousel-font-family);\r\n  padding: var(--app-carousel-padding);\r\n}\r\n\r\n.my-carousel-button {\r\n  border-radius: var(--app-carousel-shape, 4px);\r\n}\r\n\r\n// _carousel-theme.scss\r\n\r\n@mixin color($theme) {\r\n  --app-carousel-color: #{mat.get-theme-color($theme, primary)};\r\n}\r\n\r\n@mixin typography($theme) {\r\n  --app-carousel-font-family: #{mat.get-theme-typography($theme, headline-1)};\r\n}\r\n\r\n@mixin density($theme) {\r\n  --app-carousel-padding: #{48px + (2px * mat.get-theme-density($theme))};\r\n}\r\n```\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/guide/theming-your-components","Url":"https://github.com/angular/components/issues/28612","RelatedDescription":"Open issue \"docs-bug(theming): Change components theming guide to encourage css custom properties\" (#28612)"},{"Id":"2141888232","IsPullRequest":false,"CreatedAt":"2024-02-19T09:46:14","Actor":"landoephan","Number":"28611","RawContent":null,"Title":"bug(COMPONENT): programmatically focused link gets focused, but the style doesn't apply","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to focus a link programmatically. The following stackblitz shows the behavior:\r\n\r\nif you click on the button, the link should get focused. It actually get the focus, but you cannot see it.\r\nIf you change the code, so the button focuses the nearby input field, everything works well.\r\nOne more thing I noticed is that when is focus is actually on the button when you click it, the focus on the link works perfectly fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-9jocb8?file=src%2Fmain.ts,package.json\r\nSteps to reproduce:\r\n1. Open the link\r\n2. click on the button\r\n\n\n### Expected Behavior\n\nLink is visually focused\n\n### Actual Behavior\n\nLink is focused, but you cannot see it (tab back and forth shows the actual focus)\n\n### Environment\n\n- Angular: 17.0.1\r\n- CDK/Material:\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28611","RelatedDescription":"Closed issue \"bug(COMPONENT): programmatically focused link gets focused, but the style doesn't apply\" (#28611)"},{"Id":"2141255253","IsPullRequest":false,"CreatedAt":"2024-02-19T00:14:00","Actor":"SvenBudak","Number":"28607","RawContent":null,"Title":"feat(cdk/drag-drop): X and Y as percentage values instead of px","State":"open","Body":"### Feature Description\r\n\r\nWe are developing a mobile app in which users should be able to move elements back and forth in a certain area. The position of the elements should obviously be identical for every user. However, this does not work since each user has a different smartphone and therefore a different screen width, as cdk/drag-drop works with px values. One should be able to switch from px to % in order to ensure the correct position regardless of the screen resolution (or the width of the boundary element).","Url":"https://github.com/angular/components/issues/28607","RelatedDescription":"Open issue \"feat(cdk/drag-drop): X and Y as percentage values instead of px\" (#28607)"},{"Id":"2140769939","IsPullRequest":false,"CreatedAt":"2024-02-18T07:20:14","Actor":"nedpuganti","Number":"28605","RawContent":null,"Title":"m3 Issue with Form Labels Disappearing when Setting Density to less than -2","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter applying a density setting of less than -2 (e.g., -3 or lower) to the form elements, the form labels disappear from view. This unexpected behavior significantly impacts the usability and accessibility of the form, as users rely on form labels to understand the purpose of input fields. The disappearance of form labels disrupts the user experience and makes it difficult for users to interact with the form effectively. It is essential to rectify this issue to ensure that form labels remain visible and accessible regardless of the density setting applied to the form elements.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. https://ng-comp-devapp.web.app/input\r\n\n\n### Expected Behavior\n\nWhen setting the density property to a value less than -2 (e.g., -3 or lower):\r\n\r\n1. Form labels should remain visible and accessible alongside their respective input fields.\r\n2. Form labels should maintain their position and visibility within the form layout, ensuring that users can easily identify the purpose of each input field.\r\n3. The density setting should affect the spacing and visual styling of form elements while preserving the visibility and functionality of form labels.\n\n### Actual Behavior\n\nWhen the density property is set to a value less than -2 (e.g., -3 or lower), the form labels disappear from view, rendering them inaccessible to users. This unexpected behavior significantly impairs the usability and accessibility of the form, as users rely on form labels to understand the purpose of input fields. The absence of form labels creates confusion and makes it challenging for users to interact with the form accurately. It is imperative to address this issue promptly to restore the visibility and functionality of form labels across all density settings.\n\n### Environment\n\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): chrome \r\n- Operating System (e.g. Windows, macOS, Ubuntu): macos\r\n","Url":"https://github.com/angular/components/issues/28605","RelatedDescription":"Closed issue \"m3 Issue with Form Labels Disappearing when Setting Density to less than -2\" (#28605)"},{"Id":"2140766742","IsPullRequest":false,"CreatedAt":"2024-02-18T06:00:50","Actor":"nedpuganti","Number":"28604","RawContent":null,"Title":"m3 Issue with Dialog Width Property","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen attempting to set the width property of a dialog element, it does not behave as expected. Specifically, using a fixed width or setting it to 100% results in unexpected behavior. When setting the width to 100%, the dialog is pushed to the left instead of occupying the entire viewport width. This inconsistency in behavior hampers the intended layout and user experience. Further investigation is required to identify the root cause and implement a suitable solution.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. https://ng-comp-devapp.web.app/dialog\r\n\r\n\r\n### Expected Behavior\r\n\r\n1. When setting the width of the dialog element using a fixed value (e.g., pixels), the dialog should render with the specified width without any distortion or unexpected positioning.\r\n2. When setting the width of the dialog element to 100%, it should occupy the entire width of the viewport, ensuring that it is centered horizontally and does not get pushed to the left or right edges of the screen.\r\n3. The dialog should maintain responsiveness, adjusting its width dynamically based on the viewport size while adhering to the specified width constraints.\r\n\r\n### Actual Behavior\r\n\r\n1. When setting the width of the dialog element using a fixed value, the dialog may render with the specified width, but it might not align properly within the viewport or may not respect the specified width, leading to unexpected layout issues.\r\n2. When setting the width of the dialog element to 100%, it may not occupy the entire width of the viewport as intended. Instead, it might get pushed to the left side of the screen, causing it to appear off-center or misaligned.\r\n3. The responsiveness of the dialog may be compromised, with the width not adjusting appropriately based on the viewport size, leading to inconsistent presentation across different devices or screen sizes.\r\n\r\n### Environment\r\n\r\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Chrinr\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macos\r\n","Url":"https://github.com/angular/components/issues/28604","RelatedDescription":"Open issue \"m3 Issue with Dialog Width Property\" (#28604)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-02-23T03:30:03.2503202Z","RunDurationInMilliseconds":1442}