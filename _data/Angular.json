{"Data":{"Angular-Issues":{"Issues":[{"Id":"2641969472","IsPullRequest":false,"CreatedAt":"2024-11-08T00:53:23","Actor":"AliBarkook","Number":"58552","RawContent":null,"Title":"Slice pipe in new @for control-flow","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nPlease make the slice pipe available in new @for control-flow\n\n### Proposed solution\n\n-\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/58552","RelatedDescription":"Closed issue \"Slice pipe in new @for control-flow\" (#58552)"},{"Id":"2642300593","IsPullRequest":false,"CreatedAt":"2024-11-08T00:51:19","Actor":"AsmisAlan","Number":"58555","RawContent":null,"Title":"reflectComponentType not detect Inputs and Outputs Defined with output() and model() Functions","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nVersion: 17.3.12\n\nDescription:\n\nIn Angular version 17.3.12, the reflectComponentType function fails to recognize component inputs and outputs defined using the input(), output(), and model() functions. \n\n\n```ts\n// component example\nimport { Component, input, output, model, EventEmitter } from '@angular/core';\n\n@Component({\n  standalone: true,\n  template: `\n    <p>inputSignalExample: {{ inputSignalExample() }}</p>\n    <p>modelExample: {{ modelExample() }}</p>\n    <button (click)=\"onClick()\">Click</button>\n  `,\n})\nexport class MyComponent {\n  inputSignalExample = input<string>();\n  modelExample = model<string>();\n  @Output() outputWithDecoratorExample = new EventEmitter<string>();\n  outputSignalExample = output<string>();\n\n  onClick() {\n    this.outputWithDecoratorExample.emit('emit: outputWithDecoratorExample');\n    this.outputSignalExample.emit('emit: outputSignalExample');\n  }\n}\n```\n\nReflection results \n``` ts \nconst componentType = reflectComponentType(MyComponent);\n\nconst componentInputProperties = componentType.inputs.map((x) => x.templateName);\n\nconsole.log(componentInputProperties); \n// Expected: ['inputSignalExample', 'modelExample']\n// Result: ['inputSignalExample']\n\nconst componentOutputProperties = componentType.outputs.map((x) => x.templateName);\nconsole.log(componentOutputProperties);\n// Expected: ['outputWithDecoratorExample', 'outputSignalExample', 'modelExample']\n// Result: ['outputWithDecoratorExample']\n```\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\nIn Angular version 17.3.12, the reflectComponentType function fails to recognize component inputs and outputs defined using the input(), output(), and model() functions. \n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 17.3.0\nNode: 20.16.0\nPackage Manager: yarn 1.22.10\nOS: Windows 11 x64\n\nAngular: 17.3.0\nrxjs: 7.8.0\ntypescript: 5.2.2\nzone.js: 0.14.7\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58555","RelatedDescription":"Closed issue \"reflectComponentType not detect Inputs and Outputs Defined with output() and model() Functions\" (#58555)"},{"Id":"2642491426","IsPullRequest":true,"CreatedAt":"2024-11-08T00:05:34","Actor":"GeorgySerga","Number":"58557","RawContent":null,"Title":"fix(compiler): fix pseudo-selector parsing issues","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #58226\r\n\r\n\r\n## What is the new behavior?\r\n`:where` and `:is` with attached selectors of other types are parsed as all other selectors. If selectors consist only of those two than each of them is scoped separately (recursively) and result is returned back\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No (some selectors may be evaluated differently)\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58557","RelatedDescription":"Open PR \"fix(compiler): fix pseudo-selector parsing issues\" (#58557)"},{"Id":"2642318167","IsPullRequest":true,"CreatedAt":"2024-11-07T22:43:26","Actor":"alan-agius4","Number":"58556","RawContent":null,"Title":"build: remove redundant file","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58556","RelatedDescription":"Closed or merged PR \"build: remove redundant file\" (#58556)"},{"Id":"2642186280","IsPullRequest":true,"CreatedAt":"2024-11-07T21:00:45","Actor":"GeorgySerga","Number":"58554","RawContent":null,"Title":"fix(compiler): fix `:host` parsing in pseudo-selectors","State":"open","Body":"fix several use-cases where `:host` was used in or around pseudo-selectors\r\n- `:host` followed by a comma inside pseudo-selectors\r\n- `:host` outside of pseudo-selectors when another `:host` is present within see tests for examples\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nLook for added tests. Mainly\r\n- `:has(:host, .foo)` isn't parsed correctly (the comma after foo was recognized as a selector;\r\n- `:host:has(.foo.host)` isn't scoped correctly (added `[content]` scoping).\r\nIssue Number: #58226\r\nFixing issues outlined in this comment, doesn't solve all of the problems mentioned, splitting PR's as fixes seem not relevant.\r\n\r\n## What is the new behavior?\r\nDifferent `:host` combinations around pseudo-selectors are parsed correctly.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No (unless a broken selector is fixed now, so styles would apply)\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nThis PR doesn't resolve the whole issue, but fixes a set of use-cases. ","Url":"https://github.com/angular/angular/pull/58554","RelatedDescription":"Open PR \"fix(compiler): fix `:host` parsing in pseudo-selectors\" (#58554)"},{"Id":"2642121361","IsPullRequest":true,"CreatedAt":"2024-11-07T20:31:15","Actor":"thePunderWoman","Number":"58553","RawContent":null,"Title":"refactor(core): Ensure registry and map are empty on view destroy","State":"open","Body":"This cleans up the memory usage of the defer block registry and jsactionmap when a view is destroyed that contains a defer block that is not yet hydrated.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/58553","RelatedDescription":"Open PR \"refactor(core): Ensure registry and map are empty on view destroy\" (#58553)"},{"Id":"2640090980","IsPullRequest":true,"CreatedAt":"2024-11-07T18:51:51","Actor":"alan-agius4","Number":"58537","RawContent":null,"Title":"ci: add myself to the `renovate-changes` PullApprove group","State":"closed","Body":"I frequently need to ping others to approve Renovate PRs, so this should streamline the process.\r\n\r\n","Url":"https://github.com/angular/angular/pull/58537","RelatedDescription":"Closed or merged PR \"ci: add myself to the `renovate-changes` PullApprove group\" (#58537)"},{"Id":"2641836226","IsPullRequest":true,"CreatedAt":"2024-11-07T18:28:02","Actor":"josephperrott","Number":"58551","RawContent":null,"Title":"Revert \"docs(docs-infra): add support for `@remarks` (#58523)\"","State":"closed","Body":"This reverts commit c5ce302e0b0667aa7522f80a741241a116abf168.\r\n\r\nWe are unsure why this is causing issues on CI, but since these is the location of the failure, we can revert it to see if that solves the issue for us.","Url":"https://github.com/angular/angular/pull/58551","RelatedDescription":"Closed or merged PR \"Revert \"docs(docs-infra): add support for `@remarks` (#58523)\"\" (#58551)"},{"Id":"2641797338","IsPullRequest":true,"CreatedAt":"2024-11-07T18:05:12","Actor":"angular-robot","Number":"58550","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `4f10d65` -> `a705e8f` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `47e8f2d` -> `f8a09ce` |\n| angular/dev-infra | action | digest | `54e1f45` -> `a5da51e` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43LjMiLCJ1cGRhdGVkSW5WZXIiOiIzOS43LjMiLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbImFjdGlvbjogbWVyZ2UiLCJhcmVhOiBidWlsZCAmIGNpIiwidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/angular/pull/58550","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#58550)"},{"Id":"2641706830","IsPullRequest":true,"CreatedAt":"2024-11-07T17:29:52","Actor":"mgechev","Number":"58549","RawContent":null,"Title":"docs: update the angular roadmap for v19","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/58549","RelatedDescription":"Open PR \"docs: update the angular roadmap for v19\" (#58549)"},{"Id":"2641683882","IsPullRequest":true,"CreatedAt":"2024-11-07T17:17:56","Actor":"alan-agius4","Number":"58548","RawContent":null,"Title":"docs(docs-infra): update default generic values and add constraints for type parameters in functions","State":"open","Body":"\r\nBefore\r\n```typescript\r\ncreateNodeRequestHandler(\r\n  handler: T\r\n): T;\r\n```\r\n\r\n```typescript\r\nclass NgIf<T> {\r\n  @Input() set ngIf(value: T);\r\n  @Input() set ngIfThen(value: TemplateRef<NgIfContext<T>> | null);\r\n  @Input() set ngIfElse(value: TemplateRef<NgIfContext<T>> | null);\r\n  static ngTemplateGuard_ngIf: \"binding\";\r\n  static ngTemplateContextGuard<T>(dir: NgIf<T>, ctx: any): boolean;\r\n}\r\n```\r\n\r\nNow\r\n```typescript\r\ncreateNodeRequestHandler<T extends NodeRequestHandlerFunction>(\r\n  handler: T\r\n): T;\r\n```\r\n\r\n```typescript\r\nclass NgIf<T = unknown> {\r\n  @Input() set ngIf(value: T);\r\n  @Input() set ngIfThen(value: TemplateRef<NgIfContext<T>> | null);\r\n  @Input() set ngIfElse(value: TemplateRef<NgIfContext<T>> | null);\r\n  static ngTemplateGuard_ngIf: \"binding\";\r\n  static ngTemplateContextGuard<T>(dir: NgIf<T>, ctx: any): boolean;\r\n}\r\n```\r\n","Url":"https://github.com/angular/angular/pull/58548","RelatedDescription":"Open PR \"docs(docs-infra): update default generic values and add constraints for type parameters in functions\" (#58548)"},{"Id":"2641558400","IsPullRequest":true,"CreatedAt":"2024-11-07T16:35:29","Actor":"clydin","Number":"58547","RawContent":null,"Title":"docs: add initial new feature info for application builder","State":"open","Body":"Adds information about loader option, loader import attributes, and import/export condition features.","Url":"https://github.com/angular/angular/pull/58547","RelatedDescription":"Open PR \"docs: add initial new feature info for application builder\" (#58547)"},{"Id":"2641479621","IsPullRequest":false,"CreatedAt":"2024-11-07T16:03:07","Actor":"mathieuBP","Number":"58546","RawContent":null,"Title":"VSCode extension upgrade displays errors because of new standalone defaults.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlanguage-service\n\n### Is this a regression?\n\nNo\n\n### Description\n\nProject is running on Angular 17, but the vscode extension runs the v19 language service. This causes all NON-standalone components be see as standalones since they do not explicitly decorate with `standalone:false` . I didn't mark it as a regression as this seems to be usual behaviour but this kind of forces to hurry migration to Angular 19 or else we loose all IntelliSense.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n'app-modal' is not a known element:\n1. If 'app-modal' is an Angular component, then verify that it is included in the '@Component.imports' of this component.\n2. If 'app-modal' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@Component.schemas' of this component to suppress this message.ngtsc(-998001)\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 17.3.10\nNode: 18.18.2\nPackage Manager: npm 10.2.4\nOS: win32 x64\n\nAngular: undefined\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1703.10 (cli-only)\n@angular-devkit/core         17.3.10 (cli-only)\n@angular-devkit/schematics   17.3.10 (cli-only)\n@schematics/angular          17.3.10 (cli-only)\ntypescript                   4.8.3\n\n### Anything else?\n\nWould it be feasible to instead use the package installed in the project?? Or use a different but one that matches package.json semver of the core or something?","Url":"https://github.com/angular/angular/issues/58546","RelatedDescription":"Open issue \"VSCode extension upgrade displays errors because of new standalone defaults.\" (#58546)"},{"Id":"2638334180","IsPullRequest":true,"CreatedAt":"2024-11-07T14:30:33","Actor":"clydin","Number":"58527","RawContent":null,"Title":"refactor(core): always create new renderer when applying HMR metadata update","State":"closed","Body":"The DOM renderer classes perform initialization that captures state from the component definition during construction. To ensure that the state is kept synchronized with any newly applied metadata from an HMR `applyMetadata` call, each renderer is now recreated during the apply process. This also allows inline component styles to be updated in cases where external component stylesheets may not be viable.","Url":"https://github.com/angular/angular/pull/58527","RelatedDescription":"Closed or merged PR \"refactor(core): always create new renderer when applying HMR metadata update\" (#58527)"},{"Id":"2640172065","IsPullRequest":true,"CreatedAt":"2024-11-07T14:30:02","Actor":"alan-agius4","Number":"58538","RawContent":null,"Title":"test(platform-server): fix issue with `ngServerMode` when focusing `fit` tests","State":"closed","Body":"This commit addresses a problem with tests that use the `fit` function to focus on individual test cases. While these tests run successfully in the full suite, they fail when focused individually using `fit`.\r\n\r\nThe issue lies in the behavior of `withEventReply` and other hydration-related functions (i.e., `provideX`, `withX`). These functions return platform-specific providers based on the `ngServerMode` setting, causing inconsistencies between server and browser environments. As a result, provider instances cannot be reused across server and browser applications.\r\n\r\n**Example of problematic code:**\r\n```ts\r\nconst hydrationFeatures = [withEventReply()];\r\nconst html = await ssr(SimpleComponent, { hydrationFeatures });\r\n// Expected behavior ...\r\n\r\nconst appRef = await prepareEnvironmentAndHydrate(doc, html, SimpleComponent, {\r\n  hydrationFeatures,\r\n});\r\n// Expected behavior ...\r\n```\r\n\r\n**Solution:**\r\nTo address this, we define `hydrationFeatures` as a function instead of a static array. This ensures that a new instance of `withEventReply` is created separately for each environment, eliminating platform-specific mismatches between server and browser contexts:\r\n\r\n```typescript\r\nconst hydrationFeatures = () => [withEventReply()];  // Define as a function\r\nconst html = await ssr(SimpleComponent, { hydrationFeatures: hydrationFeatures() });\r\n// Expected behavior ...\r\n\r\nconst appRef = await prepareEnvironmentAndHydrate(doc, html, SimpleComponent, {\r\n  hydrationFeatures: hydrationFeatures(),\r\n});\r\n// Expected behavior ...\r\n```\r\n","Url":"https://github.com/angular/angular/pull/58538","RelatedDescription":"Closed or merged PR \"test(platform-server): fix issue with `ngServerMode` when focusing `fit` tests\" (#58538)"},{"Id":"2641095824","IsPullRequest":true,"CreatedAt":"2024-11-07T14:27:15","Actor":"josephperrott","Number":"58542","RawContent":null,"Title":"fix(docs-infra): update search provider link","State":"closed","Body":"Update the link used to reference algolia as the search provider on our documentation site. Adds a few URL parameters for algolia to map back to our usage.","Url":"https://github.com/angular/angular/pull/58542","RelatedDescription":"Closed or merged PR \"fix(docs-infra): update search provider link\" (#58542)"},{"Id":"2641149766","IsPullRequest":true,"CreatedAt":"2024-11-07T14:26:30","Actor":"angular-robot","Number":"58544","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `9f63e93` -> `4f10d65` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f7a60f3` -> `47e8f2d` |\n| angular/dev-infra | action | digest | `933dcd4` -> `54e1f45` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43LjEiLCJ1cGRhdGVkSW5WZXIiOiIzOS43LjEiLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbImFjdGlvbjogbWVyZ2UiLCJhcmVhOiBidWlsZCAmIGNpIiwidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/angular/pull/58544","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#58544)"},{"Id":"2641143641","IsPullRequest":false,"CreatedAt":"2024-11-07T14:09:48","Actor":"OmarSalama7","Number":"58543","RawContent":null,"Title":"Signal effect for an input signal gets triggered after writeValue in custom form component (control value accessor)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, forms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nfor a component that is implementing ControlValueAccessor interface, writeValue is being called **before** an effect for an input signal. This is inconsistent with the older way of using input setter or ngOnChanges to trigger some side effect at component initialisation.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-xhlf3j?file=test.component.ts\n\n### Please provide the exception or error you saw\n\nThere is no error, just inconsistency with input setters/ngOnChanges which should be replaced by signals.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-rc.1\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0-rc.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.1\n@angular-devkit/build-angular   19.0.0-rc.1\n@angular-devkit/core            19.0.0-rc.1\n@angular-devkit/schematics      19.0.0-rc.1\n@schematics/angular             19.0.0-rc.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n### Anything else?\n\n**Use case why it would make sense:**\nI am defining an empty form record. When the input is initialised with list of items: \n\n1. **effect** is triggered to populate the form record with form controls reflecting the items\n2. **writeValue** updates the form record value\n\n\nPlease note that I encountered this bug on version 18.2.10. Then I thought it might be fixed already with this [PR](https://github.com/angular/angular/pull/57874) so I tested it again with 19.0.0-rc.1\n\nAngular CLI: 18.2.10\nNode: 20.12.2\nPackage Manager: npm 10.5.0\nOS: darwin x64\n\nAngular: 18.2.9\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, material, platform-browser\n... platform-browser-dynamic, platform-server, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.10\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.10\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10","Url":"https://github.com/angular/angular/issues/58543","RelatedDescription":"Open issue \"Signal effect for an input signal gets triggered after writeValue in custom form component (control value accessor)\" (#58543)"},{"Id":"2640996530","IsPullRequest":true,"CreatedAt":"2024-11-07T13:11:33","Actor":"devversion","Number":"58541","RawContent":null,"Title":"refactor(migrations): conditionally create plain TS programs for Tsurge analyzers","State":"open","Body":"Mostly for 1P use-cases. See individual commits","Url":"https://github.com/angular/angular/pull/58541","RelatedDescription":"Open PR \"refactor(migrations): conditionally create plain TS programs for Tsurge analyzers\" (#58541)"},{"Id":"2638540059","IsPullRequest":true,"CreatedAt":"2024-11-07T12:27:12","Actor":"clydin","Number":"58528","RawContent":null,"Title":"docs: add component HMR information to application build system","State":"closed","Body":"Add background and usage information for the new component HMR features available in v19.","Url":"https://github.com/angular/angular/pull/58528","RelatedDescription":"Closed or merged PR \"docs: add component HMR information to application build system\" (#58528)"},{"Id":"2640573393","IsPullRequest":false,"CreatedAt":"2024-11-07T10:32:03","Actor":"eneajaho","Number":"58540","RawContent":null,"Title":"feature: measure rendering time & notify users when they are rendering too much [using rendering budget]","State":"open","Body":"Idea: Check when the last requestAnimationFrame has no more work to do and if it's more than the rendering budget just warn dev.","Url":"https://github.com/angular/angular/issues/58540","RelatedDescription":"Open issue \"feature: measure rendering time & notify users when they are rendering too much [using rendering budget]\" (#58540)"},{"Id":"2638208958","IsPullRequest":false,"CreatedAt":"2024-11-07T09:23:14","Actor":"kinkaz","Number":"58526","RawContent":null,"Title":"Issue with SSR: intermittent errors under load","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using SSR in my app, we intermittently encounter error pages under load. Here are two examples of errors observed:\n\n- TypeError: this._platformLocation.getBaseHrefFromDOM is not a function\n- ReferenceError: document is not defined\n\nI think it's related to the SSR failing (crash).\n\n**Steps to Reproduce**\n\nOpen the [website](https://test.particip.swiss/passer-mon-permis/permis-de-conduire-voiture-b) and hit the refresh button ~10 times quickly. This reliably triggers the errors, simulating the load scenario.\n\n**Background**\n- Before updating Angular from 18.2.4 to 18.2.10, SSR would fail under load, and restarting the server (`pm2 restart`) was required to resolve it.\n- After updating to 18.2.10 (following this [Angular PR](https://github.com/angular/angular/pull/58112)), the error still occurs, but now a single page refresh is enough to resolve it, so a server restart is no longer needed. It still a big issue as I guess users won't necessarily try to refresh the page on their own.\n\n**Additional Information**\n\nThe application uses Nx and pm2 to start the server on the hosting service.\n\nAny insights on what could be causing this intermittent error would be greatly appreciated.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://test.particip.swiss/passer-mon-permis/permis-de-conduire-voiture-b\n\n### Please provide the exception or error you saw\n\nReferenceError: document is not defined\n    at Object.Mx [as useFactory] (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:35:29288)\n    at Object.r [as factory] (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:12430)\n    at Ks.hydrate (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:11571)\n    at Ks.get (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:10685)\n    at hT (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2448)\n    at re (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2527)\n    at Z (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2571)\n    at new e (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:34:80191)\n    at Object.factory (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:34:81271)\n    at Ks.hydrate (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:11571)\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.10\nNode: 20.10.0\nPackage Manager: npm 10.2.3\nOS: darwin arm64\n\nAngular: 18.2.10\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... elements, forms, language-service, localize\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.6\n@angular-devkit/build-angular   18.2.10\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/fire                   18.0.1\n@schematics/angular             18.2.10\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\nI'm using Nx and pm2 the start the server on the hosting service.\n\nHere's my server.ts : \n\n```typescript\nimport 'zone.js/node';\nimport { CommonEngine } from '@angular/ssr';\nimport express from 'express';\nimport { dirname, join, resolve } from 'node:path';\nimport bootstrap from './src/main.server';\nimport { environment } from './src/environments/environment';\nimport { fileURLToPath } from 'node:url';\nimport { APP_BASE_HREF } from '@angular/common';\n\n// The Express app is exported so that it can be used by serverless Functions.\nexport function app(): express.Express {\n  const server = express();\n  const serverDistFolder = dirname(fileURLToPath(import.meta.url));\n  const browserDistFolder = resolve(serverDistFolder, '../browser');\n  const indexHtml = join(serverDistFolder, 'index.server.html');\n\n  const commonEngine = new CommonEngine();\n\n  server.set('view engine', 'html');\n  server.set('views', browserDistFolder);\n\n  // Example Express Rest API endpoints\n  // server.get('/api/**', (req, res) => { });\n  // Serve static files from /browser\n  server.get(\n    '*.*',\n    express.static(browserDistFolder, {\n      maxAge: '1y',\n      index: 'index.html',\n    }),\n  );\n\n  // All regular routes use the Angular engine\n  server.get('*', (req, res, next) => {\n    const { protocol, originalUrl, baseUrl, headers } = req;\n\n    commonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [{ provide: APP_BASE_HREF, useValue: baseUrl }],\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n  });\n\n  return server;\n}\n\nfunction run(): void {\n  const port = environment.ssrPort;\n\n  // Start up the Node server\n  const server = app();\n  server.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\n\nrun();\n``` ","Url":"https://github.com/angular/angular/issues/58526","RelatedDescription":"Closed issue \"Issue with SSR: intermittent errors under load\" (#58526)"},{"Id":"2639625681","IsPullRequest":false,"CreatedAt":"2024-11-07T00:56:00","Actor":"pishchela","Number":"58536","RawContent":null,"Title":"Angular 18 migration issue: Replace deprecated Http modules doesn't work correctly","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning `ng update` on an Angular 17 project with unit tests containing both `HttpClientModule` and `HttpClientTestingModule`. Result of the \"Replace deprecated HTTP modules with provider functions\" schematics is invalid.\n\nBefore:\n\n```\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\n\ndescribe('AppComponent', () => {\n\n  beforeEach(async (): void => {\n    await TestBed.configureTestingModule({\n      imports: [\n        HttpClientModule,\n        HttpClientTestingModule,\n        AppComponent,\n      ],\n      providers: [\n      ],\n    }).compileComponents();\n  });\n});\n```\n\nAfter:\n\n\n```\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { provideHttpClientTesting } from '@angular/common/http/testing';\n\ndescribe('AppComponent', () => {\n\n  beforeEach(async (): void => {\n    await TestBed.configureTestingModule({\n    imports: [HttpClientModule,\n        AppComponent],\n    providers: [\n        provideHttpClient(withInterceptorsFromDi()),\n        provideHttpClientTesting()\n    ]\n}{\n    imports: [HttpClientTestingModule,\n        AppComponent],\n    providers: [\n        provideHttpClient(withInterceptorsFromDi())\n    ]\n}).compileComponents();\n  });\n}\n});\n```\n\nExpected result would be TestBed.configureTestingModule with single object inside and replaced deprecated modules with provider functions\n\n\n\n### Minimal Reproduction\n\n1. command run:  `npx @angular/cli@17 new angular-18-migration-issues`\n2. Use both `HttpClientModule` and `HttpClientTestingModule` in `TestBed.configureTestingModule`\n3. command run: `ng update @angular/core@18 @angular/cli@18`\n\n[Example commit](https://github.com/pishchela/angular-18-migration-issues/commit/468ca798497402665db1f68762f6664cf237b0d2#diff-002e1a20416b0120fbe06390465dd02fb2d00c771c5ae171766211daef759308)\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.8\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.8\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58536","RelatedDescription":"Open issue \"Angular 18 migration issue: Replace deprecated Http modules doesn't work correctly\" (#58536)"},{"Id":"2638873889","IsPullRequest":true,"CreatedAt":"2024-11-06T18:20:28","Actor":"thePunderWoman","Number":"58535","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/58535","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#58535)"},{"Id":"2638870142","IsPullRequest":true,"CreatedAt":"2024-11-06T18:18:43","Actor":"thePunderWoman","Number":"58534","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58534","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#58534)"},{"Id":"2638827614","IsPullRequest":true,"CreatedAt":"2024-11-06T17:56:13","Actor":"thePunderWoman","Number":"58533","RawContent":null,"Title":"docs: release notes for the v18.2.11 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/58533","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.11 release\" (#58533)"},{"Id":"2638819130","IsPullRequest":true,"CreatedAt":"2024-11-06T17:53:34","Actor":"thePunderWoman","Number":"58532","RawContent":null,"Title":"Bump version to \"v18.2.11\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58532","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.11\" with changelog.\" (#58532)"},{"Id":"2638618678","IsPullRequest":true,"CreatedAt":"2024-11-06T16:46:40","Actor":"josephperrott","Number":"58530","RawContent":null,"Title":"fix(core): this is a test","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58530","RelatedDescription":"Closed or merged PR \"fix(core): this is a test\" (#58530)"},{"Id":"2638632092","IsPullRequest":false,"CreatedAt":"2024-11-06T16:35:47","Actor":"naveedahmed1","Number":"58531","RawContent":null,"Title":"Gracefully Handle Duplicate Server Provider Imports in SSR Configuration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nYes\n\n### Description\n\n**Description**: \n\nI have an older Angular application that I’ve kept updated to the latest Angular versions. Recently, I encountered an issue related to server-side rendering (SSR) when updating my server configuration.\n\n**Problem**\nBefore the introduction of `provideServerRendering()`, I used the following providers in my app's server configuration file for SSR:\n\n```\nproviders: [\n  provideAnimationsAsync(\"noop\"),\n  importProvidersFrom(\n    ServerModule\n  )\n]\n```\n\nWith the introduction of `provideServerRendering()` in recent versions,  I updated my providers array to include `provideServerRendering()`, following the new SSR support practices. However, the [SSR documentation](https://angular.dev/guide/ssr) currently doesn’t provide any details about provideServerRendering().\n\nMy updated configuration looked like this:\n\n```\nproviders: [\n  provideServerRendering(),\n  provideAnimationsAsync(\"noop\"),\n  importProvidersFrom(\n    ServerModule\n  )\n]\n```\n\nAfter making this update, I noticed that Angular SSR was adding two `<script id=\"app-state\" type=\"application/json\">` tags to the HTML returned from the server:\n\n```\n<script id=\"app-state\" type=\"application/json\">...</script>\n<script id=\"app-state\" type=\"application/json\">...</script>\n```\n\n\n**Investigation**\nAfter some debugging, I discovered that the duplication was due to both provideServerRendering() and importProvidersFrom(ServerModule) setting up the same SSR-related providers.\n\nIn reviewing the Angular source code, I found that provideServerRendering() internally imports several providers, including:\n\n- provideNoopAnimations(), whereas my configuration used provideAnimationsAsync(\"noop\")\n- TRANSFER_STATE_SERIALIZATION_PROVIDERS\n- SERVER_RENDER_PROVIDERS\n- SERVER_HTTP_PROVIDERS\n\n**Source links:**\n\n[provideServerRendering() implementation](https://github.com/angular/angular/blob/4ef11c987de2c155f711af04d1650719f00a204d/packages/platform-server/src/provide_server.ts#L34)\n[Additional server providers](https://github.com/angular/angular/blob/4ef11c987de2c155f711af04d1650719f00a204d/packages/platform-server/src/server.ts#L77)\n\n**Solution**\nTo resolve the issue, I removed `importProvidersFrom(ServerModule)` from my providers array:\n\n```\nproviders: [\n  provideServerRendering()\n]\n\n```\n\nThis change resolved the duplication issue, and only one `<script id=\"app-state\" type=\"application/json\">` tag was rendered.\n\n**Suggested Improvement**\nIt would be beneficial if Angular handled duplicate SSR providers more gracefully, perhaps by:\n\n- Making subsequent instances of the same server-related provider a noop, or\n- Displaying a warning to notify developers about potential duplication issues, enhancing the developer experience.\n\nAdditionally, an updated SSR guide would be extremely helpful. A guide that explains how provideServerRendering() works behind the scenes, detailing what it imports and how it should be used in conjunction with (or in place of) ServerModule, would clear up any confusion around required SSR configurations.\n\nThanks for considering this request to improve SSR configuration clarity and developer experience!\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\nI noticed that Angular SSR was adding two `<script id=\"app-state\" type=\"application/json\">` tags to the HTML returned from the server:\n\n```\n<script id=\"app-state\" type=\"application/json\">...</script>\n<script id=\"app-state\" type=\"application/json\">...</script>\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-rc.0\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.0-rc.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, google-maps, material, platform-browser\n... platform-browser-dynamic, platform-server, pwa, router\n... service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0\n@angular-devkit/schematics      19.0.0-rc.0\n@angular/fire                   18.0.1\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58531","RelatedDescription":"Open issue \"Gracefully Handle Duplicate Server Provider Imports in SSR Configuration\" (#58531)"},{"Id":"2638035220","IsPullRequest":true,"CreatedAt":"2024-11-06T15:30:21","Actor":"devversion","Number":"58525","RawContent":null,"Title":"refactor(migrations): speed up code refactoring action for queries","State":"closed","Body":"We were not properly passing around the TCB full program optimization, so TCB generation was done per individual file. This significantly slowed down reference resolution.","Url":"https://github.com/angular/angular/pull/58525","RelatedDescription":"Closed or merged PR \"refactor(migrations): speed up code refactoring action for queries\" (#58525)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2642569128","IsPullRequest":true,"CreatedAt":"2024-11-08T01:06:55","Actor":"clydin","Number":"28816","RawContent":null,"Title":"fix(@angular/build): avoid overwriting inline style bundling additional results","State":"open","Body":"A component may contain multiple inline styles that will originate from the same containing file. The content of the processed style is sent directly to the Angular compiler. However, any additional result files are collected and emitted in the application output. In most cases, this worked as expected as inline styles rarely had resource references that would overwrite each other. However, the potential is present for later inline styles for a component to overwrite these output files. To avoid this potential problem, the internal identifier now accounts for both the class name and order of the inline styles. This ensures that each inline style retains a unique additional results entry.","Url":"https://github.com/angular/angular-cli/pull/28816","RelatedDescription":"Open PR \"fix(@angular/build): avoid overwriting inline style bundling additional results\" (#28816)"},{"Id":"2642004122","IsPullRequest":true,"CreatedAt":"2024-11-07T22:33:04","Actor":"alan-agius4","Number":"28814","RawContent":null,"Title":"build: update `rollup-license-plugin` to `3.0.1`","State":"closed","Body":"There is no need for the local patch as the issue was fixed upstream\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/28814","RelatedDescription":"Closed or merged PR \"build: update `rollup-license-plugin` to `3.0.1`\" (#28814)"},{"Id":"2642281207","IsPullRequest":false,"CreatedAt":"2024-11-07T21:48:47","Actor":"damiandennis","Number":"28815","RawContent":null,"Title":"ng serve dies quietly windows","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nng serve running on a windows client seems to die quietly for all new projects. existing projects that I have upgraded etc seem to still be ok.\n\n### Minimal Reproduction\n\nnpm install -g @angular/cli\nng new project\ncd project\nng serve\n\npauses then dies without any indication of anything going wrong, even using --verbose nothing happens.\n\n### Exception or Error\n\nno\n\n### Your Environment\n\nos:   Microsoft Windows 10 Enterprise\nnode: 20.15.0\nng:   18.2.11\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28815","RelatedDescription":"Open issue \"ng serve dies quietly windows\" (#28815)"},{"Id":"2640223333","IsPullRequest":false,"CreatedAt":"2024-11-07T18:28:53","Actor":"superstreber3","Number":"28807","RawContent":null,"Title":"\":method\" is an invalid header name.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading to 19.0.0-rc.1 and enabling SSR, I received this error on startup. When I use Angular 18, I don't receive that error.\n\nI tried it with node 18, 21 and 22\n\n![Image](https://github.com/user-attachments/assets/c3afc88f-6771-480c-b1b2-8763f888bd73)\n¨\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n08:51:08 [vite] Internal server error: Headers.append: \":method\" is an invalid header name.\n      at webidl.errors.exception (node:internal/deps/undici/undici:1801:14)\n      at webidl.errors.invalidArgument (node:internal/deps/undici/undici:1812:28)\n      at appendHeader (node:internal/deps/undici/undici:2218:29)\n      at _Headers.append (node:internal/deps/undici/undici:2341:16)\n      at createRequestHeaders (C:\\Projects\\k8-fastbuild-ST-70f2edae98f4\\bin\\packages\\angular\\ssr\\node\\src\\request.mjs:35:21)\n      at createWebRequestFromNodeRequest (C:\\Projects\\k8-fastbuild-ST-70f2edae98f4\\bin\\packages\\angular\\ssr\\node\\src\\request.mjs:20:18)\n      at C:\\Projects\\**\\client\\node_modules\\@angular\\build\\src\\tools\\vite\\middlewares\\ssr-middleware.js:37:40\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\nAngular CLI: 19.0.0-rc.1\nNode: 18.20.4\nPackage Manager: yarn 3.6.3\nOS: win32 x64\n\nAngular: 19.0.0-rc.1\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.1\n@angular-devkit/build-angular   19.0.0-rc.1\n@angular-devkit/core            19.0.0-rc.1\n@angular-devkit/schematics      19.0.0-rc.1\n@schematics/angular             19.0.0-rc.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28807","RelatedDescription":"Closed issue \"\":method\" is an invalid header name.\" (#28807)"},{"Id":"2640650314","IsPullRequest":true,"CreatedAt":"2024-11-07T18:28:52","Actor":"alan-agius4","Number":"28808","RawContent":null,"Title":"fix(@angular/ssr): support for HTTP/2 request/response handling","State":"closed","Body":"This commit introduces support for handling HTTP/2 requests and responses in the `@angular/ssr` package.\r\n\r\nCloses #28807\r\n","Url":"https://github.com/angular/angular-cli/pull/28808","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): support for HTTP/2 request/response handling\" (#28808)"},{"Id":"2641309268","IsPullRequest":false,"CreatedAt":"2024-11-07T17:34:17","Actor":"RobSis","Number":"28811","RawContent":null,"Title":"Lazy-loading not supported using application builder's prerender","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nWhen performing pre-rendering with the new application builder, dynamically loaded components can't be used.\n\nThis was not an issue with the legacy (webpack-based) prerender and is not an issue with other build modes (ssr, serve, development).\n\n```javascript\n   const promise = import(\"./components/pageA.component\").then(m => m.PageAComponent);\n   promise.then(componentClass => {\n      // This clause is never called when prerendering with the new builder, but works on the legacy webpack prerender.\n      this.loadComponentDynamically(componentClass, this.child, content)\n   });\n```\n\nLazy-loading in router continues to work:\n\n```javascript\n   export const routes: Routes = [{\n     path: 'pageC',\n     loadComponent: () => import('./components/pageC.component').then(m => m.PageCComponent)\n  },\n```\n\n### Minimal Reproduction\n\nA minimal example demonstrating the problem: https://github.com/RobSis/angular-lazy-components/\n\nOr on StackBlitz: https://stackblitz.com/~/github.com/RobSis/angular-lazy-components\n\nRun `npm run legacy-prerender` and see that `dist/lazy-components/browser/pageA/index.html` contains rendered component.\n\nRun `npm run prerender` to see that while Router lazy-loaded `pageC/index.html` is rendered, `pageA/index.html` is empty. \n\n### Exception or Error\n\nNo error visible.\n\n### Your Environment\n\nAngular CLI: 18.2.11\nNode: 20.9.0\nPackage Manager: npm 10.1.0\nOS: linux x64\n\nAngular: 18.2.11\n... animations, cli, common, compiler, compiler-cli, core\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@schematics/angular             18.2.11\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else relevant?\n\nThe chunk file seems to be correctly created:\n\n```\nBrowser bundles        \nLazy chunk files        | Names               |  Raw size\nchunk-WI2JHTDR.js       | pageA-component     |   1.45 kB | \nchunk-KGLGRA3U.js       | pageC-component     |   1.20 kB |\n```","Url":"https://github.com/angular/angular-cli/issues/28811","RelatedDescription":"Closed issue \"Lazy-loading not supported using application builder's prerender\" (#28811)"},{"Id":"2641301653","IsPullRequest":false,"CreatedAt":"2024-11-07T17:29:57","Actor":"XavierDupessey","Number":"28810","RawContent":null,"Title":"Unable to use parseTemplate from @angular/compiler in a custom schematic","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\n\nI'm trying to write a custom migration schematic that updates component templates. To accomplish this, I intended to use the `parseTemplate` function from `@angular/compiler`, as it seems ideal for accessing and manipulating the AST.\n\nHowever, I'm encountering runtime errors when attempting to use this function (see Minimal Reproduction).\n\nIs this function suitable for my needs, or would you recommend a different approach?\n\nThank you!\n\n### Minimal Reproduction\n\n**Attempt 1**: using `\"module\": \"commonjs\"` in `tsconfig.json`\n 1. Add `@angular/compiler\": \"^18.0.0\"` in the schematic project\n 2. Add import `{ parseTemplate } from '@angular/compiler';` in the schematic\n 3. Run the schematic\n\nError:\n```\nAn unhandled exception occurred: require() of ES Module [...]\\node_modules\\@angular\\compiler\\fesm2022\\compiler.mjs not supported.\nInstead change the require of [...]\\node_modules\\@angular\\compiler\\fesm2022\\compiler.mjs to a dynamic import() which is available in all CommonJS modules.\n```\n\n-----------------\n\n**Attempt 2**: using `\"module\": \"ES2022\"` in `tsconfig.json` + `\"type\": \"module\"` in `package.json`\nSame reproduction steps\n\nError:\n```\nAn unhandled exception occurred: Cannot use import statement outside a module\n```\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular 18\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28810","RelatedDescription":"Closed issue \"Unable to use parseTemplate from @angular/compiler in a custom schematic\" (#28810)"},{"Id":"2641667924","IsPullRequest":false,"CreatedAt":"2024-11-07T17:11:25","Actor":"cexbrayat","Number":"28813","RawContent":null,"Title":"Karma builder issue with jasmine.clock() with \"builderMode: application\"","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `jasmine.clock()`, tests are throwing with the application builder\n\n### Minimal Reproduction\n\nGenerate a new project with `npx @angular/cli@19.0.0-rc.1 new karma-clock --defaults --no-routing`\nUpdate the test `app.component.spec.ts` with:\n\n```ts\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent],\n    }).compileComponents();\n    jasmine.clock().install();\n  });\n\n  afterEach(() => jasmine.clock().uninstall());\n```\n\nRun the test: everything is fine.\n\nAdd \"builderMode\": \"application\", to angular.json in the karma options.\nRun `ng test` again, the tests fail\n\n### Exception or Error\n\n07 11 2024 18:11:04.827:INFO [Chrome 130.0.0.0 (Mac OS 10.15.7)]: Connected on socket cJzDaksNAB24vLcmAAAB with id 93837966\nChrome 130.0.0.0 (Mac OS 10.15.7) AppComponent should render title FAILED\n\tError: Jasmine Clock was unable to install over custom global timer functions. Is the clock already installed?\n\n### Your Environment\n\nAngular CLI: 19.0.0-rc.1\nNode: 20.13.1\nPackage Manager: npm 9.7.1\nOS: darwin arm64\n\nAngular: 19.0.0-rc.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.1\n@angular-devkit/build-angular   19.0.0-rc.1\n@angular-devkit/core            19.0.0-rc.1\n@angular-devkit/schematics      19.0.0-rc.1\n@schematics/angular             19.0.0-rc.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28813","RelatedDescription":"Open issue \"Karma builder issue with jasmine.clock() with \"builderMode: application\"\" (#28813)"},{"Id":"2641312430","IsPullRequest":false,"CreatedAt":"2024-11-07T15:07:55","Actor":"jpike88","Number":"28812","RawContent":null,"Title":"Strange 404 CSS error on ng serve, maybe related to hashing?","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nmaybe 18.x, I'm on 19.0.0-rc.1 now\n\n### Description\n\nSeems that when I have a particular style in my styles template, it breaks the css for that component with 404. But tweaking it in any way fixes it.\n\n**IMPORTANT: this did not throw any error, I didn't even know there was a problem until I saw the layout being out of touch**\n\nSee screenshots.\n\nBroken (see 404 error):\n\n![Image](https://github.com/user-attachments/assets/249f60a0-290f-49f6-b840-44689b849400)\n\nWorking:\n\n![Image](https://github.com/user-attachments/assets/e7ddd6de-b7cd-4e97-a824-c18b1fb7d80b)\n\nIt doesn't matter how I change the styles, even just swapping two of the declarations can fix the problem. I have no idea how to begin to make this reproducible.\n\n\n### Minimal Reproduction\n\nsee description \n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.0-rc.1\nNode: 20.12.2\nPackage Manager: npm 10.8.1\nOS: darwin arm64\n\nAngular: 19.0.0-rc.1\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, material, material-moment-adapter\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.1\n@angular-devkit/build-angular   19.0.0-rc.1\n@angular-devkit/core            19.0.0-rc.1\n@angular-devkit/schematics      19.0.0-rc.1\n@schematics/angular             19.0.0-rc.1\nrxjs                            7.8.1\nzone.js                         0.15.0\n    \n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28812","RelatedDescription":"Open issue \"Strange 404 CSS error on ng serve, maybe related to hashing?\" (#28812)"},{"Id":"2635008050","IsPullRequest":true,"CreatedAt":"2024-11-07T11:30:01","Actor":"angular-robot","Number":"28788","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0cde73b` -> `45213e9` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `0386111` -> `9f63e93` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `a65486f` -> `ad62cdc` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `8c817e0` -> `093376b` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `54afbf4` -> `b48887c` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `fe363f7` -> `e8da1be` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c6d05b5` -> `dbb3596` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `f5f71de` -> `7a5fff6` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `c61ad3a` -> `fc682f9` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `5186966` -> `92fa436` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `a1a8fe9` -> `811fc92` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `0899cd8` -> `190edce` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1357f6a` -> `f7a60f3` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `a5fb25d` -> `a22f3b5` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `2a124b5` -> `ac65f0b` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `f6e82e5` -> `e23977c` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `bb9441e` -> `caa52ec` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `9c34a1e` -> `39255c4` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.0.0-rc.0/19.0.0-rc.1) |\n| angular/dev-infra | action | digest | `c8e09d0` -> `933dcd4` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.0.0-rc.1`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1900-rc1-2024-11-06)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.0.0-rc.0...19.0.0-rc.1)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b25121ee4a](https://redirect.github.com/angular/angular/commit/b25121ee4aba427954fef074a967b9332654be84) | fix | avoid having to duplicate core environment ([#&#8203;58444](https://redirect.github.com/angular/angular/pull/58444)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d4d76ead80](https://redirect.github.com/angular/angular/commit/d4d76ead802837bc6cc7908bc9ebfefa73eb9969) | fix | do not fail fatal when references to non-existent module are discovered ([#&#8203;58515](https://redirect.github.com/angular/angular/pull/58515)) |\n| [22cd6869ef](https://redirect.github.com/angular/angular/commit/22cd6869ef453c342b206f84e857ef6c34922fa5) | fix | make the unused imports diagnostic easier to read ([#&#8203;58468](https://redirect.github.com/angular/angular/pull/58468)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8ae84be3df](https://redirect.github.com/angular/angular/commit/8ae84be3df4e1393c6f00e2d28ccacd5b2159a0f) | fix | avoid slow stringification when checking for duplicates in dev mode ([#&#8203;58521](https://redirect.github.com/angular/angular/pull/58521)) |\n| [6e0af6dbbb](https://redirect.github.com/angular/angular/commit/6e0af6dbbbe5e9a9e2e5809ada0b7b5a7e456402) | fix | resolve forward-referenced host directives during directive matching ([#&#8203;58492](https://redirect.github.com/angular/angular/pull/58492)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c5e676bb87](https://redirect.github.com/angular/angular/commit/c5e676bb8715bcde42e56eb08a41cc1ba5c95f91) | fix | flip the default standalone flag in route-lazy-loading migration ([#&#8203;58474](https://redirect.github.com/angular/angular/pull/58474)) |\n| [e85ac5c7cb](https://redirect.github.com/angular/angular/commit/e85ac5c7cb06dc0fba757a9b931e79e07978f2a9) | fix | properly bundle shared compiler code into migrations ([#&#8203;58515](https://redirect.github.com/angular/angular/pull/58515)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c36a1c023b](https://redirect.github.com/angular/angular/commit/c36a1c023b34f9b2056e1bef6364787e8495bfad) | fix | correctly add external stylesheets to ShadowDOM components ([#&#8203;58482](https://redirect.github.com/angular/angular/pull/58482)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-rc.1`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-rc1-lolite-lollipop-2024-11-06)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-rc.0...19.0.0-rc.1)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d8dedc9b7](https://redirect.github.com/angular/components/commit/d8dedc9b7d1ea85e9e3b7a1256a6ad60d4a8a36b) | fix | **datepicker:** use SVG icons for calendar ([#&#8203;29957](https://redirect.github.com/angular/components/pull/29957)) |\n| [a2cd04902](https://redirect.github.com/angular/components/commit/a2cd0490260e99ec0a9a23d0837177f99fc81425) | fix | **form-field:** incorrect form field border radius with system-level themes ([#&#8203;29966](https://redirect.github.com/angular/components/pull/29966)) |\n| [de5e57ad1](https://redirect.github.com/angular/components/commit/de5e57ad1d9a76922091ca3adbab35bb9843b5fd) | fix | **menu:** use static elevation ([#&#8203;29968](https://redirect.github.com/angular/components/pull/29968)) |\n| [9b5ee9d55](https://redirect.github.com/angular/components/commit/9b5ee9d551f09f606cb0e92f6288cf3edd76a1da) | fix | **timepicker:** value considered as invalid by default |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d1d53f51a](https://redirect.github.com/angular/components/commit/d1d53f51ad9c565275c4916cf8e107dd994b7fc3) | fix | remove usages of Sass globals ([#&#8203;29972](https://redirect.github.com/angular/components/pull/29972)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuNiIsInVwZGF0ZWRJblZlciI6IjM5LjYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28788","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28788)"},{"Id":"2640725916","IsPullRequest":false,"CreatedAt":"2024-11-07T11:25:42","Actor":"stefankoserkov","Number":"28809","RawContent":null,"Title":"Feature request: loader option in new esbuild karma builder","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nThe improved builder @angular-devkit/build-angular:karma which uses esbuild is missing the \"loader\" option. It would be really useful to have the option to require files in tests.\n\n\n\n\n### Describe the solution you'd like\n\n```json\n\"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"main\": \"src/test.ts\",\n            \"polyfills\": [\n              \"zone.js\",\n              \"zone.js/testing\"\n            ],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\n              {\n                \"glob\": \"**/*\",\n                \"input\": \"public\"\n              }\n            ],\n            \"styles\": [\n              \"src/styles.css\"\n            ],\n            \"scripts\": [],\n            \"builderMode\": \"application\",\n            **\"loader\": {\n              \".html\": \"text\"\n            }**\n          }\n        }\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28809","RelatedDescription":"Open issue \"Feature request: loader option in new esbuild karma builder\" (#28809)"},{"Id":"2640127418","IsPullRequest":false,"CreatedAt":"2024-11-07T11:17:24","Actor":"HazzMan2409","Number":"28806","RawContent":null,"Title":"Disable build warnings for third-party scripts and styles","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am updating our build from webpack to esbuild. I am being bombarded with warnings for css and javascript in third-party styles and scripts. Is patching the scripts the only way I can remove the warnings from the build?\n\nIt looks like from:\n* https://github.com/angular/angular-cli/issues/26140#issuecomment-1803975935\n* https://github.com/angular/angular-cli/issues/27663#issuecomment-2121259019\n\nthat it is the case but I wanted to double check. If so, it isn't documented. If not, I'll convert to a feature request.\n\n### Minimal Reproduction\n\nPull in [dijit@1.17.2](https://www.npmjs.com/package/dijit)'s css from (./node_modules/dijit/themes/dijit.css).\n\nPull in [gojs@3.0.13](https://www.npmjs.com/package/gojs)\n\nOr any other example of third-parties generating build warnings.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.11\nNode: 20.11.0\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.10\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@angular/cli                    18.2.11\n@schematics/angular             18.2.11\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28806","RelatedDescription":"Closed issue \"Disable build warnings for third-party scripts and styles\" (#28806)"},{"Id":"2638841801","IsPullRequest":false,"CreatedAt":"2024-11-06T20:26:03","Actor":"emily-mikl-fcb-com","Number":"28804","RawContent":null,"Title":"Compatibility with Dart Sass >=1.79","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSince Dart Sass 1.79 the functions `color.red()`, `color.green()`, and `color.blue()` have been deprecated in favor of using `color.channel()`. (See [official Sass docs](https://sass-lang.com/documentation/modules/color/).) However, when making that update in our Angular 18 project we get an error:\n![Image](https://github.com/user-attachments/assets/d1e3d45a-c30f-4882-9c89-bd05eea9bdd8)\n\nBut Dart Sass will give an error if we use the old way:\n![Image](https://github.com/user-attachments/assets/b379b93a-2560-4566-b418-46c317cf9ca9)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.0\nNode: 20.18.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 18.2.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.0\n@angular-devkit/build-angular   18.2.0\n@angular-devkit/core            18.2.0\n@angular-devkit/schematics      18.2.0\n@angular/cdk                    18.2.3\n@schematics/angular             18.2.0\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28804","RelatedDescription":"Closed issue \"Compatibility with Dart Sass >=1.79\" (#28804)"},{"Id":"2638586255","IsPullRequest":true,"CreatedAt":"2024-11-06T16:20:33","Actor":"alan-agius4","Number":"28803","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28803","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#28803)"},{"Id":"2638578495","IsPullRequest":true,"CreatedAt":"2024-11-06T16:17:11","Actor":"alan-agius4","Number":"28802","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28802","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#28802)"},{"Id":"2637274345","IsPullRequest":true,"CreatedAt":"2024-11-06T16:13:19","Actor":"alan-agius4","Number":"28799","RawContent":null,"Title":"fix(@angular/ssr): initialize the DI tokens with `null` to avoid requiring them to be set to optional","State":"closed","Body":"\r\n\r\nThis commit initializes the `REQUEST`, `RESPONSE_INIT`, and `REQUEST_CONTEXT` DI tokens with `null` values by default.\r\n\r\nPreviously, these tokens lacked default values, which meant that developers had to explicitly mark them as optional when injecting them in constructors. This was necessary to avoid errors when these tokens were not provided, particularly in scenarios like client-side rendering or during development.\r\n\r\nBy initializing these tokens with `null`, we eliminate the need for developers to mark them as optional, simplifying the code and improving the developer experience.\r\n","Url":"https://github.com/angular/angular-cli/pull/28799","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): initialize the DI tokens with `null` to avoid requiring them to be set to optional\" (#28799)"},{"Id":"2636619801","IsPullRequest":true,"CreatedAt":"2024-11-06T15:19:43","Actor":"jkrems","Number":"28797","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle basename collisions","State":"closed","Body":"Generates unique names for each test entry point and also creates a nice & consistent name for the main (\"init test bed\") chunk. All specs are now `spec-*.js` files.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28756\r\n\r\n~~P.S.: Current based on https://github.com/angular/angular-cli/pull/28795, will rebase post-merge.~~","Url":"https://github.com/angular/angular-cli/pull/28797","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): handle basename collisions\" (#28797)"},{"Id":"2638106477","IsPullRequest":false,"CreatedAt":"2024-11-06T13:31:01","Actor":"MitjaCH","Number":"28801","RawContent":null,"Title":"Add TailwindCSS as a Stylesheet Format Option in Angular CLI","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nCurrently, Angular CLI provides the option to select between various CSS preprocessors like CSS, SCSS, and LESS when creating a new project. However, TailwindCSS, a popular utility-first CSS framework, is not included as an option. With TailwindCSS being increasingly adopted, adding it as a stylesheet option would streamline the setup process for developers who use it with Angular.\n\n### Describe the solution you'd like\n\nAdd TailwindCSS as an option in the ng new command alongside the existing options (CSS, SCSS, LESS, etc.). This would enable developers to choose TailwindCSS as the default stylesheet framework during project creation, allowing for automatic setup and configuration of Tailwind in the generated project.\n\n### Describe alternatives you've considered\n\n**Alternatives Considered:**  \n\n1. **Installing TailwindCSS Manually After Initializing the Project**  \n   The current workaround for using TailwindCSS with Angular involves initializing a new project with `ng new` and then following these steps manually:\n   \n   - Install TailwindCSS and required PostCSS plugins:\n     ```bash\n     npm install -D tailwindcss postcss autoprefixer\n     ```\n   - Generate the Tailwind configuration file:\n     ```bash\n     npx tailwindcss init\n     ```\n   - Update `tailwind.config.js` to define the content paths, like so:\n     ```javascript\n     module.exports = {\n       content: [\n         \"./src/**/*.{html,ts}\",\n       ],\n       theme: {\n         extend: {},\n       },\n       plugins: [],\n     }\n     ```\n   - Configure `styles.css` (or `styles.scss`) with Tailwind directives:\n     ```css\n     @tailwind base;\n     @tailwind components;\n     @tailwind utilities;\n     ```\n   - Optionally, create a `postcss.config.js` file if not already present to ensure compatibility with Angular's build.\n\n   While these steps are not overly complex, they add additional configuration overhead, especially for developers who are setting up multiple projects or who are new to Angular or TailwindCSS. This manual process can also introduce errors if configuration steps are missed or misconfigured.\n\n2. **Using a Third-Party TailwindCSS Integration**  \n   Some developers have created community guides and packages that streamline the Tailwind setup for Angular, but these are not officially supported and may lack the stability or compatibility assurance that comes with a native CLI integration. Additionally, relying on third-party solutions can introduce maintenance challenges if the third-party solution is no longer actively maintained.\n\n3. **Creating a Custom Schematic for TailwindCSS Setup**  \n   Angular allows developers to create custom schematics, which could automate the setup of TailwindCSS after project initialization. However, creating and maintaining a custom schematic requires extra knowledge and effort, and it adds another layer of customization that developers need to maintain across projects. This approach is often impractical for teams who need a simple, standard setup.\n\n**Conclusion:**  \nAdding TailwindCSS as an option in the Angular CLI would remove the need for these workarounds, allowing developers to select TailwindCSS during project initialization and have it configured automatically. This native support would reduce setup time, avoid common configuration errors, and enhance the developer experience by aligning Angular with modern CSS practices.","Url":"https://github.com/angular/angular-cli/issues/28801","RelatedDescription":"Open issue \"Add TailwindCSS as a Stylesheet Format Option in Angular CLI\" (#28801)"},{"Id":"2637565326","IsPullRequest":true,"CreatedAt":"2024-11-06T12:39:29","Actor":"alan-agius4","Number":"28800","RawContent":null,"Title":"fix(@angular/build): skip wildcard routes from being listed as prerendered routes","State":"closed","Body":"\r\nThis fix ensures that the wildcard routes are not included in the prerendered list, improving the accuracy of prerendered route generation.","Url":"https://github.com/angular/angular-cli/pull/28800","RelatedDescription":"Closed or merged PR \"fix(@angular/build): skip wildcard routes from being listed as prerendered routes\" (#28800)"},{"Id":"2634531139","IsPullRequest":true,"CreatedAt":"2024-11-06T09:30:34","Actor":"angular-robot","Number":"28785","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.22.1` -> `1.23.0`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.22.1/1.23.0) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.12.2` -> `8.13.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.12.2/8.13.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.12.2` -> `8.13.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.12.2/8.13.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.23.0`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.23.0)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.22.1...v1.23.0)\n\nBazelisk v1.23.0 comes with several improvements related to downloads:\n\n### Bug Fixes & Improvements\n\n-   Improved download error messages ([https://github.com/bazelbuild/bazelisk/pull/624](https://redirect.github.com/bazelbuild/bazelisk/pull/624))\n-   Fixed `INTERNAL_ERROR` problems caused by improper handling of HTTP responses during retries ([https://github.com/bazelbuild/bazelisk/pull/627](https://redirect.github.com/bazelbuild/bazelisk/pull/627))\n\nWe’d like to thank our amazing contributors [@&#8203;jjmaestro](https://redirect.github.com/jjmaestro) and [@&#8203;jwnimmer-tri](https://redirect.github.com/jwnimmer-tri)!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.13.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8130-2024-11-04)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.12.2...v8.13.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[only-throw-error] add allow option ([#&#8203;10221](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10221))\n-   **eslint-plugin:** \\[prefer-nullish-coalescing] add option `ignoreBooleanCoercion` ([#&#8203;9924](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/9924))\n-   **eslint-plugin:** disable `no-class-assign` rule in `eslint-recommended` config ([#&#8203;10250](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10250))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[switch-exhaustiveness-check] add support for covering a missing property with `undefined` ([#&#8203;10232](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10232))\n-   **eslint-plugin:** \\[consistent-type-definitions] don't leave trailing parens when fixing type to interface ([#&#8203;10235](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10235))\n-   **eslint-plugin:** \\[no-deprecated] report when exported class implements/extends deprecated entity ([#&#8203;10259](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10259))\n-   **eslint-plugin:** \\[no-deprecated] report on deprecated variables used inside dynamic imports ([#&#8203;10261](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10261))\n-   **eslint-plugin:** \\[no-unnecessary-condition] falsey bigint should be falsey ([#&#8203;10205](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10205))\n\n##### ❤️  Thank You\n\n-   auvred [@&#8203;auvred](https://redirect.github.com/auvred)\n-   Kim Sang Du [@&#8203;developer-bandi](https://redirect.github.com/developer-bandi)\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   Mark de Dios [@&#8203;peanutenthusiast](https://redirect.github.com/peanutenthusiast)\n-   Ronen Amiel\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.13.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8130-2024-11-04)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.12.2...v8.13.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuNiIsInVwZGF0ZWRJblZlciI6IjM4LjE0Mi42IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28785","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28785)"},{"Id":"2636584761","IsPullRequest":true,"CreatedAt":"2024-11-06T09:26:56","Actor":"clydin","Number":"28796","RawContent":null,"Title":"refactor(@angular/build): use structured component stylesheet tracking for hot replacement","State":"closed","Body":"When using the development server with the application builder, the internal state of any external component stylesheets is now more comprehensively tracked. This allows for more flexibility in both debugging potential problems as well as supporting additional stylesheet preprocessing steps including deferred component stylesheet processing.","Url":"https://github.com/angular/angular-cli/pull/28796","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): use structured component stylesheet tracking for hot replacement\" (#28796)"},{"Id":"2636925940","IsPullRequest":false,"CreatedAt":"2024-11-06T07:18:28","Actor":"leo6104","Number":"28798","RawContent":null,"Title":"REQUEST, RESPONSE_INIT deps not resolved in RenderMode.Server","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen i inject REQUEST / RESPONSE_INIT token in app.config.server.ts, it raise R3InjectorError. \n\nhttps://github.com/leo6104/ssr-token-issue/blob/master/src/app/app.config.server.ts \n\n```\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering(),\n    provideServerRoutesConfig(serverRoutes),\n    {\n      provide: TOKEN_IN_SSR,\n      useFactory: (req: Request, res: ResponseInit) => {\n        return req.headers.get('host');\n      },\n      deps: [REQUEST, RESPONSE_INIT]\n    }\n  ]\n};\n```\n\nhttps://github.com/angular/angular-cli/blob/127811203ac73803c53f7412c0b0880c004f455f/packages/angular/ssr/src/app.ts#L292C9-L309C31 \n\nAccording to this code, as i expected, it should be available to use REQUEST / RESPONSE_INIT token in server side render. \n\n### Minimal Reproduction\n\n```\ngit clone https://github.com/leo6104/ssr-token-issue \nng serve \n\n// visit localhost:4200 \n```\n\n### Exception or Error\n\n```\nERROR Error [NullInjectorError]: R3InjectorError(Environment Injector)[InjectionToken TOKEN_IN_SSR -> InjectionToken REQUEST -> InjectionToken REQUEST]: \n  NullInjectorError: No provider for InjectionToken REQUEST!\n```\n\n\n\n### Your Environment\n\nAngular CLI: 19.0.0-rc.0\nNode: 23.1.0 (Unsupported)\nPackage Manager: npm 10.9.0\nOS: darwin x64\n\nAngular: 19.0.0-rc.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0\n@angular-devkit/schematics      19.0.0-rc.0\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28798","RelatedDescription":"Closed issue \"REQUEST, RESPONSE_INIT deps not resolved in RenderMode.Server\" (#28798)"},{"Id":"2636535938","IsPullRequest":true,"CreatedAt":"2024-11-05T23:59:06","Actor":"jkrems","Number":"28795","RawContent":null,"Title":"fix(@angular-devkit/build-angular): serve assets","State":"closed","Body":"Turns out the test for asset serving didn't actually test asset serving because of a missing `whenStable()` - it always succeeded, even with random filenames. This change adds a custom middleware to serve our static files since it seemed easier (and more predictable) than to try to map the `assets` concept to Karma's `files`+`proxy` logic.\r\n\r\nOne side effect of adding the middleware is that we don't actually need the Karma `files` anymore with the exception of any files that we'd want to include on page load. I don't touch that part here because it will be cleaner to change it when also addressing the naming collisions between spec files.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28754\r\n\r\n~~P.S.: Currently the first commit is from a different PR (https://github.com/angular/angular-cli/pull/28794), I'm planning to rebase after landing it.~~","Url":"https://github.com/angular/angular-cli/pull/28795","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): serve assets\" (#28795)"},{"Id":"2635953557","IsPullRequest":true,"CreatedAt":"2024-11-05T22:36:01","Actor":"jkrems","Number":"28794","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove double-watch in karma","State":"closed","Body":"The Karma file watching was racing with the file writes done by the application builder. Since we already tell Karma when to reun via `.refeshFiles()`, disabling Karma's own file watcher should make things more reliable.\r\n\r\nThis allows removing a weird special-case in the test case and removes the noisy \"File chaned\" logs generated by Karma.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28755","Url":"https://github.com/angular/angular-cli/pull/28794","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove double-watch in karma\" (#28794)"},{"Id":"2635540850","IsPullRequest":true,"CreatedAt":"2024-11-05T18:39:14","Actor":"alan-agius4","Number":"28792","RawContent":null,"Title":"refactor(@angular/ssr): Add `RequestHandlerFunction` and `NodeRequestHandlerFunction` to public API","State":"closed","Body":"\r\nThese additions are necessary to ensure their inclusion in adev.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/28792","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): Add `RequestHandlerFunction` and `NodeRequestHandlerFunction` to public API\" (#28792)"},{"Id":"2635411005","IsPullRequest":true,"CreatedAt":"2024-11-05T18:39:02","Actor":"alan-agius4","Number":"28791","RawContent":null,"Title":"docs: enhance documentation by adding `@see` references","State":"closed","Body":"Improve the documentation `adev` API reference by incorporating `@see` references. This addition enhances cross-referencing within the documentation, making it easier for users to navigate related content and gain better context.\r\n","Url":"https://github.com/angular/angular-cli/pull/28791","RelatedDescription":"Closed or merged PR \"docs: enhance documentation by adding `@see` references\" (#28791)"},{"Id":"2634964144","IsPullRequest":true,"CreatedAt":"2024-11-05T18:38:40","Actor":"alan-agius4","Number":"28787","RawContent":null,"Title":"fix(@angular/ssr): add validation to prevent use of `provideServerRoutesConfig` in browser context","State":"closed","Body":"\r\nIntroduced an error check to ensure that 'provideServerRoutesConfig' is not utilized in the browser part of the application. This helps avoid unintended behavior.\r\n","Url":"https://github.com/angular/angular-cli/pull/28787","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): add validation to prevent use of `provideServerRoutesConfig` in browser context\" (#28787)"},{"Id":"2635366648","IsPullRequest":true,"CreatedAt":"2024-11-05T14:00:05","Actor":"alan-agius4","Number":"28790","RawContent":null,"Title":"docs: replace `@note` with `@remarks`","State":"closed","Body":"Updated TSDoc comments by replacing @note with @remarks across the codebase. This aligns with TSDoc's preferred conventions, where @remarks is used for supplementary explanations and additional context.\r\n","Url":"https://github.com/angular/angular-cli/pull/28790","RelatedDescription":"Closed or merged PR \"docs: replace `@note` with `@remarks`\" (#28790)"},{"Id":"2635085166","IsPullRequest":true,"CreatedAt":"2024-11-05T13:52:32","Actor":"alan-agius4","Number":"28789","RawContent":null,"Title":"fix(@angular/ssr): include `requestContext` in `RequestHandlerFunction`","State":"closed","Body":"Added the missing `requestContext` parameter to the `RequestHandlerFunction`.\r\n","Url":"https://github.com/angular/angular-cli/pull/28789","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): include `requestContext` in `RequestHandlerFunction`\" (#28789)"},{"Id":"2634201586","IsPullRequest":true,"CreatedAt":"2024-11-05T07:23:17","Actor":"clydin","Number":"28784","RawContent":null,"Title":"fix(@angular/build): always clear dev-server error overlay on non-error result","State":"closed","Body":"Now that additional result object types can be returned from the build system, the error overlay must be cleared on all non-error results. The introduction of component update results and eventual incremental results will now properly clear the error overlay after a successful build.","Url":"https://github.com/angular/angular-cli/pull/28784","RelatedDescription":"Closed or merged PR \"fix(@angular/build): always clear dev-server error overlay on non-error result\" (#28784)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2642543302","IsPullRequest":false,"CreatedAt":"2024-11-08T00:48:12","Actor":"reuse-ay","Number":"29984","RawContent":null,"Title":"feat(COMPONENT): add \"disabledInteractive\" input to \"mat-menu-item\"","State":"open","Body":"### Feature Description\n\nI want allow to set `disabledInteractive` to `button[mat-menu-item]` and `a[mat-menu-item]`.\nNow `disabledInteractive` is available in `mat-button`, `mat-checkbox` , etc. It is used to make the appearance disabled but still allow tooltips etc. to be available.\n\n### Use Case\n\nI sometimes use menus when there is not enough space to display buttons. It is inconvenient that mat-menu-item can't do what mat-button can do.","Url":"https://github.com/angular/components/issues/29984","RelatedDescription":"Open issue \"feat(COMPONENT): add \"disabledInteractive\" input to \"mat-menu-item\"\" (#29984)"},{"Id":"2627632718","IsPullRequest":false,"CreatedAt":"2024-11-07T17:04:49","Actor":"andgdk","Number":"29953","RawContent":null,"Title":"bug(CdkOption): CdkListbox/CdkOption - expression changed after checked error | experimental zoneless change detection","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am preparing for zoneless change detection and configured my app with those providers:\n\n```typescript\nprovideExperimentalZonelessChangeDetection(),\nprovideExperimentalCheckNoChangesForDebug({\n    interval: 10000,\n    exhaustive: true,\n    // useNgZoneOnStable: true,\n}),\n```\n\nAn expression changed after it has been checked error is thron w/ `CdkOption_HostBindings (listbox.mjs:165:59)` in the stack trace.\n\n### Reproduction\n\n[StackBlitz reproduction](https://stackblitz.com/edit/components-issue-starter-xraama?file=src%2Fmain.ts)\n\nRun in StackBlitz and open the developer console.\n- As long as the user does **not interact w/ any button**, the expression has changed after it has been checked **error is thrown** in each interval.\n- **As soon as any button is pressed, the error is not thrown any more.**\n\n### Expected Behavior\n\nThe error not being thrown - given that I did not make a mistake while providing the initial value.\n\n### Actual Behavior\n\n```shell\nERROR RuntimeError: NG0100: ExpressionChangedAfterItHasBeenCheckedError:\nExpression has changed after it was checked. Previous value for 'attr.tabindex': '-1'. Current value: '0'.\nExpression location: _SomeOnPushComponent component. Find more at https://angular.dev/errors/NG0100\n    at throwErrorIfNoChangesMode (core.mjs:10493:9)\n    at bindingUpdated (core.mjs:18604:9)\n    at ɵɵattribute (core.mjs:20540:7)\n    at CdkOption_HostBindings (listbox.mjs:165:59)\n    at processHostBindingOpCodes (core.mjs:11662:9)\n    at refreshView (core.mjs:13392:5)\n    at detectChangesInView (core.mjs:13552:5)\n    at detectChangesInViewIfAttached (core.mjs:13514:3)\n    at detectChangesInEmbeddedViews (core.mjs:13474:7)\n    at refreshView (core.mjs:13371:5)\n``` \n\n### Environment\n\n- Angular: 18.2.9\n- CDK/Material: 18.2.10\n- Browser(s): Edge 128.0.2739.54\n- Operating System: Windows 11\n- Node: 22.10.0\n- OS: win32-x64\n- Native Target: x86_64-windows\n- yarn: 4.5.1\n","Url":"https://github.com/angular/components/issues/29953","RelatedDescription":"Closed issue \"bug(CdkOption): CdkListbox/CdkOption - expression changed after checked error | experimental zoneless change detection\" (#29953)"},{"Id":"2636599873","IsPullRequest":true,"CreatedAt":"2024-11-07T17:04:48","Actor":"mmalerba","Number":"29970","RawContent":null,"Title":"fix(cdk/listbox): make tabindex zoneless compatible","State":"closed","Body":"fixes #29953 ","Url":"https://github.com/angular/components/pull/29970","RelatedDescription":"Closed or merged PR \"fix(cdk/listbox): make tabindex zoneless compatible\" (#29970)"},{"Id":"2639262712","IsPullRequest":false,"CreatedAt":"2024-11-07T16:55:43","Actor":"sjadamek","Number":"29978","RawContent":null,"Title":"bug(MatIcon): MatIcon within a MatMenuItem button does not show color when overridden","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a MatIcon is displayed within a MatMenuItem it does not honor its color override as it is overridden by another internal style and icon color styles are declared in the styles.scss.\n\n![Image](https://github.com/user-attachments/assets/35d94610-f15f-48c2-aa35-61be2f543ede)\n\n![Image](https://github.com/user-attachments/assets/3550ce7e-2098-4747-a318-47e1436b09b9)\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ywkkhy\n\nSteps to reproduce:\n1. Add icon to menu\n2. Set color of icon via class (M3 way)\n3. Icon does not honor color due to override of .mat-icon-no-color\n\n### Expected Behavior\n\nExplicit user color class should override internal color class.\n\n### Actual Behavior\n\nInternal color class overrides user color class.\n\n### Environment\n\n- Angular: ^18.2.0 to ^19.0.0-next.2\n- CDK/Material: ^18.2.0 to ^19.0.0-next.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\n","Url":"https://github.com/angular/components/issues/29978","RelatedDescription":"Closed issue \"bug(MatIcon): MatIcon within a MatMenuItem button does not show color when overridden\" (#29978)"},{"Id":"2640092471","IsPullRequest":false,"CreatedAt":"2024-11-07T16:13:27","Actor":"bogdandevlpr","Number":"29979","RawContent":null,"Title":"bug(mat-form-field): Hover outline width is not applying on v15+","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14\n\n### Description\n\nThe hover outline width doesn't work\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/xe4ycf-hyx7dg\nSteps to reproduce:\n1. Hover over the mat form field input\n\n\n### Expected Behavior\n\nShould apply outline width on hover like on Angular Material V14\nhttps://v14.material.angular.io/components/form-field/examples\n\n### Actual Behavior\n\nThe outline width of the form field doesn't increase in size when hovering over the form field input.\n![Image](https://github.com/user-attachments/assets/c3ee8756-1f79-4dec-823f-2686e34d437a)\n\n### Environment\n\n- Angular: V15+\n- CDK/Material: V15+\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\n","Url":"https://github.com/angular/components/issues/29979","RelatedDescription":"Closed issue \"bug(mat-form-field): Hover outline width is not applying on v15+\" (#29979)"},{"Id":"2640479059","IsPullRequest":true,"CreatedAt":"2024-11-07T15:19:37","Actor":"crisbeto","Number":"29980","RawContent":null,"Title":"fix(material/schematics): add explicit system variable prefix schematic","State":"closed","Body":"In v19 we're changing the default system variables prefix from `sys` to `mat-sys`. These changes add a schematic that will update existing apps to keep the `sys` prefix.","Url":"https://github.com/angular/components/pull/29980","RelatedDescription":"Closed or merged PR \"fix(material/schematics): add explicit system variable prefix schematic\" (#29980)"},{"Id":"2641005966","IsPullRequest":true,"CreatedAt":"2024-11-07T13:15:51","Actor":"crisbeto","Number":"29982","RawContent":null,"Title":"fix(multiple): avoid repeating selectors in m3 themes","State":"open","Body":"In #29596 we switched to outputting each group of tokens under a different selector in order to work around an Sass deprecation warning. Now that M3 themes are purely token-based, we can switch back to the old approach which produces smaller themes and makes the tokens easier to read in the dev tools.\r\n\r\nWe have to keep the workaround in place for M2 themes, because they mixed CSS variables with other rules.","Url":"https://github.com/angular/components/pull/29982","RelatedDescription":"Open PR \"fix(multiple): avoid repeating selectors in m3 themes\" (#29982)"},{"Id":"2640622175","IsPullRequest":false,"CreatedAt":"2024-11-07T12:09:25","Actor":"thovo","Number":"29981","RawContent":null,"Title":"docs-bug(MapMarkerClusterer): The example doesn't work","State":"closed","Body":"### Documentation Feedback\n\nI tried to follow the same example in the README and nothing works, no errors happens. Could you please check and update with a working example ? The docs is also referring to Google Map Marker Cluster which is a version using Typescript or Javascript. I am not sure which example that I need to follow to make the code work.\n\nAnother issue is when loading the library, it still required to import the old script to make it work. It happens when I use Angular 18.\n`<script src=\"https://unpkg.com/@googlemaps/markerclustererplus/dist/index.min.js\"></script>`\n\n\n### Affected documentation page\n\nhttps://github.com/angular/components/blob/main/src/google-maps/map-marker-clusterer/README.md","Url":"https://github.com/angular/components/issues/29981","RelatedDescription":"Closed issue \"docs-bug(MapMarkerClusterer): The example doesn't work\" (#29981)"},{"Id":"2638748762","IsPullRequest":true,"CreatedAt":"2024-11-06T17:26:51","Actor":"wagnermaciel","Number":"29977","RawContent":null,"Title":"docs: release notes for the v18.2.12 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29977","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.12 release\" (#29977)"},{"Id":"2638743631","IsPullRequest":true,"CreatedAt":"2024-11-06T17:24:50","Actor":"wagnermaciel","Number":"29976","RawContent":null,"Title":"Bump version to \"v18.2.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29976","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.12\" with changelog.\" (#29976)"},{"Id":"2638726150","IsPullRequest":true,"CreatedAt":"2024-11-06T17:17:11","Actor":"wagnermaciel","Number":"29975","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29975","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#29975)"},{"Id":"2638716717","IsPullRequest":true,"CreatedAt":"2024-11-06T17:13:02","Actor":"wagnermaciel","Number":"29974","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29974","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#29974)"},{"Id":"2638086950","IsPullRequest":false,"CreatedAt":"2024-11-06T13:22:20","Actor":"enesyalcin","Number":"29973","RawContent":null,"Title":"feat(providers): provide Tokens in a Type Safe way","State":"open","Body":"### Feature Description\n\n## Syntax Sugarcoat Providers\n\nThe Angular Framework moved and is still moving to the new `provider` syntax approach, latest example is the `provideAppInitializer()` feature which comes with `angular@19`.  \n\nIn Angular Material we have the `provideNativeAdapter()` but besides that we don't have many providers. E.g. `LOCALE_ID` ist frequently used and provided but has no such provider and must be done with the old syntax.\n\n```ts\nconst appConfig = [\n   ...,\n   // existing new Syntax\n   provideNativeDateAdapter(),\n\n   // existing old Syntax\n   {\n    provide: LOCALE_ID,\n    useValue:'de-AT',\n  },\n];\n```\n\n## The Benefit\n\nYou have auto-complete and type safety out of the Box, so in this case you don't have to check which Properties the provider expects.\n\n## Implementation Example\nThere would be no breaking Change introduced by this change.\n\n```ts\n// Type Safety included\nexport function provideMatPaginatorDefaultOptions(options: MatPaginatorDefaultOptions,): ValueProvider {\n  return {\n    provide: MAT_PAGINATOR_DEFAULT_OPTIONS,\n    useValue: options,\n  };\n}\n```\n\n## Potential Providers\n\n| Token | Provider |\n|--------|--------|\n| `LOCALE_ID` | `provideLocaleId` |\n| `MAT_DIALOG_DEFAULT_OPTIONS` | `provideMatDialogDefaultOptions` |\n| `DATE_PIPE_DEFAULT_OPTIONS` | `provideDatePipeDefaultOptions` |\n| `MAT_FORM_FIELD_DEFAULT_OPTIONS` | `provideMatFormFieldDefaultOptions` |\n| `MAT_PAGINATOR_DEFAULT_OPTIONS` | `provideMatPaginatorDefaultOptions` |\n| `MAT_DATE_LOCALE` |  `provideMatDateLocale` | \n| `MAT_PROGRESS_BAR_DEFAULT_OPTIONS` | `provideMatProgressBarDefaultOptions` |\n\n\n\n\n### Use Case\n\nIt would be easier to **provide** Angular Material specific **Tokens in a Type Safe way** without having to check in the Source Code which Options the Token expects.\n\n```ts\n  // Current Syntax\n  {\n    provide: MAT_PAGINATOR_DEFAULT_OPTIONS,\n    useValue: {\n      pageSizeOptions: [5, 10, 20, 50, 100],\n      showFirstLastButtons: true,\n    } as MatPaginatorDefaultOptions,\n  },\n\n  // Proposed Syntax\n  provideMatPaginatorDefaultsOptions({\n    pageSizeOptions: [5, 10, 20, 50, 100],\n    showFirstLastButtons: true,\n  }),\n```","Url":"https://github.com/angular/components/issues/29973","RelatedDescription":"Open issue \"feat(providers): provide Tokens in a Type Safe way\" (#29973)"},{"Id":"2637598964","IsPullRequest":true,"CreatedAt":"2024-11-06T13:10:14","Actor":"crisbeto","Number":"29972","RawContent":null,"Title":"fix(multiple): remove usages of Sass globals","State":"closed","Body":"In the latest version of Sass, the compiler logs a warning for usages of global functions. These changes switch our code to import the functions instead.","Url":"https://github.com/angular/components/pull/29972","RelatedDescription":"Closed or merged PR \"fix(multiple): remove usages of Sass globals\" (#29972)"},{"Id":"2636464774","IsPullRequest":false,"CreatedAt":"2024-11-05T21:01:13","Actor":"AnkitaSood","Number":"29969","RawContent":null,"Title":"bug(theme): schematic doesn't ask for error hex color","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs of v18.2, a theme can be generated with a custom color with the following schematic:\n`ng generate @angular/material:m3-theme`\n\nThe schematic then prompts for hex codes for primary, secondary, tertiary, neutral colors. \n\nIt auto generates an error code palette based on the primary hex provided. It doesn't prompt the user to enter their own error color.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1.  Ensure app and material are on latest stable version - v18.2\n2. Run the schematic ng generate @angular/material:m3-theme to generate a custom theme.\n3. Notice that the schematic doesn't prompt to enter hex color to be used to represent the error color palette. \n\n\n### Expected Behavior\n\nThe schematic should prompt user to enter hex code that is used to represent the error color palette. \n\n### Actual Behavior\n\nSchematic doesn't prompt to enter hex color to be used to represent the error color palette. \n\n### Environment\n\n- Angular: 18.2\n- CDK/Material: 18.2\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29969","RelatedDescription":"Open issue \"bug(theme): schematic doesn't ask for error hex color\" (#29969)"},{"Id":"2631418538","IsPullRequest":false,"CreatedAt":"2024-11-05T16:28:32","Actor":"johnerickbs","Number":"29961","RawContent":null,"Title":"bug(mat-select): Mat-Select does not have background with custom theme","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to use a custom theme palette with the \"Color match\" from the Material theme builder (https://github.com/material-foundation/material-color-utilities), but I have the following errors:\n\n1- The material 3 theme builder generates a palette colors with HUE 5 and 15, these tone are not recognized by angular material, so I have to remove them in order to fix it.\n2- The mat-select doesn't have background.\n\nIs this a bug or what am I missing?\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-segeqm?file=src%2Fstyles%2Fm3-theme.scss\n\nSteps to reproduce:\n\n1. Open the material 3 theme builder (https://material-foundation.github.io/material-theme-builder/)\n2. Select the option \"Color match\"\n3. Put the colors for my palette (primary #034737 and tertiary #A9FF9B in my case)\n4. export the json\n5. Put the colors from the json in the **src/styles/m3-theme.scss**\n6. You will get an error:\n\n`Expected $config.color.primary to be a valid M3 palette. Got: (0: #000000, 5: #00150e, 10: #002118, 15: #002c21, 20: #00382b, 25: #004435, 30: #125040, 35: #215c4b, 40: #2f6857, 50: #49826f, 60: #639c88, 70: #7db7a2, 80: #98d3bd, 90: #b3efd8, 95: #c1fde6, 98: #e6fff3, 99: #f3fff8, 100: #ffffff, secondary: (0: #000000, 5: #08130f, 10: #121e1a, 15: #1c2824, 20: #27332e, 25: #323e39, 30: #3d4944, 35: #495550, 40: #55615c, 50: #6d7a74, 60: #87948d, 70: #a1aea8, 80: #bccac3, 90: #d8e6de, 95: #e6f4ec, 98: #effdf5, 99: #f3fff8, 100: #ffffff), neutral: (0: #000000, 5: #101110, 10: #1a1c1b, 15: #242625, 20: #2f3130, 25: #3a3c3a, 30: #464746, 35: #515351, 40: #5d5f5d, 50: #767776, 60: #90918f, 70: #ababa9, 80: #c6c6c4, 90: #e3e2e0, 95: #f1f1ee, 98: #faf9f7, 99: #fdfcfa, 100: #ffffff), neutral-variant: (0: #000000, 5: #0d1210, 10: #181d1a, 15: #222725, 20: #2d312f, 25: #383c3a, 30: #434845, 35: #4f5351, 40: #5b5f5d, 50: #737875, 60: #8d928f, 70: #a8aca9, 80: #c3c7c4, 90: #dfe3e0, 95: #eef2ee, 98: #f6faf6, 99: #f9fdf9, 100: #ffffff), error: (0: #000000, 10: #410002, 20: #690005, 25: #7e0007, 30: #93000a, 35: #a80710, 40: #ba1a1a, 50: #de3730, 60: #ff5449, 70: #ff897d, 80: #ffb4ab, 90: #ffdad6, 95: #ffedea, 98: #fff8f7, 99: #fffbff, 100: #ffffff))\n    ╷\n135 │   $light-theme: mat.define-theme(\n    │ ┌───────────────^\n136 │ │   (\n137 │ │     color: (\n138 │ │       theme-type: light,\n139 │ │       primary: $_primary,\n140 │ │       tertiary: $_tertiary,\n141 │ │     ),\n142 │ │   )\n143 │ │ );\n    │ └─^\n    ╵\n  src/styles/m3-theme.scss 135:15  @import\n  src/global-styles.scss 2:9       root stylesheet\nangular:styles/global:styles:1:8`\n\n7. Remove the HUE 5 and 15 from each palette and now it is fixed\n8. Select something from the mat-select and you will notice that it does not have a background\n\n### Expected Behavior\n\nA mat-select with a \"normal\" background\n\n### Actual Behavior\n\nThe mat-select does not have background\n\n### Environment\n\n- Angular: 18.2.10\n- CDK/Material: 18.2.11\n","Url":"https://github.com/angular/components/issues/29961","RelatedDescription":"Closed issue \"bug(mat-select): Mat-Select does not have background with custom theme\" (#29961)"},{"Id":"2633836698","IsPullRequest":true,"CreatedAt":"2024-11-05T13:23:27","Actor":"angular-robot","Number":"29967","RawContent":null,"Title":"build(config): migrate renovate config","State":"closed","Body":"The Renovate config in this repository needs migrating. Typically this is because one or more configuration options you are using have been renamed.\n\n  You don't need to merge this PR right away, because Renovate will continue to migrate these fields internally each time it runs. But later some of these fields may be fully deprecated and the migrations removed. So it's a good idea to merge this migration PR soon. \n\n\n\n\n\n🔕 **Ignore**: Close this PR and you won't be reminded about config migration again, but one day your current config may no longer be valid.\n\n❓ Got questions? Does something look wrong to you? Please don't hesitate to [request help here](https://redirect.github.com/angular/dev-infra).\n\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n","Url":"https://github.com/angular/components/pull/29967","RelatedDescription":"Closed or merged PR \"build(config): migrate renovate config\" (#29967)"},{"Id":"2634720316","IsPullRequest":true,"CreatedAt":"2024-11-05T12:57:21","Actor":"crisbeto","Number":"29968","RawContent":null,"Title":"fix(material/menu): use static elevation","State":"closed","Body":"Currently the menu's elevation is set using elevation classes, because earlier versions of the Material spec called for the elevation to increase for each level in a nested menu. That's no longer part of the spec and in v19 we won't include the elevation classes by default anymore. These changes remove the code that was handling the dynamic elevation and set the elevation using a token instead.","Url":"https://github.com/angular/components/pull/29968","RelatedDescription":"Closed or merged PR \"fix(material/menu): use static elevation\" (#29968)"},{"Id":"2632857046","IsPullRequest":true,"CreatedAt":"2024-11-04T16:03:18","Actor":"crisbeto","Number":"29966","RawContent":null,"Title":"fix(material/form-field): incorrect form field border radius with system-level themes","State":"closed","Body":"Fixes that the form field had the wrong border radius when using a system-level theme in M3.","Url":"https://github.com/angular/components/pull/29966","RelatedDescription":"Closed or merged PR \"fix(material/form-field): incorrect form field border radius with system-level themes\" (#29966)"},{"Id":"2628220560","IsPullRequest":false,"CreatedAt":"2024-11-04T14:03:49","Actor":"koumoua01","Number":"29956","RawContent":null,"Title":"bug(COMPONENT): mat-datepicker does not render the previous < and  next > icon correctly when set theme density: (scale: -2) and beyond","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/d1e83fff-ce3d-41bd-a571-1a7060bb3d41)\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nrender the button icon correctly\n\n### Actual Behavior\n\ndoes not render the button icon correctly\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29956","RelatedDescription":"Closed issue \"bug(COMPONENT): mat-datepicker does not render the previous < and  next > icon correctly when set theme density: (scale: -2) and beyond\" (#29956)"},{"Id":"2629140250","IsPullRequest":true,"CreatedAt":"2024-11-04T14:03:48","Actor":"crisbeto","Number":"29957","RawContent":null,"Title":"fix(material/datepicker): use SVG icons for calendar","State":"closed","Body":"The calendar's next/previous icons are currently rendered using an `:after` element, borders and a transform. This makes them hard to position accurately and fragile to changes in the container size. These changes switch to using SVG which is more robust.\r\n\r\nFixes #29956.","Url":"https://github.com/angular/components/pull/29957","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): use SVG icons for calendar\" (#29957)"},{"Id":"2632653087","IsPullRequest":false,"CreatedAt":"2024-11-04T13:28:46","Actor":"json-derulo","Number":"29965","RawContent":null,"Title":"docs-bug: styling tab broken","State":"closed","Body":"### Documentation Feedback\n\nThe newly added \"Styling\" tab is broken currently. A few hours ago it worked fine, but now when navigating to the \"Styling\" tab of any component, instead of the content only the following text is displayed:\n\n> This component does not support style overrides\n\nIn the browser console, the following error is printed once the \"Styling\" tab is opened:\n\n```\nmain.690dc78a22be8e65.js:1 ERROR TypeError: g.find is not a function\n    at 5862.c72688d4f30e63c6.js:1:21144\n    at main.690dc78a22be8e65.js:1:112617\n    at R._next (main.690dc78a22be8e65.js:1:109247)\n    at R.next (main.690dc78a22be8e65.js:1:98554)\n    at subscribe.H (main.690dc78a22be8e65.js:1:116016)\n    at R._next (main.690dc78a22be8e65.js:1:109247)\n    at R.next (main.690dc78a22be8e65.js:1:98554)\n    at R._subscribe (main.690dc78a22be8e65.js:1:95468)\n    at R._trySubscribe (main.690dc78a22be8e65.js:1:94215)\n    at R._trySubscribe (main.690dc78a22be8e65.js:1:97001)\n```\n\nLooks like #29964 might have broken it.\n\n### Affected documentation page\n\nhttps://rc.material.angular.io/components/checkbox/styling","Url":"https://github.com/angular/components/issues/29965","RelatedDescription":"Closed issue \"docs-bug: styling tab broken\" (#29965)"},{"Id":"2629893229","IsPullRequest":false,"CreatedAt":"2024-11-04T13:12:38","Actor":"AndrewKushnir","Number":"29958","RawContent":null,"Title":"docs-bug: cookies popup doesn't have a shadow at next.material.angular.io","State":"closed","Body":"### Documentation Feedback\n\nExample page (open in incognito mode to make the cookies popup appear): https://next.material.angular.io/components/button/styling.\n\n![Image](https://github.com/user-attachments/assets/ea8e433c-defa-4112-854e-c2804f080bcf)\n\n\n### Affected documentation page\n\nhttps://next.material.angular.io/components/button/styling","Url":"https://github.com/angular/components/issues/29958","RelatedDescription":"Closed issue \"docs-bug: cookies popup doesn't have a shadow at next.material.angular.io\" (#29958)"},{"Id":"2632337628","IsPullRequest":true,"CreatedAt":"2024-11-04T11:52:01","Actor":"crisbeto","Number":"29964","RawContent":null,"Title":"build: generate styling example during the build","State":"closed","Body":"Currently the example in the styling pages on the docs site is generated at runtime which doesn't allow us to highlight it as code correctly. These changes move the generation of the example into the main repo and add syntax highlighting.","Url":"https://github.com/angular/components/pull/29964","RelatedDescription":"Closed or merged PR \"build: generate styling example during the build\" (#29964)"},{"Id":"2631302968","IsPullRequest":true,"CreatedAt":"2024-11-04T10:46:44","Actor":"crisbeto","Number":"29960","RawContent":null,"Title":"build: update to the Angular v19 RC","State":"closed","Body":"Updates all the Angular dependencies to the v19 release candidate.","Url":"https://github.com/angular/components/pull/29960","RelatedDescription":"Closed or merged PR \"build: update to the Angular v19 RC\" (#29960)"},{"Id":"2628111221","IsPullRequest":true,"CreatedAt":"2024-11-04T10:46:13","Actor":"jacksondearing96","Number":"29955","RawContent":null,"Title":"[Angular] Fix typo in documentation.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29955","RelatedDescription":"Closed or merged PR \"[Angular] Fix typo in documentation.\" (#29955)"},{"Id":"2632280879","IsPullRequest":false,"CreatedAt":"2024-11-04T10:07:12","Actor":"boszormenyip","Number":"29963","RawContent":null,"Title":"bug(MatAutoComplete): NG0301 error if the component under test is not a standalone component","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an an angular component that use the Autocomplete component from Angular Material. The component is not a standalone component. If I write a component test for my angular component, I get this error (The MatAutocompleteModule is imported in the AppModule and in the TestBed):\n```\nerror properties: Object({ code: -301 })\nError: NG0301: Export of name 'matAutocomplete' not found! Find more at https://angular.dev/errors/NG0301\n    at cacheMatchingLocalNames (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82705:32)\n    at resolveDirectives (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82463:21)\n    at elementStartFirstCreatePass (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93638:3)\n    at ɵɵelementStart (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93672:41)\n    at AutocompleteHarnessExample_Template (ng:///AutocompleteHarnessExample.js:21:9)\n    at executeTemplate (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:81970:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83132:7)\n    at renderComponent (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83078:3)\n    at renderChildComponents (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83178:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83160:7)\n```\n\nThe StackBlitz example is a modification of the 'Testing with MatAutocompleteHarness' example from the documentation of the Autocomplete example. The only change is the removal of the standalone: true flag from the component, and additional bolierplate (adding of angular.module.ts, changing the main.ts) to make the test running.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-autocomplete-bug?file=src%2Fexample%2Fautocomplete-harness-example.spec.ts\nSteps to reproduce:\n1. Open StackBlitz.\n2. Wait until the build and the test execution is done.\n\n\n### Expected Behavior\n\nGreen test\n\n### Actual Behavior\n\nNG0301: Export of name 'matAutocomplete' not found error:\n```\nerror properties: Object({ code: -301 })\nError: NG0301: Export of name 'matAutocomplete' not found! Find more at https://angular.dev/errors/NG0301\n    at cacheMatchingLocalNames (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82705:32)\n    at resolveDirectives (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82463:21)\n    at elementStartFirstCreatePass (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93638:3)\n    at ɵɵelementStart (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93672:41)\n    at AutocompleteHarnessExample_Template (ng:///AutocompleteHarnessExample.js:21:9)\n    at executeTemplate (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:81970:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83132:7)\n    at renderComponent (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83078:3)\n    at renderChildComponents (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83178:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83160:7)\n```\n\n### Environment\n\n- Angular: I tried with two version: 19.0.0-next.2 and 18.1.4. The version 19.0.0-next.2 is in the StackBlitz.\n- CDK/Material: I tried with two version: 19.0.0-next.2 and 18.1.4. The version 19.0.0-next.2 is in the StackBlitz.\n- Browser(s): Firefox 132.0, Google Chrome 130.0.6723.69\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.10\n","Url":"https://github.com/angular/components/issues/29963","RelatedDescription":"Closed issue \"bug(MatAutoComplete): NG0301 error if the component under test is not a standalone component\" (#29963)"},{"Id":"2632245968","IsPullRequest":false,"CreatedAt":"2024-11-04T09:19:20","Actor":"Muqhees","Number":"29962","RawContent":null,"Title":"Angular material components don't show tooltips if they are in disabled state","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nTooltips for some Angular components like mat-button and mat-checkbox do not work if they are in a disabled state whereas it works for other components like mat-menu-item\n\nAlso tooltips work for basic html elements like button work even if they are in disabled state. Wanted to get more insight on this If this is a bug or expected behavior. In latest versions tooltip behavior for disabled elements is inconsistent for different components and it use to work for all components in version 14\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-kmkdyn\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nTooltips should work for disabled state components like mat-button and mat-checkbox\n\n### Actual Behavior\n\nTooltips don't work for disabled state components like mat-button and mat-checkbox\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29962","RelatedDescription":"Closed issue \"Angular material components don't show tooltips if they are in disabled state\" (#29962)"},{"Id":"2631260356","IsPullRequest":false,"CreatedAt":"2024-11-03T14:56:55","Actor":"poirierlouis","Number":"29959","RawContent":null,"Title":"bug(MatTree): padding is not recomputed when moving a node inside/outside an expandable node","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs `TreeControl` is deprecated, I started migrating to the latest API using `childrenAccessor`. So far so good, except for one case not working any more.\n\nI'm using `matTreeNodePadding` and `matTreeNodePaddingIndent` on `<mat-tree-node>`. When I move a node inside/outside of an expandable node, padding is not recomputed as-is.\n\nExpanding/collapsing the parent node in which the node was moved, will recompute its padding though.\n\n### Reproduction\n\nMinimal example on [Stackblitz](https://stackblitz.com/~/github.com/poirierlouis/ng-issue-29959).\n\nSteps to reproduce:\n1. Open link\n2. Open preview in a new tab\n3. Open both folders (`/` and `home`)\n4. Follow instructions to move a node outside its parent node\n\n`dataSource` is updated with a new array, using the same items. Can it be a source of error? Should the entire tree be cloned somehow, to trigger changes detection down to padding computation?\n\n### Expected Behavior\n\nWhen a node is moved inside/outside of an expandable node (level is changed), padding should be recomputed based on the new level of the node.\n\n### Actual Behavior\n\nPadding of the node is not updated when moving the node inside/outside of an expandable node.\n\n### Environment\n\n- Angular: 18.2.10\n- CDK/Material: 18.2.11\n- Browser(s): Firefox / Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/29959","RelatedDescription":"Open issue \"bug(MatTree): padding is not recomputed when moving a node inside/outside an expandable node\" (#29959)"},{"Id":"2627892705","IsPullRequest":false,"CreatedAt":"2024-10-31T21:00:01","Actor":"tp1906","Number":"29954","RawContent":null,"Title":"Unable to resize radio button to smaller version","State":"open","Body":"Is it possible to resize the radio button including the ripple/outline?  I was able to resize the circle; however, the outline/ripple is not centered.\n\n\n .small-radio-button {\n    .mdc-radio {\n     padding: 2px;\n      --mdc-radio-state-layer-size: 32px;\n      height: 16px;\n      width: 16px;\n    }\n\n    .mat-mdc-radio-touch-target {\n      height: 16px;\n      width: 16px;\n    }\n\n    .mdc-radio__background {\n      height: 16px;\n      width: 16px;\n    }\n\n    .mdc-radio__inner-circle {\n      border-width: 8px;\n    }\n\n    .mdc-radio__outer-circle {\n        border-width: 1px;\n    }\n\n  }","Url":"https://github.com/angular/components/issues/29954","RelatedDescription":"Open issue \"Unable to resize radio button to smaller version\" (#29954)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-08T03:30:02.340149Z","RunDurationInMilliseconds":1514}