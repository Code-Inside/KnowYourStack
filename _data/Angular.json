{"Data":{"Angular-Issues":{"Issues":[{"Id":"2172822960","IsPullRequest":false,"CreatedAt":"2024-03-07T02:41:39","Actor":"KorokMan","Number":"54741","RawContent":null,"Title":"API reference list link missing.","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nI think the link just has to be adjust a bit to:\r\nhttps://angular.dev/api\r\nI could be wrong tho\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\n(https://angular.dev/guide/animations#summary)\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\n_No response_\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\n_No response_\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54741","RelatedDescription":"Open issue \"API reference list link missing.\" (#54741)"},{"Id":"2172661429","IsPullRequest":true,"CreatedAt":"2024-03-07T00:12:44","Actor":"atscott","Number":"54740","RawContent":null,"Title":"refactor(core): Remove isInternal flag","State":"open","Body":"This is not needed any longer since the changes that used it have landed.\r\n","Url":"https://github.com/angular/angular/pull/54740","RelatedDescription":"Open PR \"refactor(core): Remove isInternal flag\" (#54740)"},{"Id":"2172649193","IsPullRequest":false,"CreatedAt":"2024-03-06T23:59:44","Actor":"jblas","Number":"54739","RawContent":null,"Title":"addEventListener with AbortSignal option can cause memory leaks","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nOur application is using zone.js@0.14.3 outside of Angular, as a dependency of OpenTelemetry.\r\n\r\nIn our application we noticed memory leaks involving large subtrees of detached HTMLElements after updating to zone.js@0.14.3. Version 0.14.2 does not have an issue.\r\n\r\nThe issue seems to be related to the fact that zone.js registers an \"abort\" handler on the AbortSignal object passed in to the addEventListener() call and the callback it is registering captures the task in its scope. This handler is as far as I can tell never removed off the AbortSignal object.\r\n\r\nhttps://github.com/angular/angular/blob/zone.js-0.14.3/packages/zone.js/lib/common/events.ts#L488\r\n\r\nThe big issue I see with the current implementation is that zone.js has no clue what the lifetime and ownership model is for the AbortSignal object in question or the element that is captured in the task within the callback that is never removed.\r\n\r\nIn our particular case the detached HTMLElement captured within the task is part of a larger subtree that gets removed/detached. The signal itself is owned by some code associated with an ancestor element that out-lives the subtree that is removed, so as long as that listener callback is alive, so is the task, the element it captures, and any other elements in the detached subtree the element is still referencing via parentNode, next/prevSibling, etc.\r\n\r\nAlso, we can't assume that this \"abort\" listener will be removed via a corresponding element's removeEventListener() call because there may never be a removeEventListener() call made ... and in most circumstances when a subtree of elements is detached, this would be ok and things would garbage collect just fine.\r\n\r\nThe issue can be observed with this simple test case:\r\n\r\n[addeventlistener-signal-bug.txt](https://github.com/angular/angular/files/14516929/addeventlistener-signal-bug.txt)\r\n\r\nIf you load the test case into Chrome:\r\n\r\n- Press the remove button in the test case\r\n- Open the Web Inspector Memory Panel\r\n- Hit the Garbage Collect button\r\n- Trigger a Heap Snapshot\r\n\r\nIn the resulting Heap Snapshot you will notice that there are detached HTMLDiv, HTMLButton, HTMLUL, and HTMLLI elements listed.\r\n\r\nIf you remove the include of zone.js from the test case, and then repeat the steps above, you will see that the elements mentioned above are no longer listed in the Heap Snapshot, meaning they were garbage collected properly.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54739","RelatedDescription":"Open issue \"addEventListener with AbortSignal option can cause memory leaks\" (#54739)"},{"Id":"2172426224","IsPullRequest":true,"CreatedAt":"2024-03-06T23:44:12","Actor":"atscott","Number":"54735","RawContent":null,"Title":"fix(core): Ensure views marked for check are refreshed during change …","State":"closed","Body":"…detection\r\n\r\nWhen a view has the `Dirty` flag and is reattached, we should ensure that it is reached and refreshed during the next change detection run from above.\r\n\r\nIn addition, when a view is created and attached, we should ensure that it is reached and refreshed during change detection. This can happen if the view is created and attached outside a change run or when it is created and attached after its insertion view was already checked. In both cases, we should ensure that the view is reached and refreshed during either the current change detection or the next one (if change detection is not already running).\r\n\r\nWe can achieve this by creating all views with the `Dirty` flag set.\r\n\r\nHowever, this does happen to be a breaking change in some scenarios. The one identified internally was actually depending on change detection _not_ running immediately because it relied on an input value that was set using `ngModel`. Because `ngModel` sets its value in a `Promise`, it is not available until the _next_ change detection cycle. Ensuring created views run in the current change change detection will result in different behavior in this case.\r\n\r\nfixes #52928\r\nfixes #15634\r\n\r\nBREAKING CHANGE: Newly created and views marked for check and reattached during change detection are now guaranteed to be refreshed in that same change detection cycle. Previously, if they were attached at a location in the view tree that was already checked, they would either throw `ExpressionChangedAfterItHasBeenCheckedError` or not be refreshed until some future round of change detection. In rare circumstances, this correction can cause issues. We identified one instance that relied on the previous behavior by reading a value on initialization which was queued to be updated in a microtask instead of being available in the current change detection round. The component only read this value during initialization and did not read it again after the microtask updated it.\r\n","Url":"https://github.com/angular/angular/pull/54735","RelatedDescription":"Closed or merged PR \"fix(core): Ensure views marked for check are refreshed during change …\" (#54735)"},{"Id":"2172406071","IsPullRequest":true,"CreatedAt":"2024-03-06T23:43:18","Actor":"atscott","Number":"54734","RawContent":null,"Title":"fix(core): Change Detection will continue to refresh views while mark…","State":"closed","Body":"…ed for check\r\n\r\nWhen the `ApplicationRef` refreshes attached views, it will continue to do so while there is still one marked for check after the refresh completes.\r\n\r\nBREAKING CHANGE: When Angular runs change detection, it will continue to refresh any views attached to `ApplicationRef` that are still marked for check after one round completes. In rare cases, this can result in infinite loops when certain patterns continue to mark views for check using `ChangeDetectorRef.detectChanges`. This will be surfaced as a runtime error with the `NG0103` code.","Url":"https://github.com/angular/angular/pull/54734","RelatedDescription":"Closed or merged PR \"fix(core): Change Detection will continue to refresh views while mark…\" (#54734)"},{"Id":"2172454904","IsPullRequest":false,"CreatedAt":"2024-03-06T21:39:41","Actor":"zip-fa","Number":"54738","RawContent":null,"Title":"input's initialValue value ignored with withComponentInputBinding()","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, router\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHi.\r\nWhen `withComponentInputBinding()` provided with router, initialValue from signal input is ignored\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-snfkia?file=src%2Ftest.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nlatest\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54738","RelatedDescription":"Closed issue \"input's initialValue value ignored with withComponentInputBinding()\" (#54738)"},{"Id":"2172431126","IsPullRequest":true,"CreatedAt":"2024-03-06T21:34:58","Actor":"atscott","Number":"54736","RawContent":null,"Title":"refactor(core): Fix internal test util types","State":"closed","Body":"This fixes and error that has been seen recently where compilation fails due to domino.impl type not being recognized\r\n","Url":"https://github.com/angular/angular/pull/54736","RelatedDescription":"Closed or merged PR \"refactor(core): Fix internal test util types\" (#54736)"},{"Id":"2172387660","IsPullRequest":true,"CreatedAt":"2024-03-06T21:33:56","Actor":"atscott","Number":"54733","RawContent":null,"Title":"fix(core): ComponentFixture autodetect should detect changes within A…","State":"closed","Body":"…pplicationRef.tick\r\n\r\nThe current behavior of `autoDetect` in `ComponentFixture` does not match production very well. It has several flaws that make it an insufficient change detection mechanism:\r\n\r\n* It runs change detection for the component under test _after_ views attached to the `ApplicationRef`. This can cause real behavior differences that break in production, because tests can observe view refreshes in the incorrect order (for example, a dialog refreshing before the component which opened it).\r\n* Because of the above ordering, render hooks registered during change detection of the fixture views _will not execute at all_ because `ApplicationRef.tick` already happen.\r\n* It does not rerun change detection on the view tree if there are more dirty views to refresh after the render hooks complete.\r\n* It effectively hides/swallows errors from change detection inside the `onMicrotaskEmpty` subscription by not reporting them to the error handler. Instead, this error ends up being unhandled in the subscription and rxjs throws these in a `setTimeout`.\r\n\r\nAll of the above are problematic but this commit _does not_ fix the final point. Ideally, we can land this in a future change but this requires additional internal fixes. In the meantime, we have to juggle special-case handling of the component fixture views within `ApplicationRef.tick` using some special events to retain current behavior and avoid errors from the fixture propagating to the `ErrorHandler`.\r\n\r\nBREAKING CHANGE: The `ComponentFixture.autoDetect` feature now executes change detection for the fixture within `ApplicationRef.tick`. This more closely matches the behavior of how a component would refresh in production. The order of component refresh in tests may be slightly affected as a result, especially when dealing with additional components attached to the application, such as dialogs. Tests sensitive to this type of change (such as screenshot tests) may need to be updated. Concretely, this change means that the component will refresh _before_ additional views attached to `ApplicationRef` (i.e. dialog components). Prior to this change, the fixture component would refresh _after_ other views attached to the application.\r\n","Url":"https://github.com/angular/angular/pull/54733","RelatedDescription":"Closed or merged PR \"fix(core): ComponentFixture autodetect should detect changes within A…\" (#54733)"},{"Id":"2172440858","IsPullRequest":true,"CreatedAt":"2024-03-06T21:26:34","Actor":"atscott","Number":"54737","RawContent":null,"Title":"release: bump the next branch to v18.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54737","RelatedDescription":"Closed or merged PR \"release: bump the next branch to v18.0.0-next.0\" (#54737)"},{"Id":"2172295213","IsPullRequest":true,"CreatedAt":"2024-03-06T19:44:52","Actor":"pkozlowski-opensource","Number":"54730","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.4.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.3.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular/pull/54730","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.4.0-next.0\".\" (#54730)"},{"Id":"2172288202","IsPullRequest":true,"CreatedAt":"2024-03-06T19:40:30","Actor":"pkozlowski-opensource","Number":"54729","RawContent":null,"Title":"Bump version to \"v17.3.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54729","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-rc.0\" with changelog.\" (#54729)"},{"Id":"2172273210","IsPullRequest":true,"CreatedAt":"2024-03-06T19:34:37","Actor":"pkozlowski-opensource","Number":"54728","RawContent":null,"Title":"docs: release notes for the v17.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/54728","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.4 release\" (#54728)"},{"Id":"2172256788","IsPullRequest":true,"CreatedAt":"2024-03-06T19:28:55","Actor":"pkozlowski-opensource","Number":"54727","RawContent":null,"Title":"Bump version to \"v17.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/54727","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.4\" with changelog.\" (#54727)"},{"Id":"2172120471","IsPullRequest":false,"CreatedAt":"2024-03-06T19:03:34","Actor":"genaro-pinson-gh","Number":"54725","RawContent":null,"Title":"Angular 13 to 14 migration issue running widgets","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nOur child angular applications are run as **widget** on top of a parent angular application and the widgets are mostly built on **Angular 14** while our parent angular application is built on Angular 6.1.0. \r\n\r\nOur child angular widgets are dynamically added/removed on the page with the following lines of code appended/removed to the html:\r\n\r\n```\r\n   <div class=\"calc\"><app-root-widget>loading ....</app-root-widget></div>\r\n\r\n    <script src=\"http://localhost:4200/assets/scripts/widget.js\" defer=\"\"></script>\r\n    <script src=\"http://localhost:4200/runtime.js?build=1709600028\" type=\"module\"></script>\r\n    <script src=\"http://localhost:4200/polyfills.js?build=1709600028\" type=\"module\"></script>\r\n    <script src=\"http://localhost:4200/styles.js?build=1709600028\" type=\"module\"></script>\r\n    <script src=\"http://localhost:4200/scripts.js?build=1709600028\" defer=\"\"></script>\r\n    <script src=\"http://localhost:4200/vendor.js?build=1709600028\" type=\"module\"></script>\r\n    <script src=\"http://localhost:4200/main.js?build=1709600028\" type=\"module\"></script>  \r\n```\r\n\r\nWe've decided to update the parent angular application starting from version 6, 7, 8  up to version 13 and so far everything still works and our **dynamically added widgets render successfully.** \r\n\r\nThen we hit an issue with our **widget failing to render updating the parent application from Angular 13 to 14**. We've already tried many things and our widget still seems to fail to render on top of an Angular 14 application.\r\n\r\nCan someone please help advice what we need to do or check in order for our child angular widget/application to successfully run on top of an Angular 14 application. The weird thing is that there's no errors being thrown and our widget just fail to render which successfully renders up to Angular 13! \r\n\r\nThanks in advance!\r\n   \r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/54725","RelatedDescription":"Closed issue \"Angular 13 to 14 migration issue running widgets\" (#54725)"},{"Id":"2172166237","IsPullRequest":true,"CreatedAt":"2024-03-06T18:30:30","Actor":"dylhunn","Number":"54726","RawContent":null,"Title":"refactor(language-service): Make a variety of fixes to the language service to build in g3","State":"open","Body":"The following changes help the language service code build in g3:\r\n* `Omit<T>` produces an index signature, so we must access the resulting properties with square bracket (because `noPropertyAccessFromIndexSignature` is on in g3).\r\n* Explicitly export `absoluteFrom` from `packages/compiler-cli/index.ts`, since the `*` re-export is patched out in g3.\r\n* Remove const from a few const enums, since accessing const enums across modules is not compatible with `isolatedModules` (which is on in g3).\r\n* Replace `tsserverlibrary` -> `typescript` ([blog post](https://devblogs.microsoft.com/typescript/announcing-typescript-5-3/#consolidation-between-tsserverlibrary-js-and-typescript-js))\r\n","Url":"https://github.com/angular/angular/pull/54726","RelatedDescription":"Open PR \"refactor(language-service): Make a variety of fixes to the language service to build in g3\" (#54726)"},{"Id":"2171991669","IsPullRequest":true,"CreatedAt":"2024-03-06T16:50:17","Actor":"devknoll","Number":"54724","RawContent":null,"Title":"refactor(core): add i18n AST to prepare for hydration","State":"open","Body":"In order to serialize and hydrate i18n blocks, we need to be able to walk an AST for the translated message. This AST is generated during normal parsing of the message.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54724","RelatedDescription":"Open PR \"refactor(core): add i18n AST to prepare for hydration\" (#54724)"},{"Id":"2171908473","IsPullRequest":true,"CreatedAt":"2024-03-06T16:19:49","Actor":"devknoll","Number":"54723","RawContent":null,"Title":"refactor(core): don't hydrate detached nodes","State":"open","Body":"In preparation for hydration support, make sure that we don't attempt to hydrate detached nodes and instead, always newly create them.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54723","RelatedDescription":"Open PR \"refactor(core): don't hydrate detached nodes\" (#54723)"},{"Id":"2171874488","IsPullRequest":true,"CreatedAt":"2024-03-06T16:07:52","Actor":"devknoll","Number":"54722","RawContent":null,"Title":"refactor(core): refactor i18n node creation to prepare for hydration","State":"open","Body":"Adds a `locateOrCreateNode` helper and uses it for all DOM operations in preparation for supporting hydration.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54722","RelatedDescription":"Open PR \"refactor(core): refactor i18n node creation to prepare for hydration\" (#54722)"},{"Id":"2171721750","IsPullRequest":true,"CreatedAt":"2024-03-06T15:03:53","Actor":"angular-robot","Number":"54721","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.","Url":"https://github.com/angular/angular/pull/54721","RelatedDescription":"Open PR \"docs: update events\" (#54721)"},{"Id":"2171562969","IsPullRequest":true,"CreatedAt":"2024-03-06T14:18:54","Actor":"JeanMeche","Number":"54719","RawContent":null,"Title":"fix(core): return a readonly signal on `asReadonly`.","State":"closed","Body":"Backport of #54706 for patch","Url":"https://github.com/angular/angular/pull/54719","RelatedDescription":"Closed or merged PR \"fix(core): return a readonly signal on `asReadonly`.\" (#54719)"},{"Id":"2171579762","IsPullRequest":false,"CreatedAt":"2024-03-06T14:02:18","Actor":"endlacer","Number":"54720","RawContent":null,"Title":"Using Self-Closing Tags on root-element (app-root) breaks SSR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am using Angular 17.1 with \"@angular/ssr\": \"17.1.1\"\r\nI switched to self closing tags on the root-element (eg <app-root/>) and it broke angular SSR hydration for some reason.\r\nI saw no error. Hydration just did not work. The server rendered the content correctly, but client angular did not take over apparently.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.1\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.1.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.1\r\n@angular-devkit/build-angular   17.1.1\r\n@angular-devkit/core            17.1.1\r\n@angular-devkit/schematics      17.1.1\r\n@schematics/angular             17.1.1\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54720","RelatedDescription":"Closed issue \"Using Self-Closing Tags on root-element (app-root) breaks SSR\" (#54720)"},{"Id":"2171455585","IsPullRequest":true,"CreatedAt":"2024-03-06T13:47:15","Actor":"JeanMeche","Number":"54717","RawContent":null,"Title":"fix(core): return a readonly signal on `asReadonly`.","State":"closed","Body":"Backport of #54706 for patch ","Url":"https://github.com/angular/angular/pull/54717","RelatedDescription":"Closed or merged PR \"fix(core): return a readonly signal on `asReadonly`.\" (#54717)"},{"Id":"2171472868","IsPullRequest":true,"CreatedAt":"2024-03-06T13:06:54","Actor":"charsleysa","Number":"54718","RawContent":null,"Title":"feat(common): add height support for custom image loaders","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #51723\r\n\r\n\r\n## What is the new behavior?\r\nAdd support to pass through the height to the custom image loader if the height is available. This allows custom image loaders to know the height at different breakpoints instead of using a fixed value using loaderParams.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54718","RelatedDescription":"Open PR \"feat(common): add height support for custom image loaders\" (#54718)"},{"Id":"2171391625","IsPullRequest":false,"CreatedAt":"2024-03-06T12:27:58","Actor":"JoepKockelkorn","Number":"54716","RawContent":null,"Title":"Copy button of code example on angular.dev blocks the code","State":"open","Body":"### Describe the problem that you experienced\n\nWhile browsing [the signals guide on angular.dev](https://angular.dev/guide/signals) I cannot read the full code example(s), because the copy button is blocking it.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/signals\n\n### Describe what you were looking for in the documentation\n\nA clear, readable code example.\n\n### Describe the actions that led you to experience the problem\n\nReading the page, trying to understand the code (regarding signals in this case).\n\n### Describe what you want to experience that would fix the problem\n\nThe copy button should either not have a grey background but a transparent one, or the code example should have more vertical padding so the code is not behind the copy button. Decreasing the copy button size is not really an option, because the touch target becomes too small.\n\n### Add a screenshot if that helps illustrate the problem\n\n<img width=\"2292\" alt=\"image\" src=\"https://github.com/angular/angular/assets/12891645/5029c529-b347-42f7-97b9-cbd5e86782e1\">\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nDevice: Macbook Pro 2019 (Intel)\r\nOS: MacOS Sonoma 14.3.1\r\nBrowser: Google Chrome 122.0.6261.94\n```\n\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54716","RelatedDescription":"Open issue \"Copy button of code example on angular.dev blocks the code\" (#54716)"},{"Id":"2171334402","IsPullRequest":true,"CreatedAt":"2024-03-06T12:16:40","Actor":"devversion","Number":"54715","RawContent":null,"Title":"build: update ng-dev to avoid node-fetch usages","State":"closed","Body":"See: https://github.com/angular/dev-infra/pull/1829","Url":"https://github.com/angular/angular/pull/54715","RelatedDescription":"Closed or merged PR \"build: update ng-dev to avoid node-fetch usages\" (#54715)"},{"Id":"2171222609","IsPullRequest":true,"CreatedAt":"2024-03-06T11:00:31","Actor":"crisbeto","Number":"54714","RawContent":null,"Title":"Allow two-way bindings to signal-based template variables","State":"open","Body":"Includes the following changes whose goal is to properly support two-way bindings to signal-based local variables:\r\n\r\n### refactor(compiler-cli): remove extendedTemplateChecker from traits\r\nThe `extendedTemplateCheck` wasn't doing anything. These changes remove it from the traits to streamline them a bit.\r\n\r\n### refactor(compiler-cli): introduce template semantics checker\r\nIntroduces a new `TemplateSemanticsChecker` that will be used to flag semantic errors in the user's template. Currently we do some of this in the type check block, but the problem is that it doesn't have access to the template type checker which prevents us from properly checking cases like https://github.com/angular/angular/issues/54670. This pass is also distinct from the extended template checks, because we don't want users to be able to turn the checks off and we want them to run even if `strictTemplates` are disabled.\r\n\r\n### refactor(compiler-cli): move signal identification function\r\nMoves the function that identifies signals into a separate file so that it can be reused outside of extended diagnostics.\r\n\r\n### refactor(compiler-cli): move illegal template assignment check into template semantics checker\r\nMoves the check which ensures that there are no writes to template variables into the `TemplateSemanticsChecker` to prepare for the upcoming changes.\r\n\r\n### fix(compiler-cli): flag two-way bindings to non-signal values in templates\r\nWe have a diagnostic that reports writes to template variables which worked both for regular event bindings and two-way bindings, however the latter was broken by https://github.com/angular/angular/pull/54154 because two-way bindings no longer had a `PropertyWrite` AST.\r\n\r\nThese changes fix the diagnostic and expand it to allow two-way bindings to template variables that are signals.\r\n\r\n### fix(compiler): handle two-way bindings to signal-based template variables in instruction generation\r\nUpdates the instruction generation for two-way bindings to only emit the `twoWayBindingSet` call when writing to template variables. Since template variables are constants, it's only allowed to write to them when they're signals. Non-signal values are flagged during template type checking.\r\n\r\nFixes https://github.com/angular/angular/issues/54670.","Url":"https://github.com/angular/angular/pull/54714","RelatedDescription":"Open PR \"Allow two-way bindings to signal-based template variables\" (#54714)"},{"Id":"2171018653","IsPullRequest":true,"CreatedAt":"2024-03-06T09:34:13","Actor":"angular-robot","Number":"54712","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/54712","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#54712)"},{"Id":"2170332277","IsPullRequest":true,"CreatedAt":"2024-03-05T23:31:38","Actor":"alxhub","Number":"54711","RawContent":null,"Title":"fix(compiler-cli): symbol feature detection for the compiler","State":"open","Body":"Use the actual symbol presence in the .d.ts to detect whether two-way binding to writable signals should be template type-checked.","Url":"https://github.com/angular/angular/pull/54711","RelatedDescription":"Open PR \"fix(compiler-cli): symbol feature detection for the compiler\" (#54711)"},{"Id":"2170138179","IsPullRequest":true,"CreatedAt":"2024-03-05T21:02:08","Actor":"atscott","Number":"54710","RawContent":null,"Title":"fix(router): Navigations triggered by cancellation events should canc…","State":"open","Body":"…el previous navigation\r\n\r\nThere is an edge case where synchronous navigations caused in response to navigation events can result in a previous navigation not being unsubscribed from. b/328219996\r\n","Url":"https://github.com/angular/angular/pull/54710","RelatedDescription":"Open PR \"fix(router): Navigations triggered by cancellation events should canc…\" (#54710)"},{"Id":"2169778348","IsPullRequest":false,"CreatedAt":"2024-03-05T18:08:04","Actor":"Sakthi1112","Number":"54709","RawContent":null,"Title":"Twitter name Changing ","State":"closed","Body":"### Describe the problem that you experienced\n\nTwitter name has to be change as X, since the organization have changed its name to X but in angular.io application its not changed in the footer and also need to change the X  icons note when hover on the top rigth\r\n![Screenshot 2024-03-05 225034](https://github.com/angular/angular/assets/91306041/f055988d-5e25-4dc3-960b-565112e40255)\r\n![Screenshot 2024-03-05 225055](https://github.com/angular/angular/assets/91306041/5c4e3b32-66fd-4c66-b2c5-12fe17c68847)\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54709","RelatedDescription":"Closed issue \"Twitter name Changing \" (#54709)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2172550866","IsPullRequest":false,"CreatedAt":"2024-03-06T22:35:33","Actor":"matejlednar","Number":"27228","RawContent":null,"Title":"Angular 17 - SSR - ng build --base-href 'path' doesn't work","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nnpx ng build --base-href 'path' doesn't change the  <base href=\"/\"> to <base href=\"path\">\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n/dist/ssr-demo/browser/index.html\n\n### Please provide the exception or error you saw\n\n```true\nnone\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nangular/cli: ^17.2.3\r\nnode 20.11.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27228","RelatedDescription":"Closed issue \"Angular 17 - SSR - ng build --base-href 'path' doesn't work\" (#27228)"},{"Id":"2172551078","IsPullRequest":false,"CreatedAt":"2024-03-06T22:34:44","Actor":"matejlednar","Number":"27229","RawContent":null,"Title":"Angular 17 - SSR - relative paths don't work","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nhref attribute is not updated during the build.\r\n\r\napp.component.html\r\n<a routerLink=\"./home\" routerLinkActive=\"router-link-active\">Home</a>\r\n\r\nindex.html\r\n<a _ngcontent-ng-c2813606955 routerlink=\"./home\" routerlinkactive=\"router-link-active\" href=\"/home\">Home</a>\n\n### Please provide a link to a minimal reproduction of the bug\n\n/dist/ssr-demo/browser/index.html\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nangular/cli: ^17.2.3\r\nnode 20.11.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27229","RelatedDescription":"Closed issue \"Angular 17 - SSR - relative paths don't work\" (#27229)"},{"Id":"2172444220","IsPullRequest":false,"CreatedAt":"2024-03-06T21:18:46","Actor":"klatort","Number":"27227","RawContent":null,"Title":"Cli needs extra information on task progress","State":"open","Body":"### Command\n\nadd, new, update\n\n### Description\n\nRecently I've was making an Angular demo in my new job and waited a long time before realizing the \"Installing packages\" was taking a lot of time because it wasn't able to download the node modules because of a vpn. I think that showing process progress in some way could be a nice feature to have so when a problem like this one arises, more information can be gathered to solve the problem.\n\n### Describe the solution you'd like\n\nA progress bar/percentage of the current task progress\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27227","RelatedDescription":"Open issue \"Cli needs extra information on task progress\" (#27227)"},{"Id":"2172112540","IsPullRequest":true,"CreatedAt":"2024-03-06T18:46:11","Actor":"clydin","Number":"27226","RawContent":null,"Title":"build: remove usage of built package from build script","State":"closed","Body":"Previously, the `@angular/core` package which was being built was used during the build process. This package was only used for logging and has now been replaced with the Console instead. This prevents potential logging issues if there are bugs or errors within the package being built.\r\n","Url":"https://github.com/angular/angular-cli/pull/27226","RelatedDescription":"Closed or merged PR \"build: remove usage of built package from build script\" (#27226)"},{"Id":"2169213347","IsPullRequest":true,"CreatedAt":"2024-03-06T17:15:33","Actor":"alan-agius4","Number":"27207","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove Sass legacy implementation","State":"closed","Body":"\r\nThis commit removes the legacy Sass implementation previously used with Webpack.\r\n\r\nBREAKING CHANGE: The support for the legacy Sass build pipeline, previously accessible via `NG_BUILD_LEGACY_SASS` when utilizing webpack-based builders, has been removed.\r\n","Url":"https://github.com/angular/angular-cli/pull/27207","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove Sass legacy implementation\" (#27207)"},{"Id":"2169195500","IsPullRequest":true,"CreatedAt":"2024-03-06T17:15:21","Actor":"alan-agius4","Number":"27206","RawContent":null,"Title":"refactor(@schematics/angular): remove private `/components` API","State":"closed","Body":"Last usages of this API has been removed in https://github.com/angular/components/pull/28424\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/27206","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): remove private `/components` API\" (#27206)"},{"Id":"2171453785","IsPullRequest":true,"CreatedAt":"2024-03-06T17:14:19","Actor":"alan-agius4","Number":"27222","RawContent":null,"Title":"Configure next branch to receive major changes for v18.0.0-next.0","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27222","RelatedDescription":"Closed or merged PR \"Configure next branch to receive major changes for v18.0.0-next.0\" (#27222)"},{"Id":"2171732692","IsPullRequest":true,"CreatedAt":"2024-03-06T16:59:31","Actor":"alan-agius4","Number":"27223","RawContent":null,"Title":"test: fix failing update e2e tests","State":"closed","Body":"The HTML was not matching the expect correctly\r\n","Url":"https://github.com/angular/angular-cli/pull/27223","RelatedDescription":"Closed or merged PR \"test: fix failing update e2e tests\" (#27223)"},{"Id":"2171218449","IsPullRequest":true,"CreatedAt":"2024-03-06T16:31:46","Actor":"angular-robot","Number":"27218","RawContent":null,"Title":"build: update dependency terser to v5.29.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | minor | [`5.28.1` -> `5.29.1`](https://renovatebot.com/diffs/npm/terser/5.28.1/5.29.1) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | minor | [`5.28.1` -> `5.29.1`](https://renovatebot.com/diffs/npm/terser/5.28.1/5.29.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.29.1`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5291)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.29.0...v5.29.1)\n\n-   fix optimisation of all-bits mask check\n\n### [`v5.29.0`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5290)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.28.1...v5.29.0)\n\n-   Re-releases previously reverted 5.28.0\n-   Fix crash while optimizing some bitwise ops\n-   (internal) Remove needless wrapper for from_moz ([#&#8203;1499](https://togithub.com/terser/terser/issues/1499))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMTkuNCIsInVwZGF0ZWRJblZlciI6IjM3LjIxOS40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27218","RelatedDescription":"Closed or merged PR \"build: update dependency terser to v5.29.1\" (#27218)"},{"Id":"2171765350","IsPullRequest":false,"CreatedAt":"2024-03-06T15:31:11","Actor":"jr01","Number":"27225","RawContent":null,"Title":"Inline global styles","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI can't get styles in `styles.scss` to be inlined into `index.html`\r\n\r\nNot sure this is a bug, I'm not understanding, or just overlooking something very obvious...\n\n### Minimal Reproduction\n\n```sh\r\n> npm install -g @angular/cli@17.2.3\r\n...\r\n> ng new\r\n? What name would you like to use for the new workspace and initial project? MyApp\r\n? Which stylesheet format would you like to use? SCSS   [ https://sass-lang.com/documentation/syntax#scss                ]\r\n? Do you want to enable Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering)? No\r\n```\r\n\r\nAdd to `styles.scss`:\r\n```\r\nh1 {\r\n  font-variant: small-caps;\r\n}\r\n```\r\n\r\n`ng serve --configuration=\"production\"` and launch browser.\r\n\r\nInspect the HTML, notice `small-caps` isn't inlined in `<style>...</style>`.\r\n\r\n( with `ng build --configuration=\"production\"` it's similar. )\r\n\r\nFrom https://angular.io/guide/workspace-config#styles-optimization-options I understand Critters is used, but even forcing with `/* critters:include */` doesn't inline, not sure if that should work or not.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.2.3\r\nNode: 20.11.1\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.2.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27225","RelatedDescription":"Closed issue \"Inline global styles\" (#27225)"},{"Id":"2171748501","IsPullRequest":false,"CreatedAt":"2024-03-06T15:14:16","Actor":"karptonite","Number":"27224","RawContent":null,"Title":"Disabling deployUrl with dev-server breaks existing use case","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n17.2.2\r\n\r\n### Description\r\n\r\nIn #27193, setting `deployUrl` with dev-server was disabled for the `browser-esbuild` builder. This breaks a development configuration that has worked since the beginning of angular-cli. As explained [here](https://github.com/angular/angular-cli/issues/27152#issuecomment-1979033125), the rationale for this removal seems to be that no one should have been using `deployUrl` with `dev-server`, and that it was being set erroneously with the webpack server as well. I commented on this in the pull request, but now that this has been released, it seemed that a bug report made sense.\r\n\r\nOur use case, as I understand it, requires using `deployUrl` for serving with `dev-server`. If I am mistaken, I'd be happy to change our developer configuration accordingly, but I don't see how we can use `dev-server` without `deploy-url`.\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nOur use case is as follows: In production, our application contains hybrid between an older, non-Angular parts and updated Angular parts. It is served primarily from an nginx/php server we'll call `example.com`. The angular code is build and served (with `deployUrl`) from a CDN. So, for example, a user might load `https://example.com/foo`, which might be an angular page (the php server will return the angular `index.html`, which then loads the rest of the angular from the CDN, due to `deployUrl`), and then click over to `https://example.com/bar`, which might be an old non-angular page, and thus will be served directly by the php server. It all works seamlessly to the user.\r\n\r\nOur development environments mirror our production environment.  Each developer has a remote development server, e.g., `dev-devname.example.com`. Instead of deploying the fully compiled angular code to a CDN, each developer runs `ng serve` locally from localhost:4200. `deployUrl` is set to `//localhost:4200`, and we `rsync` a copy of `index.html` over to the dev server so that it can be served by our php application when appropriate. `localhost` acts exactly like the CDN in this scenario, and `deployUrl` is what makes it work. The developer loads, for example, `https://dev-devname.example.com/foo`, php serves up `index.html`, and Angular is loaded from `localhost` (our fake CDN, in this case).\r\n\r\nThis has worked well for us since Angular CLI was introduced, and, except for a small, easily remedied issue with the url for the vite server( #27152), worked well when we transitioned from webpack to the `es-build` server. I was super happy to see that `deployUrl` was being added for the `application` builder as well, and I hope that this issue can be resolved so that we can continue to keep up with the latest Angular improvements!\r\n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.2.3\r\nNode: 18.18.2\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 17.2.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.3\r\n@angular-devkit/build-angular   17.2.3\r\n@angular-devkit/core            17.2.3\r\n@angular-devkit/schematics      17.2.3\r\n@angular/cdk                    17.2.1\r\n@schematics/angular             17.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27224","RelatedDescription":"Open issue \"Disabling deployUrl with dev-server breaks existing use case\" (#27224)"},{"Id":"2171451651","IsPullRequest":true,"CreatedAt":"2024-03-06T12:59:36","Actor":"alan-agius4","Number":"27221","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.4.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.3.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/27221","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.4.0-next.0\".\" (#27221)"},{"Id":"2171384576","IsPullRequest":true,"CreatedAt":"2024-03-06T12:57:41","Actor":"alan-agius4","Number":"27220","RawContent":null,"Title":"Bump version to \"v17.3.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27220","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-rc.0\" with changelog.\" (#27220)"},{"Id":"2171315122","IsPullRequest":true,"CreatedAt":"2024-03-06T12:04:30","Actor":"alan-agius4","Number":"27219","RawContent":null,"Title":"build: update dependencies for version 17.3.0","State":"closed","Body":"The prerelease checks are failing due to incorrect dependencies\r\n\r\n```\r\nDiscovered errors when validating dependency ranges.\r\n  - @angular/pwa: Unexpected peer dependency range for \"@angular/cli\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular/ssr: Unexpected peer dependency range for \"@angular/common\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular/ssr: Unexpected peer dependency range for \"@angular/core\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular-devkit/build-angular: Unexpected peer dependency range for \"@angular/compiler-cli\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular-devkit/build-angular: Unexpected peer dependency range for \"@angular/localize\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular-devkit/build-angular: Unexpected peer dependency range for \"@angular/platform-server\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular-devkit/build-angular: Unexpected peer dependency range for \"@angular/service-worker\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @angular-devkit/build-angular: Unexpected peer dependency range for \"ng-packagr\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - @ngtools/webpack: Unexpected peer dependency range for \"@angular/compiler-cli\". Expected: ^17.0.0 || ^17.3.0-next.0\r\n  - latest-versions: Invalid dependency range for \"ng-packagr\". Expected: ^17.3.0-next.0\r\n  - latest-versions: Invalid dependency range for \"Angular\". Expected: ^17.3.0-next.0\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/27219","RelatedDescription":"Closed or merged PR \"build: update dependencies for version 17.3.0\" (#27219)"},{"Id":"2170717417","IsPullRequest":true,"CreatedAt":"2024-03-06T10:46:51","Actor":"angular-robot","Number":"27211","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `aea1218` -> `96a00d5` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `c039d02` -> `951ccf6` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1865c54` -> `b24b407` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `a0d72f6` -> `d6c4ef3` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `33b2149` -> `607c6dc` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `d64d1ac` -> `207f194` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `0f4e87d` -> `d62eafc` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `cb80af0` -> `f4f9a6f` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `ad7d131` -> `22f688f` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `25794bd` -> `43ade79` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `5765b9b` -> `6d328cc` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `4526983` -> `16fb6d4` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `9c2ab13` -> `05f3564` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0126481` -> `262c6ed` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `1289b41` -> `6619cce` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `fb065a8` -> `db4de48` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `10f1f0a` -> `fb95f46` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `3c74d72` -> `8c120fd` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `f7905ed` -> `f13d911` |\n| angular/dev-infra | action | digest | `b18378d` -> `96a8277` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yMTkuNCIsInVwZGF0ZWRJblZlciI6IjM3LjIxOS40IiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/27211","RelatedDescription":"Closed or merged PR \"build: update angular\" (#27211)"},{"Id":"2171146555","IsPullRequest":true,"CreatedAt":"2024-03-06T10:23:11","Actor":"alan-agius4","Number":"27217","RawContent":null,"Title":"docs: release notes for the v17.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/27217","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.3 release\" (#27217)"},{"Id":"2171138054","IsPullRequest":true,"CreatedAt":"2024-03-06T10:19:44","Actor":"alan-agius4","Number":"27216","RawContent":null,"Title":"Bump version to \"v17.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27216","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.3\" with changelog.\" (#27216)"},{"Id":"2171126838","IsPullRequest":true,"CreatedAt":"2024-03-06T10:11:51","Actor":"alan-agius4","Number":"27215","RawContent":null,"Title":"Revert \"ci: disable auto updates for `critters`\"","State":"open","Body":"Reverts angular/angular-cli#27214","Url":"https://github.com/angular/angular-cli/pull/27215","RelatedDescription":"Open PR \"Revert \"ci: disable auto updates for `critters`\"\" (#27215)"},{"Id":"2171074643","IsPullRequest":true,"CreatedAt":"2024-03-06T10:03:03","Actor":"alan-agius4","Number":"27214","RawContent":null,"Title":"ci: disable auto updates for `critters`","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27214","RelatedDescription":"Closed or merged PR \"ci: disable auto updates for `critters`\" (#27214)"},{"Id":"2171034239","IsPullRequest":false,"CreatedAt":"2024-03-06T09:57:47","Actor":"Svane20","Number":"27213","RawContent":null,"Title":"Angular 17 - Unused modules aren't tree shaken correctly in production build (very relevant in Web Workers)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe example below shows a Web Worker; the add function is imported using the barrel import from the Utilities module. This will work correctly in development, but the unused modules are not tree-shaken correctly in production.  \r\n\r\n![webstorm64_OsWYRFyIhq](https://github.com/angular/angular/assets/54247105/1bb6ab0c-ae4c-4b36-990e-6b04ee8bb0d0)\r\n\r\nImporting the function needed directly (`\"./utilities/src/add\"`) without using barrel import (`\"./utilities\"`) will function correctly.\r\n\r\n# Steps to reproduce\r\n1. [Clone the repository](https://github.com/Svane20/angular-17-webworker-demo)\r\n2. Download dependencies: `npm ci`\r\n3. Create a production build: `npm run build`\r\n4. Run the production build using the HTTP server: `npm run run`\r\n5. Open your [browser at port 4200](http://localhost:4200/)\r\n6. Open your console\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Svane20/angular-17-webworker-demo\n\n### Please provide the exception or error you saw\n\n```true\nUncaught Error: JIT compiler unavailable\r\n    at pe (worker-5B2POFDR.js:7:10216)\r\n    at O (worker-5B2POFDR.js:34:31703)\r\n    at worker-5B2POFDR.js:34:33185\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.2.2\r\nNode: 20.11.1\r\nPackage Manager: npm 10.4.0\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1702.2 (cli-only)\r\n@angular-devkit/core         17.2.2 (cli-only)\r\n@angular-devkit/schematics   17.2.2 (cli-only)\r\n@schematics/angular          17.2.2 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27213","RelatedDescription":"Closed issue \"Angular 17 - Unused modules aren't tree shaken correctly in production build (very relevant in Web Workers)\" (#27213)"},{"Id":"2169612466","IsPullRequest":true,"CreatedAt":"2024-03-06T08:15:16","Actor":"clydin","Number":"27208","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded relative URL modification for public path","State":"closed","Body":"Only the injected index HTML file references and component stylesheets require the modification of relative URLs with a public path when specified. Other usages are already resolved relative to their containing file location with the `application` builder.","Url":"https://github.com/angular/angular-cli/pull/27208","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded relative URL modification for public path\" (#27208)"},{"Id":"2169829020","IsPullRequest":true,"CreatedAt":"2024-03-06T08:14:36","Actor":"clydin","Number":"27210","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove Webpack helpers from application builder option normalization","State":"closed","Body":"The usage of several Webpack-centric option helper functions has now been removed from the `application` builder. This allows for more efficient processing of incoming options but also removes additional imports across builder code.","Url":"https://github.com/angular/angular-cli/pull/27210","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove Webpack helpers from application builder option normalization\" (#27210)"},{"Id":"2170821997","IsPullRequest":false,"CreatedAt":"2024-03-06T07:24:30","Actor":"mangelozzi","Number":"27212","RawContent":null,"Title":"All angular commands in WSL2 take at least 40s","State":"open","Body":"### Command\r\n\r\nversion\r\n\r\n### Description\r\n\r\n`ng version` or `ng --help` or `ng g c FooComponent` all take 40 seconds to run. Every time I run a ng command it hangs, waits for something to time out, then runs the command.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Setup WSL2 (not 1, must be WSL2) with Debian 12 (bookworm)\r\n2. Create an angular project\r\n3. Run `ng version`\r\n4. Observe the long delay.\r\n\r\n### Your Environment\r\n\r\n```text\r\nOS: WSL2, Debian 12 (bookworm)\r\n\r\nAngular CLI: 16.2.0\r\n```","Url":"https://github.com/angular/angular-cli/issues/27212","RelatedDescription":"Open issue \"All angular commands in WSL2 take at least 40s\" (#27212)"},{"Id":"2169752289","IsPullRequest":false,"CreatedAt":"2024-03-05T18:13:32","Actor":"daiscog","Number":"27209","RawContent":null,"Title":"ESBuild application builder breaks when using SCSS variables in asset URLs","State":"closed","Body":"### Command\r\n\r\nbuild - when using `@angular-devkit/build-angular:application` builder\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n`@angular-devkit/build-angular:browser` builder\r\n\r\n### Description\r\n\r\nWhen an application's main `styles.scss` imports code that uses a variable in the path for its assets - e.g.,: `background-image: url('#{$images-path}/background.png');` - then the build falis with an unresolvable asset path.\r\n\r\nMarked as a regression because this does not cause an error when using the legacy `@angular-devkit/build-angular:browser` builder.  (See demo project, which provides `architect` targets for both builders.) \r\n\r\nUse case: The application imports its styles from a 3rd party SCSS library installed as a dependency, and that library provides SCSS variables for assets, with a default value of a relative path internal to itself.\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nhttps://github.com/daiscog/esbuild-scss-asset-issues/tree/main\r\n\r\n### Exception or Error\r\n\r\n```text\r\n❯ npm run build                                                                \r\n\r\n> esbuild-scss-asset-issues@0.0.0 build\r\n> ng build\r\n\r\n⠙ Building...\r\n✘ [ERROR] Could not resolve \"../../assets/images/background.png\" [plugin angular-css-resource]\r\n\r\n    src/styles.scss:3:24:\r\n      3 │   background-image: url(\"../../assets/images/background.png\");\r\n        ╵                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  Preprocessor stylesheets may not show the exact file location of the error.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.2.2\r\nNode: 18.19.1\r\nPackage Manager: npm 10.2.4\r\nOS: darwin x64\r\n\r\nAngular: 17.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.2\r\n@angular-devkit/build-angular   17.2.2\r\n@angular-devkit/core            17.2.2\r\n@angular-devkit/schematics      17.2.2\r\n@angular/cli                    17.2.2\r\n@schematics/angular             17.2.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27209","RelatedDescription":"Closed issue \"ESBuild application builder breaks when using SCSS variables in asset URLs\" (#27209)"},{"Id":"2169000214","IsPullRequest":true,"CreatedAt":"2024-03-05T14:59:08","Actor":"alan-agius4","Number":"27204","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27204","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#27204)"},{"Id":"2168802430","IsPullRequest":true,"CreatedAt":"2024-03-05T14:58:06","Actor":"alan-agius4","Number":"27202","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove vite deprecation warning","State":"closed","Body":"`optimizeDeps.disabled` has been deprecated in favor of `optimizeDeps.noDiscovery` to `true` and `optimizeDeps.include` to `undefined`\r\n\r\n```\r\n(!) Experimental ssr.optimizeDeps.disabled and deps pre-bundling during build were removed in Vite 5.1.\r\n    To disable the deps optimizer, set ssr.optimizeDeps.noDiscovery to true and ssr.optimizeDeps.include as undefined or empty.\r\n    Please remove ssr.optimizeDeps.disabled from your config.\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/27202","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove vite deprecation warning\" (#27202)"},{"Id":"2168884148","IsPullRequest":false,"CreatedAt":"2024-03-05T14:39:33","Actor":"harvey-sg","Number":"27203","RawContent":null,"Title":"Missing CSP nonce in inline style tags when CSP header is set (bug or working as expected)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIf the ngCspNonce is set in the index.html  and the CSP header is set, \r\n`<app-root ngCspNonce=\"SNE7IIyFelMUtjxMHNiFgg==\"></app-root>`\r\nContent-Security-Policy: `style-src 'self' 'nonce-SNE7IIyFelMUtjxMHNiFgg==' https://fonts.googleapis.com`, \r\nthen the page loads correctly without CSP warnings, but the inline style tags miss the nonce value `<style nonce>`.\r\n\r\nIf the ngCspNonce is set in the index.html and the CSP header `Content-Security-Policy` is NOT set,\r\nthen angular adds the nonce in all the inline style tags `<style nonce=\"SNE7IIyFelMUtjxMHNiFgg==\">`.\r\n\r\nTo reproduce it, \r\n`ng new my-app`\r\nadd ngCspNonce in index.html\r\nto set the CSP header in ng serve\r\nadd in angular.json\r\n```\r\n          \"options\": {\r\n            \"headers\": {\r\n              \"Content-Security-Policy\": \"style-src 'self' 'nonce-SNE7IIyFelMUtjxMHNiFgg==' https://fonts.googleapis.com; script-src 'self';\"\r\n            }\r\n          },\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.2.2\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: darwin x64\r\n\r\nAngular: 17.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1702.2\r\n@angular-devkit/build-angular   17.2.2\r\n@angular-devkit/core            17.2.2\r\n@angular-devkit/schematics      17.2.2\r\n@angular/cdk                    17.2.1\r\n@angular/cli                    17.2.2\r\n@angular/material               17.2.1\r\n@schematics/angular             17.2.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27203","RelatedDescription":"Closed issue \"Missing CSP nonce in inline style tags when CSP header is set (bug or working as expected)\" (#27203)"},{"Id":"2169169421","IsPullRequest":true,"CreatedAt":"2024-03-05T12:56:09","Actor":"alan-agius4","Number":"27205","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): add warnings for unsupported vite options","State":"open","Body":"\r\n\r\nThis commit adds warnings when using unsupported dev-server options with vite.\r\n","Url":"https://github.com/angular/angular-cli/pull/27205","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): add warnings for unsupported vite options\" (#27205)"},{"Id":"2167514753","IsPullRequest":true,"CreatedAt":"2024-03-05T07:52:53","Actor":"clydin","Number":"27200","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove extra exist check when purging stale build caches","State":"closed","Body":"When purging stale build cache entries, the `readdir` call will fail if the cache base path does not exist. This allows for a single check and the removal of the previous separate `existSync` call. Additionally, a repeat join call has also been removed during the stale directory check.","Url":"https://github.com/angular/angular-cli/pull/27200","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove extra exist check when purging stale build caches\" (#27200)"},{"Id":"2168119038","IsPullRequest":false,"CreatedAt":"2024-03-05T01:54:48","Actor":"stephenwithav","Number":"27201","RawContent":null,"Title":"Feature: \"ng generate component\" needs a flag to generate routes for standalone components","State":"open","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\n  Running `ng generate component users --standalone` generates `users/users.component.{css,html,spec.ts,ts}` files.\r\n\r\nFor imported or lazy-loaded routes, we can create a `users/users.routes.ts` that looks like this:\r\n\r\n```typescript\r\nimport { Routes } from '@angular/router';\r\nimport { UserListComponent, UserDetailsComponent, CreateUserComponent, EditUserComponent } from './users/users.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'list', component: UserListComponent },\r\n    { path: 'details/:id', component: UserDetailsComponent },\r\n    { path: 'create', component: CreateUserComponent },\r\n    { path: 'edit', component: EditUserComponent },\r\n];\r\n```\r\n\r\n...and import it with `loadChildren` in `app.routes.ts`, but `ng` could simplify the process.\r\n\r\n### Describe the solution you'd like\r\n\r\n`ng generate component users --standalone --routes` could scaffold the `users/users.routes.ts` file for us, letting us just fill it in as we go.\r\n\r\n```typescript\r\nimport { Routes } from '@angular/router';\r\nimport * from './users.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: '', component: UsersComponent },\r\n];\r\n```\r\n\r\nAn alternative is `ng generate component users --standalone --routes=crud`, which generates components and route mappings for each CRUD component.  `ng generate component users --standalone --routes=cr` would only generates Create and Read components and mappings.\r\n\r\n### Describe alternatives you've considered\r\n\r\nyasnippets with emacs, but `ng` incorporating this functionality would make life easier.","Url":"https://github.com/angular/angular-cli/issues/27201","RelatedDescription":"Open issue \"Feature: \"ng generate component\" needs a flag to generate routes for standalone components\" (#27201)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2172804576","IsPullRequest":false,"CreatedAt":"2024-03-07T02:19:21","Actor":"mattiLeBlanc","Number":"28697","RawContent":null,"Title":"youtube-player: initial image to improve load performance is not loading and we she broken video image","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nhttps://github.com/angular/components/pull/28207\n\n### Description\n\n<img width=\"1726\" alt=\"image\" src=\"https://github.com/angular/components/assets/5285035/c5aae0e5-ea40-4544-877a-cc10994b429c\">\r\n\r\nIn the feature requests (https://github.com/angular/components/pull/28207) an image with a loading button was put in front of the youtube iframe to improve loading speed.\r\nHowever, we have more and more video's  displaying a loading error on that background image.\r\nThe youtube video reference is XKdBeRE5E9A and when you embed the iframe directly, it shows a correct image.\r\nI am not sure why this image is loaded https://i.ytimg.com/vi_webp/XKdBeRE5E9A/sddefault.webp 404 (Not Found) since it doesn't seem to exist.\n\n### Reproduction\n\nStackBlitz link: \r\nAdd angular youtube player:\r\n```\r\n<youtube-player videoId=\"XKdBeRE5E9A\" ></youtube-player>\r\n```\n\n### Expected Behavior\n\nIf image can not be retrieved, do not show this broken video image but maybe just load the youtube iframe?\n\n### Actual Behavior\n\nWhen failing to get the cover image, it shows a broken video image with play button. This is not pretty behaviour.\n\n### Environment\n\n- Angular: 17.2\r\n- CDK/Material: 17.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs latest\r\n","Url":"https://github.com/angular/components/issues/28697","RelatedDescription":"Open issue \"youtube-player: initial image to improve load performance is not loading and we she broken video image\" (#28697)"},{"Id":"2172349053","IsPullRequest":true,"CreatedAt":"2024-03-06T20:18:52","Actor":"amysorto","Number":"28696","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.4.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.3.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/28696","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.4.0-next.0\".\" (#28696)"},{"Id":"2172341262","IsPullRequest":true,"CreatedAt":"2024-03-06T20:13:57","Actor":"amysorto","Number":"28695","RawContent":null,"Title":"Bump version to \"v17.3.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28695","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.0-rc.0\" with changelog.\" (#28695)"},{"Id":"2172318358","IsPullRequest":false,"CreatedAt":"2024-03-06T19:59:30","Actor":"wildcardalice","Number":"28694","RawContent":null,"Title":"bug(MatSelect): MatSelect with MatFormField does not read out options to VoiceOver","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using a screenreader to interact with a select-based form field, the options are not always read out. I am able to reproduce this with Apple's VoiceOver, but have not tried with other screen readers.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Navigate to https://v5.material.angular.io/components/select/examples \r\n2. Scroll down to the \"Select with form field features\" example\r\n3. Interact with the dropdown while using a screen reader\r\n\n\n### Expected Behavior\n\nThe screenreader should read out all options, or provide a way to read all options\n\n### Actual Behavior\n\nI am unable to get the screen reader to read out dog, cat, cow, or fox. The only option I can read out is the first option (\"In text -- not selected\") by using ctrl+opt+shift+down, but continued navigation does not read additional options.\n\n### Environment\n\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28694","RelatedDescription":"Open issue \"bug(MatSelect): MatSelect with MatFormField does not read out options to VoiceOver\" (#28694)"},{"Id":"2172306648","IsPullRequest":false,"CreatedAt":"2024-03-06T19:51:33","Actor":"mr-zgaya","Number":"28693","RawContent":null,"Title":"Google cloud style sidebar","State":"open","Body":"### Feature Description\r\nI haven't found any component that is like google cloud sidenav menu. Is there any plan about this.\r\n\r\n\r\n![Uploading Screenshot 2024-03-07 at 12.51.04 AM.png…]()\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28693","RelatedDescription":"Open issue \"Google cloud style sidebar\" (#28693)"},{"Id":"2172190482","IsPullRequest":true,"CreatedAt":"2024-03-06T18:49:07","Actor":"amysorto","Number":"28692","RawContent":null,"Title":"docs: release notes for the v17.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28692","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.2.2 release\" (#28692)"},{"Id":"2172186328","IsPullRequest":true,"CreatedAt":"2024-03-06T18:44:26","Actor":"amysorto","Number":"28691","RawContent":null,"Title":"Bump version to \"v17.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28691","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.2.2\" with changelog.\" (#28691)"},{"Id":"2169967523","IsPullRequest":true,"CreatedAt":"2024-03-06T17:50:55","Actor":"anwalkers","Number":"28687","RawContent":null,"Title":"fix(material/form-field): mat-label disappears when density < -1","State":"closed","Body":"Fixes a bug in the Angular Material `form-field` where the floating\r\nlabel is not presented in densities more compact than -1\r\n\r\nFixes https://github.com/angular/components/issues/26579","Url":"https://github.com/angular/components/pull/28687","RelatedDescription":"Closed or merged PR \"fix(material/form-field): mat-label disappears when density < -1\" (#28687)"},{"Id":"2171327613","IsPullRequest":false,"CreatedAt":"2024-03-06T17:37:36","Actor":"Akxe","Number":"28688","RawContent":null,"Title":"bug(CORE): HasErrorState interface has incorrect types","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `HasErrorState` interface used in `mixinErrorState` do require `_parentFormGroup` and `_parentForm` to be non-null. But the `_ErrorStateTracker` that is using it does not care.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-ovhttn?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Build\r\n2. See error\r\n\n\n### Expected Behavior\n\nThe `HasErrorState` interface should mimic type requirements from `_ErrorStateTracker` and therefore work.\n\n### Actual Behavior\n\nError that `_parentFormGroup` and `_parentForm` cannot be null.\n\n### Environment\n\nAngular CLI: 17.2.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1702.1\r\n@angular-devkit/core         17.2.1\r\n@angular-devkit/schematics   17.2.0\r\n@angular/cdk                 17.2.0\r\n@angular/cli                 17.2.0\r\n@angular/material            17.2.0\r\n@schematics/angular          17.0.3\r\nrxjs                         7.8.1\r\ntypescript                   5.3.3\r\nzone.js                      0.14.3","Url":"https://github.com/angular/components/issues/28688","RelatedDescription":"Closed issue \"bug(CORE): HasErrorState interface has incorrect types\" (#28688)"},{"Id":"2171495556","IsPullRequest":true,"CreatedAt":"2024-03-06T17:37:35","Actor":"crisbeto","Number":"28689","RawContent":null,"Title":"fix(material/core): mark fields on HasErrorState as nullable","State":"closed","Body":"Updates a couple of the fields on `HasErrorState` to be nullable to align them with the `_ErrorStateTracker`.\r\n\r\nFixes #28688.","Url":"https://github.com/angular/components/pull/28689","RelatedDescription":"Closed or merged PR \"fix(material/core): mark fields on HasErrorState as nullable\" (#28689)"},{"Id":"2171634735","IsPullRequest":false,"CreatedAt":"2024-03-06T14:24:27","Actor":"undsoft","Number":"28690","RawContent":null,"Title":"feat(MatSelectHarness): Allow harnesses to be extended","State":"open","Body":"### Feature Description\n\nIt would be helpful if `private` fields were replaced with `protected` fields in `MatSelectHarness` and other harnesses.\r\n\r\nI understand that you generally don't want to make things `protected` if they are not extended in the codebase, but I think it would make life easier for the consumers.\n\n### Use Case\n\nWe have html code for tooltips in some of our select options. It gets parsed when calling `getOptions[0].getText()`.\r\nPreviously I could just extend the harness and override `_optionClass` to get a custom behaviour for `getText()`. After version 17 this is no longer possible and I need to reimplement more things.","Url":"https://github.com/angular/components/issues/28690","RelatedDescription":"Open issue \"feat(MatSelectHarness): Allow harnesses to be extended\" (#28690)"},{"Id":"2167478336","IsPullRequest":false,"CreatedAt":"2024-03-06T12:58:12","Actor":"olawalemayor","Number":"28680","RawContent":null,"Title":"bug(Angular material datepicker): Intializing date range input with formControl throws error","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter initializing the date range input with a formcontrol. the values of startDate and endDate assume the form control value but throws error on the console: \r\n![date-range-bug](https://github.com/angular/components/assets/40109521/058e902e-8f2c-4dea-b3b0-91277aa4331d)\r\n\r\nDetails:\r\n    \"@angular/animations\": \"^17.2.3\",\r\n    \"@angular/cdk\": \"^17.2.1\",\r\n    \"@angular/common\": \"^17.2.3\",\r\n    \"@angular/compiler\": \"^17.2.3\",\r\n    \"@angular/core\": \"^17.2.3\",\r\n    \"@angular/forms\": \"^17.2.3\",\r\n    \"@angular/material\": \"^17.2.1\",\r\n    \"@angular/material-moment-adapter\": \"^17.2.1\",\r\n\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-uxpbnj?file=src%2Findex.html\r\nSteps to reproduce:\r\n1.  Start the application\r\n2. Examine the console\r\n3. Also try selecting date\r\n\n\n### Expected Behavior\n\nIt should work normally, no errors in console and being able to select start and end date\n\n### Actual Behavior\n\nNot able to select start and end date plus error in console\r\n![date-range-bug](https://github.com/angular/components/assets/40109521/612652cf-c59b-4492-a776-1355747b9be4)\r\n\n\n### Environment\n\n- Angular: 17.2.3\r\n- CDK/Material: 17.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28680","RelatedDescription":"Closed issue \"bug(Angular material datepicker): Intializing date range input with formControl throws error\" (#28680)"},{"Id":"2169956135","IsPullRequest":false,"CreatedAt":"2024-03-06T12:42:20","Actor":"robmv","Number":"28686","RawContent":null,"Title":"bug(cdk-dialog): Focus trap is defeated if the user navigates to the browser chrome","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen a dialog is open, the component activates a focus trap. This works fine if the user navigates by keyboard, and if the user try to go outside the dialog because the backdrop capture mouse clicks. But if the user goes to the browser chrome, like the URL bar, and then navigates with the keyboard to the page content, the focus is transferred to elements behind the dialog, making the dialog ineffective.\r\n\r\nThis is a bug in the dialog implementation because I display another kind of dialogs, using a custom CDK's Overlay and ConfigurableFocusTrapFactory and it can capture this kind of navigation, so this bug doesn't look like part of the focus trap implementation.\r\n\r\nThis is what I do that works fine on my custom dialog based on CDK's Overlay:\r\n\r\n```TypeScript\r\nconst focusTrap = this.focusTrapFactory.create(containerElem);\r\nfocusTrap.focusInitialElementWhenReady();\r\noverlayRef.detachments().subscribe(() => focusTrap.destroy());\r\n```\r\n\r\nNote: Maybe start implementing the dialog component on top of the dialog element could help avoid having to use focus traps, when browser compatibility requirements allows for it.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Visit https://material.angular.io/cdk/dialog/overview or https://material.angular.io/components/dialog/overview\r\n2. Open the first dialog example you find on the page.\r\n3. Click on the browser URL bar.\r\n4. Navigate to the page content using the Tab key.\r\n5. The focus is finally transferred to the web site top bar below the dialog's backdrop.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe focus should be transferred to the dialog elements without traversing the elements behind the dialog.\r\n\r\n### Actual Behavior\r\n\r\nThe focus is transferred the elements behind the dialog and not to the dialog elements.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material: 17.2.1\r\n- Browser(s): Firefox and Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Tested on Windows and Linux (Fedora)\r\n","Url":"https://github.com/angular/components/issues/28686","RelatedDescription":"Closed issue \"bug(cdk-dialog): Focus trap is defeated if the user navigates to the browser chrome\" (#28686)"},{"Id":"2168323208","IsPullRequest":false,"CreatedAt":"2024-03-05T16:13:38","Actor":"Sonupro1997","Number":"28685","RawContent":null,"Title":"Datepicker design breaks Angular 13 ","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n11\r\n\r\n### Description\r\n\r\nI am using Angular Material 13.3.9 with a template-driven form that includes both a datetime picker (**@angular-material-components/datetime-picker\r\n)** and a simple material date picker. Initially, these date pickers look fine, but their design breaks when I select either of them.\r\n![image](https://github.com/angular/components/assets/32660232/291293d6-b21c-40e5-be84-981159cf0913)\r\n\r\n![image](https://github.com/angular/components/assets/32660232/619345fb-7cbf-4f77-aa6a-f15b03f1a321)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Open mat datepicker and select any date\r\n2. Now Open Datetime Picker (@angular-material-components/datetime-picker) and select any date\r\n3. Go back and open mat datepicker\r\n\r\n\r\n### Expected Behavior\r\n\r\nBoth the datepicker should work.\r\n\r\n### Actual Behavior\r\n\r\nI am using Angular Material 13.3.9 with a template-driven form that includes both a datetime picker and a simple material date picker. Initially, these date pickers look fine, but their design breaks when I select either of them.\r\n\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28685","RelatedDescription":"Closed issue \"Datepicker design breaks Angular 13 \" (#28685)"},{"Id":"2168295902","IsPullRequest":false,"CreatedAt":"2024-03-05T16:00:51","Actor":"Ashokpalla","Number":"28684","RawContent":null,"Title":"After Upgrading Angular 9 to 17 Material is not working","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n9.1\n\n### Description\n\nI followed the Angular documentation for upgrading and i done the same, even i migrated the material also but still the material is not working\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nUI should work as Previous\n\n### Actual Behavior\n\nPresent UI is not looking good\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28684","RelatedDescription":"Closed issue \"After Upgrading Angular 9 to 17 Material is not working\" (#28684)"},{"Id":"2167880606","IsPullRequest":true,"CreatedAt":"2024-03-04T22:14:34","Actor":"mmalerba","Number":"28683","RawContent":null,"Title":"refactor(material/sidenav): Remove use of focusInitialElementWhenReady","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28683","RelatedDescription":"Open PR \"refactor(material/sidenav): Remove use of focusInitialElementWhenReady\" (#28683)"},{"Id":"2167865765","IsPullRequest":true,"CreatedAt":"2024-03-04T22:05:01","Actor":"mmalerba","Number":"28682","RawContent":null,"Title":"refactor(material/sidenav): Remove use of zone onStable to schedule drawer validation","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28682","RelatedDescription":"Open PR \"refactor(material/sidenav): Remove use of zone onStable to schedule drawer validation\" (#28682)"},{"Id":"2167829988","IsPullRequest":true,"CreatedAt":"2024-03-04T21:46:41","Actor":"mmalerba","Number":"28681","RawContent":null,"Title":"refactor(cdk/drag-drop): Remove use of zone onStable","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28681","RelatedDescription":"Open PR \"refactor(cdk/drag-drop): Remove use of zone onStable\" (#28681)"},{"Id":"2164339369","IsPullRequest":false,"CreatedAt":"2024-03-04T18:27:34","Actor":"ettubrute47","Number":"28672","RawContent":null,"Title":"bug(angular/material): mat-slider matSliderThumb is stuck as initially focused when rendered from a MatDialog","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing a mat-slider inside a MatDialog when the dialog is opened, the thumb is focused and you see the semi-transparent large disk around the thumb, and it doesn't go away until I click somewhere else. \r\n\r\nUnsure if this was working in previous version.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-vqttyy?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. Click button, this will popup a dialog\r\n2. Notice the slider in the dialog is set to focus\r\n\n\n### Expected Behavior\n\nThe slider is not focused when the dialog pops up, and is only focused when the user interacts with it.\n\n### Actual Behavior\n\nThe slider is initially focused and remains focused until the user clicks interacts somewhere else.\n\n### Environment\n\n- Angular: 17.2.1\r\n- CDK/Material: 17.2.1\r\n- Browser(s): Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28672","RelatedDescription":"Closed issue \"bug(angular/material): mat-slider matSliderThumb is stuck as initially focused when rendered from a MatDialog\" (#28672)"},{"Id":"2166603740","IsPullRequest":false,"CreatedAt":"2024-03-04T18:21:15","Actor":"BogdanDvlpr","Number":"28678","RawContent":null,"Title":"bug(mat-chip-list): Issue with mat-chip-selected class applied incorrectly","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nmat-chip-list and mat-chip selected doesn't work properly.\r\n\r\nThe issue is that the mat-chip-selected class is applied always on the last chip even though the selected value is not set\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/u5y9ka-tc38sc\r\n\r\n### Expected Behavior\r\n\r\nThe mat-chip-selected class should be applied only when mat-chip selected is true\r\n\r\n### Actual Behavior\r\n\r\nThe mat-chip-selected class is applied when the mat-chip selected value is false\r\n\r\n### Environment\r\n\r\n- Angular: v14.2.0\r\n- CDK/Material: 14.2.7 \r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/28678","RelatedDescription":"Closed issue \"bug(mat-chip-list): Issue with mat-chip-selected class applied incorrectly\" (#28678)"},{"Id":"2164707819","IsPullRequest":true,"CreatedAt":"2024-03-04T18:11:43","Actor":"crisbeto","Number":"28673","RawContent":null,"Title":"refactor(material/core): deprecate TypeScript mixin functions","State":"closed","Body":"Marks the TypeScript mixin functions and their related interfaces as deprecated since they are difficult to use and not really necessary now that we have input transforms.","Url":"https://github.com/angular/components/pull/28673","RelatedDescription":"Closed or merged PR \"refactor(material/core): deprecate TypeScript mixin functions\" (#28673)"},{"Id":"2162944572","IsPullRequest":true,"CreatedAt":"2024-03-04T18:11:16","Actor":"crisbeto","Number":"28669","RawContent":null,"Title":"fix(material/datepicker): always move caret to the end of the start input on backspace","State":"closed","Body":"When the user presses backspace on an empty end input of a range picker, we move focus to the start input and assume that the caret will be at the end. It appears that in some cases the browser decides to move it to the beginning instead so these changes reuse the logic from the left/right arrow handling to explicitly move it to the end on backspace as well.\r\n\r\nFixes #28665.","Url":"https://github.com/angular/components/pull/28669","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): always move caret to the end of the start input on backspace\" (#28669)"},{"Id":"2165261133","IsPullRequest":true,"CreatedAt":"2024-03-04T18:04:18","Actor":"crisbeto","Number":"28675","RawContent":null,"Title":"fix(material/schematics): don't interrupt ng add if adding the animations module fails","State":"closed","Body":"In some custom scenarios adding the animations module can fail and the code that does it is outside of our control. These changes add some error handling so the rest of the schematic isn't interrupted.\r\n\r\nFixes #28640.","Url":"https://github.com/angular/components/pull/28675","RelatedDescription":"Closed or merged PR \"fix(material/schematics): don't interrupt ng add if adding the animations module fails\" (#28675)"},{"Id":"2167268198","IsPullRequest":false,"CreatedAt":"2024-03-04T16:36:23","Actor":"amysorto","Number":"28679","RawContent":null,"Title":"bug(mat-slide-toggle): disableRipple not causing any visual changes","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n It looks like `disableRipple` was used to prevent the ripple animation (ripple based on where in the touch target you clicked) in the legacy components, but now that doesn't seem to show up anymore. So it seems that setting `disableRipple` isn't causing any difference now.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/aakbph?file=src%2Fexample%2Fslide-toggle-overview-example.html\n\n### Expected Behavior\n\nSetting `disableRipple` to true would cause a visual difference upon clicking the slide toggle handle.\n\n### Actual Behavior\n\nNo viusal change\n\n### Environment\n\n- Angular: 17.2.0-rc.0\r\n- CDK/Material: 17.2.0-rc.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):  macOS\r\n","Url":"https://github.com/angular/components/issues/28679","RelatedDescription":"Open issue \"bug(mat-slide-toggle): disableRipple not causing any visual changes\" (#28679)"},{"Id":"2163048098","IsPullRequest":false,"CreatedAt":"2024-03-04T16:27:23","Actor":"richardsengers","Number":"28670","RawContent":null,"Title":"bug(AutoComplete): small hidden overlay underneath input field which block links","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you focus the autocomplete field and you don't have any results, for example when you only want to show results after x amount of characters, a hidden overlay stays underneath the input field, and because of this hidden overlay, you are unable to click on links in mat-hints or in mat-errors\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/syalrr?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\r\nSteps to reproduce:\r\n1. Focus the field\r\n2. Try to click the link underneath\r\n\n\n### Expected Behavior\n\nIt would be nice to be able to select whatever is underneath the mat-autocomplete field\n\n### Actual Behavior\n\nUnable to select anything underneath mat-autocomplete\n\n### Environment\n\n- Angular:\r\n- CDK/Material: 17.2.0\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28670","RelatedDescription":"Closed issue \"bug(AutoComplete): small hidden overlay underneath input field which block links\" (#28670)"},{"Id":"2166346272","IsPullRequest":true,"CreatedAt":"2024-03-04T16:27:22","Actor":"crisbeto","Number":"28677","RawContent":null,"Title":"fix(material/autocomplete): prevent hidden overlay from blocking clicks","State":"closed","Body":"The autocomplete hides its dropdown if there are no options, but it is still clickable. These changes add `pointer-events: none` to prevent it from blocking interactions.\r\n\r\nFixes #28670.","Url":"https://github.com/angular/components/pull/28677","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): prevent hidden overlay from blocking clicks\" (#28677)"},{"Id":"2166033990","IsPullRequest":true,"CreatedAt":"2024-03-04T16:18:27","Actor":"crisbeto","Number":"28676","RawContent":null,"Title":"Palette followup fixes","State":"closed","Body":"Fixes a couple of hardcoded places in the tokens that were missed in #28664.","Url":"https://github.com/angular/components/pull/28676","RelatedDescription":"Closed or merged PR \"Palette followup fixes\" (#28676)"},{"Id":"2164910625","IsPullRequest":true,"CreatedAt":"2024-03-02T18:02:23","Actor":"mmalerba","Number":"28674","RawContent":null,"Title":"refactor(cdk-experimental/popover-edit): Remove use of zone onStable","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28674","RelatedDescription":"Open PR \"refactor(cdk-experimental/popover-edit): Remove use of zone onStable\" (#28674)"},{"Id":"2163710495","IsPullRequest":true,"CreatedAt":"2024-03-01T16:06:52","Actor":"voi99","Number":"28671","RawContent":null,"Title":"docs(material-experimental/theming): fix customizing typography","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28671","RelatedDescription":"Open PR \"docs(material-experimental/theming): fix customizing typography\" (#28671)"},{"Id":"2162312948","IsPullRequest":true,"CreatedAt":"2024-03-01T00:20:49","Actor":"mmalerba","Number":"28668","RawContent":null,"Title":"refactor(material/tooltip): Remove use of zone onStable for overlay positioning","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28668","RelatedDescription":"Open PR \"refactor(material/tooltip): Remove use of zone onStable for overlay positioning\" (#28668)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-07T03:30:01.9816243Z","RunDurationInMilliseconds":1279}